package org.eclipse.fordiac.ide.globalconstantseditor.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.fordiac.ide.globalconstantseditor.services.GlobalConstantsGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalGlobalConstantsParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "END_FUNCTION_BLOCK", "END_CONFIGURATION", "END_TRANSITION", "FUNCTION_BLOCK", "LDATE_AND_TIME", "CONFIGURATION", "DATE_AND_TIME", "END_INTERFACE", "END_NAMESPACE", "END_FUNCTION", "END_RESOURCE", "INITIAL_STEP", "LTIME_OF_DAY", "VAR_EXTERNAL", "END_PROGRAM", "TIME_OF_DAY", "END_ACTION", "END_METHOD", "END_REPEAT", "END_STRUCT", "IMPLEMENTS", "NON_RETAIN", "READ_WRITE", "TRANSITION", "VAR_ACCESS", "VAR_CONFIG", "VAR_GLOBAL", "VAR_IN_OUT", "VAR_OUTPUT", "END_CLASS", "END_WHILE", "INTERFACE", "NAMESPACE", "PROTECTED", "READ_ONLY", "VAR_INPUT", "ABSTRACT", "CONSTANT", "CONTINUE", "END_CASE", "END_STEP", "END_TYPE", "FUNCTION", "INTERNAL", "INTERVAL", "OVERRIDE", "PRIORITY", "RESOURCE", "VAR_TEMP", "END_FOR", "END_VAR", "EXTENDS", "INTERAL", "OVERLAP", "PRIVATE", "PROGRAM", "WSTRING", "ACTION", "END_IF", "METHOD", "PUBLIC", "REF_TO", "REPEAT", "RETAIN", "RETURN", "SINGLE", "STRING", "STRUCT", "ARRAY", "CLASS", "DWORD", "ELSIF", "FALSE", "FINAL", "LDATE", "LREAL", "LTIME", "LWORD", "SUPER", "UDINT", "ULINT", "UNTIL", "USING", "USINT", "WCHAR", "WHILE", "BOOL", "BYTE", "CASE", "CHAR", "DATE", "DINT", "ELSE", "EXIT", "FROM", "LINT", "LTOD", "NULL", "REAL", "SINT", "STEP", "TASK", "THEN", "THIS", "TIME", "TRUE", "TYPE", "UINT", "WITH", "WORD", "AND", "FOR", "INT", "LDT", "MOD", "NOT", "REF", "TOD", "VAR", "XOR", "B", "D_1", "L", "W", "X", "AsteriskAsterisk", "FullStopFullStop", "ColonEqualsSign", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "AT", "BY", "DO", "DT", "IF", "LD", "LT", "OF", "ON", "OR", "TO", "NumberSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "D", "T", "LeftSquareBracket", "RightSquareBracket", "RULE_HEX_DIGIT", "RULE_NON_DECIMAL", "RULE_INT", "RULE_DECIMAL", "RULE_TIME_PART", "RULE_TIME_VALUE", "RULE_TIME_DAYS", "RULE_TIME_HOURS", "RULE_TIME_MINUTES", "RULE_TIME_SECONDS", "RULE_TIME_MILLIS", "RULE_TIME_MICROS", "RULE_TIME_NANOS", "RULE_ID", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LWORD=81;
    public static final int LessThanSignGreaterThanSign=133;
    public static final int FUNCTION_BLOCK=7;
    public static final int EqualsSignGreaterThanSign=134;
    public static final int VAR=122;
    public static final int END_IF=62;
    public static final int ULINT=84;
    public static final int END_CASE=43;
    public static final int LessThanSign=159;
    public static final int RULE_TIME_HOURS=173;
    public static final int LeftParenthesis=149;
    public static final int INTERFACE=35;
    public static final int VAR_CONFIG=29;
    public static final int BYTE=91;
    public static final int INTERNAL=47;
    public static final int ELSE=96;
    public static final int REF_TO=65;
    public static final int TYPE=110;
    public static final int IF=140;
    public static final int LINT=99;
    public static final int GreaterThanSign=161;
    public static final int WORD=113;
    public static final int DATE_AND_TIME=10;
    public static final int RULE_ID=179;
    public static final int CONFIGURATION=9;
    public static final int TOD=121;
    public static final int DINT=95;
    public static final int FUNCTION=46;
    public static final int UDINT=83;
    public static final int RULE_TIME_NANOS=178;
    public static final int CASE=92;
    public static final int GreaterThanSignEqualsSign=135;
    public static final int AT=136;
    public static final int PlusSign=152;
    public static final int RULE_INT=168;
    public static final int END_FOR=53;
    public static final int RULE_TIME_DAYS=172;
    public static final int RULE_ML_COMMENT=181;
    public static final int PUBLIC=64;
    public static final int THEN=106;
    public static final int XOR=123;
    public static final int LeftSquareBracket=164;
    public static final int PROGRAM=59;
    public static final int EXIT=97;
    public static final int TIME_OF_DAY=19;
    public static final int B=124;
    public static final int LDATE_AND_TIME=8;
    public static final int REPEAT=66;
    public static final int D=162;
    public static final int CHAR=93;
    public static final int L=126;
    public static final int LTIME=80;
    public static final int Comma=153;
    public static final int HyphenMinus=154;
    public static final int T=163;
    public static final int W=127;
    public static final int BY=137;
    public static final int X=128;
    public static final int ELSIF=75;
    public static final int END_REPEAT=22;
    public static final int LessThanSignEqualsSign=132;
    public static final int Solidus=156;
    public static final int PROTECTED=37;
    public static final int VAR_INPUT=39;
    public static final int RESOURCE=51;
    public static final int INTERVAL=48;
    public static final int FullStop=155;
    public static final int RULE_TIME_SECONDS=175;
    public static final int VAR_TEMP=52;
    public static final int INTERAL=56;
    public static final int CONSTANT=41;
    public static final int RULE_TIME_VALUE=171;
    public static final int PRIVATE=58;
    public static final int TRANSITION=27;
    public static final int CONTINUE=42;
    public static final int Semicolon=158;
    public static final int REF=120;
    public static final int LD=141;
    public static final int VAR_OUTPUT=32;
    public static final int STRING=70;
    public static final int RULE_HEX_DIGIT=166;
    public static final int TO=146;
    public static final int END_TYPE=45;
    public static final int UINT=111;
    public static final int INITIAL_STEP=15;
    public static final int LTOD=100;
    public static final int NAMESPACE=36;
    public static final int EXTENDS=55;
    public static final int SINGLE=69;
    public static final int ARRAY=72;
    public static final int LT=142;
    public static final int PRIORITY=50;
    public static final int CLASS=73;
    public static final int FROM=98;
    public static final int DO=138;
    public static final int WSTRING=60;
    public static final int READ_WRITE=26;
    public static final int END_CONFIGURATION=5;
    public static final int DT=139;
    public static final int END_VAR=54;
    public static final int END_STEP=44;
    public static final int END_STRUCT=23;
    public static final int RULE_TIME_PART=170;
    public static final int FullStopFullStop=130;
    public static final int OVERLAP=57;
    public static final int Ampersand=148;
    public static final int END_NAMESPACE=12;
    public static final int END_ACTION=20;
    public static final int RightSquareBracket=165;
    public static final int TASK=105;
    public static final int NULL=101;
    public static final int USINT=87;
    public static final int DWORD=74;
    public static final int FOR=115;
    public static final int RightParenthesis=150;
    public static final int TRUE=109;
    public static final int FINAL=77;
    public static final int ColonEqualsSign=131;
    public static final int END_FUNCTION=13;
    public static final int END_WHILE=34;
    public static final int USING=86;
    public static final int RULE_DECIMAL=169;
    public static final int DATE=94;
    public static final int NOT=119;
    public static final int LDATE=78;
    public static final int AND=114;
    public static final int NumberSign=147;
    public static final int REAL=102;
    public static final int AsteriskAsterisk=129;
    public static final int METHOD=63;
    public static final int THIS=107;
    public static final int SINT=103;
    public static final int NON_RETAIN=25;
    public static final int STRUCT=71;
    public static final int LTIME_OF_DAY=16;
    public static final int END_TRANSITION=6;
    public static final int LREAL=79;
    public static final int VAR_GLOBAL=30;
    public static final int WCHAR=88;
    public static final int END_FUNCTION_BLOCK=4;
    public static final int VAR_EXTERNAL=17;
    public static final int RULE_STRING=180;
    public static final int VAR_ACCESS=28;
    public static final int ABSTRACT=40;
    public static final int READ_ONLY=38;
    public static final int INT=116;
    public static final int RULE_SL_COMMENT=182;
    public static final int RETURN=68;
    public static final int EqualsSign=160;
    public static final int OF=143;
    public static final int END_METHOD=21;
    public static final int END_RESOURCE=14;
    public static final int Colon=157;
    public static final int EOF=-1;
    public static final int LDT=117;
    public static final int Asterisk=151;
    public static final int RULE_TIME_MILLIS=176;
    public static final int ON=144;
    public static final int SUPER=82;
    public static final int MOD=118;
    public static final int OR=145;
    public static final int RETAIN=67;
    public static final int RULE_WS=183;
    public static final int VAR_IN_OUT=31;
    public static final int END_INTERFACE=11;
    public static final int IMPLEMENTS=24;
    public static final int STEP=104;
    public static final int TIME=108;
    public static final int RULE_ANY_OTHER=184;
    public static final int UNTIL=85;
    public static final int WITH=112;
    public static final int RULE_TIME_MINUTES=174;
    public static final int END_CLASS=33;
    public static final int OVERRIDE=49;
    public static final int ACTION=61;
    public static final int BOOL=90;
    public static final int D_1=125;
    public static final int FALSE=76;
    public static final int WHILE=89;
    public static final int RULE_TIME_MICROS=177;
    public static final int END_PROGRAM=18;
    public static final int RULE_NON_DECIMAL=167;

    // delegates
    // delegators


        public InternalGlobalConstantsParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalGlobalConstantsParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalGlobalConstantsParser.tokenNames; }
    public String getGrammarFileName() { return "InternalGlobalConstantsParser.g"; }


    	private GlobalConstantsGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("NumberSign", "'#'");
    		tokenNameToValue.put("Ampersand", "'&'");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("D", "'D'");
    		tokenNameToValue.put("T", "'T'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("B", "'%B'");
    		tokenNameToValue.put("D_1", "'%D'");
    		tokenNameToValue.put("L", "'%L'");
    		tokenNameToValue.put("W", "'%W'");
    		tokenNameToValue.put("X", "'%X'");
    		tokenNameToValue.put("AsteriskAsterisk", "'**'");
    		tokenNameToValue.put("FullStopFullStop", "'..'");
    		tokenNameToValue.put("ColonEqualsSign", "':='");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AT", "'AT'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("DO", "'DO'");
    		tokenNameToValue.put("DT", "'DT'");
    		tokenNameToValue.put("IF", "'IF'");
    		tokenNameToValue.put("LD", "'LD'");
    		tokenNameToValue.put("LT", "'LT'");
    		tokenNameToValue.put("OF", "'OF'");
    		tokenNameToValue.put("ON", "'ON'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("TO", "'TO'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("INT", "'INT'");
    		tokenNameToValue.put("LDT", "'LDT'");
    		tokenNameToValue.put("MOD", "'MOD'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("REF", "'REF'");
    		tokenNameToValue.put("TOD", "'TOD'");
    		tokenNameToValue.put("VAR", "'VAR'");
    		tokenNameToValue.put("XOR", "'XOR'");
    		tokenNameToValue.put("BOOL", "'BOOL'");
    		tokenNameToValue.put("BYTE", "'BYTE'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("CHAR", "'CHAR'");
    		tokenNameToValue.put("DATE", "'DATE'");
    		tokenNameToValue.put("DINT", "'DINT'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("EXIT", "'EXIT'");
    		tokenNameToValue.put("FROM", "'FROM'");
    		tokenNameToValue.put("LINT", "'LINT'");
    		tokenNameToValue.put("LTOD", "'LTOD'");
    		tokenNameToValue.put("NULL", "'NULL'");
    		tokenNameToValue.put("REAL", "'REAL'");
    		tokenNameToValue.put("SINT", "'SINT'");
    		tokenNameToValue.put("STEP", "'STEP'");
    		tokenNameToValue.put("TASK", "'TASK'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("THIS", "'THIS'");
    		tokenNameToValue.put("TIME", "'TIME'");
    		tokenNameToValue.put("TRUE", "'TRUE'");
    		tokenNameToValue.put("TYPE", "'TYPE'");
    		tokenNameToValue.put("UINT", "'UINT'");
    		tokenNameToValue.put("WITH", "'WITH'");
    		tokenNameToValue.put("WORD", "'WORD'");
    		tokenNameToValue.put("ARRAY", "'ARRAY'");
    		tokenNameToValue.put("CLASS", "'CLASS'");
    		tokenNameToValue.put("DWORD", "'DWORD'");
    		tokenNameToValue.put("ELSIF", "'ELSIF'");
    		tokenNameToValue.put("FALSE", "'FALSE'");
    		tokenNameToValue.put("FINAL", "'FINAL'");
    		tokenNameToValue.put("LDATE", "'LDATE'");
    		tokenNameToValue.put("LREAL", "'LREAL'");
    		tokenNameToValue.put("LTIME", "'LTIME'");
    		tokenNameToValue.put("LWORD", "'LWORD'");
    		tokenNameToValue.put("SUPER", "'SUPER'");
    		tokenNameToValue.put("UDINT", "'UDINT'");
    		tokenNameToValue.put("ULINT", "'ULINT'");
    		tokenNameToValue.put("UNTIL", "'UNTIL'");
    		tokenNameToValue.put("USING", "'USING'");
    		tokenNameToValue.put("USINT", "'USINT'");
    		tokenNameToValue.put("WCHAR", "'WCHAR'");
    		tokenNameToValue.put("WHILE", "'WHILE'");
    		tokenNameToValue.put("ACTION", "'ACTION'");
    		tokenNameToValue.put("END_IF", "'END_IF'");
    		tokenNameToValue.put("METHOD", "'METHOD'");
    		tokenNameToValue.put("PUBLIC", "'PUBLIC'");
    		tokenNameToValue.put("REF_TO", "'REF_TO'");
    		tokenNameToValue.put("REPEAT", "'REPEAT'");
    		tokenNameToValue.put("RETAIN", "'RETAIN'");
    		tokenNameToValue.put("RETURN", "'RETURN'");
    		tokenNameToValue.put("SINGLE", "'SINGLE'");
    		tokenNameToValue.put("STRING", "'STRING'");
    		tokenNameToValue.put("STRUCT", "'STRUCT'");
    		tokenNameToValue.put("END_FOR", "'END_FOR'");
    		tokenNameToValue.put("END_VAR", "'END_VAR'");
    		tokenNameToValue.put("EXTENDS", "'EXTENDS'");
    		tokenNameToValue.put("INTERAL", "'INTERAL'");
    		tokenNameToValue.put("OVERLAP", "'OVERLAP'");
    		tokenNameToValue.put("PRIVATE", "'PRIVATE'");
    		tokenNameToValue.put("PROGRAM", "'PROGRAM'");
    		tokenNameToValue.put("WSTRING", "'WSTRING'");
    		tokenNameToValue.put("ABSTRACT", "'ABSTRACT'");
    		tokenNameToValue.put("CONSTANT", "'CONSTANT'");
    		tokenNameToValue.put("CONTINUE", "'CONTINUE'");
    		tokenNameToValue.put("END_CASE", "'END_CASE'");
    		tokenNameToValue.put("END_STEP", "'END_STEP'");
    		tokenNameToValue.put("END_TYPE", "'END_TYPE'");
    		tokenNameToValue.put("FUNCTION", "'FUNCTION'");
    		tokenNameToValue.put("INTERNAL", "'INTERNAL'");
    		tokenNameToValue.put("INTERVAL", "'INTERVAL'");
    		tokenNameToValue.put("OVERRIDE", "'OVERRIDE'");
    		tokenNameToValue.put("PRIORITY", "'PRIORITY'");
    		tokenNameToValue.put("RESOURCE", "'RESOURCE'");
    		tokenNameToValue.put("VAR_TEMP", "'VAR_TEMP'");
    		tokenNameToValue.put("END_CLASS", "'END_CLASS'");
    		tokenNameToValue.put("END_WHILE", "'END_WHILE'");
    		tokenNameToValue.put("INTERFACE", "'INTERFACE'");
    		tokenNameToValue.put("NAMESPACE", "'NAMESPACE'");
    		tokenNameToValue.put("PROTECTED", "'PROTECTED'");
    		tokenNameToValue.put("READ_ONLY", "'READ_ONLY'");
    		tokenNameToValue.put("VAR_INPUT", "'VAR_INPUT'");
    		tokenNameToValue.put("END_ACTION", "'END_ACTION'");
    		tokenNameToValue.put("END_METHOD", "'END_METHOD'");
    		tokenNameToValue.put("END_REPEAT", "'END_REPEAT'");
    		tokenNameToValue.put("END_STRUCT", "'END_STRUCT'");
    		tokenNameToValue.put("IMPLEMENTS", "'IMPLEMENTS'");
    		tokenNameToValue.put("NON_RETAIN", "'NON_RETAIN'");
    		tokenNameToValue.put("READ_WRITE", "'READ_WRITE'");
    		tokenNameToValue.put("TRANSITION", "'TRANSITION'");
    		tokenNameToValue.put("VAR_ACCESS", "'VAR_ACCESS'");
    		tokenNameToValue.put("VAR_CONFIG", "'VAR_CONFIG'");
    		tokenNameToValue.put("VAR_GLOBAL", "'VAR_GLOBAL'");
    		tokenNameToValue.put("VAR_IN_OUT", "'VAR_IN_OUT'");
    		tokenNameToValue.put("VAR_OUTPUT", "'VAR_OUTPUT'");
    		tokenNameToValue.put("END_PROGRAM", "'END_PROGRAM'");
    		tokenNameToValue.put("TIME_OF_DAY", "'TIME_OF_DAY'");
    		tokenNameToValue.put("END_FUNCTION", "'END_FUNCTION'");
    		tokenNameToValue.put("END_RESOURCE", "'END_RESOURCE'");
    		tokenNameToValue.put("INITIAL_STEP", "'INITIAL_STEP'");
    		tokenNameToValue.put("LTIME_OF_DAY", "'LTIME_OF_DAY'");
    		tokenNameToValue.put("VAR_EXTERNAL", "'VAR_EXTERNAL'");
    		tokenNameToValue.put("CONFIGURATION", "'CONFIGURATION'");
    		tokenNameToValue.put("DATE_AND_TIME", "'DATE_AND_TIME'");
    		tokenNameToValue.put("END_INTERFACE", "'END_INTERFACE'");
    		tokenNameToValue.put("END_NAMESPACE", "'END_NAMESPACE'");
    		tokenNameToValue.put("END_TRANSITION", "'END_TRANSITION'");
    		tokenNameToValue.put("FUNCTION_BLOCK", "'FUNCTION_BLOCK'");
    		tokenNameToValue.put("LDATE_AND_TIME", "'LDATE_AND_TIME'");
    		tokenNameToValue.put("END_CONFIGURATION", "'END_CONFIGURATION'");
    		tokenNameToValue.put("END_FUNCTION_BLOCK", "'END_FUNCTION_BLOCK'");
    	}

    	public void setGrammarAccess(GlobalConstantsGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleSTGlobalConstsSource"
    // InternalGlobalConstantsParser.g:218:1: entryRuleSTGlobalConstsSource : ruleSTGlobalConstsSource EOF ;
    public final void entryRuleSTGlobalConstsSource() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:219:1: ( ruleSTGlobalConstsSource EOF )
            // InternalGlobalConstantsParser.g:220:1: ruleSTGlobalConstsSource EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTGlobalConstsSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTGlobalConstsSource();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTGlobalConstsSourceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTGlobalConstsSource"


    // $ANTLR start "ruleSTGlobalConstsSource"
    // InternalGlobalConstantsParser.g:227:1: ruleSTGlobalConstsSource : ( ( rule__STGlobalConstsSource__Group__0 ) ) ;
    public final void ruleSTGlobalConstsSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:231:2: ( ( ( rule__STGlobalConstsSource__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:232:2: ( ( rule__STGlobalConstsSource__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:232:2: ( ( rule__STGlobalConstsSource__Group__0 ) )
            // InternalGlobalConstantsParser.g:233:3: ( rule__STGlobalConstsSource__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTGlobalConstsSourceAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:234:3: ( rule__STGlobalConstsSource__Group__0 )
            // InternalGlobalConstantsParser.g:234:4: rule__STGlobalConstsSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STGlobalConstsSource__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTGlobalConstsSourceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTGlobalConstsSource"


    // $ANTLR start "entryRuleSTVarGlobalDeclarationBlock"
    // InternalGlobalConstantsParser.g:243:1: entryRuleSTVarGlobalDeclarationBlock : ruleSTVarGlobalDeclarationBlock EOF ;
    public final void entryRuleSTVarGlobalDeclarationBlock() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:244:1: ( ruleSTVarGlobalDeclarationBlock EOF )
            // InternalGlobalConstantsParser.g:245:1: ruleSTVarGlobalDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarGlobalDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarGlobalDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarGlobalDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarGlobalDeclarationBlock"


    // $ANTLR start "ruleSTVarGlobalDeclarationBlock"
    // InternalGlobalConstantsParser.g:252:1: ruleSTVarGlobalDeclarationBlock : ( ( rule__STVarGlobalDeclarationBlock__Group__0 ) ) ;
    public final void ruleSTVarGlobalDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:256:2: ( ( ( rule__STVarGlobalDeclarationBlock__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:257:2: ( ( rule__STVarGlobalDeclarationBlock__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:257:2: ( ( rule__STVarGlobalDeclarationBlock__Group__0 ) )
            // InternalGlobalConstantsParser.g:258:3: ( rule__STVarGlobalDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:259:3: ( rule__STVarGlobalDeclarationBlock__Group__0 )
            // InternalGlobalConstantsParser.g:259:4: rule__STVarGlobalDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarGlobalDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarGlobalDeclarationBlock"


    // $ANTLR start "entryRuleSTExpressionSource"
    // InternalGlobalConstantsParser.g:268:1: entryRuleSTExpressionSource : ruleSTExpressionSource EOF ;
    public final void entryRuleSTExpressionSource() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:269:1: ( ruleSTExpressionSource EOF )
            // InternalGlobalConstantsParser.g:270:1: ruleSTExpressionSource EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpressionSource();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpressionSource"


    // $ANTLR start "ruleSTExpressionSource"
    // InternalGlobalConstantsParser.g:277:1: ruleSTExpressionSource : ( ( rule__STExpressionSource__Group__0 ) ) ;
    public final void ruleSTExpressionSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:281:2: ( ( ( rule__STExpressionSource__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:282:2: ( ( rule__STExpressionSource__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:282:2: ( ( rule__STExpressionSource__Group__0 ) )
            // InternalGlobalConstantsParser.g:283:3: ( rule__STExpressionSource__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:284:3: ( rule__STExpressionSource__Group__0 )
            // InternalGlobalConstantsParser.g:284:4: rule__STExpressionSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STExpressionSource__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpressionSource"


    // $ANTLR start "entryRuleSTInitializerExpressionSource"
    // InternalGlobalConstantsParser.g:293:1: entryRuleSTInitializerExpressionSource : ruleSTInitializerExpressionSource EOF ;
    public final void entryRuleSTInitializerExpressionSource() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:294:1: ( ruleSTInitializerExpressionSource EOF )
            // InternalGlobalConstantsParser.g:295:1: ruleSTInitializerExpressionSource EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTInitializerExpressionSource();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTInitializerExpressionSource"


    // $ANTLR start "ruleSTInitializerExpressionSource"
    // InternalGlobalConstantsParser.g:302:1: ruleSTInitializerExpressionSource : ( ( rule__STInitializerExpressionSource__Group__0 ) ) ;
    public final void ruleSTInitializerExpressionSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:306:2: ( ( ( rule__STInitializerExpressionSource__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:307:2: ( ( rule__STInitializerExpressionSource__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:307:2: ( ( rule__STInitializerExpressionSource__Group__0 ) )
            // InternalGlobalConstantsParser.g:308:3: ( rule__STInitializerExpressionSource__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:309:3: ( rule__STInitializerExpressionSource__Group__0 )
            // InternalGlobalConstantsParser.g:309:4: rule__STInitializerExpressionSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STInitializerExpressionSource__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTInitializerExpressionSource"


    // $ANTLR start "entryRuleSTVarDeclaration"
    // InternalGlobalConstantsParser.g:318:1: entryRuleSTVarDeclaration : ruleSTVarDeclaration EOF ;
    public final void entryRuleSTVarDeclaration() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:319:1: ( ruleSTVarDeclaration EOF )
            // InternalGlobalConstantsParser.g:320:1: ruleSTVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarDeclaration"


    // $ANTLR start "ruleSTVarDeclaration"
    // InternalGlobalConstantsParser.g:327:1: ruleSTVarDeclaration : ( ( rule__STVarDeclaration__Group__0 ) ) ;
    public final void ruleSTVarDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:331:2: ( ( ( rule__STVarDeclaration__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:332:2: ( ( rule__STVarDeclaration__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:332:2: ( ( rule__STVarDeclaration__Group__0 ) )
            // InternalGlobalConstantsParser.g:333:3: ( rule__STVarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:334:3: ( rule__STVarDeclaration__Group__0 )
            // InternalGlobalConstantsParser.g:334:4: rule__STVarDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarDeclaration"


    // $ANTLR start "entryRuleSTTypeDeclaration"
    // InternalGlobalConstantsParser.g:343:1: entryRuleSTTypeDeclaration : ruleSTTypeDeclaration EOF ;
    public final void entryRuleSTTypeDeclaration() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:344:1: ( ruleSTTypeDeclaration EOF )
            // InternalGlobalConstantsParser.g:345:1: ruleSTTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTypeDeclaration"


    // $ANTLR start "ruleSTTypeDeclaration"
    // InternalGlobalConstantsParser.g:352:1: ruleSTTypeDeclaration : ( ( rule__STTypeDeclaration__Group__0 ) ) ;
    public final void ruleSTTypeDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:356:2: ( ( ( rule__STTypeDeclaration__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:357:2: ( ( rule__STTypeDeclaration__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:357:2: ( ( rule__STTypeDeclaration__Group__0 ) )
            // InternalGlobalConstantsParser.g:358:3: ( rule__STTypeDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:359:3: ( rule__STTypeDeclaration__Group__0 )
            // InternalGlobalConstantsParser.g:359:4: rule__STTypeDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTypeDeclaration"


    // $ANTLR start "entryRuleSTInitializerExpression"
    // InternalGlobalConstantsParser.g:368:1: entryRuleSTInitializerExpression : ruleSTInitializerExpression EOF ;
    public final void entryRuleSTInitializerExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:369:1: ( ruleSTInitializerExpression EOF )
            // InternalGlobalConstantsParser.g:370:1: ruleSTInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTInitializerExpression"


    // $ANTLR start "ruleSTInitializerExpression"
    // InternalGlobalConstantsParser.g:377:1: ruleSTInitializerExpression : ( ( rule__STInitializerExpression__Alternatives ) ) ;
    public final void ruleSTInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:381:2: ( ( ( rule__STInitializerExpression__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:382:2: ( ( rule__STInitializerExpression__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:382:2: ( ( rule__STInitializerExpression__Alternatives ) )
            // InternalGlobalConstantsParser.g:383:3: ( rule__STInitializerExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:384:3: ( rule__STInitializerExpression__Alternatives )
            // InternalGlobalConstantsParser.g:384:4: rule__STInitializerExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STInitializerExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTInitializerExpression"


    // $ANTLR start "entryRuleSTElementaryInitializerExpression"
    // InternalGlobalConstantsParser.g:393:1: entryRuleSTElementaryInitializerExpression : ruleSTElementaryInitializerExpression EOF ;
    public final void entryRuleSTElementaryInitializerExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:394:1: ( ruleSTElementaryInitializerExpression EOF )
            // InternalGlobalConstantsParser.g:395:1: ruleSTElementaryInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElementaryInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElementaryInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElementaryInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElementaryInitializerExpression"


    // $ANTLR start "ruleSTElementaryInitializerExpression"
    // InternalGlobalConstantsParser.g:402:1: ruleSTElementaryInitializerExpression : ( ( rule__STElementaryInitializerExpression__ValueAssignment ) ) ;
    public final void ruleSTElementaryInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:406:2: ( ( ( rule__STElementaryInitializerExpression__ValueAssignment ) ) )
            // InternalGlobalConstantsParser.g:407:2: ( ( rule__STElementaryInitializerExpression__ValueAssignment ) )
            {
            // InternalGlobalConstantsParser.g:407:2: ( ( rule__STElementaryInitializerExpression__ValueAssignment ) )
            // InternalGlobalConstantsParser.g:408:3: ( rule__STElementaryInitializerExpression__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueAssignment()); 
            }
            // InternalGlobalConstantsParser.g:409:3: ( rule__STElementaryInitializerExpression__ValueAssignment )
            // InternalGlobalConstantsParser.g:409:4: rule__STElementaryInitializerExpression__ValueAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STElementaryInitializerExpression__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElementaryInitializerExpression"


    // $ANTLR start "entryRuleSTArrayInitializerExpression"
    // InternalGlobalConstantsParser.g:418:1: entryRuleSTArrayInitializerExpression : ruleSTArrayInitializerExpression EOF ;
    public final void entryRuleSTArrayInitializerExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:419:1: ( ruleSTArrayInitializerExpression EOF )
            // InternalGlobalConstantsParser.g:420:1: ruleSTArrayInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTArrayInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTArrayInitializerExpression"


    // $ANTLR start "ruleSTArrayInitializerExpression"
    // InternalGlobalConstantsParser.g:427:1: ruleSTArrayInitializerExpression : ( ( rule__STArrayInitializerExpression__Group__0 ) ) ;
    public final void ruleSTArrayInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:431:2: ( ( ( rule__STArrayInitializerExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:432:2: ( ( rule__STArrayInitializerExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:432:2: ( ( rule__STArrayInitializerExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:433:3: ( rule__STArrayInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:434:3: ( rule__STArrayInitializerExpression__Group__0 )
            // InternalGlobalConstantsParser.g:434:4: rule__STArrayInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTArrayInitializerExpression"


    // $ANTLR start "entryRuleSTArrayInitElement"
    // InternalGlobalConstantsParser.g:443:1: entryRuleSTArrayInitElement : ruleSTArrayInitElement EOF ;
    public final void entryRuleSTArrayInitElement() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:444:1: ( ruleSTArrayInitElement EOF )
            // InternalGlobalConstantsParser.g:445:1: ruleSTArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTArrayInitElement"


    // $ANTLR start "ruleSTArrayInitElement"
    // InternalGlobalConstantsParser.g:452:1: ruleSTArrayInitElement : ( ( rule__STArrayInitElement__Group__0 ) ) ;
    public final void ruleSTArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:456:2: ( ( ( rule__STArrayInitElement__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:457:2: ( ( rule__STArrayInitElement__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:457:2: ( ( rule__STArrayInitElement__Group__0 ) )
            // InternalGlobalConstantsParser.g:458:3: ( rule__STArrayInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:459:3: ( rule__STArrayInitElement__Group__0 )
            // InternalGlobalConstantsParser.g:459:4: rule__STArrayInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTArrayInitElement"


    // $ANTLR start "entryRuleSTStructInitializerExpression"
    // InternalGlobalConstantsParser.g:468:1: entryRuleSTStructInitializerExpression : ruleSTStructInitializerExpression EOF ;
    public final void entryRuleSTStructInitializerExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:469:1: ( ruleSTStructInitializerExpression EOF )
            // InternalGlobalConstantsParser.g:470:1: ruleSTStructInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStructInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStructInitializerExpression"


    // $ANTLR start "ruleSTStructInitializerExpression"
    // InternalGlobalConstantsParser.g:477:1: ruleSTStructInitializerExpression : ( ( rule__STStructInitializerExpression__Group__0 ) ) ;
    public final void ruleSTStructInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:481:2: ( ( ( rule__STStructInitializerExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:482:2: ( ( rule__STStructInitializerExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:482:2: ( ( rule__STStructInitializerExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:483:3: ( rule__STStructInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:484:3: ( rule__STStructInitializerExpression__Group__0 )
            // InternalGlobalConstantsParser.g:484:4: rule__STStructInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStructInitializerExpression"


    // $ANTLR start "entryRuleSTStructInitElement"
    // InternalGlobalConstantsParser.g:493:1: entryRuleSTStructInitElement : ruleSTStructInitElement EOF ;
    public final void entryRuleSTStructInitElement() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:494:1: ( ruleSTStructInitElement EOF )
            // InternalGlobalConstantsParser.g:495:1: ruleSTStructInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStructInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStructInitElement"


    // $ANTLR start "ruleSTStructInitElement"
    // InternalGlobalConstantsParser.g:502:1: ruleSTStructInitElement : ( ( rule__STStructInitElement__Group__0 ) ) ;
    public final void ruleSTStructInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:506:2: ( ( ( rule__STStructInitElement__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:507:2: ( ( rule__STStructInitElement__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:507:2: ( ( rule__STStructInitElement__Group__0 ) )
            // InternalGlobalConstantsParser.g:508:3: ( rule__STStructInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:509:3: ( rule__STStructInitElement__Group__0 )
            // InternalGlobalConstantsParser.g:509:4: rule__STStructInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStructInitElement"


    // $ANTLR start "entryRuleSTStatement"
    // InternalGlobalConstantsParser.g:518:1: entryRuleSTStatement : ruleSTStatement EOF ;
    public final void entryRuleSTStatement() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:519:1: ( ruleSTStatement EOF )
            // InternalGlobalConstantsParser.g:520:1: ruleSTStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStatement"


    // $ANTLR start "ruleSTStatement"
    // InternalGlobalConstantsParser.g:527:1: ruleSTStatement : ( ( rule__STStatement__Alternatives ) ) ;
    public final void ruleSTStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:531:2: ( ( ( rule__STStatement__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:532:2: ( ( rule__STStatement__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:532:2: ( ( rule__STStatement__Alternatives ) )
            // InternalGlobalConstantsParser.g:533:3: ( rule__STStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:534:3: ( rule__STStatement__Alternatives )
            // InternalGlobalConstantsParser.g:534:4: rule__STStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStatement"


    // $ANTLR start "entryRuleSTAssignmentStatement"
    // InternalGlobalConstantsParser.g:543:1: entryRuleSTAssignmentStatement : ruleSTAssignmentStatement EOF ;
    public final void entryRuleSTAssignmentStatement() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:544:1: ( ruleSTAssignmentStatement EOF )
            // InternalGlobalConstantsParser.g:545:1: ruleSTAssignmentStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAssignmentStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAssignmentStatement"


    // $ANTLR start "ruleSTAssignmentStatement"
    // InternalGlobalConstantsParser.g:552:1: ruleSTAssignmentStatement : ( ( rule__STAssignmentStatement__Group__0 ) ) ;
    public final void ruleSTAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:556:2: ( ( ( rule__STAssignmentStatement__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:557:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:557:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            // InternalGlobalConstantsParser.g:558:3: ( rule__STAssignmentStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:559:3: ( rule__STAssignmentStatement__Group__0 )
            // InternalGlobalConstantsParser.g:559:4: rule__STAssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAssignmentStatement"


    // $ANTLR start "entryRuleSTCallStatement"
    // InternalGlobalConstantsParser.g:568:1: entryRuleSTCallStatement : ruleSTCallStatement EOF ;
    public final void entryRuleSTCallStatement() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:569:1: ( ruleSTCallStatement EOF )
            // InternalGlobalConstantsParser.g:570:1: ruleSTCallStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallStatement"


    // $ANTLR start "ruleSTCallStatement"
    // InternalGlobalConstantsParser.g:577:1: ruleSTCallStatement : ( ( rule__STCallStatement__CallAssignment ) ) ;
    public final void ruleSTCallStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:581:2: ( ( ( rule__STCallStatement__CallAssignment ) ) )
            // InternalGlobalConstantsParser.g:582:2: ( ( rule__STCallStatement__CallAssignment ) )
            {
            // InternalGlobalConstantsParser.g:582:2: ( ( rule__STCallStatement__CallAssignment ) )
            // InternalGlobalConstantsParser.g:583:3: ( rule__STCallStatement__CallAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallStatementAccess().getCallAssignment()); 
            }
            // InternalGlobalConstantsParser.g:584:3: ( rule__STCallStatement__CallAssignment )
            // InternalGlobalConstantsParser.g:584:4: rule__STCallStatement__CallAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STCallStatement__CallAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallStatementAccess().getCallAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallStatement"


    // $ANTLR start "entryRuleSTCallArgument"
    // InternalGlobalConstantsParser.g:593:1: entryRuleSTCallArgument : ruleSTCallArgument EOF ;
    public final void entryRuleSTCallArgument() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:594:1: ( ruleSTCallArgument EOF )
            // InternalGlobalConstantsParser.g:595:1: ruleSTCallArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallArgument"


    // $ANTLR start "ruleSTCallArgument"
    // InternalGlobalConstantsParser.g:602:1: ruleSTCallArgument : ( ( rule__STCallArgument__Alternatives ) ) ;
    public final void ruleSTCallArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:606:2: ( ( ( rule__STCallArgument__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:607:2: ( ( rule__STCallArgument__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:607:2: ( ( rule__STCallArgument__Alternatives ) )
            // InternalGlobalConstantsParser.g:608:3: ( rule__STCallArgument__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallArgumentAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:609:3: ( rule__STCallArgument__Alternatives )
            // InternalGlobalConstantsParser.g:609:4: rule__STCallArgument__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STCallArgument__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallArgumentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallArgument"


    // $ANTLR start "entryRuleSTCallUnnamedArgument"
    // InternalGlobalConstantsParser.g:618:1: entryRuleSTCallUnnamedArgument : ruleSTCallUnnamedArgument EOF ;
    public final void entryRuleSTCallUnnamedArgument() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:619:1: ( ruleSTCallUnnamedArgument EOF )
            // InternalGlobalConstantsParser.g:620:1: ruleSTCallUnnamedArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallUnnamedArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallUnnamedArgument"


    // $ANTLR start "ruleSTCallUnnamedArgument"
    // InternalGlobalConstantsParser.g:627:1: ruleSTCallUnnamedArgument : ( ( rule__STCallUnnamedArgument__ArgumentAssignment ) ) ;
    public final void ruleSTCallUnnamedArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:631:2: ( ( ( rule__STCallUnnamedArgument__ArgumentAssignment ) ) )
            // InternalGlobalConstantsParser.g:632:2: ( ( rule__STCallUnnamedArgument__ArgumentAssignment ) )
            {
            // InternalGlobalConstantsParser.g:632:2: ( ( rule__STCallUnnamedArgument__ArgumentAssignment ) )
            // InternalGlobalConstantsParser.g:633:3: ( rule__STCallUnnamedArgument__ArgumentAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentAccess().getArgumentAssignment()); 
            }
            // InternalGlobalConstantsParser.g:634:3: ( rule__STCallUnnamedArgument__ArgumentAssignment )
            // InternalGlobalConstantsParser.g:634:4: rule__STCallUnnamedArgument__ArgumentAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STCallUnnamedArgument__ArgumentAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentAccess().getArgumentAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallUnnamedArgument"


    // $ANTLR start "entryRuleSTCallNamedInputArgument"
    // InternalGlobalConstantsParser.g:643:1: entryRuleSTCallNamedInputArgument : ruleSTCallNamedInputArgument EOF ;
    public final void entryRuleSTCallNamedInputArgument() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:644:1: ( ruleSTCallNamedInputArgument EOF )
            // InternalGlobalConstantsParser.g:645:1: ruleSTCallNamedInputArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallNamedInputArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallNamedInputArgument"


    // $ANTLR start "ruleSTCallNamedInputArgument"
    // InternalGlobalConstantsParser.g:652:1: ruleSTCallNamedInputArgument : ( ( rule__STCallNamedInputArgument__Group__0 ) ) ;
    public final void ruleSTCallNamedInputArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:656:2: ( ( ( rule__STCallNamedInputArgument__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:657:2: ( ( rule__STCallNamedInputArgument__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:657:2: ( ( rule__STCallNamedInputArgument__Group__0 ) )
            // InternalGlobalConstantsParser.g:658:3: ( rule__STCallNamedInputArgument__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:659:3: ( rule__STCallNamedInputArgument__Group__0 )
            // InternalGlobalConstantsParser.g:659:4: rule__STCallNamedInputArgument__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallNamedInputArgument"


    // $ANTLR start "entryRuleSTCallNamedOutputArgument"
    // InternalGlobalConstantsParser.g:668:1: entryRuleSTCallNamedOutputArgument : ruleSTCallNamedOutputArgument EOF ;
    public final void entryRuleSTCallNamedOutputArgument() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:669:1: ( ruleSTCallNamedOutputArgument EOF )
            // InternalGlobalConstantsParser.g:670:1: ruleSTCallNamedOutputArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallNamedOutputArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallNamedOutputArgument"


    // $ANTLR start "ruleSTCallNamedOutputArgument"
    // InternalGlobalConstantsParser.g:677:1: ruleSTCallNamedOutputArgument : ( ( rule__STCallNamedOutputArgument__Group__0 ) ) ;
    public final void ruleSTCallNamedOutputArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:681:2: ( ( ( rule__STCallNamedOutputArgument__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:682:2: ( ( rule__STCallNamedOutputArgument__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:682:2: ( ( rule__STCallNamedOutputArgument__Group__0 ) )
            // InternalGlobalConstantsParser.g:683:3: ( rule__STCallNamedOutputArgument__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:684:3: ( rule__STCallNamedOutputArgument__Group__0 )
            // InternalGlobalConstantsParser.g:684:4: rule__STCallNamedOutputArgument__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallNamedOutputArgument"


    // $ANTLR start "entryRuleSTIfStatement"
    // InternalGlobalConstantsParser.g:693:1: entryRuleSTIfStatement : ruleSTIfStatement EOF ;
    public final void entryRuleSTIfStatement() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:694:1: ( ruleSTIfStatement EOF )
            // InternalGlobalConstantsParser.g:695:1: ruleSTIfStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTIfStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTIfStatement"


    // $ANTLR start "ruleSTIfStatement"
    // InternalGlobalConstantsParser.g:702:1: ruleSTIfStatement : ( ( rule__STIfStatement__Group__0 ) ) ;
    public final void ruleSTIfStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:706:2: ( ( ( rule__STIfStatement__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:707:2: ( ( rule__STIfStatement__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:707:2: ( ( rule__STIfStatement__Group__0 ) )
            // InternalGlobalConstantsParser.g:708:3: ( rule__STIfStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:709:3: ( rule__STIfStatement__Group__0 )
            // InternalGlobalConstantsParser.g:709:4: rule__STIfStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTIfStatement"


    // $ANTLR start "entryRuleSTElseIfPart"
    // InternalGlobalConstantsParser.g:718:1: entryRuleSTElseIfPart : ruleSTElseIfPart EOF ;
    public final void entryRuleSTElseIfPart() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:719:1: ( ruleSTElseIfPart EOF )
            // InternalGlobalConstantsParser.g:720:1: ruleSTElseIfPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElseIfPart"


    // $ANTLR start "ruleSTElseIfPart"
    // InternalGlobalConstantsParser.g:727:1: ruleSTElseIfPart : ( ( rule__STElseIfPart__Group__0 ) ) ;
    public final void ruleSTElseIfPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:731:2: ( ( ( rule__STElseIfPart__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:732:2: ( ( rule__STElseIfPart__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:732:2: ( ( rule__STElseIfPart__Group__0 ) )
            // InternalGlobalConstantsParser.g:733:3: ( rule__STElseIfPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:734:3: ( rule__STElseIfPart__Group__0 )
            // InternalGlobalConstantsParser.g:734:4: rule__STElseIfPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElseIfPart"


    // $ANTLR start "entryRuleSTCaseStatement"
    // InternalGlobalConstantsParser.g:743:1: entryRuleSTCaseStatement : ruleSTCaseStatement EOF ;
    public final void entryRuleSTCaseStatement() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:744:1: ( ruleSTCaseStatement EOF )
            // InternalGlobalConstantsParser.g:745:1: ruleSTCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseStatement"


    // $ANTLR start "ruleSTCaseStatement"
    // InternalGlobalConstantsParser.g:752:1: ruleSTCaseStatement : ( ( rule__STCaseStatement__Group__0 ) ) ;
    public final void ruleSTCaseStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:756:2: ( ( ( rule__STCaseStatement__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:757:2: ( ( rule__STCaseStatement__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:757:2: ( ( rule__STCaseStatement__Group__0 ) )
            // InternalGlobalConstantsParser.g:758:3: ( rule__STCaseStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:759:3: ( rule__STCaseStatement__Group__0 )
            // InternalGlobalConstantsParser.g:759:4: rule__STCaseStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseStatement"


    // $ANTLR start "entryRuleSTCaseCases"
    // InternalGlobalConstantsParser.g:768:1: entryRuleSTCaseCases : ruleSTCaseCases EOF ;
    public final void entryRuleSTCaseCases() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:769:1: ( ruleSTCaseCases EOF )
            // InternalGlobalConstantsParser.g:770:1: ruleSTCaseCases EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseCases"


    // $ANTLR start "ruleSTCaseCases"
    // InternalGlobalConstantsParser.g:777:1: ruleSTCaseCases : ( ( rule__STCaseCases__Group__0 ) ) ;
    public final void ruleSTCaseCases() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:781:2: ( ( ( rule__STCaseCases__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:782:2: ( ( rule__STCaseCases__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:782:2: ( ( rule__STCaseCases__Group__0 ) )
            // InternalGlobalConstantsParser.g:783:3: ( rule__STCaseCases__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:784:3: ( rule__STCaseCases__Group__0 )
            // InternalGlobalConstantsParser.g:784:4: rule__STCaseCases__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseCases"


    // $ANTLR start "entryRuleSTElsePart"
    // InternalGlobalConstantsParser.g:793:1: entryRuleSTElsePart : ruleSTElsePart EOF ;
    public final void entryRuleSTElsePart() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:794:1: ( ruleSTElsePart EOF )
            // InternalGlobalConstantsParser.g:795:1: ruleSTElsePart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElsePart"


    // $ANTLR start "ruleSTElsePart"
    // InternalGlobalConstantsParser.g:802:1: ruleSTElsePart : ( ( rule__STElsePart__Group__0 ) ) ;
    public final void ruleSTElsePart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:806:2: ( ( ( rule__STElsePart__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:807:2: ( ( rule__STElsePart__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:807:2: ( ( rule__STElsePart__Group__0 ) )
            // InternalGlobalConstantsParser.g:808:3: ( rule__STElsePart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:809:3: ( rule__STElsePart__Group__0 )
            // InternalGlobalConstantsParser.g:809:4: rule__STElsePart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElsePart"


    // $ANTLR start "entryRuleSTForStatement"
    // InternalGlobalConstantsParser.g:818:1: entryRuleSTForStatement : ruleSTForStatement EOF ;
    public final void entryRuleSTForStatement() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:819:1: ( ruleSTForStatement EOF )
            // InternalGlobalConstantsParser.g:820:1: ruleSTForStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTForStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTForStatement"


    // $ANTLR start "ruleSTForStatement"
    // InternalGlobalConstantsParser.g:827:1: ruleSTForStatement : ( ( rule__STForStatement__Group__0 ) ) ;
    public final void ruleSTForStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:831:2: ( ( ( rule__STForStatement__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:832:2: ( ( rule__STForStatement__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:832:2: ( ( rule__STForStatement__Group__0 ) )
            // InternalGlobalConstantsParser.g:833:3: ( rule__STForStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:834:3: ( rule__STForStatement__Group__0 )
            // InternalGlobalConstantsParser.g:834:4: rule__STForStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTForStatement"


    // $ANTLR start "entryRuleSTWhileStatement"
    // InternalGlobalConstantsParser.g:843:1: entryRuleSTWhileStatement : ruleSTWhileStatement EOF ;
    public final void entryRuleSTWhileStatement() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:844:1: ( ruleSTWhileStatement EOF )
            // InternalGlobalConstantsParser.g:845:1: ruleSTWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTWhileStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTWhileStatement"


    // $ANTLR start "ruleSTWhileStatement"
    // InternalGlobalConstantsParser.g:852:1: ruleSTWhileStatement : ( ( rule__STWhileStatement__Group__0 ) ) ;
    public final void ruleSTWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:856:2: ( ( ( rule__STWhileStatement__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:857:2: ( ( rule__STWhileStatement__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:857:2: ( ( rule__STWhileStatement__Group__0 ) )
            // InternalGlobalConstantsParser.g:858:3: ( rule__STWhileStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:859:3: ( rule__STWhileStatement__Group__0 )
            // InternalGlobalConstantsParser.g:859:4: rule__STWhileStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTWhileStatement"


    // $ANTLR start "entryRuleSTRepeatStatement"
    // InternalGlobalConstantsParser.g:868:1: entryRuleSTRepeatStatement : ruleSTRepeatStatement EOF ;
    public final void entryRuleSTRepeatStatement() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:869:1: ( ruleSTRepeatStatement EOF )
            // InternalGlobalConstantsParser.g:870:1: ruleSTRepeatStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRepeatStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRepeatStatement"


    // $ANTLR start "ruleSTRepeatStatement"
    // InternalGlobalConstantsParser.g:877:1: ruleSTRepeatStatement : ( ( rule__STRepeatStatement__Group__0 ) ) ;
    public final void ruleSTRepeatStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:881:2: ( ( ( rule__STRepeatStatement__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:882:2: ( ( rule__STRepeatStatement__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:882:2: ( ( rule__STRepeatStatement__Group__0 ) )
            // InternalGlobalConstantsParser.g:883:3: ( rule__STRepeatStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:884:3: ( rule__STRepeatStatement__Group__0 )
            // InternalGlobalConstantsParser.g:884:4: rule__STRepeatStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRepeatStatement"


    // $ANTLR start "entryRuleSTExpression"
    // InternalGlobalConstantsParser.g:893:1: entryRuleSTExpression : ruleSTExpression EOF ;
    public final void entryRuleSTExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:894:1: ( ruleSTExpression EOF )
            // InternalGlobalConstantsParser.g:895:1: ruleSTExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpression"


    // $ANTLR start "ruleSTExpression"
    // InternalGlobalConstantsParser.g:902:1: ruleSTExpression : ( ruleSTSubrangeExpression ) ;
    public final void ruleSTExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:906:2: ( ( ruleSTSubrangeExpression ) )
            // InternalGlobalConstantsParser.g:907:2: ( ruleSTSubrangeExpression )
            {
            // InternalGlobalConstantsParser.g:907:2: ( ruleSTSubrangeExpression )
            // InternalGlobalConstantsParser.g:908:3: ruleSTSubrangeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpression"


    // $ANTLR start "entryRuleSTSubrangeExpression"
    // InternalGlobalConstantsParser.g:918:1: entryRuleSTSubrangeExpression : ruleSTSubrangeExpression EOF ;
    public final void entryRuleSTSubrangeExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:919:1: ( ruleSTSubrangeExpression EOF )
            // InternalGlobalConstantsParser.g:920:1: ruleSTSubrangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSubrangeExpression"


    // $ANTLR start "ruleSTSubrangeExpression"
    // InternalGlobalConstantsParser.g:927:1: ruleSTSubrangeExpression : ( ( rule__STSubrangeExpression__Group__0 ) ) ;
    public final void ruleSTSubrangeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:931:2: ( ( ( rule__STSubrangeExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:932:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:932:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:933:3: ( rule__STSubrangeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:934:3: ( rule__STSubrangeExpression__Group__0 )
            // InternalGlobalConstantsParser.g:934:4: rule__STSubrangeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSubrangeExpression"


    // $ANTLR start "entryRuleSTOrExpression"
    // InternalGlobalConstantsParser.g:943:1: entryRuleSTOrExpression : ruleSTOrExpression EOF ;
    public final void entryRuleSTOrExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:944:1: ( ruleSTOrExpression EOF )
            // InternalGlobalConstantsParser.g:945:1: ruleSTOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTOrExpression"


    // $ANTLR start "ruleSTOrExpression"
    // InternalGlobalConstantsParser.g:952:1: ruleSTOrExpression : ( ( rule__STOrExpression__Group__0 ) ) ;
    public final void ruleSTOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:956:2: ( ( ( rule__STOrExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:957:2: ( ( rule__STOrExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:957:2: ( ( rule__STOrExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:958:3: ( rule__STOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:959:3: ( rule__STOrExpression__Group__0 )
            // InternalGlobalConstantsParser.g:959:4: rule__STOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTOrExpression"


    // $ANTLR start "entryRuleSTXorExpression"
    // InternalGlobalConstantsParser.g:968:1: entryRuleSTXorExpression : ruleSTXorExpression EOF ;
    public final void entryRuleSTXorExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:969:1: ( ruleSTXorExpression EOF )
            // InternalGlobalConstantsParser.g:970:1: ruleSTXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTXorExpression"


    // $ANTLR start "ruleSTXorExpression"
    // InternalGlobalConstantsParser.g:977:1: ruleSTXorExpression : ( ( rule__STXorExpression__Group__0 ) ) ;
    public final void ruleSTXorExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:981:2: ( ( ( rule__STXorExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:982:2: ( ( rule__STXorExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:982:2: ( ( rule__STXorExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:983:3: ( rule__STXorExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:984:3: ( rule__STXorExpression__Group__0 )
            // InternalGlobalConstantsParser.g:984:4: rule__STXorExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTXorExpression"


    // $ANTLR start "entryRuleSTAndExpression"
    // InternalGlobalConstantsParser.g:993:1: entryRuleSTAndExpression : ruleSTAndExpression EOF ;
    public final void entryRuleSTAndExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:994:1: ( ruleSTAndExpression EOF )
            // InternalGlobalConstantsParser.g:995:1: ruleSTAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAndExpression"


    // $ANTLR start "ruleSTAndExpression"
    // InternalGlobalConstantsParser.g:1002:1: ruleSTAndExpression : ( ( rule__STAndExpression__Group__0 ) ) ;
    public final void ruleSTAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1006:2: ( ( ( rule__STAndExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1007:2: ( ( rule__STAndExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1007:2: ( ( rule__STAndExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:1008:3: ( rule__STAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1009:3: ( rule__STAndExpression__Group__0 )
            // InternalGlobalConstantsParser.g:1009:4: rule__STAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAndExpression"


    // $ANTLR start "entryRuleSTEqualityExpression"
    // InternalGlobalConstantsParser.g:1018:1: entryRuleSTEqualityExpression : ruleSTEqualityExpression EOF ;
    public final void entryRuleSTEqualityExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1019:1: ( ruleSTEqualityExpression EOF )
            // InternalGlobalConstantsParser.g:1020:1: ruleSTEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTEqualityExpression"


    // $ANTLR start "ruleSTEqualityExpression"
    // InternalGlobalConstantsParser.g:1027:1: ruleSTEqualityExpression : ( ( rule__STEqualityExpression__Group__0 ) ) ;
    public final void ruleSTEqualityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1031:2: ( ( ( rule__STEqualityExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1032:2: ( ( rule__STEqualityExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1032:2: ( ( rule__STEqualityExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:1033:3: ( rule__STEqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1034:3: ( rule__STEqualityExpression__Group__0 )
            // InternalGlobalConstantsParser.g:1034:4: rule__STEqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTEqualityExpression"


    // $ANTLR start "entryRuleSTComparisonExpression"
    // InternalGlobalConstantsParser.g:1043:1: entryRuleSTComparisonExpression : ruleSTComparisonExpression EOF ;
    public final void entryRuleSTComparisonExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1044:1: ( ruleSTComparisonExpression EOF )
            // InternalGlobalConstantsParser.g:1045:1: ruleSTComparisonExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTComparisonExpression"


    // $ANTLR start "ruleSTComparisonExpression"
    // InternalGlobalConstantsParser.g:1052:1: ruleSTComparisonExpression : ( ( rule__STComparisonExpression__Group__0 ) ) ;
    public final void ruleSTComparisonExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1056:2: ( ( ( rule__STComparisonExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1057:2: ( ( rule__STComparisonExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1057:2: ( ( rule__STComparisonExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:1058:3: ( rule__STComparisonExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1059:3: ( rule__STComparisonExpression__Group__0 )
            // InternalGlobalConstantsParser.g:1059:4: rule__STComparisonExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTComparisonExpression"


    // $ANTLR start "entryRuleSTAddSubExpression"
    // InternalGlobalConstantsParser.g:1068:1: entryRuleSTAddSubExpression : ruleSTAddSubExpression EOF ;
    public final void entryRuleSTAddSubExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1069:1: ( ruleSTAddSubExpression EOF )
            // InternalGlobalConstantsParser.g:1070:1: ruleSTAddSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAddSubExpression"


    // $ANTLR start "ruleSTAddSubExpression"
    // InternalGlobalConstantsParser.g:1077:1: ruleSTAddSubExpression : ( ( rule__STAddSubExpression__Group__0 ) ) ;
    public final void ruleSTAddSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1081:2: ( ( ( rule__STAddSubExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1082:2: ( ( rule__STAddSubExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1082:2: ( ( rule__STAddSubExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:1083:3: ( rule__STAddSubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1084:3: ( rule__STAddSubExpression__Group__0 )
            // InternalGlobalConstantsParser.g:1084:4: rule__STAddSubExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAddSubExpression"


    // $ANTLR start "entryRuleSTMulDivModExpression"
    // InternalGlobalConstantsParser.g:1093:1: entryRuleSTMulDivModExpression : ruleSTMulDivModExpression EOF ;
    public final void entryRuleSTMulDivModExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1094:1: ( ruleSTMulDivModExpression EOF )
            // InternalGlobalConstantsParser.g:1095:1: ruleSTMulDivModExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMulDivModExpression"


    // $ANTLR start "ruleSTMulDivModExpression"
    // InternalGlobalConstantsParser.g:1102:1: ruleSTMulDivModExpression : ( ( rule__STMulDivModExpression__Group__0 ) ) ;
    public final void ruleSTMulDivModExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1106:2: ( ( ( rule__STMulDivModExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1107:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1107:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:1108:3: ( rule__STMulDivModExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1109:3: ( rule__STMulDivModExpression__Group__0 )
            // InternalGlobalConstantsParser.g:1109:4: rule__STMulDivModExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMulDivModExpression"


    // $ANTLR start "entryRuleSTPowerExpression"
    // InternalGlobalConstantsParser.g:1118:1: entryRuleSTPowerExpression : ruleSTPowerExpression EOF ;
    public final void entryRuleSTPowerExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1119:1: ( ruleSTPowerExpression EOF )
            // InternalGlobalConstantsParser.g:1120:1: ruleSTPowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPowerExpression"


    // $ANTLR start "ruleSTPowerExpression"
    // InternalGlobalConstantsParser.g:1127:1: ruleSTPowerExpression : ( ( rule__STPowerExpression__Group__0 ) ) ;
    public final void ruleSTPowerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1131:2: ( ( ( rule__STPowerExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1132:2: ( ( rule__STPowerExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1132:2: ( ( rule__STPowerExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:1133:3: ( rule__STPowerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1134:3: ( rule__STPowerExpression__Group__0 )
            // InternalGlobalConstantsParser.g:1134:4: rule__STPowerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPowerExpression"


    // $ANTLR start "entryRuleSTUnaryExpression"
    // InternalGlobalConstantsParser.g:1143:1: entryRuleSTUnaryExpression : ruleSTUnaryExpression EOF ;
    public final void entryRuleSTUnaryExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1144:1: ( ruleSTUnaryExpression EOF )
            // InternalGlobalConstantsParser.g:1145:1: ruleSTUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTUnaryExpression"


    // $ANTLR start "ruleSTUnaryExpression"
    // InternalGlobalConstantsParser.g:1152:1: ruleSTUnaryExpression : ( ( rule__STUnaryExpression__Alternatives ) ) ;
    public final void ruleSTUnaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1156:2: ( ( ( rule__STUnaryExpression__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1157:2: ( ( rule__STUnaryExpression__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1157:2: ( ( rule__STUnaryExpression__Alternatives ) )
            // InternalGlobalConstantsParser.g:1158:3: ( rule__STUnaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1159:3: ( rule__STUnaryExpression__Alternatives )
            // InternalGlobalConstantsParser.g:1159:4: rule__STUnaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTUnaryExpression"


    // $ANTLR start "entryRuleSTAccessExpression"
    // InternalGlobalConstantsParser.g:1168:1: entryRuleSTAccessExpression : ruleSTAccessExpression EOF ;
    public final void entryRuleSTAccessExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1169:1: ( ruleSTAccessExpression EOF )
            // InternalGlobalConstantsParser.g:1170:1: ruleSTAccessExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAccessExpression"


    // $ANTLR start "ruleSTAccessExpression"
    // InternalGlobalConstantsParser.g:1177:1: ruleSTAccessExpression : ( ( rule__STAccessExpression__Group__0 ) ) ;
    public final void ruleSTAccessExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1181:2: ( ( ( rule__STAccessExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1182:2: ( ( rule__STAccessExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1182:2: ( ( rule__STAccessExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:1183:3: ( rule__STAccessExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1184:3: ( rule__STAccessExpression__Group__0 )
            // InternalGlobalConstantsParser.g:1184:4: rule__STAccessExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAccessExpression"


    // $ANTLR start "entryRuleSTPrimaryExpression"
    // InternalGlobalConstantsParser.g:1193:1: entryRuleSTPrimaryExpression : ruleSTPrimaryExpression EOF ;
    public final void entryRuleSTPrimaryExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1194:1: ( ruleSTPrimaryExpression EOF )
            // InternalGlobalConstantsParser.g:1195:1: ruleSTPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPrimaryExpression"


    // $ANTLR start "ruleSTPrimaryExpression"
    // InternalGlobalConstantsParser.g:1202:1: ruleSTPrimaryExpression : ( ( rule__STPrimaryExpression__Alternatives ) ) ;
    public final void ruleSTPrimaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1206:2: ( ( ( rule__STPrimaryExpression__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1207:2: ( ( rule__STPrimaryExpression__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1207:2: ( ( rule__STPrimaryExpression__Alternatives ) )
            // InternalGlobalConstantsParser.g:1208:3: ( rule__STPrimaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1209:3: ( rule__STPrimaryExpression__Alternatives )
            // InternalGlobalConstantsParser.g:1209:4: rule__STPrimaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPrimaryExpression"


    // $ANTLR start "entryRuleSTFeatureExpression"
    // InternalGlobalConstantsParser.g:1218:1: entryRuleSTFeatureExpression : ruleSTFeatureExpression EOF ;
    public final void entryRuleSTFeatureExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1219:1: ( ruleSTFeatureExpression EOF )
            // InternalGlobalConstantsParser.g:1220:1: ruleSTFeatureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFeatureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFeatureExpression"


    // $ANTLR start "ruleSTFeatureExpression"
    // InternalGlobalConstantsParser.g:1227:1: ruleSTFeatureExpression : ( ( rule__STFeatureExpression__Group__0 ) ) ;
    public final void ruleSTFeatureExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1231:2: ( ( ( rule__STFeatureExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1232:2: ( ( rule__STFeatureExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1232:2: ( ( rule__STFeatureExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:1233:3: ( rule__STFeatureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1234:3: ( rule__STFeatureExpression__Group__0 )
            // InternalGlobalConstantsParser.g:1234:4: rule__STFeatureExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFeatureExpression"


    // $ANTLR start "entryRuleSTFeatureName"
    // InternalGlobalConstantsParser.g:1243:1: entryRuleSTFeatureName : ruleSTFeatureName EOF ;
    public final void entryRuleSTFeatureName() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1244:1: ( ruleSTFeatureName EOF )
            // InternalGlobalConstantsParser.g:1245:1: ruleSTFeatureName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFeatureName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFeatureName"


    // $ANTLR start "ruleSTFeatureName"
    // InternalGlobalConstantsParser.g:1252:1: ruleSTFeatureName : ( ( rule__STFeatureName__Alternatives ) ) ;
    public final void ruleSTFeatureName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1256:2: ( ( ( rule__STFeatureName__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1257:2: ( ( rule__STFeatureName__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1257:2: ( ( rule__STFeatureName__Alternatives ) )
            // InternalGlobalConstantsParser.g:1258:3: ( rule__STFeatureName__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureNameAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1259:3: ( rule__STFeatureName__Alternatives )
            // InternalGlobalConstantsParser.g:1259:4: rule__STFeatureName__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureName__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureNameAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFeatureName"


    // $ANTLR start "entryRuleSTBuiltinFeatureExpression"
    // InternalGlobalConstantsParser.g:1268:1: entryRuleSTBuiltinFeatureExpression : ruleSTBuiltinFeatureExpression EOF ;
    public final void entryRuleSTBuiltinFeatureExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1269:1: ( ruleSTBuiltinFeatureExpression EOF )
            // InternalGlobalConstantsParser.g:1270:1: ruleSTBuiltinFeatureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTBuiltinFeatureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTBuiltinFeatureExpression"


    // $ANTLR start "ruleSTBuiltinFeatureExpression"
    // InternalGlobalConstantsParser.g:1277:1: ruleSTBuiltinFeatureExpression : ( ( rule__STBuiltinFeatureExpression__Group__0 ) ) ;
    public final void ruleSTBuiltinFeatureExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1281:2: ( ( ( rule__STBuiltinFeatureExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1282:2: ( ( rule__STBuiltinFeatureExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1282:2: ( ( rule__STBuiltinFeatureExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:1283:3: ( rule__STBuiltinFeatureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1284:3: ( rule__STBuiltinFeatureExpression__Group__0 )
            // InternalGlobalConstantsParser.g:1284:4: rule__STBuiltinFeatureExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTBuiltinFeatureExpression"


    // $ANTLR start "entryRuleSTMultibitPartialExpression"
    // InternalGlobalConstantsParser.g:1293:1: entryRuleSTMultibitPartialExpression : ruleSTMultibitPartialExpression EOF ;
    public final void entryRuleSTMultibitPartialExpression() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1294:1: ( ruleSTMultibitPartialExpression EOF )
            // InternalGlobalConstantsParser.g:1295:1: ruleSTMultibitPartialExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMultibitPartialExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMultibitPartialExpression"


    // $ANTLR start "ruleSTMultibitPartialExpression"
    // InternalGlobalConstantsParser.g:1302:1: ruleSTMultibitPartialExpression : ( ( rule__STMultibitPartialExpression__Group__0 ) ) ;
    public final void ruleSTMultibitPartialExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1306:2: ( ( ( rule__STMultibitPartialExpression__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1307:2: ( ( rule__STMultibitPartialExpression__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1307:2: ( ( rule__STMultibitPartialExpression__Group__0 ) )
            // InternalGlobalConstantsParser.g:1308:3: ( rule__STMultibitPartialExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1309:3: ( rule__STMultibitPartialExpression__Group__0 )
            // InternalGlobalConstantsParser.g:1309:4: rule__STMultibitPartialExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMultibitPartialExpression"


    // $ANTLR start "entryRuleSTLiteralExpressions"
    // InternalGlobalConstantsParser.g:1318:1: entryRuleSTLiteralExpressions : ruleSTLiteralExpressions EOF ;
    public final void entryRuleSTLiteralExpressions() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1319:1: ( ruleSTLiteralExpressions EOF )
            // InternalGlobalConstantsParser.g:1320:1: ruleSTLiteralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLiteralExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLiteralExpressions"


    // $ANTLR start "ruleSTLiteralExpressions"
    // InternalGlobalConstantsParser.g:1327:1: ruleSTLiteralExpressions : ( ( rule__STLiteralExpressions__Alternatives ) ) ;
    public final void ruleSTLiteralExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1331:2: ( ( ( rule__STLiteralExpressions__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1332:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1332:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            // InternalGlobalConstantsParser.g:1333:3: ( rule__STLiteralExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1334:3: ( rule__STLiteralExpressions__Alternatives )
            // InternalGlobalConstantsParser.g:1334:4: rule__STLiteralExpressions__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLiteralExpressions"


    // $ANTLR start "entryRuleSTNumericLiteralType"
    // InternalGlobalConstantsParser.g:1343:1: entryRuleSTNumericLiteralType : ruleSTNumericLiteralType EOF ;
    public final void entryRuleSTNumericLiteralType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1344:1: ( ruleSTNumericLiteralType EOF )
            // InternalGlobalConstantsParser.g:1345:1: ruleSTNumericLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTNumericLiteralType"


    // $ANTLR start "ruleSTNumericLiteralType"
    // InternalGlobalConstantsParser.g:1352:1: ruleSTNumericLiteralType : ( ( rule__STNumericLiteralType__Alternatives ) ) ;
    public final void ruleSTNumericLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1356:2: ( ( ( rule__STNumericLiteralType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1357:2: ( ( rule__STNumericLiteralType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1357:2: ( ( rule__STNumericLiteralType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1358:3: ( rule__STNumericLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1359:3: ( rule__STNumericLiteralType__Alternatives )
            // InternalGlobalConstantsParser.g:1359:4: rule__STNumericLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTNumericLiteralType"


    // $ANTLR start "entryRuleSTNumericLiteral"
    // InternalGlobalConstantsParser.g:1368:1: entryRuleSTNumericLiteral : ruleSTNumericLiteral EOF ;
    public final void entryRuleSTNumericLiteral() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1369:1: ( ruleSTNumericLiteral EOF )
            // InternalGlobalConstantsParser.g:1370:1: ruleSTNumericLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTNumericLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTNumericLiteral"


    // $ANTLR start "ruleSTNumericLiteral"
    // InternalGlobalConstantsParser.g:1377:1: ruleSTNumericLiteral : ( ( rule__STNumericLiteral__Group__0 ) ) ;
    public final void ruleSTNumericLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1381:2: ( ( ( rule__STNumericLiteral__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1382:2: ( ( rule__STNumericLiteral__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1382:2: ( ( rule__STNumericLiteral__Group__0 ) )
            // InternalGlobalConstantsParser.g:1383:3: ( rule__STNumericLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1384:3: ( rule__STNumericLiteral__Group__0 )
            // InternalGlobalConstantsParser.g:1384:4: rule__STNumericLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTNumericLiteral"


    // $ANTLR start "entryRuleSTDateLiteralType"
    // InternalGlobalConstantsParser.g:1393:1: entryRuleSTDateLiteralType : ruleSTDateLiteralType EOF ;
    public final void entryRuleSTDateLiteralType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1394:1: ( ruleSTDateLiteralType EOF )
            // InternalGlobalConstantsParser.g:1395:1: ruleSTDateLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateLiteralType"


    // $ANTLR start "ruleSTDateLiteralType"
    // InternalGlobalConstantsParser.g:1402:1: ruleSTDateLiteralType : ( ( rule__STDateLiteralType__Alternatives ) ) ;
    public final void ruleSTDateLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1406:2: ( ( ( rule__STDateLiteralType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1407:2: ( ( rule__STDateLiteralType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1407:2: ( ( rule__STDateLiteralType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1408:3: ( rule__STDateLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1409:3: ( rule__STDateLiteralType__Alternatives )
            // InternalGlobalConstantsParser.g:1409:4: rule__STDateLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateLiteralType"


    // $ANTLR start "entryRuleSTDateLiteral"
    // InternalGlobalConstantsParser.g:1418:1: entryRuleSTDateLiteral : ruleSTDateLiteral EOF ;
    public final void entryRuleSTDateLiteral() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1419:1: ( ruleSTDateLiteral EOF )
            // InternalGlobalConstantsParser.g:1420:1: ruleSTDateLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateLiteral"


    // $ANTLR start "ruleSTDateLiteral"
    // InternalGlobalConstantsParser.g:1427:1: ruleSTDateLiteral : ( ( rule__STDateLiteral__Group__0 ) ) ;
    public final void ruleSTDateLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1431:2: ( ( ( rule__STDateLiteral__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1432:2: ( ( rule__STDateLiteral__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1432:2: ( ( rule__STDateLiteral__Group__0 ) )
            // InternalGlobalConstantsParser.g:1433:3: ( rule__STDateLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1434:3: ( rule__STDateLiteral__Group__0 )
            // InternalGlobalConstantsParser.g:1434:4: rule__STDateLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateLiteral"


    // $ANTLR start "entryRuleSTTimeLiteralType"
    // InternalGlobalConstantsParser.g:1443:1: entryRuleSTTimeLiteralType : ruleSTTimeLiteralType EOF ;
    public final void entryRuleSTTimeLiteralType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1444:1: ( ruleSTTimeLiteralType EOF )
            // InternalGlobalConstantsParser.g:1445:1: ruleSTTimeLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeLiteralType"


    // $ANTLR start "ruleSTTimeLiteralType"
    // InternalGlobalConstantsParser.g:1452:1: ruleSTTimeLiteralType : ( ( rule__STTimeLiteralType__Alternatives ) ) ;
    public final void ruleSTTimeLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1456:2: ( ( ( rule__STTimeLiteralType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1457:2: ( ( rule__STTimeLiteralType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1457:2: ( ( rule__STTimeLiteralType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1458:3: ( rule__STTimeLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1459:3: ( rule__STTimeLiteralType__Alternatives )
            // InternalGlobalConstantsParser.g:1459:4: rule__STTimeLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeLiteralType"


    // $ANTLR start "entryRuleSTTimeLiteral"
    // InternalGlobalConstantsParser.g:1468:1: entryRuleSTTimeLiteral : ruleSTTimeLiteral EOF ;
    public final void entryRuleSTTimeLiteral() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1469:1: ( ruleSTTimeLiteral EOF )
            // InternalGlobalConstantsParser.g:1470:1: ruleSTTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeLiteral"


    // $ANTLR start "ruleSTTimeLiteral"
    // InternalGlobalConstantsParser.g:1477:1: ruleSTTimeLiteral : ( ( rule__STTimeLiteral__Group__0 ) ) ;
    public final void ruleSTTimeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1481:2: ( ( ( rule__STTimeLiteral__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1482:2: ( ( rule__STTimeLiteral__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1482:2: ( ( rule__STTimeLiteral__Group__0 ) )
            // InternalGlobalConstantsParser.g:1483:3: ( rule__STTimeLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1484:3: ( rule__STTimeLiteral__Group__0 )
            // InternalGlobalConstantsParser.g:1484:4: rule__STTimeLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeLiteral"


    // $ANTLR start "entryRuleSTTimeOfDayLiteral"
    // InternalGlobalConstantsParser.g:1493:1: entryRuleSTTimeOfDayLiteral : ruleSTTimeOfDayLiteral EOF ;
    public final void entryRuleSTTimeOfDayLiteral() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1494:1: ( ruleSTTimeOfDayLiteral EOF )
            // InternalGlobalConstantsParser.g:1495:1: ruleSTTimeOfDayLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeOfDayLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeOfDayLiteral"


    // $ANTLR start "ruleSTTimeOfDayLiteral"
    // InternalGlobalConstantsParser.g:1502:1: ruleSTTimeOfDayLiteral : ( ( rule__STTimeOfDayLiteral__Group__0 ) ) ;
    public final void ruleSTTimeOfDayLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1506:2: ( ( ( rule__STTimeOfDayLiteral__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1507:2: ( ( rule__STTimeOfDayLiteral__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1507:2: ( ( rule__STTimeOfDayLiteral__Group__0 ) )
            // InternalGlobalConstantsParser.g:1508:3: ( rule__STTimeOfDayLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1509:3: ( rule__STTimeOfDayLiteral__Group__0 )
            // InternalGlobalConstantsParser.g:1509:4: rule__STTimeOfDayLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeOfDayLiteral"


    // $ANTLR start "entryRuleSTDateAndTimeLiteral"
    // InternalGlobalConstantsParser.g:1518:1: entryRuleSTDateAndTimeLiteral : ruleSTDateAndTimeLiteral EOF ;
    public final void entryRuleSTDateAndTimeLiteral() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1519:1: ( ruleSTDateAndTimeLiteral EOF )
            // InternalGlobalConstantsParser.g:1520:1: ruleSTDateAndTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateAndTimeLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateAndTimeLiteral"


    // $ANTLR start "ruleSTDateAndTimeLiteral"
    // InternalGlobalConstantsParser.g:1527:1: ruleSTDateAndTimeLiteral : ( ( rule__STDateAndTimeLiteral__Group__0 ) ) ;
    public final void ruleSTDateAndTimeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1531:2: ( ( ( rule__STDateAndTimeLiteral__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1532:2: ( ( rule__STDateAndTimeLiteral__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1532:2: ( ( rule__STDateAndTimeLiteral__Group__0 ) )
            // InternalGlobalConstantsParser.g:1533:3: ( rule__STDateAndTimeLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1534:3: ( rule__STDateAndTimeLiteral__Group__0 )
            // InternalGlobalConstantsParser.g:1534:4: rule__STDateAndTimeLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateAndTimeLiteral"


    // $ANTLR start "entryRuleSTStringLiteral"
    // InternalGlobalConstantsParser.g:1543:1: entryRuleSTStringLiteral : ruleSTStringLiteral EOF ;
    public final void entryRuleSTStringLiteral() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1544:1: ( ruleSTStringLiteral EOF )
            // InternalGlobalConstantsParser.g:1545:1: ruleSTStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStringLiteral"


    // $ANTLR start "ruleSTStringLiteral"
    // InternalGlobalConstantsParser.g:1552:1: ruleSTStringLiteral : ( ( rule__STStringLiteral__Group__0 ) ) ;
    public final void ruleSTStringLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1556:2: ( ( ( rule__STStringLiteral__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1557:2: ( ( rule__STStringLiteral__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1557:2: ( ( rule__STStringLiteral__Group__0 ) )
            // InternalGlobalConstantsParser.g:1558:3: ( rule__STStringLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1559:3: ( rule__STStringLiteral__Group__0 )
            // InternalGlobalConstantsParser.g:1559:4: rule__STStringLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStringLiteral"


    // $ANTLR start "entryRuleSTAnyType"
    // InternalGlobalConstantsParser.g:1568:1: entryRuleSTAnyType : ruleSTAnyType EOF ;
    public final void entryRuleSTAnyType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1569:1: ( ruleSTAnyType EOF )
            // InternalGlobalConstantsParser.g:1570:1: ruleSTAnyType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyType"


    // $ANTLR start "ruleSTAnyType"
    // InternalGlobalConstantsParser.g:1577:1: ruleSTAnyType : ( ( rule__STAnyType__Alternatives ) ) ;
    public final void ruleSTAnyType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1581:2: ( ( ( rule__STAnyType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1582:2: ( ( rule__STAnyType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1582:2: ( ( rule__STAnyType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1583:3: ( rule__STAnyType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1584:3: ( rule__STAnyType__Alternatives )
            // InternalGlobalConstantsParser.g:1584:4: rule__STAnyType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyType"


    // $ANTLR start "entryRuleSTAnyBuiltinType"
    // InternalGlobalConstantsParser.g:1593:1: entryRuleSTAnyBuiltinType : ruleSTAnyBuiltinType EOF ;
    public final void entryRuleSTAnyBuiltinType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1594:1: ( ruleSTAnyBuiltinType EOF )
            // InternalGlobalConstantsParser.g:1595:1: ruleSTAnyBuiltinType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBuiltinTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyBuiltinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBuiltinTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyBuiltinType"


    // $ANTLR start "ruleSTAnyBuiltinType"
    // InternalGlobalConstantsParser.g:1602:1: ruleSTAnyBuiltinType : ( ( rule__STAnyBuiltinType__Alternatives ) ) ;
    public final void ruleSTAnyBuiltinType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1606:2: ( ( ( rule__STAnyBuiltinType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1607:2: ( ( rule__STAnyBuiltinType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1607:2: ( ( rule__STAnyBuiltinType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1608:3: ( rule__STAnyBuiltinType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBuiltinTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1609:3: ( rule__STAnyBuiltinType__Alternatives )
            // InternalGlobalConstantsParser.g:1609:4: rule__STAnyBuiltinType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyBuiltinType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBuiltinTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyBuiltinType"


    // $ANTLR start "entryRuleSTAnyBitType"
    // InternalGlobalConstantsParser.g:1618:1: entryRuleSTAnyBitType : ruleSTAnyBitType EOF ;
    public final void entryRuleSTAnyBitType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1619:1: ( ruleSTAnyBitType EOF )
            // InternalGlobalConstantsParser.g:1620:1: ruleSTAnyBitType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBitTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyBitType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBitTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyBitType"


    // $ANTLR start "ruleSTAnyBitType"
    // InternalGlobalConstantsParser.g:1627:1: ruleSTAnyBitType : ( ( rule__STAnyBitType__Alternatives ) ) ;
    public final void ruleSTAnyBitType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1631:2: ( ( ( rule__STAnyBitType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1632:2: ( ( rule__STAnyBitType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1632:2: ( ( rule__STAnyBitType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1633:3: ( rule__STAnyBitType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBitTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1634:3: ( rule__STAnyBitType__Alternatives )
            // InternalGlobalConstantsParser.g:1634:4: rule__STAnyBitType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyBitType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBitTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyBitType"


    // $ANTLR start "entryRuleSTAnyNumType"
    // InternalGlobalConstantsParser.g:1643:1: entryRuleSTAnyNumType : ruleSTAnyNumType EOF ;
    public final void entryRuleSTAnyNumType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1644:1: ( ruleSTAnyNumType EOF )
            // InternalGlobalConstantsParser.g:1645:1: ruleSTAnyNumType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyNumTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyNumType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyNumTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyNumType"


    // $ANTLR start "ruleSTAnyNumType"
    // InternalGlobalConstantsParser.g:1652:1: ruleSTAnyNumType : ( ( rule__STAnyNumType__Alternatives ) ) ;
    public final void ruleSTAnyNumType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1656:2: ( ( ( rule__STAnyNumType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1657:2: ( ( rule__STAnyNumType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1657:2: ( ( rule__STAnyNumType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1658:3: ( rule__STAnyNumType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyNumTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1659:3: ( rule__STAnyNumType__Alternatives )
            // InternalGlobalConstantsParser.g:1659:4: rule__STAnyNumType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyNumType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyNumTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyNumType"


    // $ANTLR start "entryRuleSTAnyDurationType"
    // InternalGlobalConstantsParser.g:1668:1: entryRuleSTAnyDurationType : ruleSTAnyDurationType EOF ;
    public final void entryRuleSTAnyDurationType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1669:1: ( ruleSTAnyDurationType EOF )
            // InternalGlobalConstantsParser.g:1670:1: ruleSTAnyDurationType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDurationTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyDurationType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDurationTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyDurationType"


    // $ANTLR start "ruleSTAnyDurationType"
    // InternalGlobalConstantsParser.g:1677:1: ruleSTAnyDurationType : ( ( rule__STAnyDurationType__Alternatives ) ) ;
    public final void ruleSTAnyDurationType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1681:2: ( ( ( rule__STAnyDurationType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1682:2: ( ( rule__STAnyDurationType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1682:2: ( ( rule__STAnyDurationType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1683:3: ( rule__STAnyDurationType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDurationTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1684:3: ( rule__STAnyDurationType__Alternatives )
            // InternalGlobalConstantsParser.g:1684:4: rule__STAnyDurationType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyDurationType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDurationTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyDurationType"


    // $ANTLR start "entryRuleSTAnyDateType"
    // InternalGlobalConstantsParser.g:1693:1: entryRuleSTAnyDateType : ruleSTAnyDateType EOF ;
    public final void entryRuleSTAnyDateType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1694:1: ( ruleSTAnyDateType EOF )
            // InternalGlobalConstantsParser.g:1695:1: ruleSTAnyDateType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDateTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyDateType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDateTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyDateType"


    // $ANTLR start "ruleSTAnyDateType"
    // InternalGlobalConstantsParser.g:1702:1: ruleSTAnyDateType : ( ( rule__STAnyDateType__Alternatives ) ) ;
    public final void ruleSTAnyDateType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1706:2: ( ( ( rule__STAnyDateType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1707:2: ( ( rule__STAnyDateType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1707:2: ( ( rule__STAnyDateType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1708:3: ( rule__STAnyDateType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDateTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1709:3: ( rule__STAnyDateType__Alternatives )
            // InternalGlobalConstantsParser.g:1709:4: rule__STAnyDateType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyDateType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDateTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyDateType"


    // $ANTLR start "entryRuleSTDateType"
    // InternalGlobalConstantsParser.g:1718:1: entryRuleSTDateType : ruleSTDateType EOF ;
    public final void entryRuleSTDateType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1719:1: ( ruleSTDateType EOF )
            // InternalGlobalConstantsParser.g:1720:1: ruleSTDateType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateType"


    // $ANTLR start "ruleSTDateType"
    // InternalGlobalConstantsParser.g:1727:1: ruleSTDateType : ( ( rule__STDateType__Alternatives ) ) ;
    public final void ruleSTDateType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1731:2: ( ( ( rule__STDateType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1732:2: ( ( rule__STDateType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1732:2: ( ( rule__STDateType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1733:3: ( rule__STDateType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1734:3: ( rule__STDateType__Alternatives )
            // InternalGlobalConstantsParser.g:1734:4: rule__STDateType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateType"


    // $ANTLR start "entryRuleSTTimeOfDayType"
    // InternalGlobalConstantsParser.g:1743:1: entryRuleSTTimeOfDayType : ruleSTTimeOfDayType EOF ;
    public final void entryRuleSTTimeOfDayType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1744:1: ( ruleSTTimeOfDayType EOF )
            // InternalGlobalConstantsParser.g:1745:1: ruleSTTimeOfDayType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeOfDayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeOfDayType"


    // $ANTLR start "ruleSTTimeOfDayType"
    // InternalGlobalConstantsParser.g:1752:1: ruleSTTimeOfDayType : ( ( rule__STTimeOfDayType__Alternatives ) ) ;
    public final void ruleSTTimeOfDayType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1756:2: ( ( ( rule__STTimeOfDayType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1757:2: ( ( rule__STTimeOfDayType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1757:2: ( ( rule__STTimeOfDayType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1758:3: ( rule__STTimeOfDayType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1759:3: ( rule__STTimeOfDayType__Alternatives )
            // InternalGlobalConstantsParser.g:1759:4: rule__STTimeOfDayType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeOfDayType"


    // $ANTLR start "entryRuleSTDateAndTimeType"
    // InternalGlobalConstantsParser.g:1768:1: entryRuleSTDateAndTimeType : ruleSTDateAndTimeType EOF ;
    public final void entryRuleSTDateAndTimeType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1769:1: ( ruleSTDateAndTimeType EOF )
            // InternalGlobalConstantsParser.g:1770:1: ruleSTDateAndTimeType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateAndTimeType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateAndTimeType"


    // $ANTLR start "ruleSTDateAndTimeType"
    // InternalGlobalConstantsParser.g:1777:1: ruleSTDateAndTimeType : ( ( rule__STDateAndTimeType__Alternatives ) ) ;
    public final void ruleSTDateAndTimeType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1781:2: ( ( ( rule__STDateAndTimeType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1782:2: ( ( rule__STDateAndTimeType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1782:2: ( ( rule__STDateAndTimeType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1783:3: ( rule__STDateAndTimeType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1784:3: ( rule__STDateAndTimeType__Alternatives )
            // InternalGlobalConstantsParser.g:1784:4: rule__STDateAndTimeType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateAndTimeType"


    // $ANTLR start "entryRuleSTAnyCharsType"
    // InternalGlobalConstantsParser.g:1793:1: entryRuleSTAnyCharsType : ruleSTAnyCharsType EOF ;
    public final void entryRuleSTAnyCharsType() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1794:1: ( ruleSTAnyCharsType EOF )
            // InternalGlobalConstantsParser.g:1795:1: ruleSTAnyCharsType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyCharsTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyCharsType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyCharsTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyCharsType"


    // $ANTLR start "ruleSTAnyCharsType"
    // InternalGlobalConstantsParser.g:1802:1: ruleSTAnyCharsType : ( ( rule__STAnyCharsType__Alternatives ) ) ;
    public final void ruleSTAnyCharsType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1806:2: ( ( ( rule__STAnyCharsType__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1807:2: ( ( rule__STAnyCharsType__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1807:2: ( ( rule__STAnyCharsType__Alternatives ) )
            // InternalGlobalConstantsParser.g:1808:3: ( rule__STAnyCharsType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyCharsTypeAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1809:3: ( rule__STAnyCharsType__Alternatives )
            // InternalGlobalConstantsParser.g:1809:4: rule__STAnyCharsType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyCharsType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyCharsTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyCharsType"


    // $ANTLR start "entryRuleNumeric"
    // InternalGlobalConstantsParser.g:1818:1: entryRuleNumeric : ruleNumeric EOF ;
    public final void entryRuleNumeric() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1819:1: ( ruleNumeric EOF )
            // InternalGlobalConstantsParser.g:1820:1: ruleNumeric EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumericRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumeric();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumericRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNumeric"


    // $ANTLR start "ruleNumeric"
    // InternalGlobalConstantsParser.g:1827:1: ruleNumeric : ( ( rule__Numeric__Alternatives ) ) ;
    public final void ruleNumeric() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1831:2: ( ( ( rule__Numeric__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:1832:2: ( ( rule__Numeric__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:1832:2: ( ( rule__Numeric__Alternatives ) )
            // InternalGlobalConstantsParser.g:1833:3: ( rule__Numeric__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumericAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:1834:3: ( rule__Numeric__Alternatives )
            // InternalGlobalConstantsParser.g:1834:4: rule__Numeric__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Numeric__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumericAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNumeric"


    // $ANTLR start "entryRuleNumber"
    // InternalGlobalConstantsParser.g:1843:1: entryRuleNumber : ruleNumber EOF ;
    public final void entryRuleNumber() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalGlobalConstantsParser.g:1847:1: ( ruleNumber EOF )
            // InternalGlobalConstantsParser.g:1848:1: ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalGlobalConstantsParser.g:1858:1: ruleNumber : ( ( rule__Number__Group__0 ) ) ;
    public final void ruleNumber() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1863:2: ( ( ( rule__Number__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1864:2: ( ( rule__Number__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1864:2: ( ( rule__Number__Group__0 ) )
            // InternalGlobalConstantsParser.g:1865:3: ( rule__Number__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1866:3: ( rule__Number__Group__0 )
            // InternalGlobalConstantsParser.g:1866:4: rule__Number__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleTime"
    // InternalGlobalConstantsParser.g:1876:1: entryRuleTime : ruleTime EOF ;
    public final void entryRuleTime() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalGlobalConstantsParser.g:1880:1: ( ruleTime EOF )
            // InternalGlobalConstantsParser.g:1881:1: ruleTime EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleTime"


    // $ANTLR start "ruleTime"
    // InternalGlobalConstantsParser.g:1891:1: ruleTime : ( ( rule__Time__Group__0 ) ) ;
    public final void ruleTime() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1896:2: ( ( ( rule__Time__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1897:2: ( ( rule__Time__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1897:2: ( ( rule__Time__Group__0 ) )
            // InternalGlobalConstantsParser.g:1898:3: ( rule__Time__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1899:3: ( rule__Time__Group__0 )
            // InternalGlobalConstantsParser.g:1899:4: rule__Time__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Time__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleTime"


    // $ANTLR start "entryRuleDate"
    // InternalGlobalConstantsParser.g:1909:1: entryRuleDate : ruleDate EOF ;
    public final void entryRuleDate() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1910:1: ( ruleDate EOF )
            // InternalGlobalConstantsParser.g:1911:1: ruleDate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDate"


    // $ANTLR start "ruleDate"
    // InternalGlobalConstantsParser.g:1918:1: ruleDate : ( ( rule__Date__Group__0 ) ) ;
    public final void ruleDate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1922:2: ( ( ( rule__Date__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1923:2: ( ( rule__Date__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1923:2: ( ( rule__Date__Group__0 ) )
            // InternalGlobalConstantsParser.g:1924:3: ( rule__Date__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1925:3: ( rule__Date__Group__0 )
            // InternalGlobalConstantsParser.g:1925:4: rule__Date__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Date__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDate"


    // $ANTLR start "entryRuleDateAndTime"
    // InternalGlobalConstantsParser.g:1934:1: entryRuleDateAndTime : ruleDateAndTime EOF ;
    public final void entryRuleDateAndTime() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1935:1: ( ruleDateAndTime EOF )
            // InternalGlobalConstantsParser.g:1936:1: ruleDateAndTime EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDateAndTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDateAndTime"


    // $ANTLR start "ruleDateAndTime"
    // InternalGlobalConstantsParser.g:1943:1: ruleDateAndTime : ( ( rule__DateAndTime__Group__0 ) ) ;
    public final void ruleDateAndTime() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1947:2: ( ( ( rule__DateAndTime__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1948:2: ( ( rule__DateAndTime__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1948:2: ( ( rule__DateAndTime__Group__0 ) )
            // InternalGlobalConstantsParser.g:1949:3: ( rule__DateAndTime__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1950:3: ( rule__DateAndTime__Group__0 )
            // InternalGlobalConstantsParser.g:1950:4: rule__DateAndTime__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDateAndTime"


    // $ANTLR start "entryRuleTimeOfDay"
    // InternalGlobalConstantsParser.g:1959:1: entryRuleTimeOfDay : ruleTimeOfDay EOF ;
    public final void entryRuleTimeOfDay() throws RecognitionException {
        try {
            // InternalGlobalConstantsParser.g:1960:1: ( ruleTimeOfDay EOF )
            // InternalGlobalConstantsParser.g:1961:1: ruleTimeOfDay EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTimeOfDay"


    // $ANTLR start "ruleTimeOfDay"
    // InternalGlobalConstantsParser.g:1968:1: ruleTimeOfDay : ( ( rule__TimeOfDay__Group__0 ) ) ;
    public final void ruleTimeOfDay() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1972:2: ( ( ( rule__TimeOfDay__Group__0 ) ) )
            // InternalGlobalConstantsParser.g:1973:2: ( ( rule__TimeOfDay__Group__0 ) )
            {
            // InternalGlobalConstantsParser.g:1973:2: ( ( rule__TimeOfDay__Group__0 ) )
            // InternalGlobalConstantsParser.g:1974:3: ( rule__TimeOfDay__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getGroup()); 
            }
            // InternalGlobalConstantsParser.g:1975:3: ( rule__TimeOfDay__Group__0 )
            // InternalGlobalConstantsParser.g:1975:4: rule__TimeOfDay__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTimeOfDay"


    // $ANTLR start "ruleSubrangeOperator"
    // InternalGlobalConstantsParser.g:1984:1: ruleSubrangeOperator : ( ( FullStopFullStop ) ) ;
    public final void ruleSubrangeOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:1988:1: ( ( ( FullStopFullStop ) ) )
            // InternalGlobalConstantsParser.g:1989:2: ( ( FullStopFullStop ) )
            {
            // InternalGlobalConstantsParser.g:1989:2: ( ( FullStopFullStop ) )
            // InternalGlobalConstantsParser.g:1990:3: ( FullStopFullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }
            // InternalGlobalConstantsParser.g:1991:3: ( FullStopFullStop )
            // InternalGlobalConstantsParser.g:1991:4: FullStopFullStop
            {
            match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubrangeOperator"


    // $ANTLR start "ruleOrOperator"
    // InternalGlobalConstantsParser.g:2000:1: ruleOrOperator : ( ( OR ) ) ;
    public final void ruleOrOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2004:1: ( ( ( OR ) ) )
            // InternalGlobalConstantsParser.g:2005:2: ( ( OR ) )
            {
            // InternalGlobalConstantsParser.g:2005:2: ( ( OR ) )
            // InternalGlobalConstantsParser.g:2006:3: ( OR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }
            // InternalGlobalConstantsParser.g:2007:3: ( OR )
            // InternalGlobalConstantsParser.g:2007:4: OR
            {
            match(input,OR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalGlobalConstantsParser.g:2016:1: ruleXorOperator : ( ( XOR ) ) ;
    public final void ruleXorOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2020:1: ( ( ( XOR ) ) )
            // InternalGlobalConstantsParser.g:2021:2: ( ( XOR ) )
            {
            // InternalGlobalConstantsParser.g:2021:2: ( ( XOR ) )
            // InternalGlobalConstantsParser.g:2022:3: ( XOR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }
            // InternalGlobalConstantsParser.g:2023:3: ( XOR )
            // InternalGlobalConstantsParser.g:2023:4: XOR
            {
            match(input,XOR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalGlobalConstantsParser.g:2032:1: ruleAndOperator : ( ( rule__AndOperator__Alternatives ) ) ;
    public final void ruleAndOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2036:1: ( ( ( rule__AndOperator__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:2037:2: ( ( rule__AndOperator__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:2037:2: ( ( rule__AndOperator__Alternatives ) )
            // InternalGlobalConstantsParser.g:2038:3: ( rule__AndOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:2039:3: ( rule__AndOperator__Alternatives )
            // InternalGlobalConstantsParser.g:2039:4: rule__AndOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AndOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "ruleEqualityOperator"
    // InternalGlobalConstantsParser.g:2048:1: ruleEqualityOperator : ( ( rule__EqualityOperator__Alternatives ) ) ;
    public final void ruleEqualityOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2052:1: ( ( ( rule__EqualityOperator__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:2053:2: ( ( rule__EqualityOperator__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:2053:2: ( ( rule__EqualityOperator__Alternatives ) )
            // InternalGlobalConstantsParser.g:2054:3: ( rule__EqualityOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:2055:3: ( rule__EqualityOperator__Alternatives )
            // InternalGlobalConstantsParser.g:2055:4: rule__EqualityOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EqualityOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalGlobalConstantsParser.g:2064:1: ruleCompareOperator : ( ( rule__CompareOperator__Alternatives ) ) ;
    public final void ruleCompareOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2068:1: ( ( ( rule__CompareOperator__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:2069:2: ( ( rule__CompareOperator__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:2069:2: ( ( rule__CompareOperator__Alternatives ) )
            // InternalGlobalConstantsParser.g:2070:3: ( rule__CompareOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:2071:3: ( rule__CompareOperator__Alternatives )
            // InternalGlobalConstantsParser.g:2071:4: rule__CompareOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CompareOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "ruleAddSubOperator"
    // InternalGlobalConstantsParser.g:2080:1: ruleAddSubOperator : ( ( rule__AddSubOperator__Alternatives ) ) ;
    public final void ruleAddSubOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2084:1: ( ( ( rule__AddSubOperator__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:2085:2: ( ( rule__AddSubOperator__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:2085:2: ( ( rule__AddSubOperator__Alternatives ) )
            // InternalGlobalConstantsParser.g:2086:3: ( rule__AddSubOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:2087:3: ( rule__AddSubOperator__Alternatives )
            // InternalGlobalConstantsParser.g:2087:4: rule__AddSubOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AddSubOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddSubOperator"


    // $ANTLR start "ruleMulDivModOperator"
    // InternalGlobalConstantsParser.g:2096:1: ruleMulDivModOperator : ( ( rule__MulDivModOperator__Alternatives ) ) ;
    public final void ruleMulDivModOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2100:1: ( ( ( rule__MulDivModOperator__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:2101:2: ( ( rule__MulDivModOperator__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:2101:2: ( ( rule__MulDivModOperator__Alternatives ) )
            // InternalGlobalConstantsParser.g:2102:3: ( rule__MulDivModOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:2103:3: ( rule__MulDivModOperator__Alternatives )
            // InternalGlobalConstantsParser.g:2103:4: rule__MulDivModOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MulDivModOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulDivModOperator"


    // $ANTLR start "rulePowerOperator"
    // InternalGlobalConstantsParser.g:2112:1: rulePowerOperator : ( ( AsteriskAsterisk ) ) ;
    public final void rulePowerOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2116:1: ( ( ( AsteriskAsterisk ) ) )
            // InternalGlobalConstantsParser.g:2117:2: ( ( AsteriskAsterisk ) )
            {
            // InternalGlobalConstantsParser.g:2117:2: ( ( AsteriskAsterisk ) )
            // InternalGlobalConstantsParser.g:2118:3: ( AsteriskAsterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }
            // InternalGlobalConstantsParser.g:2119:3: ( AsteriskAsterisk )
            // InternalGlobalConstantsParser.g:2119:4: AsteriskAsterisk
            {
            match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePowerOperator"


    // $ANTLR start "ruleUnaryOperator"
    // InternalGlobalConstantsParser.g:2128:1: ruleUnaryOperator : ( ( rule__UnaryOperator__Alternatives ) ) ;
    public final void ruleUnaryOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2132:1: ( ( ( rule__UnaryOperator__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:2133:2: ( ( rule__UnaryOperator__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:2133:2: ( ( rule__UnaryOperator__Alternatives ) )
            // InternalGlobalConstantsParser.g:2134:3: ( rule__UnaryOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:2135:3: ( rule__UnaryOperator__Alternatives )
            // InternalGlobalConstantsParser.g:2135:4: rule__UnaryOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "ruleSTBuiltinFeature"
    // InternalGlobalConstantsParser.g:2144:1: ruleSTBuiltinFeature : ( ( THIS ) ) ;
    public final void ruleSTBuiltinFeature() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2148:1: ( ( ( THIS ) ) )
            // InternalGlobalConstantsParser.g:2149:2: ( ( THIS ) )
            {
            // InternalGlobalConstantsParser.g:2149:2: ( ( THIS ) )
            // InternalGlobalConstantsParser.g:2150:3: ( THIS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureAccess().getTHISEnumLiteralDeclaration()); 
            }
            // InternalGlobalConstantsParser.g:2151:3: ( THIS )
            // InternalGlobalConstantsParser.g:2151:4: THIS
            {
            match(input,THIS,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureAccess().getTHISEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTBuiltinFeature"


    // $ANTLR start "ruleSTMultiBitAccessSpecifier"
    // InternalGlobalConstantsParser.g:2160:1: ruleSTMultiBitAccessSpecifier : ( ( rule__STMultiBitAccessSpecifier__Alternatives ) ) ;
    public final void ruleSTMultiBitAccessSpecifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2164:1: ( ( ( rule__STMultiBitAccessSpecifier__Alternatives ) ) )
            // InternalGlobalConstantsParser.g:2165:2: ( ( rule__STMultiBitAccessSpecifier__Alternatives ) )
            {
            // InternalGlobalConstantsParser.g:2165:2: ( ( rule__STMultiBitAccessSpecifier__Alternatives ) )
            // InternalGlobalConstantsParser.g:2166:3: ( rule__STMultiBitAccessSpecifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getAlternatives()); 
            }
            // InternalGlobalConstantsParser.g:2167:3: ( rule__STMultiBitAccessSpecifier__Alternatives )
            // InternalGlobalConstantsParser.g:2167:4: rule__STMultiBitAccessSpecifier__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STMultiBitAccessSpecifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMultiBitAccessSpecifier"


    // $ANTLR start "rule__STVarDeclaration__Alternatives_4_1"
    // InternalGlobalConstantsParser.g:2175:1: rule__STVarDeclaration__Alternatives_4_1 : ( ( ( rule__STVarDeclaration__Group_4_1_0__0 ) ) | ( ( rule__STVarDeclaration__Group_4_1_1__0 ) ) );
    public final void rule__STVarDeclaration__Alternatives_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2179:1: ( ( ( rule__STVarDeclaration__Group_4_1_0__0 ) ) | ( ( rule__STVarDeclaration__Group_4_1_1__0 ) ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==LeftSquareBracket) ) {
                int LA1_1 = input.LA(2);

                if ( (LA1_1==Asterisk) ) {
                    alt1=2;
                }
                else if ( (LA1_1==LDATE_AND_TIME||LA1_1==DATE_AND_TIME||LA1_1==LTIME_OF_DAY||LA1_1==TIME_OF_DAY||LA1_1==WSTRING||LA1_1==STRING||LA1_1==DWORD||LA1_1==FALSE||(LA1_1>=LDATE && LA1_1<=LWORD)||(LA1_1>=UDINT && LA1_1<=ULINT)||(LA1_1>=USINT && LA1_1<=WCHAR)||(LA1_1>=BOOL && LA1_1<=BYTE)||(LA1_1>=CHAR && LA1_1<=DINT)||(LA1_1>=LINT && LA1_1<=LTOD)||(LA1_1>=REAL && LA1_1<=SINT)||(LA1_1>=THIS && LA1_1<=TRUE)||LA1_1==UINT||(LA1_1>=WORD && LA1_1<=AND)||(LA1_1>=INT && LA1_1<=NOT)||LA1_1==TOD||LA1_1==XOR||LA1_1==DT||(LA1_1>=LD && LA1_1<=LT)||LA1_1==OR||LA1_1==LeftParenthesis||LA1_1==PlusSign||LA1_1==HyphenMinus||(LA1_1>=D && LA1_1<=T)||(LA1_1>=RULE_NON_DECIMAL && LA1_1<=RULE_DECIMAL)||(LA1_1>=RULE_ID && LA1_1<=RULE_STRING)) ) {
                    alt1=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 1, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2180:2: ( ( rule__STVarDeclaration__Group_4_1_0__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2180:2: ( ( rule__STVarDeclaration__Group_4_1_0__0 ) )
                    // InternalGlobalConstantsParser.g:2181:3: ( rule__STVarDeclaration__Group_4_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0()); 
                    }
                    // InternalGlobalConstantsParser.g:2182:3: ( rule__STVarDeclaration__Group_4_1_0__0 )
                    // InternalGlobalConstantsParser.g:2182:4: rule__STVarDeclaration__Group_4_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_4_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2186:2: ( ( rule__STVarDeclaration__Group_4_1_1__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2186:2: ( ( rule__STVarDeclaration__Group_4_1_1__0 ) )
                    // InternalGlobalConstantsParser.g:2187:3: ( rule__STVarDeclaration__Group_4_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1()); 
                    }
                    // InternalGlobalConstantsParser.g:2188:3: ( rule__STVarDeclaration__Group_4_1_1__0 )
                    // InternalGlobalConstantsParser.g:2188:4: rule__STVarDeclaration__Group_4_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_4_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Alternatives_4_1"


    // $ANTLR start "rule__STTypeDeclaration__Alternatives_1_1"
    // InternalGlobalConstantsParser.g:2196:1: rule__STTypeDeclaration__Alternatives_1_1 : ( ( ( rule__STTypeDeclaration__Group_1_1_0__0 ) ) | ( ( rule__STTypeDeclaration__Group_1_1_1__0 ) ) );
    public final void rule__STTypeDeclaration__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2200:1: ( ( ( rule__STTypeDeclaration__Group_1_1_0__0 ) ) | ( ( rule__STTypeDeclaration__Group_1_1_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==LeftSquareBracket) ) {
                int LA2_1 = input.LA(2);

                if ( (LA2_1==Asterisk) ) {
                    alt2=2;
                }
                else if ( (LA2_1==LDATE_AND_TIME||LA2_1==DATE_AND_TIME||LA2_1==LTIME_OF_DAY||LA2_1==TIME_OF_DAY||LA2_1==WSTRING||LA2_1==STRING||LA2_1==DWORD||LA2_1==FALSE||(LA2_1>=LDATE && LA2_1<=LWORD)||(LA2_1>=UDINT && LA2_1<=ULINT)||(LA2_1>=USINT && LA2_1<=WCHAR)||(LA2_1>=BOOL && LA2_1<=BYTE)||(LA2_1>=CHAR && LA2_1<=DINT)||(LA2_1>=LINT && LA2_1<=LTOD)||(LA2_1>=REAL && LA2_1<=SINT)||(LA2_1>=THIS && LA2_1<=TRUE)||LA2_1==UINT||(LA2_1>=WORD && LA2_1<=AND)||(LA2_1>=INT && LA2_1<=NOT)||LA2_1==TOD||LA2_1==XOR||LA2_1==DT||(LA2_1>=LD && LA2_1<=LT)||LA2_1==OR||LA2_1==LeftParenthesis||LA2_1==PlusSign||LA2_1==HyphenMinus||(LA2_1>=D && LA2_1<=T)||(LA2_1>=RULE_NON_DECIMAL && LA2_1<=RULE_DECIMAL)||(LA2_1>=RULE_ID && LA2_1<=RULE_STRING)) ) {
                    alt2=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2201:2: ( ( rule__STTypeDeclaration__Group_1_1_0__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2201:2: ( ( rule__STTypeDeclaration__Group_1_1_0__0 ) )
                    // InternalGlobalConstantsParser.g:2202:3: ( rule__STTypeDeclaration__Group_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_0()); 
                    }
                    // InternalGlobalConstantsParser.g:2203:3: ( rule__STTypeDeclaration__Group_1_1_0__0 )
                    // InternalGlobalConstantsParser.g:2203:4: rule__STTypeDeclaration__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STTypeDeclaration__Group_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2207:2: ( ( rule__STTypeDeclaration__Group_1_1_1__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2207:2: ( ( rule__STTypeDeclaration__Group_1_1_1__0 ) )
                    // InternalGlobalConstantsParser.g:2208:3: ( rule__STTypeDeclaration__Group_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_1()); 
                    }
                    // InternalGlobalConstantsParser.g:2209:3: ( rule__STTypeDeclaration__Group_1_1_1__0 )
                    // InternalGlobalConstantsParser.g:2209:4: rule__STTypeDeclaration__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STTypeDeclaration__Group_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Alternatives_1_1"


    // $ANTLR start "rule__STInitializerExpression__Alternatives"
    // InternalGlobalConstantsParser.g:2217:1: rule__STInitializerExpression__Alternatives : ( ( ruleSTElementaryInitializerExpression ) | ( ruleSTArrayInitializerExpression ) | ( ruleSTStructInitializerExpression ) );
    public final void rule__STInitializerExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2221:1: ( ( ruleSTElementaryInitializerExpression ) | ( ruleSTArrayInitializerExpression ) | ( ruleSTStructInitializerExpression ) )
            int alt3=3;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2222:2: ( ruleSTElementaryInitializerExpression )
                    {
                    // InternalGlobalConstantsParser.g:2222:2: ( ruleSTElementaryInitializerExpression )
                    // InternalGlobalConstantsParser.g:2223:3: ruleSTElementaryInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTInitializerExpressionAccess().getSTElementaryInitializerExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTElementaryInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTInitializerExpressionAccess().getSTElementaryInitializerExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2228:2: ( ruleSTArrayInitializerExpression )
                    {
                    // InternalGlobalConstantsParser.g:2228:2: ( ruleSTArrayInitializerExpression )
                    // InternalGlobalConstantsParser.g:2229:3: ruleSTArrayInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTInitializerExpressionAccess().getSTArrayInitializerExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTArrayInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTInitializerExpressionAccess().getSTArrayInitializerExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2234:2: ( ruleSTStructInitializerExpression )
                    {
                    // InternalGlobalConstantsParser.g:2234:2: ( ruleSTStructInitializerExpression )
                    // InternalGlobalConstantsParser.g:2235:3: ruleSTStructInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTInitializerExpressionAccess().getSTStructInitializerExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTStructInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTInitializerExpressionAccess().getSTStructInitializerExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpression__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives"
    // InternalGlobalConstantsParser.g:2244:1: rule__STStatement__Alternatives : ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) );
    public final void rule__STStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2248:1: ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==LDATE_AND_TIME||LA4_0==DATE_AND_TIME||LA4_0==LTIME_OF_DAY||LA4_0==TIME_OF_DAY||LA4_0==CONTINUE||LA4_0==WSTRING||LA4_0==REPEAT||LA4_0==RETURN||LA4_0==STRING||LA4_0==DWORD||LA4_0==FALSE||(LA4_0>=LDATE && LA4_0<=LWORD)||(LA4_0>=UDINT && LA4_0<=ULINT)||(LA4_0>=USINT && LA4_0<=DINT)||LA4_0==EXIT||(LA4_0>=LINT && LA4_0<=LTOD)||(LA4_0>=REAL && LA4_0<=SINT)||(LA4_0>=THIS && LA4_0<=TRUE)||LA4_0==UINT||(LA4_0>=WORD && LA4_0<=MOD)||LA4_0==TOD||LA4_0==XOR||(LA4_0>=DT && LA4_0<=LT)||LA4_0==OR||LA4_0==LeftParenthesis||LA4_0==PlusSign||LA4_0==HyphenMinus||(LA4_0>=D && LA4_0<=T)||(LA4_0>=RULE_NON_DECIMAL && LA4_0<=RULE_DECIMAL)||(LA4_0>=RULE_ID && LA4_0<=RULE_STRING)) ) {
                alt4=1;
            }
            else if ( (LA4_0==Semicolon) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2249:2: ( ( rule__STStatement__Group_0__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2249:2: ( ( rule__STStatement__Group_0__0 ) )
                    // InternalGlobalConstantsParser.g:2250:3: ( rule__STStatement__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }
                    // InternalGlobalConstantsParser.g:2251:3: ( rule__STStatement__Group_0__0 )
                    // InternalGlobalConstantsParser.g:2251:4: rule__STStatement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2255:2: ( ( rule__STStatement__Group_1__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2255:2: ( ( rule__STStatement__Group_1__0 ) )
                    // InternalGlobalConstantsParser.g:2256:3: ( rule__STStatement__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }
                    // InternalGlobalConstantsParser.g:2257:3: ( rule__STStatement__Group_1__0 )
                    // InternalGlobalConstantsParser.g:2257:4: rule__STStatement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives_0_0"
    // InternalGlobalConstantsParser.g:2265:1: rule__STStatement__Alternatives_0_0 : ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ( ruleSTAssignmentStatement ) ) | ( ruleSTCallStatement ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) | ( ( rule__STStatement__Group_0_0_9__0 ) ) );
    public final void rule__STStatement__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2269:1: ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ( ruleSTAssignmentStatement ) ) | ( ruleSTCallStatement ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) | ( ( rule__STStatement__Group_0_0_9__0 ) ) )
            int alt5=10;
            alt5 = dfa5.predict(input);
            switch (alt5) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2270:2: ( ruleSTIfStatement )
                    {
                    // InternalGlobalConstantsParser.g:2270:2: ( ruleSTIfStatement )
                    // InternalGlobalConstantsParser.g:2271:3: ruleSTIfStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTIfStatementParserRuleCall_0_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTIfStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTIfStatementParserRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2276:2: ( ruleSTCaseStatement )
                    {
                    // InternalGlobalConstantsParser.g:2276:2: ( ruleSTCaseStatement )
                    // InternalGlobalConstantsParser.g:2277:3: ruleSTCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCaseStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2282:2: ( ruleSTForStatement )
                    {
                    // InternalGlobalConstantsParser.g:2282:2: ( ruleSTForStatement )
                    // InternalGlobalConstantsParser.g:2283:3: ruleSTForStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTForStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:2288:2: ( ruleSTWhileStatement )
                    {
                    // InternalGlobalConstantsParser.g:2288:2: ( ruleSTWhileStatement )
                    // InternalGlobalConstantsParser.g:2289:3: ruleSTWhileStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTWhileStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGlobalConstantsParser.g:2294:2: ( ruleSTRepeatStatement )
                    {
                    // InternalGlobalConstantsParser.g:2294:2: ( ruleSTRepeatStatement )
                    // InternalGlobalConstantsParser.g:2295:3: ruleSTRepeatStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTRepeatStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalGlobalConstantsParser.g:2300:2: ( ( ruleSTAssignmentStatement ) )
                    {
                    // InternalGlobalConstantsParser.g:2300:2: ( ( ruleSTAssignmentStatement ) )
                    // InternalGlobalConstantsParser.g:2301:3: ( ruleSTAssignmentStatement )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }
                    // InternalGlobalConstantsParser.g:2302:3: ( ruleSTAssignmentStatement )
                    // InternalGlobalConstantsParser.g:2302:4: ruleSTAssignmentStatement
                    {
                    pushFollow(FOLLOW_2);
                    ruleSTAssignmentStatement();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalGlobalConstantsParser.g:2306:2: ( ruleSTCallStatement )
                    {
                    // InternalGlobalConstantsParser.g:2306:2: ( ruleSTCallStatement )
                    // InternalGlobalConstantsParser.g:2307:3: ruleSTCallStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTCallStatementParserRuleCall_0_0_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTCallStatementParserRuleCall_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalGlobalConstantsParser.g:2312:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2312:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    // InternalGlobalConstantsParser.g:2313:3: ( rule__STStatement__Group_0_0_7__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }
                    // InternalGlobalConstantsParser.g:2314:3: ( rule__STStatement__Group_0_0_7__0 )
                    // InternalGlobalConstantsParser.g:2314:4: rule__STStatement__Group_0_0_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalGlobalConstantsParser.g:2318:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2318:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    // InternalGlobalConstantsParser.g:2319:3: ( rule__STStatement__Group_0_0_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }
                    // InternalGlobalConstantsParser.g:2320:3: ( rule__STStatement__Group_0_0_8__0 )
                    // InternalGlobalConstantsParser.g:2320:4: rule__STStatement__Group_0_0_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalGlobalConstantsParser.g:2324:2: ( ( rule__STStatement__Group_0_0_9__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2324:2: ( ( rule__STStatement__Group_0_0_9__0 ) )
                    // InternalGlobalConstantsParser.g:2325:3: ( rule__STStatement__Group_0_0_9__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_9()); 
                    }
                    // InternalGlobalConstantsParser.g:2326:3: ( rule__STStatement__Group_0_0_9__0 )
                    // InternalGlobalConstantsParser.g:2326:4: rule__STStatement__Group_0_0_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives_0_0"


    // $ANTLR start "rule__STCallArgument__Alternatives"
    // InternalGlobalConstantsParser.g:2334:1: rule__STCallArgument__Alternatives : ( ( ruleSTCallUnnamedArgument ) | ( ruleSTCallNamedInputArgument ) | ( ruleSTCallNamedOutputArgument ) );
    public final void rule__STCallArgument__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2338:1: ( ( ruleSTCallUnnamedArgument ) | ( ruleSTCallNamedInputArgument ) | ( ruleSTCallNamedOutputArgument ) )
            int alt6=3;
            switch ( input.LA(1) ) {
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case THIS:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case AND:
            case INT:
            case LDT:
            case MOD:
            case TOD:
            case XOR:
            case DT:
            case LD:
            case LT:
            case OR:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_DECIMAL:
            case RULE_STRING:
                {
                alt6=1;
                }
                break;
            case RULE_ID:
                {
                switch ( input.LA(2) ) {
                case ColonEqualsSign:
                    {
                    alt6=2;
                    }
                    break;
                case EOF:
                case AND:
                case MOD:
                case XOR:
                case AsteriskAsterisk:
                case FullStopFullStop:
                case LessThanSignEqualsSign:
                case LessThanSignGreaterThanSign:
                case GreaterThanSignEqualsSign:
                case OR:
                case Ampersand:
                case LeftParenthesis:
                case RightParenthesis:
                case Asterisk:
                case PlusSign:
                case Comma:
                case HyphenMinus:
                case FullStop:
                case Solidus:
                case LessThanSign:
                case EqualsSign:
                case GreaterThanSign:
                case LeftSquareBracket:
                    {
                    alt6=1;
                    }
                    break;
                case EqualsSignGreaterThanSign:
                    {
                    alt6=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 2, input);

                    throw nvae;
                }

                }
                break;
            case NOT:
                {
                int LA6_3 = input.LA(2);

                if ( (LA6_3==RULE_ID) ) {
                    int LA6_6 = input.LA(3);

                    if ( (LA6_6==EOF||LA6_6==AND||LA6_6==MOD||LA6_6==XOR||(LA6_6>=AsteriskAsterisk && LA6_6<=FullStopFullStop)||(LA6_6>=LessThanSignEqualsSign && LA6_6<=LessThanSignGreaterThanSign)||LA6_6==GreaterThanSignEqualsSign||LA6_6==OR||(LA6_6>=Ampersand && LA6_6<=Solidus)||(LA6_6>=LessThanSign && LA6_6<=GreaterThanSign)||LA6_6==LeftSquareBracket) ) {
                        alt6=1;
                    }
                    else if ( (LA6_6==EqualsSignGreaterThanSign) ) {
                        alt6=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 6, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA6_3==LDATE_AND_TIME||LA6_3==DATE_AND_TIME||LA6_3==LTIME_OF_DAY||LA6_3==TIME_OF_DAY||LA6_3==WSTRING||LA6_3==STRING||LA6_3==DWORD||LA6_3==FALSE||(LA6_3>=LDATE && LA6_3<=LWORD)||(LA6_3>=UDINT && LA6_3<=ULINT)||(LA6_3>=USINT && LA6_3<=WCHAR)||(LA6_3>=BOOL && LA6_3<=BYTE)||(LA6_3>=CHAR && LA6_3<=DINT)||(LA6_3>=LINT && LA6_3<=LTOD)||(LA6_3>=REAL && LA6_3<=SINT)||(LA6_3>=THIS && LA6_3<=TRUE)||LA6_3==UINT||(LA6_3>=WORD && LA6_3<=AND)||(LA6_3>=INT && LA6_3<=NOT)||LA6_3==TOD||LA6_3==XOR||LA6_3==DT||(LA6_3>=LD && LA6_3<=LT)||LA6_3==OR||LA6_3==LeftParenthesis||LA6_3==PlusSign||LA6_3==HyphenMinus||(LA6_3>=D && LA6_3<=T)||(LA6_3>=RULE_NON_DECIMAL && LA6_3<=RULE_DECIMAL)||LA6_3==RULE_STRING) ) {
                    alt6=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2339:2: ( ruleSTCallUnnamedArgument )
                    {
                    // InternalGlobalConstantsParser.g:2339:2: ( ruleSTCallUnnamedArgument )
                    // InternalGlobalConstantsParser.g:2340:3: ruleSTCallUnnamedArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallUnnamedArgumentParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallUnnamedArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallUnnamedArgumentParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2345:2: ( ruleSTCallNamedInputArgument )
                    {
                    // InternalGlobalConstantsParser.g:2345:2: ( ruleSTCallNamedInputArgument )
                    // InternalGlobalConstantsParser.g:2346:3: ruleSTCallNamedInputArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallNamedInputArgumentParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallNamedInputArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallNamedInputArgumentParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2351:2: ( ruleSTCallNamedOutputArgument )
                    {
                    // InternalGlobalConstantsParser.g:2351:2: ( ruleSTCallNamedOutputArgument )
                    // InternalGlobalConstantsParser.g:2352:3: ruleSTCallNamedOutputArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallNamedOutputArgumentParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallNamedOutputArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallNamedOutputArgumentParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallArgument__Alternatives"


    // $ANTLR start "rule__STUnaryExpression__Alternatives"
    // InternalGlobalConstantsParser.g:2361:1: rule__STUnaryExpression__Alternatives : ( ( ( ruleSTAccessExpression ) ) | ( ( rule__STUnaryExpression__Group_1__0 ) ) );
    public final void rule__STUnaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2365:1: ( ( ( ruleSTAccessExpression ) ) | ( ( rule__STUnaryExpression__Group_1__0 ) ) )
            int alt7=2;
            switch ( input.LA(1) ) {
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case THIS:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case AND:
            case INT:
            case LDT:
            case MOD:
            case TOD:
            case XOR:
            case DT:
            case LD:
            case LT:
            case OR:
            case LeftParenthesis:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_DECIMAL:
            case RULE_ID:
            case RULE_STRING:
                {
                alt7=1;
                }
                break;
            case PlusSign:
                {
                int LA7_2 = input.LA(2);

                if ( (synpred17_InternalGlobalConstantsParser()) ) {
                    alt7=1;
                }
                else if ( (true) ) {
                    alt7=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 2, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA7_3 = input.LA(2);

                if ( (synpred17_InternalGlobalConstantsParser()) ) {
                    alt7=1;
                }
                else if ( (true) ) {
                    alt7=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 3, input);

                    throw nvae;
                }
                }
                break;
            case NOT:
                {
                alt7=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2366:2: ( ( ruleSTAccessExpression ) )
                    {
                    // InternalGlobalConstantsParser.g:2366:2: ( ( ruleSTAccessExpression ) )
                    // InternalGlobalConstantsParser.g:2367:3: ( ruleSTAccessExpression )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
                    }
                    // InternalGlobalConstantsParser.g:2368:3: ( ruleSTAccessExpression )
                    // InternalGlobalConstantsParser.g:2368:4: ruleSTAccessExpression
                    {
                    pushFollow(FOLLOW_2);
                    ruleSTAccessExpression();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2372:2: ( ( rule__STUnaryExpression__Group_1__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2372:2: ( ( rule__STUnaryExpression__Group_1__0 ) )
                    // InternalGlobalConstantsParser.g:2373:3: ( rule__STUnaryExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getGroup_1()); 
                    }
                    // InternalGlobalConstantsParser.g:2374:3: ( rule__STUnaryExpression__Group_1__0 )
                    // InternalGlobalConstantsParser.g:2374:4: rule__STUnaryExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STUnaryExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Alternatives"


    // $ANTLR start "rule__STAccessExpression__Alternatives_1"
    // InternalGlobalConstantsParser.g:2382:1: rule__STAccessExpression__Alternatives_1 : ( ( ( rule__STAccessExpression__Group_1_0__0 ) ) | ( ( rule__STAccessExpression__Group_1_1__0 ) ) );
    public final void rule__STAccessExpression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2386:1: ( ( ( rule__STAccessExpression__Group_1_0__0 ) ) | ( ( rule__STAccessExpression__Group_1_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==FullStop) ) {
                alt8=1;
            }
            else if ( (LA8_0==LeftSquareBracket) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2387:2: ( ( rule__STAccessExpression__Group_1_0__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2387:2: ( ( rule__STAccessExpression__Group_1_0__0 ) )
                    // InternalGlobalConstantsParser.g:2388:3: ( rule__STAccessExpression__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_0()); 
                    }
                    // InternalGlobalConstantsParser.g:2389:3: ( rule__STAccessExpression__Group_1_0__0 )
                    // InternalGlobalConstantsParser.g:2389:4: rule__STAccessExpression__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAccessExpression__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2393:2: ( ( rule__STAccessExpression__Group_1_1__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2393:2: ( ( rule__STAccessExpression__Group_1_1__0 ) )
                    // InternalGlobalConstantsParser.g:2394:3: ( rule__STAccessExpression__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1()); 
                    }
                    // InternalGlobalConstantsParser.g:2395:3: ( rule__STAccessExpression__Group_1_1__0 )
                    // InternalGlobalConstantsParser.g:2395:4: rule__STAccessExpression__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAccessExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Alternatives_1"


    // $ANTLR start "rule__STAccessExpression__MemberAlternatives_1_0_2_0"
    // InternalGlobalConstantsParser.g:2403:1: rule__STAccessExpression__MemberAlternatives_1_0_2_0 : ( ( ruleSTFeatureExpression ) | ( ruleSTMultibitPartialExpression ) );
    public final void rule__STAccessExpression__MemberAlternatives_1_0_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2407:1: ( ( ruleSTFeatureExpression ) | ( ruleSTMultibitPartialExpression ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==AND||LA9_0==MOD||LA9_0==XOR||LA9_0==DT||(LA9_0>=LD && LA9_0<=LT)||LA9_0==OR||LA9_0==D||LA9_0==RULE_ID) ) {
                alt9=1;
            }
            else if ( ((LA9_0>=B && LA9_0<=X)||LA9_0==LeftParenthesis||LA9_0==RULE_INT) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2408:2: ( ruleSTFeatureExpression )
                    {
                    // InternalGlobalConstantsParser.g:2408:2: ( ruleSTFeatureExpression )
                    // InternalGlobalConstantsParser.g:2409:3: ruleSTFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getMemberSTFeatureExpressionParserRuleCall_1_0_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getMemberSTFeatureExpressionParserRuleCall_1_0_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2414:2: ( ruleSTMultibitPartialExpression )
                    {
                    // InternalGlobalConstantsParser.g:2414:2: ( ruleSTMultibitPartialExpression )
                    // InternalGlobalConstantsParser.g:2415:3: ruleSTMultibitPartialExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getMemberSTMultibitPartialExpressionParserRuleCall_1_0_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTMultibitPartialExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getMemberSTMultibitPartialExpressionParserRuleCall_1_0_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__MemberAlternatives_1_0_2_0"


    // $ANTLR start "rule__STPrimaryExpression__Alternatives"
    // InternalGlobalConstantsParser.g:2424:1: rule__STPrimaryExpression__Alternatives : ( ( ( rule__STPrimaryExpression__Group_0__0 ) ) | ( ruleSTFeatureExpression ) | ( ruleSTBuiltinFeatureExpression ) | ( ruleSTLiteralExpressions ) );
    public final void rule__STPrimaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2428:1: ( ( ( rule__STPrimaryExpression__Group_0__0 ) ) | ( ruleSTFeatureExpression ) | ( ruleSTBuiltinFeatureExpression ) | ( ruleSTLiteralExpressions ) )
            int alt10=4;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                alt10=1;
                }
                break;
            case AND:
            case MOD:
            case XOR:
            case OR:
            case RULE_ID:
                {
                alt10=2;
                }
                break;
            case LT:
                {
                int LA10_3 = input.LA(2);

                if ( (LA10_3==EOF||LA10_3==END_REPEAT||LA10_3==THEN||LA10_3==AND||LA10_3==MOD||LA10_3==XOR||(LA10_3>=AsteriskAsterisk && LA10_3<=LessThanSignGreaterThanSign)||LA10_3==GreaterThanSignEqualsSign||(LA10_3>=BY && LA10_3<=DO)||LA10_3==OF||(LA10_3>=OR && LA10_3<=TO)||(LA10_3>=Ampersand && LA10_3<=GreaterThanSign)||(LA10_3>=LeftSquareBracket && LA10_3<=RightSquareBracket)) ) {
                    alt10=2;
                }
                else if ( (LA10_3==NumberSign) ) {
                    alt10=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 3, input);

                    throw nvae;
                }
                }
                break;
            case D:
                {
                int LA10_4 = input.LA(2);

                if ( (LA10_4==EOF||LA10_4==END_REPEAT||LA10_4==THEN||LA10_4==AND||LA10_4==MOD||LA10_4==XOR||(LA10_4>=AsteriskAsterisk && LA10_4<=LessThanSignGreaterThanSign)||LA10_4==GreaterThanSignEqualsSign||(LA10_4>=BY && LA10_4<=DO)||LA10_4==OF||(LA10_4>=OR && LA10_4<=TO)||(LA10_4>=Ampersand && LA10_4<=GreaterThanSign)||(LA10_4>=LeftSquareBracket && LA10_4<=RightSquareBracket)) ) {
                    alt10=2;
                }
                else if ( (LA10_4==NumberSign) ) {
                    alt10=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 4, input);

                    throw nvae;
                }
                }
                break;
            case DT:
                {
                int LA10_5 = input.LA(2);

                if ( (LA10_5==NumberSign) ) {
                    alt10=4;
                }
                else if ( (LA10_5==EOF||LA10_5==END_REPEAT||LA10_5==THEN||LA10_5==AND||LA10_5==MOD||LA10_5==XOR||(LA10_5>=AsteriskAsterisk && LA10_5<=LessThanSignGreaterThanSign)||LA10_5==GreaterThanSignEqualsSign||(LA10_5>=BY && LA10_5<=DO)||LA10_5==OF||(LA10_5>=OR && LA10_5<=TO)||(LA10_5>=Ampersand && LA10_5<=GreaterThanSign)||(LA10_5>=LeftSquareBracket && LA10_5<=RightSquareBracket)) ) {
                    alt10=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 5, input);

                    throw nvae;
                }
                }
                break;
            case LD:
                {
                int LA10_6 = input.LA(2);

                if ( (LA10_6==NumberSign) ) {
                    alt10=4;
                }
                else if ( (LA10_6==EOF||LA10_6==END_REPEAT||LA10_6==THEN||LA10_6==AND||LA10_6==MOD||LA10_6==XOR||(LA10_6>=AsteriskAsterisk && LA10_6<=LessThanSignGreaterThanSign)||LA10_6==GreaterThanSignEqualsSign||(LA10_6>=BY && LA10_6<=DO)||LA10_6==OF||(LA10_6>=OR && LA10_6<=TO)||(LA10_6>=Ampersand && LA10_6<=GreaterThanSign)||(LA10_6>=LeftSquareBracket && LA10_6<=RightSquareBracket)) ) {
                    alt10=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 6, input);

                    throw nvae;
                }
                }
                break;
            case THIS:
                {
                alt10=3;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case PlusSign:
            case HyphenMinus:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_DECIMAL:
            case RULE_STRING:
                {
                alt10=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2429:2: ( ( rule__STPrimaryExpression__Group_0__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2429:2: ( ( rule__STPrimaryExpression__Group_0__0 ) )
                    // InternalGlobalConstantsParser.g:2430:3: ( rule__STPrimaryExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getGroup_0()); 
                    }
                    // InternalGlobalConstantsParser.g:2431:3: ( rule__STPrimaryExpression__Group_0__0 )
                    // InternalGlobalConstantsParser.g:2431:4: rule__STPrimaryExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STPrimaryExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2435:2: ( ruleSTFeatureExpression )
                    {
                    // InternalGlobalConstantsParser.g:2435:2: ( ruleSTFeatureExpression )
                    // InternalGlobalConstantsParser.g:2436:3: ruleSTFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTFeatureExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTFeatureExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2441:2: ( ruleSTBuiltinFeatureExpression )
                    {
                    // InternalGlobalConstantsParser.g:2441:2: ( ruleSTBuiltinFeatureExpression )
                    // InternalGlobalConstantsParser.g:2442:3: ruleSTBuiltinFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTBuiltinFeatureExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTBuiltinFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTBuiltinFeatureExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:2447:2: ( ruleSTLiteralExpressions )
                    {
                    // InternalGlobalConstantsParser.g:2447:2: ( ruleSTLiteralExpressions )
                    // InternalGlobalConstantsParser.g:2448:3: ruleSTLiteralExpressions
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTLiteralExpressionsParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTLiteralExpressions();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTLiteralExpressionsParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Alternatives"


    // $ANTLR start "rule__STFeatureName__Alternatives"
    // InternalGlobalConstantsParser.g:2457:1: rule__STFeatureName__Alternatives : ( ( RULE_ID ) | ( LT ) | ( AND ) | ( OR ) | ( XOR ) | ( MOD ) | ( D ) | ( DT ) | ( LD ) );
    public final void rule__STFeatureName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2461:1: ( ( RULE_ID ) | ( LT ) | ( AND ) | ( OR ) | ( XOR ) | ( MOD ) | ( D ) | ( DT ) | ( LD ) )
            int alt11=9;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt11=1;
                }
                break;
            case LT:
                {
                alt11=2;
                }
                break;
            case AND:
                {
                alt11=3;
                }
                break;
            case OR:
                {
                alt11=4;
                }
                break;
            case XOR:
                {
                alt11=5;
                }
                break;
            case MOD:
                {
                alt11=6;
                }
                break;
            case D:
                {
                alt11=7;
                }
                break;
            case DT:
                {
                alt11=8;
                }
                break;
            case LD:
                {
                alt11=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2462:2: ( RULE_ID )
                    {
                    // InternalGlobalConstantsParser.g:2462:2: ( RULE_ID )
                    // InternalGlobalConstantsParser.g:2463:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2468:2: ( LT )
                    {
                    // InternalGlobalConstantsParser.g:2468:2: ( LT )
                    // InternalGlobalConstantsParser.g:2469:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getLTKeyword_1()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getLTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2474:2: ( AND )
                    {
                    // InternalGlobalConstantsParser.g:2474:2: ( AND )
                    // InternalGlobalConstantsParser.g:2475:3: AND
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getANDKeyword_2()); 
                    }
                    match(input,AND,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getANDKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:2480:2: ( OR )
                    {
                    // InternalGlobalConstantsParser.g:2480:2: ( OR )
                    // InternalGlobalConstantsParser.g:2481:3: OR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getORKeyword_3()); 
                    }
                    match(input,OR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getORKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGlobalConstantsParser.g:2486:2: ( XOR )
                    {
                    // InternalGlobalConstantsParser.g:2486:2: ( XOR )
                    // InternalGlobalConstantsParser.g:2487:3: XOR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getXORKeyword_4()); 
                    }
                    match(input,XOR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getXORKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalGlobalConstantsParser.g:2492:2: ( MOD )
                    {
                    // InternalGlobalConstantsParser.g:2492:2: ( MOD )
                    // InternalGlobalConstantsParser.g:2493:3: MOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getMODKeyword_5()); 
                    }
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getMODKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalGlobalConstantsParser.g:2498:2: ( D )
                    {
                    // InternalGlobalConstantsParser.g:2498:2: ( D )
                    // InternalGlobalConstantsParser.g:2499:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getDKeyword_6()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getDKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalGlobalConstantsParser.g:2504:2: ( DT )
                    {
                    // InternalGlobalConstantsParser.g:2504:2: ( DT )
                    // InternalGlobalConstantsParser.g:2505:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getDTKeyword_7()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getDTKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalGlobalConstantsParser.g:2510:2: ( LD )
                    {
                    // InternalGlobalConstantsParser.g:2510:2: ( LD )
                    // InternalGlobalConstantsParser.g:2511:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getLDKeyword_8()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getLDKeyword_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureName__Alternatives"


    // $ANTLR start "rule__STMultibitPartialExpression__Alternatives_2"
    // InternalGlobalConstantsParser.g:2520:1: rule__STMultibitPartialExpression__Alternatives_2 : ( ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) ) | ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) ) );
    public final void rule__STMultibitPartialExpression__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2524:1: ( ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) ) | ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_INT) ) {
                alt12=1;
            }
            else if ( (LA12_0==LeftParenthesis) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2525:2: ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2525:2: ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) )
                    // InternalGlobalConstantsParser.g:2526:3: ( rule__STMultibitPartialExpression__IndexAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexAssignment_2_0()); 
                    }
                    // InternalGlobalConstantsParser.g:2527:3: ( rule__STMultibitPartialExpression__IndexAssignment_2_0 )
                    // InternalGlobalConstantsParser.g:2527:4: rule__STMultibitPartialExpression__IndexAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__IndexAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2531:2: ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) )
                    {
                    // InternalGlobalConstantsParser.g:2531:2: ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) )
                    // InternalGlobalConstantsParser.g:2532:3: ( rule__STMultibitPartialExpression__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup_2_1()); 
                    }
                    // InternalGlobalConstantsParser.g:2533:3: ( rule__STMultibitPartialExpression__Group_2_1__0 )
                    // InternalGlobalConstantsParser.g:2533:4: rule__STMultibitPartialExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Alternatives_2"


    // $ANTLR start "rule__STLiteralExpressions__Alternatives"
    // InternalGlobalConstantsParser.g:2541:1: rule__STLiteralExpressions__Alternatives : ( ( ruleSTNumericLiteral ) | ( ruleSTDateLiteral ) | ( ruleSTTimeLiteral ) | ( ruleSTTimeOfDayLiteral ) | ( ruleSTDateAndTimeLiteral ) | ( ruleSTStringLiteral ) );
    public final void rule__STLiteralExpressions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2545:1: ( ( ruleSTNumericLiteral ) | ( ruleSTDateLiteral ) | ( ruleSTTimeLiteral ) | ( ruleSTTimeOfDayLiteral ) | ( ruleSTDateAndTimeLiteral ) | ( ruleSTStringLiteral ) )
            int alt13=6;
            switch ( input.LA(1) ) {
            case DWORD:
            case FALSE:
            case LREAL:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case BOOL:
            case BYTE:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case PlusSign:
            case HyphenMinus:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_DECIMAL:
                {
                alt13=1;
                }
                break;
            case LDATE:
            case DATE:
            case LD:
            case D:
                {
                alt13=2;
                }
                break;
            case LTIME:
            case TIME:
            case LT:
            case T:
                {
                alt13=3;
                }
                break;
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt13=4;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt13=5;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
            case RULE_STRING:
                {
                alt13=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2546:2: ( ruleSTNumericLiteral )
                    {
                    // InternalGlobalConstantsParser.g:2546:2: ( ruleSTNumericLiteral )
                    // InternalGlobalConstantsParser.g:2547:3: ruleSTNumericLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTNumericLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2552:2: ( ruleSTDateLiteral )
                    {
                    // InternalGlobalConstantsParser.g:2552:2: ( ruleSTDateLiteral )
                    // InternalGlobalConstantsParser.g:2553:3: ruleSTDateLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2558:2: ( ruleSTTimeLiteral )
                    {
                    // InternalGlobalConstantsParser.g:2558:2: ( ruleSTTimeLiteral )
                    // InternalGlobalConstantsParser.g:2559:3: ruleSTTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:2564:2: ( ruleSTTimeOfDayLiteral )
                    {
                    // InternalGlobalConstantsParser.g:2564:2: ( ruleSTTimeOfDayLiteral )
                    // InternalGlobalConstantsParser.g:2565:3: ruleSTTimeOfDayLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeOfDayLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGlobalConstantsParser.g:2570:2: ( ruleSTDateAndTimeLiteral )
                    {
                    // InternalGlobalConstantsParser.g:2570:2: ( ruleSTDateAndTimeLiteral )
                    // InternalGlobalConstantsParser.g:2571:3: ruleSTDateAndTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateAndTimeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalGlobalConstantsParser.g:2576:2: ( ruleSTStringLiteral )
                    {
                    // InternalGlobalConstantsParser.g:2576:2: ( ruleSTStringLiteral )
                    // InternalGlobalConstantsParser.g:2577:3: ruleSTStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTStringLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Alternatives"


    // $ANTLR start "rule__STNumericLiteralType__Alternatives"
    // InternalGlobalConstantsParser.g:2586:1: rule__STNumericLiteralType__Alternatives : ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) );
    public final void rule__STNumericLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2590:1: ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==DWORD||LA14_0==LWORD||(LA14_0>=BOOL && LA14_0<=BYTE)||LA14_0==WORD) ) {
                alt14=1;
            }
            else if ( (LA14_0==LREAL||(LA14_0>=UDINT && LA14_0<=ULINT)||LA14_0==USINT||LA14_0==DINT||LA14_0==LINT||(LA14_0>=REAL && LA14_0<=SINT)||LA14_0==UINT||LA14_0==INT) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2591:2: ( ruleSTAnyBitType )
                    {
                    // InternalGlobalConstantsParser.g:2591:2: ( ruleSTAnyBitType )
                    // InternalGlobalConstantsParser.g:2592:3: ruleSTAnyBitType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBitType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2597:2: ( ruleSTAnyNumType )
                    {
                    // InternalGlobalConstantsParser.g:2597:2: ( ruleSTAnyNumType )
                    // InternalGlobalConstantsParser.g:2598:3: ruleSTAnyNumType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyNumType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteralType__Alternatives"


    // $ANTLR start "rule__STDateLiteralType__Alternatives"
    // InternalGlobalConstantsParser.g:2607:1: rule__STDateLiteralType__Alternatives : ( ( ruleSTDateType ) | ( D ) | ( LD ) );
    public final void rule__STDateLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2611:1: ( ( ruleSTDateType ) | ( D ) | ( LD ) )
            int alt15=3;
            switch ( input.LA(1) ) {
            case LDATE:
            case DATE:
                {
                alt15=1;
                }
                break;
            case D:
                {
                alt15=2;
                }
                break;
            case LD:
                {
                alt15=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2612:2: ( ruleSTDateType )
                    {
                    // InternalGlobalConstantsParser.g:2612:2: ( ruleSTDateType )
                    // InternalGlobalConstantsParser.g:2613:3: ruleSTDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2618:2: ( D )
                    {
                    // InternalGlobalConstantsParser.g:2618:2: ( D )
                    // InternalGlobalConstantsParser.g:2619:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getDKeyword_1()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getDKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2624:2: ( LD )
                    {
                    // InternalGlobalConstantsParser.g:2624:2: ( LD )
                    // InternalGlobalConstantsParser.g:2625:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getLDKeyword_2()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getLDKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteralType__Alternatives"


    // $ANTLR start "rule__STTimeLiteralType__Alternatives"
    // InternalGlobalConstantsParser.g:2634:1: rule__STTimeLiteralType__Alternatives : ( ( ruleSTAnyDurationType ) | ( T ) | ( LT ) );
    public final void rule__STTimeLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2638:1: ( ( ruleSTAnyDurationType ) | ( T ) | ( LT ) )
            int alt16=3;
            switch ( input.LA(1) ) {
            case LTIME:
            case TIME:
                {
                alt16=1;
                }
                break;
            case T:
                {
                alt16=2;
                }
                break;
            case LT:
                {
                alt16=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2639:2: ( ruleSTAnyDurationType )
                    {
                    // InternalGlobalConstantsParser.g:2639:2: ( ruleSTAnyDurationType )
                    // InternalGlobalConstantsParser.g:2640:3: ruleSTAnyDurationType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getSTAnyDurationTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDurationType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getSTAnyDurationTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2645:2: ( T )
                    {
                    // InternalGlobalConstantsParser.g:2645:2: ( T )
                    // InternalGlobalConstantsParser.g:2646:3: T
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getTKeyword_1()); 
                    }
                    match(input,T,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2651:2: ( LT )
                    {
                    // InternalGlobalConstantsParser.g:2651:2: ( LT )
                    // InternalGlobalConstantsParser.g:2652:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getLTKeyword_2()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getLTKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteralType__Alternatives"


    // $ANTLR start "rule__STAnyType__Alternatives"
    // InternalGlobalConstantsParser.g:2661:1: rule__STAnyType__Alternatives : ( ( RULE_ID ) | ( ruleSTAnyBuiltinType ) );
    public final void rule__STAnyType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2665:1: ( ( RULE_ID ) | ( ruleSTAnyBuiltinType ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_ID) ) {
                alt17=1;
            }
            else if ( (LA17_0==LDATE_AND_TIME||LA17_0==DATE_AND_TIME||LA17_0==LTIME_OF_DAY||LA17_0==TIME_OF_DAY||LA17_0==WSTRING||LA17_0==STRING||LA17_0==DWORD||(LA17_0>=LDATE && LA17_0<=LWORD)||(LA17_0>=UDINT && LA17_0<=ULINT)||(LA17_0>=USINT && LA17_0<=WCHAR)||(LA17_0>=BOOL && LA17_0<=BYTE)||(LA17_0>=CHAR && LA17_0<=DINT)||(LA17_0>=LINT && LA17_0<=LTOD)||(LA17_0>=REAL && LA17_0<=SINT)||LA17_0==TIME||LA17_0==UINT||LA17_0==WORD||(LA17_0>=INT && LA17_0<=LDT)||LA17_0==TOD||LA17_0==DT) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2666:2: ( RULE_ID )
                    {
                    // InternalGlobalConstantsParser.g:2666:2: ( RULE_ID )
                    // InternalGlobalConstantsParser.g:2667:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyTypeAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyTypeAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2672:2: ( ruleSTAnyBuiltinType )
                    {
                    // InternalGlobalConstantsParser.g:2672:2: ( ruleSTAnyBuiltinType )
                    // InternalGlobalConstantsParser.g:2673:3: ruleSTAnyBuiltinType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyTypeAccess().getSTAnyBuiltinTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBuiltinType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyTypeAccess().getSTAnyBuiltinTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyType__Alternatives"


    // $ANTLR start "rule__STAnyBuiltinType__Alternatives"
    // InternalGlobalConstantsParser.g:2682:1: rule__STAnyBuiltinType__Alternatives : ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) | ( ruleSTAnyDurationType ) | ( ruleSTAnyDateType ) | ( ruleSTAnyCharsType ) );
    public final void rule__STAnyBuiltinType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2686:1: ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) | ( ruleSTAnyDurationType ) | ( ruleSTAnyDateType ) | ( ruleSTAnyCharsType ) )
            int alt18=5;
            switch ( input.LA(1) ) {
            case DWORD:
            case LWORD:
            case BOOL:
            case BYTE:
            case WORD:
                {
                alt18=1;
                }
                break;
            case LREAL:
            case UDINT:
            case ULINT:
            case USINT:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case UINT:
            case INT:
                {
                alt18=2;
                }
                break;
            case LTIME:
            case TIME:
                {
                alt18=3;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LDATE:
            case DATE:
            case LTOD:
            case LDT:
            case TOD:
            case DT:
                {
                alt18=4;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
                {
                alt18=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2687:2: ( ruleSTAnyBitType )
                    {
                    // InternalGlobalConstantsParser.g:2687:2: ( ruleSTAnyBitType )
                    // InternalGlobalConstantsParser.g:2688:3: ruleSTAnyBitType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBitType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2693:2: ( ruleSTAnyNumType )
                    {
                    // InternalGlobalConstantsParser.g:2693:2: ( ruleSTAnyNumType )
                    // InternalGlobalConstantsParser.g:2694:3: ruleSTAnyNumType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyNumType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2699:2: ( ruleSTAnyDurationType )
                    {
                    // InternalGlobalConstantsParser.g:2699:2: ( ruleSTAnyDurationType )
                    // InternalGlobalConstantsParser.g:2700:3: ruleSTAnyDurationType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDurationTypeParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDurationType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDurationTypeParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:2705:2: ( ruleSTAnyDateType )
                    {
                    // InternalGlobalConstantsParser.g:2705:2: ( ruleSTAnyDateType )
                    // InternalGlobalConstantsParser.g:2706:3: ruleSTAnyDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDateTypeParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDateTypeParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGlobalConstantsParser.g:2711:2: ( ruleSTAnyCharsType )
                    {
                    // InternalGlobalConstantsParser.g:2711:2: ( ruleSTAnyCharsType )
                    // InternalGlobalConstantsParser.g:2712:3: ruleSTAnyCharsType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyCharsTypeParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyCharsType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyCharsTypeParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyBuiltinType__Alternatives"


    // $ANTLR start "rule__STAnyBitType__Alternatives"
    // InternalGlobalConstantsParser.g:2721:1: rule__STAnyBitType__Alternatives : ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) );
    public final void rule__STAnyBitType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2725:1: ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) )
            int alt19=5;
            switch ( input.LA(1) ) {
            case BOOL:
                {
                alt19=1;
                }
                break;
            case BYTE:
                {
                alt19=2;
                }
                break;
            case WORD:
                {
                alt19=3;
                }
                break;
            case DWORD:
                {
                alt19=4;
                }
                break;
            case LWORD:
                {
                alt19=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2726:2: ( BOOL )
                    {
                    // InternalGlobalConstantsParser.g:2726:2: ( BOOL )
                    // InternalGlobalConstantsParser.g:2727:3: BOOL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getBOOLKeyword_0()); 
                    }
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getBOOLKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2732:2: ( BYTE )
                    {
                    // InternalGlobalConstantsParser.g:2732:2: ( BYTE )
                    // InternalGlobalConstantsParser.g:2733:3: BYTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getBYTEKeyword_1()); 
                    }
                    match(input,BYTE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getBYTEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2738:2: ( WORD )
                    {
                    // InternalGlobalConstantsParser.g:2738:2: ( WORD )
                    // InternalGlobalConstantsParser.g:2739:3: WORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getWORDKeyword_2()); 
                    }
                    match(input,WORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getWORDKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:2744:2: ( DWORD )
                    {
                    // InternalGlobalConstantsParser.g:2744:2: ( DWORD )
                    // InternalGlobalConstantsParser.g:2745:3: DWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getDWORDKeyword_3()); 
                    }
                    match(input,DWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getDWORDKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGlobalConstantsParser.g:2750:2: ( LWORD )
                    {
                    // InternalGlobalConstantsParser.g:2750:2: ( LWORD )
                    // InternalGlobalConstantsParser.g:2751:3: LWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getLWORDKeyword_4()); 
                    }
                    match(input,LWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getLWORDKeyword_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyBitType__Alternatives"


    // $ANTLR start "rule__STAnyNumType__Alternatives"
    // InternalGlobalConstantsParser.g:2760:1: rule__STAnyNumType__Alternatives : ( ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) );
    public final void rule__STAnyNumType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2764:1: ( ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) )
            int alt20=10;
            switch ( input.LA(1) ) {
            case SINT:
                {
                alt20=1;
                }
                break;
            case INT:
                {
                alt20=2;
                }
                break;
            case DINT:
                {
                alt20=3;
                }
                break;
            case LINT:
                {
                alt20=4;
                }
                break;
            case USINT:
                {
                alt20=5;
                }
                break;
            case UINT:
                {
                alt20=6;
                }
                break;
            case UDINT:
                {
                alt20=7;
                }
                break;
            case ULINT:
                {
                alt20=8;
                }
                break;
            case REAL:
                {
                alt20=9;
                }
                break;
            case LREAL:
                {
                alt20=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2765:2: ( SINT )
                    {
                    // InternalGlobalConstantsParser.g:2765:2: ( SINT )
                    // InternalGlobalConstantsParser.g:2766:3: SINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getSINTKeyword_0()); 
                    }
                    match(input,SINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getSINTKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2771:2: ( INT )
                    {
                    // InternalGlobalConstantsParser.g:2771:2: ( INT )
                    // InternalGlobalConstantsParser.g:2772:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getINTKeyword_1()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getINTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2777:2: ( DINT )
                    {
                    // InternalGlobalConstantsParser.g:2777:2: ( DINT )
                    // InternalGlobalConstantsParser.g:2778:3: DINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getDINTKeyword_2()); 
                    }
                    match(input,DINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getDINTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:2783:2: ( LINT )
                    {
                    // InternalGlobalConstantsParser.g:2783:2: ( LINT )
                    // InternalGlobalConstantsParser.g:2784:3: LINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getLINTKeyword_3()); 
                    }
                    match(input,LINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getLINTKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGlobalConstantsParser.g:2789:2: ( USINT )
                    {
                    // InternalGlobalConstantsParser.g:2789:2: ( USINT )
                    // InternalGlobalConstantsParser.g:2790:3: USINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUSINTKeyword_4()); 
                    }
                    match(input,USINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUSINTKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalGlobalConstantsParser.g:2795:2: ( UINT )
                    {
                    // InternalGlobalConstantsParser.g:2795:2: ( UINT )
                    // InternalGlobalConstantsParser.g:2796:3: UINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUINTKeyword_5()); 
                    }
                    match(input,UINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUINTKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalGlobalConstantsParser.g:2801:2: ( UDINT )
                    {
                    // InternalGlobalConstantsParser.g:2801:2: ( UDINT )
                    // InternalGlobalConstantsParser.g:2802:3: UDINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUDINTKeyword_6()); 
                    }
                    match(input,UDINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUDINTKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalGlobalConstantsParser.g:2807:2: ( ULINT )
                    {
                    // InternalGlobalConstantsParser.g:2807:2: ( ULINT )
                    // InternalGlobalConstantsParser.g:2808:3: ULINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getULINTKeyword_7()); 
                    }
                    match(input,ULINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getULINTKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalGlobalConstantsParser.g:2813:2: ( REAL )
                    {
                    // InternalGlobalConstantsParser.g:2813:2: ( REAL )
                    // InternalGlobalConstantsParser.g:2814:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getREALKeyword_8()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getREALKeyword_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalGlobalConstantsParser.g:2819:2: ( LREAL )
                    {
                    // InternalGlobalConstantsParser.g:2819:2: ( LREAL )
                    // InternalGlobalConstantsParser.g:2820:3: LREAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getLREALKeyword_9()); 
                    }
                    match(input,LREAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getLREALKeyword_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyNumType__Alternatives"


    // $ANTLR start "rule__STAnyDurationType__Alternatives"
    // InternalGlobalConstantsParser.g:2829:1: rule__STAnyDurationType__Alternatives : ( ( TIME ) | ( LTIME ) );
    public final void rule__STAnyDurationType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2833:1: ( ( TIME ) | ( LTIME ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==TIME) ) {
                alt21=1;
            }
            else if ( (LA21_0==LTIME) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2834:2: ( TIME )
                    {
                    // InternalGlobalConstantsParser.g:2834:2: ( TIME )
                    // InternalGlobalConstantsParser.g:2835:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDurationTypeAccess().getTIMEKeyword_0()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDurationTypeAccess().getTIMEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2840:2: ( LTIME )
                    {
                    // InternalGlobalConstantsParser.g:2840:2: ( LTIME )
                    // InternalGlobalConstantsParser.g:2841:3: LTIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDurationTypeAccess().getLTIMEKeyword_1()); 
                    }
                    match(input,LTIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDurationTypeAccess().getLTIMEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyDurationType__Alternatives"


    // $ANTLR start "rule__STAnyDateType__Alternatives"
    // InternalGlobalConstantsParser.g:2850:1: rule__STAnyDateType__Alternatives : ( ( ruleSTDateType ) | ( ruleSTTimeOfDayType ) | ( ruleSTDateAndTimeType ) );
    public final void rule__STAnyDateType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2854:1: ( ( ruleSTDateType ) | ( ruleSTTimeOfDayType ) | ( ruleSTDateAndTimeType ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case LDATE:
            case DATE:
                {
                alt22=1;
                }
                break;
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt22=2;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt22=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2855:2: ( ruleSTDateType )
                    {
                    // InternalGlobalConstantsParser.g:2855:2: ( ruleSTDateType )
                    // InternalGlobalConstantsParser.g:2856:3: ruleSTDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2861:2: ( ruleSTTimeOfDayType )
                    {
                    // InternalGlobalConstantsParser.g:2861:2: ( ruleSTTimeOfDayType )
                    // InternalGlobalConstantsParser.g:2862:3: ruleSTTimeOfDayType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTTimeOfDayTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeOfDayType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTTimeOfDayTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2867:2: ( ruleSTDateAndTimeType )
                    {
                    // InternalGlobalConstantsParser.g:2867:2: ( ruleSTDateAndTimeType )
                    // InternalGlobalConstantsParser.g:2868:3: ruleSTDateAndTimeType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTDateAndTimeTypeParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateAndTimeType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTDateAndTimeTypeParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyDateType__Alternatives"


    // $ANTLR start "rule__STDateType__Alternatives"
    // InternalGlobalConstantsParser.g:2877:1: rule__STDateType__Alternatives : ( ( DATE ) | ( LDATE ) );
    public final void rule__STDateType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2881:1: ( ( DATE ) | ( LDATE ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==DATE) ) {
                alt23=1;
            }
            else if ( (LA23_0==LDATE) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2882:2: ( DATE )
                    {
                    // InternalGlobalConstantsParser.g:2882:2: ( DATE )
                    // InternalGlobalConstantsParser.g:2883:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateTypeAccess().getDATEKeyword_0()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateTypeAccess().getDATEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2888:2: ( LDATE )
                    {
                    // InternalGlobalConstantsParser.g:2888:2: ( LDATE )
                    // InternalGlobalConstantsParser.g:2889:3: LDATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateTypeAccess().getLDATEKeyword_1()); 
                    }
                    match(input,LDATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateTypeAccess().getLDATEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateType__Alternatives"


    // $ANTLR start "rule__STTimeOfDayType__Alternatives"
    // InternalGlobalConstantsParser.g:2898:1: rule__STTimeOfDayType__Alternatives : ( ( TIME_OF_DAY ) | ( LTIME_OF_DAY ) | ( TOD ) | ( LTOD ) );
    public final void rule__STTimeOfDayType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2902:1: ( ( TIME_OF_DAY ) | ( LTIME_OF_DAY ) | ( TOD ) | ( LTOD ) )
            int alt24=4;
            switch ( input.LA(1) ) {
            case TIME_OF_DAY:
                {
                alt24=1;
                }
                break;
            case LTIME_OF_DAY:
                {
                alt24=2;
                }
                break;
            case TOD:
                {
                alt24=3;
                }
                break;
            case LTOD:
                {
                alt24=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2903:2: ( TIME_OF_DAY )
                    {
                    // InternalGlobalConstantsParser.g:2903:2: ( TIME_OF_DAY )
                    // InternalGlobalConstantsParser.g:2904:3: TIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getTIME_OF_DAYKeyword_0()); 
                    }
                    match(input,TIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getTIME_OF_DAYKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2909:2: ( LTIME_OF_DAY )
                    {
                    // InternalGlobalConstantsParser.g:2909:2: ( LTIME_OF_DAY )
                    // InternalGlobalConstantsParser.g:2910:3: LTIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getLTIME_OF_DAYKeyword_1()); 
                    }
                    match(input,LTIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getLTIME_OF_DAYKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2915:2: ( TOD )
                    {
                    // InternalGlobalConstantsParser.g:2915:2: ( TOD )
                    // InternalGlobalConstantsParser.g:2916:3: TOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getTODKeyword_2()); 
                    }
                    match(input,TOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getTODKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:2921:2: ( LTOD )
                    {
                    // InternalGlobalConstantsParser.g:2921:2: ( LTOD )
                    // InternalGlobalConstantsParser.g:2922:3: LTOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getLTODKeyword_3()); 
                    }
                    match(input,LTOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getLTODKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayType__Alternatives"


    // $ANTLR start "rule__STDateAndTimeType__Alternatives"
    // InternalGlobalConstantsParser.g:2931:1: rule__STDateAndTimeType__Alternatives : ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) );
    public final void rule__STDateAndTimeType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2935:1: ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) )
            int alt25=4;
            switch ( input.LA(1) ) {
            case DATE_AND_TIME:
                {
                alt25=1;
                }
                break;
            case LDATE_AND_TIME:
                {
                alt25=2;
                }
                break;
            case DT:
                {
                alt25=3;
                }
                break;
            case LDT:
                {
                alt25=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2936:2: ( DATE_AND_TIME )
                    {
                    // InternalGlobalConstantsParser.g:2936:2: ( DATE_AND_TIME )
                    // InternalGlobalConstantsParser.g:2937:3: DATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getDATE_AND_TIMEKeyword_0()); 
                    }
                    match(input,DATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getDATE_AND_TIMEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2942:2: ( LDATE_AND_TIME )
                    {
                    // InternalGlobalConstantsParser.g:2942:2: ( LDATE_AND_TIME )
                    // InternalGlobalConstantsParser.g:2943:3: LDATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getLDATE_AND_TIMEKeyword_1()); 
                    }
                    match(input,LDATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getLDATE_AND_TIMEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2948:2: ( DT )
                    {
                    // InternalGlobalConstantsParser.g:2948:2: ( DT )
                    // InternalGlobalConstantsParser.g:2949:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getDTKeyword_2()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getDTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:2954:2: ( LDT )
                    {
                    // InternalGlobalConstantsParser.g:2954:2: ( LDT )
                    // InternalGlobalConstantsParser.g:2955:3: LDT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getLDTKeyword_3()); 
                    }
                    match(input,LDT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getLDTKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeType__Alternatives"


    // $ANTLR start "rule__STAnyCharsType__Alternatives"
    // InternalGlobalConstantsParser.g:2964:1: rule__STAnyCharsType__Alternatives : ( ( STRING ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) );
    public final void rule__STAnyCharsType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:2968:1: ( ( STRING ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) )
            int alt26=4;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt26=1;
                }
                break;
            case WSTRING:
                {
                alt26=2;
                }
                break;
            case CHAR:
                {
                alt26=3;
                }
                break;
            case WCHAR:
                {
                alt26=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalGlobalConstantsParser.g:2969:2: ( STRING )
                    {
                    // InternalGlobalConstantsParser.g:2969:2: ( STRING )
                    // InternalGlobalConstantsParser.g:2970:3: STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getSTRINGKeyword_0()); 
                    }
                    match(input,STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getSTRINGKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:2975:2: ( WSTRING )
                    {
                    // InternalGlobalConstantsParser.g:2975:2: ( WSTRING )
                    // InternalGlobalConstantsParser.g:2976:3: WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getWSTRINGKeyword_1()); 
                    }
                    match(input,WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getWSTRINGKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:2981:2: ( CHAR )
                    {
                    // InternalGlobalConstantsParser.g:2981:2: ( CHAR )
                    // InternalGlobalConstantsParser.g:2982:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getCHARKeyword_2()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getCHARKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:2987:2: ( WCHAR )
                    {
                    // InternalGlobalConstantsParser.g:2987:2: ( WCHAR )
                    // InternalGlobalConstantsParser.g:2988:3: WCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getWCHARKeyword_3()); 
                    }
                    match(input,WCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getWCHARKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyCharsType__Alternatives"


    // $ANTLR start "rule__Numeric__Alternatives"
    // InternalGlobalConstantsParser.g:2997:1: rule__Numeric__Alternatives : ( ( TRUE ) | ( FALSE ) | ( ruleNumber ) | ( RULE_NON_DECIMAL ) );
    public final void rule__Numeric__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3001:1: ( ( TRUE ) | ( FALSE ) | ( ruleNumber ) | ( RULE_NON_DECIMAL ) )
            int alt27=4;
            switch ( input.LA(1) ) {
            case TRUE:
                {
                alt27=1;
                }
                break;
            case FALSE:
                {
                alt27=2;
                }
                break;
            case PlusSign:
            case HyphenMinus:
            case RULE_INT:
            case RULE_DECIMAL:
                {
                alt27=3;
                }
                break;
            case RULE_NON_DECIMAL:
                {
                alt27=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3002:2: ( TRUE )
                    {
                    // InternalGlobalConstantsParser.g:3002:2: ( TRUE )
                    // InternalGlobalConstantsParser.g:3003:3: TRUE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumericAccess().getTRUEKeyword_0()); 
                    }
                    match(input,TRUE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumericAccess().getTRUEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:3008:2: ( FALSE )
                    {
                    // InternalGlobalConstantsParser.g:3008:2: ( FALSE )
                    // InternalGlobalConstantsParser.g:3009:3: FALSE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumericAccess().getFALSEKeyword_1()); 
                    }
                    match(input,FALSE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumericAccess().getFALSEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:3014:2: ( ruleNumber )
                    {
                    // InternalGlobalConstantsParser.g:3014:2: ( ruleNumber )
                    // InternalGlobalConstantsParser.g:3015:3: ruleNumber
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumericAccess().getNumberParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleNumber();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumericAccess().getNumberParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:3020:2: ( RULE_NON_DECIMAL )
                    {
                    // InternalGlobalConstantsParser.g:3020:2: ( RULE_NON_DECIMAL )
                    // InternalGlobalConstantsParser.g:3021:3: RULE_NON_DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumericAccess().getNON_DECIMALTerminalRuleCall_3()); 
                    }
                    match(input,RULE_NON_DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumericAccess().getNON_DECIMALTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Numeric__Alternatives"


    // $ANTLR start "rule__Number__Alternatives_0"
    // InternalGlobalConstantsParser.g:3030:1: rule__Number__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__Number__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3034:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==PlusSign) ) {
                alt28=1;
            }
            else if ( (LA28_0==HyphenMinus) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3035:2: ( PlusSign )
                    {
                    // InternalGlobalConstantsParser.g:3035:2: ( PlusSign )
                    // InternalGlobalConstantsParser.g:3036:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:3041:2: ( HyphenMinus )
                    {
                    // InternalGlobalConstantsParser.g:3041:2: ( HyphenMinus )
                    // InternalGlobalConstantsParser.g:3042:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_0"


    // $ANTLR start "rule__Number__Alternatives_1"
    // InternalGlobalConstantsParser.g:3051:1: rule__Number__Alternatives_1 : ( ( RULE_INT ) | ( RULE_DECIMAL ) );
    public final void rule__Number__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3055:1: ( ( RULE_INT ) | ( RULE_DECIMAL ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_INT) ) {
                alt29=1;
            }
            else if ( (LA29_0==RULE_DECIMAL) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3056:2: ( RULE_INT )
                    {
                    // InternalGlobalConstantsParser.g:3056:2: ( RULE_INT )
                    // InternalGlobalConstantsParser.g:3057:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:3062:2: ( RULE_DECIMAL )
                    {
                    // InternalGlobalConstantsParser.g:3062:2: ( RULE_DECIMAL )
                    // InternalGlobalConstantsParser.g:3063:3: RULE_DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_1"


    // $ANTLR start "rule__Number__Alternatives_2_1"
    // InternalGlobalConstantsParser.g:3072:1: rule__Number__Alternatives_2_1 : ( ( RULE_INT ) | ( RULE_DECIMAL ) );
    public final void rule__Number__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3076:1: ( ( RULE_INT ) | ( RULE_DECIMAL ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_INT) ) {
                alt30=1;
            }
            else if ( (LA30_0==RULE_DECIMAL) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3077:2: ( RULE_INT )
                    {
                    // InternalGlobalConstantsParser.g:3077:2: ( RULE_INT )
                    // InternalGlobalConstantsParser.g:3078:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_2_1_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:3083:2: ( RULE_DECIMAL )
                    {
                    // InternalGlobalConstantsParser.g:3083:2: ( RULE_DECIMAL )
                    // InternalGlobalConstantsParser.g:3084:3: RULE_DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_2_1_1()); 
                    }
                    match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_2_1"


    // $ANTLR start "rule__Time__Alternatives_0"
    // InternalGlobalConstantsParser.g:3093:1: rule__Time__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__Time__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3097:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==PlusSign) ) {
                alt31=1;
            }
            else if ( (LA31_0==HyphenMinus) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3098:2: ( PlusSign )
                    {
                    // InternalGlobalConstantsParser.g:3098:2: ( PlusSign )
                    // InternalGlobalConstantsParser.g:3099:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:3104:2: ( HyphenMinus )
                    {
                    // InternalGlobalConstantsParser.g:3104:2: ( HyphenMinus )
                    // InternalGlobalConstantsParser.g:3105:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Alternatives_0"


    // $ANTLR start "rule__AndOperator__Alternatives"
    // InternalGlobalConstantsParser.g:3114:1: rule__AndOperator__Alternatives : ( ( ( AND ) ) | ( ( Ampersand ) ) );
    public final void rule__AndOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3118:1: ( ( ( AND ) ) | ( ( Ampersand ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==AND) ) {
                alt32=1;
            }
            else if ( (LA32_0==Ampersand) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3119:2: ( ( AND ) )
                    {
                    // InternalGlobalConstantsParser.g:3119:2: ( ( AND ) )
                    // InternalGlobalConstantsParser.g:3120:3: ( AND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }
                    // InternalGlobalConstantsParser.g:3121:3: ( AND )
                    // InternalGlobalConstantsParser.g:3121:4: AND
                    {
                    match(input,AND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:3125:2: ( ( Ampersand ) )
                    {
                    // InternalGlobalConstantsParser.g:3125:2: ( ( Ampersand ) )
                    // InternalGlobalConstantsParser.g:3126:3: ( Ampersand )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }
                    // InternalGlobalConstantsParser.g:3127:3: ( Ampersand )
                    // InternalGlobalConstantsParser.g:3127:4: Ampersand
                    {
                    match(input,Ampersand,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndOperator__Alternatives"


    // $ANTLR start "rule__EqualityOperator__Alternatives"
    // InternalGlobalConstantsParser.g:3135:1: rule__EqualityOperator__Alternatives : ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) );
    public final void rule__EqualityOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3139:1: ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==EqualsSign) ) {
                alt33=1;
            }
            else if ( (LA33_0==LessThanSignGreaterThanSign) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3140:2: ( ( EqualsSign ) )
                    {
                    // InternalGlobalConstantsParser.g:3140:2: ( ( EqualsSign ) )
                    // InternalGlobalConstantsParser.g:3141:3: ( EqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }
                    // InternalGlobalConstantsParser.g:3142:3: ( EqualsSign )
                    // InternalGlobalConstantsParser.g:3142:4: EqualsSign
                    {
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:3146:2: ( ( LessThanSignGreaterThanSign ) )
                    {
                    // InternalGlobalConstantsParser.g:3146:2: ( ( LessThanSignGreaterThanSign ) )
                    // InternalGlobalConstantsParser.g:3147:3: ( LessThanSignGreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }
                    // InternalGlobalConstantsParser.g:3148:3: ( LessThanSignGreaterThanSign )
                    // InternalGlobalConstantsParser.g:3148:4: LessThanSignGreaterThanSign
                    {
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityOperator__Alternatives"


    // $ANTLR start "rule__CompareOperator__Alternatives"
    // InternalGlobalConstantsParser.g:3156:1: rule__CompareOperator__Alternatives : ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) );
    public final void rule__CompareOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3160:1: ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) )
            int alt34=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt34=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt34=2;
                }
                break;
            case GreaterThanSign:
                {
                alt34=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt34=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3161:2: ( ( LessThanSign ) )
                    {
                    // InternalGlobalConstantsParser.g:3161:2: ( ( LessThanSign ) )
                    // InternalGlobalConstantsParser.g:3162:3: ( LessThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }
                    // InternalGlobalConstantsParser.g:3163:3: ( LessThanSign )
                    // InternalGlobalConstantsParser.g:3163:4: LessThanSign
                    {
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:3167:2: ( ( LessThanSignEqualsSign ) )
                    {
                    // InternalGlobalConstantsParser.g:3167:2: ( ( LessThanSignEqualsSign ) )
                    // InternalGlobalConstantsParser.g:3168:3: ( LessThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }
                    // InternalGlobalConstantsParser.g:3169:3: ( LessThanSignEqualsSign )
                    // InternalGlobalConstantsParser.g:3169:4: LessThanSignEqualsSign
                    {
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:3173:2: ( ( GreaterThanSign ) )
                    {
                    // InternalGlobalConstantsParser.g:3173:2: ( ( GreaterThanSign ) )
                    // InternalGlobalConstantsParser.g:3174:3: ( GreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }
                    // InternalGlobalConstantsParser.g:3175:3: ( GreaterThanSign )
                    // InternalGlobalConstantsParser.g:3175:4: GreaterThanSign
                    {
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:3179:2: ( ( GreaterThanSignEqualsSign ) )
                    {
                    // InternalGlobalConstantsParser.g:3179:2: ( ( GreaterThanSignEqualsSign ) )
                    // InternalGlobalConstantsParser.g:3180:3: ( GreaterThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }
                    // InternalGlobalConstantsParser.g:3181:3: ( GreaterThanSignEqualsSign )
                    // InternalGlobalConstantsParser.g:3181:4: GreaterThanSignEqualsSign
                    {
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperator__Alternatives"


    // $ANTLR start "rule__AddSubOperator__Alternatives"
    // InternalGlobalConstantsParser.g:3189:1: rule__AddSubOperator__Alternatives : ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) );
    public final void rule__AddSubOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3193:1: ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==PlusSign) ) {
                alt35=1;
            }
            else if ( (LA35_0==HyphenMinus) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3194:2: ( ( PlusSign ) )
                    {
                    // InternalGlobalConstantsParser.g:3194:2: ( ( PlusSign ) )
                    // InternalGlobalConstantsParser.g:3195:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }
                    // InternalGlobalConstantsParser.g:3196:3: ( PlusSign )
                    // InternalGlobalConstantsParser.g:3196:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:3200:2: ( ( HyphenMinus ) )
                    {
                    // InternalGlobalConstantsParser.g:3200:2: ( ( HyphenMinus ) )
                    // InternalGlobalConstantsParser.g:3201:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }
                    // InternalGlobalConstantsParser.g:3202:3: ( HyphenMinus )
                    // InternalGlobalConstantsParser.g:3202:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddSubOperator__Alternatives"


    // $ANTLR start "rule__MulDivModOperator__Alternatives"
    // InternalGlobalConstantsParser.g:3210:1: rule__MulDivModOperator__Alternatives : ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) );
    public final void rule__MulDivModOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3214:1: ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) )
            int alt36=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt36=1;
                }
                break;
            case Solidus:
                {
                alt36=2;
                }
                break;
            case MOD:
                {
                alt36=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3215:2: ( ( Asterisk ) )
                    {
                    // InternalGlobalConstantsParser.g:3215:2: ( ( Asterisk ) )
                    // InternalGlobalConstantsParser.g:3216:3: ( Asterisk )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }
                    // InternalGlobalConstantsParser.g:3217:3: ( Asterisk )
                    // InternalGlobalConstantsParser.g:3217:4: Asterisk
                    {
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:3221:2: ( ( Solidus ) )
                    {
                    // InternalGlobalConstantsParser.g:3221:2: ( ( Solidus ) )
                    // InternalGlobalConstantsParser.g:3222:3: ( Solidus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }
                    // InternalGlobalConstantsParser.g:3223:3: ( Solidus )
                    // InternalGlobalConstantsParser.g:3223:4: Solidus
                    {
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:3227:2: ( ( MOD ) )
                    {
                    // InternalGlobalConstantsParser.g:3227:2: ( ( MOD ) )
                    // InternalGlobalConstantsParser.g:3228:3: ( MOD )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }
                    // InternalGlobalConstantsParser.g:3229:3: ( MOD )
                    // InternalGlobalConstantsParser.g:3229:4: MOD
                    {
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulDivModOperator__Alternatives"


    // $ANTLR start "rule__UnaryOperator__Alternatives"
    // InternalGlobalConstantsParser.g:3237:1: rule__UnaryOperator__Alternatives : ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) );
    public final void rule__UnaryOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3241:1: ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) )
            int alt37=3;
            switch ( input.LA(1) ) {
            case HyphenMinus:
                {
                alt37=1;
                }
                break;
            case PlusSign:
                {
                alt37=2;
                }
                break;
            case NOT:
                {
                alt37=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3242:2: ( ( HyphenMinus ) )
                    {
                    // InternalGlobalConstantsParser.g:3242:2: ( ( HyphenMinus ) )
                    // InternalGlobalConstantsParser.g:3243:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }
                    // InternalGlobalConstantsParser.g:3244:3: ( HyphenMinus )
                    // InternalGlobalConstantsParser.g:3244:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:3248:2: ( ( PlusSign ) )
                    {
                    // InternalGlobalConstantsParser.g:3248:2: ( ( PlusSign ) )
                    // InternalGlobalConstantsParser.g:3249:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }
                    // InternalGlobalConstantsParser.g:3250:3: ( PlusSign )
                    // InternalGlobalConstantsParser.g:3250:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:3254:2: ( ( NOT ) )
                    {
                    // InternalGlobalConstantsParser.g:3254:2: ( ( NOT ) )
                    // InternalGlobalConstantsParser.g:3255:3: ( NOT )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }
                    // InternalGlobalConstantsParser.g:3256:3: ( NOT )
                    // InternalGlobalConstantsParser.g:3256:4: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOperator__Alternatives"


    // $ANTLR start "rule__STMultiBitAccessSpecifier__Alternatives"
    // InternalGlobalConstantsParser.g:3264:1: rule__STMultiBitAccessSpecifier__Alternatives : ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) );
    public final void rule__STMultiBitAccessSpecifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3268:1: ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) )
            int alt38=5;
            switch ( input.LA(1) ) {
            case L:
                {
                alt38=1;
                }
                break;
            case D_1:
                {
                alt38=2;
                }
                break;
            case W:
                {
                alt38=3;
                }
                break;
            case B:
                {
                alt38=4;
                }
                break;
            case X:
                {
                alt38=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3269:2: ( ( L ) )
                    {
                    // InternalGlobalConstantsParser.g:3269:2: ( ( L ) )
                    // InternalGlobalConstantsParser.g:3270:3: ( L )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getLEnumLiteralDeclaration_0()); 
                    }
                    // InternalGlobalConstantsParser.g:3271:3: ( L )
                    // InternalGlobalConstantsParser.g:3271:4: L
                    {
                    match(input,L,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getLEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGlobalConstantsParser.g:3275:2: ( ( D_1 ) )
                    {
                    // InternalGlobalConstantsParser.g:3275:2: ( ( D_1 ) )
                    // InternalGlobalConstantsParser.g:3276:3: ( D_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getDEnumLiteralDeclaration_1()); 
                    }
                    // InternalGlobalConstantsParser.g:3277:3: ( D_1 )
                    // InternalGlobalConstantsParser.g:3277:4: D_1
                    {
                    match(input,D_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGlobalConstantsParser.g:3281:2: ( ( W ) )
                    {
                    // InternalGlobalConstantsParser.g:3281:2: ( ( W ) )
                    // InternalGlobalConstantsParser.g:3282:3: ( W )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getWEnumLiteralDeclaration_2()); 
                    }
                    // InternalGlobalConstantsParser.g:3283:3: ( W )
                    // InternalGlobalConstantsParser.g:3283:4: W
                    {
                    match(input,W,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getWEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGlobalConstantsParser.g:3287:2: ( ( B ) )
                    {
                    // InternalGlobalConstantsParser.g:3287:2: ( ( B ) )
                    // InternalGlobalConstantsParser.g:3288:3: ( B )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getBEnumLiteralDeclaration_3()); 
                    }
                    // InternalGlobalConstantsParser.g:3289:3: ( B )
                    // InternalGlobalConstantsParser.g:3289:4: B
                    {
                    match(input,B,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getBEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGlobalConstantsParser.g:3293:2: ( ( X ) )
                    {
                    // InternalGlobalConstantsParser.g:3293:2: ( ( X ) )
                    // InternalGlobalConstantsParser.g:3294:3: ( X )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getXEnumLiteralDeclaration_4()); 
                    }
                    // InternalGlobalConstantsParser.g:3295:3: ( X )
                    // InternalGlobalConstantsParser.g:3295:4: X
                    {
                    match(input,X,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getXEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultiBitAccessSpecifier__Alternatives"


    // $ANTLR start "rule__STGlobalConstsSource__Group__0"
    // InternalGlobalConstantsParser.g:3303:1: rule__STGlobalConstsSource__Group__0 : rule__STGlobalConstsSource__Group__0__Impl rule__STGlobalConstsSource__Group__1 ;
    public final void rule__STGlobalConstsSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3307:1: ( rule__STGlobalConstsSource__Group__0__Impl rule__STGlobalConstsSource__Group__1 )
            // InternalGlobalConstantsParser.g:3308:2: rule__STGlobalConstsSource__Group__0__Impl rule__STGlobalConstsSource__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__STGlobalConstsSource__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STGlobalConstsSource__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STGlobalConstsSource__Group__0"


    // $ANTLR start "rule__STGlobalConstsSource__Group__0__Impl"
    // InternalGlobalConstantsParser.g:3315:1: rule__STGlobalConstsSource__Group__0__Impl : ( () ) ;
    public final void rule__STGlobalConstsSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3319:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:3320:1: ( () )
            {
            // InternalGlobalConstantsParser.g:3320:1: ( () )
            // InternalGlobalConstantsParser.g:3321:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTGlobalConstsSourceAccess().getSTGlobalConstsSourceAction_0()); 
            }
            // InternalGlobalConstantsParser.g:3322:2: ()
            // InternalGlobalConstantsParser.g:3322:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTGlobalConstsSourceAccess().getSTGlobalConstsSourceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STGlobalConstsSource__Group__0__Impl"


    // $ANTLR start "rule__STGlobalConstsSource__Group__1"
    // InternalGlobalConstantsParser.g:3330:1: rule__STGlobalConstsSource__Group__1 : rule__STGlobalConstsSource__Group__1__Impl ;
    public final void rule__STGlobalConstsSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3334:1: ( rule__STGlobalConstsSource__Group__1__Impl )
            // InternalGlobalConstantsParser.g:3335:2: rule__STGlobalConstsSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STGlobalConstsSource__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STGlobalConstsSource__Group__1"


    // $ANTLR start "rule__STGlobalConstsSource__Group__1__Impl"
    // InternalGlobalConstantsParser.g:3341:1: rule__STGlobalConstsSource__Group__1__Impl : ( ( rule__STGlobalConstsSource__ElementsAssignment_1 )* ) ;
    public final void rule__STGlobalConstsSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3345:1: ( ( ( rule__STGlobalConstsSource__ElementsAssignment_1 )* ) )
            // InternalGlobalConstantsParser.g:3346:1: ( ( rule__STGlobalConstsSource__ElementsAssignment_1 )* )
            {
            // InternalGlobalConstantsParser.g:3346:1: ( ( rule__STGlobalConstsSource__ElementsAssignment_1 )* )
            // InternalGlobalConstantsParser.g:3347:2: ( rule__STGlobalConstsSource__ElementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTGlobalConstsSourceAccess().getElementsAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:3348:2: ( rule__STGlobalConstsSource__ElementsAssignment_1 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==VAR_GLOBAL) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:3348:3: rule__STGlobalConstsSource__ElementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__STGlobalConstsSource__ElementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTGlobalConstsSourceAccess().getElementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STGlobalConstsSource__Group__1__Impl"


    // $ANTLR start "rule__STVarGlobalDeclarationBlock__Group__0"
    // InternalGlobalConstantsParser.g:3357:1: rule__STVarGlobalDeclarationBlock__Group__0 : rule__STVarGlobalDeclarationBlock__Group__0__Impl rule__STVarGlobalDeclarationBlock__Group__1 ;
    public final void rule__STVarGlobalDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3361:1: ( rule__STVarGlobalDeclarationBlock__Group__0__Impl rule__STVarGlobalDeclarationBlock__Group__1 )
            // InternalGlobalConstantsParser.g:3362:2: rule__STVarGlobalDeclarationBlock__Group__0__Impl rule__STVarGlobalDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__STVarGlobalDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarGlobalDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarGlobalDeclarationBlock__Group__0"


    // $ANTLR start "rule__STVarGlobalDeclarationBlock__Group__0__Impl"
    // InternalGlobalConstantsParser.g:3369:1: rule__STVarGlobalDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__STVarGlobalDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3373:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:3374:1: ( () )
            {
            // InternalGlobalConstantsParser.g:3374:1: ( () )
            // InternalGlobalConstantsParser.g:3375:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getSTVarGlobalDeclarationBlockAction_0()); 
            }
            // InternalGlobalConstantsParser.g:3376:2: ()
            // InternalGlobalConstantsParser.g:3376:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getSTVarGlobalDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarGlobalDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__STVarGlobalDeclarationBlock__Group__1"
    // InternalGlobalConstantsParser.g:3384:1: rule__STVarGlobalDeclarationBlock__Group__1 : rule__STVarGlobalDeclarationBlock__Group__1__Impl rule__STVarGlobalDeclarationBlock__Group__2 ;
    public final void rule__STVarGlobalDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3388:1: ( rule__STVarGlobalDeclarationBlock__Group__1__Impl rule__STVarGlobalDeclarationBlock__Group__2 )
            // InternalGlobalConstantsParser.g:3389:2: rule__STVarGlobalDeclarationBlock__Group__1__Impl rule__STVarGlobalDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__STVarGlobalDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarGlobalDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarGlobalDeclarationBlock__Group__1"


    // $ANTLR start "rule__STVarGlobalDeclarationBlock__Group__1__Impl"
    // InternalGlobalConstantsParser.g:3396:1: rule__STVarGlobalDeclarationBlock__Group__1__Impl : ( VAR_GLOBAL ) ;
    public final void rule__STVarGlobalDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3400:1: ( ( VAR_GLOBAL ) )
            // InternalGlobalConstantsParser.g:3401:1: ( VAR_GLOBAL )
            {
            // InternalGlobalConstantsParser.g:3401:1: ( VAR_GLOBAL )
            // InternalGlobalConstantsParser.g:3402:2: VAR_GLOBAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getVAR_GLOBALKeyword_1()); 
            }
            match(input,VAR_GLOBAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getVAR_GLOBALKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarGlobalDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__STVarGlobalDeclarationBlock__Group__2"
    // InternalGlobalConstantsParser.g:3411:1: rule__STVarGlobalDeclarationBlock__Group__2 : rule__STVarGlobalDeclarationBlock__Group__2__Impl rule__STVarGlobalDeclarationBlock__Group__3 ;
    public final void rule__STVarGlobalDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3415:1: ( rule__STVarGlobalDeclarationBlock__Group__2__Impl rule__STVarGlobalDeclarationBlock__Group__3 )
            // InternalGlobalConstantsParser.g:3416:2: rule__STVarGlobalDeclarationBlock__Group__2__Impl rule__STVarGlobalDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__STVarGlobalDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarGlobalDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarGlobalDeclarationBlock__Group__2"


    // $ANTLR start "rule__STVarGlobalDeclarationBlock__Group__2__Impl"
    // InternalGlobalConstantsParser.g:3423:1: rule__STVarGlobalDeclarationBlock__Group__2__Impl : ( ( rule__STVarGlobalDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__STVarGlobalDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3427:1: ( ( ( rule__STVarGlobalDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalGlobalConstantsParser.g:3428:1: ( ( rule__STVarGlobalDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalGlobalConstantsParser.g:3428:1: ( ( rule__STVarGlobalDeclarationBlock__ConstantAssignment_2 )? )
            // InternalGlobalConstantsParser.g:3429:2: ( rule__STVarGlobalDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalGlobalConstantsParser.g:3430:2: ( rule__STVarGlobalDeclarationBlock__ConstantAssignment_2 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==CONSTANT) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3430:3: rule__STVarGlobalDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarGlobalDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarGlobalDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__STVarGlobalDeclarationBlock__Group__3"
    // InternalGlobalConstantsParser.g:3438:1: rule__STVarGlobalDeclarationBlock__Group__3 : rule__STVarGlobalDeclarationBlock__Group__3__Impl rule__STVarGlobalDeclarationBlock__Group__4 ;
    public final void rule__STVarGlobalDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3442:1: ( rule__STVarGlobalDeclarationBlock__Group__3__Impl rule__STVarGlobalDeclarationBlock__Group__4 )
            // InternalGlobalConstantsParser.g:3443:2: rule__STVarGlobalDeclarationBlock__Group__3__Impl rule__STVarGlobalDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__STVarGlobalDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarGlobalDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarGlobalDeclarationBlock__Group__3"


    // $ANTLR start "rule__STVarGlobalDeclarationBlock__Group__3__Impl"
    // InternalGlobalConstantsParser.g:3450:1: rule__STVarGlobalDeclarationBlock__Group__3__Impl : ( ( rule__STVarGlobalDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__STVarGlobalDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3454:1: ( ( ( rule__STVarGlobalDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalGlobalConstantsParser.g:3455:1: ( ( rule__STVarGlobalDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalGlobalConstantsParser.g:3455:1: ( ( rule__STVarGlobalDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalGlobalConstantsParser.g:3456:2: ( rule__STVarGlobalDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalGlobalConstantsParser.g:3457:2: ( rule__STVarGlobalDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==RULE_ID) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:3457:3: rule__STVarGlobalDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__STVarGlobalDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarGlobalDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__STVarGlobalDeclarationBlock__Group__4"
    // InternalGlobalConstantsParser.g:3465:1: rule__STVarGlobalDeclarationBlock__Group__4 : rule__STVarGlobalDeclarationBlock__Group__4__Impl ;
    public final void rule__STVarGlobalDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3469:1: ( rule__STVarGlobalDeclarationBlock__Group__4__Impl )
            // InternalGlobalConstantsParser.g:3470:2: rule__STVarGlobalDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarGlobalDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarGlobalDeclarationBlock__Group__4"


    // $ANTLR start "rule__STVarGlobalDeclarationBlock__Group__4__Impl"
    // InternalGlobalConstantsParser.g:3476:1: rule__STVarGlobalDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__STVarGlobalDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3480:1: ( ( END_VAR ) )
            // InternalGlobalConstantsParser.g:3481:1: ( END_VAR )
            {
            // InternalGlobalConstantsParser.g:3481:1: ( END_VAR )
            // InternalGlobalConstantsParser.g:3482:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarGlobalDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__STExpressionSource__Group__0"
    // InternalGlobalConstantsParser.g:3492:1: rule__STExpressionSource__Group__0 : rule__STExpressionSource__Group__0__Impl rule__STExpressionSource__Group__1 ;
    public final void rule__STExpressionSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3496:1: ( rule__STExpressionSource__Group__0__Impl rule__STExpressionSource__Group__1 )
            // InternalGlobalConstantsParser.g:3497:2: rule__STExpressionSource__Group__0__Impl rule__STExpressionSource__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__STExpressionSource__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STExpressionSource__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__Group__0"


    // $ANTLR start "rule__STExpressionSource__Group__0__Impl"
    // InternalGlobalConstantsParser.g:3504:1: rule__STExpressionSource__Group__0__Impl : ( () ) ;
    public final void rule__STExpressionSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3508:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:3509:1: ( () )
            {
            // InternalGlobalConstantsParser.g:3509:1: ( () )
            // InternalGlobalConstantsParser.g:3510:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceAccess().getSTExpressionSourceAction_0()); 
            }
            // InternalGlobalConstantsParser.g:3511:2: ()
            // InternalGlobalConstantsParser.g:3511:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceAccess().getSTExpressionSourceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__Group__0__Impl"


    // $ANTLR start "rule__STExpressionSource__Group__1"
    // InternalGlobalConstantsParser.g:3519:1: rule__STExpressionSource__Group__1 : rule__STExpressionSource__Group__1__Impl ;
    public final void rule__STExpressionSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3523:1: ( rule__STExpressionSource__Group__1__Impl )
            // InternalGlobalConstantsParser.g:3524:2: rule__STExpressionSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STExpressionSource__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__Group__1"


    // $ANTLR start "rule__STExpressionSource__Group__1__Impl"
    // InternalGlobalConstantsParser.g:3530:1: rule__STExpressionSource__Group__1__Impl : ( ( rule__STExpressionSource__ExpressionAssignment_1 )? ) ;
    public final void rule__STExpressionSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3534:1: ( ( ( rule__STExpressionSource__ExpressionAssignment_1 )? ) )
            // InternalGlobalConstantsParser.g:3535:1: ( ( rule__STExpressionSource__ExpressionAssignment_1 )? )
            {
            // InternalGlobalConstantsParser.g:3535:1: ( ( rule__STExpressionSource__ExpressionAssignment_1 )? )
            // InternalGlobalConstantsParser.g:3536:2: ( rule__STExpressionSource__ExpressionAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceAccess().getExpressionAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:3537:2: ( rule__STExpressionSource__ExpressionAssignment_1 )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==LDATE_AND_TIME||LA42_0==DATE_AND_TIME||LA42_0==LTIME_OF_DAY||LA42_0==TIME_OF_DAY||LA42_0==WSTRING||LA42_0==STRING||LA42_0==DWORD||LA42_0==FALSE||(LA42_0>=LDATE && LA42_0<=LWORD)||(LA42_0>=UDINT && LA42_0<=ULINT)||(LA42_0>=USINT && LA42_0<=WCHAR)||(LA42_0>=BOOL && LA42_0<=BYTE)||(LA42_0>=CHAR && LA42_0<=DINT)||(LA42_0>=LINT && LA42_0<=LTOD)||(LA42_0>=REAL && LA42_0<=SINT)||(LA42_0>=THIS && LA42_0<=TRUE)||LA42_0==UINT||(LA42_0>=WORD && LA42_0<=AND)||(LA42_0>=INT && LA42_0<=NOT)||LA42_0==TOD||LA42_0==XOR||LA42_0==DT||(LA42_0>=LD && LA42_0<=LT)||LA42_0==OR||LA42_0==LeftParenthesis||LA42_0==PlusSign||LA42_0==HyphenMinus||(LA42_0>=D && LA42_0<=T)||(LA42_0>=RULE_NON_DECIMAL && LA42_0<=RULE_DECIMAL)||(LA42_0>=RULE_ID && LA42_0<=RULE_STRING)) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3537:3: rule__STExpressionSource__ExpressionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__STExpressionSource__ExpressionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__Group__1__Impl"


    // $ANTLR start "rule__STInitializerExpressionSource__Group__0"
    // InternalGlobalConstantsParser.g:3546:1: rule__STInitializerExpressionSource__Group__0 : rule__STInitializerExpressionSource__Group__0__Impl rule__STInitializerExpressionSource__Group__1 ;
    public final void rule__STInitializerExpressionSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3550:1: ( rule__STInitializerExpressionSource__Group__0__Impl rule__STInitializerExpressionSource__Group__1 )
            // InternalGlobalConstantsParser.g:3551:2: rule__STInitializerExpressionSource__Group__0__Impl rule__STInitializerExpressionSource__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__STInitializerExpressionSource__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STInitializerExpressionSource__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__Group__0"


    // $ANTLR start "rule__STInitializerExpressionSource__Group__0__Impl"
    // InternalGlobalConstantsParser.g:3558:1: rule__STInitializerExpressionSource__Group__0__Impl : ( () ) ;
    public final void rule__STInitializerExpressionSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3562:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:3563:1: ( () )
            {
            // InternalGlobalConstantsParser.g:3563:1: ( () )
            // InternalGlobalConstantsParser.g:3564:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceAccess().getSTInitializerExpressionSourceAction_0()); 
            }
            // InternalGlobalConstantsParser.g:3565:2: ()
            // InternalGlobalConstantsParser.g:3565:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceAccess().getSTInitializerExpressionSourceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__Group__0__Impl"


    // $ANTLR start "rule__STInitializerExpressionSource__Group__1"
    // InternalGlobalConstantsParser.g:3573:1: rule__STInitializerExpressionSource__Group__1 : rule__STInitializerExpressionSource__Group__1__Impl ;
    public final void rule__STInitializerExpressionSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3577:1: ( rule__STInitializerExpressionSource__Group__1__Impl )
            // InternalGlobalConstantsParser.g:3578:2: rule__STInitializerExpressionSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STInitializerExpressionSource__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__Group__1"


    // $ANTLR start "rule__STInitializerExpressionSource__Group__1__Impl"
    // InternalGlobalConstantsParser.g:3584:1: rule__STInitializerExpressionSource__Group__1__Impl : ( ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )? ) ;
    public final void rule__STInitializerExpressionSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3588:1: ( ( ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )? ) )
            // InternalGlobalConstantsParser.g:3589:1: ( ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )? )
            {
            // InternalGlobalConstantsParser.g:3589:1: ( ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )? )
            // InternalGlobalConstantsParser.g:3590:2: ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceAccess().getInitializerExpressionAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:3591:2: ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==LDATE_AND_TIME||LA43_0==DATE_AND_TIME||LA43_0==LTIME_OF_DAY||LA43_0==TIME_OF_DAY||LA43_0==WSTRING||LA43_0==STRING||LA43_0==DWORD||LA43_0==FALSE||(LA43_0>=LDATE && LA43_0<=LWORD)||(LA43_0>=UDINT && LA43_0<=ULINT)||(LA43_0>=USINT && LA43_0<=WCHAR)||(LA43_0>=BOOL && LA43_0<=BYTE)||(LA43_0>=CHAR && LA43_0<=DINT)||(LA43_0>=LINT && LA43_0<=LTOD)||(LA43_0>=REAL && LA43_0<=SINT)||(LA43_0>=THIS && LA43_0<=TRUE)||LA43_0==UINT||(LA43_0>=WORD && LA43_0<=AND)||(LA43_0>=INT && LA43_0<=NOT)||LA43_0==TOD||LA43_0==XOR||LA43_0==DT||(LA43_0>=LD && LA43_0<=LT)||LA43_0==OR||LA43_0==LeftParenthesis||LA43_0==PlusSign||LA43_0==HyphenMinus||(LA43_0>=D && LA43_0<=LeftSquareBracket)||(LA43_0>=RULE_NON_DECIMAL && LA43_0<=RULE_DECIMAL)||(LA43_0>=RULE_ID && LA43_0<=RULE_STRING)) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3591:3: rule__STInitializerExpressionSource__InitializerExpressionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__STInitializerExpressionSource__InitializerExpressionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceAccess().getInitializerExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__Group__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__0"
    // InternalGlobalConstantsParser.g:3600:1: rule__STVarDeclaration__Group__0 : rule__STVarDeclaration__Group__0__Impl rule__STVarDeclaration__Group__1 ;
    public final void rule__STVarDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3604:1: ( rule__STVarDeclaration__Group__0__Impl rule__STVarDeclaration__Group__1 )
            // InternalGlobalConstantsParser.g:3605:2: rule__STVarDeclaration__Group__0__Impl rule__STVarDeclaration__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__STVarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__0"


    // $ANTLR start "rule__STVarDeclaration__Group__0__Impl"
    // InternalGlobalConstantsParser.g:3612:1: rule__STVarDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__STVarDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3616:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:3617:1: ( () )
            {
            // InternalGlobalConstantsParser.g:3617:1: ( () )
            // InternalGlobalConstantsParser.g:3618:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getSTVarDeclarationAction_0()); 
            }
            // InternalGlobalConstantsParser.g:3619:2: ()
            // InternalGlobalConstantsParser.g:3619:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getSTVarDeclarationAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__1"
    // InternalGlobalConstantsParser.g:3627:1: rule__STVarDeclaration__Group__1 : rule__STVarDeclaration__Group__1__Impl rule__STVarDeclaration__Group__2 ;
    public final void rule__STVarDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3631:1: ( rule__STVarDeclaration__Group__1__Impl rule__STVarDeclaration__Group__2 )
            // InternalGlobalConstantsParser.g:3632:2: rule__STVarDeclaration__Group__1__Impl rule__STVarDeclaration__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__STVarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__1"


    // $ANTLR start "rule__STVarDeclaration__Group__1__Impl"
    // InternalGlobalConstantsParser.g:3639:1: rule__STVarDeclaration__Group__1__Impl : ( ( rule__STVarDeclaration__NameAssignment_1 ) ) ;
    public final void rule__STVarDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3643:1: ( ( ( rule__STVarDeclaration__NameAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:3644:1: ( ( rule__STVarDeclaration__NameAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:3644:1: ( ( rule__STVarDeclaration__NameAssignment_1 ) )
            // InternalGlobalConstantsParser.g:3645:2: ( rule__STVarDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:3646:2: ( rule__STVarDeclaration__NameAssignment_1 )
            // InternalGlobalConstantsParser.g:3646:3: rule__STVarDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__2"
    // InternalGlobalConstantsParser.g:3654:1: rule__STVarDeclaration__Group__2 : rule__STVarDeclaration__Group__2__Impl rule__STVarDeclaration__Group__3 ;
    public final void rule__STVarDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3658:1: ( rule__STVarDeclaration__Group__2__Impl rule__STVarDeclaration__Group__3 )
            // InternalGlobalConstantsParser.g:3659:2: rule__STVarDeclaration__Group__2__Impl rule__STVarDeclaration__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STVarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__2"


    // $ANTLR start "rule__STVarDeclaration__Group__2__Impl"
    // InternalGlobalConstantsParser.g:3666:1: rule__STVarDeclaration__Group__2__Impl : ( ( rule__STVarDeclaration__Group_2__0 )? ) ;
    public final void rule__STVarDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3670:1: ( ( ( rule__STVarDeclaration__Group_2__0 )? ) )
            // InternalGlobalConstantsParser.g:3671:1: ( ( rule__STVarDeclaration__Group_2__0 )? )
            {
            // InternalGlobalConstantsParser.g:3671:1: ( ( rule__STVarDeclaration__Group_2__0 )? )
            // InternalGlobalConstantsParser.g:3672:2: ( rule__STVarDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_2()); 
            }
            // InternalGlobalConstantsParser.g:3673:2: ( rule__STVarDeclaration__Group_2__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==AT) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3673:3: rule__STVarDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__3"
    // InternalGlobalConstantsParser.g:3681:1: rule__STVarDeclaration__Group__3 : rule__STVarDeclaration__Group__3__Impl rule__STVarDeclaration__Group__4 ;
    public final void rule__STVarDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3685:1: ( rule__STVarDeclaration__Group__3__Impl rule__STVarDeclaration__Group__4 )
            // InternalGlobalConstantsParser.g:3686:2: rule__STVarDeclaration__Group__3__Impl rule__STVarDeclaration__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__STVarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__3"


    // $ANTLR start "rule__STVarDeclaration__Group__3__Impl"
    // InternalGlobalConstantsParser.g:3693:1: rule__STVarDeclaration__Group__3__Impl : ( Colon ) ;
    public final void rule__STVarDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3697:1: ( ( Colon ) )
            // InternalGlobalConstantsParser.g:3698:1: ( Colon )
            {
            // InternalGlobalConstantsParser.g:3698:1: ( Colon )
            // InternalGlobalConstantsParser.g:3699:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__4"
    // InternalGlobalConstantsParser.g:3708:1: rule__STVarDeclaration__Group__4 : rule__STVarDeclaration__Group__4__Impl rule__STVarDeclaration__Group__5 ;
    public final void rule__STVarDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3712:1: ( rule__STVarDeclaration__Group__4__Impl rule__STVarDeclaration__Group__5 )
            // InternalGlobalConstantsParser.g:3713:2: rule__STVarDeclaration__Group__4__Impl rule__STVarDeclaration__Group__5
            {
            pushFollow(FOLLOW_11);
            rule__STVarDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__4"


    // $ANTLR start "rule__STVarDeclaration__Group__4__Impl"
    // InternalGlobalConstantsParser.g:3720:1: rule__STVarDeclaration__Group__4__Impl : ( ( rule__STVarDeclaration__Group_4__0 )? ) ;
    public final void rule__STVarDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3724:1: ( ( ( rule__STVarDeclaration__Group_4__0 )? ) )
            // InternalGlobalConstantsParser.g:3725:1: ( ( rule__STVarDeclaration__Group_4__0 )? )
            {
            // InternalGlobalConstantsParser.g:3725:1: ( ( rule__STVarDeclaration__Group_4__0 )? )
            // InternalGlobalConstantsParser.g:3726:2: ( rule__STVarDeclaration__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_4()); 
            }
            // InternalGlobalConstantsParser.g:3727:2: ( rule__STVarDeclaration__Group_4__0 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==ARRAY) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3727:3: rule__STVarDeclaration__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__4__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__5"
    // InternalGlobalConstantsParser.g:3735:1: rule__STVarDeclaration__Group__5 : rule__STVarDeclaration__Group__5__Impl rule__STVarDeclaration__Group__6 ;
    public final void rule__STVarDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3739:1: ( rule__STVarDeclaration__Group__5__Impl rule__STVarDeclaration__Group__6 )
            // InternalGlobalConstantsParser.g:3740:2: rule__STVarDeclaration__Group__5__Impl rule__STVarDeclaration__Group__6
            {
            pushFollow(FOLLOW_12);
            rule__STVarDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__5"


    // $ANTLR start "rule__STVarDeclaration__Group__5__Impl"
    // InternalGlobalConstantsParser.g:3747:1: rule__STVarDeclaration__Group__5__Impl : ( ( rule__STVarDeclaration__TypeAssignment_5 ) ) ;
    public final void rule__STVarDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3751:1: ( ( ( rule__STVarDeclaration__TypeAssignment_5 ) ) )
            // InternalGlobalConstantsParser.g:3752:1: ( ( rule__STVarDeclaration__TypeAssignment_5 ) )
            {
            // InternalGlobalConstantsParser.g:3752:1: ( ( rule__STVarDeclaration__TypeAssignment_5 ) )
            // InternalGlobalConstantsParser.g:3753:2: ( rule__STVarDeclaration__TypeAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getTypeAssignment_5()); 
            }
            // InternalGlobalConstantsParser.g:3754:2: ( rule__STVarDeclaration__TypeAssignment_5 )
            // InternalGlobalConstantsParser.g:3754:3: rule__STVarDeclaration__TypeAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__TypeAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getTypeAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__5__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__6"
    // InternalGlobalConstantsParser.g:3762:1: rule__STVarDeclaration__Group__6 : rule__STVarDeclaration__Group__6__Impl rule__STVarDeclaration__Group__7 ;
    public final void rule__STVarDeclaration__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3766:1: ( rule__STVarDeclaration__Group__6__Impl rule__STVarDeclaration__Group__7 )
            // InternalGlobalConstantsParser.g:3767:2: rule__STVarDeclaration__Group__6__Impl rule__STVarDeclaration__Group__7
            {
            pushFollow(FOLLOW_12);
            rule__STVarDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__6"


    // $ANTLR start "rule__STVarDeclaration__Group__6__Impl"
    // InternalGlobalConstantsParser.g:3774:1: rule__STVarDeclaration__Group__6__Impl : ( ( rule__STVarDeclaration__Group_6__0 )? ) ;
    public final void rule__STVarDeclaration__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3778:1: ( ( ( rule__STVarDeclaration__Group_6__0 )? ) )
            // InternalGlobalConstantsParser.g:3779:1: ( ( rule__STVarDeclaration__Group_6__0 )? )
            {
            // InternalGlobalConstantsParser.g:3779:1: ( ( rule__STVarDeclaration__Group_6__0 )? )
            // InternalGlobalConstantsParser.g:3780:2: ( rule__STVarDeclaration__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_6()); 
            }
            // InternalGlobalConstantsParser.g:3781:2: ( rule__STVarDeclaration__Group_6__0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==LeftSquareBracket) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3781:3: rule__STVarDeclaration__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__6__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__7"
    // InternalGlobalConstantsParser.g:3789:1: rule__STVarDeclaration__Group__7 : rule__STVarDeclaration__Group__7__Impl rule__STVarDeclaration__Group__8 ;
    public final void rule__STVarDeclaration__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3793:1: ( rule__STVarDeclaration__Group__7__Impl rule__STVarDeclaration__Group__8 )
            // InternalGlobalConstantsParser.g:3794:2: rule__STVarDeclaration__Group__7__Impl rule__STVarDeclaration__Group__8
            {
            pushFollow(FOLLOW_12);
            rule__STVarDeclaration__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__7"


    // $ANTLR start "rule__STVarDeclaration__Group__7__Impl"
    // InternalGlobalConstantsParser.g:3801:1: rule__STVarDeclaration__Group__7__Impl : ( ( rule__STVarDeclaration__Group_7__0 )? ) ;
    public final void rule__STVarDeclaration__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3805:1: ( ( ( rule__STVarDeclaration__Group_7__0 )? ) )
            // InternalGlobalConstantsParser.g:3806:1: ( ( rule__STVarDeclaration__Group_7__0 )? )
            {
            // InternalGlobalConstantsParser.g:3806:1: ( ( rule__STVarDeclaration__Group_7__0 )? )
            // InternalGlobalConstantsParser.g:3807:2: ( rule__STVarDeclaration__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_7()); 
            }
            // InternalGlobalConstantsParser.g:3808:2: ( rule__STVarDeclaration__Group_7__0 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==ColonEqualsSign) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalGlobalConstantsParser.g:3808:3: rule__STVarDeclaration__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__7__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__8"
    // InternalGlobalConstantsParser.g:3816:1: rule__STVarDeclaration__Group__8 : rule__STVarDeclaration__Group__8__Impl ;
    public final void rule__STVarDeclaration__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3820:1: ( rule__STVarDeclaration__Group__8__Impl )
            // InternalGlobalConstantsParser.g:3821:2: rule__STVarDeclaration__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__8"


    // $ANTLR start "rule__STVarDeclaration__Group__8__Impl"
    // InternalGlobalConstantsParser.g:3827:1: rule__STVarDeclaration__Group__8__Impl : ( Semicolon ) ;
    public final void rule__STVarDeclaration__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3831:1: ( ( Semicolon ) )
            // InternalGlobalConstantsParser.g:3832:1: ( Semicolon )
            {
            // InternalGlobalConstantsParser.g:3832:1: ( Semicolon )
            // InternalGlobalConstantsParser.g:3833:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getSemicolonKeyword_8()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getSemicolonKeyword_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__8__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_2__0"
    // InternalGlobalConstantsParser.g:3843:1: rule__STVarDeclaration__Group_2__0 : rule__STVarDeclaration__Group_2__0__Impl rule__STVarDeclaration__Group_2__1 ;
    public final void rule__STVarDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3847:1: ( rule__STVarDeclaration__Group_2__0__Impl rule__STVarDeclaration__Group_2__1 )
            // InternalGlobalConstantsParser.g:3848:2: rule__STVarDeclaration__Group_2__0__Impl rule__STVarDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_9);
            rule__STVarDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__0"


    // $ANTLR start "rule__STVarDeclaration__Group_2__0__Impl"
    // InternalGlobalConstantsParser.g:3855:1: rule__STVarDeclaration__Group_2__0__Impl : ( AT ) ;
    public final void rule__STVarDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3859:1: ( ( AT ) )
            // InternalGlobalConstantsParser.g:3860:1: ( AT )
            {
            // InternalGlobalConstantsParser.g:3860:1: ( AT )
            // InternalGlobalConstantsParser.g:3861:2: AT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getATKeyword_2_0()); 
            }
            match(input,AT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getATKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_2__1"
    // InternalGlobalConstantsParser.g:3870:1: rule__STVarDeclaration__Group_2__1 : rule__STVarDeclaration__Group_2__1__Impl ;
    public final void rule__STVarDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3874:1: ( rule__STVarDeclaration__Group_2__1__Impl )
            // InternalGlobalConstantsParser.g:3875:2: rule__STVarDeclaration__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__1"


    // $ANTLR start "rule__STVarDeclaration__Group_2__1__Impl"
    // InternalGlobalConstantsParser.g:3881:1: rule__STVarDeclaration__Group_2__1__Impl : ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) ) ;
    public final void rule__STVarDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3885:1: ( ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) ) )
            // InternalGlobalConstantsParser.g:3886:1: ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) )
            {
            // InternalGlobalConstantsParser.g:3886:1: ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) )
            // InternalGlobalConstantsParser.g:3887:2: ( rule__STVarDeclaration__LocatedAtAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLocatedAtAssignment_2_1()); 
            }
            // InternalGlobalConstantsParser.g:3888:2: ( rule__STVarDeclaration__LocatedAtAssignment_2_1 )
            // InternalGlobalConstantsParser.g:3888:3: rule__STVarDeclaration__LocatedAtAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__LocatedAtAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLocatedAtAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4__0"
    // InternalGlobalConstantsParser.g:3897:1: rule__STVarDeclaration__Group_4__0 : rule__STVarDeclaration__Group_4__0__Impl rule__STVarDeclaration__Group_4__1 ;
    public final void rule__STVarDeclaration__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3901:1: ( rule__STVarDeclaration__Group_4__0__Impl rule__STVarDeclaration__Group_4__1 )
            // InternalGlobalConstantsParser.g:3902:2: rule__STVarDeclaration__Group_4__0__Impl rule__STVarDeclaration__Group_4__1
            {
            pushFollow(FOLLOW_13);
            rule__STVarDeclaration__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4__0__Impl"
    // InternalGlobalConstantsParser.g:3909:1: rule__STVarDeclaration__Group_4__0__Impl : ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) ) ;
    public final void rule__STVarDeclaration__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3913:1: ( ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) ) )
            // InternalGlobalConstantsParser.g:3914:1: ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) )
            {
            // InternalGlobalConstantsParser.g:3914:1: ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) )
            // InternalGlobalConstantsParser.g:3915:2: ( rule__STVarDeclaration__ArrayAssignment_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getArrayAssignment_4_0()); 
            }
            // InternalGlobalConstantsParser.g:3916:2: ( rule__STVarDeclaration__ArrayAssignment_4_0 )
            // InternalGlobalConstantsParser.g:3916:3: rule__STVarDeclaration__ArrayAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__ArrayAssignment_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getArrayAssignment_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4__1"
    // InternalGlobalConstantsParser.g:3924:1: rule__STVarDeclaration__Group_4__1 : rule__STVarDeclaration__Group_4__1__Impl rule__STVarDeclaration__Group_4__2 ;
    public final void rule__STVarDeclaration__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3928:1: ( rule__STVarDeclaration__Group_4__1__Impl rule__STVarDeclaration__Group_4__2 )
            // InternalGlobalConstantsParser.g:3929:2: rule__STVarDeclaration__Group_4__1__Impl rule__STVarDeclaration__Group_4__2
            {
            pushFollow(FOLLOW_14);
            rule__STVarDeclaration__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4__1__Impl"
    // InternalGlobalConstantsParser.g:3936:1: rule__STVarDeclaration__Group_4__1__Impl : ( ( rule__STVarDeclaration__Alternatives_4_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3940:1: ( ( ( rule__STVarDeclaration__Alternatives_4_1 ) ) )
            // InternalGlobalConstantsParser.g:3941:1: ( ( rule__STVarDeclaration__Alternatives_4_1 ) )
            {
            // InternalGlobalConstantsParser.g:3941:1: ( ( rule__STVarDeclaration__Alternatives_4_1 ) )
            // InternalGlobalConstantsParser.g:3942:2: ( rule__STVarDeclaration__Alternatives_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getAlternatives_4_1()); 
            }
            // InternalGlobalConstantsParser.g:3943:2: ( rule__STVarDeclaration__Alternatives_4_1 )
            // InternalGlobalConstantsParser.g:3943:3: rule__STVarDeclaration__Alternatives_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Alternatives_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getAlternatives_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4__2"
    // InternalGlobalConstantsParser.g:3951:1: rule__STVarDeclaration__Group_4__2 : rule__STVarDeclaration__Group_4__2__Impl ;
    public final void rule__STVarDeclaration__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3955:1: ( rule__STVarDeclaration__Group_4__2__Impl )
            // InternalGlobalConstantsParser.g:3956:2: rule__STVarDeclaration__Group_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__2"


    // $ANTLR start "rule__STVarDeclaration__Group_4__2__Impl"
    // InternalGlobalConstantsParser.g:3962:1: rule__STVarDeclaration__Group_4__2__Impl : ( OF ) ;
    public final void rule__STVarDeclaration__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3966:1: ( ( OF ) )
            // InternalGlobalConstantsParser.g:3967:1: ( OF )
            {
            // InternalGlobalConstantsParser.g:3967:1: ( OF )
            // InternalGlobalConstantsParser.g:3968:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getOFKeyword_4_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getOFKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__0"
    // InternalGlobalConstantsParser.g:3978:1: rule__STVarDeclaration__Group_4_1_0__0 : rule__STVarDeclaration__Group_4_1_0__0__Impl rule__STVarDeclaration__Group_4_1_0__1 ;
    public final void rule__STVarDeclaration__Group_4_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3982:1: ( rule__STVarDeclaration__Group_4_1_0__0__Impl rule__STVarDeclaration__Group_4_1_0__1 )
            // InternalGlobalConstantsParser.g:3983:2: rule__STVarDeclaration__Group_4_1_0__0__Impl rule__STVarDeclaration__Group_4_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__STVarDeclaration__Group_4_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__0__Impl"
    // InternalGlobalConstantsParser.g:3990:1: rule__STVarDeclaration__Group_4_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:3994:1: ( ( LeftSquareBracket ) )
            // InternalGlobalConstantsParser.g:3995:1: ( LeftSquareBracket )
            {
            // InternalGlobalConstantsParser.g:3995:1: ( LeftSquareBracket )
            // InternalGlobalConstantsParser.g:3996:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__1"
    // InternalGlobalConstantsParser.g:4005:1: rule__STVarDeclaration__Group_4_1_0__1 : rule__STVarDeclaration__Group_4_1_0__1__Impl rule__STVarDeclaration__Group_4_1_0__2 ;
    public final void rule__STVarDeclaration__Group_4_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4009:1: ( rule__STVarDeclaration__Group_4_1_0__1__Impl rule__STVarDeclaration__Group_4_1_0__2 )
            // InternalGlobalConstantsParser.g:4010:2: rule__STVarDeclaration__Group_4_1_0__1__Impl rule__STVarDeclaration__Group_4_1_0__2
            {
            pushFollow(FOLLOW_15);
            rule__STVarDeclaration__Group_4_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__1__Impl"
    // InternalGlobalConstantsParser.g:4017:1: rule__STVarDeclaration__Group_4_1_0__1__Impl : ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4021:1: ( ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) ) )
            // InternalGlobalConstantsParser.g:4022:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) )
            {
            // InternalGlobalConstantsParser.g:4022:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) )
            // InternalGlobalConstantsParser.g:4023:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_1()); 
            }
            // InternalGlobalConstantsParser.g:4024:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 )
            // InternalGlobalConstantsParser.g:4024:3: rule__STVarDeclaration__RangesAssignment_4_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__RangesAssignment_4_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__2"
    // InternalGlobalConstantsParser.g:4032:1: rule__STVarDeclaration__Group_4_1_0__2 : rule__STVarDeclaration__Group_4_1_0__2__Impl rule__STVarDeclaration__Group_4_1_0__3 ;
    public final void rule__STVarDeclaration__Group_4_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4036:1: ( rule__STVarDeclaration__Group_4_1_0__2__Impl rule__STVarDeclaration__Group_4_1_0__3 )
            // InternalGlobalConstantsParser.g:4037:2: rule__STVarDeclaration__Group_4_1_0__2__Impl rule__STVarDeclaration__Group_4_1_0__3
            {
            pushFollow(FOLLOW_15);
            rule__STVarDeclaration__Group_4_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__2"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__2__Impl"
    // InternalGlobalConstantsParser.g:4044:1: rule__STVarDeclaration__Group_4_1_0__2__Impl : ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4048:1: ( ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* ) )
            // InternalGlobalConstantsParser.g:4049:1: ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* )
            {
            // InternalGlobalConstantsParser.g:4049:1: ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* )
            // InternalGlobalConstantsParser.g:4050:2: ( rule__STVarDeclaration__Group_4_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0_2()); 
            }
            // InternalGlobalConstantsParser.g:4051:2: ( rule__STVarDeclaration__Group_4_1_0_2__0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==Comma) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:4051:3: rule__STVarDeclaration__Group_4_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__STVarDeclaration__Group_4_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__3"
    // InternalGlobalConstantsParser.g:4059:1: rule__STVarDeclaration__Group_4_1_0__3 : rule__STVarDeclaration__Group_4_1_0__3__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4063:1: ( rule__STVarDeclaration__Group_4_1_0__3__Impl )
            // InternalGlobalConstantsParser.g:4064:2: rule__STVarDeclaration__Group_4_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__3"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__3__Impl"
    // InternalGlobalConstantsParser.g:4070:1: rule__STVarDeclaration__Group_4_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4074:1: ( ( RightSquareBracket ) )
            // InternalGlobalConstantsParser.g:4075:1: ( RightSquareBracket )
            {
            // InternalGlobalConstantsParser.g:4075:1: ( RightSquareBracket )
            // InternalGlobalConstantsParser.g:4076:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__3__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__0"
    // InternalGlobalConstantsParser.g:4086:1: rule__STVarDeclaration__Group_4_1_0_2__0 : rule__STVarDeclaration__Group_4_1_0_2__0__Impl rule__STVarDeclaration__Group_4_1_0_2__1 ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4090:1: ( rule__STVarDeclaration__Group_4_1_0_2__0__Impl rule__STVarDeclaration__Group_4_1_0_2__1 )
            // InternalGlobalConstantsParser.g:4091:2: rule__STVarDeclaration__Group_4_1_0_2__0__Impl rule__STVarDeclaration__Group_4_1_0_2__1
            {
            pushFollow(FOLLOW_7);
            rule__STVarDeclaration__Group_4_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__0__Impl"
    // InternalGlobalConstantsParser.g:4098:1: rule__STVarDeclaration__Group_4_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4102:1: ( ( Comma ) )
            // InternalGlobalConstantsParser.g:4103:1: ( Comma )
            {
            // InternalGlobalConstantsParser.g:4103:1: ( Comma )
            // InternalGlobalConstantsParser.g:4104:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__1"
    // InternalGlobalConstantsParser.g:4113:1: rule__STVarDeclaration__Group_4_1_0_2__1 : rule__STVarDeclaration__Group_4_1_0_2__1__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4117:1: ( rule__STVarDeclaration__Group_4_1_0_2__1__Impl )
            // InternalGlobalConstantsParser.g:4118:2: rule__STVarDeclaration__Group_4_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__1__Impl"
    // InternalGlobalConstantsParser.g:4124:1: rule__STVarDeclaration__Group_4_1_0_2__1__Impl : ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4128:1: ( ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) ) )
            // InternalGlobalConstantsParser.g:4129:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) )
            {
            // InternalGlobalConstantsParser.g:4129:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) )
            // InternalGlobalConstantsParser.g:4130:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_2_1()); 
            }
            // InternalGlobalConstantsParser.g:4131:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 )
            // InternalGlobalConstantsParser.g:4131:3: rule__STVarDeclaration__RangesAssignment_4_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__RangesAssignment_4_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__0"
    // InternalGlobalConstantsParser.g:4140:1: rule__STVarDeclaration__Group_4_1_1__0 : rule__STVarDeclaration__Group_4_1_1__0__Impl rule__STVarDeclaration__Group_4_1_1__1 ;
    public final void rule__STVarDeclaration__Group_4_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4144:1: ( rule__STVarDeclaration__Group_4_1_1__0__Impl rule__STVarDeclaration__Group_4_1_1__1 )
            // InternalGlobalConstantsParser.g:4145:2: rule__STVarDeclaration__Group_4_1_1__0__Impl rule__STVarDeclaration__Group_4_1_1__1
            {
            pushFollow(FOLLOW_17);
            rule__STVarDeclaration__Group_4_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__0__Impl"
    // InternalGlobalConstantsParser.g:4152:1: rule__STVarDeclaration__Group_4_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4156:1: ( ( LeftSquareBracket ) )
            // InternalGlobalConstantsParser.g:4157:1: ( LeftSquareBracket )
            {
            // InternalGlobalConstantsParser.g:4157:1: ( LeftSquareBracket )
            // InternalGlobalConstantsParser.g:4158:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__1"
    // InternalGlobalConstantsParser.g:4167:1: rule__STVarDeclaration__Group_4_1_1__1 : rule__STVarDeclaration__Group_4_1_1__1__Impl rule__STVarDeclaration__Group_4_1_1__2 ;
    public final void rule__STVarDeclaration__Group_4_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4171:1: ( rule__STVarDeclaration__Group_4_1_1__1__Impl rule__STVarDeclaration__Group_4_1_1__2 )
            // InternalGlobalConstantsParser.g:4172:2: rule__STVarDeclaration__Group_4_1_1__1__Impl rule__STVarDeclaration__Group_4_1_1__2
            {
            pushFollow(FOLLOW_15);
            rule__STVarDeclaration__Group_4_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__1__Impl"
    // InternalGlobalConstantsParser.g:4179:1: rule__STVarDeclaration__Group_4_1_1__1__Impl : ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4183:1: ( ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) ) )
            // InternalGlobalConstantsParser.g:4184:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:4184:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) )
            // InternalGlobalConstantsParser.g:4185:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_1()); 
            }
            // InternalGlobalConstantsParser.g:4186:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_1 )
            // InternalGlobalConstantsParser.g:4186:3: rule__STVarDeclaration__CountAssignment_4_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__CountAssignment_4_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__2"
    // InternalGlobalConstantsParser.g:4194:1: rule__STVarDeclaration__Group_4_1_1__2 : rule__STVarDeclaration__Group_4_1_1__2__Impl rule__STVarDeclaration__Group_4_1_1__3 ;
    public final void rule__STVarDeclaration__Group_4_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4198:1: ( rule__STVarDeclaration__Group_4_1_1__2__Impl rule__STVarDeclaration__Group_4_1_1__3 )
            // InternalGlobalConstantsParser.g:4199:2: rule__STVarDeclaration__Group_4_1_1__2__Impl rule__STVarDeclaration__Group_4_1_1__3
            {
            pushFollow(FOLLOW_15);
            rule__STVarDeclaration__Group_4_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__2"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__2__Impl"
    // InternalGlobalConstantsParser.g:4206:1: rule__STVarDeclaration__Group_4_1_1__2__Impl : ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4210:1: ( ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* ) )
            // InternalGlobalConstantsParser.g:4211:1: ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* )
            {
            // InternalGlobalConstantsParser.g:4211:1: ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* )
            // InternalGlobalConstantsParser.g:4212:2: ( rule__STVarDeclaration__Group_4_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1_2()); 
            }
            // InternalGlobalConstantsParser.g:4213:2: ( rule__STVarDeclaration__Group_4_1_1_2__0 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==Comma) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:4213:3: rule__STVarDeclaration__Group_4_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__STVarDeclaration__Group_4_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__3"
    // InternalGlobalConstantsParser.g:4221:1: rule__STVarDeclaration__Group_4_1_1__3 : rule__STVarDeclaration__Group_4_1_1__3__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4225:1: ( rule__STVarDeclaration__Group_4_1_1__3__Impl )
            // InternalGlobalConstantsParser.g:4226:2: rule__STVarDeclaration__Group_4_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__3"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__3__Impl"
    // InternalGlobalConstantsParser.g:4232:1: rule__STVarDeclaration__Group_4_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4236:1: ( ( RightSquareBracket ) )
            // InternalGlobalConstantsParser.g:4237:1: ( RightSquareBracket )
            {
            // InternalGlobalConstantsParser.g:4237:1: ( RightSquareBracket )
            // InternalGlobalConstantsParser.g:4238:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__3__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__0"
    // InternalGlobalConstantsParser.g:4248:1: rule__STVarDeclaration__Group_4_1_1_2__0 : rule__STVarDeclaration__Group_4_1_1_2__0__Impl rule__STVarDeclaration__Group_4_1_1_2__1 ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4252:1: ( rule__STVarDeclaration__Group_4_1_1_2__0__Impl rule__STVarDeclaration__Group_4_1_1_2__1 )
            // InternalGlobalConstantsParser.g:4253:2: rule__STVarDeclaration__Group_4_1_1_2__0__Impl rule__STVarDeclaration__Group_4_1_1_2__1
            {
            pushFollow(FOLLOW_17);
            rule__STVarDeclaration__Group_4_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__0__Impl"
    // InternalGlobalConstantsParser.g:4260:1: rule__STVarDeclaration__Group_4_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4264:1: ( ( Comma ) )
            // InternalGlobalConstantsParser.g:4265:1: ( Comma )
            {
            // InternalGlobalConstantsParser.g:4265:1: ( Comma )
            // InternalGlobalConstantsParser.g:4266:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__1"
    // InternalGlobalConstantsParser.g:4275:1: rule__STVarDeclaration__Group_4_1_1_2__1 : rule__STVarDeclaration__Group_4_1_1_2__1__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4279:1: ( rule__STVarDeclaration__Group_4_1_1_2__1__Impl )
            // InternalGlobalConstantsParser.g:4280:2: rule__STVarDeclaration__Group_4_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__1__Impl"
    // InternalGlobalConstantsParser.g:4286:1: rule__STVarDeclaration__Group_4_1_1_2__1__Impl : ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4290:1: ( ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) ) )
            // InternalGlobalConstantsParser.g:4291:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) )
            {
            // InternalGlobalConstantsParser.g:4291:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) )
            // InternalGlobalConstantsParser.g:4292:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_2_1()); 
            }
            // InternalGlobalConstantsParser.g:4293:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 )
            // InternalGlobalConstantsParser.g:4293:3: rule__STVarDeclaration__CountAssignment_4_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__CountAssignment_4_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_6__0"
    // InternalGlobalConstantsParser.g:4302:1: rule__STVarDeclaration__Group_6__0 : rule__STVarDeclaration__Group_6__0__Impl rule__STVarDeclaration__Group_6__1 ;
    public final void rule__STVarDeclaration__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4306:1: ( rule__STVarDeclaration__Group_6__0__Impl rule__STVarDeclaration__Group_6__1 )
            // InternalGlobalConstantsParser.g:4307:2: rule__STVarDeclaration__Group_6__0__Impl rule__STVarDeclaration__Group_6__1
            {
            pushFollow(FOLLOW_7);
            rule__STVarDeclaration__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__0"


    // $ANTLR start "rule__STVarDeclaration__Group_6__0__Impl"
    // InternalGlobalConstantsParser.g:4314:1: rule__STVarDeclaration__Group_6__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4318:1: ( ( LeftSquareBracket ) )
            // InternalGlobalConstantsParser.g:4319:1: ( LeftSquareBracket )
            {
            // InternalGlobalConstantsParser.g:4319:1: ( LeftSquareBracket )
            // InternalGlobalConstantsParser.g:4320:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_6_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_6__1"
    // InternalGlobalConstantsParser.g:4329:1: rule__STVarDeclaration__Group_6__1 : rule__STVarDeclaration__Group_6__1__Impl rule__STVarDeclaration__Group_6__2 ;
    public final void rule__STVarDeclaration__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4333:1: ( rule__STVarDeclaration__Group_6__1__Impl rule__STVarDeclaration__Group_6__2 )
            // InternalGlobalConstantsParser.g:4334:2: rule__STVarDeclaration__Group_6__1__Impl rule__STVarDeclaration__Group_6__2
            {
            pushFollow(FOLLOW_18);
            rule__STVarDeclaration__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__1"


    // $ANTLR start "rule__STVarDeclaration__Group_6__1__Impl"
    // InternalGlobalConstantsParser.g:4341:1: rule__STVarDeclaration__Group_6__1__Impl : ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) ) ;
    public final void rule__STVarDeclaration__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4345:1: ( ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) ) )
            // InternalGlobalConstantsParser.g:4346:1: ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) )
            {
            // InternalGlobalConstantsParser.g:4346:1: ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) )
            // InternalGlobalConstantsParser.g:4347:2: ( rule__STVarDeclaration__MaxLengthAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getMaxLengthAssignment_6_1()); 
            }
            // InternalGlobalConstantsParser.g:4348:2: ( rule__STVarDeclaration__MaxLengthAssignment_6_1 )
            // InternalGlobalConstantsParser.g:4348:3: rule__STVarDeclaration__MaxLengthAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__MaxLengthAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getMaxLengthAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_6__2"
    // InternalGlobalConstantsParser.g:4356:1: rule__STVarDeclaration__Group_6__2 : rule__STVarDeclaration__Group_6__2__Impl ;
    public final void rule__STVarDeclaration__Group_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4360:1: ( rule__STVarDeclaration__Group_6__2__Impl )
            // InternalGlobalConstantsParser.g:4361:2: rule__STVarDeclaration__Group_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__2"


    // $ANTLR start "rule__STVarDeclaration__Group_6__2__Impl"
    // InternalGlobalConstantsParser.g:4367:1: rule__STVarDeclaration__Group_6__2__Impl : ( RightSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4371:1: ( ( RightSquareBracket ) )
            // InternalGlobalConstantsParser.g:4372:1: ( RightSquareBracket )
            {
            // InternalGlobalConstantsParser.g:4372:1: ( RightSquareBracket )
            // InternalGlobalConstantsParser.g:4373:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_6_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_7__0"
    // InternalGlobalConstantsParser.g:4383:1: rule__STVarDeclaration__Group_7__0 : rule__STVarDeclaration__Group_7__0__Impl rule__STVarDeclaration__Group_7__1 ;
    public final void rule__STVarDeclaration__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4387:1: ( rule__STVarDeclaration__Group_7__0__Impl rule__STVarDeclaration__Group_7__1 )
            // InternalGlobalConstantsParser.g:4388:2: rule__STVarDeclaration__Group_7__0__Impl rule__STVarDeclaration__Group_7__1
            {
            pushFollow(FOLLOW_8);
            rule__STVarDeclaration__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__0"


    // $ANTLR start "rule__STVarDeclaration__Group_7__0__Impl"
    // InternalGlobalConstantsParser.g:4395:1: rule__STVarDeclaration__Group_7__0__Impl : ( ColonEqualsSign ) ;
    public final void rule__STVarDeclaration__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4399:1: ( ( ColonEqualsSign ) )
            // InternalGlobalConstantsParser.g:4400:1: ( ColonEqualsSign )
            {
            // InternalGlobalConstantsParser.g:4400:1: ( ColonEqualsSign )
            // InternalGlobalConstantsParser.g:4401:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getColonEqualsSignKeyword_7_0()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getColonEqualsSignKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_7__1"
    // InternalGlobalConstantsParser.g:4410:1: rule__STVarDeclaration__Group_7__1 : rule__STVarDeclaration__Group_7__1__Impl ;
    public final void rule__STVarDeclaration__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4414:1: ( rule__STVarDeclaration__Group_7__1__Impl )
            // InternalGlobalConstantsParser.g:4415:2: rule__STVarDeclaration__Group_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__1"


    // $ANTLR start "rule__STVarDeclaration__Group_7__1__Impl"
    // InternalGlobalConstantsParser.g:4421:1: rule__STVarDeclaration__Group_7__1__Impl : ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) ) ;
    public final void rule__STVarDeclaration__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4425:1: ( ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) ) )
            // InternalGlobalConstantsParser.g:4426:1: ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) )
            {
            // InternalGlobalConstantsParser.g:4426:1: ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) )
            // InternalGlobalConstantsParser.g:4427:2: ( rule__STVarDeclaration__DefaultValueAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getDefaultValueAssignment_7_1()); 
            }
            // InternalGlobalConstantsParser.g:4428:2: ( rule__STVarDeclaration__DefaultValueAssignment_7_1 )
            // InternalGlobalConstantsParser.g:4428:3: rule__STVarDeclaration__DefaultValueAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__DefaultValueAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getDefaultValueAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group__0"
    // InternalGlobalConstantsParser.g:4437:1: rule__STTypeDeclaration__Group__0 : rule__STTypeDeclaration__Group__0__Impl rule__STTypeDeclaration__Group__1 ;
    public final void rule__STTypeDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4441:1: ( rule__STTypeDeclaration__Group__0__Impl rule__STTypeDeclaration__Group__1 )
            // InternalGlobalConstantsParser.g:4442:2: rule__STTypeDeclaration__Group__0__Impl rule__STTypeDeclaration__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__STTypeDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__0"


    // $ANTLR start "rule__STTypeDeclaration__Group__0__Impl"
    // InternalGlobalConstantsParser.g:4449:1: rule__STTypeDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__STTypeDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4453:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:4454:1: ( () )
            {
            // InternalGlobalConstantsParser.g:4454:1: ( () )
            // InternalGlobalConstantsParser.g:4455:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getSTTypeDeclarationAction_0()); 
            }
            // InternalGlobalConstantsParser.g:4456:2: ()
            // InternalGlobalConstantsParser.g:4456:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getSTTypeDeclarationAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group__1"
    // InternalGlobalConstantsParser.g:4464:1: rule__STTypeDeclaration__Group__1 : rule__STTypeDeclaration__Group__1__Impl rule__STTypeDeclaration__Group__2 ;
    public final void rule__STTypeDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4468:1: ( rule__STTypeDeclaration__Group__1__Impl rule__STTypeDeclaration__Group__2 )
            // InternalGlobalConstantsParser.g:4469:2: rule__STTypeDeclaration__Group__1__Impl rule__STTypeDeclaration__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__STTypeDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__1"


    // $ANTLR start "rule__STTypeDeclaration__Group__1__Impl"
    // InternalGlobalConstantsParser.g:4476:1: rule__STTypeDeclaration__Group__1__Impl : ( ( rule__STTypeDeclaration__Group_1__0 )? ) ;
    public final void rule__STTypeDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4480:1: ( ( ( rule__STTypeDeclaration__Group_1__0 )? ) )
            // InternalGlobalConstantsParser.g:4481:1: ( ( rule__STTypeDeclaration__Group_1__0 )? )
            {
            // InternalGlobalConstantsParser.g:4481:1: ( ( rule__STTypeDeclaration__Group_1__0 )? )
            // InternalGlobalConstantsParser.g:4482:2: ( rule__STTypeDeclaration__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1()); 
            }
            // InternalGlobalConstantsParser.g:4483:2: ( rule__STTypeDeclaration__Group_1__0 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==ARRAY) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalGlobalConstantsParser.g:4483:3: rule__STTypeDeclaration__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STTypeDeclaration__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group__2"
    // InternalGlobalConstantsParser.g:4491:1: rule__STTypeDeclaration__Group__2 : rule__STTypeDeclaration__Group__2__Impl rule__STTypeDeclaration__Group__3 ;
    public final void rule__STTypeDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4495:1: ( rule__STTypeDeclaration__Group__2__Impl rule__STTypeDeclaration__Group__3 )
            // InternalGlobalConstantsParser.g:4496:2: rule__STTypeDeclaration__Group__2__Impl rule__STTypeDeclaration__Group__3
            {
            pushFollow(FOLLOW_13);
            rule__STTypeDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__2"


    // $ANTLR start "rule__STTypeDeclaration__Group__2__Impl"
    // InternalGlobalConstantsParser.g:4503:1: rule__STTypeDeclaration__Group__2__Impl : ( ( rule__STTypeDeclaration__TypeAssignment_2 ) ) ;
    public final void rule__STTypeDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4507:1: ( ( ( rule__STTypeDeclaration__TypeAssignment_2 ) ) )
            // InternalGlobalConstantsParser.g:4508:1: ( ( rule__STTypeDeclaration__TypeAssignment_2 ) )
            {
            // InternalGlobalConstantsParser.g:4508:1: ( ( rule__STTypeDeclaration__TypeAssignment_2 ) )
            // InternalGlobalConstantsParser.g:4509:2: ( rule__STTypeDeclaration__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getTypeAssignment_2()); 
            }
            // InternalGlobalConstantsParser.g:4510:2: ( rule__STTypeDeclaration__TypeAssignment_2 )
            // InternalGlobalConstantsParser.g:4510:3: rule__STTypeDeclaration__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__2__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group__3"
    // InternalGlobalConstantsParser.g:4518:1: rule__STTypeDeclaration__Group__3 : rule__STTypeDeclaration__Group__3__Impl ;
    public final void rule__STTypeDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4522:1: ( rule__STTypeDeclaration__Group__3__Impl )
            // InternalGlobalConstantsParser.g:4523:2: rule__STTypeDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__3"


    // $ANTLR start "rule__STTypeDeclaration__Group__3__Impl"
    // InternalGlobalConstantsParser.g:4529:1: rule__STTypeDeclaration__Group__3__Impl : ( ( rule__STTypeDeclaration__Group_3__0 )? ) ;
    public final void rule__STTypeDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4533:1: ( ( ( rule__STTypeDeclaration__Group_3__0 )? ) )
            // InternalGlobalConstantsParser.g:4534:1: ( ( rule__STTypeDeclaration__Group_3__0 )? )
            {
            // InternalGlobalConstantsParser.g:4534:1: ( ( rule__STTypeDeclaration__Group_3__0 )? )
            // InternalGlobalConstantsParser.g:4535:2: ( rule__STTypeDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup_3()); 
            }
            // InternalGlobalConstantsParser.g:4536:2: ( rule__STTypeDeclaration__Group_3__0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==LeftSquareBracket) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalGlobalConstantsParser.g:4536:3: rule__STTypeDeclaration__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STTypeDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__3__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__0"
    // InternalGlobalConstantsParser.g:4545:1: rule__STTypeDeclaration__Group_1__0 : rule__STTypeDeclaration__Group_1__0__Impl rule__STTypeDeclaration__Group_1__1 ;
    public final void rule__STTypeDeclaration__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4549:1: ( rule__STTypeDeclaration__Group_1__0__Impl rule__STTypeDeclaration__Group_1__1 )
            // InternalGlobalConstantsParser.g:4550:2: rule__STTypeDeclaration__Group_1__0__Impl rule__STTypeDeclaration__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__STTypeDeclaration__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:4557:1: rule__STTypeDeclaration__Group_1__0__Impl : ( ( rule__STTypeDeclaration__ArrayAssignment_1_0 ) ) ;
    public final void rule__STTypeDeclaration__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4561:1: ( ( ( rule__STTypeDeclaration__ArrayAssignment_1_0 ) ) )
            // InternalGlobalConstantsParser.g:4562:1: ( ( rule__STTypeDeclaration__ArrayAssignment_1_0 ) )
            {
            // InternalGlobalConstantsParser.g:4562:1: ( ( rule__STTypeDeclaration__ArrayAssignment_1_0 ) )
            // InternalGlobalConstantsParser.g:4563:2: ( rule__STTypeDeclaration__ArrayAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getArrayAssignment_1_0()); 
            }
            // InternalGlobalConstantsParser.g:4564:2: ( rule__STTypeDeclaration__ArrayAssignment_1_0 )
            // InternalGlobalConstantsParser.g:4564:3: rule__STTypeDeclaration__ArrayAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__ArrayAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getArrayAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__1"
    // InternalGlobalConstantsParser.g:4572:1: rule__STTypeDeclaration__Group_1__1 : rule__STTypeDeclaration__Group_1__1__Impl rule__STTypeDeclaration__Group_1__2 ;
    public final void rule__STTypeDeclaration__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4576:1: ( rule__STTypeDeclaration__Group_1__1__Impl rule__STTypeDeclaration__Group_1__2 )
            // InternalGlobalConstantsParser.g:4577:2: rule__STTypeDeclaration__Group_1__1__Impl rule__STTypeDeclaration__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__STTypeDeclaration__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:4584:1: rule__STTypeDeclaration__Group_1__1__Impl : ( ( rule__STTypeDeclaration__Alternatives_1_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4588:1: ( ( ( rule__STTypeDeclaration__Alternatives_1_1 ) ) )
            // InternalGlobalConstantsParser.g:4589:1: ( ( rule__STTypeDeclaration__Alternatives_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:4589:1: ( ( rule__STTypeDeclaration__Alternatives_1_1 ) )
            // InternalGlobalConstantsParser.g:4590:2: ( rule__STTypeDeclaration__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getAlternatives_1_1()); 
            }
            // InternalGlobalConstantsParser.g:4591:2: ( rule__STTypeDeclaration__Alternatives_1_1 )
            // InternalGlobalConstantsParser.g:4591:3: rule__STTypeDeclaration__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__2"
    // InternalGlobalConstantsParser.g:4599:1: rule__STTypeDeclaration__Group_1__2 : rule__STTypeDeclaration__Group_1__2__Impl ;
    public final void rule__STTypeDeclaration__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4603:1: ( rule__STTypeDeclaration__Group_1__2__Impl )
            // InternalGlobalConstantsParser.g:4604:2: rule__STTypeDeclaration__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__2"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__2__Impl"
    // InternalGlobalConstantsParser.g:4610:1: rule__STTypeDeclaration__Group_1__2__Impl : ( OF ) ;
    public final void rule__STTypeDeclaration__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4614:1: ( ( OF ) )
            // InternalGlobalConstantsParser.g:4615:1: ( OF )
            {
            // InternalGlobalConstantsParser.g:4615:1: ( OF )
            // InternalGlobalConstantsParser.g:4616:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getOFKeyword_1_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getOFKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__2__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__0"
    // InternalGlobalConstantsParser.g:4626:1: rule__STTypeDeclaration__Group_1_1_0__0 : rule__STTypeDeclaration__Group_1_1_0__0__Impl rule__STTypeDeclaration__Group_1_1_0__1 ;
    public final void rule__STTypeDeclaration__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4630:1: ( rule__STTypeDeclaration__Group_1_1_0__0__Impl rule__STTypeDeclaration__Group_1_1_0__1 )
            // InternalGlobalConstantsParser.g:4631:2: rule__STTypeDeclaration__Group_1_1_0__0__Impl rule__STTypeDeclaration__Group_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__STTypeDeclaration__Group_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__0__Impl"
    // InternalGlobalConstantsParser.g:4638:1: rule__STTypeDeclaration__Group_1_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4642:1: ( ( LeftSquareBracket ) )
            // InternalGlobalConstantsParser.g:4643:1: ( LeftSquareBracket )
            {
            // InternalGlobalConstantsParser.g:4643:1: ( LeftSquareBracket )
            // InternalGlobalConstantsParser.g:4644:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_1_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__1"
    // InternalGlobalConstantsParser.g:4653:1: rule__STTypeDeclaration__Group_1_1_0__1 : rule__STTypeDeclaration__Group_1_1_0__1__Impl rule__STTypeDeclaration__Group_1_1_0__2 ;
    public final void rule__STTypeDeclaration__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4657:1: ( rule__STTypeDeclaration__Group_1_1_0__1__Impl rule__STTypeDeclaration__Group_1_1_0__2 )
            // InternalGlobalConstantsParser.g:4658:2: rule__STTypeDeclaration__Group_1_1_0__1__Impl rule__STTypeDeclaration__Group_1_1_0__2
            {
            pushFollow(FOLLOW_15);
            rule__STTypeDeclaration__Group_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__1__Impl"
    // InternalGlobalConstantsParser.g:4665:1: rule__STTypeDeclaration__Group_1_1_0__1__Impl : ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4669:1: ( ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 ) ) )
            // InternalGlobalConstantsParser.g:4670:1: ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 ) )
            {
            // InternalGlobalConstantsParser.g:4670:1: ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 ) )
            // InternalGlobalConstantsParser.g:4671:2: ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRangesAssignment_1_1_0_1()); 
            }
            // InternalGlobalConstantsParser.g:4672:2: ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 )
            // InternalGlobalConstantsParser.g:4672:3: rule__STTypeDeclaration__RangesAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__RangesAssignment_1_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRangesAssignment_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__2"
    // InternalGlobalConstantsParser.g:4680:1: rule__STTypeDeclaration__Group_1_1_0__2 : rule__STTypeDeclaration__Group_1_1_0__2__Impl rule__STTypeDeclaration__Group_1_1_0__3 ;
    public final void rule__STTypeDeclaration__Group_1_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4684:1: ( rule__STTypeDeclaration__Group_1_1_0__2__Impl rule__STTypeDeclaration__Group_1_1_0__3 )
            // InternalGlobalConstantsParser.g:4685:2: rule__STTypeDeclaration__Group_1_1_0__2__Impl rule__STTypeDeclaration__Group_1_1_0__3
            {
            pushFollow(FOLLOW_15);
            rule__STTypeDeclaration__Group_1_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__2"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__2__Impl"
    // InternalGlobalConstantsParser.g:4692:1: rule__STTypeDeclaration__Group_1_1_0__2__Impl : ( ( rule__STTypeDeclaration__Group_1_1_0_2__0 )* ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4696:1: ( ( ( rule__STTypeDeclaration__Group_1_1_0_2__0 )* ) )
            // InternalGlobalConstantsParser.g:4697:1: ( ( rule__STTypeDeclaration__Group_1_1_0_2__0 )* )
            {
            // InternalGlobalConstantsParser.g:4697:1: ( ( rule__STTypeDeclaration__Group_1_1_0_2__0 )* )
            // InternalGlobalConstantsParser.g:4698:2: ( rule__STTypeDeclaration__Group_1_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_0_2()); 
            }
            // InternalGlobalConstantsParser.g:4699:2: ( rule__STTypeDeclaration__Group_1_1_0_2__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==Comma) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:4699:3: rule__STTypeDeclaration__Group_1_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__STTypeDeclaration__Group_1_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__2__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__3"
    // InternalGlobalConstantsParser.g:4707:1: rule__STTypeDeclaration__Group_1_1_0__3 : rule__STTypeDeclaration__Group_1_1_0__3__Impl ;
    public final void rule__STTypeDeclaration__Group_1_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4711:1: ( rule__STTypeDeclaration__Group_1_1_0__3__Impl )
            // InternalGlobalConstantsParser.g:4712:2: rule__STTypeDeclaration__Group_1_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__3"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__3__Impl"
    // InternalGlobalConstantsParser.g:4718:1: rule__STTypeDeclaration__Group_1_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4722:1: ( ( RightSquareBracket ) )
            // InternalGlobalConstantsParser.g:4723:1: ( RightSquareBracket )
            {
            // InternalGlobalConstantsParser.g:4723:1: ( RightSquareBracket )
            // InternalGlobalConstantsParser.g:4724:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_1_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_1_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__3__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0_2__0"
    // InternalGlobalConstantsParser.g:4734:1: rule__STTypeDeclaration__Group_1_1_0_2__0 : rule__STTypeDeclaration__Group_1_1_0_2__0__Impl rule__STTypeDeclaration__Group_1_1_0_2__1 ;
    public final void rule__STTypeDeclaration__Group_1_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4738:1: ( rule__STTypeDeclaration__Group_1_1_0_2__0__Impl rule__STTypeDeclaration__Group_1_1_0_2__1 )
            // InternalGlobalConstantsParser.g:4739:2: rule__STTypeDeclaration__Group_1_1_0_2__0__Impl rule__STTypeDeclaration__Group_1_1_0_2__1
            {
            pushFollow(FOLLOW_7);
            rule__STTypeDeclaration__Group_1_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0_2__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0_2__0__Impl"
    // InternalGlobalConstantsParser.g:4746:1: rule__STTypeDeclaration__Group_1_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4750:1: ( ( Comma ) )
            // InternalGlobalConstantsParser.g:4751:1: ( Comma )
            {
            // InternalGlobalConstantsParser.g:4751:1: ( Comma )
            // InternalGlobalConstantsParser.g:4752:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCommaKeyword_1_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCommaKeyword_1_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0_2__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0_2__1"
    // InternalGlobalConstantsParser.g:4761:1: rule__STTypeDeclaration__Group_1_1_0_2__1 : rule__STTypeDeclaration__Group_1_1_0_2__1__Impl ;
    public final void rule__STTypeDeclaration__Group_1_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4765:1: ( rule__STTypeDeclaration__Group_1_1_0_2__1__Impl )
            // InternalGlobalConstantsParser.g:4766:2: rule__STTypeDeclaration__Group_1_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0_2__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0_2__1__Impl"
    // InternalGlobalConstantsParser.g:4772:1: rule__STTypeDeclaration__Group_1_1_0_2__1__Impl : ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4776:1: ( ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 ) ) )
            // InternalGlobalConstantsParser.g:4777:1: ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 ) )
            {
            // InternalGlobalConstantsParser.g:4777:1: ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 ) )
            // InternalGlobalConstantsParser.g:4778:2: ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRangesAssignment_1_1_0_2_1()); 
            }
            // InternalGlobalConstantsParser.g:4779:2: ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 )
            // InternalGlobalConstantsParser.g:4779:3: rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRangesAssignment_1_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0_2__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__0"
    // InternalGlobalConstantsParser.g:4788:1: rule__STTypeDeclaration__Group_1_1_1__0 : rule__STTypeDeclaration__Group_1_1_1__0__Impl rule__STTypeDeclaration__Group_1_1_1__1 ;
    public final void rule__STTypeDeclaration__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4792:1: ( rule__STTypeDeclaration__Group_1_1_1__0__Impl rule__STTypeDeclaration__Group_1_1_1__1 )
            // InternalGlobalConstantsParser.g:4793:2: rule__STTypeDeclaration__Group_1_1_1__0__Impl rule__STTypeDeclaration__Group_1_1_1__1
            {
            pushFollow(FOLLOW_17);
            rule__STTypeDeclaration__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__0__Impl"
    // InternalGlobalConstantsParser.g:4800:1: rule__STTypeDeclaration__Group_1_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4804:1: ( ( LeftSquareBracket ) )
            // InternalGlobalConstantsParser.g:4805:1: ( LeftSquareBracket )
            {
            // InternalGlobalConstantsParser.g:4805:1: ( LeftSquareBracket )
            // InternalGlobalConstantsParser.g:4806:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_1_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__1"
    // InternalGlobalConstantsParser.g:4815:1: rule__STTypeDeclaration__Group_1_1_1__1 : rule__STTypeDeclaration__Group_1_1_1__1__Impl rule__STTypeDeclaration__Group_1_1_1__2 ;
    public final void rule__STTypeDeclaration__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4819:1: ( rule__STTypeDeclaration__Group_1_1_1__1__Impl rule__STTypeDeclaration__Group_1_1_1__2 )
            // InternalGlobalConstantsParser.g:4820:2: rule__STTypeDeclaration__Group_1_1_1__1__Impl rule__STTypeDeclaration__Group_1_1_1__2
            {
            pushFollow(FOLLOW_15);
            rule__STTypeDeclaration__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__1__Impl"
    // InternalGlobalConstantsParser.g:4827:1: rule__STTypeDeclaration__Group_1_1_1__1__Impl : ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4831:1: ( ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 ) ) )
            // InternalGlobalConstantsParser.g:4832:1: ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:4832:1: ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 ) )
            // InternalGlobalConstantsParser.g:4833:2: ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAssignment_1_1_1_1()); 
            }
            // InternalGlobalConstantsParser.g:4834:2: ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 )
            // InternalGlobalConstantsParser.g:4834:3: rule__STTypeDeclaration__CountAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__CountAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAssignment_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__2"
    // InternalGlobalConstantsParser.g:4842:1: rule__STTypeDeclaration__Group_1_1_1__2 : rule__STTypeDeclaration__Group_1_1_1__2__Impl rule__STTypeDeclaration__Group_1_1_1__3 ;
    public final void rule__STTypeDeclaration__Group_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4846:1: ( rule__STTypeDeclaration__Group_1_1_1__2__Impl rule__STTypeDeclaration__Group_1_1_1__3 )
            // InternalGlobalConstantsParser.g:4847:2: rule__STTypeDeclaration__Group_1_1_1__2__Impl rule__STTypeDeclaration__Group_1_1_1__3
            {
            pushFollow(FOLLOW_15);
            rule__STTypeDeclaration__Group_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__2"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__2__Impl"
    // InternalGlobalConstantsParser.g:4854:1: rule__STTypeDeclaration__Group_1_1_1__2__Impl : ( ( rule__STTypeDeclaration__Group_1_1_1_2__0 )* ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4858:1: ( ( ( rule__STTypeDeclaration__Group_1_1_1_2__0 )* ) )
            // InternalGlobalConstantsParser.g:4859:1: ( ( rule__STTypeDeclaration__Group_1_1_1_2__0 )* )
            {
            // InternalGlobalConstantsParser.g:4859:1: ( ( rule__STTypeDeclaration__Group_1_1_1_2__0 )* )
            // InternalGlobalConstantsParser.g:4860:2: ( rule__STTypeDeclaration__Group_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_1_2()); 
            }
            // InternalGlobalConstantsParser.g:4861:2: ( rule__STTypeDeclaration__Group_1_1_1_2__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==Comma) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:4861:3: rule__STTypeDeclaration__Group_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__STTypeDeclaration__Group_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__2__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__3"
    // InternalGlobalConstantsParser.g:4869:1: rule__STTypeDeclaration__Group_1_1_1__3 : rule__STTypeDeclaration__Group_1_1_1__3__Impl ;
    public final void rule__STTypeDeclaration__Group_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4873:1: ( rule__STTypeDeclaration__Group_1_1_1__3__Impl )
            // InternalGlobalConstantsParser.g:4874:2: rule__STTypeDeclaration__Group_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__3"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__3__Impl"
    // InternalGlobalConstantsParser.g:4880:1: rule__STTypeDeclaration__Group_1_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4884:1: ( ( RightSquareBracket ) )
            // InternalGlobalConstantsParser.g:4885:1: ( RightSquareBracket )
            {
            // InternalGlobalConstantsParser.g:4885:1: ( RightSquareBracket )
            // InternalGlobalConstantsParser.g:4886:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__3__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1_2__0"
    // InternalGlobalConstantsParser.g:4896:1: rule__STTypeDeclaration__Group_1_1_1_2__0 : rule__STTypeDeclaration__Group_1_1_1_2__0__Impl rule__STTypeDeclaration__Group_1_1_1_2__1 ;
    public final void rule__STTypeDeclaration__Group_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4900:1: ( rule__STTypeDeclaration__Group_1_1_1_2__0__Impl rule__STTypeDeclaration__Group_1_1_1_2__1 )
            // InternalGlobalConstantsParser.g:4901:2: rule__STTypeDeclaration__Group_1_1_1_2__0__Impl rule__STTypeDeclaration__Group_1_1_1_2__1
            {
            pushFollow(FOLLOW_17);
            rule__STTypeDeclaration__Group_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1_2__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1_2__0__Impl"
    // InternalGlobalConstantsParser.g:4908:1: rule__STTypeDeclaration__Group_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4912:1: ( ( Comma ) )
            // InternalGlobalConstantsParser.g:4913:1: ( Comma )
            {
            // InternalGlobalConstantsParser.g:4913:1: ( Comma )
            // InternalGlobalConstantsParser.g:4914:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCommaKeyword_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCommaKeyword_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1_2__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1_2__1"
    // InternalGlobalConstantsParser.g:4923:1: rule__STTypeDeclaration__Group_1_1_1_2__1 : rule__STTypeDeclaration__Group_1_1_1_2__1__Impl ;
    public final void rule__STTypeDeclaration__Group_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4927:1: ( rule__STTypeDeclaration__Group_1_1_1_2__1__Impl )
            // InternalGlobalConstantsParser.g:4928:2: rule__STTypeDeclaration__Group_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1_2__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1_2__1__Impl"
    // InternalGlobalConstantsParser.g:4934:1: rule__STTypeDeclaration__Group_1_1_1_2__1__Impl : ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4938:1: ( ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 ) ) )
            // InternalGlobalConstantsParser.g:4939:1: ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 ) )
            {
            // InternalGlobalConstantsParser.g:4939:1: ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 ) )
            // InternalGlobalConstantsParser.g:4940:2: ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAssignment_1_1_1_2_1()); 
            }
            // InternalGlobalConstantsParser.g:4941:2: ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 )
            // InternalGlobalConstantsParser.g:4941:3: rule__STTypeDeclaration__CountAssignment_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__CountAssignment_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAssignment_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1_2__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__0"
    // InternalGlobalConstantsParser.g:4950:1: rule__STTypeDeclaration__Group_3__0 : rule__STTypeDeclaration__Group_3__0__Impl rule__STTypeDeclaration__Group_3__1 ;
    public final void rule__STTypeDeclaration__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4954:1: ( rule__STTypeDeclaration__Group_3__0__Impl rule__STTypeDeclaration__Group_3__1 )
            // InternalGlobalConstantsParser.g:4955:2: rule__STTypeDeclaration__Group_3__0__Impl rule__STTypeDeclaration__Group_3__1
            {
            pushFollow(FOLLOW_7);
            rule__STTypeDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__0__Impl"
    // InternalGlobalConstantsParser.g:4962:1: rule__STTypeDeclaration__Group_3__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4966:1: ( ( LeftSquareBracket ) )
            // InternalGlobalConstantsParser.g:4967:1: ( LeftSquareBracket )
            {
            // InternalGlobalConstantsParser.g:4967:1: ( LeftSquareBracket )
            // InternalGlobalConstantsParser.g:4968:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_3_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__1"
    // InternalGlobalConstantsParser.g:4977:1: rule__STTypeDeclaration__Group_3__1 : rule__STTypeDeclaration__Group_3__1__Impl rule__STTypeDeclaration__Group_3__2 ;
    public final void rule__STTypeDeclaration__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4981:1: ( rule__STTypeDeclaration__Group_3__1__Impl rule__STTypeDeclaration__Group_3__2 )
            // InternalGlobalConstantsParser.g:4982:2: rule__STTypeDeclaration__Group_3__1__Impl rule__STTypeDeclaration__Group_3__2
            {
            pushFollow(FOLLOW_18);
            rule__STTypeDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__1__Impl"
    // InternalGlobalConstantsParser.g:4989:1: rule__STTypeDeclaration__Group_3__1__Impl : ( ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:4993:1: ( ( ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 ) ) )
            // InternalGlobalConstantsParser.g:4994:1: ( ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 ) )
            {
            // InternalGlobalConstantsParser.g:4994:1: ( ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 ) )
            // InternalGlobalConstantsParser.g:4995:2: ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getMaxLengthAssignment_3_1()); 
            }
            // InternalGlobalConstantsParser.g:4996:2: ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 )
            // InternalGlobalConstantsParser.g:4996:3: rule__STTypeDeclaration__MaxLengthAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__MaxLengthAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getMaxLengthAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__2"
    // InternalGlobalConstantsParser.g:5004:1: rule__STTypeDeclaration__Group_3__2 : rule__STTypeDeclaration__Group_3__2__Impl ;
    public final void rule__STTypeDeclaration__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5008:1: ( rule__STTypeDeclaration__Group_3__2__Impl )
            // InternalGlobalConstantsParser.g:5009:2: rule__STTypeDeclaration__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__2"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__2__Impl"
    // InternalGlobalConstantsParser.g:5015:1: rule__STTypeDeclaration__Group_3__2__Impl : ( RightSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5019:1: ( ( RightSquareBracket ) )
            // InternalGlobalConstantsParser.g:5020:1: ( RightSquareBracket )
            {
            // InternalGlobalConstantsParser.g:5020:1: ( RightSquareBracket )
            // InternalGlobalConstantsParser.g:5021:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_3_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__2__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__0"
    // InternalGlobalConstantsParser.g:5031:1: rule__STArrayInitializerExpression__Group__0 : rule__STArrayInitializerExpression__Group__0__Impl rule__STArrayInitializerExpression__Group__1 ;
    public final void rule__STArrayInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5035:1: ( rule__STArrayInitializerExpression__Group__0__Impl rule__STArrayInitializerExpression__Group__1 )
            // InternalGlobalConstantsParser.g:5036:2: rule__STArrayInitializerExpression__Group__0__Impl rule__STArrayInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__STArrayInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__0"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:5043:1: rule__STArrayInitializerExpression__Group__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STArrayInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5047:1: ( ( LeftSquareBracket ) )
            // InternalGlobalConstantsParser.g:5048:1: ( LeftSquareBracket )
            {
            // InternalGlobalConstantsParser.g:5048:1: ( LeftSquareBracket )
            // InternalGlobalConstantsParser.g:5049:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__1"
    // InternalGlobalConstantsParser.g:5058:1: rule__STArrayInitializerExpression__Group__1 : rule__STArrayInitializerExpression__Group__1__Impl rule__STArrayInitializerExpression__Group__2 ;
    public final void rule__STArrayInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5062:1: ( rule__STArrayInitializerExpression__Group__1__Impl rule__STArrayInitializerExpression__Group__2 )
            // InternalGlobalConstantsParser.g:5063:2: rule__STArrayInitializerExpression__Group__1__Impl rule__STArrayInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_15);
            rule__STArrayInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__1"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:5070:1: rule__STArrayInitializerExpression__Group__1__Impl : ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__STArrayInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5074:1: ( ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:5075:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:5075:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) )
            // InternalGlobalConstantsParser.g:5076:2: ( rule__STArrayInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:5077:2: ( rule__STArrayInitializerExpression__ValuesAssignment_1 )
            // InternalGlobalConstantsParser.g:5077:3: rule__STArrayInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__2"
    // InternalGlobalConstantsParser.g:5085:1: rule__STArrayInitializerExpression__Group__2 : rule__STArrayInitializerExpression__Group__2__Impl rule__STArrayInitializerExpression__Group__3 ;
    public final void rule__STArrayInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5089:1: ( rule__STArrayInitializerExpression__Group__2__Impl rule__STArrayInitializerExpression__Group__3 )
            // InternalGlobalConstantsParser.g:5090:2: rule__STArrayInitializerExpression__Group__2__Impl rule__STArrayInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_15);
            rule__STArrayInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__2"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__2__Impl"
    // InternalGlobalConstantsParser.g:5097:1: rule__STArrayInitializerExpression__Group__2__Impl : ( ( rule__STArrayInitializerExpression__Group_2__0 )* ) ;
    public final void rule__STArrayInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5101:1: ( ( ( rule__STArrayInitializerExpression__Group_2__0 )* ) )
            // InternalGlobalConstantsParser.g:5102:1: ( ( rule__STArrayInitializerExpression__Group_2__0 )* )
            {
            // InternalGlobalConstantsParser.g:5102:1: ( ( rule__STArrayInitializerExpression__Group_2__0 )* )
            // InternalGlobalConstantsParser.g:5103:2: ( rule__STArrayInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalGlobalConstantsParser.g:5104:2: ( rule__STArrayInitializerExpression__Group_2__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==Comma) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:5104:3: rule__STArrayInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__STArrayInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__3"
    // InternalGlobalConstantsParser.g:5112:1: rule__STArrayInitializerExpression__Group__3 : rule__STArrayInitializerExpression__Group__3__Impl ;
    public final void rule__STArrayInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5116:1: ( rule__STArrayInitializerExpression__Group__3__Impl )
            // InternalGlobalConstantsParser.g:5117:2: rule__STArrayInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__3"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__3__Impl"
    // InternalGlobalConstantsParser.g:5123:1: rule__STArrayInitializerExpression__Group__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STArrayInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5127:1: ( ( RightSquareBracket ) )
            // InternalGlobalConstantsParser.g:5128:1: ( RightSquareBracket )
            {
            // InternalGlobalConstantsParser.g:5128:1: ( RightSquareBracket )
            // InternalGlobalConstantsParser.g:5129:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__0"
    // InternalGlobalConstantsParser.g:5139:1: rule__STArrayInitializerExpression__Group_2__0 : rule__STArrayInitializerExpression__Group_2__0__Impl rule__STArrayInitializerExpression__Group_2__1 ;
    public final void rule__STArrayInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5143:1: ( rule__STArrayInitializerExpression__Group_2__0__Impl rule__STArrayInitializerExpression__Group_2__1 )
            // InternalGlobalConstantsParser.g:5144:2: rule__STArrayInitializerExpression__Group_2__0__Impl rule__STArrayInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_8);
            rule__STArrayInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__0"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__0__Impl"
    // InternalGlobalConstantsParser.g:5151:1: rule__STArrayInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__STArrayInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5155:1: ( ( Comma ) )
            // InternalGlobalConstantsParser.g:5156:1: ( Comma )
            {
            // InternalGlobalConstantsParser.g:5156:1: ( Comma )
            // InternalGlobalConstantsParser.g:5157:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__1"
    // InternalGlobalConstantsParser.g:5166:1: rule__STArrayInitializerExpression__Group_2__1 : rule__STArrayInitializerExpression__Group_2__1__Impl ;
    public final void rule__STArrayInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5170:1: ( rule__STArrayInitializerExpression__Group_2__1__Impl )
            // InternalGlobalConstantsParser.g:5171:2: rule__STArrayInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__1"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__1__Impl"
    // InternalGlobalConstantsParser.g:5177:1: rule__STArrayInitializerExpression__Group_2__1__Impl : ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__STArrayInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5181:1: ( ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalGlobalConstantsParser.g:5182:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalGlobalConstantsParser.g:5182:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalGlobalConstantsParser.g:5183:2: ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalGlobalConstantsParser.g:5184:2: ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 )
            // InternalGlobalConstantsParser.g:5184:3: rule__STArrayInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group__0"
    // InternalGlobalConstantsParser.g:5193:1: rule__STArrayInitElement__Group__0 : rule__STArrayInitElement__Group__0__Impl rule__STArrayInitElement__Group__1 ;
    public final void rule__STArrayInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5197:1: ( rule__STArrayInitElement__Group__0__Impl rule__STArrayInitElement__Group__1 )
            // InternalGlobalConstantsParser.g:5198:2: rule__STArrayInitElement__Group__0__Impl rule__STArrayInitElement__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STArrayInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group__0"


    // $ANTLR start "rule__STArrayInitElement__Group__0__Impl"
    // InternalGlobalConstantsParser.g:5205:1: rule__STArrayInitElement__Group__0__Impl : ( ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) ;
    public final void rule__STArrayInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5209:1: ( ( ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) )
            // InternalGlobalConstantsParser.g:5210:1: ( ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            {
            // InternalGlobalConstantsParser.g:5210:1: ( ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            // InternalGlobalConstantsParser.g:5211:2: ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }
            // InternalGlobalConstantsParser.g:5212:2: ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 )
            // InternalGlobalConstantsParser.g:5212:3: rule__STArrayInitElement__IndexOrInitExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__IndexOrInitExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group__0__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group__1"
    // InternalGlobalConstantsParser.g:5220:1: rule__STArrayInitElement__Group__1 : rule__STArrayInitElement__Group__1__Impl ;
    public final void rule__STArrayInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5224:1: ( rule__STArrayInitElement__Group__1__Impl )
            // InternalGlobalConstantsParser.g:5225:2: rule__STArrayInitElement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group__1"


    // $ANTLR start "rule__STArrayInitElement__Group__1__Impl"
    // InternalGlobalConstantsParser.g:5231:1: rule__STArrayInitElement__Group__1__Impl : ( ( rule__STArrayInitElement__Group_1__0 )? ) ;
    public final void rule__STArrayInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5235:1: ( ( ( rule__STArrayInitElement__Group_1__0 )? ) )
            // InternalGlobalConstantsParser.g:5236:1: ( ( rule__STArrayInitElement__Group_1__0 )? )
            {
            // InternalGlobalConstantsParser.g:5236:1: ( ( rule__STArrayInitElement__Group_1__0 )? )
            // InternalGlobalConstantsParser.g:5237:2: ( rule__STArrayInitElement__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getGroup_1()); 
            }
            // InternalGlobalConstantsParser.g:5238:2: ( rule__STArrayInitElement__Group_1__0 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==LeftParenthesis) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalGlobalConstantsParser.g:5238:3: rule__STArrayInitElement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STArrayInitElement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group__1__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1__0"
    // InternalGlobalConstantsParser.g:5247:1: rule__STArrayInitElement__Group_1__0 : rule__STArrayInitElement__Group_1__0__Impl rule__STArrayInitElement__Group_1__1 ;
    public final void rule__STArrayInitElement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5251:1: ( rule__STArrayInitElement__Group_1__0__Impl rule__STArrayInitElement__Group_1__1 )
            // InternalGlobalConstantsParser.g:5252:2: rule__STArrayInitElement__Group_1__0__Impl rule__STArrayInitElement__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__STArrayInitElement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__0"


    // $ANTLR start "rule__STArrayInitElement__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:5259:1: rule__STArrayInitElement__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STArrayInitElement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5263:1: ( ( LeftParenthesis ) )
            // InternalGlobalConstantsParser.g:5264:1: ( LeftParenthesis )
            {
            // InternalGlobalConstantsParser.g:5264:1: ( LeftParenthesis )
            // InternalGlobalConstantsParser.g:5265:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__0__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1__1"
    // InternalGlobalConstantsParser.g:5274:1: rule__STArrayInitElement__Group_1__1 : rule__STArrayInitElement__Group_1__1__Impl rule__STArrayInitElement__Group_1__2 ;
    public final void rule__STArrayInitElement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5278:1: ( rule__STArrayInitElement__Group_1__1__Impl rule__STArrayInitElement__Group_1__2 )
            // InternalGlobalConstantsParser.g:5279:2: rule__STArrayInitElement__Group_1__1__Impl rule__STArrayInitElement__Group_1__2
            {
            pushFollow(FOLLOW_20);
            rule__STArrayInitElement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__1"


    // $ANTLR start "rule__STArrayInitElement__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:5286:1: rule__STArrayInitElement__Group_1__1__Impl : ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 ) ) ;
    public final void rule__STArrayInitElement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5290:1: ( ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 ) ) )
            // InternalGlobalConstantsParser.g:5291:1: ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:5291:1: ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 ) )
            // InternalGlobalConstantsParser.g:5292:2: ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsAssignment_1_1()); 
            }
            // InternalGlobalConstantsParser.g:5293:2: ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 )
            // InternalGlobalConstantsParser.g:5293:3: rule__STArrayInitElement__InitExpressionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__InitExpressionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__1__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1__2"
    // InternalGlobalConstantsParser.g:5301:1: rule__STArrayInitElement__Group_1__2 : rule__STArrayInitElement__Group_1__2__Impl rule__STArrayInitElement__Group_1__3 ;
    public final void rule__STArrayInitElement__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5305:1: ( rule__STArrayInitElement__Group_1__2__Impl rule__STArrayInitElement__Group_1__3 )
            // InternalGlobalConstantsParser.g:5306:2: rule__STArrayInitElement__Group_1__2__Impl rule__STArrayInitElement__Group_1__3
            {
            pushFollow(FOLLOW_20);
            rule__STArrayInitElement__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__2"


    // $ANTLR start "rule__STArrayInitElement__Group_1__2__Impl"
    // InternalGlobalConstantsParser.g:5313:1: rule__STArrayInitElement__Group_1__2__Impl : ( ( rule__STArrayInitElement__Group_1_2__0 )* ) ;
    public final void rule__STArrayInitElement__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5317:1: ( ( ( rule__STArrayInitElement__Group_1_2__0 )* ) )
            // InternalGlobalConstantsParser.g:5318:1: ( ( rule__STArrayInitElement__Group_1_2__0 )* )
            {
            // InternalGlobalConstantsParser.g:5318:1: ( ( rule__STArrayInitElement__Group_1_2__0 )* )
            // InternalGlobalConstantsParser.g:5319:2: ( rule__STArrayInitElement__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getGroup_1_2()); 
            }
            // InternalGlobalConstantsParser.g:5320:2: ( rule__STArrayInitElement__Group_1_2__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==Comma) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:5320:3: rule__STArrayInitElement__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__STArrayInitElement__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__2__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1__3"
    // InternalGlobalConstantsParser.g:5328:1: rule__STArrayInitElement__Group_1__3 : rule__STArrayInitElement__Group_1__3__Impl ;
    public final void rule__STArrayInitElement__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5332:1: ( rule__STArrayInitElement__Group_1__3__Impl )
            // InternalGlobalConstantsParser.g:5333:2: rule__STArrayInitElement__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__3"


    // $ANTLR start "rule__STArrayInitElement__Group_1__3__Impl"
    // InternalGlobalConstantsParser.g:5339:1: rule__STArrayInitElement__Group_1__3__Impl : ( RightParenthesis ) ;
    public final void rule__STArrayInitElement__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5343:1: ( ( RightParenthesis ) )
            // InternalGlobalConstantsParser.g:5344:1: ( RightParenthesis )
            {
            // InternalGlobalConstantsParser.g:5344:1: ( RightParenthesis )
            // InternalGlobalConstantsParser.g:5345:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getRightParenthesisKeyword_1_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getRightParenthesisKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__3__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1_2__0"
    // InternalGlobalConstantsParser.g:5355:1: rule__STArrayInitElement__Group_1_2__0 : rule__STArrayInitElement__Group_1_2__0__Impl rule__STArrayInitElement__Group_1_2__1 ;
    public final void rule__STArrayInitElement__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5359:1: ( rule__STArrayInitElement__Group_1_2__0__Impl rule__STArrayInitElement__Group_1_2__1 )
            // InternalGlobalConstantsParser.g:5360:2: rule__STArrayInitElement__Group_1_2__0__Impl rule__STArrayInitElement__Group_1_2__1
            {
            pushFollow(FOLLOW_8);
            rule__STArrayInitElement__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1_2__0"


    // $ANTLR start "rule__STArrayInitElement__Group_1_2__0__Impl"
    // InternalGlobalConstantsParser.g:5367:1: rule__STArrayInitElement__Group_1_2__0__Impl : ( Comma ) ;
    public final void rule__STArrayInitElement__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5371:1: ( ( Comma ) )
            // InternalGlobalConstantsParser.g:5372:1: ( Comma )
            {
            // InternalGlobalConstantsParser.g:5372:1: ( Comma )
            // InternalGlobalConstantsParser.g:5373:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getCommaKeyword_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getCommaKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1_2__0__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1_2__1"
    // InternalGlobalConstantsParser.g:5382:1: rule__STArrayInitElement__Group_1_2__1 : rule__STArrayInitElement__Group_1_2__1__Impl ;
    public final void rule__STArrayInitElement__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5386:1: ( rule__STArrayInitElement__Group_1_2__1__Impl )
            // InternalGlobalConstantsParser.g:5387:2: rule__STArrayInitElement__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1_2__1"


    // $ANTLR start "rule__STArrayInitElement__Group_1_2__1__Impl"
    // InternalGlobalConstantsParser.g:5393:1: rule__STArrayInitElement__Group_1_2__1__Impl : ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__STArrayInitElement__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5397:1: ( ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 ) ) )
            // InternalGlobalConstantsParser.g:5398:1: ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 ) )
            {
            // InternalGlobalConstantsParser.g:5398:1: ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 ) )
            // InternalGlobalConstantsParser.g:5399:2: ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsAssignment_1_2_1()); 
            }
            // InternalGlobalConstantsParser.g:5400:2: ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 )
            // InternalGlobalConstantsParser.g:5400:3: rule__STArrayInitElement__InitExpressionsAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__InitExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1_2__1__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__0"
    // InternalGlobalConstantsParser.g:5409:1: rule__STStructInitializerExpression__Group__0 : rule__STStructInitializerExpression__Group__0__Impl rule__STStructInitializerExpression__Group__1 ;
    public final void rule__STStructInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5413:1: ( rule__STStructInitializerExpression__Group__0__Impl rule__STStructInitializerExpression__Group__1 )
            // InternalGlobalConstantsParser.g:5414:2: rule__STStructInitializerExpression__Group__0__Impl rule__STStructInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__STStructInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__0"


    // $ANTLR start "rule__STStructInitializerExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:5421:1: rule__STStructInitializerExpression__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STStructInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5425:1: ( ( LeftParenthesis ) )
            // InternalGlobalConstantsParser.g:5426:1: ( LeftParenthesis )
            {
            // InternalGlobalConstantsParser.g:5426:1: ( LeftParenthesis )
            // InternalGlobalConstantsParser.g:5427:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__1"
    // InternalGlobalConstantsParser.g:5436:1: rule__STStructInitializerExpression__Group__1 : rule__STStructInitializerExpression__Group__1__Impl rule__STStructInitializerExpression__Group__2 ;
    public final void rule__STStructInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5440:1: ( rule__STStructInitializerExpression__Group__1__Impl rule__STStructInitializerExpression__Group__2 )
            // InternalGlobalConstantsParser.g:5441:2: rule__STStructInitializerExpression__Group__1__Impl rule__STStructInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_20);
            rule__STStructInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__1"


    // $ANTLR start "rule__STStructInitializerExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:5448:1: rule__STStructInitializerExpression__Group__1__Impl : ( ( rule__STStructInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__STStructInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5452:1: ( ( ( rule__STStructInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:5453:1: ( ( rule__STStructInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:5453:1: ( ( rule__STStructInitializerExpression__ValuesAssignment_1 ) )
            // InternalGlobalConstantsParser.g:5454:2: ( rule__STStructInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:5455:2: ( rule__STStructInitializerExpression__ValuesAssignment_1 )
            // InternalGlobalConstantsParser.g:5455:3: rule__STStructInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__2"
    // InternalGlobalConstantsParser.g:5463:1: rule__STStructInitializerExpression__Group__2 : rule__STStructInitializerExpression__Group__2__Impl rule__STStructInitializerExpression__Group__3 ;
    public final void rule__STStructInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5467:1: ( rule__STStructInitializerExpression__Group__2__Impl rule__STStructInitializerExpression__Group__3 )
            // InternalGlobalConstantsParser.g:5468:2: rule__STStructInitializerExpression__Group__2__Impl rule__STStructInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_20);
            rule__STStructInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__2"


    // $ANTLR start "rule__STStructInitializerExpression__Group__2__Impl"
    // InternalGlobalConstantsParser.g:5475:1: rule__STStructInitializerExpression__Group__2__Impl : ( ( rule__STStructInitializerExpression__Group_2__0 )* ) ;
    public final void rule__STStructInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5479:1: ( ( ( rule__STStructInitializerExpression__Group_2__0 )* ) )
            // InternalGlobalConstantsParser.g:5480:1: ( ( rule__STStructInitializerExpression__Group_2__0 )* )
            {
            // InternalGlobalConstantsParser.g:5480:1: ( ( rule__STStructInitializerExpression__Group_2__0 )* )
            // InternalGlobalConstantsParser.g:5481:2: ( rule__STStructInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalGlobalConstantsParser.g:5482:2: ( rule__STStructInitializerExpression__Group_2__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==Comma) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:5482:3: rule__STStructInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__STStructInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__3"
    // InternalGlobalConstantsParser.g:5490:1: rule__STStructInitializerExpression__Group__3 : rule__STStructInitializerExpression__Group__3__Impl ;
    public final void rule__STStructInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5494:1: ( rule__STStructInitializerExpression__Group__3__Impl )
            // InternalGlobalConstantsParser.g:5495:2: rule__STStructInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__3"


    // $ANTLR start "rule__STStructInitializerExpression__Group__3__Impl"
    // InternalGlobalConstantsParser.g:5501:1: rule__STStructInitializerExpression__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__STStructInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5505:1: ( ( RightParenthesis ) )
            // InternalGlobalConstantsParser.g:5506:1: ( RightParenthesis )
            {
            // InternalGlobalConstantsParser.g:5506:1: ( RightParenthesis )
            // InternalGlobalConstantsParser.g:5507:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group_2__0"
    // InternalGlobalConstantsParser.g:5517:1: rule__STStructInitializerExpression__Group_2__0 : rule__STStructInitializerExpression__Group_2__0__Impl rule__STStructInitializerExpression__Group_2__1 ;
    public final void rule__STStructInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5521:1: ( rule__STStructInitializerExpression__Group_2__0__Impl rule__STStructInitializerExpression__Group_2__1 )
            // InternalGlobalConstantsParser.g:5522:2: rule__STStructInitializerExpression__Group_2__0__Impl rule__STStructInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_21);
            rule__STStructInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_2__0"


    // $ANTLR start "rule__STStructInitializerExpression__Group_2__0__Impl"
    // InternalGlobalConstantsParser.g:5529:1: rule__STStructInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__STStructInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5533:1: ( ( Comma ) )
            // InternalGlobalConstantsParser.g:5534:1: ( Comma )
            {
            // InternalGlobalConstantsParser.g:5534:1: ( Comma )
            // InternalGlobalConstantsParser.g:5535:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group_2__1"
    // InternalGlobalConstantsParser.g:5544:1: rule__STStructInitializerExpression__Group_2__1 : rule__STStructInitializerExpression__Group_2__1__Impl ;
    public final void rule__STStructInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5548:1: ( rule__STStructInitializerExpression__Group_2__1__Impl )
            // InternalGlobalConstantsParser.g:5549:2: rule__STStructInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_2__1"


    // $ANTLR start "rule__STStructInitializerExpression__Group_2__1__Impl"
    // InternalGlobalConstantsParser.g:5555:1: rule__STStructInitializerExpression__Group_2__1__Impl : ( ( rule__STStructInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__STStructInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5559:1: ( ( ( rule__STStructInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalGlobalConstantsParser.g:5560:1: ( ( rule__STStructInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalGlobalConstantsParser.g:5560:1: ( ( rule__STStructInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalGlobalConstantsParser.g:5561:2: ( rule__STStructInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalGlobalConstantsParser.g:5562:2: ( rule__STStructInitializerExpression__ValuesAssignment_2_1 )
            // InternalGlobalConstantsParser.g:5562:3: rule__STStructInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STStructInitElement__Group__0"
    // InternalGlobalConstantsParser.g:5571:1: rule__STStructInitElement__Group__0 : rule__STStructInitElement__Group__0__Impl rule__STStructInitElement__Group__1 ;
    public final void rule__STStructInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5575:1: ( rule__STStructInitElement__Group__0__Impl rule__STStructInitElement__Group__1 )
            // InternalGlobalConstantsParser.g:5576:2: rule__STStructInitElement__Group__0__Impl rule__STStructInitElement__Group__1
            {
            pushFollow(FOLLOW_22);
            rule__STStructInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__0"


    // $ANTLR start "rule__STStructInitElement__Group__0__Impl"
    // InternalGlobalConstantsParser.g:5583:1: rule__STStructInitElement__Group__0__Impl : ( ( rule__STStructInitElement__VariableAssignment_0 ) ) ;
    public final void rule__STStructInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5587:1: ( ( ( rule__STStructInitElement__VariableAssignment_0 ) ) )
            // InternalGlobalConstantsParser.g:5588:1: ( ( rule__STStructInitElement__VariableAssignment_0 ) )
            {
            // InternalGlobalConstantsParser.g:5588:1: ( ( rule__STStructInitElement__VariableAssignment_0 ) )
            // InternalGlobalConstantsParser.g:5589:2: ( rule__STStructInitElement__VariableAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getVariableAssignment_0()); 
            }
            // InternalGlobalConstantsParser.g:5590:2: ( rule__STStructInitElement__VariableAssignment_0 )
            // InternalGlobalConstantsParser.g:5590:3: rule__STStructInitElement__VariableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__VariableAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getVariableAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__0__Impl"


    // $ANTLR start "rule__STStructInitElement__Group__1"
    // InternalGlobalConstantsParser.g:5598:1: rule__STStructInitElement__Group__1 : rule__STStructInitElement__Group__1__Impl rule__STStructInitElement__Group__2 ;
    public final void rule__STStructInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5602:1: ( rule__STStructInitElement__Group__1__Impl rule__STStructInitElement__Group__2 )
            // InternalGlobalConstantsParser.g:5603:2: rule__STStructInitElement__Group__1__Impl rule__STStructInitElement__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__STStructInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__1"


    // $ANTLR start "rule__STStructInitElement__Group__1__Impl"
    // InternalGlobalConstantsParser.g:5610:1: rule__STStructInitElement__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STStructInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5614:1: ( ( ColonEqualsSign ) )
            // InternalGlobalConstantsParser.g:5615:1: ( ColonEqualsSign )
            {
            // InternalGlobalConstantsParser.g:5615:1: ( ColonEqualsSign )
            // InternalGlobalConstantsParser.g:5616:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__1__Impl"


    // $ANTLR start "rule__STStructInitElement__Group__2"
    // InternalGlobalConstantsParser.g:5625:1: rule__STStructInitElement__Group__2 : rule__STStructInitElement__Group__2__Impl ;
    public final void rule__STStructInitElement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5629:1: ( rule__STStructInitElement__Group__2__Impl )
            // InternalGlobalConstantsParser.g:5630:2: rule__STStructInitElement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__2"


    // $ANTLR start "rule__STStructInitElement__Group__2__Impl"
    // InternalGlobalConstantsParser.g:5636:1: rule__STStructInitElement__Group__2__Impl : ( ( rule__STStructInitElement__ValueAssignment_2 ) ) ;
    public final void rule__STStructInitElement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5640:1: ( ( ( rule__STStructInitElement__ValueAssignment_2 ) ) )
            // InternalGlobalConstantsParser.g:5641:1: ( ( rule__STStructInitElement__ValueAssignment_2 ) )
            {
            // InternalGlobalConstantsParser.g:5641:1: ( ( rule__STStructInitElement__ValueAssignment_2 ) )
            // InternalGlobalConstantsParser.g:5642:2: ( rule__STStructInitElement__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getValueAssignment_2()); 
            }
            // InternalGlobalConstantsParser.g:5643:2: ( rule__STStructInitElement__ValueAssignment_2 )
            // InternalGlobalConstantsParser.g:5643:3: rule__STStructInitElement__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__2__Impl"


    // $ANTLR start "rule__STStatement__Group_0__0"
    // InternalGlobalConstantsParser.g:5652:1: rule__STStatement__Group_0__0 : rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 ;
    public final void rule__STStatement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5656:1: ( rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 )
            // InternalGlobalConstantsParser.g:5657:2: rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1
            {
            pushFollow(FOLLOW_23);
            rule__STStatement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0"


    // $ANTLR start "rule__STStatement__Group_0__0__Impl"
    // InternalGlobalConstantsParser.g:5664:1: rule__STStatement__Group_0__0__Impl : ( ( rule__STStatement__Alternatives_0_0 ) ) ;
    public final void rule__STStatement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5668:1: ( ( ( rule__STStatement__Alternatives_0_0 ) ) )
            // InternalGlobalConstantsParser.g:5669:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            {
            // InternalGlobalConstantsParser.g:5669:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            // InternalGlobalConstantsParser.g:5670:2: ( rule__STStatement__Alternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }
            // InternalGlobalConstantsParser.g:5671:2: ( rule__STStatement__Alternatives_0_0 )
            // InternalGlobalConstantsParser.g:5671:3: rule__STStatement__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0__1"
    // InternalGlobalConstantsParser.g:5679:1: rule__STStatement__Group_0__1 : rule__STStatement__Group_0__1__Impl ;
    public final void rule__STStatement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5683:1: ( rule__STStatement__Group_0__1__Impl )
            // InternalGlobalConstantsParser.g:5684:2: rule__STStatement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1"


    // $ANTLR start "rule__STStatement__Group_0__1__Impl"
    // InternalGlobalConstantsParser.g:5690:1: rule__STStatement__Group_0__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5694:1: ( ( Semicolon ) )
            // InternalGlobalConstantsParser.g:5695:1: ( Semicolon )
            {
            // InternalGlobalConstantsParser.g:5695:1: ( Semicolon )
            // InternalGlobalConstantsParser.g:5696:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0"
    // InternalGlobalConstantsParser.g:5706:1: rule__STStatement__Group_0_0_7__0 : rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 ;
    public final void rule__STStatement__Group_0_0_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5710:1: ( rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 )
            // InternalGlobalConstantsParser.g:5711:2: rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1
            {
            pushFollow(FOLLOW_24);
            rule__STStatement__Group_0_0_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0__Impl"
    // InternalGlobalConstantsParser.g:5718:1: rule__STStatement__Group_0_0_7__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5722:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:5723:1: ( () )
            {
            // InternalGlobalConstantsParser.g:5723:1: ( () )
            // InternalGlobalConstantsParser.g:5724:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_7_0()); 
            }
            // InternalGlobalConstantsParser.g:5725:2: ()
            // InternalGlobalConstantsParser.g:5725:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_7_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1"
    // InternalGlobalConstantsParser.g:5733:1: rule__STStatement__Group_0_0_7__1 : rule__STStatement__Group_0_0_7__1__Impl ;
    public final void rule__STStatement__Group_0_0_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5737:1: ( rule__STStatement__Group_0_0_7__1__Impl )
            // InternalGlobalConstantsParser.g:5738:2: rule__STStatement__Group_0_0_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1__Impl"
    // InternalGlobalConstantsParser.g:5744:1: rule__STStatement__Group_0_0_7__1__Impl : ( RETURN ) ;
    public final void rule__STStatement__Group_0_0_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5748:1: ( ( RETURN ) )
            // InternalGlobalConstantsParser.g:5749:1: ( RETURN )
            {
            // InternalGlobalConstantsParser.g:5749:1: ( RETURN )
            // InternalGlobalConstantsParser.g:5750:2: RETURN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_7_1()); 
            }
            match(input,RETURN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0"
    // InternalGlobalConstantsParser.g:5760:1: rule__STStatement__Group_0_0_8__0 : rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 ;
    public final void rule__STStatement__Group_0_0_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5764:1: ( rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 )
            // InternalGlobalConstantsParser.g:5765:2: rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1
            {
            pushFollow(FOLLOW_25);
            rule__STStatement__Group_0_0_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0__Impl"
    // InternalGlobalConstantsParser.g:5772:1: rule__STStatement__Group_0_0_8__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5776:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:5777:1: ( () )
            {
            // InternalGlobalConstantsParser.g:5777:1: ( () )
            // InternalGlobalConstantsParser.g:5778:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_8_0()); 
            }
            // InternalGlobalConstantsParser.g:5779:2: ()
            // InternalGlobalConstantsParser.g:5779:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_8_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1"
    // InternalGlobalConstantsParser.g:5787:1: rule__STStatement__Group_0_0_8__1 : rule__STStatement__Group_0_0_8__1__Impl ;
    public final void rule__STStatement__Group_0_0_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5791:1: ( rule__STStatement__Group_0_0_8__1__Impl )
            // InternalGlobalConstantsParser.g:5792:2: rule__STStatement__Group_0_0_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1__Impl"
    // InternalGlobalConstantsParser.g:5798:1: rule__STStatement__Group_0_0_8__1__Impl : ( CONTINUE ) ;
    public final void rule__STStatement__Group_0_0_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5802:1: ( ( CONTINUE ) )
            // InternalGlobalConstantsParser.g:5803:1: ( CONTINUE )
            {
            // InternalGlobalConstantsParser.g:5803:1: ( CONTINUE )
            // InternalGlobalConstantsParser.g:5804:2: CONTINUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_8_1()); 
            }
            match(input,CONTINUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_9__0"
    // InternalGlobalConstantsParser.g:5814:1: rule__STStatement__Group_0_0_9__0 : rule__STStatement__Group_0_0_9__0__Impl rule__STStatement__Group_0_0_9__1 ;
    public final void rule__STStatement__Group_0_0_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5818:1: ( rule__STStatement__Group_0_0_9__0__Impl rule__STStatement__Group_0_0_9__1 )
            // InternalGlobalConstantsParser.g:5819:2: rule__STStatement__Group_0_0_9__0__Impl rule__STStatement__Group_0_0_9__1
            {
            pushFollow(FOLLOW_26);
            rule__STStatement__Group_0_0_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__0"


    // $ANTLR start "rule__STStatement__Group_0_0_9__0__Impl"
    // InternalGlobalConstantsParser.g:5826:1: rule__STStatement__Group_0_0_9__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5830:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:5831:1: ( () )
            {
            // InternalGlobalConstantsParser.g:5831:1: ( () )
            // InternalGlobalConstantsParser.g:5832:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_9_0()); 
            }
            // InternalGlobalConstantsParser.g:5833:2: ()
            // InternalGlobalConstantsParser.g:5833:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_9_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_9__1"
    // InternalGlobalConstantsParser.g:5841:1: rule__STStatement__Group_0_0_9__1 : rule__STStatement__Group_0_0_9__1__Impl ;
    public final void rule__STStatement__Group_0_0_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5845:1: ( rule__STStatement__Group_0_0_9__1__Impl )
            // InternalGlobalConstantsParser.g:5846:2: rule__STStatement__Group_0_0_9__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__1"


    // $ANTLR start "rule__STStatement__Group_0_0_9__1__Impl"
    // InternalGlobalConstantsParser.g:5852:1: rule__STStatement__Group_0_0_9__1__Impl : ( EXIT ) ;
    public final void rule__STStatement__Group_0_0_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5856:1: ( ( EXIT ) )
            // InternalGlobalConstantsParser.g:5857:1: ( EXIT )
            {
            // InternalGlobalConstantsParser.g:5857:1: ( EXIT )
            // InternalGlobalConstantsParser.g:5858:2: EXIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_9_1()); 
            }
            match(input,EXIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__1__Impl"


    // $ANTLR start "rule__STStatement__Group_1__0"
    // InternalGlobalConstantsParser.g:5868:1: rule__STStatement__Group_1__0 : rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 ;
    public final void rule__STStatement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5872:1: ( rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 )
            // InternalGlobalConstantsParser.g:5873:2: rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1
            {
            pushFollow(FOLLOW_23);
            rule__STStatement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0"


    // $ANTLR start "rule__STStatement__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:5880:1: rule__STStatement__Group_1__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5884:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:5885:1: ( () )
            {
            // InternalGlobalConstantsParser.g:5885:1: ( () )
            // InternalGlobalConstantsParser.g:5886:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }
            // InternalGlobalConstantsParser.g:5887:2: ()
            // InternalGlobalConstantsParser.g:5887:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0__Impl"


    // $ANTLR start "rule__STStatement__Group_1__1"
    // InternalGlobalConstantsParser.g:5895:1: rule__STStatement__Group_1__1 : rule__STStatement__Group_1__1__Impl ;
    public final void rule__STStatement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5899:1: ( rule__STStatement__Group_1__1__Impl )
            // InternalGlobalConstantsParser.g:5900:2: rule__STStatement__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1"


    // $ANTLR start "rule__STStatement__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:5906:1: rule__STStatement__Group_1__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5910:1: ( ( Semicolon ) )
            // InternalGlobalConstantsParser.g:5911:1: ( Semicolon )
            {
            // InternalGlobalConstantsParser.g:5911:1: ( Semicolon )
            // InternalGlobalConstantsParser.g:5912:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__0"
    // InternalGlobalConstantsParser.g:5922:1: rule__STAssignmentStatement__Group__0 : rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 ;
    public final void rule__STAssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5926:1: ( rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 )
            // InternalGlobalConstantsParser.g:5927:2: rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_22);
            rule__STAssignmentStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0"


    // $ANTLR start "rule__STAssignmentStatement__Group__0__Impl"
    // InternalGlobalConstantsParser.g:5934:1: rule__STAssignmentStatement__Group__0__Impl : ( ( rule__STAssignmentStatement__LeftAssignment_0 ) ) ;
    public final void rule__STAssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5938:1: ( ( ( rule__STAssignmentStatement__LeftAssignment_0 ) ) )
            // InternalGlobalConstantsParser.g:5939:1: ( ( rule__STAssignmentStatement__LeftAssignment_0 ) )
            {
            // InternalGlobalConstantsParser.g:5939:1: ( ( rule__STAssignmentStatement__LeftAssignment_0 ) )
            // InternalGlobalConstantsParser.g:5940:2: ( rule__STAssignmentStatement__LeftAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLeftAssignment_0()); 
            }
            // InternalGlobalConstantsParser.g:5941:2: ( rule__STAssignmentStatement__LeftAssignment_0 )
            // InternalGlobalConstantsParser.g:5941:3: rule__STAssignmentStatement__LeftAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__LeftAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLeftAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__1"
    // InternalGlobalConstantsParser.g:5949:1: rule__STAssignmentStatement__Group__1 : rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 ;
    public final void rule__STAssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5953:1: ( rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 )
            // InternalGlobalConstantsParser.g:5954:2: rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__STAssignmentStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1"


    // $ANTLR start "rule__STAssignmentStatement__Group__1__Impl"
    // InternalGlobalConstantsParser.g:5961:1: rule__STAssignmentStatement__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STAssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5965:1: ( ( ColonEqualsSign ) )
            // InternalGlobalConstantsParser.g:5966:1: ( ColonEqualsSign )
            {
            // InternalGlobalConstantsParser.g:5966:1: ( ColonEqualsSign )
            // InternalGlobalConstantsParser.g:5967:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__2"
    // InternalGlobalConstantsParser.g:5976:1: rule__STAssignmentStatement__Group__2 : rule__STAssignmentStatement__Group__2__Impl ;
    public final void rule__STAssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5980:1: ( rule__STAssignmentStatement__Group__2__Impl )
            // InternalGlobalConstantsParser.g:5981:2: rule__STAssignmentStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2"


    // $ANTLR start "rule__STAssignmentStatement__Group__2__Impl"
    // InternalGlobalConstantsParser.g:5987:1: rule__STAssignmentStatement__Group__2__Impl : ( ( rule__STAssignmentStatement__RightAssignment_2 ) ) ;
    public final void rule__STAssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:5991:1: ( ( ( rule__STAssignmentStatement__RightAssignment_2 ) ) )
            // InternalGlobalConstantsParser.g:5992:1: ( ( rule__STAssignmentStatement__RightAssignment_2 ) )
            {
            // InternalGlobalConstantsParser.g:5992:1: ( ( rule__STAssignmentStatement__RightAssignment_2 ) )
            // InternalGlobalConstantsParser.g:5993:2: ( rule__STAssignmentStatement__RightAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRightAssignment_2()); 
            }
            // InternalGlobalConstantsParser.g:5994:2: ( rule__STAssignmentStatement__RightAssignment_2 )
            // InternalGlobalConstantsParser.g:5994:3: rule__STAssignmentStatement__RightAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__RightAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRightAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__0"
    // InternalGlobalConstantsParser.g:6003:1: rule__STCallNamedInputArgument__Group__0 : rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1 ;
    public final void rule__STCallNamedInputArgument__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6007:1: ( rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1 )
            // InternalGlobalConstantsParser.g:6008:2: rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1
            {
            pushFollow(FOLLOW_22);
            rule__STCallNamedInputArgument__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__0"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__0__Impl"
    // InternalGlobalConstantsParser.g:6015:1: rule__STCallNamedInputArgument__Group__0__Impl : ( ( rule__STCallNamedInputArgument__ParameterAssignment_0 ) ) ;
    public final void rule__STCallNamedInputArgument__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6019:1: ( ( ( rule__STCallNamedInputArgument__ParameterAssignment_0 ) ) )
            // InternalGlobalConstantsParser.g:6020:1: ( ( rule__STCallNamedInputArgument__ParameterAssignment_0 ) )
            {
            // InternalGlobalConstantsParser.g:6020:1: ( ( rule__STCallNamedInputArgument__ParameterAssignment_0 ) )
            // InternalGlobalConstantsParser.g:6021:2: ( rule__STCallNamedInputArgument__ParameterAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterAssignment_0()); 
            }
            // InternalGlobalConstantsParser.g:6022:2: ( rule__STCallNamedInputArgument__ParameterAssignment_0 )
            // InternalGlobalConstantsParser.g:6022:3: rule__STCallNamedInputArgument__ParameterAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__ParameterAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__0__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__1"
    // InternalGlobalConstantsParser.g:6030:1: rule__STCallNamedInputArgument__Group__1 : rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2 ;
    public final void rule__STCallNamedInputArgument__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6034:1: ( rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2 )
            // InternalGlobalConstantsParser.g:6035:2: rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__STCallNamedInputArgument__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__1"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__1__Impl"
    // InternalGlobalConstantsParser.g:6042:1: rule__STCallNamedInputArgument__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STCallNamedInputArgument__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6046:1: ( ( ColonEqualsSign ) )
            // InternalGlobalConstantsParser.g:6047:1: ( ColonEqualsSign )
            {
            // InternalGlobalConstantsParser.g:6047:1: ( ColonEqualsSign )
            // InternalGlobalConstantsParser.g:6048:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__1__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__2"
    // InternalGlobalConstantsParser.g:6057:1: rule__STCallNamedInputArgument__Group__2 : rule__STCallNamedInputArgument__Group__2__Impl ;
    public final void rule__STCallNamedInputArgument__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6061:1: ( rule__STCallNamedInputArgument__Group__2__Impl )
            // InternalGlobalConstantsParser.g:6062:2: rule__STCallNamedInputArgument__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__2"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__2__Impl"
    // InternalGlobalConstantsParser.g:6068:1: rule__STCallNamedInputArgument__Group__2__Impl : ( ( rule__STCallNamedInputArgument__ArgumentAssignment_2 ) ) ;
    public final void rule__STCallNamedInputArgument__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6072:1: ( ( ( rule__STCallNamedInputArgument__ArgumentAssignment_2 ) ) )
            // InternalGlobalConstantsParser.g:6073:1: ( ( rule__STCallNamedInputArgument__ArgumentAssignment_2 ) )
            {
            // InternalGlobalConstantsParser.g:6073:1: ( ( rule__STCallNamedInputArgument__ArgumentAssignment_2 ) )
            // InternalGlobalConstantsParser.g:6074:2: ( rule__STCallNamedInputArgument__ArgumentAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getArgumentAssignment_2()); 
            }
            // InternalGlobalConstantsParser.g:6075:2: ( rule__STCallNamedInputArgument__ArgumentAssignment_2 )
            // InternalGlobalConstantsParser.g:6075:3: rule__STCallNamedInputArgument__ArgumentAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__ArgumentAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getArgumentAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__0"
    // InternalGlobalConstantsParser.g:6084:1: rule__STCallNamedOutputArgument__Group__0 : rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1 ;
    public final void rule__STCallNamedOutputArgument__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6088:1: ( rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1 )
            // InternalGlobalConstantsParser.g:6089:2: rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__STCallNamedOutputArgument__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__0"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__0__Impl"
    // InternalGlobalConstantsParser.g:6096:1: rule__STCallNamedOutputArgument__Group__0__Impl : ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? ) ;
    public final void rule__STCallNamedOutputArgument__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6100:1: ( ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? ) )
            // InternalGlobalConstantsParser.g:6101:1: ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? )
            {
            // InternalGlobalConstantsParser.g:6101:1: ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? )
            // InternalGlobalConstantsParser.g:6102:2: ( rule__STCallNamedOutputArgument__NotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotAssignment_0()); 
            }
            // InternalGlobalConstantsParser.g:6103:2: ( rule__STCallNamedOutputArgument__NotAssignment_0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==NOT) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalGlobalConstantsParser.g:6103:3: rule__STCallNamedOutputArgument__NotAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCallNamedOutputArgument__NotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__0__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__1"
    // InternalGlobalConstantsParser.g:6111:1: rule__STCallNamedOutputArgument__Group__1 : rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2 ;
    public final void rule__STCallNamedOutputArgument__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6115:1: ( rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2 )
            // InternalGlobalConstantsParser.g:6116:2: rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__STCallNamedOutputArgument__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__1"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__1__Impl"
    // InternalGlobalConstantsParser.g:6123:1: rule__STCallNamedOutputArgument__Group__1__Impl : ( ( rule__STCallNamedOutputArgument__ParameterAssignment_1 ) ) ;
    public final void rule__STCallNamedOutputArgument__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6127:1: ( ( ( rule__STCallNamedOutputArgument__ParameterAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:6128:1: ( ( rule__STCallNamedOutputArgument__ParameterAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:6128:1: ( ( rule__STCallNamedOutputArgument__ParameterAssignment_1 ) )
            // InternalGlobalConstantsParser.g:6129:2: ( rule__STCallNamedOutputArgument__ParameterAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:6130:2: ( rule__STCallNamedOutputArgument__ParameterAssignment_1 )
            // InternalGlobalConstantsParser.g:6130:3: rule__STCallNamedOutputArgument__ParameterAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__ParameterAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__1__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__2"
    // InternalGlobalConstantsParser.g:6138:1: rule__STCallNamedOutputArgument__Group__2 : rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3 ;
    public final void rule__STCallNamedOutputArgument__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6142:1: ( rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3 )
            // InternalGlobalConstantsParser.g:6143:2: rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__STCallNamedOutputArgument__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__2"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__2__Impl"
    // InternalGlobalConstantsParser.g:6150:1: rule__STCallNamedOutputArgument__Group__2__Impl : ( EqualsSignGreaterThanSign ) ;
    public final void rule__STCallNamedOutputArgument__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6154:1: ( ( EqualsSignGreaterThanSign ) )
            // InternalGlobalConstantsParser.g:6155:1: ( EqualsSignGreaterThanSign )
            {
            // InternalGlobalConstantsParser.g:6155:1: ( EqualsSignGreaterThanSign )
            // InternalGlobalConstantsParser.g:6156:2: EqualsSignGreaterThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getEqualsSignGreaterThanSignKeyword_2()); 
            }
            match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getEqualsSignGreaterThanSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__3"
    // InternalGlobalConstantsParser.g:6165:1: rule__STCallNamedOutputArgument__Group__3 : rule__STCallNamedOutputArgument__Group__3__Impl ;
    public final void rule__STCallNamedOutputArgument__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6169:1: ( rule__STCallNamedOutputArgument__Group__3__Impl )
            // InternalGlobalConstantsParser.g:6170:2: rule__STCallNamedOutputArgument__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__3"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__3__Impl"
    // InternalGlobalConstantsParser.g:6176:1: rule__STCallNamedOutputArgument__Group__3__Impl : ( ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 ) ) ;
    public final void rule__STCallNamedOutputArgument__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6180:1: ( ( ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 ) ) )
            // InternalGlobalConstantsParser.g:6181:1: ( ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 ) )
            {
            // InternalGlobalConstantsParser.g:6181:1: ( ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 ) )
            // InternalGlobalConstantsParser.g:6182:2: ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getArgumentAssignment_3()); 
            }
            // InternalGlobalConstantsParser.g:6183:2: ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 )
            // InternalGlobalConstantsParser.g:6183:3: rule__STCallNamedOutputArgument__ArgumentAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__ArgumentAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getArgumentAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__3__Impl"


    // $ANTLR start "rule__STIfStatement__Group__0"
    // InternalGlobalConstantsParser.g:6192:1: rule__STIfStatement__Group__0 : rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1 ;
    public final void rule__STIfStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6196:1: ( rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1 )
            // InternalGlobalConstantsParser.g:6197:2: rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__STIfStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__0"


    // $ANTLR start "rule__STIfStatement__Group__0__Impl"
    // InternalGlobalConstantsParser.g:6204:1: rule__STIfStatement__Group__0__Impl : ( IF ) ;
    public final void rule__STIfStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6208:1: ( ( IF ) )
            // InternalGlobalConstantsParser.g:6209:1: ( IF )
            {
            // InternalGlobalConstantsParser.g:6209:1: ( IF )
            // InternalGlobalConstantsParser.g:6210:2: IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getIFKeyword_0()); 
            }
            match(input,IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__0__Impl"


    // $ANTLR start "rule__STIfStatement__Group__1"
    // InternalGlobalConstantsParser.g:6219:1: rule__STIfStatement__Group__1 : rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2 ;
    public final void rule__STIfStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6223:1: ( rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2 )
            // InternalGlobalConstantsParser.g:6224:2: rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2
            {
            pushFollow(FOLLOW_28);
            rule__STIfStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__1"


    // $ANTLR start "rule__STIfStatement__Group__1__Impl"
    // InternalGlobalConstantsParser.g:6231:1: rule__STIfStatement__Group__1__Impl : ( ( rule__STIfStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STIfStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6235:1: ( ( ( rule__STIfStatement__ConditionAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:6236:1: ( ( rule__STIfStatement__ConditionAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:6236:1: ( ( rule__STIfStatement__ConditionAssignment_1 ) )
            // InternalGlobalConstantsParser.g:6237:2: ( rule__STIfStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getConditionAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:6238:2: ( rule__STIfStatement__ConditionAssignment_1 )
            // InternalGlobalConstantsParser.g:6238:3: rule__STIfStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__1__Impl"


    // $ANTLR start "rule__STIfStatement__Group__2"
    // InternalGlobalConstantsParser.g:6246:1: rule__STIfStatement__Group__2 : rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3 ;
    public final void rule__STIfStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6250:1: ( rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3 )
            // InternalGlobalConstantsParser.g:6251:2: rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3
            {
            pushFollow(FOLLOW_29);
            rule__STIfStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__2"


    // $ANTLR start "rule__STIfStatement__Group__2__Impl"
    // InternalGlobalConstantsParser.g:6258:1: rule__STIfStatement__Group__2__Impl : ( THEN ) ;
    public final void rule__STIfStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6262:1: ( ( THEN ) )
            // InternalGlobalConstantsParser.g:6263:1: ( THEN )
            {
            // InternalGlobalConstantsParser.g:6263:1: ( THEN )
            // InternalGlobalConstantsParser.g:6264:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__2__Impl"


    // $ANTLR start "rule__STIfStatement__Group__3"
    // InternalGlobalConstantsParser.g:6273:1: rule__STIfStatement__Group__3 : rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4 ;
    public final void rule__STIfStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6277:1: ( rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4 )
            // InternalGlobalConstantsParser.g:6278:2: rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4
            {
            pushFollow(FOLLOW_29);
            rule__STIfStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__3"


    // $ANTLR start "rule__STIfStatement__Group__3__Impl"
    // InternalGlobalConstantsParser.g:6285:1: rule__STIfStatement__Group__3__Impl : ( ( rule__STIfStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STIfStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6289:1: ( ( ( rule__STIfStatement__StatementsAssignment_3 )* ) )
            // InternalGlobalConstantsParser.g:6290:1: ( ( rule__STIfStatement__StatementsAssignment_3 )* )
            {
            // InternalGlobalConstantsParser.g:6290:1: ( ( rule__STIfStatement__StatementsAssignment_3 )* )
            // InternalGlobalConstantsParser.g:6291:2: ( rule__STIfStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalGlobalConstantsParser.g:6292:2: ( rule__STIfStatement__StatementsAssignment_3 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==LDATE_AND_TIME||LA59_0==DATE_AND_TIME||LA59_0==LTIME_OF_DAY||LA59_0==TIME_OF_DAY||LA59_0==CONTINUE||LA59_0==WSTRING||LA59_0==REPEAT||LA59_0==RETURN||LA59_0==STRING||LA59_0==DWORD||LA59_0==FALSE||(LA59_0>=LDATE && LA59_0<=LWORD)||(LA59_0>=UDINT && LA59_0<=ULINT)||(LA59_0>=USINT && LA59_0<=DINT)||LA59_0==EXIT||(LA59_0>=LINT && LA59_0<=LTOD)||(LA59_0>=REAL && LA59_0<=SINT)||(LA59_0>=THIS && LA59_0<=TRUE)||LA59_0==UINT||(LA59_0>=WORD && LA59_0<=MOD)||LA59_0==TOD||LA59_0==XOR||(LA59_0>=DT && LA59_0<=LT)||LA59_0==OR||LA59_0==LeftParenthesis||LA59_0==PlusSign||LA59_0==HyphenMinus||LA59_0==Semicolon||(LA59_0>=D && LA59_0<=T)||(LA59_0>=RULE_NON_DECIMAL && LA59_0<=RULE_DECIMAL)||(LA59_0>=RULE_ID && LA59_0<=RULE_STRING)) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:6292:3: rule__STIfStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_30);
            	    rule__STIfStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__3__Impl"


    // $ANTLR start "rule__STIfStatement__Group__4"
    // InternalGlobalConstantsParser.g:6300:1: rule__STIfStatement__Group__4 : rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5 ;
    public final void rule__STIfStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6304:1: ( rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5 )
            // InternalGlobalConstantsParser.g:6305:2: rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5
            {
            pushFollow(FOLLOW_29);
            rule__STIfStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__4"


    // $ANTLR start "rule__STIfStatement__Group__4__Impl"
    // InternalGlobalConstantsParser.g:6312:1: rule__STIfStatement__Group__4__Impl : ( ( rule__STIfStatement__ElseifsAssignment_4 )* ) ;
    public final void rule__STIfStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6316:1: ( ( ( rule__STIfStatement__ElseifsAssignment_4 )* ) )
            // InternalGlobalConstantsParser.g:6317:1: ( ( rule__STIfStatement__ElseifsAssignment_4 )* )
            {
            // InternalGlobalConstantsParser.g:6317:1: ( ( rule__STIfStatement__ElseifsAssignment_4 )* )
            // InternalGlobalConstantsParser.g:6318:2: ( rule__STIfStatement__ElseifsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseifsAssignment_4()); 
            }
            // InternalGlobalConstantsParser.g:6319:2: ( rule__STIfStatement__ElseifsAssignment_4 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==ELSIF) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:6319:3: rule__STIfStatement__ElseifsAssignment_4
            	    {
            	    pushFollow(FOLLOW_31);
            	    rule__STIfStatement__ElseifsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseifsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__4__Impl"


    // $ANTLR start "rule__STIfStatement__Group__5"
    // InternalGlobalConstantsParser.g:6327:1: rule__STIfStatement__Group__5 : rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6 ;
    public final void rule__STIfStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6331:1: ( rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6 )
            // InternalGlobalConstantsParser.g:6332:2: rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6
            {
            pushFollow(FOLLOW_29);
            rule__STIfStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__5"


    // $ANTLR start "rule__STIfStatement__Group__5__Impl"
    // InternalGlobalConstantsParser.g:6339:1: rule__STIfStatement__Group__5__Impl : ( ( rule__STIfStatement__ElseAssignment_5 )? ) ;
    public final void rule__STIfStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6343:1: ( ( ( rule__STIfStatement__ElseAssignment_5 )? ) )
            // InternalGlobalConstantsParser.g:6344:1: ( ( rule__STIfStatement__ElseAssignment_5 )? )
            {
            // InternalGlobalConstantsParser.g:6344:1: ( ( rule__STIfStatement__ElseAssignment_5 )? )
            // InternalGlobalConstantsParser.g:6345:2: ( rule__STIfStatement__ElseAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseAssignment_5()); 
            }
            // InternalGlobalConstantsParser.g:6346:2: ( rule__STIfStatement__ElseAssignment_5 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==ELSE) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalGlobalConstantsParser.g:6346:3: rule__STIfStatement__ElseAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__STIfStatement__ElseAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__5__Impl"


    // $ANTLR start "rule__STIfStatement__Group__6"
    // InternalGlobalConstantsParser.g:6354:1: rule__STIfStatement__Group__6 : rule__STIfStatement__Group__6__Impl ;
    public final void rule__STIfStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6358:1: ( rule__STIfStatement__Group__6__Impl )
            // InternalGlobalConstantsParser.g:6359:2: rule__STIfStatement__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__6"


    // $ANTLR start "rule__STIfStatement__Group__6__Impl"
    // InternalGlobalConstantsParser.g:6365:1: rule__STIfStatement__Group__6__Impl : ( END_IF ) ;
    public final void rule__STIfStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6369:1: ( ( END_IF ) )
            // InternalGlobalConstantsParser.g:6370:1: ( END_IF )
            {
            // InternalGlobalConstantsParser.g:6370:1: ( END_IF )
            // InternalGlobalConstantsParser.g:6371:2: END_IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getEND_IFKeyword_6()); 
            }
            match(input,END_IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getEND_IFKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__6__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__0"
    // InternalGlobalConstantsParser.g:6381:1: rule__STElseIfPart__Group__0 : rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 ;
    public final void rule__STElseIfPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6385:1: ( rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 )
            // InternalGlobalConstantsParser.g:6386:2: rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__STElseIfPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0"


    // $ANTLR start "rule__STElseIfPart__Group__0__Impl"
    // InternalGlobalConstantsParser.g:6393:1: rule__STElseIfPart__Group__0__Impl : ( ELSIF ) ;
    public final void rule__STElseIfPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6397:1: ( ( ELSIF ) )
            // InternalGlobalConstantsParser.g:6398:1: ( ELSIF )
            {
            // InternalGlobalConstantsParser.g:6398:1: ( ELSIF )
            // InternalGlobalConstantsParser.g:6399:2: ELSIF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }
            match(input,ELSIF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__1"
    // InternalGlobalConstantsParser.g:6408:1: rule__STElseIfPart__Group__1 : rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 ;
    public final void rule__STElseIfPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6412:1: ( rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 )
            // InternalGlobalConstantsParser.g:6413:2: rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2
            {
            pushFollow(FOLLOW_28);
            rule__STElseIfPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1"


    // $ANTLR start "rule__STElseIfPart__Group__1__Impl"
    // InternalGlobalConstantsParser.g:6420:1: rule__STElseIfPart__Group__1__Impl : ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) ;
    public final void rule__STElseIfPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6424:1: ( ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:6425:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:6425:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            // InternalGlobalConstantsParser.g:6426:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:6427:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            // InternalGlobalConstantsParser.g:6427:3: rule__STElseIfPart__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__2"
    // InternalGlobalConstantsParser.g:6435:1: rule__STElseIfPart__Group__2 : rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 ;
    public final void rule__STElseIfPart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6439:1: ( rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 )
            // InternalGlobalConstantsParser.g:6440:2: rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__STElseIfPart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2"


    // $ANTLR start "rule__STElseIfPart__Group__2__Impl"
    // InternalGlobalConstantsParser.g:6447:1: rule__STElseIfPart__Group__2__Impl : ( THEN ) ;
    public final void rule__STElseIfPart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6451:1: ( ( THEN ) )
            // InternalGlobalConstantsParser.g:6452:1: ( THEN )
            {
            // InternalGlobalConstantsParser.g:6452:1: ( THEN )
            // InternalGlobalConstantsParser.g:6453:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__3"
    // InternalGlobalConstantsParser.g:6462:1: rule__STElseIfPart__Group__3 : rule__STElseIfPart__Group__3__Impl ;
    public final void rule__STElseIfPart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6466:1: ( rule__STElseIfPart__Group__3__Impl )
            // InternalGlobalConstantsParser.g:6467:2: rule__STElseIfPart__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3"


    // $ANTLR start "rule__STElseIfPart__Group__3__Impl"
    // InternalGlobalConstantsParser.g:6473:1: rule__STElseIfPart__Group__3__Impl : ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) ;
    public final void rule__STElseIfPart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6477:1: ( ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) )
            // InternalGlobalConstantsParser.g:6478:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            {
            // InternalGlobalConstantsParser.g:6478:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            // InternalGlobalConstantsParser.g:6479:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }
            // InternalGlobalConstantsParser.g:6480:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==LDATE_AND_TIME||LA62_0==DATE_AND_TIME||LA62_0==LTIME_OF_DAY||LA62_0==TIME_OF_DAY||LA62_0==CONTINUE||LA62_0==WSTRING||LA62_0==REPEAT||LA62_0==RETURN||LA62_0==STRING||LA62_0==DWORD||LA62_0==FALSE||(LA62_0>=LDATE && LA62_0<=LWORD)||(LA62_0>=UDINT && LA62_0<=ULINT)||(LA62_0>=USINT && LA62_0<=DINT)||LA62_0==EXIT||(LA62_0>=LINT && LA62_0<=LTOD)||(LA62_0>=REAL && LA62_0<=SINT)||(LA62_0>=THIS && LA62_0<=TRUE)||LA62_0==UINT||(LA62_0>=WORD && LA62_0<=MOD)||LA62_0==TOD||LA62_0==XOR||(LA62_0>=DT && LA62_0<=LT)||LA62_0==OR||LA62_0==LeftParenthesis||LA62_0==PlusSign||LA62_0==HyphenMinus||LA62_0==Semicolon||(LA62_0>=D && LA62_0<=T)||(LA62_0>=RULE_NON_DECIMAL && LA62_0<=RULE_DECIMAL)||(LA62_0>=RULE_ID && LA62_0<=RULE_STRING)) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:6480:3: rule__STElseIfPart__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_30);
            	    rule__STElseIfPart__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__0"
    // InternalGlobalConstantsParser.g:6489:1: rule__STCaseStatement__Group__0 : rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 ;
    public final void rule__STCaseStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6493:1: ( rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 )
            // InternalGlobalConstantsParser.g:6494:2: rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__STCaseStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0"


    // $ANTLR start "rule__STCaseStatement__Group__0__Impl"
    // InternalGlobalConstantsParser.g:6501:1: rule__STCaseStatement__Group__0__Impl : ( CASE ) ;
    public final void rule__STCaseStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6505:1: ( ( CASE ) )
            // InternalGlobalConstantsParser.g:6506:1: ( CASE )
            {
            // InternalGlobalConstantsParser.g:6506:1: ( CASE )
            // InternalGlobalConstantsParser.g:6507:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__1"
    // InternalGlobalConstantsParser.g:6516:1: rule__STCaseStatement__Group__1 : rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 ;
    public final void rule__STCaseStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6520:1: ( rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 )
            // InternalGlobalConstantsParser.g:6521:2: rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__STCaseStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1"


    // $ANTLR start "rule__STCaseStatement__Group__1__Impl"
    // InternalGlobalConstantsParser.g:6528:1: rule__STCaseStatement__Group__1__Impl : ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) ;
    public final void rule__STCaseStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6532:1: ( ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:6533:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:6533:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            // InternalGlobalConstantsParser.g:6534:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:6535:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            // InternalGlobalConstantsParser.g:6535:3: rule__STCaseStatement__SelectorAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__SelectorAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__2"
    // InternalGlobalConstantsParser.g:6543:1: rule__STCaseStatement__Group__2 : rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 ;
    public final void rule__STCaseStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6547:1: ( rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 )
            // InternalGlobalConstantsParser.g:6548:2: rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__STCaseStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2"


    // $ANTLR start "rule__STCaseStatement__Group__2__Impl"
    // InternalGlobalConstantsParser.g:6555:1: rule__STCaseStatement__Group__2__Impl : ( OF ) ;
    public final void rule__STCaseStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6559:1: ( ( OF ) )
            // InternalGlobalConstantsParser.g:6560:1: ( OF )
            {
            // InternalGlobalConstantsParser.g:6560:1: ( OF )
            // InternalGlobalConstantsParser.g:6561:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__3"
    // InternalGlobalConstantsParser.g:6570:1: rule__STCaseStatement__Group__3 : rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 ;
    public final void rule__STCaseStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6574:1: ( rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 )
            // InternalGlobalConstantsParser.g:6575:2: rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4
            {
            pushFollow(FOLLOW_33);
            rule__STCaseStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3"


    // $ANTLR start "rule__STCaseStatement__Group__3__Impl"
    // InternalGlobalConstantsParser.g:6582:1: rule__STCaseStatement__Group__3__Impl : ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) ;
    public final void rule__STCaseStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6586:1: ( ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) )
            // InternalGlobalConstantsParser.g:6587:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            {
            // InternalGlobalConstantsParser.g:6587:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            // InternalGlobalConstantsParser.g:6588:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            {
            // InternalGlobalConstantsParser.g:6588:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) )
            // InternalGlobalConstantsParser.g:6589:3: ( rule__STCaseStatement__CasesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalGlobalConstantsParser.g:6590:3: ( rule__STCaseStatement__CasesAssignment_3 )
            // InternalGlobalConstantsParser.g:6590:4: rule__STCaseStatement__CasesAssignment_3
            {
            pushFollow(FOLLOW_34);
            rule__STCaseStatement__CasesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }

            // InternalGlobalConstantsParser.g:6593:2: ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            // InternalGlobalConstantsParser.g:6594:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalGlobalConstantsParser.g:6595:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==LDATE_AND_TIME||LA63_0==DATE_AND_TIME||LA63_0==LTIME_OF_DAY||LA63_0==TIME_OF_DAY||LA63_0==WSTRING||LA63_0==STRING||LA63_0==DWORD||LA63_0==FALSE||(LA63_0>=LDATE && LA63_0<=LWORD)||(LA63_0>=UDINT && LA63_0<=ULINT)||(LA63_0>=USINT && LA63_0<=WCHAR)||(LA63_0>=BOOL && LA63_0<=BYTE)||(LA63_0>=CHAR && LA63_0<=DINT)||(LA63_0>=LINT && LA63_0<=LTOD)||(LA63_0>=REAL && LA63_0<=SINT)||(LA63_0>=THIS && LA63_0<=TRUE)||LA63_0==UINT||(LA63_0>=WORD && LA63_0<=AND)||(LA63_0>=INT && LA63_0<=NOT)||LA63_0==TOD||LA63_0==XOR||LA63_0==DT||(LA63_0>=LD && LA63_0<=LT)||LA63_0==OR||LA63_0==LeftParenthesis||LA63_0==PlusSign||LA63_0==HyphenMinus||(LA63_0>=D && LA63_0<=T)||(LA63_0>=RULE_NON_DECIMAL && LA63_0<=RULE_DECIMAL)||(LA63_0>=RULE_ID && LA63_0<=RULE_STRING)) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:6595:4: rule__STCaseStatement__CasesAssignment_3
            	    {
            	    pushFollow(FOLLOW_34);
            	    rule__STCaseStatement__CasesAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__4"
    // InternalGlobalConstantsParser.g:6604:1: rule__STCaseStatement__Group__4 : rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 ;
    public final void rule__STCaseStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6608:1: ( rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 )
            // InternalGlobalConstantsParser.g:6609:2: rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5
            {
            pushFollow(FOLLOW_33);
            rule__STCaseStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4"


    // $ANTLR start "rule__STCaseStatement__Group__4__Impl"
    // InternalGlobalConstantsParser.g:6616:1: rule__STCaseStatement__Group__4__Impl : ( ( rule__STCaseStatement__ElseAssignment_4 )? ) ;
    public final void rule__STCaseStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6620:1: ( ( ( rule__STCaseStatement__ElseAssignment_4 )? ) )
            // InternalGlobalConstantsParser.g:6621:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            {
            // InternalGlobalConstantsParser.g:6621:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            // InternalGlobalConstantsParser.g:6622:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }
            // InternalGlobalConstantsParser.g:6623:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==ELSE) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalGlobalConstantsParser.g:6623:3: rule__STCaseStatement__ElseAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCaseStatement__ElseAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__5"
    // InternalGlobalConstantsParser.g:6631:1: rule__STCaseStatement__Group__5 : rule__STCaseStatement__Group__5__Impl ;
    public final void rule__STCaseStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6635:1: ( rule__STCaseStatement__Group__5__Impl )
            // InternalGlobalConstantsParser.g:6636:2: rule__STCaseStatement__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5"


    // $ANTLR start "rule__STCaseStatement__Group__5__Impl"
    // InternalGlobalConstantsParser.g:6642:1: rule__STCaseStatement__Group__5__Impl : ( END_CASE ) ;
    public final void rule__STCaseStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6646:1: ( ( END_CASE ) )
            // InternalGlobalConstantsParser.g:6647:1: ( END_CASE )
            {
            // InternalGlobalConstantsParser.g:6647:1: ( END_CASE )
            // InternalGlobalConstantsParser.g:6648:2: END_CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }
            match(input,END_CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5__Impl"


    // $ANTLR start "rule__STCaseCases__Group__0"
    // InternalGlobalConstantsParser.g:6658:1: rule__STCaseCases__Group__0 : rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 ;
    public final void rule__STCaseCases__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6662:1: ( rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 )
            // InternalGlobalConstantsParser.g:6663:2: rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__STCaseCases__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0"


    // $ANTLR start "rule__STCaseCases__Group__0__Impl"
    // InternalGlobalConstantsParser.g:6670:1: rule__STCaseCases__Group__0__Impl : ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) ;
    public final void rule__STCaseCases__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6674:1: ( ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) )
            // InternalGlobalConstantsParser.g:6675:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            {
            // InternalGlobalConstantsParser.g:6675:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            // InternalGlobalConstantsParser.g:6676:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }
            // InternalGlobalConstantsParser.g:6677:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            // InternalGlobalConstantsParser.g:6677:3: rule__STCaseCases__ConditionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group__1"
    // InternalGlobalConstantsParser.g:6685:1: rule__STCaseCases__Group__1 : rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 ;
    public final void rule__STCaseCases__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6689:1: ( rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 )
            // InternalGlobalConstantsParser.g:6690:2: rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2
            {
            pushFollow(FOLLOW_35);
            rule__STCaseCases__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1"


    // $ANTLR start "rule__STCaseCases__Group__1__Impl"
    // InternalGlobalConstantsParser.g:6697:1: rule__STCaseCases__Group__1__Impl : ( ( rule__STCaseCases__Group_1__0 )* ) ;
    public final void rule__STCaseCases__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6701:1: ( ( ( rule__STCaseCases__Group_1__0 )* ) )
            // InternalGlobalConstantsParser.g:6702:1: ( ( rule__STCaseCases__Group_1__0 )* )
            {
            // InternalGlobalConstantsParser.g:6702:1: ( ( rule__STCaseCases__Group_1__0 )* )
            // InternalGlobalConstantsParser.g:6703:2: ( rule__STCaseCases__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }
            // InternalGlobalConstantsParser.g:6704:2: ( rule__STCaseCases__Group_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==Comma) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:6704:3: rule__STCaseCases__Group_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__STCaseCases__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1__Impl"


    // $ANTLR start "rule__STCaseCases__Group__2"
    // InternalGlobalConstantsParser.g:6712:1: rule__STCaseCases__Group__2 : rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 ;
    public final void rule__STCaseCases__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6716:1: ( rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 )
            // InternalGlobalConstantsParser.g:6717:2: rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__STCaseCases__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2"


    // $ANTLR start "rule__STCaseCases__Group__2__Impl"
    // InternalGlobalConstantsParser.g:6724:1: rule__STCaseCases__Group__2__Impl : ( Colon ) ;
    public final void rule__STCaseCases__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6728:1: ( ( Colon ) )
            // InternalGlobalConstantsParser.g:6729:1: ( Colon )
            {
            // InternalGlobalConstantsParser.g:6729:1: ( Colon )
            // InternalGlobalConstantsParser.g:6730:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2__Impl"


    // $ANTLR start "rule__STCaseCases__Group__3"
    // InternalGlobalConstantsParser.g:6739:1: rule__STCaseCases__Group__3 : rule__STCaseCases__Group__3__Impl ;
    public final void rule__STCaseCases__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6743:1: ( rule__STCaseCases__Group__3__Impl )
            // InternalGlobalConstantsParser.g:6744:2: rule__STCaseCases__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3"


    // $ANTLR start "rule__STCaseCases__Group__3__Impl"
    // InternalGlobalConstantsParser.g:6750:1: rule__STCaseCases__Group__3__Impl : ( ( rule__STCaseCases__StatementsAssignment_3 )* ) ;
    public final void rule__STCaseCases__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6754:1: ( ( ( rule__STCaseCases__StatementsAssignment_3 )* ) )
            // InternalGlobalConstantsParser.g:6755:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            {
            // InternalGlobalConstantsParser.g:6755:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            // InternalGlobalConstantsParser.g:6756:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }
            // InternalGlobalConstantsParser.g:6757:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            loop66:
            do {
                int alt66=2;
                alt66 = dfa66.predict(input);
                switch (alt66) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:6757:3: rule__STCaseCases__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_30);
            	    rule__STCaseCases__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__0"
    // InternalGlobalConstantsParser.g:6766:1: rule__STCaseCases__Group_1__0 : rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 ;
    public final void rule__STCaseCases__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6770:1: ( rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 )
            // InternalGlobalConstantsParser.g:6771:2: rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STCaseCases__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0"


    // $ANTLR start "rule__STCaseCases__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:6778:1: rule__STCaseCases__Group_1__0__Impl : ( Comma ) ;
    public final void rule__STCaseCases__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6782:1: ( ( Comma ) )
            // InternalGlobalConstantsParser.g:6783:1: ( Comma )
            {
            // InternalGlobalConstantsParser.g:6783:1: ( Comma )
            // InternalGlobalConstantsParser.g:6784:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__1"
    // InternalGlobalConstantsParser.g:6793:1: rule__STCaseCases__Group_1__1 : rule__STCaseCases__Group_1__1__Impl ;
    public final void rule__STCaseCases__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6797:1: ( rule__STCaseCases__Group_1__1__Impl )
            // InternalGlobalConstantsParser.g:6798:2: rule__STCaseCases__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1"


    // $ANTLR start "rule__STCaseCases__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:6804:1: rule__STCaseCases__Group_1__1__Impl : ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) ;
    public final void rule__STCaseCases__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6808:1: ( ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) )
            // InternalGlobalConstantsParser.g:6809:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:6809:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            // InternalGlobalConstantsParser.g:6810:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }
            // InternalGlobalConstantsParser.g:6811:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            // InternalGlobalConstantsParser.g:6811:3: rule__STCaseCases__ConditionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__0"
    // InternalGlobalConstantsParser.g:6820:1: rule__STElsePart__Group__0 : rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 ;
    public final void rule__STElsePart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6824:1: ( rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 )
            // InternalGlobalConstantsParser.g:6825:2: rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__STElsePart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0"


    // $ANTLR start "rule__STElsePart__Group__0__Impl"
    // InternalGlobalConstantsParser.g:6832:1: rule__STElsePart__Group__0__Impl : ( () ) ;
    public final void rule__STElsePart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6836:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:6837:1: ( () )
            {
            // InternalGlobalConstantsParser.g:6837:1: ( () )
            // InternalGlobalConstantsParser.g:6838:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }
            // InternalGlobalConstantsParser.g:6839:2: ()
            // InternalGlobalConstantsParser.g:6839:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0__Impl"


    // $ANTLR start "rule__STElsePart__Group__1"
    // InternalGlobalConstantsParser.g:6847:1: rule__STElsePart__Group__1 : rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 ;
    public final void rule__STElsePart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6851:1: ( rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 )
            // InternalGlobalConstantsParser.g:6852:2: rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2
            {
            pushFollow(FOLLOW_32);
            rule__STElsePart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1"


    // $ANTLR start "rule__STElsePart__Group__1__Impl"
    // InternalGlobalConstantsParser.g:6859:1: rule__STElsePart__Group__1__Impl : ( ELSE ) ;
    public final void rule__STElsePart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6863:1: ( ( ELSE ) )
            // InternalGlobalConstantsParser.g:6864:1: ( ELSE )
            {
            // InternalGlobalConstantsParser.g:6864:1: ( ELSE )
            // InternalGlobalConstantsParser.g:6865:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__2"
    // InternalGlobalConstantsParser.g:6874:1: rule__STElsePart__Group__2 : rule__STElsePart__Group__2__Impl ;
    public final void rule__STElsePart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6878:1: ( rule__STElsePart__Group__2__Impl )
            // InternalGlobalConstantsParser.g:6879:2: rule__STElsePart__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2"


    // $ANTLR start "rule__STElsePart__Group__2__Impl"
    // InternalGlobalConstantsParser.g:6885:1: rule__STElsePart__Group__2__Impl : ( ( rule__STElsePart__StatementsAssignment_2 )* ) ;
    public final void rule__STElsePart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6889:1: ( ( ( rule__STElsePart__StatementsAssignment_2 )* ) )
            // InternalGlobalConstantsParser.g:6890:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            {
            // InternalGlobalConstantsParser.g:6890:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            // InternalGlobalConstantsParser.g:6891:2: ( rule__STElsePart__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }
            // InternalGlobalConstantsParser.g:6892:2: ( rule__STElsePart__StatementsAssignment_2 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==LDATE_AND_TIME||LA67_0==DATE_AND_TIME||LA67_0==LTIME_OF_DAY||LA67_0==TIME_OF_DAY||LA67_0==CONTINUE||LA67_0==WSTRING||LA67_0==REPEAT||LA67_0==RETURN||LA67_0==STRING||LA67_0==DWORD||LA67_0==FALSE||(LA67_0>=LDATE && LA67_0<=LWORD)||(LA67_0>=UDINT && LA67_0<=ULINT)||(LA67_0>=USINT && LA67_0<=DINT)||LA67_0==EXIT||(LA67_0>=LINT && LA67_0<=LTOD)||(LA67_0>=REAL && LA67_0<=SINT)||(LA67_0>=THIS && LA67_0<=TRUE)||LA67_0==UINT||(LA67_0>=WORD && LA67_0<=MOD)||LA67_0==TOD||LA67_0==XOR||(LA67_0>=DT && LA67_0<=LT)||LA67_0==OR||LA67_0==LeftParenthesis||LA67_0==PlusSign||LA67_0==HyphenMinus||LA67_0==Semicolon||(LA67_0>=D && LA67_0<=T)||(LA67_0>=RULE_NON_DECIMAL && LA67_0<=RULE_DECIMAL)||(LA67_0>=RULE_ID && LA67_0<=RULE_STRING)) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:6892:3: rule__STElsePart__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_30);
            	    rule__STElsePart__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__0"
    // InternalGlobalConstantsParser.g:6901:1: rule__STForStatement__Group__0 : rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 ;
    public final void rule__STForStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6905:1: ( rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 )
            // InternalGlobalConstantsParser.g:6906:2: rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__STForStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0"


    // $ANTLR start "rule__STForStatement__Group__0__Impl"
    // InternalGlobalConstantsParser.g:6913:1: rule__STForStatement__Group__0__Impl : ( FOR ) ;
    public final void rule__STForStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6917:1: ( ( FOR ) )
            // InternalGlobalConstantsParser.g:6918:1: ( FOR )
            {
            // InternalGlobalConstantsParser.g:6918:1: ( FOR )
            // InternalGlobalConstantsParser.g:6919:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0__Impl"


    // $ANTLR start "rule__STForStatement__Group__1"
    // InternalGlobalConstantsParser.g:6928:1: rule__STForStatement__Group__1 : rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 ;
    public final void rule__STForStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6932:1: ( rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 )
            // InternalGlobalConstantsParser.g:6933:2: rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__STForStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1"


    // $ANTLR start "rule__STForStatement__Group__1__Impl"
    // InternalGlobalConstantsParser.g:6940:1: rule__STForStatement__Group__1__Impl : ( ( rule__STForStatement__VariableAssignment_1 ) ) ;
    public final void rule__STForStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6944:1: ( ( ( rule__STForStatement__VariableAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:6945:1: ( ( rule__STForStatement__VariableAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:6945:1: ( ( rule__STForStatement__VariableAssignment_1 ) )
            // InternalGlobalConstantsParser.g:6946:2: ( rule__STForStatement__VariableAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:6947:2: ( rule__STForStatement__VariableAssignment_1 )
            // InternalGlobalConstantsParser.g:6947:3: rule__STForStatement__VariableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__VariableAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1__Impl"


    // $ANTLR start "rule__STForStatement__Group__2"
    // InternalGlobalConstantsParser.g:6955:1: rule__STForStatement__Group__2 : rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 ;
    public final void rule__STForStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6959:1: ( rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 )
            // InternalGlobalConstantsParser.g:6960:2: rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__STForStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2"


    // $ANTLR start "rule__STForStatement__Group__2__Impl"
    // InternalGlobalConstantsParser.g:6967:1: rule__STForStatement__Group__2__Impl : ( ColonEqualsSign ) ;
    public final void rule__STForStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6971:1: ( ( ColonEqualsSign ) )
            // InternalGlobalConstantsParser.g:6972:1: ( ColonEqualsSign )
            {
            // InternalGlobalConstantsParser.g:6972:1: ( ColonEqualsSign )
            // InternalGlobalConstantsParser.g:6973:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getColonEqualsSignKeyword_2()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getColonEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__3"
    // InternalGlobalConstantsParser.g:6982:1: rule__STForStatement__Group__3 : rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 ;
    public final void rule__STForStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6986:1: ( rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 )
            // InternalGlobalConstantsParser.g:6987:2: rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4
            {
            pushFollow(FOLLOW_37);
            rule__STForStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3"


    // $ANTLR start "rule__STForStatement__Group__3__Impl"
    // InternalGlobalConstantsParser.g:6994:1: rule__STForStatement__Group__3__Impl : ( ( rule__STForStatement__FromAssignment_3 ) ) ;
    public final void rule__STForStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:6998:1: ( ( ( rule__STForStatement__FromAssignment_3 ) ) )
            // InternalGlobalConstantsParser.g:6999:1: ( ( rule__STForStatement__FromAssignment_3 ) )
            {
            // InternalGlobalConstantsParser.g:6999:1: ( ( rule__STForStatement__FromAssignment_3 ) )
            // InternalGlobalConstantsParser.g:7000:2: ( rule__STForStatement__FromAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFromAssignment_3()); 
            }
            // InternalGlobalConstantsParser.g:7001:2: ( rule__STForStatement__FromAssignment_3 )
            // InternalGlobalConstantsParser.g:7001:3: rule__STForStatement__FromAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__FromAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFromAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3__Impl"


    // $ANTLR start "rule__STForStatement__Group__4"
    // InternalGlobalConstantsParser.g:7009:1: rule__STForStatement__Group__4 : rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 ;
    public final void rule__STForStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7013:1: ( rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 )
            // InternalGlobalConstantsParser.g:7014:2: rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5
            {
            pushFollow(FOLLOW_7);
            rule__STForStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4"


    // $ANTLR start "rule__STForStatement__Group__4__Impl"
    // InternalGlobalConstantsParser.g:7021:1: rule__STForStatement__Group__4__Impl : ( TO ) ;
    public final void rule__STForStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7025:1: ( ( TO ) )
            // InternalGlobalConstantsParser.g:7026:1: ( TO )
            {
            // InternalGlobalConstantsParser.g:7026:1: ( TO )
            // InternalGlobalConstantsParser.g:7027:2: TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getTOKeyword_4()); 
            }
            match(input,TO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getTOKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4__Impl"


    // $ANTLR start "rule__STForStatement__Group__5"
    // InternalGlobalConstantsParser.g:7036:1: rule__STForStatement__Group__5 : rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 ;
    public final void rule__STForStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7040:1: ( rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 )
            // InternalGlobalConstantsParser.g:7041:2: rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6
            {
            pushFollow(FOLLOW_38);
            rule__STForStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5"


    // $ANTLR start "rule__STForStatement__Group__5__Impl"
    // InternalGlobalConstantsParser.g:7048:1: rule__STForStatement__Group__5__Impl : ( ( rule__STForStatement__ToAssignment_5 ) ) ;
    public final void rule__STForStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7052:1: ( ( ( rule__STForStatement__ToAssignment_5 ) ) )
            // InternalGlobalConstantsParser.g:7053:1: ( ( rule__STForStatement__ToAssignment_5 ) )
            {
            // InternalGlobalConstantsParser.g:7053:1: ( ( rule__STForStatement__ToAssignment_5 ) )
            // InternalGlobalConstantsParser.g:7054:2: ( rule__STForStatement__ToAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToAssignment_5()); 
            }
            // InternalGlobalConstantsParser.g:7055:2: ( rule__STForStatement__ToAssignment_5 )
            // InternalGlobalConstantsParser.g:7055:3: rule__STForStatement__ToAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ToAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5__Impl"


    // $ANTLR start "rule__STForStatement__Group__6"
    // InternalGlobalConstantsParser.g:7063:1: rule__STForStatement__Group__6 : rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 ;
    public final void rule__STForStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7067:1: ( rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 )
            // InternalGlobalConstantsParser.g:7068:2: rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7
            {
            pushFollow(FOLLOW_38);
            rule__STForStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6"


    // $ANTLR start "rule__STForStatement__Group__6__Impl"
    // InternalGlobalConstantsParser.g:7075:1: rule__STForStatement__Group__6__Impl : ( ( rule__STForStatement__Group_6__0 )? ) ;
    public final void rule__STForStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7079:1: ( ( ( rule__STForStatement__Group_6__0 )? ) )
            // InternalGlobalConstantsParser.g:7080:1: ( ( rule__STForStatement__Group_6__0 )? )
            {
            // InternalGlobalConstantsParser.g:7080:1: ( ( rule__STForStatement__Group_6__0 )? )
            // InternalGlobalConstantsParser.g:7081:2: ( rule__STForStatement__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup_6()); 
            }
            // InternalGlobalConstantsParser.g:7082:2: ( rule__STForStatement__Group_6__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==BY) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalGlobalConstantsParser.g:7082:3: rule__STForStatement__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STForStatement__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6__Impl"


    // $ANTLR start "rule__STForStatement__Group__7"
    // InternalGlobalConstantsParser.g:7090:1: rule__STForStatement__Group__7 : rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8 ;
    public final void rule__STForStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7094:1: ( rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8 )
            // InternalGlobalConstantsParser.g:7095:2: rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8
            {
            pushFollow(FOLLOW_39);
            rule__STForStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7"


    // $ANTLR start "rule__STForStatement__Group__7__Impl"
    // InternalGlobalConstantsParser.g:7102:1: rule__STForStatement__Group__7__Impl : ( DO ) ;
    public final void rule__STForStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7106:1: ( ( DO ) )
            // InternalGlobalConstantsParser.g:7107:1: ( DO )
            {
            // InternalGlobalConstantsParser.g:7107:1: ( DO )
            // InternalGlobalConstantsParser.g:7108:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getDOKeyword_7()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getDOKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7__Impl"


    // $ANTLR start "rule__STForStatement__Group__8"
    // InternalGlobalConstantsParser.g:7117:1: rule__STForStatement__Group__8 : rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9 ;
    public final void rule__STForStatement__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7121:1: ( rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9 )
            // InternalGlobalConstantsParser.g:7122:2: rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9
            {
            pushFollow(FOLLOW_39);
            rule__STForStatement__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__8"


    // $ANTLR start "rule__STForStatement__Group__8__Impl"
    // InternalGlobalConstantsParser.g:7129:1: rule__STForStatement__Group__8__Impl : ( ( rule__STForStatement__StatementsAssignment_8 )* ) ;
    public final void rule__STForStatement__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7133:1: ( ( ( rule__STForStatement__StatementsAssignment_8 )* ) )
            // InternalGlobalConstantsParser.g:7134:1: ( ( rule__STForStatement__StatementsAssignment_8 )* )
            {
            // InternalGlobalConstantsParser.g:7134:1: ( ( rule__STForStatement__StatementsAssignment_8 )* )
            // InternalGlobalConstantsParser.g:7135:2: ( rule__STForStatement__StatementsAssignment_8 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsAssignment_8()); 
            }
            // InternalGlobalConstantsParser.g:7136:2: ( rule__STForStatement__StatementsAssignment_8 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==LDATE_AND_TIME||LA69_0==DATE_AND_TIME||LA69_0==LTIME_OF_DAY||LA69_0==TIME_OF_DAY||LA69_0==CONTINUE||LA69_0==WSTRING||LA69_0==REPEAT||LA69_0==RETURN||LA69_0==STRING||LA69_0==DWORD||LA69_0==FALSE||(LA69_0>=LDATE && LA69_0<=LWORD)||(LA69_0>=UDINT && LA69_0<=ULINT)||(LA69_0>=USINT && LA69_0<=DINT)||LA69_0==EXIT||(LA69_0>=LINT && LA69_0<=LTOD)||(LA69_0>=REAL && LA69_0<=SINT)||(LA69_0>=THIS && LA69_0<=TRUE)||LA69_0==UINT||(LA69_0>=WORD && LA69_0<=MOD)||LA69_0==TOD||LA69_0==XOR||(LA69_0>=DT && LA69_0<=LT)||LA69_0==OR||LA69_0==LeftParenthesis||LA69_0==PlusSign||LA69_0==HyphenMinus||LA69_0==Semicolon||(LA69_0>=D && LA69_0<=T)||(LA69_0>=RULE_NON_DECIMAL && LA69_0<=RULE_DECIMAL)||(LA69_0>=RULE_ID && LA69_0<=RULE_STRING)) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:7136:3: rule__STForStatement__StatementsAssignment_8
            	    {
            	    pushFollow(FOLLOW_30);
            	    rule__STForStatement__StatementsAssignment_8();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsAssignment_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__8__Impl"


    // $ANTLR start "rule__STForStatement__Group__9"
    // InternalGlobalConstantsParser.g:7144:1: rule__STForStatement__Group__9 : rule__STForStatement__Group__9__Impl ;
    public final void rule__STForStatement__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7148:1: ( rule__STForStatement__Group__9__Impl )
            // InternalGlobalConstantsParser.g:7149:2: rule__STForStatement__Group__9__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__9"


    // $ANTLR start "rule__STForStatement__Group__9__Impl"
    // InternalGlobalConstantsParser.g:7155:1: rule__STForStatement__Group__9__Impl : ( END_FOR ) ;
    public final void rule__STForStatement__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7159:1: ( ( END_FOR ) )
            // InternalGlobalConstantsParser.g:7160:1: ( END_FOR )
            {
            // InternalGlobalConstantsParser.g:7160:1: ( END_FOR )
            // InternalGlobalConstantsParser.g:7161:2: END_FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_9()); 
            }
            match(input,END_FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__9__Impl"


    // $ANTLR start "rule__STForStatement__Group_6__0"
    // InternalGlobalConstantsParser.g:7171:1: rule__STForStatement__Group_6__0 : rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1 ;
    public final void rule__STForStatement__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7175:1: ( rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1 )
            // InternalGlobalConstantsParser.g:7176:2: rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1
            {
            pushFollow(FOLLOW_7);
            rule__STForStatement__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__0"


    // $ANTLR start "rule__STForStatement__Group_6__0__Impl"
    // InternalGlobalConstantsParser.g:7183:1: rule__STForStatement__Group_6__0__Impl : ( BY ) ;
    public final void rule__STForStatement__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7187:1: ( ( BY ) )
            // InternalGlobalConstantsParser.g:7188:1: ( BY )
            {
            // InternalGlobalConstantsParser.g:7188:1: ( BY )
            // InternalGlobalConstantsParser.g:7189:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBYKeyword_6_0()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBYKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__0__Impl"


    // $ANTLR start "rule__STForStatement__Group_6__1"
    // InternalGlobalConstantsParser.g:7198:1: rule__STForStatement__Group_6__1 : rule__STForStatement__Group_6__1__Impl ;
    public final void rule__STForStatement__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7202:1: ( rule__STForStatement__Group_6__1__Impl )
            // InternalGlobalConstantsParser.g:7203:2: rule__STForStatement__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__1"


    // $ANTLR start "rule__STForStatement__Group_6__1__Impl"
    // InternalGlobalConstantsParser.g:7209:1: rule__STForStatement__Group_6__1__Impl : ( ( rule__STForStatement__ByAssignment_6_1 ) ) ;
    public final void rule__STForStatement__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7213:1: ( ( ( rule__STForStatement__ByAssignment_6_1 ) ) )
            // InternalGlobalConstantsParser.g:7214:1: ( ( rule__STForStatement__ByAssignment_6_1 ) )
            {
            // InternalGlobalConstantsParser.g:7214:1: ( ( rule__STForStatement__ByAssignment_6_1 ) )
            // InternalGlobalConstantsParser.g:7215:2: ( rule__STForStatement__ByAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getByAssignment_6_1()); 
            }
            // InternalGlobalConstantsParser.g:7216:2: ( rule__STForStatement__ByAssignment_6_1 )
            // InternalGlobalConstantsParser.g:7216:3: rule__STForStatement__ByAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ByAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getByAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__0"
    // InternalGlobalConstantsParser.g:7225:1: rule__STWhileStatement__Group__0 : rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 ;
    public final void rule__STWhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7229:1: ( rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 )
            // InternalGlobalConstantsParser.g:7230:2: rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__STWhileStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0"


    // $ANTLR start "rule__STWhileStatement__Group__0__Impl"
    // InternalGlobalConstantsParser.g:7237:1: rule__STWhileStatement__Group__0__Impl : ( WHILE ) ;
    public final void rule__STWhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7241:1: ( ( WHILE ) )
            // InternalGlobalConstantsParser.g:7242:1: ( WHILE )
            {
            // InternalGlobalConstantsParser.g:7242:1: ( WHILE )
            // InternalGlobalConstantsParser.g:7243:2: WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }
            match(input,WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__1"
    // InternalGlobalConstantsParser.g:7252:1: rule__STWhileStatement__Group__1 : rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 ;
    public final void rule__STWhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7256:1: ( rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 )
            // InternalGlobalConstantsParser.g:7257:2: rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2
            {
            pushFollow(FOLLOW_40);
            rule__STWhileStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1"


    // $ANTLR start "rule__STWhileStatement__Group__1__Impl"
    // InternalGlobalConstantsParser.g:7264:1: rule__STWhileStatement__Group__1__Impl : ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STWhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7268:1: ( ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:7269:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:7269:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            // InternalGlobalConstantsParser.g:7270:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:7271:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            // InternalGlobalConstantsParser.g:7271:3: rule__STWhileStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__2"
    // InternalGlobalConstantsParser.g:7279:1: rule__STWhileStatement__Group__2 : rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 ;
    public final void rule__STWhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7283:1: ( rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 )
            // InternalGlobalConstantsParser.g:7284:2: rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3
            {
            pushFollow(FOLLOW_41);
            rule__STWhileStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2"


    // $ANTLR start "rule__STWhileStatement__Group__2__Impl"
    // InternalGlobalConstantsParser.g:7291:1: rule__STWhileStatement__Group__2__Impl : ( DO ) ;
    public final void rule__STWhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7295:1: ( ( DO ) )
            // InternalGlobalConstantsParser.g:7296:1: ( DO )
            {
            // InternalGlobalConstantsParser.g:7296:1: ( DO )
            // InternalGlobalConstantsParser.g:7297:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__3"
    // InternalGlobalConstantsParser.g:7306:1: rule__STWhileStatement__Group__3 : rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 ;
    public final void rule__STWhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7310:1: ( rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 )
            // InternalGlobalConstantsParser.g:7311:2: rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4
            {
            pushFollow(FOLLOW_41);
            rule__STWhileStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3"


    // $ANTLR start "rule__STWhileStatement__Group__3__Impl"
    // InternalGlobalConstantsParser.g:7318:1: rule__STWhileStatement__Group__3__Impl : ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STWhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7322:1: ( ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) )
            // InternalGlobalConstantsParser.g:7323:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            {
            // InternalGlobalConstantsParser.g:7323:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            // InternalGlobalConstantsParser.g:7324:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalGlobalConstantsParser.g:7325:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==LDATE_AND_TIME||LA70_0==DATE_AND_TIME||LA70_0==LTIME_OF_DAY||LA70_0==TIME_OF_DAY||LA70_0==CONTINUE||LA70_0==WSTRING||LA70_0==REPEAT||LA70_0==RETURN||LA70_0==STRING||LA70_0==DWORD||LA70_0==FALSE||(LA70_0>=LDATE && LA70_0<=LWORD)||(LA70_0>=UDINT && LA70_0<=ULINT)||(LA70_0>=USINT && LA70_0<=DINT)||LA70_0==EXIT||(LA70_0>=LINT && LA70_0<=LTOD)||(LA70_0>=REAL && LA70_0<=SINT)||(LA70_0>=THIS && LA70_0<=TRUE)||LA70_0==UINT||(LA70_0>=WORD && LA70_0<=MOD)||LA70_0==TOD||LA70_0==XOR||(LA70_0>=DT && LA70_0<=LT)||LA70_0==OR||LA70_0==LeftParenthesis||LA70_0==PlusSign||LA70_0==HyphenMinus||LA70_0==Semicolon||(LA70_0>=D && LA70_0<=T)||(LA70_0>=RULE_NON_DECIMAL && LA70_0<=RULE_DECIMAL)||(LA70_0>=RULE_ID && LA70_0<=RULE_STRING)) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:7325:3: rule__STWhileStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_30);
            	    rule__STWhileStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__4"
    // InternalGlobalConstantsParser.g:7333:1: rule__STWhileStatement__Group__4 : rule__STWhileStatement__Group__4__Impl ;
    public final void rule__STWhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7337:1: ( rule__STWhileStatement__Group__4__Impl )
            // InternalGlobalConstantsParser.g:7338:2: rule__STWhileStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4"


    // $ANTLR start "rule__STWhileStatement__Group__4__Impl"
    // InternalGlobalConstantsParser.g:7344:1: rule__STWhileStatement__Group__4__Impl : ( END_WHILE ) ;
    public final void rule__STWhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7348:1: ( ( END_WHILE ) )
            // InternalGlobalConstantsParser.g:7349:1: ( END_WHILE )
            {
            // InternalGlobalConstantsParser.g:7349:1: ( END_WHILE )
            // InternalGlobalConstantsParser.g:7350:2: END_WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }
            match(input,END_WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__0"
    // InternalGlobalConstantsParser.g:7360:1: rule__STRepeatStatement__Group__0 : rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 ;
    public final void rule__STRepeatStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7364:1: ( rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 )
            // InternalGlobalConstantsParser.g:7365:2: rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__STRepeatStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0"


    // $ANTLR start "rule__STRepeatStatement__Group__0__Impl"
    // InternalGlobalConstantsParser.g:7372:1: rule__STRepeatStatement__Group__0__Impl : ( REPEAT ) ;
    public final void rule__STRepeatStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7376:1: ( ( REPEAT ) )
            // InternalGlobalConstantsParser.g:7377:1: ( REPEAT )
            {
            // InternalGlobalConstantsParser.g:7377:1: ( REPEAT )
            // InternalGlobalConstantsParser.g:7378:2: REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }
            match(input,REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__1"
    // InternalGlobalConstantsParser.g:7387:1: rule__STRepeatStatement__Group__1 : rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 ;
    public final void rule__STRepeatStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7391:1: ( rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 )
            // InternalGlobalConstantsParser.g:7392:2: rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__STRepeatStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1"


    // $ANTLR start "rule__STRepeatStatement__Group__1__Impl"
    // InternalGlobalConstantsParser.g:7399:1: rule__STRepeatStatement__Group__1__Impl : ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) ;
    public final void rule__STRepeatStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7403:1: ( ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) )
            // InternalGlobalConstantsParser.g:7404:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            {
            // InternalGlobalConstantsParser.g:7404:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            // InternalGlobalConstantsParser.g:7405:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:7406:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==LDATE_AND_TIME||LA71_0==DATE_AND_TIME||LA71_0==LTIME_OF_DAY||LA71_0==TIME_OF_DAY||LA71_0==CONTINUE||LA71_0==WSTRING||LA71_0==REPEAT||LA71_0==RETURN||LA71_0==STRING||LA71_0==DWORD||LA71_0==FALSE||(LA71_0>=LDATE && LA71_0<=LWORD)||(LA71_0>=UDINT && LA71_0<=ULINT)||(LA71_0>=USINT && LA71_0<=DINT)||LA71_0==EXIT||(LA71_0>=LINT && LA71_0<=LTOD)||(LA71_0>=REAL && LA71_0<=SINT)||(LA71_0>=THIS && LA71_0<=TRUE)||LA71_0==UINT||(LA71_0>=WORD && LA71_0<=MOD)||LA71_0==TOD||LA71_0==XOR||(LA71_0>=DT && LA71_0<=LT)||LA71_0==OR||LA71_0==LeftParenthesis||LA71_0==PlusSign||LA71_0==HyphenMinus||LA71_0==Semicolon||(LA71_0>=D && LA71_0<=T)||(LA71_0>=RULE_NON_DECIMAL && LA71_0<=RULE_DECIMAL)||(LA71_0>=RULE_ID && LA71_0<=RULE_STRING)) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:7406:3: rule__STRepeatStatement__StatementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_30);
            	    rule__STRepeatStatement__StatementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__2"
    // InternalGlobalConstantsParser.g:7414:1: rule__STRepeatStatement__Group__2 : rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 ;
    public final void rule__STRepeatStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7418:1: ( rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 )
            // InternalGlobalConstantsParser.g:7419:2: rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__STRepeatStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2"


    // $ANTLR start "rule__STRepeatStatement__Group__2__Impl"
    // InternalGlobalConstantsParser.g:7426:1: rule__STRepeatStatement__Group__2__Impl : ( UNTIL ) ;
    public final void rule__STRepeatStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7430:1: ( ( UNTIL ) )
            // InternalGlobalConstantsParser.g:7431:1: ( UNTIL )
            {
            // InternalGlobalConstantsParser.g:7431:1: ( UNTIL )
            // InternalGlobalConstantsParser.g:7432:2: UNTIL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }
            match(input,UNTIL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__3"
    // InternalGlobalConstantsParser.g:7441:1: rule__STRepeatStatement__Group__3 : rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 ;
    public final void rule__STRepeatStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7445:1: ( rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 )
            // InternalGlobalConstantsParser.g:7446:2: rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4
            {
            pushFollow(FOLLOW_43);
            rule__STRepeatStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3"


    // $ANTLR start "rule__STRepeatStatement__Group__3__Impl"
    // InternalGlobalConstantsParser.g:7453:1: rule__STRepeatStatement__Group__3__Impl : ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) ;
    public final void rule__STRepeatStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7457:1: ( ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) )
            // InternalGlobalConstantsParser.g:7458:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            {
            // InternalGlobalConstantsParser.g:7458:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            // InternalGlobalConstantsParser.g:7459:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }
            // InternalGlobalConstantsParser.g:7460:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            // InternalGlobalConstantsParser.g:7460:3: rule__STRepeatStatement__ConditionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__ConditionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__4"
    // InternalGlobalConstantsParser.g:7468:1: rule__STRepeatStatement__Group__4 : rule__STRepeatStatement__Group__4__Impl ;
    public final void rule__STRepeatStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7472:1: ( rule__STRepeatStatement__Group__4__Impl )
            // InternalGlobalConstantsParser.g:7473:2: rule__STRepeatStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4"


    // $ANTLR start "rule__STRepeatStatement__Group__4__Impl"
    // InternalGlobalConstantsParser.g:7479:1: rule__STRepeatStatement__Group__4__Impl : ( END_REPEAT ) ;
    public final void rule__STRepeatStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7483:1: ( ( END_REPEAT ) )
            // InternalGlobalConstantsParser.g:7484:1: ( END_REPEAT )
            {
            // InternalGlobalConstantsParser.g:7484:1: ( END_REPEAT )
            // InternalGlobalConstantsParser.g:7485:2: END_REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }
            match(input,END_REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__0"
    // InternalGlobalConstantsParser.g:7495:1: rule__STSubrangeExpression__Group__0 : rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 ;
    public final void rule__STSubrangeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7499:1: ( rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 )
            // InternalGlobalConstantsParser.g:7500:2: rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1
            {
            pushFollow(FOLLOW_44);
            rule__STSubrangeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0"


    // $ANTLR start "rule__STSubrangeExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:7507:1: rule__STSubrangeExpression__Group__0__Impl : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7511:1: ( ( ruleSTOrExpression ) )
            // InternalGlobalConstantsParser.g:7512:1: ( ruleSTOrExpression )
            {
            // InternalGlobalConstantsParser.g:7512:1: ( ruleSTOrExpression )
            // InternalGlobalConstantsParser.g:7513:2: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__1"
    // InternalGlobalConstantsParser.g:7522:1: rule__STSubrangeExpression__Group__1 : rule__STSubrangeExpression__Group__1__Impl ;
    public final void rule__STSubrangeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7526:1: ( rule__STSubrangeExpression__Group__1__Impl )
            // InternalGlobalConstantsParser.g:7527:2: rule__STSubrangeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1"


    // $ANTLR start "rule__STSubrangeExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:7533:1: rule__STSubrangeExpression__Group__1__Impl : ( ( rule__STSubrangeExpression__Group_1__0 )* ) ;
    public final void rule__STSubrangeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7537:1: ( ( ( rule__STSubrangeExpression__Group_1__0 )* ) )
            // InternalGlobalConstantsParser.g:7538:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            {
            // InternalGlobalConstantsParser.g:7538:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            // InternalGlobalConstantsParser.g:7539:2: ( rule__STSubrangeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }
            // InternalGlobalConstantsParser.g:7540:2: ( rule__STSubrangeExpression__Group_1__0 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==FullStopFullStop) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:7540:3: rule__STSubrangeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_45);
            	    rule__STSubrangeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0"
    // InternalGlobalConstantsParser.g:7549:1: rule__STSubrangeExpression__Group_1__0 : rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 ;
    public final void rule__STSubrangeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7553:1: ( rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 )
            // InternalGlobalConstantsParser.g:7554:2: rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STSubrangeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:7561:1: rule__STSubrangeExpression__Group_1__0__Impl : ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7565:1: ( ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) )
            // InternalGlobalConstantsParser.g:7566:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            {
            // InternalGlobalConstantsParser.g:7566:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            // InternalGlobalConstantsParser.g:7567:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }
            // InternalGlobalConstantsParser.g:7568:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            // InternalGlobalConstantsParser.g:7568:3: rule__STSubrangeExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1"
    // InternalGlobalConstantsParser.g:7576:1: rule__STSubrangeExpression__Group_1__1 : rule__STSubrangeExpression__Group_1__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7580:1: ( rule__STSubrangeExpression__Group_1__1__Impl )
            // InternalGlobalConstantsParser.g:7581:2: rule__STSubrangeExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:7587:1: rule__STSubrangeExpression__Group_1__1__Impl : ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7591:1: ( ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) )
            // InternalGlobalConstantsParser.g:7592:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:7592:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            // InternalGlobalConstantsParser.g:7593:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalGlobalConstantsParser.g:7594:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            // InternalGlobalConstantsParser.g:7594:3: rule__STSubrangeExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0"
    // InternalGlobalConstantsParser.g:7603:1: rule__STSubrangeExpression__Group_1_0__0 : rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 ;
    public final void rule__STSubrangeExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7607:1: ( rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 )
            // InternalGlobalConstantsParser.g:7608:2: rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_44);
            rule__STSubrangeExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0__Impl"
    // InternalGlobalConstantsParser.g:7615:1: rule__STSubrangeExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STSubrangeExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7619:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:7620:1: ( () )
            {
            // InternalGlobalConstantsParser.g:7620:1: ( () )
            // InternalGlobalConstantsParser.g:7621:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalGlobalConstantsParser.g:7622:2: ()
            // InternalGlobalConstantsParser.g:7622:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1"
    // InternalGlobalConstantsParser.g:7630:1: rule__STSubrangeExpression__Group_1_0__1 : rule__STSubrangeExpression__Group_1_0__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7634:1: ( rule__STSubrangeExpression__Group_1_0__1__Impl )
            // InternalGlobalConstantsParser.g:7635:2: rule__STSubrangeExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1__Impl"
    // InternalGlobalConstantsParser.g:7641:1: rule__STSubrangeExpression__Group_1_0__1__Impl : ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7645:1: ( ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) )
            // InternalGlobalConstantsParser.g:7646:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            {
            // InternalGlobalConstantsParser.g:7646:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            // InternalGlobalConstantsParser.g:7647:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalGlobalConstantsParser.g:7648:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            // InternalGlobalConstantsParser.g:7648:3: rule__STSubrangeExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group__0"
    // InternalGlobalConstantsParser.g:7657:1: rule__STOrExpression__Group__0 : rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 ;
    public final void rule__STOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7661:1: ( rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 )
            // InternalGlobalConstantsParser.g:7662:2: rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__STOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0"


    // $ANTLR start "rule__STOrExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:7669:1: rule__STOrExpression__Group__0__Impl : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7673:1: ( ( ruleSTXorExpression ) )
            // InternalGlobalConstantsParser.g:7674:1: ( ruleSTXorExpression )
            {
            // InternalGlobalConstantsParser.g:7674:1: ( ruleSTXorExpression )
            // InternalGlobalConstantsParser.g:7675:2: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group__1"
    // InternalGlobalConstantsParser.g:7684:1: rule__STOrExpression__Group__1 : rule__STOrExpression__Group__1__Impl ;
    public final void rule__STOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7688:1: ( rule__STOrExpression__Group__1__Impl )
            // InternalGlobalConstantsParser.g:7689:2: rule__STOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1"


    // $ANTLR start "rule__STOrExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:7695:1: rule__STOrExpression__Group__1__Impl : ( ( rule__STOrExpression__Group_1__0 )* ) ;
    public final void rule__STOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7699:1: ( ( ( rule__STOrExpression__Group_1__0 )* ) )
            // InternalGlobalConstantsParser.g:7700:1: ( ( rule__STOrExpression__Group_1__0 )* )
            {
            // InternalGlobalConstantsParser.g:7700:1: ( ( rule__STOrExpression__Group_1__0 )* )
            // InternalGlobalConstantsParser.g:7701:2: ( rule__STOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }
            // InternalGlobalConstantsParser.g:7702:2: ( rule__STOrExpression__Group_1__0 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==OR) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:7702:3: rule__STOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_47);
            	    rule__STOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__0"
    // InternalGlobalConstantsParser.g:7711:1: rule__STOrExpression__Group_1__0 : rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 ;
    public final void rule__STOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7715:1: ( rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 )
            // InternalGlobalConstantsParser.g:7716:2: rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0"


    // $ANTLR start "rule__STOrExpression__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:7723:1: rule__STOrExpression__Group_1__0__Impl : ( ( rule__STOrExpression__Group_1_0__0 ) ) ;
    public final void rule__STOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7727:1: ( ( ( rule__STOrExpression__Group_1_0__0 ) ) )
            // InternalGlobalConstantsParser.g:7728:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            {
            // InternalGlobalConstantsParser.g:7728:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            // InternalGlobalConstantsParser.g:7729:2: ( rule__STOrExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }
            // InternalGlobalConstantsParser.g:7730:2: ( rule__STOrExpression__Group_1_0__0 )
            // InternalGlobalConstantsParser.g:7730:3: rule__STOrExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__1"
    // InternalGlobalConstantsParser.g:7738:1: rule__STOrExpression__Group_1__1 : rule__STOrExpression__Group_1__1__Impl ;
    public final void rule__STOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7742:1: ( rule__STOrExpression__Group_1__1__Impl )
            // InternalGlobalConstantsParser.g:7743:2: rule__STOrExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1"


    // $ANTLR start "rule__STOrExpression__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:7749:1: rule__STOrExpression__Group_1__1__Impl : ( ( rule__STOrExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7753:1: ( ( ( rule__STOrExpression__RightAssignment_1_1 ) ) )
            // InternalGlobalConstantsParser.g:7754:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:7754:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            // InternalGlobalConstantsParser.g:7755:2: ( rule__STOrExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalGlobalConstantsParser.g:7756:2: ( rule__STOrExpression__RightAssignment_1_1 )
            // InternalGlobalConstantsParser.g:7756:3: rule__STOrExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0"
    // InternalGlobalConstantsParser.g:7765:1: rule__STOrExpression__Group_1_0__0 : rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 ;
    public final void rule__STOrExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7769:1: ( rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 )
            // InternalGlobalConstantsParser.g:7770:2: rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_46);
            rule__STOrExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0__Impl"
    // InternalGlobalConstantsParser.g:7777:1: rule__STOrExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STOrExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7781:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:7782:1: ( () )
            {
            // InternalGlobalConstantsParser.g:7782:1: ( () )
            // InternalGlobalConstantsParser.g:7783:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalGlobalConstantsParser.g:7784:2: ()
            // InternalGlobalConstantsParser.g:7784:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1"
    // InternalGlobalConstantsParser.g:7792:1: rule__STOrExpression__Group_1_0__1 : rule__STOrExpression__Group_1_0__1__Impl ;
    public final void rule__STOrExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7796:1: ( rule__STOrExpression__Group_1_0__1__Impl )
            // InternalGlobalConstantsParser.g:7797:2: rule__STOrExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1__Impl"
    // InternalGlobalConstantsParser.g:7803:1: rule__STOrExpression__Group_1_0__1__Impl : ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STOrExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7807:1: ( ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) )
            // InternalGlobalConstantsParser.g:7808:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            {
            // InternalGlobalConstantsParser.g:7808:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            // InternalGlobalConstantsParser.g:7809:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalGlobalConstantsParser.g:7810:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            // InternalGlobalConstantsParser.g:7810:3: rule__STOrExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group__0"
    // InternalGlobalConstantsParser.g:7819:1: rule__STXorExpression__Group__0 : rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 ;
    public final void rule__STXorExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7823:1: ( rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 )
            // InternalGlobalConstantsParser.g:7824:2: rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__STXorExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0"


    // $ANTLR start "rule__STXorExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:7831:1: rule__STXorExpression__Group__0__Impl : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7835:1: ( ( ruleSTAndExpression ) )
            // InternalGlobalConstantsParser.g:7836:1: ( ruleSTAndExpression )
            {
            // InternalGlobalConstantsParser.g:7836:1: ( ruleSTAndExpression )
            // InternalGlobalConstantsParser.g:7837:2: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group__1"
    // InternalGlobalConstantsParser.g:7846:1: rule__STXorExpression__Group__1 : rule__STXorExpression__Group__1__Impl ;
    public final void rule__STXorExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7850:1: ( rule__STXorExpression__Group__1__Impl )
            // InternalGlobalConstantsParser.g:7851:2: rule__STXorExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1"


    // $ANTLR start "rule__STXorExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:7857:1: rule__STXorExpression__Group__1__Impl : ( ( rule__STXorExpression__Group_1__0 )* ) ;
    public final void rule__STXorExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7861:1: ( ( ( rule__STXorExpression__Group_1__0 )* ) )
            // InternalGlobalConstantsParser.g:7862:1: ( ( rule__STXorExpression__Group_1__0 )* )
            {
            // InternalGlobalConstantsParser.g:7862:1: ( ( rule__STXorExpression__Group_1__0 )* )
            // InternalGlobalConstantsParser.g:7863:2: ( rule__STXorExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }
            // InternalGlobalConstantsParser.g:7864:2: ( rule__STXorExpression__Group_1__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==XOR) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:7864:3: rule__STXorExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_49);
            	    rule__STXorExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__0"
    // InternalGlobalConstantsParser.g:7873:1: rule__STXorExpression__Group_1__0 : rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 ;
    public final void rule__STXorExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7877:1: ( rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 )
            // InternalGlobalConstantsParser.g:7878:2: rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STXorExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0"


    // $ANTLR start "rule__STXorExpression__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:7885:1: rule__STXorExpression__Group_1__0__Impl : ( ( rule__STXorExpression__Group_1_0__0 ) ) ;
    public final void rule__STXorExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7889:1: ( ( ( rule__STXorExpression__Group_1_0__0 ) ) )
            // InternalGlobalConstantsParser.g:7890:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            {
            // InternalGlobalConstantsParser.g:7890:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            // InternalGlobalConstantsParser.g:7891:2: ( rule__STXorExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }
            // InternalGlobalConstantsParser.g:7892:2: ( rule__STXorExpression__Group_1_0__0 )
            // InternalGlobalConstantsParser.g:7892:3: rule__STXorExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__1"
    // InternalGlobalConstantsParser.g:7900:1: rule__STXorExpression__Group_1__1 : rule__STXorExpression__Group_1__1__Impl ;
    public final void rule__STXorExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7904:1: ( rule__STXorExpression__Group_1__1__Impl )
            // InternalGlobalConstantsParser.g:7905:2: rule__STXorExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1"


    // $ANTLR start "rule__STXorExpression__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:7911:1: rule__STXorExpression__Group_1__1__Impl : ( ( rule__STXorExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STXorExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7915:1: ( ( ( rule__STXorExpression__RightAssignment_1_1 ) ) )
            // InternalGlobalConstantsParser.g:7916:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:7916:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            // InternalGlobalConstantsParser.g:7917:2: ( rule__STXorExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalGlobalConstantsParser.g:7918:2: ( rule__STXorExpression__RightAssignment_1_1 )
            // InternalGlobalConstantsParser.g:7918:3: rule__STXorExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0"
    // InternalGlobalConstantsParser.g:7927:1: rule__STXorExpression__Group_1_0__0 : rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 ;
    public final void rule__STXorExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7931:1: ( rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 )
            // InternalGlobalConstantsParser.g:7932:2: rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_48);
            rule__STXorExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0__Impl"
    // InternalGlobalConstantsParser.g:7939:1: rule__STXorExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STXorExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7943:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:7944:1: ( () )
            {
            // InternalGlobalConstantsParser.g:7944:1: ( () )
            // InternalGlobalConstantsParser.g:7945:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalGlobalConstantsParser.g:7946:2: ()
            // InternalGlobalConstantsParser.g:7946:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1"
    // InternalGlobalConstantsParser.g:7954:1: rule__STXorExpression__Group_1_0__1 : rule__STXorExpression__Group_1_0__1__Impl ;
    public final void rule__STXorExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7958:1: ( rule__STXorExpression__Group_1_0__1__Impl )
            // InternalGlobalConstantsParser.g:7959:2: rule__STXorExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1__Impl"
    // InternalGlobalConstantsParser.g:7965:1: rule__STXorExpression__Group_1_0__1__Impl : ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STXorExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7969:1: ( ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) )
            // InternalGlobalConstantsParser.g:7970:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            {
            // InternalGlobalConstantsParser.g:7970:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            // InternalGlobalConstantsParser.g:7971:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalGlobalConstantsParser.g:7972:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            // InternalGlobalConstantsParser.g:7972:3: rule__STXorExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group__0"
    // InternalGlobalConstantsParser.g:7981:1: rule__STAndExpression__Group__0 : rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 ;
    public final void rule__STAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7985:1: ( rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 )
            // InternalGlobalConstantsParser.g:7986:2: rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__STAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0"


    // $ANTLR start "rule__STAndExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:7993:1: rule__STAndExpression__Group__0__Impl : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:7997:1: ( ( ruleSTEqualityExpression ) )
            // InternalGlobalConstantsParser.g:7998:1: ( ruleSTEqualityExpression )
            {
            // InternalGlobalConstantsParser.g:7998:1: ( ruleSTEqualityExpression )
            // InternalGlobalConstantsParser.g:7999:2: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group__1"
    // InternalGlobalConstantsParser.g:8008:1: rule__STAndExpression__Group__1 : rule__STAndExpression__Group__1__Impl ;
    public final void rule__STAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8012:1: ( rule__STAndExpression__Group__1__Impl )
            // InternalGlobalConstantsParser.g:8013:2: rule__STAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1"


    // $ANTLR start "rule__STAndExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:8019:1: rule__STAndExpression__Group__1__Impl : ( ( rule__STAndExpression__Group_1__0 )* ) ;
    public final void rule__STAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8023:1: ( ( ( rule__STAndExpression__Group_1__0 )* ) )
            // InternalGlobalConstantsParser.g:8024:1: ( ( rule__STAndExpression__Group_1__0 )* )
            {
            // InternalGlobalConstantsParser.g:8024:1: ( ( rule__STAndExpression__Group_1__0 )* )
            // InternalGlobalConstantsParser.g:8025:2: ( rule__STAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }
            // InternalGlobalConstantsParser.g:8026:2: ( rule__STAndExpression__Group_1__0 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==AND||LA75_0==Ampersand) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:8026:3: rule__STAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_51);
            	    rule__STAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__0"
    // InternalGlobalConstantsParser.g:8035:1: rule__STAndExpression__Group_1__0 : rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 ;
    public final void rule__STAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8039:1: ( rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 )
            // InternalGlobalConstantsParser.g:8040:2: rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0"


    // $ANTLR start "rule__STAndExpression__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:8047:1: rule__STAndExpression__Group_1__0__Impl : ( ( rule__STAndExpression__Group_1_0__0 ) ) ;
    public final void rule__STAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8051:1: ( ( ( rule__STAndExpression__Group_1_0__0 ) ) )
            // InternalGlobalConstantsParser.g:8052:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            {
            // InternalGlobalConstantsParser.g:8052:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            // InternalGlobalConstantsParser.g:8053:2: ( rule__STAndExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }
            // InternalGlobalConstantsParser.g:8054:2: ( rule__STAndExpression__Group_1_0__0 )
            // InternalGlobalConstantsParser.g:8054:3: rule__STAndExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__1"
    // InternalGlobalConstantsParser.g:8062:1: rule__STAndExpression__Group_1__1 : rule__STAndExpression__Group_1__1__Impl ;
    public final void rule__STAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8066:1: ( rule__STAndExpression__Group_1__1__Impl )
            // InternalGlobalConstantsParser.g:8067:2: rule__STAndExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1"


    // $ANTLR start "rule__STAndExpression__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:8073:1: rule__STAndExpression__Group_1__1__Impl : ( ( rule__STAndExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8077:1: ( ( ( rule__STAndExpression__RightAssignment_1_1 ) ) )
            // InternalGlobalConstantsParser.g:8078:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:8078:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            // InternalGlobalConstantsParser.g:8079:2: ( rule__STAndExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalGlobalConstantsParser.g:8080:2: ( rule__STAndExpression__RightAssignment_1_1 )
            // InternalGlobalConstantsParser.g:8080:3: rule__STAndExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0"
    // InternalGlobalConstantsParser.g:8089:1: rule__STAndExpression__Group_1_0__0 : rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 ;
    public final void rule__STAndExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8093:1: ( rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 )
            // InternalGlobalConstantsParser.g:8094:2: rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_50);
            rule__STAndExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0__Impl"
    // InternalGlobalConstantsParser.g:8101:1: rule__STAndExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAndExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8105:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:8106:1: ( () )
            {
            // InternalGlobalConstantsParser.g:8106:1: ( () )
            // InternalGlobalConstantsParser.g:8107:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalGlobalConstantsParser.g:8108:2: ()
            // InternalGlobalConstantsParser.g:8108:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1"
    // InternalGlobalConstantsParser.g:8116:1: rule__STAndExpression__Group_1_0__1 : rule__STAndExpression__Group_1_0__1__Impl ;
    public final void rule__STAndExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8120:1: ( rule__STAndExpression__Group_1_0__1__Impl )
            // InternalGlobalConstantsParser.g:8121:2: rule__STAndExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1__Impl"
    // InternalGlobalConstantsParser.g:8127:1: rule__STAndExpression__Group_1_0__1__Impl : ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAndExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8131:1: ( ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) )
            // InternalGlobalConstantsParser.g:8132:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            {
            // InternalGlobalConstantsParser.g:8132:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            // InternalGlobalConstantsParser.g:8133:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalGlobalConstantsParser.g:8134:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            // InternalGlobalConstantsParser.g:8134:3: rule__STAndExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__0"
    // InternalGlobalConstantsParser.g:8143:1: rule__STEqualityExpression__Group__0 : rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 ;
    public final void rule__STEqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8147:1: ( rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 )
            // InternalGlobalConstantsParser.g:8148:2: rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__STEqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0"


    // $ANTLR start "rule__STEqualityExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:8155:1: rule__STEqualityExpression__Group__0__Impl : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8159:1: ( ( ruleSTComparisonExpression ) )
            // InternalGlobalConstantsParser.g:8160:1: ( ruleSTComparisonExpression )
            {
            // InternalGlobalConstantsParser.g:8160:1: ( ruleSTComparisonExpression )
            // InternalGlobalConstantsParser.g:8161:2: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__1"
    // InternalGlobalConstantsParser.g:8170:1: rule__STEqualityExpression__Group__1 : rule__STEqualityExpression__Group__1__Impl ;
    public final void rule__STEqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8174:1: ( rule__STEqualityExpression__Group__1__Impl )
            // InternalGlobalConstantsParser.g:8175:2: rule__STEqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1"


    // $ANTLR start "rule__STEqualityExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:8181:1: rule__STEqualityExpression__Group__1__Impl : ( ( rule__STEqualityExpression__Group_1__0 )* ) ;
    public final void rule__STEqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8185:1: ( ( ( rule__STEqualityExpression__Group_1__0 )* ) )
            // InternalGlobalConstantsParser.g:8186:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            {
            // InternalGlobalConstantsParser.g:8186:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            // InternalGlobalConstantsParser.g:8187:2: ( rule__STEqualityExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalGlobalConstantsParser.g:8188:2: ( rule__STEqualityExpression__Group_1__0 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==LessThanSignGreaterThanSign||LA76_0==EqualsSign) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:8188:3: rule__STEqualityExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_53);
            	    rule__STEqualityExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0"
    // InternalGlobalConstantsParser.g:8197:1: rule__STEqualityExpression__Group_1__0 : rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 ;
    public final void rule__STEqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8201:1: ( rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 )
            // InternalGlobalConstantsParser.g:8202:2: rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STEqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:8209:1: rule__STEqualityExpression__Group_1__0__Impl : ( ( rule__STEqualityExpression__Group_1_0__0 ) ) ;
    public final void rule__STEqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8213:1: ( ( ( rule__STEqualityExpression__Group_1_0__0 ) ) )
            // InternalGlobalConstantsParser.g:8214:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            {
            // InternalGlobalConstantsParser.g:8214:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            // InternalGlobalConstantsParser.g:8215:2: ( rule__STEqualityExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }
            // InternalGlobalConstantsParser.g:8216:2: ( rule__STEqualityExpression__Group_1_0__0 )
            // InternalGlobalConstantsParser.g:8216:3: rule__STEqualityExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1"
    // InternalGlobalConstantsParser.g:8224:1: rule__STEqualityExpression__Group_1__1 : rule__STEqualityExpression__Group_1__1__Impl ;
    public final void rule__STEqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8228:1: ( rule__STEqualityExpression__Group_1__1__Impl )
            // InternalGlobalConstantsParser.g:8229:2: rule__STEqualityExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:8235:1: rule__STEqualityExpression__Group_1__1__Impl : ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8239:1: ( ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) )
            // InternalGlobalConstantsParser.g:8240:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:8240:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            // InternalGlobalConstantsParser.g:8241:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalGlobalConstantsParser.g:8242:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            // InternalGlobalConstantsParser.g:8242:3: rule__STEqualityExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0"
    // InternalGlobalConstantsParser.g:8251:1: rule__STEqualityExpression__Group_1_0__0 : rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 ;
    public final void rule__STEqualityExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8255:1: ( rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 )
            // InternalGlobalConstantsParser.g:8256:2: rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_52);
            rule__STEqualityExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0__Impl"
    // InternalGlobalConstantsParser.g:8263:1: rule__STEqualityExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STEqualityExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8267:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:8268:1: ( () )
            {
            // InternalGlobalConstantsParser.g:8268:1: ( () )
            // InternalGlobalConstantsParser.g:8269:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalGlobalConstantsParser.g:8270:2: ()
            // InternalGlobalConstantsParser.g:8270:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1"
    // InternalGlobalConstantsParser.g:8278:1: rule__STEqualityExpression__Group_1_0__1 : rule__STEqualityExpression__Group_1_0__1__Impl ;
    public final void rule__STEqualityExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8282:1: ( rule__STEqualityExpression__Group_1_0__1__Impl )
            // InternalGlobalConstantsParser.g:8283:2: rule__STEqualityExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1__Impl"
    // InternalGlobalConstantsParser.g:8289:1: rule__STEqualityExpression__Group_1_0__1__Impl : ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8293:1: ( ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) )
            // InternalGlobalConstantsParser.g:8294:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            {
            // InternalGlobalConstantsParser.g:8294:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            // InternalGlobalConstantsParser.g:8295:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalGlobalConstantsParser.g:8296:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            // InternalGlobalConstantsParser.g:8296:3: rule__STEqualityExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__0"
    // InternalGlobalConstantsParser.g:8305:1: rule__STComparisonExpression__Group__0 : rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 ;
    public final void rule__STComparisonExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8309:1: ( rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 )
            // InternalGlobalConstantsParser.g:8310:2: rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__STComparisonExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0"


    // $ANTLR start "rule__STComparisonExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:8317:1: rule__STComparisonExpression__Group__0__Impl : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8321:1: ( ( ruleSTAddSubExpression ) )
            // InternalGlobalConstantsParser.g:8322:1: ( ruleSTAddSubExpression )
            {
            // InternalGlobalConstantsParser.g:8322:1: ( ruleSTAddSubExpression )
            // InternalGlobalConstantsParser.g:8323:2: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__1"
    // InternalGlobalConstantsParser.g:8332:1: rule__STComparisonExpression__Group__1 : rule__STComparisonExpression__Group__1__Impl ;
    public final void rule__STComparisonExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8336:1: ( rule__STComparisonExpression__Group__1__Impl )
            // InternalGlobalConstantsParser.g:8337:2: rule__STComparisonExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1"


    // $ANTLR start "rule__STComparisonExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:8343:1: rule__STComparisonExpression__Group__1__Impl : ( ( rule__STComparisonExpression__Group_1__0 )* ) ;
    public final void rule__STComparisonExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8347:1: ( ( ( rule__STComparisonExpression__Group_1__0 )* ) )
            // InternalGlobalConstantsParser.g:8348:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            {
            // InternalGlobalConstantsParser.g:8348:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            // InternalGlobalConstantsParser.g:8349:2: ( rule__STComparisonExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }
            // InternalGlobalConstantsParser.g:8350:2: ( rule__STComparisonExpression__Group_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==LessThanSignEqualsSign||LA77_0==GreaterThanSignEqualsSign||LA77_0==LessThanSign||LA77_0==GreaterThanSign) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:8350:3: rule__STComparisonExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_55);
            	    rule__STComparisonExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0"
    // InternalGlobalConstantsParser.g:8359:1: rule__STComparisonExpression__Group_1__0 : rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 ;
    public final void rule__STComparisonExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8363:1: ( rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 )
            // InternalGlobalConstantsParser.g:8364:2: rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STComparisonExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:8371:1: rule__STComparisonExpression__Group_1__0__Impl : ( ( rule__STComparisonExpression__Group_1_0__0 ) ) ;
    public final void rule__STComparisonExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8375:1: ( ( ( rule__STComparisonExpression__Group_1_0__0 ) ) )
            // InternalGlobalConstantsParser.g:8376:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            {
            // InternalGlobalConstantsParser.g:8376:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            // InternalGlobalConstantsParser.g:8377:2: ( rule__STComparisonExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }
            // InternalGlobalConstantsParser.g:8378:2: ( rule__STComparisonExpression__Group_1_0__0 )
            // InternalGlobalConstantsParser.g:8378:3: rule__STComparisonExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1"
    // InternalGlobalConstantsParser.g:8386:1: rule__STComparisonExpression__Group_1__1 : rule__STComparisonExpression__Group_1__1__Impl ;
    public final void rule__STComparisonExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8390:1: ( rule__STComparisonExpression__Group_1__1__Impl )
            // InternalGlobalConstantsParser.g:8391:2: rule__STComparisonExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:8397:1: rule__STComparisonExpression__Group_1__1__Impl : ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8401:1: ( ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) )
            // InternalGlobalConstantsParser.g:8402:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:8402:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            // InternalGlobalConstantsParser.g:8403:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalGlobalConstantsParser.g:8404:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            // InternalGlobalConstantsParser.g:8404:3: rule__STComparisonExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0"
    // InternalGlobalConstantsParser.g:8413:1: rule__STComparisonExpression__Group_1_0__0 : rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 ;
    public final void rule__STComparisonExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8417:1: ( rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 )
            // InternalGlobalConstantsParser.g:8418:2: rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_54);
            rule__STComparisonExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0__Impl"
    // InternalGlobalConstantsParser.g:8425:1: rule__STComparisonExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STComparisonExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8429:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:8430:1: ( () )
            {
            // InternalGlobalConstantsParser.g:8430:1: ( () )
            // InternalGlobalConstantsParser.g:8431:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalGlobalConstantsParser.g:8432:2: ()
            // InternalGlobalConstantsParser.g:8432:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1"
    // InternalGlobalConstantsParser.g:8440:1: rule__STComparisonExpression__Group_1_0__1 : rule__STComparisonExpression__Group_1_0__1__Impl ;
    public final void rule__STComparisonExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8444:1: ( rule__STComparisonExpression__Group_1_0__1__Impl )
            // InternalGlobalConstantsParser.g:8445:2: rule__STComparisonExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1__Impl"
    // InternalGlobalConstantsParser.g:8451:1: rule__STComparisonExpression__Group_1_0__1__Impl : ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8455:1: ( ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) )
            // InternalGlobalConstantsParser.g:8456:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            {
            // InternalGlobalConstantsParser.g:8456:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            // InternalGlobalConstantsParser.g:8457:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalGlobalConstantsParser.g:8458:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            // InternalGlobalConstantsParser.g:8458:3: rule__STComparisonExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__0"
    // InternalGlobalConstantsParser.g:8467:1: rule__STAddSubExpression__Group__0 : rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 ;
    public final void rule__STAddSubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8471:1: ( rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 )
            // InternalGlobalConstantsParser.g:8472:2: rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1
            {
            pushFollow(FOLLOW_56);
            rule__STAddSubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0"


    // $ANTLR start "rule__STAddSubExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:8479:1: rule__STAddSubExpression__Group__0__Impl : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8483:1: ( ( ruleSTMulDivModExpression ) )
            // InternalGlobalConstantsParser.g:8484:1: ( ruleSTMulDivModExpression )
            {
            // InternalGlobalConstantsParser.g:8484:1: ( ruleSTMulDivModExpression )
            // InternalGlobalConstantsParser.g:8485:2: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__1"
    // InternalGlobalConstantsParser.g:8494:1: rule__STAddSubExpression__Group__1 : rule__STAddSubExpression__Group__1__Impl ;
    public final void rule__STAddSubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8498:1: ( rule__STAddSubExpression__Group__1__Impl )
            // InternalGlobalConstantsParser.g:8499:2: rule__STAddSubExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1"


    // $ANTLR start "rule__STAddSubExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:8505:1: rule__STAddSubExpression__Group__1__Impl : ( ( rule__STAddSubExpression__Group_1__0 )* ) ;
    public final void rule__STAddSubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8509:1: ( ( ( rule__STAddSubExpression__Group_1__0 )* ) )
            // InternalGlobalConstantsParser.g:8510:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            {
            // InternalGlobalConstantsParser.g:8510:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            // InternalGlobalConstantsParser.g:8511:2: ( rule__STAddSubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }
            // InternalGlobalConstantsParser.g:8512:2: ( rule__STAddSubExpression__Group_1__0 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==PlusSign||LA78_0==HyphenMinus) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:8512:3: rule__STAddSubExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_57);
            	    rule__STAddSubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0"
    // InternalGlobalConstantsParser.g:8521:1: rule__STAddSubExpression__Group_1__0 : rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 ;
    public final void rule__STAddSubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8525:1: ( rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 )
            // InternalGlobalConstantsParser.g:8526:2: rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STAddSubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:8533:1: rule__STAddSubExpression__Group_1__0__Impl : ( ( rule__STAddSubExpression__Group_1_0__0 ) ) ;
    public final void rule__STAddSubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8537:1: ( ( ( rule__STAddSubExpression__Group_1_0__0 ) ) )
            // InternalGlobalConstantsParser.g:8538:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            {
            // InternalGlobalConstantsParser.g:8538:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            // InternalGlobalConstantsParser.g:8539:2: ( rule__STAddSubExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }
            // InternalGlobalConstantsParser.g:8540:2: ( rule__STAddSubExpression__Group_1_0__0 )
            // InternalGlobalConstantsParser.g:8540:3: rule__STAddSubExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1"
    // InternalGlobalConstantsParser.g:8548:1: rule__STAddSubExpression__Group_1__1 : rule__STAddSubExpression__Group_1__1__Impl ;
    public final void rule__STAddSubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8552:1: ( rule__STAddSubExpression__Group_1__1__Impl )
            // InternalGlobalConstantsParser.g:8553:2: rule__STAddSubExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:8559:1: rule__STAddSubExpression__Group_1__1__Impl : ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8563:1: ( ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) )
            // InternalGlobalConstantsParser.g:8564:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:8564:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            // InternalGlobalConstantsParser.g:8565:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalGlobalConstantsParser.g:8566:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            // InternalGlobalConstantsParser.g:8566:3: rule__STAddSubExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0"
    // InternalGlobalConstantsParser.g:8575:1: rule__STAddSubExpression__Group_1_0__0 : rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 ;
    public final void rule__STAddSubExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8579:1: ( rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 )
            // InternalGlobalConstantsParser.g:8580:2: rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_56);
            rule__STAddSubExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0__Impl"
    // InternalGlobalConstantsParser.g:8587:1: rule__STAddSubExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAddSubExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8591:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:8592:1: ( () )
            {
            // InternalGlobalConstantsParser.g:8592:1: ( () )
            // InternalGlobalConstantsParser.g:8593:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalGlobalConstantsParser.g:8594:2: ()
            // InternalGlobalConstantsParser.g:8594:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1"
    // InternalGlobalConstantsParser.g:8602:1: rule__STAddSubExpression__Group_1_0__1 : rule__STAddSubExpression__Group_1_0__1__Impl ;
    public final void rule__STAddSubExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8606:1: ( rule__STAddSubExpression__Group_1_0__1__Impl )
            // InternalGlobalConstantsParser.g:8607:2: rule__STAddSubExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1__Impl"
    // InternalGlobalConstantsParser.g:8613:1: rule__STAddSubExpression__Group_1_0__1__Impl : ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8617:1: ( ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) )
            // InternalGlobalConstantsParser.g:8618:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            {
            // InternalGlobalConstantsParser.g:8618:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            // InternalGlobalConstantsParser.g:8619:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalGlobalConstantsParser.g:8620:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            // InternalGlobalConstantsParser.g:8620:3: rule__STAddSubExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__0"
    // InternalGlobalConstantsParser.g:8629:1: rule__STMulDivModExpression__Group__0 : rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 ;
    public final void rule__STMulDivModExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8633:1: ( rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 )
            // InternalGlobalConstantsParser.g:8634:2: rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1
            {
            pushFollow(FOLLOW_58);
            rule__STMulDivModExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0"


    // $ANTLR start "rule__STMulDivModExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:8641:1: rule__STMulDivModExpression__Group__0__Impl : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8645:1: ( ( ruleSTPowerExpression ) )
            // InternalGlobalConstantsParser.g:8646:1: ( ruleSTPowerExpression )
            {
            // InternalGlobalConstantsParser.g:8646:1: ( ruleSTPowerExpression )
            // InternalGlobalConstantsParser.g:8647:2: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__1"
    // InternalGlobalConstantsParser.g:8656:1: rule__STMulDivModExpression__Group__1 : rule__STMulDivModExpression__Group__1__Impl ;
    public final void rule__STMulDivModExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8660:1: ( rule__STMulDivModExpression__Group__1__Impl )
            // InternalGlobalConstantsParser.g:8661:2: rule__STMulDivModExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1"


    // $ANTLR start "rule__STMulDivModExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:8667:1: rule__STMulDivModExpression__Group__1__Impl : ( ( rule__STMulDivModExpression__Group_1__0 )* ) ;
    public final void rule__STMulDivModExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8671:1: ( ( ( rule__STMulDivModExpression__Group_1__0 )* ) )
            // InternalGlobalConstantsParser.g:8672:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            {
            // InternalGlobalConstantsParser.g:8672:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            // InternalGlobalConstantsParser.g:8673:2: ( rule__STMulDivModExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }
            // InternalGlobalConstantsParser.g:8674:2: ( rule__STMulDivModExpression__Group_1__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==MOD||LA79_0==Asterisk||LA79_0==Solidus) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:8674:3: rule__STMulDivModExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_59);
            	    rule__STMulDivModExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0"
    // InternalGlobalConstantsParser.g:8683:1: rule__STMulDivModExpression__Group_1__0 : rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 ;
    public final void rule__STMulDivModExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8687:1: ( rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 )
            // InternalGlobalConstantsParser.g:8688:2: rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STMulDivModExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:8695:1: rule__STMulDivModExpression__Group_1__0__Impl : ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8699:1: ( ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) )
            // InternalGlobalConstantsParser.g:8700:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            {
            // InternalGlobalConstantsParser.g:8700:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            // InternalGlobalConstantsParser.g:8701:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }
            // InternalGlobalConstantsParser.g:8702:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            // InternalGlobalConstantsParser.g:8702:3: rule__STMulDivModExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1"
    // InternalGlobalConstantsParser.g:8710:1: rule__STMulDivModExpression__Group_1__1 : rule__STMulDivModExpression__Group_1__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8714:1: ( rule__STMulDivModExpression__Group_1__1__Impl )
            // InternalGlobalConstantsParser.g:8715:2: rule__STMulDivModExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:8721:1: rule__STMulDivModExpression__Group_1__1__Impl : ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8725:1: ( ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) )
            // InternalGlobalConstantsParser.g:8726:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:8726:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            // InternalGlobalConstantsParser.g:8727:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalGlobalConstantsParser.g:8728:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            // InternalGlobalConstantsParser.g:8728:3: rule__STMulDivModExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0"
    // InternalGlobalConstantsParser.g:8737:1: rule__STMulDivModExpression__Group_1_0__0 : rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 ;
    public final void rule__STMulDivModExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8741:1: ( rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 )
            // InternalGlobalConstantsParser.g:8742:2: rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_58);
            rule__STMulDivModExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0__Impl"
    // InternalGlobalConstantsParser.g:8749:1: rule__STMulDivModExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STMulDivModExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8753:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:8754:1: ( () )
            {
            // InternalGlobalConstantsParser.g:8754:1: ( () )
            // InternalGlobalConstantsParser.g:8755:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalGlobalConstantsParser.g:8756:2: ()
            // InternalGlobalConstantsParser.g:8756:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1"
    // InternalGlobalConstantsParser.g:8764:1: rule__STMulDivModExpression__Group_1_0__1 : rule__STMulDivModExpression__Group_1_0__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8768:1: ( rule__STMulDivModExpression__Group_1_0__1__Impl )
            // InternalGlobalConstantsParser.g:8769:2: rule__STMulDivModExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1__Impl"
    // InternalGlobalConstantsParser.g:8775:1: rule__STMulDivModExpression__Group_1_0__1__Impl : ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8779:1: ( ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) )
            // InternalGlobalConstantsParser.g:8780:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            {
            // InternalGlobalConstantsParser.g:8780:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            // InternalGlobalConstantsParser.g:8781:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalGlobalConstantsParser.g:8782:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            // InternalGlobalConstantsParser.g:8782:3: rule__STMulDivModExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__0"
    // InternalGlobalConstantsParser.g:8791:1: rule__STPowerExpression__Group__0 : rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 ;
    public final void rule__STPowerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8795:1: ( rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 )
            // InternalGlobalConstantsParser.g:8796:2: rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__STPowerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0"


    // $ANTLR start "rule__STPowerExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:8803:1: rule__STPowerExpression__Group__0__Impl : ( ruleSTUnaryExpression ) ;
    public final void rule__STPowerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8807:1: ( ( ruleSTUnaryExpression ) )
            // InternalGlobalConstantsParser.g:8808:1: ( ruleSTUnaryExpression )
            {
            // InternalGlobalConstantsParser.g:8808:1: ( ruleSTUnaryExpression )
            // InternalGlobalConstantsParser.g:8809:2: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTUnaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTUnaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__1"
    // InternalGlobalConstantsParser.g:8818:1: rule__STPowerExpression__Group__1 : rule__STPowerExpression__Group__1__Impl ;
    public final void rule__STPowerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8822:1: ( rule__STPowerExpression__Group__1__Impl )
            // InternalGlobalConstantsParser.g:8823:2: rule__STPowerExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1"


    // $ANTLR start "rule__STPowerExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:8829:1: rule__STPowerExpression__Group__1__Impl : ( ( rule__STPowerExpression__Group_1__0 )* ) ;
    public final void rule__STPowerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8833:1: ( ( ( rule__STPowerExpression__Group_1__0 )* ) )
            // InternalGlobalConstantsParser.g:8834:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            {
            // InternalGlobalConstantsParser.g:8834:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            // InternalGlobalConstantsParser.g:8835:2: ( rule__STPowerExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }
            // InternalGlobalConstantsParser.g:8836:2: ( rule__STPowerExpression__Group_1__0 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==AsteriskAsterisk) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:8836:3: rule__STPowerExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__STPowerExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__0"
    // InternalGlobalConstantsParser.g:8845:1: rule__STPowerExpression__Group_1__0 : rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 ;
    public final void rule__STPowerExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8849:1: ( rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 )
            // InternalGlobalConstantsParser.g:8850:2: rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STPowerExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0"


    // $ANTLR start "rule__STPowerExpression__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:8857:1: rule__STPowerExpression__Group_1__0__Impl : ( ( rule__STPowerExpression__Group_1_0__0 ) ) ;
    public final void rule__STPowerExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8861:1: ( ( ( rule__STPowerExpression__Group_1_0__0 ) ) )
            // InternalGlobalConstantsParser.g:8862:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            {
            // InternalGlobalConstantsParser.g:8862:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            // InternalGlobalConstantsParser.g:8863:2: ( rule__STPowerExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }
            // InternalGlobalConstantsParser.g:8864:2: ( rule__STPowerExpression__Group_1_0__0 )
            // InternalGlobalConstantsParser.g:8864:3: rule__STPowerExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__1"
    // InternalGlobalConstantsParser.g:8872:1: rule__STPowerExpression__Group_1__1 : rule__STPowerExpression__Group_1__1__Impl ;
    public final void rule__STPowerExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8876:1: ( rule__STPowerExpression__Group_1__1__Impl )
            // InternalGlobalConstantsParser.g:8877:2: rule__STPowerExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1"


    // $ANTLR start "rule__STPowerExpression__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:8883:1: rule__STPowerExpression__Group_1__1__Impl : ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STPowerExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8887:1: ( ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) )
            // InternalGlobalConstantsParser.g:8888:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:8888:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            // InternalGlobalConstantsParser.g:8889:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalGlobalConstantsParser.g:8890:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            // InternalGlobalConstantsParser.g:8890:3: rule__STPowerExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0"
    // InternalGlobalConstantsParser.g:8899:1: rule__STPowerExpression__Group_1_0__0 : rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 ;
    public final void rule__STPowerExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8903:1: ( rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 )
            // InternalGlobalConstantsParser.g:8904:2: rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_60);
            rule__STPowerExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0__Impl"
    // InternalGlobalConstantsParser.g:8911:1: rule__STPowerExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STPowerExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8915:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:8916:1: ( () )
            {
            // InternalGlobalConstantsParser.g:8916:1: ( () )
            // InternalGlobalConstantsParser.g:8917:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalGlobalConstantsParser.g:8918:2: ()
            // InternalGlobalConstantsParser.g:8918:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1"
    // InternalGlobalConstantsParser.g:8926:1: rule__STPowerExpression__Group_1_0__1 : rule__STPowerExpression__Group_1_0__1__Impl ;
    public final void rule__STPowerExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8930:1: ( rule__STPowerExpression__Group_1_0__1__Impl )
            // InternalGlobalConstantsParser.g:8931:2: rule__STPowerExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1__Impl"
    // InternalGlobalConstantsParser.g:8937:1: rule__STPowerExpression__Group_1_0__1__Impl : ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STPowerExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8941:1: ( ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) )
            // InternalGlobalConstantsParser.g:8942:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            {
            // InternalGlobalConstantsParser.g:8942:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            // InternalGlobalConstantsParser.g:8943:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalGlobalConstantsParser.g:8944:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            // InternalGlobalConstantsParser.g:8944:3: rule__STPowerExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__0"
    // InternalGlobalConstantsParser.g:8953:1: rule__STUnaryExpression__Group_1__0 : rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1 ;
    public final void rule__STUnaryExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8957:1: ( rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1 )
            // InternalGlobalConstantsParser.g:8958:2: rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STUnaryExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__0"


    // $ANTLR start "rule__STUnaryExpression__Group_1__0__Impl"
    // InternalGlobalConstantsParser.g:8965:1: rule__STUnaryExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STUnaryExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8969:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:8970:1: ( () )
            {
            // InternalGlobalConstantsParser.g:8970:1: ( () )
            // InternalGlobalConstantsParser.g:8971:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getSTUnaryExpressionAction_1_0()); 
            }
            // InternalGlobalConstantsParser.g:8972:2: ()
            // InternalGlobalConstantsParser.g:8972:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getSTUnaryExpressionAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__1"
    // InternalGlobalConstantsParser.g:8980:1: rule__STUnaryExpression__Group_1__1 : rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2 ;
    public final void rule__STUnaryExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8984:1: ( rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2 )
            // InternalGlobalConstantsParser.g:8985:2: rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2
            {
            pushFollow(FOLLOW_7);
            rule__STUnaryExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__1"


    // $ANTLR start "rule__STUnaryExpression__Group_1__1__Impl"
    // InternalGlobalConstantsParser.g:8992:1: rule__STUnaryExpression__Group_1__1__Impl : ( ( rule__STUnaryExpression__OpAssignment_1_1 ) ) ;
    public final void rule__STUnaryExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:8996:1: ( ( ( rule__STUnaryExpression__OpAssignment_1_1 ) ) )
            // InternalGlobalConstantsParser.g:8997:1: ( ( rule__STUnaryExpression__OpAssignment_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:8997:1: ( ( rule__STUnaryExpression__OpAssignment_1_1 ) )
            // InternalGlobalConstantsParser.g:8998:2: ( rule__STUnaryExpression__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getOpAssignment_1_1()); 
            }
            // InternalGlobalConstantsParser.g:8999:2: ( rule__STUnaryExpression__OpAssignment_1_1 )
            // InternalGlobalConstantsParser.g:8999:3: rule__STUnaryExpression__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__2"
    // InternalGlobalConstantsParser.g:9007:1: rule__STUnaryExpression__Group_1__2 : rule__STUnaryExpression__Group_1__2__Impl ;
    public final void rule__STUnaryExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9011:1: ( rule__STUnaryExpression__Group_1__2__Impl )
            // InternalGlobalConstantsParser.g:9012:2: rule__STUnaryExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__2"


    // $ANTLR start "rule__STUnaryExpression__Group_1__2__Impl"
    // InternalGlobalConstantsParser.g:9018:1: rule__STUnaryExpression__Group_1__2__Impl : ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) ) ;
    public final void rule__STUnaryExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9022:1: ( ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) ) )
            // InternalGlobalConstantsParser.g:9023:1: ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) )
            {
            // InternalGlobalConstantsParser.g:9023:1: ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) )
            // InternalGlobalConstantsParser.g:9024:2: ( rule__STUnaryExpression__ExpressionAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getExpressionAssignment_1_2()); 
            }
            // InternalGlobalConstantsParser.g:9025:2: ( rule__STUnaryExpression__ExpressionAssignment_1_2 )
            // InternalGlobalConstantsParser.g:9025:3: rule__STUnaryExpression__ExpressionAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__ExpressionAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getExpressionAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group__0"
    // InternalGlobalConstantsParser.g:9034:1: rule__STAccessExpression__Group__0 : rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1 ;
    public final void rule__STAccessExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9038:1: ( rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1 )
            // InternalGlobalConstantsParser.g:9039:2: rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__STAccessExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__0"


    // $ANTLR start "rule__STAccessExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:9046:1: rule__STAccessExpression__Group__0__Impl : ( ruleSTPrimaryExpression ) ;
    public final void rule__STAccessExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9050:1: ( ( ruleSTPrimaryExpression ) )
            // InternalGlobalConstantsParser.g:9051:1: ( ruleSTPrimaryExpression )
            {
            // InternalGlobalConstantsParser.g:9051:1: ( ruleSTPrimaryExpression )
            // InternalGlobalConstantsParser.g:9052:2: ruleSTPrimaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTPrimaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTPrimaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group__1"
    // InternalGlobalConstantsParser.g:9061:1: rule__STAccessExpression__Group__1 : rule__STAccessExpression__Group__1__Impl ;
    public final void rule__STAccessExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9065:1: ( rule__STAccessExpression__Group__1__Impl )
            // InternalGlobalConstantsParser.g:9066:2: rule__STAccessExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__1"


    // $ANTLR start "rule__STAccessExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:9072:1: rule__STAccessExpression__Group__1__Impl : ( ( rule__STAccessExpression__Alternatives_1 )* ) ;
    public final void rule__STAccessExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9076:1: ( ( ( rule__STAccessExpression__Alternatives_1 )* ) )
            // InternalGlobalConstantsParser.g:9077:1: ( ( rule__STAccessExpression__Alternatives_1 )* )
            {
            // InternalGlobalConstantsParser.g:9077:1: ( ( rule__STAccessExpression__Alternatives_1 )* )
            // InternalGlobalConstantsParser.g:9078:2: ( rule__STAccessExpression__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getAlternatives_1()); 
            }
            // InternalGlobalConstantsParser.g:9079:2: ( rule__STAccessExpression__Alternatives_1 )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==FullStop||LA81_0==LeftSquareBracket) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:9079:3: rule__STAccessExpression__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_63);
            	    rule__STAccessExpression__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__0"
    // InternalGlobalConstantsParser.g:9088:1: rule__STAccessExpression__Group_1_0__0 : rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1 ;
    public final void rule__STAccessExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9092:1: ( rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1 )
            // InternalGlobalConstantsParser.g:9093:2: rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_64);
            rule__STAccessExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__0__Impl"
    // InternalGlobalConstantsParser.g:9100:1: rule__STAccessExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAccessExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9104:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:9105:1: ( () )
            {
            // InternalGlobalConstantsParser.g:9105:1: ( () )
            // InternalGlobalConstantsParser.g:9106:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTMemberAccessExpressionReceiverAction_1_0_0()); 
            }
            // InternalGlobalConstantsParser.g:9107:2: ()
            // InternalGlobalConstantsParser.g:9107:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTMemberAccessExpressionReceiverAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__1"
    // InternalGlobalConstantsParser.g:9115:1: rule__STAccessExpression__Group_1_0__1 : rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2 ;
    public final void rule__STAccessExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9119:1: ( rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2 )
            // InternalGlobalConstantsParser.g:9120:2: rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2
            {
            pushFollow(FOLLOW_65);
            rule__STAccessExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__1__Impl"
    // InternalGlobalConstantsParser.g:9127:1: rule__STAccessExpression__Group_1_0__1__Impl : ( FullStop ) ;
    public final void rule__STAccessExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9131:1: ( ( FullStop ) )
            // InternalGlobalConstantsParser.g:9132:1: ( FullStop )
            {
            // InternalGlobalConstantsParser.g:9132:1: ( FullStop )
            // InternalGlobalConstantsParser.g:9133:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getFullStopKeyword_1_0_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getFullStopKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__2"
    // InternalGlobalConstantsParser.g:9142:1: rule__STAccessExpression__Group_1_0__2 : rule__STAccessExpression__Group_1_0__2__Impl ;
    public final void rule__STAccessExpression__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9146:1: ( rule__STAccessExpression__Group_1_0__2__Impl )
            // InternalGlobalConstantsParser.g:9147:2: rule__STAccessExpression__Group_1_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__2"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__2__Impl"
    // InternalGlobalConstantsParser.g:9153:1: rule__STAccessExpression__Group_1_0__2__Impl : ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) ) ;
    public final void rule__STAccessExpression__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9157:1: ( ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) ) )
            // InternalGlobalConstantsParser.g:9158:1: ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) )
            {
            // InternalGlobalConstantsParser.g:9158:1: ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) )
            // InternalGlobalConstantsParser.g:9159:2: ( rule__STAccessExpression__MemberAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getMemberAssignment_1_0_2()); 
            }
            // InternalGlobalConstantsParser.g:9160:2: ( rule__STAccessExpression__MemberAssignment_1_0_2 )
            // InternalGlobalConstantsParser.g:9160:3: rule__STAccessExpression__MemberAssignment_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__MemberAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getMemberAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__0"
    // InternalGlobalConstantsParser.g:9169:1: rule__STAccessExpression__Group_1_1__0 : rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1 ;
    public final void rule__STAccessExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9173:1: ( rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1 )
            // InternalGlobalConstantsParser.g:9174:2: rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_62);
            rule__STAccessExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__0__Impl"
    // InternalGlobalConstantsParser.g:9181:1: rule__STAccessExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__STAccessExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9185:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:9186:1: ( () )
            {
            // InternalGlobalConstantsParser.g:9186:1: ( () )
            // InternalGlobalConstantsParser.g:9187:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTArrayAccessExpressionReceiverAction_1_1_0()); 
            }
            // InternalGlobalConstantsParser.g:9188:2: ()
            // InternalGlobalConstantsParser.g:9188:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTArrayAccessExpressionReceiverAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__1"
    // InternalGlobalConstantsParser.g:9196:1: rule__STAccessExpression__Group_1_1__1 : rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2 ;
    public final void rule__STAccessExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9200:1: ( rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2 )
            // InternalGlobalConstantsParser.g:9201:2: rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2
            {
            pushFollow(FOLLOW_7);
            rule__STAccessExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__1__Impl"
    // InternalGlobalConstantsParser.g:9208:1: rule__STAccessExpression__Group_1_1__1__Impl : ( LeftSquareBracket ) ;
    public final void rule__STAccessExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9212:1: ( ( LeftSquareBracket ) )
            // InternalGlobalConstantsParser.g:9213:1: ( LeftSquareBracket )
            {
            // InternalGlobalConstantsParser.g:9213:1: ( LeftSquareBracket )
            // InternalGlobalConstantsParser.g:9214:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__2"
    // InternalGlobalConstantsParser.g:9223:1: rule__STAccessExpression__Group_1_1__2 : rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3 ;
    public final void rule__STAccessExpression__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9227:1: ( rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3 )
            // InternalGlobalConstantsParser.g:9228:2: rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3
            {
            pushFollow(FOLLOW_15);
            rule__STAccessExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__2"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__2__Impl"
    // InternalGlobalConstantsParser.g:9235:1: rule__STAccessExpression__Group_1_1__2__Impl : ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) ) ;
    public final void rule__STAccessExpression__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9239:1: ( ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) ) )
            // InternalGlobalConstantsParser.g:9240:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) )
            {
            // InternalGlobalConstantsParser.g:9240:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) )
            // InternalGlobalConstantsParser.g:9241:2: ( rule__STAccessExpression__IndexAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_2()); 
            }
            // InternalGlobalConstantsParser.g:9242:2: ( rule__STAccessExpression__IndexAssignment_1_1_2 )
            // InternalGlobalConstantsParser.g:9242:3: rule__STAccessExpression__IndexAssignment_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__IndexAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__3"
    // InternalGlobalConstantsParser.g:9250:1: rule__STAccessExpression__Group_1_1__3 : rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4 ;
    public final void rule__STAccessExpression__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9254:1: ( rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4 )
            // InternalGlobalConstantsParser.g:9255:2: rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4
            {
            pushFollow(FOLLOW_15);
            rule__STAccessExpression__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__3"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__3__Impl"
    // InternalGlobalConstantsParser.g:9262:1: rule__STAccessExpression__Group_1_1__3__Impl : ( ( rule__STAccessExpression__Group_1_1_3__0 )* ) ;
    public final void rule__STAccessExpression__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9266:1: ( ( ( rule__STAccessExpression__Group_1_1_3__0 )* ) )
            // InternalGlobalConstantsParser.g:9267:1: ( ( rule__STAccessExpression__Group_1_1_3__0 )* )
            {
            // InternalGlobalConstantsParser.g:9267:1: ( ( rule__STAccessExpression__Group_1_1_3__0 )* )
            // InternalGlobalConstantsParser.g:9268:2: ( rule__STAccessExpression__Group_1_1_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1_3()); 
            }
            // InternalGlobalConstantsParser.g:9269:2: ( rule__STAccessExpression__Group_1_1_3__0 )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==Comma) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:9269:3: rule__STAccessExpression__Group_1_1_3__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__STAccessExpression__Group_1_1_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__3__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__4"
    // InternalGlobalConstantsParser.g:9277:1: rule__STAccessExpression__Group_1_1__4 : rule__STAccessExpression__Group_1_1__4__Impl ;
    public final void rule__STAccessExpression__Group_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9281:1: ( rule__STAccessExpression__Group_1_1__4__Impl )
            // InternalGlobalConstantsParser.g:9282:2: rule__STAccessExpression__Group_1_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__4"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__4__Impl"
    // InternalGlobalConstantsParser.g:9288:1: rule__STAccessExpression__Group_1_1__4__Impl : ( RightSquareBracket ) ;
    public final void rule__STAccessExpression__Group_1_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9292:1: ( ( RightSquareBracket ) )
            // InternalGlobalConstantsParser.g:9293:1: ( RightSquareBracket )
            {
            // InternalGlobalConstantsParser.g:9293:1: ( RightSquareBracket )
            // InternalGlobalConstantsParser.g:9294:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getRightSquareBracketKeyword_1_1_4()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getRightSquareBracketKeyword_1_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__4__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__0"
    // InternalGlobalConstantsParser.g:9304:1: rule__STAccessExpression__Group_1_1_3__0 : rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1 ;
    public final void rule__STAccessExpression__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9308:1: ( rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1 )
            // InternalGlobalConstantsParser.g:9309:2: rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1
            {
            pushFollow(FOLLOW_7);
            rule__STAccessExpression__Group_1_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__0__Impl"
    // InternalGlobalConstantsParser.g:9316:1: rule__STAccessExpression__Group_1_1_3__0__Impl : ( Comma ) ;
    public final void rule__STAccessExpression__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9320:1: ( ( Comma ) )
            // InternalGlobalConstantsParser.g:9321:1: ( Comma )
            {
            // InternalGlobalConstantsParser.g:9321:1: ( Comma )
            // InternalGlobalConstantsParser.g:9322:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getCommaKeyword_1_1_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getCommaKeyword_1_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__1"
    // InternalGlobalConstantsParser.g:9331:1: rule__STAccessExpression__Group_1_1_3__1 : rule__STAccessExpression__Group_1_1_3__1__Impl ;
    public final void rule__STAccessExpression__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9335:1: ( rule__STAccessExpression__Group_1_1_3__1__Impl )
            // InternalGlobalConstantsParser.g:9336:2: rule__STAccessExpression__Group_1_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__1__Impl"
    // InternalGlobalConstantsParser.g:9342:1: rule__STAccessExpression__Group_1_1_3__1__Impl : ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) ) ;
    public final void rule__STAccessExpression__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9346:1: ( ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) ) )
            // InternalGlobalConstantsParser.g:9347:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) )
            {
            // InternalGlobalConstantsParser.g:9347:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) )
            // InternalGlobalConstantsParser.g:9348:2: ( rule__STAccessExpression__IndexAssignment_1_1_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_3_1()); 
            }
            // InternalGlobalConstantsParser.g:9349:2: ( rule__STAccessExpression__IndexAssignment_1_1_3_1 )
            // InternalGlobalConstantsParser.g:9349:3: rule__STAccessExpression__IndexAssignment_1_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__IndexAssignment_1_1_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__0"
    // InternalGlobalConstantsParser.g:9358:1: rule__STPrimaryExpression__Group_0__0 : rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1 ;
    public final void rule__STPrimaryExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9362:1: ( rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1 )
            // InternalGlobalConstantsParser.g:9363:2: rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1
            {
            pushFollow(FOLLOW_7);
            rule__STPrimaryExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__0"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__0__Impl"
    // InternalGlobalConstantsParser.g:9370:1: rule__STPrimaryExpression__Group_0__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STPrimaryExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9374:1: ( ( LeftParenthesis ) )
            // InternalGlobalConstantsParser.g:9375:1: ( LeftParenthesis )
            {
            // InternalGlobalConstantsParser.g:9375:1: ( LeftParenthesis )
            // InternalGlobalConstantsParser.g:9376:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__0__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__1"
    // InternalGlobalConstantsParser.g:9385:1: rule__STPrimaryExpression__Group_0__1 : rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2 ;
    public final void rule__STPrimaryExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9389:1: ( rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2 )
            // InternalGlobalConstantsParser.g:9390:2: rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2
            {
            pushFollow(FOLLOW_66);
            rule__STPrimaryExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__1"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__1__Impl"
    // InternalGlobalConstantsParser.g:9397:1: rule__STPrimaryExpression__Group_0__1__Impl : ( ruleSTExpression ) ;
    public final void rule__STPrimaryExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9401:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:9402:1: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:9402:1: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:9403:2: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__1__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__2"
    // InternalGlobalConstantsParser.g:9412:1: rule__STPrimaryExpression__Group_0__2 : rule__STPrimaryExpression__Group_0__2__Impl ;
    public final void rule__STPrimaryExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9416:1: ( rule__STPrimaryExpression__Group_0__2__Impl )
            // InternalGlobalConstantsParser.g:9417:2: rule__STPrimaryExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__2"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__2__Impl"
    // InternalGlobalConstantsParser.g:9423:1: rule__STPrimaryExpression__Group_0__2__Impl : ( RightParenthesis ) ;
    public final void rule__STPrimaryExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9427:1: ( ( RightParenthesis ) )
            // InternalGlobalConstantsParser.g:9428:1: ( RightParenthesis )
            {
            // InternalGlobalConstantsParser.g:9428:1: ( RightParenthesis )
            // InternalGlobalConstantsParser.g:9429:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__0"
    // InternalGlobalConstantsParser.g:9439:1: rule__STFeatureExpression__Group__0 : rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1 ;
    public final void rule__STFeatureExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9443:1: ( rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1 )
            // InternalGlobalConstantsParser.g:9444:2: rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__STFeatureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__0"


    // $ANTLR start "rule__STFeatureExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:9451:1: rule__STFeatureExpression__Group__0__Impl : ( () ) ;
    public final void rule__STFeatureExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9455:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:9456:1: ( () )
            {
            // InternalGlobalConstantsParser.g:9456:1: ( () )
            // InternalGlobalConstantsParser.g:9457:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getSTFeatureExpressionAction_0()); 
            }
            // InternalGlobalConstantsParser.g:9458:2: ()
            // InternalGlobalConstantsParser.g:9458:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getSTFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__1"
    // InternalGlobalConstantsParser.g:9466:1: rule__STFeatureExpression__Group__1 : rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2 ;
    public final void rule__STFeatureExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9470:1: ( rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2 )
            // InternalGlobalConstantsParser.g:9471:2: rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__STFeatureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__1"


    // $ANTLR start "rule__STFeatureExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:9478:1: rule__STFeatureExpression__Group__1__Impl : ( ( rule__STFeatureExpression__FeatureAssignment_1 ) ) ;
    public final void rule__STFeatureExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9482:1: ( ( ( rule__STFeatureExpression__FeatureAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:9483:1: ( ( rule__STFeatureExpression__FeatureAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:9483:1: ( ( rule__STFeatureExpression__FeatureAssignment_1 ) )
            // InternalGlobalConstantsParser.g:9484:2: ( rule__STFeatureExpression__FeatureAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:9485:2: ( rule__STFeatureExpression__FeatureAssignment_1 )
            // InternalGlobalConstantsParser.g:9485:3: rule__STFeatureExpression__FeatureAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__FeatureAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__2"
    // InternalGlobalConstantsParser.g:9493:1: rule__STFeatureExpression__Group__2 : rule__STFeatureExpression__Group__2__Impl ;
    public final void rule__STFeatureExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9497:1: ( rule__STFeatureExpression__Group__2__Impl )
            // InternalGlobalConstantsParser.g:9498:2: rule__STFeatureExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__2"


    // $ANTLR start "rule__STFeatureExpression__Group__2__Impl"
    // InternalGlobalConstantsParser.g:9504:1: rule__STFeatureExpression__Group__2__Impl : ( ( rule__STFeatureExpression__Group_2__0 )? ) ;
    public final void rule__STFeatureExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9508:1: ( ( ( rule__STFeatureExpression__Group_2__0 )? ) )
            // InternalGlobalConstantsParser.g:9509:1: ( ( rule__STFeatureExpression__Group_2__0 )? )
            {
            // InternalGlobalConstantsParser.g:9509:1: ( ( rule__STFeatureExpression__Group_2__0 )? )
            // InternalGlobalConstantsParser.g:9510:2: ( rule__STFeatureExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2()); 
            }
            // InternalGlobalConstantsParser.g:9511:2: ( rule__STFeatureExpression__Group_2__0 )?
            int alt83=2;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // InternalGlobalConstantsParser.g:9511:3: rule__STFeatureExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFeatureExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__0"
    // InternalGlobalConstantsParser.g:9520:1: rule__STFeatureExpression__Group_2__0 : rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1 ;
    public final void rule__STFeatureExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9524:1: ( rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1 )
            // InternalGlobalConstantsParser.g:9525:2: rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1
            {
            pushFollow(FOLLOW_67);
            rule__STFeatureExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2__0__Impl"
    // InternalGlobalConstantsParser.g:9532:1: rule__STFeatureExpression__Group_2__0__Impl : ( ( rule__STFeatureExpression__CallAssignment_2_0 ) ) ;
    public final void rule__STFeatureExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9536:1: ( ( ( rule__STFeatureExpression__CallAssignment_2_0 ) ) )
            // InternalGlobalConstantsParser.g:9537:1: ( ( rule__STFeatureExpression__CallAssignment_2_0 ) )
            {
            // InternalGlobalConstantsParser.g:9537:1: ( ( rule__STFeatureExpression__CallAssignment_2_0 ) )
            // InternalGlobalConstantsParser.g:9538:2: ( rule__STFeatureExpression__CallAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCallAssignment_2_0()); 
            }
            // InternalGlobalConstantsParser.g:9539:2: ( rule__STFeatureExpression__CallAssignment_2_0 )
            // InternalGlobalConstantsParser.g:9539:3: rule__STFeatureExpression__CallAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__CallAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCallAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__1"
    // InternalGlobalConstantsParser.g:9547:1: rule__STFeatureExpression__Group_2__1 : rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2 ;
    public final void rule__STFeatureExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9551:1: ( rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2 )
            // InternalGlobalConstantsParser.g:9552:2: rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2
            {
            pushFollow(FOLLOW_67);
            rule__STFeatureExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2__1__Impl"
    // InternalGlobalConstantsParser.g:9559:1: rule__STFeatureExpression__Group_2__1__Impl : ( ( rule__STFeatureExpression__Group_2_1__0 )? ) ;
    public final void rule__STFeatureExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9563:1: ( ( ( rule__STFeatureExpression__Group_2_1__0 )? ) )
            // InternalGlobalConstantsParser.g:9564:1: ( ( rule__STFeatureExpression__Group_2_1__0 )? )
            {
            // InternalGlobalConstantsParser.g:9564:1: ( ( rule__STFeatureExpression__Group_2_1__0 )? )
            // InternalGlobalConstantsParser.g:9565:2: ( rule__STFeatureExpression__Group_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1()); 
            }
            // InternalGlobalConstantsParser.g:9566:2: ( rule__STFeatureExpression__Group_2_1__0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==LDATE_AND_TIME||LA84_0==DATE_AND_TIME||LA84_0==LTIME_OF_DAY||LA84_0==TIME_OF_DAY||LA84_0==WSTRING||LA84_0==STRING||LA84_0==DWORD||LA84_0==FALSE||(LA84_0>=LDATE && LA84_0<=LWORD)||(LA84_0>=UDINT && LA84_0<=ULINT)||(LA84_0>=USINT && LA84_0<=WCHAR)||(LA84_0>=BOOL && LA84_0<=BYTE)||(LA84_0>=CHAR && LA84_0<=DINT)||(LA84_0>=LINT && LA84_0<=LTOD)||(LA84_0>=REAL && LA84_0<=SINT)||(LA84_0>=THIS && LA84_0<=TRUE)||LA84_0==UINT||(LA84_0>=WORD && LA84_0<=AND)||(LA84_0>=INT && LA84_0<=NOT)||LA84_0==TOD||LA84_0==XOR||LA84_0==DT||(LA84_0>=LD && LA84_0<=LT)||LA84_0==OR||LA84_0==LeftParenthesis||LA84_0==PlusSign||LA84_0==HyphenMinus||(LA84_0>=D && LA84_0<=T)||(LA84_0>=RULE_NON_DECIMAL && LA84_0<=RULE_DECIMAL)||(LA84_0>=RULE_ID && LA84_0<=RULE_STRING)) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalGlobalConstantsParser.g:9566:3: rule__STFeatureExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFeatureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__2"
    // InternalGlobalConstantsParser.g:9574:1: rule__STFeatureExpression__Group_2__2 : rule__STFeatureExpression__Group_2__2__Impl ;
    public final void rule__STFeatureExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9578:1: ( rule__STFeatureExpression__Group_2__2__Impl )
            // InternalGlobalConstantsParser.g:9579:2: rule__STFeatureExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__2"


    // $ANTLR start "rule__STFeatureExpression__Group_2__2__Impl"
    // InternalGlobalConstantsParser.g:9585:1: rule__STFeatureExpression__Group_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STFeatureExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9589:1: ( ( RightParenthesis ) )
            // InternalGlobalConstantsParser.g:9590:1: ( RightParenthesis )
            {
            // InternalGlobalConstantsParser.g:9590:1: ( RightParenthesis )
            // InternalGlobalConstantsParser.g:9591:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__0"
    // InternalGlobalConstantsParser.g:9601:1: rule__STFeatureExpression__Group_2_1__0 : rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1 ;
    public final void rule__STFeatureExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9605:1: ( rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1 )
            // InternalGlobalConstantsParser.g:9606:2: rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_68);
            rule__STFeatureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__0__Impl"
    // InternalGlobalConstantsParser.g:9613:1: rule__STFeatureExpression__Group_2_1__0__Impl : ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) ) ;
    public final void rule__STFeatureExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9617:1: ( ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) ) )
            // InternalGlobalConstantsParser.g:9618:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) )
            {
            // InternalGlobalConstantsParser.g:9618:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) )
            // InternalGlobalConstantsParser.g:9619:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }
            // InternalGlobalConstantsParser.g:9620:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_0 )
            // InternalGlobalConstantsParser.g:9620:3: rule__STFeatureExpression__ParametersAssignment_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__ParametersAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__1"
    // InternalGlobalConstantsParser.g:9628:1: rule__STFeatureExpression__Group_2_1__1 : rule__STFeatureExpression__Group_2_1__1__Impl ;
    public final void rule__STFeatureExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9632:1: ( rule__STFeatureExpression__Group_2_1__1__Impl )
            // InternalGlobalConstantsParser.g:9633:2: rule__STFeatureExpression__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__1__Impl"
    // InternalGlobalConstantsParser.g:9639:1: rule__STFeatureExpression__Group_2_1__1__Impl : ( ( rule__STFeatureExpression__Group_2_1_1__0 )* ) ;
    public final void rule__STFeatureExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9643:1: ( ( ( rule__STFeatureExpression__Group_2_1_1__0 )* ) )
            // InternalGlobalConstantsParser.g:9644:1: ( ( rule__STFeatureExpression__Group_2_1_1__0 )* )
            {
            // InternalGlobalConstantsParser.g:9644:1: ( ( rule__STFeatureExpression__Group_2_1_1__0 )* )
            // InternalGlobalConstantsParser.g:9645:2: ( rule__STFeatureExpression__Group_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1_1()); 
            }
            // InternalGlobalConstantsParser.g:9646:2: ( rule__STFeatureExpression__Group_2_1_1__0 )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==Comma) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:9646:3: rule__STFeatureExpression__Group_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__STFeatureExpression__Group_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__0"
    // InternalGlobalConstantsParser.g:9655:1: rule__STFeatureExpression__Group_2_1_1__0 : rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1 ;
    public final void rule__STFeatureExpression__Group_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9659:1: ( rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1 )
            // InternalGlobalConstantsParser.g:9660:2: rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STFeatureExpression__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__0__Impl"
    // InternalGlobalConstantsParser.g:9667:1: rule__STFeatureExpression__Group_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STFeatureExpression__Group_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9671:1: ( ( Comma ) )
            // InternalGlobalConstantsParser.g:9672:1: ( Comma )
            {
            // InternalGlobalConstantsParser.g:9672:1: ( Comma )
            // InternalGlobalConstantsParser.g:9673:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__1"
    // InternalGlobalConstantsParser.g:9682:1: rule__STFeatureExpression__Group_2_1_1__1 : rule__STFeatureExpression__Group_2_1_1__1__Impl ;
    public final void rule__STFeatureExpression__Group_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9686:1: ( rule__STFeatureExpression__Group_2_1_1__1__Impl )
            // InternalGlobalConstantsParser.g:9687:2: rule__STFeatureExpression__Group_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__1__Impl"
    // InternalGlobalConstantsParser.g:9693:1: rule__STFeatureExpression__Group_2_1_1__1__Impl : ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) ) ;
    public final void rule__STFeatureExpression__Group_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9697:1: ( ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) ) )
            // InternalGlobalConstantsParser.g:9698:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:9698:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            // InternalGlobalConstantsParser.g:9699:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }
            // InternalGlobalConstantsParser.g:9700:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 )
            // InternalGlobalConstantsParser.g:9700:3: rule__STFeatureExpression__ParametersAssignment_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__ParametersAssignment_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__0"
    // InternalGlobalConstantsParser.g:9709:1: rule__STBuiltinFeatureExpression__Group__0 : rule__STBuiltinFeatureExpression__Group__0__Impl rule__STBuiltinFeatureExpression__Group__1 ;
    public final void rule__STBuiltinFeatureExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9713:1: ( rule__STBuiltinFeatureExpression__Group__0__Impl rule__STBuiltinFeatureExpression__Group__1 )
            // InternalGlobalConstantsParser.g:9714:2: rule__STBuiltinFeatureExpression__Group__0__Impl rule__STBuiltinFeatureExpression__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__STBuiltinFeatureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:9721:1: rule__STBuiltinFeatureExpression__Group__0__Impl : ( () ) ;
    public final void rule__STBuiltinFeatureExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9725:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:9726:1: ( () )
            {
            // InternalGlobalConstantsParser.g:9726:1: ( () )
            // InternalGlobalConstantsParser.g:9727:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getSTBuiltinFeatureExpressionAction_0()); 
            }
            // InternalGlobalConstantsParser.g:9728:2: ()
            // InternalGlobalConstantsParser.g:9728:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getSTBuiltinFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__0__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__1"
    // InternalGlobalConstantsParser.g:9736:1: rule__STBuiltinFeatureExpression__Group__1 : rule__STBuiltinFeatureExpression__Group__1__Impl rule__STBuiltinFeatureExpression__Group__2 ;
    public final void rule__STBuiltinFeatureExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9740:1: ( rule__STBuiltinFeatureExpression__Group__1__Impl rule__STBuiltinFeatureExpression__Group__2 )
            // InternalGlobalConstantsParser.g:9741:2: rule__STBuiltinFeatureExpression__Group__1__Impl rule__STBuiltinFeatureExpression__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__STBuiltinFeatureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:9748:1: rule__STBuiltinFeatureExpression__Group__1__Impl : ( ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 ) ) ;
    public final void rule__STBuiltinFeatureExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9752:1: ( ( ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:9753:1: ( ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:9753:1: ( ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 ) )
            // InternalGlobalConstantsParser.g:9754:2: ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getFeatureAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:9755:2: ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 )
            // InternalGlobalConstantsParser.g:9755:3: rule__STBuiltinFeatureExpression__FeatureAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__FeatureAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getFeatureAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__1__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__2"
    // InternalGlobalConstantsParser.g:9763:1: rule__STBuiltinFeatureExpression__Group__2 : rule__STBuiltinFeatureExpression__Group__2__Impl ;
    public final void rule__STBuiltinFeatureExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9767:1: ( rule__STBuiltinFeatureExpression__Group__2__Impl )
            // InternalGlobalConstantsParser.g:9768:2: rule__STBuiltinFeatureExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__2"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__2__Impl"
    // InternalGlobalConstantsParser.g:9774:1: rule__STBuiltinFeatureExpression__Group__2__Impl : ( ( rule__STBuiltinFeatureExpression__Group_2__0 )? ) ;
    public final void rule__STBuiltinFeatureExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9778:1: ( ( ( rule__STBuiltinFeatureExpression__Group_2__0 )? ) )
            // InternalGlobalConstantsParser.g:9779:1: ( ( rule__STBuiltinFeatureExpression__Group_2__0 )? )
            {
            // InternalGlobalConstantsParser.g:9779:1: ( ( rule__STBuiltinFeatureExpression__Group_2__0 )? )
            // InternalGlobalConstantsParser.g:9780:2: ( rule__STBuiltinFeatureExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2()); 
            }
            // InternalGlobalConstantsParser.g:9781:2: ( rule__STBuiltinFeatureExpression__Group_2__0 )?
            int alt86=2;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalGlobalConstantsParser.g:9781:3: rule__STBuiltinFeatureExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STBuiltinFeatureExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__2__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__0"
    // InternalGlobalConstantsParser.g:9790:1: rule__STBuiltinFeatureExpression__Group_2__0 : rule__STBuiltinFeatureExpression__Group_2__0__Impl rule__STBuiltinFeatureExpression__Group_2__1 ;
    public final void rule__STBuiltinFeatureExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9794:1: ( rule__STBuiltinFeatureExpression__Group_2__0__Impl rule__STBuiltinFeatureExpression__Group_2__1 )
            // InternalGlobalConstantsParser.g:9795:2: rule__STBuiltinFeatureExpression__Group_2__0__Impl rule__STBuiltinFeatureExpression__Group_2__1
            {
            pushFollow(FOLLOW_67);
            rule__STBuiltinFeatureExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__0__Impl"
    // InternalGlobalConstantsParser.g:9802:1: rule__STBuiltinFeatureExpression__Group_2__0__Impl : ( ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 ) ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9806:1: ( ( ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 ) ) )
            // InternalGlobalConstantsParser.g:9807:1: ( ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 ) )
            {
            // InternalGlobalConstantsParser.g:9807:1: ( ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 ) )
            // InternalGlobalConstantsParser.g:9808:2: ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallAssignment_2_0()); 
            }
            // InternalGlobalConstantsParser.g:9809:2: ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 )
            // InternalGlobalConstantsParser.g:9809:3: rule__STBuiltinFeatureExpression__CallAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__CallAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__1"
    // InternalGlobalConstantsParser.g:9817:1: rule__STBuiltinFeatureExpression__Group_2__1 : rule__STBuiltinFeatureExpression__Group_2__1__Impl rule__STBuiltinFeatureExpression__Group_2__2 ;
    public final void rule__STBuiltinFeatureExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9821:1: ( rule__STBuiltinFeatureExpression__Group_2__1__Impl rule__STBuiltinFeatureExpression__Group_2__2 )
            // InternalGlobalConstantsParser.g:9822:2: rule__STBuiltinFeatureExpression__Group_2__1__Impl rule__STBuiltinFeatureExpression__Group_2__2
            {
            pushFollow(FOLLOW_67);
            rule__STBuiltinFeatureExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__1__Impl"
    // InternalGlobalConstantsParser.g:9829:1: rule__STBuiltinFeatureExpression__Group_2__1__Impl : ( ( rule__STBuiltinFeatureExpression__Group_2_1__0 )? ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9833:1: ( ( ( rule__STBuiltinFeatureExpression__Group_2_1__0 )? ) )
            // InternalGlobalConstantsParser.g:9834:1: ( ( rule__STBuiltinFeatureExpression__Group_2_1__0 )? )
            {
            // InternalGlobalConstantsParser.g:9834:1: ( ( rule__STBuiltinFeatureExpression__Group_2_1__0 )? )
            // InternalGlobalConstantsParser.g:9835:2: ( rule__STBuiltinFeatureExpression__Group_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2_1()); 
            }
            // InternalGlobalConstantsParser.g:9836:2: ( rule__STBuiltinFeatureExpression__Group_2_1__0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==LDATE_AND_TIME||LA87_0==DATE_AND_TIME||LA87_0==LTIME_OF_DAY||LA87_0==TIME_OF_DAY||LA87_0==WSTRING||LA87_0==STRING||LA87_0==DWORD||LA87_0==FALSE||(LA87_0>=LDATE && LA87_0<=LWORD)||(LA87_0>=UDINT && LA87_0<=ULINT)||(LA87_0>=USINT && LA87_0<=WCHAR)||(LA87_0>=BOOL && LA87_0<=BYTE)||(LA87_0>=CHAR && LA87_0<=DINT)||(LA87_0>=LINT && LA87_0<=LTOD)||(LA87_0>=REAL && LA87_0<=SINT)||(LA87_0>=THIS && LA87_0<=TRUE)||LA87_0==UINT||(LA87_0>=WORD && LA87_0<=AND)||(LA87_0>=INT && LA87_0<=NOT)||LA87_0==TOD||LA87_0==XOR||LA87_0==DT||(LA87_0>=LD && LA87_0<=LT)||LA87_0==OR||LA87_0==LeftParenthesis||LA87_0==PlusSign||LA87_0==HyphenMinus||(LA87_0>=D && LA87_0<=T)||(LA87_0>=RULE_NON_DECIMAL && LA87_0<=RULE_DECIMAL)||(LA87_0>=RULE_ID && LA87_0<=RULE_STRING)) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalGlobalConstantsParser.g:9836:3: rule__STBuiltinFeatureExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STBuiltinFeatureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__2"
    // InternalGlobalConstantsParser.g:9844:1: rule__STBuiltinFeatureExpression__Group_2__2 : rule__STBuiltinFeatureExpression__Group_2__2__Impl ;
    public final void rule__STBuiltinFeatureExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9848:1: ( rule__STBuiltinFeatureExpression__Group_2__2__Impl )
            // InternalGlobalConstantsParser.g:9849:2: rule__STBuiltinFeatureExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__2"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__2__Impl"
    // InternalGlobalConstantsParser.g:9855:1: rule__STBuiltinFeatureExpression__Group_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9859:1: ( ( RightParenthesis ) )
            // InternalGlobalConstantsParser.g:9860:1: ( RightParenthesis )
            {
            // InternalGlobalConstantsParser.g:9860:1: ( RightParenthesis )
            // InternalGlobalConstantsParser.g:9861:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1__0"
    // InternalGlobalConstantsParser.g:9871:1: rule__STBuiltinFeatureExpression__Group_2_1__0 : rule__STBuiltinFeatureExpression__Group_2_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1__1 ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9875:1: ( rule__STBuiltinFeatureExpression__Group_2_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1__1 )
            // InternalGlobalConstantsParser.g:9876:2: rule__STBuiltinFeatureExpression__Group_2_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_68);
            rule__STBuiltinFeatureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1__0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1__0__Impl"
    // InternalGlobalConstantsParser.g:9883:1: rule__STBuiltinFeatureExpression__Group_2_1__0__Impl : ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 ) ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9887:1: ( ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 ) ) )
            // InternalGlobalConstantsParser.g:9888:1: ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 ) )
            {
            // InternalGlobalConstantsParser.g:9888:1: ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 ) )
            // InternalGlobalConstantsParser.g:9889:2: ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }
            // InternalGlobalConstantsParser.g:9890:2: ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 )
            // InternalGlobalConstantsParser.g:9890:3: rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1__1"
    // InternalGlobalConstantsParser.g:9898:1: rule__STBuiltinFeatureExpression__Group_2_1__1 : rule__STBuiltinFeatureExpression__Group_2_1__1__Impl ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9902:1: ( rule__STBuiltinFeatureExpression__Group_2_1__1__Impl )
            // InternalGlobalConstantsParser.g:9903:2: rule__STBuiltinFeatureExpression__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1__1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1__1__Impl"
    // InternalGlobalConstantsParser.g:9909:1: rule__STBuiltinFeatureExpression__Group_2_1__1__Impl : ( ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )* ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9913:1: ( ( ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )* ) )
            // InternalGlobalConstantsParser.g:9914:1: ( ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )* )
            {
            // InternalGlobalConstantsParser.g:9914:1: ( ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )* )
            // InternalGlobalConstantsParser.g:9915:2: ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2_1_1()); 
            }
            // InternalGlobalConstantsParser.g:9916:2: ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==Comma) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalGlobalConstantsParser.g:9916:3: rule__STBuiltinFeatureExpression__Group_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__STBuiltinFeatureExpression__Group_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1_1__0"
    // InternalGlobalConstantsParser.g:9925:1: rule__STBuiltinFeatureExpression__Group_2_1_1__0 : rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1_1__1 ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9929:1: ( rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1_1__1 )
            // InternalGlobalConstantsParser.g:9930:2: rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1_1__0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl"
    // InternalGlobalConstantsParser.g:9937:1: rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9941:1: ( ( Comma ) )
            // InternalGlobalConstantsParser.g:9942:1: ( Comma )
            {
            // InternalGlobalConstantsParser.g:9942:1: ( Comma )
            // InternalGlobalConstantsParser.g:9943:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1_1__1"
    // InternalGlobalConstantsParser.g:9952:1: rule__STBuiltinFeatureExpression__Group_2_1_1__1 : rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9956:1: ( rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl )
            // InternalGlobalConstantsParser.g:9957:2: rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1_1__1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl"
    // InternalGlobalConstantsParser.g:9963:1: rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl : ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 ) ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9967:1: ( ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 ) ) )
            // InternalGlobalConstantsParser.g:9968:1: ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:9968:1: ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            // InternalGlobalConstantsParser.g:9969:2: ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }
            // InternalGlobalConstantsParser.g:9970:2: ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 )
            // InternalGlobalConstantsParser.g:9970:3: rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__0"
    // InternalGlobalConstantsParser.g:9979:1: rule__STMultibitPartialExpression__Group__0 : rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1 ;
    public final void rule__STMultibitPartialExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9983:1: ( rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1 )
            // InternalGlobalConstantsParser.g:9984:2: rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__STMultibitPartialExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__0"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__0__Impl"
    // InternalGlobalConstantsParser.g:9991:1: rule__STMultibitPartialExpression__Group__0__Impl : ( () ) ;
    public final void rule__STMultibitPartialExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:9995:1: ( ( () ) )
            // InternalGlobalConstantsParser.g:9996:1: ( () )
            {
            // InternalGlobalConstantsParser.g:9996:1: ( () )
            // InternalGlobalConstantsParser.g:9997:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSTMultibitPartialExpressionAction_0()); 
            }
            // InternalGlobalConstantsParser.g:9998:2: ()
            // InternalGlobalConstantsParser.g:9998:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSTMultibitPartialExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__0__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__1"
    // InternalGlobalConstantsParser.g:10006:1: rule__STMultibitPartialExpression__Group__1 : rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2 ;
    public final void rule__STMultibitPartialExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10010:1: ( rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2 )
            // InternalGlobalConstantsParser.g:10011:2: rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2
            {
            pushFollow(FOLLOW_65);
            rule__STMultibitPartialExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__1"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__1__Impl"
    // InternalGlobalConstantsParser.g:10018:1: rule__STMultibitPartialExpression__Group__1__Impl : ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? ) ;
    public final void rule__STMultibitPartialExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10022:1: ( ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? ) )
            // InternalGlobalConstantsParser.g:10023:1: ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? )
            {
            // InternalGlobalConstantsParser.g:10023:1: ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? )
            // InternalGlobalConstantsParser.g:10024:2: ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:10025:2: ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( ((LA89_0>=B && LA89_0<=X)) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalGlobalConstantsParser.g:10025:3: rule__STMultibitPartialExpression__SpecifierAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__SpecifierAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__2"
    // InternalGlobalConstantsParser.g:10033:1: rule__STMultibitPartialExpression__Group__2 : rule__STMultibitPartialExpression__Group__2__Impl ;
    public final void rule__STMultibitPartialExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10037:1: ( rule__STMultibitPartialExpression__Group__2__Impl )
            // InternalGlobalConstantsParser.g:10038:2: rule__STMultibitPartialExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__2"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__2__Impl"
    // InternalGlobalConstantsParser.g:10044:1: rule__STMultibitPartialExpression__Group__2__Impl : ( ( rule__STMultibitPartialExpression__Alternatives_2 ) ) ;
    public final void rule__STMultibitPartialExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10048:1: ( ( ( rule__STMultibitPartialExpression__Alternatives_2 ) ) )
            // InternalGlobalConstantsParser.g:10049:1: ( ( rule__STMultibitPartialExpression__Alternatives_2 ) )
            {
            // InternalGlobalConstantsParser.g:10049:1: ( ( rule__STMultibitPartialExpression__Alternatives_2 ) )
            // InternalGlobalConstantsParser.g:10050:2: ( rule__STMultibitPartialExpression__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getAlternatives_2()); 
            }
            // InternalGlobalConstantsParser.g:10051:2: ( rule__STMultibitPartialExpression__Alternatives_2 )
            // InternalGlobalConstantsParser.g:10051:3: rule__STMultibitPartialExpression__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__2__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__0"
    // InternalGlobalConstantsParser.g:10060:1: rule__STMultibitPartialExpression__Group_2_1__0 : rule__STMultibitPartialExpression__Group_2_1__0__Impl rule__STMultibitPartialExpression__Group_2_1__1 ;
    public final void rule__STMultibitPartialExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10064:1: ( rule__STMultibitPartialExpression__Group_2_1__0__Impl rule__STMultibitPartialExpression__Group_2_1__1 )
            // InternalGlobalConstantsParser.g:10065:2: rule__STMultibitPartialExpression__Group_2_1__0__Impl rule__STMultibitPartialExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STMultibitPartialExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__0"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__0__Impl"
    // InternalGlobalConstantsParser.g:10072:1: rule__STMultibitPartialExpression__Group_2_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STMultibitPartialExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10076:1: ( ( LeftParenthesis ) )
            // InternalGlobalConstantsParser.g:10077:1: ( LeftParenthesis )
            {
            // InternalGlobalConstantsParser.g:10077:1: ( LeftParenthesis )
            // InternalGlobalConstantsParser.g:10078:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getLeftParenthesisKeyword_2_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getLeftParenthesisKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__1"
    // InternalGlobalConstantsParser.g:10087:1: rule__STMultibitPartialExpression__Group_2_1__1 : rule__STMultibitPartialExpression__Group_2_1__1__Impl rule__STMultibitPartialExpression__Group_2_1__2 ;
    public final void rule__STMultibitPartialExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10091:1: ( rule__STMultibitPartialExpression__Group_2_1__1__Impl rule__STMultibitPartialExpression__Group_2_1__2 )
            // InternalGlobalConstantsParser.g:10092:2: rule__STMultibitPartialExpression__Group_2_1__1__Impl rule__STMultibitPartialExpression__Group_2_1__2
            {
            pushFollow(FOLLOW_66);
            rule__STMultibitPartialExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__1"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__1__Impl"
    // InternalGlobalConstantsParser.g:10099:1: rule__STMultibitPartialExpression__Group_2_1__1__Impl : ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) ) ;
    public final void rule__STMultibitPartialExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10103:1: ( ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) ) )
            // InternalGlobalConstantsParser.g:10104:1: ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) )
            {
            // InternalGlobalConstantsParser.g:10104:1: ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) )
            // InternalGlobalConstantsParser.g:10105:2: ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionAssignment_2_1_1()); 
            }
            // InternalGlobalConstantsParser.g:10106:2: ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 )
            // InternalGlobalConstantsParser.g:10106:3: rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__2"
    // InternalGlobalConstantsParser.g:10114:1: rule__STMultibitPartialExpression__Group_2_1__2 : rule__STMultibitPartialExpression__Group_2_1__2__Impl ;
    public final void rule__STMultibitPartialExpression__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10118:1: ( rule__STMultibitPartialExpression__Group_2_1__2__Impl )
            // InternalGlobalConstantsParser.g:10119:2: rule__STMultibitPartialExpression__Group_2_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__2"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__2__Impl"
    // InternalGlobalConstantsParser.g:10125:1: rule__STMultibitPartialExpression__Group_2_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__STMultibitPartialExpression__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10129:1: ( ( RightParenthesis ) )
            // InternalGlobalConstantsParser.g:10130:1: ( RightParenthesis )
            {
            // InternalGlobalConstantsParser.g:10130:1: ( RightParenthesis )
            // InternalGlobalConstantsParser.g:10131:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getRightParenthesisKeyword_2_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getRightParenthesisKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__2__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group__0"
    // InternalGlobalConstantsParser.g:10141:1: rule__STNumericLiteral__Group__0 : rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1 ;
    public final void rule__STNumericLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10145:1: ( rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1 )
            // InternalGlobalConstantsParser.g:10146:2: rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__STNumericLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__0"


    // $ANTLR start "rule__STNumericLiteral__Group__0__Impl"
    // InternalGlobalConstantsParser.g:10153:1: rule__STNumericLiteral__Group__0__Impl : ( ( rule__STNumericLiteral__Group_0__0 )? ) ;
    public final void rule__STNumericLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10157:1: ( ( ( rule__STNumericLiteral__Group_0__0 )? ) )
            // InternalGlobalConstantsParser.g:10158:1: ( ( rule__STNumericLiteral__Group_0__0 )? )
            {
            // InternalGlobalConstantsParser.g:10158:1: ( ( rule__STNumericLiteral__Group_0__0 )? )
            // InternalGlobalConstantsParser.g:10159:2: ( rule__STNumericLiteral__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getGroup_0()); 
            }
            // InternalGlobalConstantsParser.g:10160:2: ( rule__STNumericLiteral__Group_0__0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==DWORD||LA90_0==LREAL||LA90_0==LWORD||(LA90_0>=UDINT && LA90_0<=ULINT)||LA90_0==USINT||(LA90_0>=BOOL && LA90_0<=BYTE)||LA90_0==DINT||LA90_0==LINT||(LA90_0>=REAL && LA90_0<=SINT)||LA90_0==UINT||LA90_0==WORD||LA90_0==INT) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalGlobalConstantsParser.g:10160:3: rule__STNumericLiteral__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STNumericLiteral__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__0__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group__1"
    // InternalGlobalConstantsParser.g:10168:1: rule__STNumericLiteral__Group__1 : rule__STNumericLiteral__Group__1__Impl ;
    public final void rule__STNumericLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10172:1: ( rule__STNumericLiteral__Group__1__Impl )
            // InternalGlobalConstantsParser.g:10173:2: rule__STNumericLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__1"


    // $ANTLR start "rule__STNumericLiteral__Group__1__Impl"
    // InternalGlobalConstantsParser.g:10179:1: rule__STNumericLiteral__Group__1__Impl : ( ( rule__STNumericLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STNumericLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10183:1: ( ( ( rule__STNumericLiteral__ValueAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:10184:1: ( ( rule__STNumericLiteral__ValueAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:10184:1: ( ( rule__STNumericLiteral__ValueAssignment_1 ) )
            // InternalGlobalConstantsParser.g:10185:2: ( rule__STNumericLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:10186:2: ( rule__STNumericLiteral__ValueAssignment_1 )
            // InternalGlobalConstantsParser.g:10186:3: rule__STNumericLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__1__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_0__0"
    // InternalGlobalConstantsParser.g:10195:1: rule__STNumericLiteral__Group_0__0 : rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1 ;
    public final void rule__STNumericLiteral__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10199:1: ( rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1 )
            // InternalGlobalConstantsParser.g:10200:2: rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1
            {
            pushFollow(FOLLOW_71);
            rule__STNumericLiteral__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__0"


    // $ANTLR start "rule__STNumericLiteral__Group_0__0__Impl"
    // InternalGlobalConstantsParser.g:10207:1: rule__STNumericLiteral__Group_0__0__Impl : ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) ) ;
    public final void rule__STNumericLiteral__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10211:1: ( ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) ) )
            // InternalGlobalConstantsParser.g:10212:1: ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) )
            {
            // InternalGlobalConstantsParser.g:10212:1: ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) )
            // InternalGlobalConstantsParser.g:10213:2: ( rule__STNumericLiteral__TypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_0_0()); 
            }
            // InternalGlobalConstantsParser.g:10214:2: ( rule__STNumericLiteral__TypeAssignment_0_0 )
            // InternalGlobalConstantsParser.g:10214:3: rule__STNumericLiteral__TypeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__TypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__0__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_0__1"
    // InternalGlobalConstantsParser.g:10222:1: rule__STNumericLiteral__Group_0__1 : rule__STNumericLiteral__Group_0__1__Impl ;
    public final void rule__STNumericLiteral__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10226:1: ( rule__STNumericLiteral__Group_0__1__Impl )
            // InternalGlobalConstantsParser.g:10227:2: rule__STNumericLiteral__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__1"


    // $ANTLR start "rule__STNumericLiteral__Group_0__1__Impl"
    // InternalGlobalConstantsParser.g:10233:1: rule__STNumericLiteral__Group_0__1__Impl : ( NumberSign ) ;
    public final void rule__STNumericLiteral__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10237:1: ( ( NumberSign ) )
            // InternalGlobalConstantsParser.g:10238:1: ( NumberSign )
            {
            // InternalGlobalConstantsParser.g:10238:1: ( NumberSign )
            // InternalGlobalConstantsParser.g:10239:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getNumberSignKeyword_0_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getNumberSignKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__1__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__0"
    // InternalGlobalConstantsParser.g:10249:1: rule__STDateLiteral__Group__0 : rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1 ;
    public final void rule__STDateLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10253:1: ( rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1 )
            // InternalGlobalConstantsParser.g:10254:2: rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__STDateLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__0"


    // $ANTLR start "rule__STDateLiteral__Group__0__Impl"
    // InternalGlobalConstantsParser.g:10261:1: rule__STDateLiteral__Group__0__Impl : ( ( rule__STDateLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STDateLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10265:1: ( ( ( rule__STDateLiteral__TypeAssignment_0 ) ) )
            // InternalGlobalConstantsParser.g:10266:1: ( ( rule__STDateLiteral__TypeAssignment_0 ) )
            {
            // InternalGlobalConstantsParser.g:10266:1: ( ( rule__STDateLiteral__TypeAssignment_0 ) )
            // InternalGlobalConstantsParser.g:10267:2: ( rule__STDateLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalGlobalConstantsParser.g:10268:2: ( rule__STDateLiteral__TypeAssignment_0 )
            // InternalGlobalConstantsParser.g:10268:3: rule__STDateLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__0__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__1"
    // InternalGlobalConstantsParser.g:10276:1: rule__STDateLiteral__Group__1 : rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2 ;
    public final void rule__STDateLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10280:1: ( rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2 )
            // InternalGlobalConstantsParser.g:10281:2: rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2
            {
            pushFollow(FOLLOW_72);
            rule__STDateLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__1"


    // $ANTLR start "rule__STDateLiteral__Group__1__Impl"
    // InternalGlobalConstantsParser.g:10288:1: rule__STDateLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STDateLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10292:1: ( ( NumberSign ) )
            // InternalGlobalConstantsParser.g:10293:1: ( NumberSign )
            {
            // InternalGlobalConstantsParser.g:10293:1: ( NumberSign )
            // InternalGlobalConstantsParser.g:10294:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__2"
    // InternalGlobalConstantsParser.g:10303:1: rule__STDateLiteral__Group__2 : rule__STDateLiteral__Group__2__Impl ;
    public final void rule__STDateLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10307:1: ( rule__STDateLiteral__Group__2__Impl )
            // InternalGlobalConstantsParser.g:10308:2: rule__STDateLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__2"


    // $ANTLR start "rule__STDateLiteral__Group__2__Impl"
    // InternalGlobalConstantsParser.g:10314:1: rule__STDateLiteral__Group__2__Impl : ( ( rule__STDateLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STDateLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10318:1: ( ( ( rule__STDateLiteral__ValueAssignment_2 ) ) )
            // InternalGlobalConstantsParser.g:10319:1: ( ( rule__STDateLiteral__ValueAssignment_2 ) )
            {
            // InternalGlobalConstantsParser.g:10319:1: ( ( rule__STDateLiteral__ValueAssignment_2 ) )
            // InternalGlobalConstantsParser.g:10320:2: ( rule__STDateLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getValueAssignment_2()); 
            }
            // InternalGlobalConstantsParser.g:10321:2: ( rule__STDateLiteral__ValueAssignment_2 )
            // InternalGlobalConstantsParser.g:10321:3: rule__STDateLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__2__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__0"
    // InternalGlobalConstantsParser.g:10330:1: rule__STTimeLiteral__Group__0 : rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1 ;
    public final void rule__STTimeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10334:1: ( rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1 )
            // InternalGlobalConstantsParser.g:10335:2: rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__STTimeLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__0"


    // $ANTLR start "rule__STTimeLiteral__Group__0__Impl"
    // InternalGlobalConstantsParser.g:10342:1: rule__STTimeLiteral__Group__0__Impl : ( ( rule__STTimeLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STTimeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10346:1: ( ( ( rule__STTimeLiteral__TypeAssignment_0 ) ) )
            // InternalGlobalConstantsParser.g:10347:1: ( ( rule__STTimeLiteral__TypeAssignment_0 ) )
            {
            // InternalGlobalConstantsParser.g:10347:1: ( ( rule__STTimeLiteral__TypeAssignment_0 ) )
            // InternalGlobalConstantsParser.g:10348:2: ( rule__STTimeLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalGlobalConstantsParser.g:10349:2: ( rule__STTimeLiteral__TypeAssignment_0 )
            // InternalGlobalConstantsParser.g:10349:3: rule__STTimeLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__0__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__1"
    // InternalGlobalConstantsParser.g:10357:1: rule__STTimeLiteral__Group__1 : rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2 ;
    public final void rule__STTimeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10361:1: ( rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2 )
            // InternalGlobalConstantsParser.g:10362:2: rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2
            {
            pushFollow(FOLLOW_73);
            rule__STTimeLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__1"


    // $ANTLR start "rule__STTimeLiteral__Group__1__Impl"
    // InternalGlobalConstantsParser.g:10369:1: rule__STTimeLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STTimeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10373:1: ( ( NumberSign ) )
            // InternalGlobalConstantsParser.g:10374:1: ( NumberSign )
            {
            // InternalGlobalConstantsParser.g:10374:1: ( NumberSign )
            // InternalGlobalConstantsParser.g:10375:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__1__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__2"
    // InternalGlobalConstantsParser.g:10384:1: rule__STTimeLiteral__Group__2 : rule__STTimeLiteral__Group__2__Impl ;
    public final void rule__STTimeLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10388:1: ( rule__STTimeLiteral__Group__2__Impl )
            // InternalGlobalConstantsParser.g:10389:2: rule__STTimeLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__2"


    // $ANTLR start "rule__STTimeLiteral__Group__2__Impl"
    // InternalGlobalConstantsParser.g:10395:1: rule__STTimeLiteral__Group__2__Impl : ( ( rule__STTimeLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STTimeLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10399:1: ( ( ( rule__STTimeLiteral__ValueAssignment_2 ) ) )
            // InternalGlobalConstantsParser.g:10400:1: ( ( rule__STTimeLiteral__ValueAssignment_2 ) )
            {
            // InternalGlobalConstantsParser.g:10400:1: ( ( rule__STTimeLiteral__ValueAssignment_2 ) )
            // InternalGlobalConstantsParser.g:10401:2: ( rule__STTimeLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getValueAssignment_2()); 
            }
            // InternalGlobalConstantsParser.g:10402:2: ( rule__STTimeLiteral__ValueAssignment_2 )
            // InternalGlobalConstantsParser.g:10402:3: rule__STTimeLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__2__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__0"
    // InternalGlobalConstantsParser.g:10411:1: rule__STTimeOfDayLiteral__Group__0 : rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1 ;
    public final void rule__STTimeOfDayLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10415:1: ( rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1 )
            // InternalGlobalConstantsParser.g:10416:2: rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__STTimeOfDayLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__0"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__0__Impl"
    // InternalGlobalConstantsParser.g:10423:1: rule__STTimeOfDayLiteral__Group__0__Impl : ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STTimeOfDayLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10427:1: ( ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) ) )
            // InternalGlobalConstantsParser.g:10428:1: ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) )
            {
            // InternalGlobalConstantsParser.g:10428:1: ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) )
            // InternalGlobalConstantsParser.g:10429:2: ( rule__STTimeOfDayLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalGlobalConstantsParser.g:10430:2: ( rule__STTimeOfDayLiteral__TypeAssignment_0 )
            // InternalGlobalConstantsParser.g:10430:3: rule__STTimeOfDayLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__0__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__1"
    // InternalGlobalConstantsParser.g:10438:1: rule__STTimeOfDayLiteral__Group__1 : rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2 ;
    public final void rule__STTimeOfDayLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10442:1: ( rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2 )
            // InternalGlobalConstantsParser.g:10443:2: rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2
            {
            pushFollow(FOLLOW_72);
            rule__STTimeOfDayLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__1"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__1__Impl"
    // InternalGlobalConstantsParser.g:10450:1: rule__STTimeOfDayLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STTimeOfDayLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10454:1: ( ( NumberSign ) )
            // InternalGlobalConstantsParser.g:10455:1: ( NumberSign )
            {
            // InternalGlobalConstantsParser.g:10455:1: ( NumberSign )
            // InternalGlobalConstantsParser.g:10456:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__1__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__2"
    // InternalGlobalConstantsParser.g:10465:1: rule__STTimeOfDayLiteral__Group__2 : rule__STTimeOfDayLiteral__Group__2__Impl ;
    public final void rule__STTimeOfDayLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10469:1: ( rule__STTimeOfDayLiteral__Group__2__Impl )
            // InternalGlobalConstantsParser.g:10470:2: rule__STTimeOfDayLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__2"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__2__Impl"
    // InternalGlobalConstantsParser.g:10476:1: rule__STTimeOfDayLiteral__Group__2__Impl : ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STTimeOfDayLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10480:1: ( ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) ) )
            // InternalGlobalConstantsParser.g:10481:1: ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) )
            {
            // InternalGlobalConstantsParser.g:10481:1: ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) )
            // InternalGlobalConstantsParser.g:10482:2: ( rule__STTimeOfDayLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getValueAssignment_2()); 
            }
            // InternalGlobalConstantsParser.g:10483:2: ( rule__STTimeOfDayLiteral__ValueAssignment_2 )
            // InternalGlobalConstantsParser.g:10483:3: rule__STTimeOfDayLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__2__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__0"
    // InternalGlobalConstantsParser.g:10492:1: rule__STDateAndTimeLiteral__Group__0 : rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1 ;
    public final void rule__STDateAndTimeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10496:1: ( rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1 )
            // InternalGlobalConstantsParser.g:10497:2: rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__STDateAndTimeLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__0"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__0__Impl"
    // InternalGlobalConstantsParser.g:10504:1: rule__STDateAndTimeLiteral__Group__0__Impl : ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10508:1: ( ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) ) )
            // InternalGlobalConstantsParser.g:10509:1: ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) )
            {
            // InternalGlobalConstantsParser.g:10509:1: ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) )
            // InternalGlobalConstantsParser.g:10510:2: ( rule__STDateAndTimeLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalGlobalConstantsParser.g:10511:2: ( rule__STDateAndTimeLiteral__TypeAssignment_0 )
            // InternalGlobalConstantsParser.g:10511:3: rule__STDateAndTimeLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__0__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__1"
    // InternalGlobalConstantsParser.g:10519:1: rule__STDateAndTimeLiteral__Group__1 : rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2 ;
    public final void rule__STDateAndTimeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10523:1: ( rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2 )
            // InternalGlobalConstantsParser.g:10524:2: rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2
            {
            pushFollow(FOLLOW_72);
            rule__STDateAndTimeLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__1"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__1__Impl"
    // InternalGlobalConstantsParser.g:10531:1: rule__STDateAndTimeLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STDateAndTimeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10535:1: ( ( NumberSign ) )
            // InternalGlobalConstantsParser.g:10536:1: ( NumberSign )
            {
            // InternalGlobalConstantsParser.g:10536:1: ( NumberSign )
            // InternalGlobalConstantsParser.g:10537:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__2"
    // InternalGlobalConstantsParser.g:10546:1: rule__STDateAndTimeLiteral__Group__2 : rule__STDateAndTimeLiteral__Group__2__Impl ;
    public final void rule__STDateAndTimeLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10550:1: ( rule__STDateAndTimeLiteral__Group__2__Impl )
            // InternalGlobalConstantsParser.g:10551:2: rule__STDateAndTimeLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__2"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__2__Impl"
    // InternalGlobalConstantsParser.g:10557:1: rule__STDateAndTimeLiteral__Group__2__Impl : ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10561:1: ( ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) ) )
            // InternalGlobalConstantsParser.g:10562:1: ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) )
            {
            // InternalGlobalConstantsParser.g:10562:1: ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) )
            // InternalGlobalConstantsParser.g:10563:2: ( rule__STDateAndTimeLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getValueAssignment_2()); 
            }
            // InternalGlobalConstantsParser.g:10564:2: ( rule__STDateAndTimeLiteral__ValueAssignment_2 )
            // InternalGlobalConstantsParser.g:10564:3: rule__STDateAndTimeLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__2__Impl"


    // $ANTLR start "rule__STStringLiteral__Group__0"
    // InternalGlobalConstantsParser.g:10573:1: rule__STStringLiteral__Group__0 : rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1 ;
    public final void rule__STStringLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10577:1: ( rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1 )
            // InternalGlobalConstantsParser.g:10578:2: rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__STStringLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__0"


    // $ANTLR start "rule__STStringLiteral__Group__0__Impl"
    // InternalGlobalConstantsParser.g:10585:1: rule__STStringLiteral__Group__0__Impl : ( ( rule__STStringLiteral__Group_0__0 )? ) ;
    public final void rule__STStringLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10589:1: ( ( ( rule__STStringLiteral__Group_0__0 )? ) )
            // InternalGlobalConstantsParser.g:10590:1: ( ( rule__STStringLiteral__Group_0__0 )? )
            {
            // InternalGlobalConstantsParser.g:10590:1: ( ( rule__STStringLiteral__Group_0__0 )? )
            // InternalGlobalConstantsParser.g:10591:2: ( rule__STStringLiteral__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getGroup_0()); 
            }
            // InternalGlobalConstantsParser.g:10592:2: ( rule__STStringLiteral__Group_0__0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==WSTRING||LA91_0==STRING||LA91_0==WCHAR||LA91_0==CHAR) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalGlobalConstantsParser.g:10592:3: rule__STStringLiteral__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStringLiteral__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__0__Impl"


    // $ANTLR start "rule__STStringLiteral__Group__1"
    // InternalGlobalConstantsParser.g:10600:1: rule__STStringLiteral__Group__1 : rule__STStringLiteral__Group__1__Impl ;
    public final void rule__STStringLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10604:1: ( rule__STStringLiteral__Group__1__Impl )
            // InternalGlobalConstantsParser.g:10605:2: rule__STStringLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__1"


    // $ANTLR start "rule__STStringLiteral__Group__1__Impl"
    // InternalGlobalConstantsParser.g:10611:1: rule__STStringLiteral__Group__1__Impl : ( ( rule__STStringLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STStringLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10615:1: ( ( ( rule__STStringLiteral__ValueAssignment_1 ) ) )
            // InternalGlobalConstantsParser.g:10616:1: ( ( rule__STStringLiteral__ValueAssignment_1 ) )
            {
            // InternalGlobalConstantsParser.g:10616:1: ( ( rule__STStringLiteral__ValueAssignment_1 ) )
            // InternalGlobalConstantsParser.g:10617:2: ( rule__STStringLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getValueAssignment_1()); 
            }
            // InternalGlobalConstantsParser.g:10618:2: ( rule__STStringLiteral__ValueAssignment_1 )
            // InternalGlobalConstantsParser.g:10618:3: rule__STStringLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__1__Impl"


    // $ANTLR start "rule__STStringLiteral__Group_0__0"
    // InternalGlobalConstantsParser.g:10627:1: rule__STStringLiteral__Group_0__0 : rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1 ;
    public final void rule__STStringLiteral__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10631:1: ( rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1 )
            // InternalGlobalConstantsParser.g:10632:2: rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1
            {
            pushFollow(FOLLOW_71);
            rule__STStringLiteral__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__0"


    // $ANTLR start "rule__STStringLiteral__Group_0__0__Impl"
    // InternalGlobalConstantsParser.g:10639:1: rule__STStringLiteral__Group_0__0__Impl : ( ( rule__STStringLiteral__TypeAssignment_0_0 ) ) ;
    public final void rule__STStringLiteral__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10643:1: ( ( ( rule__STStringLiteral__TypeAssignment_0_0 ) ) )
            // InternalGlobalConstantsParser.g:10644:1: ( ( rule__STStringLiteral__TypeAssignment_0_0 ) )
            {
            // InternalGlobalConstantsParser.g:10644:1: ( ( rule__STStringLiteral__TypeAssignment_0_0 ) )
            // InternalGlobalConstantsParser.g:10645:2: ( rule__STStringLiteral__TypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeAssignment_0_0()); 
            }
            // InternalGlobalConstantsParser.g:10646:2: ( rule__STStringLiteral__TypeAssignment_0_0 )
            // InternalGlobalConstantsParser.g:10646:3: rule__STStringLiteral__TypeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__TypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__0__Impl"


    // $ANTLR start "rule__STStringLiteral__Group_0__1"
    // InternalGlobalConstantsParser.g:10654:1: rule__STStringLiteral__Group_0__1 : rule__STStringLiteral__Group_0__1__Impl ;
    public final void rule__STStringLiteral__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10658:1: ( rule__STStringLiteral__Group_0__1__Impl )
            // InternalGlobalConstantsParser.g:10659:2: rule__STStringLiteral__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__1"


    // $ANTLR start "rule__STStringLiteral__Group_0__1__Impl"
    // InternalGlobalConstantsParser.g:10665:1: rule__STStringLiteral__Group_0__1__Impl : ( NumberSign ) ;
    public final void rule__STStringLiteral__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10669:1: ( ( NumberSign ) )
            // InternalGlobalConstantsParser.g:10670:1: ( NumberSign )
            {
            // InternalGlobalConstantsParser.g:10670:1: ( NumberSign )
            // InternalGlobalConstantsParser.g:10671:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getNumberSignKeyword_0_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getNumberSignKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__1__Impl"


    // $ANTLR start "rule__Number__Group__0"
    // InternalGlobalConstantsParser.g:10681:1: rule__Number__Group__0 : rule__Number__Group__0__Impl rule__Number__Group__1 ;
    public final void rule__Number__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10685:1: ( rule__Number__Group__0__Impl rule__Number__Group__1 )
            // InternalGlobalConstantsParser.g:10686:2: rule__Number__Group__0__Impl rule__Number__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__Number__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__0"


    // $ANTLR start "rule__Number__Group__0__Impl"
    // InternalGlobalConstantsParser.g:10693:1: rule__Number__Group__0__Impl : ( ( rule__Number__Alternatives_0 )? ) ;
    public final void rule__Number__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10697:1: ( ( ( rule__Number__Alternatives_0 )? ) )
            // InternalGlobalConstantsParser.g:10698:1: ( ( rule__Number__Alternatives_0 )? )
            {
            // InternalGlobalConstantsParser.g:10698:1: ( ( rule__Number__Alternatives_0 )? )
            // InternalGlobalConstantsParser.g:10699:2: ( rule__Number__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_0()); 
            }
            // InternalGlobalConstantsParser.g:10700:2: ( rule__Number__Alternatives_0 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==PlusSign||LA92_0==HyphenMinus) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalGlobalConstantsParser.g:10700:3: rule__Number__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__0__Impl"


    // $ANTLR start "rule__Number__Group__1"
    // InternalGlobalConstantsParser.g:10708:1: rule__Number__Group__1 : rule__Number__Group__1__Impl rule__Number__Group__2 ;
    public final void rule__Number__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10712:1: ( rule__Number__Group__1__Impl rule__Number__Group__2 )
            // InternalGlobalConstantsParser.g:10713:2: rule__Number__Group__1__Impl rule__Number__Group__2
            {
            pushFollow(FOLLOW_64);
            rule__Number__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__1"


    // $ANTLR start "rule__Number__Group__1__Impl"
    // InternalGlobalConstantsParser.g:10720:1: rule__Number__Group__1__Impl : ( ( rule__Number__Alternatives_1 ) ) ;
    public final void rule__Number__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10724:1: ( ( ( rule__Number__Alternatives_1 ) ) )
            // InternalGlobalConstantsParser.g:10725:1: ( ( rule__Number__Alternatives_1 ) )
            {
            // InternalGlobalConstantsParser.g:10725:1: ( ( rule__Number__Alternatives_1 ) )
            // InternalGlobalConstantsParser.g:10726:2: ( rule__Number__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_1()); 
            }
            // InternalGlobalConstantsParser.g:10727:2: ( rule__Number__Alternatives_1 )
            // InternalGlobalConstantsParser.g:10727:3: rule__Number__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Number__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__1__Impl"


    // $ANTLR start "rule__Number__Group__2"
    // InternalGlobalConstantsParser.g:10735:1: rule__Number__Group__2 : rule__Number__Group__2__Impl ;
    public final void rule__Number__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10739:1: ( rule__Number__Group__2__Impl )
            // InternalGlobalConstantsParser.g:10740:2: rule__Number__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__2"


    // $ANTLR start "rule__Number__Group__2__Impl"
    // InternalGlobalConstantsParser.g:10746:1: rule__Number__Group__2__Impl : ( ( rule__Number__Group_2__0 )? ) ;
    public final void rule__Number__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10750:1: ( ( ( rule__Number__Group_2__0 )? ) )
            // InternalGlobalConstantsParser.g:10751:1: ( ( rule__Number__Group_2__0 )? )
            {
            // InternalGlobalConstantsParser.g:10751:1: ( ( rule__Number__Group_2__0 )? )
            // InternalGlobalConstantsParser.g:10752:2: ( rule__Number__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getGroup_2()); 
            }
            // InternalGlobalConstantsParser.g:10753:2: ( rule__Number__Group_2__0 )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==FullStop) ) {
                int LA93_1 = input.LA(2);

                if ( (LA93_1==RULE_INT) ) {
                    int LA93_3 = input.LA(3);

                    if ( (synpred148_InternalGlobalConstantsParser()) ) {
                        alt93=1;
                    }
                }
                else if ( (LA93_1==RULE_DECIMAL) ) {
                    alt93=1;
                }
            }
            switch (alt93) {
                case 1 :
                    // InternalGlobalConstantsParser.g:10753:3: rule__Number__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__2__Impl"


    // $ANTLR start "rule__Number__Group_2__0"
    // InternalGlobalConstantsParser.g:10762:1: rule__Number__Group_2__0 : rule__Number__Group_2__0__Impl rule__Number__Group_2__1 ;
    public final void rule__Number__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10766:1: ( rule__Number__Group_2__0__Impl rule__Number__Group_2__1 )
            // InternalGlobalConstantsParser.g:10767:2: rule__Number__Group_2__0__Impl rule__Number__Group_2__1
            {
            pushFollow(FOLLOW_76);
            rule__Number__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__0"


    // $ANTLR start "rule__Number__Group_2__0__Impl"
    // InternalGlobalConstantsParser.g:10774:1: rule__Number__Group_2__0__Impl : ( ( FullStop ) ) ;
    public final void rule__Number__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10778:1: ( ( ( FullStop ) ) )
            // InternalGlobalConstantsParser.g:10779:1: ( ( FullStop ) )
            {
            // InternalGlobalConstantsParser.g:10779:1: ( ( FullStop ) )
            // InternalGlobalConstantsParser.g:10780:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getFullStopKeyword_2_0()); 
            }
            // InternalGlobalConstantsParser.g:10781:2: ( FullStop )
            // InternalGlobalConstantsParser.g:10781:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__0__Impl"


    // $ANTLR start "rule__Number__Group_2__1"
    // InternalGlobalConstantsParser.g:10789:1: rule__Number__Group_2__1 : rule__Number__Group_2__1__Impl ;
    public final void rule__Number__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10793:1: ( rule__Number__Group_2__1__Impl )
            // InternalGlobalConstantsParser.g:10794:2: rule__Number__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__1"


    // $ANTLR start "rule__Number__Group_2__1__Impl"
    // InternalGlobalConstantsParser.g:10800:1: rule__Number__Group_2__1__Impl : ( ( rule__Number__Alternatives_2_1 ) ) ;
    public final void rule__Number__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10804:1: ( ( ( rule__Number__Alternatives_2_1 ) ) )
            // InternalGlobalConstantsParser.g:10805:1: ( ( rule__Number__Alternatives_2_1 ) )
            {
            // InternalGlobalConstantsParser.g:10805:1: ( ( rule__Number__Alternatives_2_1 ) )
            // InternalGlobalConstantsParser.g:10806:2: ( rule__Number__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_2_1()); 
            }
            // InternalGlobalConstantsParser.g:10807:2: ( rule__Number__Alternatives_2_1 )
            // InternalGlobalConstantsParser.g:10807:3: rule__Number__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Number__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__1__Impl"


    // $ANTLR start "rule__Time__Group__0"
    // InternalGlobalConstantsParser.g:10816:1: rule__Time__Group__0 : rule__Time__Group__0__Impl rule__Time__Group__1 ;
    public final void rule__Time__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10820:1: ( rule__Time__Group__0__Impl rule__Time__Group__1 )
            // InternalGlobalConstantsParser.g:10821:2: rule__Time__Group__0__Impl rule__Time__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__Time__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Time__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__0"


    // $ANTLR start "rule__Time__Group__0__Impl"
    // InternalGlobalConstantsParser.g:10828:1: rule__Time__Group__0__Impl : ( ( rule__Time__Alternatives_0 )? ) ;
    public final void rule__Time__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10832:1: ( ( ( rule__Time__Alternatives_0 )? ) )
            // InternalGlobalConstantsParser.g:10833:1: ( ( rule__Time__Alternatives_0 )? )
            {
            // InternalGlobalConstantsParser.g:10833:1: ( ( rule__Time__Alternatives_0 )? )
            // InternalGlobalConstantsParser.g:10834:2: ( rule__Time__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getAlternatives_0()); 
            }
            // InternalGlobalConstantsParser.g:10835:2: ( rule__Time__Alternatives_0 )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==PlusSign||LA94_0==HyphenMinus) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalGlobalConstantsParser.g:10835:3: rule__Time__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Time__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__0__Impl"


    // $ANTLR start "rule__Time__Group__1"
    // InternalGlobalConstantsParser.g:10843:1: rule__Time__Group__1 : rule__Time__Group__1__Impl ;
    public final void rule__Time__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10847:1: ( rule__Time__Group__1__Impl )
            // InternalGlobalConstantsParser.g:10848:2: rule__Time__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Time__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__1"


    // $ANTLR start "rule__Time__Group__1__Impl"
    // InternalGlobalConstantsParser.g:10854:1: rule__Time__Group__1__Impl : ( RULE_TIME_VALUE ) ;
    public final void rule__Time__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10858:1: ( ( RULE_TIME_VALUE ) )
            // InternalGlobalConstantsParser.g:10859:1: ( RULE_TIME_VALUE )
            {
            // InternalGlobalConstantsParser.g:10859:1: ( RULE_TIME_VALUE )
            // InternalGlobalConstantsParser.g:10860:2: RULE_TIME_VALUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getTIME_VALUETerminalRuleCall_1()); 
            }
            match(input,RULE_TIME_VALUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getTIME_VALUETerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__1__Impl"


    // $ANTLR start "rule__Date__Group__0"
    // InternalGlobalConstantsParser.g:10870:1: rule__Date__Group__0 : rule__Date__Group__0__Impl rule__Date__Group__1 ;
    public final void rule__Date__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10874:1: ( rule__Date__Group__0__Impl rule__Date__Group__1 )
            // InternalGlobalConstantsParser.g:10875:2: rule__Date__Group__0__Impl rule__Date__Group__1
            {
            pushFollow(FOLLOW_77);
            rule__Date__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__0"


    // $ANTLR start "rule__Date__Group__0__Impl"
    // InternalGlobalConstantsParser.g:10882:1: rule__Date__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10886:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:10887:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:10887:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:10888:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__0__Impl"


    // $ANTLR start "rule__Date__Group__1"
    // InternalGlobalConstantsParser.g:10897:1: rule__Date__Group__1 : rule__Date__Group__1__Impl rule__Date__Group__2 ;
    public final void rule__Date__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10901:1: ( rule__Date__Group__1__Impl rule__Date__Group__2 )
            // InternalGlobalConstantsParser.g:10902:2: rule__Date__Group__1__Impl rule__Date__Group__2
            {
            pushFollow(FOLLOW_72);
            rule__Date__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__1"


    // $ANTLR start "rule__Date__Group__1__Impl"
    // InternalGlobalConstantsParser.g:10909:1: rule__Date__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__Date__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10913:1: ( ( HyphenMinus ) )
            // InternalGlobalConstantsParser.g:10914:1: ( HyphenMinus )
            {
            // InternalGlobalConstantsParser.g:10914:1: ( HyphenMinus )
            // InternalGlobalConstantsParser.g:10915:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__1__Impl"


    // $ANTLR start "rule__Date__Group__2"
    // InternalGlobalConstantsParser.g:10924:1: rule__Date__Group__2 : rule__Date__Group__2__Impl rule__Date__Group__3 ;
    public final void rule__Date__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10928:1: ( rule__Date__Group__2__Impl rule__Date__Group__3 )
            // InternalGlobalConstantsParser.g:10929:2: rule__Date__Group__2__Impl rule__Date__Group__3
            {
            pushFollow(FOLLOW_77);
            rule__Date__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__2"


    // $ANTLR start "rule__Date__Group__2__Impl"
    // InternalGlobalConstantsParser.g:10936:1: rule__Date__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10940:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:10941:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:10941:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:10942:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__2__Impl"


    // $ANTLR start "rule__Date__Group__3"
    // InternalGlobalConstantsParser.g:10951:1: rule__Date__Group__3 : rule__Date__Group__3__Impl rule__Date__Group__4 ;
    public final void rule__Date__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10955:1: ( rule__Date__Group__3__Impl rule__Date__Group__4 )
            // InternalGlobalConstantsParser.g:10956:2: rule__Date__Group__3__Impl rule__Date__Group__4
            {
            pushFollow(FOLLOW_72);
            rule__Date__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__3"


    // $ANTLR start "rule__Date__Group__3__Impl"
    // InternalGlobalConstantsParser.g:10963:1: rule__Date__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__Date__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10967:1: ( ( HyphenMinus ) )
            // InternalGlobalConstantsParser.g:10968:1: ( HyphenMinus )
            {
            // InternalGlobalConstantsParser.g:10968:1: ( HyphenMinus )
            // InternalGlobalConstantsParser.g:10969:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__3__Impl"


    // $ANTLR start "rule__Date__Group__4"
    // InternalGlobalConstantsParser.g:10978:1: rule__Date__Group__4 : rule__Date__Group__4__Impl ;
    public final void rule__Date__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10982:1: ( rule__Date__Group__4__Impl )
            // InternalGlobalConstantsParser.g:10983:2: rule__Date__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Date__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__4"


    // $ANTLR start "rule__Date__Group__4__Impl"
    // InternalGlobalConstantsParser.g:10989:1: rule__Date__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:10993:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:10994:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:10994:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:10995:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__4__Impl"


    // $ANTLR start "rule__DateAndTime__Group__0"
    // InternalGlobalConstantsParser.g:11005:1: rule__DateAndTime__Group__0 : rule__DateAndTime__Group__0__Impl rule__DateAndTime__Group__1 ;
    public final void rule__DateAndTime__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11009:1: ( rule__DateAndTime__Group__0__Impl rule__DateAndTime__Group__1 )
            // InternalGlobalConstantsParser.g:11010:2: rule__DateAndTime__Group__0__Impl rule__DateAndTime__Group__1
            {
            pushFollow(FOLLOW_77);
            rule__DateAndTime__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__0"


    // $ANTLR start "rule__DateAndTime__Group__0__Impl"
    // InternalGlobalConstantsParser.g:11017:1: rule__DateAndTime__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11021:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:11022:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:11022:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:11023:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__0__Impl"


    // $ANTLR start "rule__DateAndTime__Group__1"
    // InternalGlobalConstantsParser.g:11032:1: rule__DateAndTime__Group__1 : rule__DateAndTime__Group__1__Impl rule__DateAndTime__Group__2 ;
    public final void rule__DateAndTime__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11036:1: ( rule__DateAndTime__Group__1__Impl rule__DateAndTime__Group__2 )
            // InternalGlobalConstantsParser.g:11037:2: rule__DateAndTime__Group__1__Impl rule__DateAndTime__Group__2
            {
            pushFollow(FOLLOW_72);
            rule__DateAndTime__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__1"


    // $ANTLR start "rule__DateAndTime__Group__1__Impl"
    // InternalGlobalConstantsParser.g:11044:1: rule__DateAndTime__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__DateAndTime__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11048:1: ( ( HyphenMinus ) )
            // InternalGlobalConstantsParser.g:11049:1: ( HyphenMinus )
            {
            // InternalGlobalConstantsParser.g:11049:1: ( HyphenMinus )
            // InternalGlobalConstantsParser.g:11050:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__1__Impl"


    // $ANTLR start "rule__DateAndTime__Group__2"
    // InternalGlobalConstantsParser.g:11059:1: rule__DateAndTime__Group__2 : rule__DateAndTime__Group__2__Impl rule__DateAndTime__Group__3 ;
    public final void rule__DateAndTime__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11063:1: ( rule__DateAndTime__Group__2__Impl rule__DateAndTime__Group__3 )
            // InternalGlobalConstantsParser.g:11064:2: rule__DateAndTime__Group__2__Impl rule__DateAndTime__Group__3
            {
            pushFollow(FOLLOW_77);
            rule__DateAndTime__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__2"


    // $ANTLR start "rule__DateAndTime__Group__2__Impl"
    // InternalGlobalConstantsParser.g:11071:1: rule__DateAndTime__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11075:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:11076:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:11076:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:11077:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__2__Impl"


    // $ANTLR start "rule__DateAndTime__Group__3"
    // InternalGlobalConstantsParser.g:11086:1: rule__DateAndTime__Group__3 : rule__DateAndTime__Group__3__Impl rule__DateAndTime__Group__4 ;
    public final void rule__DateAndTime__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11090:1: ( rule__DateAndTime__Group__3__Impl rule__DateAndTime__Group__4 )
            // InternalGlobalConstantsParser.g:11091:2: rule__DateAndTime__Group__3__Impl rule__DateAndTime__Group__4
            {
            pushFollow(FOLLOW_72);
            rule__DateAndTime__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__3"


    // $ANTLR start "rule__DateAndTime__Group__3__Impl"
    // InternalGlobalConstantsParser.g:11098:1: rule__DateAndTime__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__DateAndTime__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11102:1: ( ( HyphenMinus ) )
            // InternalGlobalConstantsParser.g:11103:1: ( HyphenMinus )
            {
            // InternalGlobalConstantsParser.g:11103:1: ( HyphenMinus )
            // InternalGlobalConstantsParser.g:11104:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__3__Impl"


    // $ANTLR start "rule__DateAndTime__Group__4"
    // InternalGlobalConstantsParser.g:11113:1: rule__DateAndTime__Group__4 : rule__DateAndTime__Group__4__Impl rule__DateAndTime__Group__5 ;
    public final void rule__DateAndTime__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11117:1: ( rule__DateAndTime__Group__4__Impl rule__DateAndTime__Group__5 )
            // InternalGlobalConstantsParser.g:11118:2: rule__DateAndTime__Group__4__Impl rule__DateAndTime__Group__5
            {
            pushFollow(FOLLOW_77);
            rule__DateAndTime__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__4"


    // $ANTLR start "rule__DateAndTime__Group__4__Impl"
    // InternalGlobalConstantsParser.g:11125:1: rule__DateAndTime__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11129:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:11130:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:11130:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:11131:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__4__Impl"


    // $ANTLR start "rule__DateAndTime__Group__5"
    // InternalGlobalConstantsParser.g:11140:1: rule__DateAndTime__Group__5 : rule__DateAndTime__Group__5__Impl rule__DateAndTime__Group__6 ;
    public final void rule__DateAndTime__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11144:1: ( rule__DateAndTime__Group__5__Impl rule__DateAndTime__Group__6 )
            // InternalGlobalConstantsParser.g:11145:2: rule__DateAndTime__Group__5__Impl rule__DateAndTime__Group__6
            {
            pushFollow(FOLLOW_72);
            rule__DateAndTime__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__5"


    // $ANTLR start "rule__DateAndTime__Group__5__Impl"
    // InternalGlobalConstantsParser.g:11152:1: rule__DateAndTime__Group__5__Impl : ( HyphenMinus ) ;
    public final void rule__DateAndTime__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11156:1: ( ( HyphenMinus ) )
            // InternalGlobalConstantsParser.g:11157:1: ( HyphenMinus )
            {
            // InternalGlobalConstantsParser.g:11157:1: ( HyphenMinus )
            // InternalGlobalConstantsParser.g:11158:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_5()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__5__Impl"


    // $ANTLR start "rule__DateAndTime__Group__6"
    // InternalGlobalConstantsParser.g:11167:1: rule__DateAndTime__Group__6 : rule__DateAndTime__Group__6__Impl rule__DateAndTime__Group__7 ;
    public final void rule__DateAndTime__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11171:1: ( rule__DateAndTime__Group__6__Impl rule__DateAndTime__Group__7 )
            // InternalGlobalConstantsParser.g:11172:2: rule__DateAndTime__Group__6__Impl rule__DateAndTime__Group__7
            {
            pushFollow(FOLLOW_78);
            rule__DateAndTime__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__6"


    // $ANTLR start "rule__DateAndTime__Group__6__Impl"
    // InternalGlobalConstantsParser.g:11179:1: rule__DateAndTime__Group__6__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11183:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:11184:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:11184:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:11185:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_6()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__6__Impl"


    // $ANTLR start "rule__DateAndTime__Group__7"
    // InternalGlobalConstantsParser.g:11194:1: rule__DateAndTime__Group__7 : rule__DateAndTime__Group__7__Impl rule__DateAndTime__Group__8 ;
    public final void rule__DateAndTime__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11198:1: ( rule__DateAndTime__Group__7__Impl rule__DateAndTime__Group__8 )
            // InternalGlobalConstantsParser.g:11199:2: rule__DateAndTime__Group__7__Impl rule__DateAndTime__Group__8
            {
            pushFollow(FOLLOW_72);
            rule__DateAndTime__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__7"


    // $ANTLR start "rule__DateAndTime__Group__7__Impl"
    // InternalGlobalConstantsParser.g:11206:1: rule__DateAndTime__Group__7__Impl : ( Colon ) ;
    public final void rule__DateAndTime__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11210:1: ( ( Colon ) )
            // InternalGlobalConstantsParser.g:11211:1: ( Colon )
            {
            // InternalGlobalConstantsParser.g:11211:1: ( Colon )
            // InternalGlobalConstantsParser.g:11212:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getColonKeyword_7()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getColonKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__7__Impl"


    // $ANTLR start "rule__DateAndTime__Group__8"
    // InternalGlobalConstantsParser.g:11221:1: rule__DateAndTime__Group__8 : rule__DateAndTime__Group__8__Impl rule__DateAndTime__Group__9 ;
    public final void rule__DateAndTime__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11225:1: ( rule__DateAndTime__Group__8__Impl rule__DateAndTime__Group__9 )
            // InternalGlobalConstantsParser.g:11226:2: rule__DateAndTime__Group__8__Impl rule__DateAndTime__Group__9
            {
            pushFollow(FOLLOW_78);
            rule__DateAndTime__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__8"


    // $ANTLR start "rule__DateAndTime__Group__8__Impl"
    // InternalGlobalConstantsParser.g:11233:1: rule__DateAndTime__Group__8__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11237:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:11238:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:11238:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:11239:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_8()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__8__Impl"


    // $ANTLR start "rule__DateAndTime__Group__9"
    // InternalGlobalConstantsParser.g:11248:1: rule__DateAndTime__Group__9 : rule__DateAndTime__Group__9__Impl rule__DateAndTime__Group__10 ;
    public final void rule__DateAndTime__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11252:1: ( rule__DateAndTime__Group__9__Impl rule__DateAndTime__Group__10 )
            // InternalGlobalConstantsParser.g:11253:2: rule__DateAndTime__Group__9__Impl rule__DateAndTime__Group__10
            {
            pushFollow(FOLLOW_72);
            rule__DateAndTime__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__10();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__9"


    // $ANTLR start "rule__DateAndTime__Group__9__Impl"
    // InternalGlobalConstantsParser.g:11260:1: rule__DateAndTime__Group__9__Impl : ( Colon ) ;
    public final void rule__DateAndTime__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11264:1: ( ( Colon ) )
            // InternalGlobalConstantsParser.g:11265:1: ( Colon )
            {
            // InternalGlobalConstantsParser.g:11265:1: ( Colon )
            // InternalGlobalConstantsParser.g:11266:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getColonKeyword_9()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getColonKeyword_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__9__Impl"


    // $ANTLR start "rule__DateAndTime__Group__10"
    // InternalGlobalConstantsParser.g:11275:1: rule__DateAndTime__Group__10 : rule__DateAndTime__Group__10__Impl rule__DateAndTime__Group__11 ;
    public final void rule__DateAndTime__Group__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11279:1: ( rule__DateAndTime__Group__10__Impl rule__DateAndTime__Group__11 )
            // InternalGlobalConstantsParser.g:11280:2: rule__DateAndTime__Group__10__Impl rule__DateAndTime__Group__11
            {
            pushFollow(FOLLOW_64);
            rule__DateAndTime__Group__10__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__11();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__10"


    // $ANTLR start "rule__DateAndTime__Group__10__Impl"
    // InternalGlobalConstantsParser.g:11287:1: rule__DateAndTime__Group__10__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11291:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:11292:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:11292:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:11293:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_10()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_10()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__10__Impl"


    // $ANTLR start "rule__DateAndTime__Group__11"
    // InternalGlobalConstantsParser.g:11302:1: rule__DateAndTime__Group__11 : rule__DateAndTime__Group__11__Impl ;
    public final void rule__DateAndTime__Group__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11306:1: ( rule__DateAndTime__Group__11__Impl )
            // InternalGlobalConstantsParser.g:11307:2: rule__DateAndTime__Group__11__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__11__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__11"


    // $ANTLR start "rule__DateAndTime__Group__11__Impl"
    // InternalGlobalConstantsParser.g:11313:1: rule__DateAndTime__Group__11__Impl : ( ( rule__DateAndTime__Group_11__0 )? ) ;
    public final void rule__DateAndTime__Group__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11317:1: ( ( ( rule__DateAndTime__Group_11__0 )? ) )
            // InternalGlobalConstantsParser.g:11318:1: ( ( rule__DateAndTime__Group_11__0 )? )
            {
            // InternalGlobalConstantsParser.g:11318:1: ( ( rule__DateAndTime__Group_11__0 )? )
            // InternalGlobalConstantsParser.g:11319:2: ( rule__DateAndTime__Group_11__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getGroup_11()); 
            }
            // InternalGlobalConstantsParser.g:11320:2: ( rule__DateAndTime__Group_11__0 )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==FullStop) ) {
                int LA95_1 = input.LA(2);

                if ( (LA95_1==RULE_INT) ) {
                    int LA95_3 = input.LA(3);

                    if ( (synpred150_InternalGlobalConstantsParser()) ) {
                        alt95=1;
                    }
                }
            }
            switch (alt95) {
                case 1 :
                    // InternalGlobalConstantsParser.g:11320:3: rule__DateAndTime__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DateAndTime__Group_11__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getGroup_11()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__11__Impl"


    // $ANTLR start "rule__DateAndTime__Group_11__0"
    // InternalGlobalConstantsParser.g:11329:1: rule__DateAndTime__Group_11__0 : rule__DateAndTime__Group_11__0__Impl rule__DateAndTime__Group_11__1 ;
    public final void rule__DateAndTime__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11333:1: ( rule__DateAndTime__Group_11__0__Impl rule__DateAndTime__Group_11__1 )
            // InternalGlobalConstantsParser.g:11334:2: rule__DateAndTime__Group_11__0__Impl rule__DateAndTime__Group_11__1
            {
            pushFollow(FOLLOW_72);
            rule__DateAndTime__Group_11__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group_11__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__0"


    // $ANTLR start "rule__DateAndTime__Group_11__0__Impl"
    // InternalGlobalConstantsParser.g:11341:1: rule__DateAndTime__Group_11__0__Impl : ( ( FullStop ) ) ;
    public final void rule__DateAndTime__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11345:1: ( ( ( FullStop ) ) )
            // InternalGlobalConstantsParser.g:11346:1: ( ( FullStop ) )
            {
            // InternalGlobalConstantsParser.g:11346:1: ( ( FullStop ) )
            // InternalGlobalConstantsParser.g:11347:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getFullStopKeyword_11_0()); 
            }
            // InternalGlobalConstantsParser.g:11348:2: ( FullStop )
            // InternalGlobalConstantsParser.g:11348:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getFullStopKeyword_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__0__Impl"


    // $ANTLR start "rule__DateAndTime__Group_11__1"
    // InternalGlobalConstantsParser.g:11356:1: rule__DateAndTime__Group_11__1 : rule__DateAndTime__Group_11__1__Impl ;
    public final void rule__DateAndTime__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11360:1: ( rule__DateAndTime__Group_11__1__Impl )
            // InternalGlobalConstantsParser.g:11361:2: rule__DateAndTime__Group_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group_11__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__1"


    // $ANTLR start "rule__DateAndTime__Group_11__1__Impl"
    // InternalGlobalConstantsParser.g:11367:1: rule__DateAndTime__Group_11__1__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11371:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:11372:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:11372:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:11373:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_11_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_11_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__1__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__0"
    // InternalGlobalConstantsParser.g:11383:1: rule__TimeOfDay__Group__0 : rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1 ;
    public final void rule__TimeOfDay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11387:1: ( rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1 )
            // InternalGlobalConstantsParser.g:11388:2: rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__TimeOfDay__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__0"


    // $ANTLR start "rule__TimeOfDay__Group__0__Impl"
    // InternalGlobalConstantsParser.g:11395:1: rule__TimeOfDay__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11399:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:11400:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:11400:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:11401:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__0__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__1"
    // InternalGlobalConstantsParser.g:11410:1: rule__TimeOfDay__Group__1 : rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2 ;
    public final void rule__TimeOfDay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11414:1: ( rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2 )
            // InternalGlobalConstantsParser.g:11415:2: rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2
            {
            pushFollow(FOLLOW_72);
            rule__TimeOfDay__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__1"


    // $ANTLR start "rule__TimeOfDay__Group__1__Impl"
    // InternalGlobalConstantsParser.g:11422:1: rule__TimeOfDay__Group__1__Impl : ( Colon ) ;
    public final void rule__TimeOfDay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11426:1: ( ( Colon ) )
            // InternalGlobalConstantsParser.g:11427:1: ( Colon )
            {
            // InternalGlobalConstantsParser.g:11427:1: ( Colon )
            // InternalGlobalConstantsParser.g:11428:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__1__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__2"
    // InternalGlobalConstantsParser.g:11437:1: rule__TimeOfDay__Group__2 : rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3 ;
    public final void rule__TimeOfDay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11441:1: ( rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3 )
            // InternalGlobalConstantsParser.g:11442:2: rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3
            {
            pushFollow(FOLLOW_78);
            rule__TimeOfDay__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__2"


    // $ANTLR start "rule__TimeOfDay__Group__2__Impl"
    // InternalGlobalConstantsParser.g:11449:1: rule__TimeOfDay__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11453:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:11454:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:11454:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:11455:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__2__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__3"
    // InternalGlobalConstantsParser.g:11464:1: rule__TimeOfDay__Group__3 : rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4 ;
    public final void rule__TimeOfDay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11468:1: ( rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4 )
            // InternalGlobalConstantsParser.g:11469:2: rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4
            {
            pushFollow(FOLLOW_72);
            rule__TimeOfDay__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__3"


    // $ANTLR start "rule__TimeOfDay__Group__3__Impl"
    // InternalGlobalConstantsParser.g:11476:1: rule__TimeOfDay__Group__3__Impl : ( Colon ) ;
    public final void rule__TimeOfDay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11480:1: ( ( Colon ) )
            // InternalGlobalConstantsParser.g:11481:1: ( Colon )
            {
            // InternalGlobalConstantsParser.g:11481:1: ( Colon )
            // InternalGlobalConstantsParser.g:11482:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__3__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__4"
    // InternalGlobalConstantsParser.g:11491:1: rule__TimeOfDay__Group__4 : rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5 ;
    public final void rule__TimeOfDay__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11495:1: ( rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5 )
            // InternalGlobalConstantsParser.g:11496:2: rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5
            {
            pushFollow(FOLLOW_64);
            rule__TimeOfDay__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__4"


    // $ANTLR start "rule__TimeOfDay__Group__4__Impl"
    // InternalGlobalConstantsParser.g:11503:1: rule__TimeOfDay__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11507:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:11508:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:11508:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:11509:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__4__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__5"
    // InternalGlobalConstantsParser.g:11518:1: rule__TimeOfDay__Group__5 : rule__TimeOfDay__Group__5__Impl ;
    public final void rule__TimeOfDay__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11522:1: ( rule__TimeOfDay__Group__5__Impl )
            // InternalGlobalConstantsParser.g:11523:2: rule__TimeOfDay__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__5"


    // $ANTLR start "rule__TimeOfDay__Group__5__Impl"
    // InternalGlobalConstantsParser.g:11529:1: rule__TimeOfDay__Group__5__Impl : ( ( rule__TimeOfDay__Group_5__0 )? ) ;
    public final void rule__TimeOfDay__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11533:1: ( ( ( rule__TimeOfDay__Group_5__0 )? ) )
            // InternalGlobalConstantsParser.g:11534:1: ( ( rule__TimeOfDay__Group_5__0 )? )
            {
            // InternalGlobalConstantsParser.g:11534:1: ( ( rule__TimeOfDay__Group_5__0 )? )
            // InternalGlobalConstantsParser.g:11535:2: ( rule__TimeOfDay__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getGroup_5()); 
            }
            // InternalGlobalConstantsParser.g:11536:2: ( rule__TimeOfDay__Group_5__0 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==FullStop) ) {
                int LA96_1 = input.LA(2);

                if ( (LA96_1==RULE_INT) ) {
                    int LA96_3 = input.LA(3);

                    if ( (synpred151_InternalGlobalConstantsParser()) ) {
                        alt96=1;
                    }
                }
            }
            switch (alt96) {
                case 1 :
                    // InternalGlobalConstantsParser.g:11536:3: rule__TimeOfDay__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeOfDay__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__5__Impl"


    // $ANTLR start "rule__TimeOfDay__Group_5__0"
    // InternalGlobalConstantsParser.g:11545:1: rule__TimeOfDay__Group_5__0 : rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1 ;
    public final void rule__TimeOfDay__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11549:1: ( rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1 )
            // InternalGlobalConstantsParser.g:11550:2: rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1
            {
            pushFollow(FOLLOW_72);
            rule__TimeOfDay__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__0"


    // $ANTLR start "rule__TimeOfDay__Group_5__0__Impl"
    // InternalGlobalConstantsParser.g:11557:1: rule__TimeOfDay__Group_5__0__Impl : ( ( FullStop ) ) ;
    public final void rule__TimeOfDay__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11561:1: ( ( ( FullStop ) ) )
            // InternalGlobalConstantsParser.g:11562:1: ( ( FullStop ) )
            {
            // InternalGlobalConstantsParser.g:11562:1: ( ( FullStop ) )
            // InternalGlobalConstantsParser.g:11563:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getFullStopKeyword_5_0()); 
            }
            // InternalGlobalConstantsParser.g:11564:2: ( FullStop )
            // InternalGlobalConstantsParser.g:11564:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getFullStopKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__0__Impl"


    // $ANTLR start "rule__TimeOfDay__Group_5__1"
    // InternalGlobalConstantsParser.g:11572:1: rule__TimeOfDay__Group_5__1 : rule__TimeOfDay__Group_5__1__Impl ;
    public final void rule__TimeOfDay__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11576:1: ( rule__TimeOfDay__Group_5__1__Impl )
            // InternalGlobalConstantsParser.g:11577:2: rule__TimeOfDay__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__1"


    // $ANTLR start "rule__TimeOfDay__Group_5__1__Impl"
    // InternalGlobalConstantsParser.g:11583:1: rule__TimeOfDay__Group_5__1__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11587:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:11588:1: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:11588:1: ( RULE_INT )
            // InternalGlobalConstantsParser.g:11589:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_5_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__1__Impl"


    // $ANTLR start "rule__STGlobalConstsSource__ElementsAssignment_1"
    // InternalGlobalConstantsParser.g:11599:1: rule__STGlobalConstsSource__ElementsAssignment_1 : ( ruleSTVarGlobalDeclarationBlock ) ;
    public final void rule__STGlobalConstsSource__ElementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11603:1: ( ( ruleSTVarGlobalDeclarationBlock ) )
            // InternalGlobalConstantsParser.g:11604:2: ( ruleSTVarGlobalDeclarationBlock )
            {
            // InternalGlobalConstantsParser.g:11604:2: ( ruleSTVarGlobalDeclarationBlock )
            // InternalGlobalConstantsParser.g:11605:3: ruleSTVarGlobalDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTGlobalConstsSourceAccess().getElementsSTVarGlobalDeclarationBlockParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarGlobalDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTGlobalConstsSourceAccess().getElementsSTVarGlobalDeclarationBlockParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STGlobalConstsSource__ElementsAssignment_1"


    // $ANTLR start "rule__STVarGlobalDeclarationBlock__ConstantAssignment_2"
    // InternalGlobalConstantsParser.g:11614:1: rule__STVarGlobalDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__STVarGlobalDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11618:1: ( ( ( CONSTANT ) ) )
            // InternalGlobalConstantsParser.g:11619:2: ( ( CONSTANT ) )
            {
            // InternalGlobalConstantsParser.g:11619:2: ( ( CONSTANT ) )
            // InternalGlobalConstantsParser.g:11620:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalGlobalConstantsParser.g:11621:3: ( CONSTANT )
            // InternalGlobalConstantsParser.g:11622:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarGlobalDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__STVarGlobalDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalGlobalConstantsParser.g:11633:1: rule__STVarGlobalDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleSTVarDeclaration ) ;
    public final void rule__STVarGlobalDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11637:1: ( ( ruleSTVarDeclaration ) )
            // InternalGlobalConstantsParser.g:11638:2: ( ruleSTVarDeclaration )
            {
            // InternalGlobalConstantsParser.g:11638:2: ( ruleSTVarDeclaration )
            // InternalGlobalConstantsParser.g:11639:3: ruleSTVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarGlobalDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarGlobalDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__STExpressionSource__ExpressionAssignment_1"
    // InternalGlobalConstantsParser.g:11648:1: rule__STExpressionSource__ExpressionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STExpressionSource__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11652:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:11653:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:11653:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:11654:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceAccess().getExpressionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceAccess().getExpressionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__ExpressionAssignment_1"


    // $ANTLR start "rule__STInitializerExpressionSource__InitializerExpressionAssignment_1"
    // InternalGlobalConstantsParser.g:11663:1: rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 : ( ruleSTInitializerExpression ) ;
    public final void rule__STInitializerExpressionSource__InitializerExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11667:1: ( ( ruleSTInitializerExpression ) )
            // InternalGlobalConstantsParser.g:11668:2: ( ruleSTInitializerExpression )
            {
            // InternalGlobalConstantsParser.g:11668:2: ( ruleSTInitializerExpression )
            // InternalGlobalConstantsParser.g:11669:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceAccess().getInitializerExpressionSTInitializerExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceAccess().getInitializerExpressionSTInitializerExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__InitializerExpressionAssignment_1"


    // $ANTLR start "rule__STVarDeclaration__NameAssignment_1"
    // InternalGlobalConstantsParser.g:11678:1: rule__STVarDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__STVarDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11682:1: ( ( RULE_ID ) )
            // InternalGlobalConstantsParser.g:11683:2: ( RULE_ID )
            {
            // InternalGlobalConstantsParser.g:11683:2: ( RULE_ID )
            // InternalGlobalConstantsParser.g:11684:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__NameAssignment_1"


    // $ANTLR start "rule__STVarDeclaration__LocatedAtAssignment_2_1"
    // InternalGlobalConstantsParser.g:11693:1: rule__STVarDeclaration__LocatedAtAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__STVarDeclaration__LocatedAtAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11697:1: ( ( ( RULE_ID ) ) )
            // InternalGlobalConstantsParser.g:11698:2: ( ( RULE_ID ) )
            {
            // InternalGlobalConstantsParser.g:11698:2: ( ( RULE_ID ) )
            // InternalGlobalConstantsParser.g:11699:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementCrossReference_2_1_0()); 
            }
            // InternalGlobalConstantsParser.g:11700:3: ( RULE_ID )
            // InternalGlobalConstantsParser.g:11701:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__LocatedAtAssignment_2_1"


    // $ANTLR start "rule__STVarDeclaration__ArrayAssignment_4_0"
    // InternalGlobalConstantsParser.g:11712:1: rule__STVarDeclaration__ArrayAssignment_4_0 : ( ( ARRAY ) ) ;
    public final void rule__STVarDeclaration__ArrayAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11716:1: ( ( ( ARRAY ) ) )
            // InternalGlobalConstantsParser.g:11717:2: ( ( ARRAY ) )
            {
            // InternalGlobalConstantsParser.g:11717:2: ( ( ARRAY ) )
            // InternalGlobalConstantsParser.g:11718:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }
            // InternalGlobalConstantsParser.g:11719:3: ( ARRAY )
            // InternalGlobalConstantsParser.g:11720:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__ArrayAssignment_4_0"


    // $ANTLR start "rule__STVarDeclaration__RangesAssignment_4_1_0_1"
    // InternalGlobalConstantsParser.g:11731:1: rule__STVarDeclaration__RangesAssignment_4_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__STVarDeclaration__RangesAssignment_4_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11735:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:11736:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:11736:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:11737:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__RangesAssignment_4_1_0_1"


    // $ANTLR start "rule__STVarDeclaration__RangesAssignment_4_1_0_2_1"
    // InternalGlobalConstantsParser.g:11746:1: rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__STVarDeclaration__RangesAssignment_4_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11750:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:11751:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:11751:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:11752:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__RangesAssignment_4_1_0_2_1"


    // $ANTLR start "rule__STVarDeclaration__CountAssignment_4_1_1_1"
    // InternalGlobalConstantsParser.g:11761:1: rule__STVarDeclaration__CountAssignment_4_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__STVarDeclaration__CountAssignment_4_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11765:1: ( ( ( Asterisk ) ) )
            // InternalGlobalConstantsParser.g:11766:2: ( ( Asterisk ) )
            {
            // InternalGlobalConstantsParser.g:11766:2: ( ( Asterisk ) )
            // InternalGlobalConstantsParser.g:11767:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }
            // InternalGlobalConstantsParser.g:11768:3: ( Asterisk )
            // InternalGlobalConstantsParser.g:11769:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__CountAssignment_4_1_1_1"


    // $ANTLR start "rule__STVarDeclaration__CountAssignment_4_1_1_2_1"
    // InternalGlobalConstantsParser.g:11780:1: rule__STVarDeclaration__CountAssignment_4_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__STVarDeclaration__CountAssignment_4_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11784:1: ( ( ( Asterisk ) ) )
            // InternalGlobalConstantsParser.g:11785:2: ( ( Asterisk ) )
            {
            // InternalGlobalConstantsParser.g:11785:2: ( ( Asterisk ) )
            // InternalGlobalConstantsParser.g:11786:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }
            // InternalGlobalConstantsParser.g:11787:3: ( Asterisk )
            // InternalGlobalConstantsParser.g:11788:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__CountAssignment_4_1_1_2_1"


    // $ANTLR start "rule__STVarDeclaration__TypeAssignment_5"
    // InternalGlobalConstantsParser.g:11799:1: rule__STVarDeclaration__TypeAssignment_5 : ( ( ruleSTAnyType ) ) ;
    public final void rule__STVarDeclaration__TypeAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11803:1: ( ( ( ruleSTAnyType ) ) )
            // InternalGlobalConstantsParser.g:11804:2: ( ( ruleSTAnyType ) )
            {
            // InternalGlobalConstantsParser.g:11804:2: ( ( ruleSTAnyType ) )
            // InternalGlobalConstantsParser.g:11805:3: ( ruleSTAnyType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementCrossReference_5_0()); 
            }
            // InternalGlobalConstantsParser.g:11806:3: ( ruleSTAnyType )
            // InternalGlobalConstantsParser.g:11807:4: ruleSTAnyType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_5_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_5_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementCrossReference_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__TypeAssignment_5"


    // $ANTLR start "rule__STVarDeclaration__MaxLengthAssignment_6_1"
    // InternalGlobalConstantsParser.g:11818:1: rule__STVarDeclaration__MaxLengthAssignment_6_1 : ( ruleSTExpression ) ;
    public final void rule__STVarDeclaration__MaxLengthAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11822:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:11823:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:11823:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:11824:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__MaxLengthAssignment_6_1"


    // $ANTLR start "rule__STVarDeclaration__DefaultValueAssignment_7_1"
    // InternalGlobalConstantsParser.g:11833:1: rule__STVarDeclaration__DefaultValueAssignment_7_1 : ( ruleSTInitializerExpression ) ;
    public final void rule__STVarDeclaration__DefaultValueAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11837:1: ( ( ruleSTInitializerExpression ) )
            // InternalGlobalConstantsParser.g:11838:2: ( ruleSTInitializerExpression )
            {
            // InternalGlobalConstantsParser.g:11838:2: ( ruleSTInitializerExpression )
            // InternalGlobalConstantsParser.g:11839:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getDefaultValueSTInitializerExpressionParserRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getDefaultValueSTInitializerExpressionParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__DefaultValueAssignment_7_1"


    // $ANTLR start "rule__STTypeDeclaration__ArrayAssignment_1_0"
    // InternalGlobalConstantsParser.g:11848:1: rule__STTypeDeclaration__ArrayAssignment_1_0 : ( ( ARRAY ) ) ;
    public final void rule__STTypeDeclaration__ArrayAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11852:1: ( ( ( ARRAY ) ) )
            // InternalGlobalConstantsParser.g:11853:2: ( ( ARRAY ) )
            {
            // InternalGlobalConstantsParser.g:11853:2: ( ( ARRAY ) )
            // InternalGlobalConstantsParser.g:11854:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getArrayARRAYKeyword_1_0_0()); 
            }
            // InternalGlobalConstantsParser.g:11855:3: ( ARRAY )
            // InternalGlobalConstantsParser.g:11856:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getArrayARRAYKeyword_1_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getArrayARRAYKeyword_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getArrayARRAYKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__ArrayAssignment_1_0"


    // $ANTLR start "rule__STTypeDeclaration__RangesAssignment_1_1_0_1"
    // InternalGlobalConstantsParser.g:11867:1: rule__STTypeDeclaration__RangesAssignment_1_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__STTypeDeclaration__RangesAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11871:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:11872:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:11872:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:11873:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRangesSTExpressionParserRuleCall_1_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRangesSTExpressionParserRuleCall_1_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__RangesAssignment_1_1_0_1"


    // $ANTLR start "rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1"
    // InternalGlobalConstantsParser.g:11882:1: rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11886:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:11887:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:11887:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:11888:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRangesSTExpressionParserRuleCall_1_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRangesSTExpressionParserRuleCall_1_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1"


    // $ANTLR start "rule__STTypeDeclaration__CountAssignment_1_1_1_1"
    // InternalGlobalConstantsParser.g:11897:1: rule__STTypeDeclaration__CountAssignment_1_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__STTypeDeclaration__CountAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11901:1: ( ( ( Asterisk ) ) )
            // InternalGlobalConstantsParser.g:11902:2: ( ( Asterisk ) )
            {
            // InternalGlobalConstantsParser.g:11902:2: ( ( Asterisk ) )
            // InternalGlobalConstantsParser.g:11903:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_1_0()); 
            }
            // InternalGlobalConstantsParser.g:11904:3: ( Asterisk )
            // InternalGlobalConstantsParser.g:11905:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__CountAssignment_1_1_1_1"


    // $ANTLR start "rule__STTypeDeclaration__CountAssignment_1_1_1_2_1"
    // InternalGlobalConstantsParser.g:11916:1: rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__STTypeDeclaration__CountAssignment_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11920:1: ( ( ( Asterisk ) ) )
            // InternalGlobalConstantsParser.g:11921:2: ( ( Asterisk ) )
            {
            // InternalGlobalConstantsParser.g:11921:2: ( ( Asterisk ) )
            // InternalGlobalConstantsParser.g:11922:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_2_1_0()); 
            }
            // InternalGlobalConstantsParser.g:11923:3: ( Asterisk )
            // InternalGlobalConstantsParser.g:11924:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__CountAssignment_1_1_1_2_1"


    // $ANTLR start "rule__STTypeDeclaration__TypeAssignment_2"
    // InternalGlobalConstantsParser.g:11935:1: rule__STTypeDeclaration__TypeAssignment_2 : ( ( ruleSTAnyType ) ) ;
    public final void rule__STTypeDeclaration__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11939:1: ( ( ( ruleSTAnyType ) ) )
            // InternalGlobalConstantsParser.g:11940:2: ( ( ruleSTAnyType ) )
            {
            // InternalGlobalConstantsParser.g:11940:2: ( ( ruleSTAnyType ) )
            // InternalGlobalConstantsParser.g:11941:3: ( ruleSTAnyType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getTypeINamedElementCrossReference_2_0()); 
            }
            // InternalGlobalConstantsParser.g:11942:3: ( ruleSTAnyType )
            // InternalGlobalConstantsParser.g:11943:4: ruleSTAnyType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_2_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getTypeINamedElementCrossReference_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__TypeAssignment_2"


    // $ANTLR start "rule__STTypeDeclaration__MaxLengthAssignment_3_1"
    // InternalGlobalConstantsParser.g:11954:1: rule__STTypeDeclaration__MaxLengthAssignment_3_1 : ( ruleSTExpression ) ;
    public final void rule__STTypeDeclaration__MaxLengthAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11958:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:11959:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:11959:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:11960:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__MaxLengthAssignment_3_1"


    // $ANTLR start "rule__STElementaryInitializerExpression__ValueAssignment"
    // InternalGlobalConstantsParser.g:11969:1: rule__STElementaryInitializerExpression__ValueAssignment : ( ruleSTExpression ) ;
    public final void rule__STElementaryInitializerExpression__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11973:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:11974:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:11974:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:11975:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueSTExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueSTExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElementaryInitializerExpression__ValueAssignment"


    // $ANTLR start "rule__STArrayInitializerExpression__ValuesAssignment_1"
    // InternalGlobalConstantsParser.g:11984:1: rule__STArrayInitializerExpression__ValuesAssignment_1 : ( ruleSTArrayInitElement ) ;
    public final void rule__STArrayInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:11988:1: ( ( ruleSTArrayInitElement ) )
            // InternalGlobalConstantsParser.g:11989:2: ( ruleSTArrayInitElement )
            {
            // InternalGlobalConstantsParser.g:11989:2: ( ruleSTArrayInitElement )
            // InternalGlobalConstantsParser.g:11990:3: ruleSTArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__STArrayInitializerExpression__ValuesAssignment_2_1"
    // InternalGlobalConstantsParser.g:11999:1: rule__STArrayInitializerExpression__ValuesAssignment_2_1 : ( ruleSTArrayInitElement ) ;
    public final void rule__STArrayInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12003:1: ( ( ruleSTArrayInitElement ) )
            // InternalGlobalConstantsParser.g:12004:2: ( ruleSTArrayInitElement )
            {
            // InternalGlobalConstantsParser.g:12004:2: ( ruleSTArrayInitElement )
            // InternalGlobalConstantsParser.g:12005:3: ruleSTArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__STArrayInitElement__IndexOrInitExpressionAssignment_0"
    // InternalGlobalConstantsParser.g:12014:1: rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 : ( ruleSTInitializerExpression ) ;
    public final void rule__STArrayInitElement__IndexOrInitExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12018:1: ( ( ruleSTInitializerExpression ) )
            // InternalGlobalConstantsParser.g:12019:2: ( ruleSTInitializerExpression )
            {
            // InternalGlobalConstantsParser.g:12019:2: ( ruleSTInitializerExpression )
            // InternalGlobalConstantsParser.g:12020:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getIndexOrInitExpressionSTInitializerExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getIndexOrInitExpressionSTInitializerExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__IndexOrInitExpressionAssignment_0"


    // $ANTLR start "rule__STArrayInitElement__InitExpressionsAssignment_1_1"
    // InternalGlobalConstantsParser.g:12029:1: rule__STArrayInitElement__InitExpressionsAssignment_1_1 : ( ruleSTInitializerExpression ) ;
    public final void rule__STArrayInitElement__InitExpressionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12033:1: ( ( ruleSTInitializerExpression ) )
            // InternalGlobalConstantsParser.g:12034:2: ( ruleSTInitializerExpression )
            {
            // InternalGlobalConstantsParser.g:12034:2: ( ruleSTInitializerExpression )
            // InternalGlobalConstantsParser.g:12035:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsSTInitializerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsSTInitializerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__InitExpressionsAssignment_1_1"


    // $ANTLR start "rule__STArrayInitElement__InitExpressionsAssignment_1_2_1"
    // InternalGlobalConstantsParser.g:12044:1: rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 : ( ruleSTInitializerExpression ) ;
    public final void rule__STArrayInitElement__InitExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12048:1: ( ( ruleSTInitializerExpression ) )
            // InternalGlobalConstantsParser.g:12049:2: ( ruleSTInitializerExpression )
            {
            // InternalGlobalConstantsParser.g:12049:2: ( ruleSTInitializerExpression )
            // InternalGlobalConstantsParser.g:12050:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsSTInitializerExpressionParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsSTInitializerExpressionParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__InitExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__STStructInitializerExpression__ValuesAssignment_1"
    // InternalGlobalConstantsParser.g:12059:1: rule__STStructInitializerExpression__ValuesAssignment_1 : ( ruleSTStructInitElement ) ;
    public final void rule__STStructInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12063:1: ( ( ruleSTStructInitElement ) )
            // InternalGlobalConstantsParser.g:12064:2: ( ruleSTStructInitElement )
            {
            // InternalGlobalConstantsParser.g:12064:2: ( ruleSTStructInitElement )
            // InternalGlobalConstantsParser.g:12065:3: ruleSTStructInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getValuesSTStructInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStructInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getValuesSTStructInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__STStructInitializerExpression__ValuesAssignment_2_1"
    // InternalGlobalConstantsParser.g:12074:1: rule__STStructInitializerExpression__ValuesAssignment_2_1 : ( ruleSTStructInitElement ) ;
    public final void rule__STStructInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12078:1: ( ( ruleSTStructInitElement ) )
            // InternalGlobalConstantsParser.g:12079:2: ( ruleSTStructInitElement )
            {
            // InternalGlobalConstantsParser.g:12079:2: ( ruleSTStructInitElement )
            // InternalGlobalConstantsParser.g:12080:3: ruleSTStructInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getValuesSTStructInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStructInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getValuesSTStructInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__STStructInitElement__VariableAssignment_0"
    // InternalGlobalConstantsParser.g:12089:1: rule__STStructInitElement__VariableAssignment_0 : ( ( ruleSTFeatureName ) ) ;
    public final void rule__STStructInitElement__VariableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12093:1: ( ( ( ruleSTFeatureName ) ) )
            // InternalGlobalConstantsParser.g:12094:2: ( ( ruleSTFeatureName ) )
            {
            // InternalGlobalConstantsParser.g:12094:2: ( ( ruleSTFeatureName ) )
            // InternalGlobalConstantsParser.g:12095:3: ( ruleSTFeatureName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getVariableINamedElementCrossReference_0_0()); 
            }
            // InternalGlobalConstantsParser.g:12096:3: ( ruleSTFeatureName )
            // InternalGlobalConstantsParser.g:12097:4: ruleSTFeatureName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getVariableINamedElementSTFeatureNameParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTFeatureName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getVariableINamedElementSTFeatureNameParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getVariableINamedElementCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__VariableAssignment_0"


    // $ANTLR start "rule__STStructInitElement__ValueAssignment_2"
    // InternalGlobalConstantsParser.g:12108:1: rule__STStructInitElement__ValueAssignment_2 : ( ruleSTInitializerExpression ) ;
    public final void rule__STStructInitElement__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12112:1: ( ( ruleSTInitializerExpression ) )
            // InternalGlobalConstantsParser.g:12113:2: ( ruleSTInitializerExpression )
            {
            // InternalGlobalConstantsParser.g:12113:2: ( ruleSTInitializerExpression )
            // InternalGlobalConstantsParser.g:12114:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getValueSTInitializerExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getValueSTInitializerExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__ValueAssignment_2"


    // $ANTLR start "rule__STAssignmentStatement__LeftAssignment_0"
    // InternalGlobalConstantsParser.g:12123:1: rule__STAssignmentStatement__LeftAssignment_0 : ( ruleSTAccessExpression ) ;
    public final void rule__STAssignmentStatement__LeftAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12127:1: ( ( ruleSTAccessExpression ) )
            // InternalGlobalConstantsParser.g:12128:2: ( ruleSTAccessExpression )
            {
            // InternalGlobalConstantsParser.g:12128:2: ( ruleSTAccessExpression )
            // InternalGlobalConstantsParser.g:12129:3: ruleSTAccessExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLeftSTAccessExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLeftSTAccessExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__LeftAssignment_0"


    // $ANTLR start "rule__STAssignmentStatement__RightAssignment_2"
    // InternalGlobalConstantsParser.g:12138:1: rule__STAssignmentStatement__RightAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STAssignmentStatement__RightAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12142:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12143:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12143:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12144:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRightSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRightSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__RightAssignment_2"


    // $ANTLR start "rule__STCallStatement__CallAssignment"
    // InternalGlobalConstantsParser.g:12153:1: rule__STCallStatement__CallAssignment : ( ruleSTAccessExpression ) ;
    public final void rule__STCallStatement__CallAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12157:1: ( ( ruleSTAccessExpression ) )
            // InternalGlobalConstantsParser.g:12158:2: ( ruleSTAccessExpression )
            {
            // InternalGlobalConstantsParser.g:12158:2: ( ruleSTAccessExpression )
            // InternalGlobalConstantsParser.g:12159:3: ruleSTAccessExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallStatementAccess().getCallSTAccessExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallStatementAccess().getCallSTAccessExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallStatement__CallAssignment"


    // $ANTLR start "rule__STCallUnnamedArgument__ArgumentAssignment"
    // InternalGlobalConstantsParser.g:12168:1: rule__STCallUnnamedArgument__ArgumentAssignment : ( ruleSTExpression ) ;
    public final void rule__STCallUnnamedArgument__ArgumentAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12172:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12173:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12173:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12174:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentAccess().getArgumentSTExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentAccess().getArgumentSTExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallUnnamedArgument__ArgumentAssignment"


    // $ANTLR start "rule__STCallNamedInputArgument__ParameterAssignment_0"
    // InternalGlobalConstantsParser.g:12183:1: rule__STCallNamedInputArgument__ParameterAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__STCallNamedInputArgument__ParameterAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12187:1: ( ( ( RULE_ID ) ) )
            // InternalGlobalConstantsParser.g:12188:2: ( ( RULE_ID ) )
            {
            // InternalGlobalConstantsParser.g:12188:2: ( ( RULE_ID ) )
            // InternalGlobalConstantsParser.g:12189:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterINamedElementCrossReference_0_0()); 
            }
            // InternalGlobalConstantsParser.g:12190:3: ( RULE_ID )
            // InternalGlobalConstantsParser.g:12191:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterINamedElementIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterINamedElementIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterINamedElementCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__ParameterAssignment_0"


    // $ANTLR start "rule__STCallNamedInputArgument__ArgumentAssignment_2"
    // InternalGlobalConstantsParser.g:12202:1: rule__STCallNamedInputArgument__ArgumentAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STCallNamedInputArgument__ArgumentAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12206:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12207:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12207:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12208:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getArgumentSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getArgumentSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__ArgumentAssignment_2"


    // $ANTLR start "rule__STCallNamedOutputArgument__NotAssignment_0"
    // InternalGlobalConstantsParser.g:12217:1: rule__STCallNamedOutputArgument__NotAssignment_0 : ( ( NOT ) ) ;
    public final void rule__STCallNamedOutputArgument__NotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12221:1: ( ( ( NOT ) ) )
            // InternalGlobalConstantsParser.g:12222:2: ( ( NOT ) )
            {
            // InternalGlobalConstantsParser.g:12222:2: ( ( NOT ) )
            // InternalGlobalConstantsParser.g:12223:3: ( NOT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }
            // InternalGlobalConstantsParser.g:12224:3: ( NOT )
            // InternalGlobalConstantsParser.g:12225:4: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__NotAssignment_0"


    // $ANTLR start "rule__STCallNamedOutputArgument__ParameterAssignment_1"
    // InternalGlobalConstantsParser.g:12236:1: rule__STCallNamedOutputArgument__ParameterAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__STCallNamedOutputArgument__ParameterAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12240:1: ( ( ( RULE_ID ) ) )
            // InternalGlobalConstantsParser.g:12241:2: ( ( RULE_ID ) )
            {
            // InternalGlobalConstantsParser.g:12241:2: ( ( RULE_ID ) )
            // InternalGlobalConstantsParser.g:12242:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterINamedElementCrossReference_1_0()); 
            }
            // InternalGlobalConstantsParser.g:12243:3: ( RULE_ID )
            // InternalGlobalConstantsParser.g:12244:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterINamedElementIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterINamedElementIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterINamedElementCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__ParameterAssignment_1"


    // $ANTLR start "rule__STCallNamedOutputArgument__ArgumentAssignment_3"
    // InternalGlobalConstantsParser.g:12255:1: rule__STCallNamedOutputArgument__ArgumentAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STCallNamedOutputArgument__ArgumentAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12259:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12260:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12260:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12261:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getArgumentSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getArgumentSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__ArgumentAssignment_3"


    // $ANTLR start "rule__STIfStatement__ConditionAssignment_1"
    // InternalGlobalConstantsParser.g:12270:1: rule__STIfStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STIfStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12274:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12275:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12275:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12276:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STIfStatement__StatementsAssignment_3"
    // InternalGlobalConstantsParser.g:12285:1: rule__STIfStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STIfStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12289:1: ( ( ruleSTStatement ) )
            // InternalGlobalConstantsParser.g:12290:2: ( ruleSTStatement )
            {
            // InternalGlobalConstantsParser.g:12290:2: ( ruleSTStatement )
            // InternalGlobalConstantsParser.g:12291:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STIfStatement__ElseifsAssignment_4"
    // InternalGlobalConstantsParser.g:12300:1: rule__STIfStatement__ElseifsAssignment_4 : ( ruleSTElseIfPart ) ;
    public final void rule__STIfStatement__ElseifsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12304:1: ( ( ruleSTElseIfPart ) )
            // InternalGlobalConstantsParser.g:12305:2: ( ruleSTElseIfPart )
            {
            // InternalGlobalConstantsParser.g:12305:2: ( ruleSTElseIfPart )
            // InternalGlobalConstantsParser.g:12306:3: ruleSTElseIfPart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ElseifsAssignment_4"


    // $ANTLR start "rule__STIfStatement__ElseAssignment_5"
    // InternalGlobalConstantsParser.g:12315:1: rule__STIfStatement__ElseAssignment_5 : ( ruleSTElsePart ) ;
    public final void rule__STIfStatement__ElseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12319:1: ( ( ruleSTElsePart ) )
            // InternalGlobalConstantsParser.g:12320:2: ( ruleSTElsePart )
            {
            // InternalGlobalConstantsParser.g:12320:2: ( ruleSTElsePart )
            // InternalGlobalConstantsParser.g:12321:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ElseAssignment_5"


    // $ANTLR start "rule__STElseIfPart__ConditionAssignment_1"
    // InternalGlobalConstantsParser.g:12330:1: rule__STElseIfPart__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STElseIfPart__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12334:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12335:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12335:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12336:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__ConditionAssignment_1"


    // $ANTLR start "rule__STElseIfPart__StatementsAssignment_3"
    // InternalGlobalConstantsParser.g:12345:1: rule__STElseIfPart__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STElseIfPart__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12349:1: ( ( ruleSTStatement ) )
            // InternalGlobalConstantsParser.g:12350:2: ( ruleSTStatement )
            {
            // InternalGlobalConstantsParser.g:12350:2: ( ruleSTStatement )
            // InternalGlobalConstantsParser.g:12351:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__StatementsAssignment_3"


    // $ANTLR start "rule__STCaseStatement__SelectorAssignment_1"
    // InternalGlobalConstantsParser.g:12360:1: rule__STCaseStatement__SelectorAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseStatement__SelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12364:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12365:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12365:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12366:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__SelectorAssignment_1"


    // $ANTLR start "rule__STCaseStatement__CasesAssignment_3"
    // InternalGlobalConstantsParser.g:12375:1: rule__STCaseStatement__CasesAssignment_3 : ( ruleSTCaseCases ) ;
    public final void rule__STCaseStatement__CasesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12379:1: ( ( ruleSTCaseCases ) )
            // InternalGlobalConstantsParser.g:12380:2: ( ruleSTCaseCases )
            {
            // InternalGlobalConstantsParser.g:12380:2: ( ruleSTCaseCases )
            // InternalGlobalConstantsParser.g:12381:3: ruleSTCaseCases
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__CasesAssignment_3"


    // $ANTLR start "rule__STCaseStatement__ElseAssignment_4"
    // InternalGlobalConstantsParser.g:12390:1: rule__STCaseStatement__ElseAssignment_4 : ( ruleSTElsePart ) ;
    public final void rule__STCaseStatement__ElseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12394:1: ( ( ruleSTElsePart ) )
            // InternalGlobalConstantsParser.g:12395:2: ( ruleSTElsePart )
            {
            // InternalGlobalConstantsParser.g:12395:2: ( ruleSTElsePart )
            // InternalGlobalConstantsParser.g:12396:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__ElseAssignment_4"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_0"
    // InternalGlobalConstantsParser.g:12405:1: rule__STCaseCases__ConditionsAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12409:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12410:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12410:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12411:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_0"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_1_1"
    // InternalGlobalConstantsParser.g:12420:1: rule__STCaseCases__ConditionsAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12424:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12425:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12425:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12426:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_1_1"


    // $ANTLR start "rule__STCaseCases__StatementsAssignment_3"
    // InternalGlobalConstantsParser.g:12435:1: rule__STCaseCases__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STCaseCases__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12439:1: ( ( ruleSTStatement ) )
            // InternalGlobalConstantsParser.g:12440:2: ( ruleSTStatement )
            {
            // InternalGlobalConstantsParser.g:12440:2: ( ruleSTStatement )
            // InternalGlobalConstantsParser.g:12441:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__StatementsAssignment_3"


    // $ANTLR start "rule__STElsePart__StatementsAssignment_2"
    // InternalGlobalConstantsParser.g:12450:1: rule__STElsePart__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STElsePart__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12454:1: ( ( ruleSTStatement ) )
            // InternalGlobalConstantsParser.g:12455:2: ( ruleSTStatement )
            {
            // InternalGlobalConstantsParser.g:12455:2: ( ruleSTStatement )
            // InternalGlobalConstantsParser.g:12456:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__StatementsAssignment_2"


    // $ANTLR start "rule__STForStatement__VariableAssignment_1"
    // InternalGlobalConstantsParser.g:12465:1: rule__STForStatement__VariableAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__STForStatement__VariableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12469:1: ( ( ( RULE_ID ) ) )
            // InternalGlobalConstantsParser.g:12470:2: ( ( RULE_ID ) )
            {
            // InternalGlobalConstantsParser.g:12470:2: ( ( RULE_ID ) )
            // InternalGlobalConstantsParser.g:12471:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationCrossReference_1_0()); 
            }
            // InternalGlobalConstantsParser.g:12472:3: ( RULE_ID )
            // InternalGlobalConstantsParser.g:12473:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__VariableAssignment_1"


    // $ANTLR start "rule__STForStatement__FromAssignment_3"
    // InternalGlobalConstantsParser.g:12484:1: rule__STForStatement__FromAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__FromAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12488:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12489:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12489:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12490:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFromSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFromSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__FromAssignment_3"


    // $ANTLR start "rule__STForStatement__ToAssignment_5"
    // InternalGlobalConstantsParser.g:12499:1: rule__STForStatement__ToAssignment_5 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ToAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12503:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12504:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12504:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12505:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ToAssignment_5"


    // $ANTLR start "rule__STForStatement__ByAssignment_6_1"
    // InternalGlobalConstantsParser.g:12514:1: rule__STForStatement__ByAssignment_6_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ByAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12518:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12519:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12519:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12520:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ByAssignment_6_1"


    // $ANTLR start "rule__STForStatement__StatementsAssignment_8"
    // InternalGlobalConstantsParser.g:12529:1: rule__STForStatement__StatementsAssignment_8 : ( ruleSTStatement ) ;
    public final void rule__STForStatement__StatementsAssignment_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12533:1: ( ( ruleSTStatement ) )
            // InternalGlobalConstantsParser.g:12534:2: ( ruleSTStatement )
            {
            // InternalGlobalConstantsParser.g:12534:2: ( ruleSTStatement )
            // InternalGlobalConstantsParser.g:12535:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__StatementsAssignment_8"


    // $ANTLR start "rule__STWhileStatement__ConditionAssignment_1"
    // InternalGlobalConstantsParser.g:12544:1: rule__STWhileStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STWhileStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12548:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12549:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12549:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12550:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STWhileStatement__StatementsAssignment_3"
    // InternalGlobalConstantsParser.g:12559:1: rule__STWhileStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STWhileStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12563:1: ( ( ruleSTStatement ) )
            // InternalGlobalConstantsParser.g:12564:2: ( ruleSTStatement )
            {
            // InternalGlobalConstantsParser.g:12564:2: ( ruleSTStatement )
            // InternalGlobalConstantsParser.g:12565:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STRepeatStatement__StatementsAssignment_1"
    // InternalGlobalConstantsParser.g:12574:1: rule__STRepeatStatement__StatementsAssignment_1 : ( ruleSTStatement ) ;
    public final void rule__STRepeatStatement__StatementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12578:1: ( ( ruleSTStatement ) )
            // InternalGlobalConstantsParser.g:12579:2: ( ruleSTStatement )
            {
            // InternalGlobalConstantsParser.g:12579:2: ( ruleSTStatement )
            // InternalGlobalConstantsParser.g:12580:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__StatementsAssignment_1"


    // $ANTLR start "rule__STRepeatStatement__ConditionAssignment_3"
    // InternalGlobalConstantsParser.g:12589:1: rule__STRepeatStatement__ConditionAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STRepeatStatement__ConditionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12593:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12594:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12594:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12595:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__ConditionAssignment_3"


    // $ANTLR start "rule__STSubrangeExpression__OpAssignment_1_0_1"
    // InternalGlobalConstantsParser.g:12604:1: rule__STSubrangeExpression__OpAssignment_1_0_1 : ( ruleSubrangeOperator ) ;
    public final void rule__STSubrangeExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12608:1: ( ( ruleSubrangeOperator ) )
            // InternalGlobalConstantsParser.g:12609:2: ( ruleSubrangeOperator )
            {
            // InternalGlobalConstantsParser.g:12609:2: ( ruleSubrangeOperator )
            // InternalGlobalConstantsParser.g:12610:3: ruleSubrangeOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubrangeOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STSubrangeExpression__RightAssignment_1_1"
    // InternalGlobalConstantsParser.g:12619:1: rule__STSubrangeExpression__RightAssignment_1_1 : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12623:1: ( ( ruleSTOrExpression ) )
            // InternalGlobalConstantsParser.g:12624:2: ( ruleSTOrExpression )
            {
            // InternalGlobalConstantsParser.g:12624:2: ( ruleSTOrExpression )
            // InternalGlobalConstantsParser.g:12625:3: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STOrExpression__OpAssignment_1_0_1"
    // InternalGlobalConstantsParser.g:12634:1: rule__STOrExpression__OpAssignment_1_0_1 : ( ruleOrOperator ) ;
    public final void rule__STOrExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12638:1: ( ( ruleOrOperator ) )
            // InternalGlobalConstantsParser.g:12639:2: ( ruleOrOperator )
            {
            // InternalGlobalConstantsParser.g:12639:2: ( ruleOrOperator )
            // InternalGlobalConstantsParser.g:12640:3: ruleOrOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STOrExpression__RightAssignment_1_1"
    // InternalGlobalConstantsParser.g:12649:1: rule__STOrExpression__RightAssignment_1_1 : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12653:1: ( ( ruleSTXorExpression ) )
            // InternalGlobalConstantsParser.g:12654:2: ( ruleSTXorExpression )
            {
            // InternalGlobalConstantsParser.g:12654:2: ( ruleSTXorExpression )
            // InternalGlobalConstantsParser.g:12655:3: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STXorExpression__OpAssignment_1_0_1"
    // InternalGlobalConstantsParser.g:12664:1: rule__STXorExpression__OpAssignment_1_0_1 : ( ruleXorOperator ) ;
    public final void rule__STXorExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12668:1: ( ( ruleXorOperator ) )
            // InternalGlobalConstantsParser.g:12669:2: ( ruleXorOperator )
            {
            // InternalGlobalConstantsParser.g:12669:2: ( ruleXorOperator )
            // InternalGlobalConstantsParser.g:12670:3: ruleXorOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXorOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STXorExpression__RightAssignment_1_1"
    // InternalGlobalConstantsParser.g:12679:1: rule__STXorExpression__RightAssignment_1_1 : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12683:1: ( ( ruleSTAndExpression ) )
            // InternalGlobalConstantsParser.g:12684:2: ( ruleSTAndExpression )
            {
            // InternalGlobalConstantsParser.g:12684:2: ( ruleSTAndExpression )
            // InternalGlobalConstantsParser.g:12685:3: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAndExpression__OpAssignment_1_0_1"
    // InternalGlobalConstantsParser.g:12694:1: rule__STAndExpression__OpAssignment_1_0_1 : ( ruleAndOperator ) ;
    public final void rule__STAndExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12698:1: ( ( ruleAndOperator ) )
            // InternalGlobalConstantsParser.g:12699:2: ( ruleAndOperator )
            {
            // InternalGlobalConstantsParser.g:12699:2: ( ruleAndOperator )
            // InternalGlobalConstantsParser.g:12700:3: ruleAndOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAndOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAndExpression__RightAssignment_1_1"
    // InternalGlobalConstantsParser.g:12709:1: rule__STAndExpression__RightAssignment_1_1 : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12713:1: ( ( ruleSTEqualityExpression ) )
            // InternalGlobalConstantsParser.g:12714:2: ( ruleSTEqualityExpression )
            {
            // InternalGlobalConstantsParser.g:12714:2: ( ruleSTEqualityExpression )
            // InternalGlobalConstantsParser.g:12715:3: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STEqualityExpression__OpAssignment_1_0_1"
    // InternalGlobalConstantsParser.g:12724:1: rule__STEqualityExpression__OpAssignment_1_0_1 : ( ruleEqualityOperator ) ;
    public final void rule__STEqualityExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12728:1: ( ( ruleEqualityOperator ) )
            // InternalGlobalConstantsParser.g:12729:2: ( ruleEqualityOperator )
            {
            // InternalGlobalConstantsParser.g:12729:2: ( ruleEqualityOperator )
            // InternalGlobalConstantsParser.g:12730:3: ruleEqualityOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STEqualityExpression__RightAssignment_1_1"
    // InternalGlobalConstantsParser.g:12739:1: rule__STEqualityExpression__RightAssignment_1_1 : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12743:1: ( ( ruleSTComparisonExpression ) )
            // InternalGlobalConstantsParser.g:12744:2: ( ruleSTComparisonExpression )
            {
            // InternalGlobalConstantsParser.g:12744:2: ( ruleSTComparisonExpression )
            // InternalGlobalConstantsParser.g:12745:3: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STComparisonExpression__OpAssignment_1_0_1"
    // InternalGlobalConstantsParser.g:12754:1: rule__STComparisonExpression__OpAssignment_1_0_1 : ( ruleCompareOperator ) ;
    public final void rule__STComparisonExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12758:1: ( ( ruleCompareOperator ) )
            // InternalGlobalConstantsParser.g:12759:2: ( ruleCompareOperator )
            {
            // InternalGlobalConstantsParser.g:12759:2: ( ruleCompareOperator )
            // InternalGlobalConstantsParser.g:12760:3: ruleCompareOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STComparisonExpression__RightAssignment_1_1"
    // InternalGlobalConstantsParser.g:12769:1: rule__STComparisonExpression__RightAssignment_1_1 : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12773:1: ( ( ruleSTAddSubExpression ) )
            // InternalGlobalConstantsParser.g:12774:2: ( ruleSTAddSubExpression )
            {
            // InternalGlobalConstantsParser.g:12774:2: ( ruleSTAddSubExpression )
            // InternalGlobalConstantsParser.g:12775:3: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAddSubExpression__OpAssignment_1_0_1"
    // InternalGlobalConstantsParser.g:12784:1: rule__STAddSubExpression__OpAssignment_1_0_1 : ( ruleAddSubOperator ) ;
    public final void rule__STAddSubExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12788:1: ( ( ruleAddSubOperator ) )
            // InternalGlobalConstantsParser.g:12789:2: ( ruleAddSubOperator )
            {
            // InternalGlobalConstantsParser.g:12789:2: ( ruleAddSubOperator )
            // InternalGlobalConstantsParser.g:12790:3: ruleAddSubOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAddSubOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAddSubExpression__RightAssignment_1_1"
    // InternalGlobalConstantsParser.g:12799:1: rule__STAddSubExpression__RightAssignment_1_1 : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12803:1: ( ( ruleSTMulDivModExpression ) )
            // InternalGlobalConstantsParser.g:12804:2: ( ruleSTMulDivModExpression )
            {
            // InternalGlobalConstantsParser.g:12804:2: ( ruleSTMulDivModExpression )
            // InternalGlobalConstantsParser.g:12805:3: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STMulDivModExpression__OpAssignment_1_0_1"
    // InternalGlobalConstantsParser.g:12814:1: rule__STMulDivModExpression__OpAssignment_1_0_1 : ( ruleMulDivModOperator ) ;
    public final void rule__STMulDivModExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12818:1: ( ( ruleMulDivModOperator ) )
            // InternalGlobalConstantsParser.g:12819:2: ( ruleMulDivModOperator )
            {
            // InternalGlobalConstantsParser.g:12819:2: ( ruleMulDivModOperator )
            // InternalGlobalConstantsParser.g:12820:3: ruleMulDivModOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulDivModOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STMulDivModExpression__RightAssignment_1_1"
    // InternalGlobalConstantsParser.g:12829:1: rule__STMulDivModExpression__RightAssignment_1_1 : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12833:1: ( ( ruleSTPowerExpression ) )
            // InternalGlobalConstantsParser.g:12834:2: ( ruleSTPowerExpression )
            {
            // InternalGlobalConstantsParser.g:12834:2: ( ruleSTPowerExpression )
            // InternalGlobalConstantsParser.g:12835:3: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STPowerExpression__OpAssignment_1_0_1"
    // InternalGlobalConstantsParser.g:12844:1: rule__STPowerExpression__OpAssignment_1_0_1 : ( rulePowerOperator ) ;
    public final void rule__STPowerExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12848:1: ( ( rulePowerOperator ) )
            // InternalGlobalConstantsParser.g:12849:2: ( rulePowerOperator )
            {
            // InternalGlobalConstantsParser.g:12849:2: ( rulePowerOperator )
            // InternalGlobalConstantsParser.g:12850:3: rulePowerOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePowerOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STPowerExpression__RightAssignment_1_1"
    // InternalGlobalConstantsParser.g:12859:1: rule__STPowerExpression__RightAssignment_1_1 : ( ruleSTUnaryExpression ) ;
    public final void rule__STPowerExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12863:1: ( ( ruleSTUnaryExpression ) )
            // InternalGlobalConstantsParser.g:12864:2: ( ruleSTUnaryExpression )
            {
            // InternalGlobalConstantsParser.g:12864:2: ( ruleSTUnaryExpression )
            // InternalGlobalConstantsParser.g:12865:3: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightSTUnaryExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightSTUnaryExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STUnaryExpression__OpAssignment_1_1"
    // InternalGlobalConstantsParser.g:12874:1: rule__STUnaryExpression__OpAssignment_1_1 : ( ruleUnaryOperator ) ;
    public final void rule__STUnaryExpression__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12878:1: ( ( ruleUnaryOperator ) )
            // InternalGlobalConstantsParser.g:12879:2: ( ruleUnaryOperator )
            {
            // InternalGlobalConstantsParser.g:12879:2: ( ruleUnaryOperator )
            // InternalGlobalConstantsParser.g:12880:3: ruleUnaryOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__OpAssignment_1_1"


    // $ANTLR start "rule__STUnaryExpression__ExpressionAssignment_1_2"
    // InternalGlobalConstantsParser.g:12889:1: rule__STUnaryExpression__ExpressionAssignment_1_2 : ( ruleSTUnaryExpression ) ;
    public final void rule__STUnaryExpression__ExpressionAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12893:1: ( ( ruleSTUnaryExpression ) )
            // InternalGlobalConstantsParser.g:12894:2: ( ruleSTUnaryExpression )
            {
            // InternalGlobalConstantsParser.g:12894:2: ( ruleSTUnaryExpression )
            // InternalGlobalConstantsParser.g:12895:3: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getExpressionSTUnaryExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getExpressionSTUnaryExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__ExpressionAssignment_1_2"


    // $ANTLR start "rule__STAccessExpression__MemberAssignment_1_0_2"
    // InternalGlobalConstantsParser.g:12904:1: rule__STAccessExpression__MemberAssignment_1_0_2 : ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) ) ;
    public final void rule__STAccessExpression__MemberAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12908:1: ( ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) ) )
            // InternalGlobalConstantsParser.g:12909:2: ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) )
            {
            // InternalGlobalConstantsParser.g:12909:2: ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) )
            // InternalGlobalConstantsParser.g:12910:3: ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getMemberAlternatives_1_0_2_0()); 
            }
            // InternalGlobalConstantsParser.g:12911:3: ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 )
            // InternalGlobalConstantsParser.g:12911:4: rule__STAccessExpression__MemberAlternatives_1_0_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__MemberAlternatives_1_0_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getMemberAlternatives_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__MemberAssignment_1_0_2"


    // $ANTLR start "rule__STAccessExpression__IndexAssignment_1_1_2"
    // InternalGlobalConstantsParser.g:12919:1: rule__STAccessExpression__IndexAssignment_1_1_2 : ( ruleSTExpression ) ;
    public final void rule__STAccessExpression__IndexAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12923:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12924:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12924:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12925:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__IndexAssignment_1_1_2"


    // $ANTLR start "rule__STAccessExpression__IndexAssignment_1_1_3_1"
    // InternalGlobalConstantsParser.g:12934:1: rule__STAccessExpression__IndexAssignment_1_1_3_1 : ( ruleSTExpression ) ;
    public final void rule__STAccessExpression__IndexAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12938:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:12939:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:12939:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:12940:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__IndexAssignment_1_1_3_1"


    // $ANTLR start "rule__STFeatureExpression__FeatureAssignment_1"
    // InternalGlobalConstantsParser.g:12949:1: rule__STFeatureExpression__FeatureAssignment_1 : ( ( ruleSTFeatureName ) ) ;
    public final void rule__STFeatureExpression__FeatureAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12953:1: ( ( ( ruleSTFeatureName ) ) )
            // InternalGlobalConstantsParser.g:12954:2: ( ( ruleSTFeatureName ) )
            {
            // InternalGlobalConstantsParser.g:12954:2: ( ( ruleSTFeatureName ) )
            // InternalGlobalConstantsParser.g:12955:3: ( ruleSTFeatureName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementCrossReference_1_0()); 
            }
            // InternalGlobalConstantsParser.g:12956:3: ( ruleSTFeatureName )
            // InternalGlobalConstantsParser.g:12957:4: ruleSTFeatureName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementSTFeatureNameParserRuleCall_1_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTFeatureName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementSTFeatureNameParserRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__FeatureAssignment_1"


    // $ANTLR start "rule__STFeatureExpression__CallAssignment_2_0"
    // InternalGlobalConstantsParser.g:12968:1: rule__STFeatureExpression__CallAssignment_2_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STFeatureExpression__CallAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12972:1: ( ( ( LeftParenthesis ) ) )
            // InternalGlobalConstantsParser.g:12973:2: ( ( LeftParenthesis ) )
            {
            // InternalGlobalConstantsParser.g:12973:2: ( ( LeftParenthesis ) )
            // InternalGlobalConstantsParser.g:12974:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }
            // InternalGlobalConstantsParser.g:12975:3: ( LeftParenthesis )
            // InternalGlobalConstantsParser.g:12976:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__CallAssignment_2_0"


    // $ANTLR start "rule__STFeatureExpression__ParametersAssignment_2_1_0"
    // InternalGlobalConstantsParser.g:12987:1: rule__STFeatureExpression__ParametersAssignment_2_1_0 : ( ruleSTCallArgument ) ;
    public final void rule__STFeatureExpression__ParametersAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:12991:1: ( ( ruleSTCallArgument ) )
            // InternalGlobalConstantsParser.g:12992:2: ( ruleSTCallArgument )
            {
            // InternalGlobalConstantsParser.g:12992:2: ( ruleSTCallArgument )
            // InternalGlobalConstantsParser.g:12993:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__ParametersAssignment_2_1_0"


    // $ANTLR start "rule__STFeatureExpression__ParametersAssignment_2_1_1_1"
    // InternalGlobalConstantsParser.g:13002:1: rule__STFeatureExpression__ParametersAssignment_2_1_1_1 : ( ruleSTCallArgument ) ;
    public final void rule__STFeatureExpression__ParametersAssignment_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13006:1: ( ( ruleSTCallArgument ) )
            // InternalGlobalConstantsParser.g:13007:2: ( ruleSTCallArgument )
            {
            // InternalGlobalConstantsParser.g:13007:2: ( ruleSTCallArgument )
            // InternalGlobalConstantsParser.g:13008:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__ParametersAssignment_2_1_1_1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__FeatureAssignment_1"
    // InternalGlobalConstantsParser.g:13017:1: rule__STBuiltinFeatureExpression__FeatureAssignment_1 : ( ruleSTBuiltinFeature ) ;
    public final void rule__STBuiltinFeatureExpression__FeatureAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13021:1: ( ( ruleSTBuiltinFeature ) )
            // InternalGlobalConstantsParser.g:13022:2: ( ruleSTBuiltinFeature )
            {
            // InternalGlobalConstantsParser.g:13022:2: ( ruleSTBuiltinFeature )
            // InternalGlobalConstantsParser.g:13023:3: ruleSTBuiltinFeature
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getFeatureSTBuiltinFeatureEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTBuiltinFeature();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getFeatureSTBuiltinFeatureEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__FeatureAssignment_1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__CallAssignment_2_0"
    // InternalGlobalConstantsParser.g:13032:1: rule__STBuiltinFeatureExpression__CallAssignment_2_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STBuiltinFeatureExpression__CallAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13036:1: ( ( ( LeftParenthesis ) ) )
            // InternalGlobalConstantsParser.g:13037:2: ( ( LeftParenthesis ) )
            {
            // InternalGlobalConstantsParser.g:13037:2: ( ( LeftParenthesis ) )
            // InternalGlobalConstantsParser.g:13038:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }
            // InternalGlobalConstantsParser.g:13039:3: ( LeftParenthesis )
            // InternalGlobalConstantsParser.g:13040:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__CallAssignment_2_0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0"
    // InternalGlobalConstantsParser.g:13051:1: rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 : ( ruleSTCallArgument ) ;
    public final void rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13055:1: ( ( ruleSTCallArgument ) )
            // InternalGlobalConstantsParser.g:13056:2: ( ruleSTCallArgument )
            {
            // InternalGlobalConstantsParser.g:13056:2: ( ruleSTCallArgument )
            // InternalGlobalConstantsParser.g:13057:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1"
    // InternalGlobalConstantsParser.g:13066:1: rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 : ( ruleSTCallArgument ) ;
    public final void rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13070:1: ( ( ruleSTCallArgument ) )
            // InternalGlobalConstantsParser.g:13071:2: ( ruleSTCallArgument )
            {
            // InternalGlobalConstantsParser.g:13071:2: ( ruleSTCallArgument )
            // InternalGlobalConstantsParser.g:13072:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1"


    // $ANTLR start "rule__STMultibitPartialExpression__SpecifierAssignment_1"
    // InternalGlobalConstantsParser.g:13081:1: rule__STMultibitPartialExpression__SpecifierAssignment_1 : ( ruleSTMultiBitAccessSpecifier ) ;
    public final void rule__STMultibitPartialExpression__SpecifierAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13085:1: ( ( ruleSTMultiBitAccessSpecifier ) )
            // InternalGlobalConstantsParser.g:13086:2: ( ruleSTMultiBitAccessSpecifier )
            {
            // InternalGlobalConstantsParser.g:13086:2: ( ruleSTMultiBitAccessSpecifier )
            // InternalGlobalConstantsParser.g:13087:3: ruleSTMultiBitAccessSpecifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierSTMultiBitAccessSpecifierEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMultiBitAccessSpecifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierSTMultiBitAccessSpecifierEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__SpecifierAssignment_1"


    // $ANTLR start "rule__STMultibitPartialExpression__IndexAssignment_2_0"
    // InternalGlobalConstantsParser.g:13096:1: rule__STMultibitPartialExpression__IndexAssignment_2_0 : ( RULE_INT ) ;
    public final void rule__STMultibitPartialExpression__IndexAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13100:1: ( ( RULE_INT ) )
            // InternalGlobalConstantsParser.g:13101:2: ( RULE_INT )
            {
            // InternalGlobalConstantsParser.g:13101:2: ( RULE_INT )
            // InternalGlobalConstantsParser.g:13102:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexINTTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexINTTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__IndexAssignment_2_0"


    // $ANTLR start "rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1"
    // InternalGlobalConstantsParser.g:13111:1: rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 : ( ruleSTExpression ) ;
    public final void rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13115:1: ( ( ruleSTExpression ) )
            // InternalGlobalConstantsParser.g:13116:2: ( ruleSTExpression )
            {
            // InternalGlobalConstantsParser.g:13116:2: ( ruleSTExpression )
            // InternalGlobalConstantsParser.g:13117:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionSTExpressionParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionSTExpressionParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1"


    // $ANTLR start "rule__STNumericLiteral__TypeAssignment_0_0"
    // InternalGlobalConstantsParser.g:13126:1: rule__STNumericLiteral__TypeAssignment_0_0 : ( ( ruleSTNumericLiteralType ) ) ;
    public final void rule__STNumericLiteral__TypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13130:1: ( ( ( ruleSTNumericLiteralType ) ) )
            // InternalGlobalConstantsParser.g:13131:2: ( ( ruleSTNumericLiteralType ) )
            {
            // InternalGlobalConstantsParser.g:13131:2: ( ( ruleSTNumericLiteralType ) )
            // InternalGlobalConstantsParser.g:13132:3: ( ruleSTNumericLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }
            // InternalGlobalConstantsParser.g:13133:3: ( ruleSTNumericLiteralType )
            // InternalGlobalConstantsParser.g:13134:4: ruleSTNumericLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeSTNumericLiteralTypeParserRuleCall_0_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeSTNumericLiteralTypeParserRuleCall_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__TypeAssignment_0_0"


    // $ANTLR start "rule__STNumericLiteral__ValueAssignment_1"
    // InternalGlobalConstantsParser.g:13145:1: rule__STNumericLiteral__ValueAssignment_1 : ( ruleNumeric ) ;
    public final void rule__STNumericLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13149:1: ( ( ruleNumeric ) )
            // InternalGlobalConstantsParser.g:13150:2: ( ruleNumeric )
            {
            // InternalGlobalConstantsParser.g:13150:2: ( ruleNumeric )
            // InternalGlobalConstantsParser.g:13151:3: ruleNumeric
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueNumericParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNumeric();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueNumericParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__ValueAssignment_1"


    // $ANTLR start "rule__STDateLiteral__TypeAssignment_0"
    // InternalGlobalConstantsParser.g:13160:1: rule__STDateLiteral__TypeAssignment_0 : ( ( ruleSTDateLiteralType ) ) ;
    public final void rule__STDateLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13164:1: ( ( ( ruleSTDateLiteralType ) ) )
            // InternalGlobalConstantsParser.g:13165:2: ( ( ruleSTDateLiteralType ) )
            {
            // InternalGlobalConstantsParser.g:13165:2: ( ( ruleSTDateLiteralType ) )
            // InternalGlobalConstantsParser.g:13166:3: ( ruleSTDateLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalGlobalConstantsParser.g:13167:3: ( ruleSTDateLiteralType )
            // InternalGlobalConstantsParser.g:13168:4: ruleSTDateLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeSTDateLiteralTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTDateLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeSTDateLiteralTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STDateLiteral__ValueAssignment_2"
    // InternalGlobalConstantsParser.g:13179:1: rule__STDateLiteral__ValueAssignment_2 : ( ruleDate ) ;
    public final void rule__STDateLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13183:1: ( ( ruleDate ) )
            // InternalGlobalConstantsParser.g:13184:2: ( ruleDate )
            {
            // InternalGlobalConstantsParser.g:13184:2: ( ruleDate )
            // InternalGlobalConstantsParser.g:13185:3: ruleDate
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getValueDateParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getValueDateParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STTimeLiteral__TypeAssignment_0"
    // InternalGlobalConstantsParser.g:13194:1: rule__STTimeLiteral__TypeAssignment_0 : ( ( ruleSTTimeLiteralType ) ) ;
    public final void rule__STTimeLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13198:1: ( ( ( ruleSTTimeLiteralType ) ) )
            // InternalGlobalConstantsParser.g:13199:2: ( ( ruleSTTimeLiteralType ) )
            {
            // InternalGlobalConstantsParser.g:13199:2: ( ( ruleSTTimeLiteralType ) )
            // InternalGlobalConstantsParser.g:13200:3: ( ruleSTTimeLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalGlobalConstantsParser.g:13201:3: ( ruleSTTimeLiteralType )
            // InternalGlobalConstantsParser.g:13202:4: ruleSTTimeLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeSTTimeLiteralTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeSTTimeLiteralTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STTimeLiteral__ValueAssignment_2"
    // InternalGlobalConstantsParser.g:13213:1: rule__STTimeLiteral__ValueAssignment_2 : ( ruleTime ) ;
    public final void rule__STTimeLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13217:1: ( ( ruleTime ) )
            // InternalGlobalConstantsParser.g:13218:2: ( ruleTime )
            {
            // InternalGlobalConstantsParser.g:13218:2: ( ruleTime )
            // InternalGlobalConstantsParser.g:13219:3: ruleTime
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getValueTimeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getValueTimeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STTimeOfDayLiteral__TypeAssignment_0"
    // InternalGlobalConstantsParser.g:13228:1: rule__STTimeOfDayLiteral__TypeAssignment_0 : ( ( ruleSTTimeOfDayType ) ) ;
    public final void rule__STTimeOfDayLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13232:1: ( ( ( ruleSTTimeOfDayType ) ) )
            // InternalGlobalConstantsParser.g:13233:2: ( ( ruleSTTimeOfDayType ) )
            {
            // InternalGlobalConstantsParser.g:13233:2: ( ( ruleSTTimeOfDayType ) )
            // InternalGlobalConstantsParser.g:13234:3: ( ruleSTTimeOfDayType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalGlobalConstantsParser.g:13235:3: ( ruleSTTimeOfDayType )
            // InternalGlobalConstantsParser.g:13236:4: ruleSTTimeOfDayType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeSTTimeOfDayTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTTimeOfDayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeSTTimeOfDayTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STTimeOfDayLiteral__ValueAssignment_2"
    // InternalGlobalConstantsParser.g:13247:1: rule__STTimeOfDayLiteral__ValueAssignment_2 : ( ruleTimeOfDay ) ;
    public final void rule__STTimeOfDayLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13251:1: ( ( ruleTimeOfDay ) )
            // InternalGlobalConstantsParser.g:13252:2: ( ruleTimeOfDay )
            {
            // InternalGlobalConstantsParser.g:13252:2: ( ruleTimeOfDay )
            // InternalGlobalConstantsParser.g:13253:3: ruleTimeOfDay
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getValueTimeOfDayParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getValueTimeOfDayParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STDateAndTimeLiteral__TypeAssignment_0"
    // InternalGlobalConstantsParser.g:13262:1: rule__STDateAndTimeLiteral__TypeAssignment_0 : ( ( ruleSTDateAndTimeType ) ) ;
    public final void rule__STDateAndTimeLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13266:1: ( ( ( ruleSTDateAndTimeType ) ) )
            // InternalGlobalConstantsParser.g:13267:2: ( ( ruleSTDateAndTimeType ) )
            {
            // InternalGlobalConstantsParser.g:13267:2: ( ( ruleSTDateAndTimeType ) )
            // InternalGlobalConstantsParser.g:13268:3: ( ruleSTDateAndTimeType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalGlobalConstantsParser.g:13269:3: ( ruleSTDateAndTimeType )
            // InternalGlobalConstantsParser.g:13270:4: ruleSTDateAndTimeType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeSTDateAndTimeTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTDateAndTimeType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeSTDateAndTimeTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STDateAndTimeLiteral__ValueAssignment_2"
    // InternalGlobalConstantsParser.g:13281:1: rule__STDateAndTimeLiteral__ValueAssignment_2 : ( ruleDateAndTime ) ;
    public final void rule__STDateAndTimeLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13285:1: ( ( ruleDateAndTime ) )
            // InternalGlobalConstantsParser.g:13286:2: ( ruleDateAndTime )
            {
            // InternalGlobalConstantsParser.g:13286:2: ( ruleDateAndTime )
            // InternalGlobalConstantsParser.g:13287:3: ruleDateAndTime
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getValueDateAndTimeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDateAndTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getValueDateAndTimeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STStringLiteral__TypeAssignment_0_0"
    // InternalGlobalConstantsParser.g:13296:1: rule__STStringLiteral__TypeAssignment_0_0 : ( ( ruleSTAnyCharsType ) ) ;
    public final void rule__STStringLiteral__TypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13300:1: ( ( ( ruleSTAnyCharsType ) ) )
            // InternalGlobalConstantsParser.g:13301:2: ( ( ruleSTAnyCharsType ) )
            {
            // InternalGlobalConstantsParser.g:13301:2: ( ( ruleSTAnyCharsType ) )
            // InternalGlobalConstantsParser.g:13302:3: ( ruleSTAnyCharsType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }
            // InternalGlobalConstantsParser.g:13303:3: ( ruleSTAnyCharsType )
            // InternalGlobalConstantsParser.g:13304:4: ruleSTAnyCharsType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeSTAnyCharsTypeParserRuleCall_0_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyCharsType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeSTAnyCharsTypeParserRuleCall_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__TypeAssignment_0_0"


    // $ANTLR start "rule__STStringLiteral__ValueAssignment_1"
    // InternalGlobalConstantsParser.g:13315:1: rule__STStringLiteral__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__STStringLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGlobalConstantsParser.g:13319:1: ( ( RULE_STRING ) )
            // InternalGlobalConstantsParser.g:13320:2: ( RULE_STRING )
            {
            // InternalGlobalConstantsParser.g:13320:2: ( RULE_STRING )
            // InternalGlobalConstantsParser.g:13321:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__ValueAssignment_1"

    // $ANTLR start synpred11_InternalGlobalConstantsParser
    public final void synpred11_InternalGlobalConstantsParser_fragment() throws RecognitionException {   
        // InternalGlobalConstantsParser.g:2300:2: ( ( ( ruleSTAssignmentStatement ) ) )
        // InternalGlobalConstantsParser.g:2300:2: ( ( ruleSTAssignmentStatement ) )
        {
        // InternalGlobalConstantsParser.g:2300:2: ( ( ruleSTAssignmentStatement ) )
        // InternalGlobalConstantsParser.g:2301:3: ( ruleSTAssignmentStatement )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
        }
        // InternalGlobalConstantsParser.g:2302:3: ( ruleSTAssignmentStatement )
        // InternalGlobalConstantsParser.g:2302:4: ruleSTAssignmentStatement
        {
        pushFollow(FOLLOW_2);
        ruleSTAssignmentStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred11_InternalGlobalConstantsParser

    // $ANTLR start synpred12_InternalGlobalConstantsParser
    public final void synpred12_InternalGlobalConstantsParser_fragment() throws RecognitionException {   
        // InternalGlobalConstantsParser.g:2306:2: ( ( ruleSTCallStatement ) )
        // InternalGlobalConstantsParser.g:2306:2: ( ruleSTCallStatement )
        {
        // InternalGlobalConstantsParser.g:2306:2: ( ruleSTCallStatement )
        // InternalGlobalConstantsParser.g:2307:3: ruleSTCallStatement
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTStatementAccess().getSTCallStatementParserRuleCall_0_0_6()); 
        }
        pushFollow(FOLLOW_2);
        ruleSTCallStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalGlobalConstantsParser

    // $ANTLR start synpred17_InternalGlobalConstantsParser
    public final void synpred17_InternalGlobalConstantsParser_fragment() throws RecognitionException {   
        // InternalGlobalConstantsParser.g:2366:2: ( ( ( ruleSTAccessExpression ) ) )
        // InternalGlobalConstantsParser.g:2366:2: ( ( ruleSTAccessExpression ) )
        {
        // InternalGlobalConstantsParser.g:2366:2: ( ( ruleSTAccessExpression ) )
        // InternalGlobalConstantsParser.g:2367:3: ( ruleSTAccessExpression )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
        }
        // InternalGlobalConstantsParser.g:2368:3: ( ruleSTAccessExpression )
        // InternalGlobalConstantsParser.g:2368:4: ruleSTAccessExpression
        {
        pushFollow(FOLLOW_2);
        ruleSTAccessExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred17_InternalGlobalConstantsParser

    // $ANTLR start synpred121_InternalGlobalConstantsParser
    public final void synpred121_InternalGlobalConstantsParser_fragment() throws RecognitionException {   
        // InternalGlobalConstantsParser.g:6757:3: ( rule__STCaseCases__StatementsAssignment_3 )
        // InternalGlobalConstantsParser.g:6757:3: rule__STCaseCases__StatementsAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__STCaseCases__StatementsAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred121_InternalGlobalConstantsParser

    // $ANTLR start synpred138_InternalGlobalConstantsParser
    public final void synpred138_InternalGlobalConstantsParser_fragment() throws RecognitionException {   
        // InternalGlobalConstantsParser.g:9511:3: ( rule__STFeatureExpression__Group_2__0 )
        // InternalGlobalConstantsParser.g:9511:3: rule__STFeatureExpression__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__STFeatureExpression__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred138_InternalGlobalConstantsParser

    // $ANTLR start synpred141_InternalGlobalConstantsParser
    public final void synpred141_InternalGlobalConstantsParser_fragment() throws RecognitionException {   
        // InternalGlobalConstantsParser.g:9781:3: ( rule__STBuiltinFeatureExpression__Group_2__0 )
        // InternalGlobalConstantsParser.g:9781:3: rule__STBuiltinFeatureExpression__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__STBuiltinFeatureExpression__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_InternalGlobalConstantsParser

    // $ANTLR start synpred148_InternalGlobalConstantsParser
    public final void synpred148_InternalGlobalConstantsParser_fragment() throws RecognitionException {   
        // InternalGlobalConstantsParser.g:10753:3: ( rule__Number__Group_2__0 )
        // InternalGlobalConstantsParser.g:10753:3: rule__Number__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__Number__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred148_InternalGlobalConstantsParser

    // $ANTLR start synpred150_InternalGlobalConstantsParser
    public final void synpred150_InternalGlobalConstantsParser_fragment() throws RecognitionException {   
        // InternalGlobalConstantsParser.g:11320:3: ( rule__DateAndTime__Group_11__0 )
        // InternalGlobalConstantsParser.g:11320:3: rule__DateAndTime__Group_11__0
        {
        pushFollow(FOLLOW_2);
        rule__DateAndTime__Group_11__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred150_InternalGlobalConstantsParser

    // $ANTLR start synpred151_InternalGlobalConstantsParser
    public final void synpred151_InternalGlobalConstantsParser_fragment() throws RecognitionException {   
        // InternalGlobalConstantsParser.g:11536:3: ( rule__TimeOfDay__Group_5__0 )
        // InternalGlobalConstantsParser.g:11536:3: rule__TimeOfDay__Group_5__0
        {
        pushFollow(FOLLOW_2);
        rule__TimeOfDay__Group_5__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_InternalGlobalConstantsParser

    // Delegated rules

    public final boolean synpred148_InternalGlobalConstantsParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_InternalGlobalConstantsParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalGlobalConstantsParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalGlobalConstantsParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalGlobalConstantsParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalGlobalConstantsParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_InternalGlobalConstantsParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalGlobalConstantsParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalGlobalConstantsParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalGlobalConstantsParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalGlobalConstantsParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalGlobalConstantsParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalGlobalConstantsParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalGlobalConstantsParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalGlobalConstantsParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalGlobalConstantsParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalGlobalConstantsParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalGlobalConstantsParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA5 dfa5 = new DFA5(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA86 dfa86 = new DFA86(this);
    static final String dfa_1s = "\16\uffff";
    static final String dfa_2s = "\2\10\2\uffff\11\162\1\uffff";
    static final String dfa_3s = "\2\u00b4\2\uffff\11\u00a4\1\uffff";
    static final String dfa_4s = "\2\uffff\1\1\1\2\11\uffff\1\3";
    static final String dfa_5s = "\16\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\1\uffff\1\2\5\uffff\1\2\2\uffff\1\2\50\uffff\1\2\11\uffff\1\2\3\uffff\1\2\1\uffff\1\2\1\uffff\4\2\1\uffff\2\2\2\uffff\2\2\1\uffff\2\2\1\uffff\3\2\3\uffff\2\2\1\uffff\2\2\3\uffff\3\2\1\uffff\1\2\1\uffff\2\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\17\uffff\1\2\1\uffff\2\2\2\uffff\1\2\3\uffff\1\1\2\uffff\1\2\1\uffff\1\2\7\uffff\2\2\1\3\2\uffff\3\2\11\uffff\2\2",
            "\1\2\1\uffff\1\2\5\uffff\1\2\2\uffff\1\2\50\uffff\1\2\11\uffff\1\2\3\uffff\1\2\1\uffff\1\2\1\uffff\4\2\1\uffff\2\2\2\uffff\2\2\1\uffff\2\2\1\uffff\3\2\3\uffff\2\2\1\uffff\2\2\3\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\6\1\uffff\2\2\1\11\1\2\1\uffff\1\2\1\uffff\1\10\17\uffff\1\13\1\uffff\1\14\1\5\2\uffff\1\7\3\uffff\1\2\2\uffff\1\2\1\uffff\1\2\7\uffff\1\12\1\2\3\uffff\3\2\11\uffff\1\4\1\2",
            "",
            "",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\2\uffff\5\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\1\uffff\6\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\2\uffff\5\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\2\uffff\5\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\2\uffff\5\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\2\uffff\5\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\1\uffff\6\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\1\uffff\6\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\1\uffff\6\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2217:1: rule__STInitializerExpression__Alternatives : ( ( ruleSTElementaryInitializerExpression ) | ( ruleSTArrayInitializerExpression ) | ( ruleSTStructInitializerExpression ) );";
        }
    }
    static final String dfa_7s = "\75\uffff";
    static final String dfa_8s = "\1\10\5\uffff\62\0\5\uffff";
    static final String dfa_9s = "\1\u00b4\5\uffff\62\0\5\uffff";
    static final String dfa_10s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\62\uffff\1\10\1\11\1\12\1\6\1\7";
    static final String dfa_11s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\5\uffff}>";
    static final String[] dfa_12s = {
            "\1\61\1\uffff\1\60\5\uffff\1\55\2\uffff\1\54\26\uffff\1\71\21\uffff\1\64\5\uffff\1\5\1\uffff\1\70\1\uffff\1\63\3\uffff\1\24\1\uffff\1\41\1\uffff\1\50\1\37\1\52\1\25\1\uffff\1\34\1\35\2\uffff\1\32\1\66\1\4\1\21\1\22\1\2\1\65\1\47\1\30\1\uffff\1\72\1\uffff\1\31\1\57\1\uffff\1\36\1\26\3\uffff\1\20\1\51\1\40\1\uffff\1\33\1\uffff\1\23\1\11\1\3\1\27\1\62\1\14\2\uffff\1\56\1\uffff\1\13\17\uffff\1\16\1\1\1\17\1\10\2\uffff\1\12\3\uffff\1\6\2\uffff\1\42\1\uffff\1\43\7\uffff\1\15\1\53\3\uffff\1\46\1\44\1\45\11\uffff\1\7\1\67",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2265:1: rule__STStatement__Alternatives_0_0 : ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ( ruleSTAssignmentStatement ) ) | ( ruleSTCallStatement ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) | ( ( rule__STStatement__Group_0_0_9__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA5_6 = input.LA(1);

                         
                        int index5_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA5_7 = input.LA(1);

                         
                        int index5_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA5_8 = input.LA(1);

                         
                        int index5_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA5_9 = input.LA(1);

                         
                        int index5_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA5_10 = input.LA(1);

                         
                        int index5_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA5_11 = input.LA(1);

                         
                        int index5_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA5_12 = input.LA(1);

                         
                        int index5_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA5_13 = input.LA(1);

                         
                        int index5_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA5_14 = input.LA(1);

                         
                        int index5_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA5_15 = input.LA(1);

                         
                        int index5_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA5_16 = input.LA(1);

                         
                        int index5_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_16);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA5_17 = input.LA(1);

                         
                        int index5_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_17);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA5_18 = input.LA(1);

                         
                        int index5_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_18);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA5_19 = input.LA(1);

                         
                        int index5_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_19);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA5_20 = input.LA(1);

                         
                        int index5_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_20);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA5_21 = input.LA(1);

                         
                        int index5_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_21);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA5_22 = input.LA(1);

                         
                        int index5_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_22);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA5_23 = input.LA(1);

                         
                        int index5_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_23);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA5_24 = input.LA(1);

                         
                        int index5_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_24);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA5_25 = input.LA(1);

                         
                        int index5_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_25);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA5_26 = input.LA(1);

                         
                        int index5_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_26);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA5_27 = input.LA(1);

                         
                        int index5_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_27);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA5_28 = input.LA(1);

                         
                        int index5_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_28);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA5_29 = input.LA(1);

                         
                        int index5_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_29);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA5_30 = input.LA(1);

                         
                        int index5_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_30);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA5_31 = input.LA(1);

                         
                        int index5_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_31);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA5_32 = input.LA(1);

                         
                        int index5_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_32);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA5_33 = input.LA(1);

                         
                        int index5_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_33);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA5_34 = input.LA(1);

                         
                        int index5_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_34);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA5_35 = input.LA(1);

                         
                        int index5_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_35);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA5_36 = input.LA(1);

                         
                        int index5_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_36);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA5_37 = input.LA(1);

                         
                        int index5_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_37);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA5_38 = input.LA(1);

                         
                        int index5_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_38);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA5_39 = input.LA(1);

                         
                        int index5_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_39);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA5_40 = input.LA(1);

                         
                        int index5_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_40);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA5_41 = input.LA(1);

                         
                        int index5_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_41);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA5_42 = input.LA(1);

                         
                        int index5_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_42);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA5_43 = input.LA(1);

                         
                        int index5_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_43);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA5_44 = input.LA(1);

                         
                        int index5_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_44);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA5_45 = input.LA(1);

                         
                        int index5_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_45);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA5_46 = input.LA(1);

                         
                        int index5_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_46);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA5_47 = input.LA(1);

                         
                        int index5_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_47);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA5_48 = input.LA(1);

                         
                        int index5_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_48);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA5_49 = input.LA(1);

                         
                        int index5_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_49);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA5_50 = input.LA(1);

                         
                        int index5_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_50);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA5_51 = input.LA(1);

                         
                        int index5_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_51);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA5_52 = input.LA(1);

                         
                        int index5_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_52);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA5_53 = input.LA(1);

                         
                        int index5_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_53);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA5_54 = input.LA(1);

                         
                        int index5_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_54);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA5_55 = input.LA(1);

                         
                        int index5_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalGlobalConstantsParser()) ) {s = 59;}

                        else if ( (synpred12_InternalGlobalConstantsParser()) ) {s = 60;}

                         
                        input.seek(index5_55);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 5, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\100\uffff";
    static final String dfa_14s = "\1\1\77\uffff";
    static final String dfa_15s = "\1\10\1\uffff\62\0\14\uffff";
    static final String dfa_16s = "\1\u00b4\1\uffff\62\0\14\uffff";
    static final String dfa_17s = "\1\uffff\1\2\65\uffff\1\1\10\uffff";
    static final String dfa_18s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\14\uffff}>";
    static final String[] dfa_19s = {
            "\1\55\1\uffff\1\54\5\uffff\1\51\2\uffff\1\50\26\uffff\1\67\1\1\20\uffff\1\60\5\uffff\1\67\1\uffff\1\67\1\uffff\1\57\3\uffff\1\20\1\uffff\1\35\1\uffff\1\44\1\33\1\46\1\21\1\uffff\1\30\1\31\2\uffff\1\26\1\62\1\67\1\15\1\16\1\67\1\61\1\43\1\24\1\1\1\67\1\uffff\1\25\1\53\1\uffff\1\32\1\22\3\uffff\1\14\1\45\1\34\1\uffff\1\27\1\uffff\1\17\1\5\1\67\1\23\1\56\1\10\1\1\1\uffff\1\52\1\uffff\1\7\17\uffff\1\12\1\67\1\13\1\4\2\uffff\1\6\3\uffff\1\2\2\uffff\1\36\1\uffff\1\37\3\uffff\1\67\3\uffff\1\11\1\47\3\uffff\1\42\1\40\1\41\11\uffff\1\3\1\63",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "()* loopback of 6757:2: ( rule__STCaseCases__StatementsAssignment_3 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA66_2 = input.LA(1);

                         
                        int index66_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA66_3 = input.LA(1);

                         
                        int index66_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA66_4 = input.LA(1);

                         
                        int index66_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA66_5 = input.LA(1);

                         
                        int index66_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA66_6 = input.LA(1);

                         
                        int index66_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA66_7 = input.LA(1);

                         
                        int index66_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA66_8 = input.LA(1);

                         
                        int index66_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA66_9 = input.LA(1);

                         
                        int index66_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA66_10 = input.LA(1);

                         
                        int index66_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA66_11 = input.LA(1);

                         
                        int index66_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA66_12 = input.LA(1);

                         
                        int index66_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA66_13 = input.LA(1);

                         
                        int index66_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA66_14 = input.LA(1);

                         
                        int index66_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA66_15 = input.LA(1);

                         
                        int index66_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA66_16 = input.LA(1);

                         
                        int index66_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA66_17 = input.LA(1);

                         
                        int index66_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA66_18 = input.LA(1);

                         
                        int index66_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA66_19 = input.LA(1);

                         
                        int index66_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA66_20 = input.LA(1);

                         
                        int index66_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA66_21 = input.LA(1);

                         
                        int index66_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA66_22 = input.LA(1);

                         
                        int index66_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA66_23 = input.LA(1);

                         
                        int index66_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA66_24 = input.LA(1);

                         
                        int index66_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA66_25 = input.LA(1);

                         
                        int index66_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA66_26 = input.LA(1);

                         
                        int index66_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA66_27 = input.LA(1);

                         
                        int index66_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA66_28 = input.LA(1);

                         
                        int index66_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA66_29 = input.LA(1);

                         
                        int index66_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA66_30 = input.LA(1);

                         
                        int index66_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA66_31 = input.LA(1);

                         
                        int index66_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA66_32 = input.LA(1);

                         
                        int index66_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA66_33 = input.LA(1);

                         
                        int index66_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA66_34 = input.LA(1);

                         
                        int index66_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA66_35 = input.LA(1);

                         
                        int index66_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA66_36 = input.LA(1);

                         
                        int index66_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA66_37 = input.LA(1);

                         
                        int index66_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA66_38 = input.LA(1);

                         
                        int index66_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA66_39 = input.LA(1);

                         
                        int index66_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA66_40 = input.LA(1);

                         
                        int index66_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA66_41 = input.LA(1);

                         
                        int index66_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA66_42 = input.LA(1);

                         
                        int index66_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA66_43 = input.LA(1);

                         
                        int index66_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA66_44 = input.LA(1);

                         
                        int index66_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA66_45 = input.LA(1);

                         
                        int index66_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_45);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA66_46 = input.LA(1);

                         
                        int index66_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_46);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA66_47 = input.LA(1);

                         
                        int index66_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_47);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA66_48 = input.LA(1);

                         
                        int index66_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_48);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA66_49 = input.LA(1);

                         
                        int index66_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_49);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA66_50 = input.LA(1);

                         
                        int index66_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_50);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA66_51 = input.LA(1);

                         
                        int index66_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalGlobalConstantsParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_51);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\43\uffff";
    static final String dfa_21s = "\1\2\42\uffff";
    static final String dfa_22s = "\1\26\1\0\41\uffff";
    static final String dfa_23s = "\1\u00a5\1\0\41\uffff";
    static final String dfa_24s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_25s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_26s = {
            "\1\2\123\uffff\1\2\7\uffff\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\5\2\1\uffff\1\2\1\uffff\2\2\4\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\1\14\2\2\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "9511:2: ( rule__STFeatureExpression__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_1 = input.LA(1);

                         
                        int index83_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGlobalConstantsParser()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index83_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "9781:2: ( rule__STBuiltinFeatureExpression__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_1 = input.LA(1);

                         
                        int index86_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalGlobalConstantsParser()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index86_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0040020000000000L,0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x1000000000090500L,0x0AF6B8D8ED9BD440L,0x0018038C05226800L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x1000000000090500L,0x0AF6B8D8ED9BD440L,0x0018039C05226800L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000020000100L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x1000000000090500L,0x023290D8ED9BC540L,0x0008000000000800L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001040000008L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002002000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000002400000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0844000000000000L,0x0008000400026800L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x5000040000090500L,0x0A7EB8DBFF9BDC54L,0x0018038C45227800L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x1000040000090502L,0x0A7EB8DAFF9BD454L,0x0018038C45227800L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x1000040000090500L,0x0A7EB8DAFF9BD454L,0x0018038C45227800L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000080000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x1000000000090502L,0x0AF6B8D8ED9BD440L,0x0018038C05226800L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000022000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x1020040000090500L,0x0A7EB8DAFF9BD454L,0x0018038C45227800L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x1000040400090500L,0x0A7EB8DAFF9BD454L,0x0018038C45227800L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x1000040000090500L,0x0A7EB8DAFFBBD454L,0x0018038C45227800L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0800000000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000002L,0x0004000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000100000020L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000100000020L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000280000090L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000280000090L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000005000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000005000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L,0x0000000010800000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000002L,0x0040000000000000L,0x0000000010800000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001008000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000001008000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0xF844000000000000L,0x0008010400226801L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x1000000000090500L,0x0AF6B8D8ED9BD440L,0x0018038C05626800L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0012A0C88C9A9400L,0x0000038005000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080005000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x1000000000090500L,0x0A76B8D8ED9BD440L,0x0018038C05226800L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000030005000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});

}