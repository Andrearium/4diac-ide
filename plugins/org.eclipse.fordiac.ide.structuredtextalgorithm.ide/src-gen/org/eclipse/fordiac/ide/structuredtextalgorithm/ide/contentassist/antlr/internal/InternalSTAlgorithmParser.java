package org.eclipse.fordiac.ide.structuredtextalgorithm.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.fordiac.ide.structuredtextalgorithm.services.STAlgorithmGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSTAlgorithmParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "LDATE_AND_TIME", "DATE_AND_TIME", "END_ALGORITHM", "LTIME_OF_DAY", "TIME_OF_DAY", "END_REPEAT", "VAR_OUTPUT", "ALGORITHM", "END_WHILE", "VAR_INPUT", "CONSTANT", "CONTINUE", "END_CASE", "VAR_TEMP", "END_FOR", "END_VAR", "WSTRING", "END_IF", "REPEAT", "RETURN", "STRING", "ARRAY", "DWORD", "ELSIF", "FALSE", "LDATE", "LREAL", "LTIME", "LWORD", "UDINT", "ULINT", "UNTIL", "USINT", "WCHAR", "WHILE", "BOOL", "BYTE", "CASE", "CHAR", "DATE", "DINT", "ELSE", "EXIT", "LINT", "LTOD", "REAL", "SINT", "THEN", "TIME", "TRUE", "UINT", "WORD", "AND", "FOR", "INT", "LDT", "MOD", "NOT", "TOD", "VAR", "XOR", "B", "D_1", "L", "W", "X", "AsteriskAsterisk", "FullStopFullStop", "ColonEqualsSign", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "AT", "BY", "DO", "DT", "IF", "LD", "LT", "MS", "NS", "OF", "OR", "TO", "US", "NumberSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "D", "H", "M", "S", "T", "LeftSquareBracket", "RightSquareBracket", "KW__", "RULE_HEX_DIGIT", "RULE_NON_DECIMAL", "RULE_INT", "RULE_EXT_INT", "RULE_ID", "RULE_STRING", "RULE_WSTRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LWORD=32;
    public static final int LessThanSignGreaterThanSign=74;
    public static final int EqualsSignGreaterThanSign=75;
    public static final int VAR=63;
    public static final int END_IF=21;
    public static final int ULINT=34;
    public static final int END_CASE=16;
    public static final int LessThanSign=102;
    public static final int LeftParenthesis=92;
    public static final int BYTE=40;
    public static final int ELSE=45;
    public static final int IF=81;
    public static final int LINT=47;
    public static final int GreaterThanSign=104;
    public static final int WORD=55;
    public static final int DATE_AND_TIME=5;
    public static final int RULE_ID=117;
    public static final int TOD=62;
    public static final int DINT=44;
    public static final int UDINT=33;
    public static final int CASE=41;
    public static final int GreaterThanSignEqualsSign=76;
    public static final int END_ALGORITHM=6;
    public static final int AT=77;
    public static final int PlusSign=95;
    public static final int RULE_INT=115;
    public static final int END_FOR=18;
    public static final int RULE_ML_COMMENT=120;
    public static final int THEN=51;
    public static final int XOR=64;
    public static final int LeftSquareBracket=110;
    public static final int EXIT=46;
    public static final int TIME_OF_DAY=8;
    public static final int B=65;
    public static final int LDATE_AND_TIME=4;
    public static final int REPEAT=22;
    public static final int D=105;
    public static final int H=106;
    public static final int CHAR=42;
    public static final int L=67;
    public static final int M=107;
    public static final int LTIME=31;
    public static final int Comma=96;
    public static final int HyphenMinus=97;
    public static final int S=108;
    public static final int T=109;
    public static final int W=68;
    public static final int BY=78;
    public static final int X=69;
    public static final int ELSIF=27;
    public static final int END_REPEAT=9;
    public static final int LessThanSignEqualsSign=73;
    public static final int Solidus=99;
    public static final int VAR_INPUT=13;
    public static final int FullStop=98;
    public static final int VAR_TEMP=17;
    public static final int CONSTANT=14;
    public static final int KW__=112;
    public static final int CONTINUE=15;
    public static final int Semicolon=101;
    public static final int LD=82;
    public static final int VAR_OUTPUT=10;
    public static final int STRING=24;
    public static final int RULE_HEX_DIGIT=113;
    public static final int TO=88;
    public static final int UINT=54;
    public static final int LTOD=48;
    public static final int ARRAY=25;
    public static final int LT=83;
    public static final int DO=79;
    public static final int WSTRING=20;
    public static final int DT=80;
    public static final int END_VAR=19;
    public static final int FullStopFullStop=71;
    public static final int Ampersand=91;
    public static final int US=89;
    public static final int RightSquareBracket=111;
    public static final int USINT=36;
    public static final int MS=84;
    public static final int DWORD=26;
    public static final int FOR=57;
    public static final int RightParenthesis=93;
    public static final int TRUE=53;
    public static final int ColonEqualsSign=72;
    public static final int RULE_WSTRING=119;
    public static final int END_WHILE=12;
    public static final int DATE=43;
    public static final int NOT=61;
    public static final int LDATE=29;
    public static final int AND=56;
    public static final int NumberSign=90;
    public static final int REAL=49;
    public static final int AsteriskAsterisk=70;
    public static final int SINT=50;
    public static final int LTIME_OF_DAY=7;
    public static final int LREAL=30;
    public static final int WCHAR=37;
    public static final int NS=85;
    public static final int ALGORITHM=11;
    public static final int RULE_STRING=118;
    public static final int INT=58;
    public static final int RULE_SL_COMMENT=121;
    public static final int RETURN=23;
    public static final int EqualsSign=103;
    public static final int OF=86;
    public static final int Colon=100;
    public static final int EOF=-1;
    public static final int LDT=59;
    public static final int Asterisk=94;
    public static final int MOD=60;
    public static final int OR=87;
    public static final int RULE_WS=122;
    public static final int RULE_EXT_INT=116;
    public static final int TIME=52;
    public static final int RULE_ANY_OTHER=123;
    public static final int UNTIL=35;
    public static final int BOOL=39;
    public static final int D_1=66;
    public static final int FALSE=28;
    public static final int WHILE=38;
    public static final int RULE_NON_DECIMAL=114;

    // delegates
    // delegators


        public InternalSTAlgorithmParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSTAlgorithmParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSTAlgorithmParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSTAlgorithmParser.g"; }


    	private STAlgorithmGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("NumberSign", "'#'");
    		tokenNameToValue.put("Ampersand", "'&'");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("D", "'D'");
    		tokenNameToValue.put("H", "'H'");
    		tokenNameToValue.put("M", "'M'");
    		tokenNameToValue.put("S", "'S'");
    		tokenNameToValue.put("T", "'T'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("KW__", "'_'");
    		tokenNameToValue.put("B", "'%B'");
    		tokenNameToValue.put("D_1", "'%D'");
    		tokenNameToValue.put("L", "'%L'");
    		tokenNameToValue.put("W", "'%W'");
    		tokenNameToValue.put("X", "'%X'");
    		tokenNameToValue.put("AsteriskAsterisk", "'**'");
    		tokenNameToValue.put("FullStopFullStop", "'..'");
    		tokenNameToValue.put("ColonEqualsSign", "':='");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AT", "'AT'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("DO", "'DO'");
    		tokenNameToValue.put("DT", "'DT'");
    		tokenNameToValue.put("IF", "'IF'");
    		tokenNameToValue.put("LD", "'LD'");
    		tokenNameToValue.put("LT", "'LT'");
    		tokenNameToValue.put("MS", "'MS'");
    		tokenNameToValue.put("NS", "'NS'");
    		tokenNameToValue.put("OF", "'OF'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("TO", "'TO'");
    		tokenNameToValue.put("US", "'US'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("INT", "'INT'");
    		tokenNameToValue.put("LDT", "'LDT'");
    		tokenNameToValue.put("MOD", "'MOD'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("TOD", "'TOD'");
    		tokenNameToValue.put("VAR", "'VAR'");
    		tokenNameToValue.put("XOR", "'XOR'");
    		tokenNameToValue.put("BOOL", "'BOOL'");
    		tokenNameToValue.put("BYTE", "'BYTE'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("CHAR", "'CHAR'");
    		tokenNameToValue.put("DATE", "'DATE'");
    		tokenNameToValue.put("DINT", "'DINT'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("EXIT", "'EXIT'");
    		tokenNameToValue.put("LINT", "'LINT'");
    		tokenNameToValue.put("LTOD", "'LTOD'");
    		tokenNameToValue.put("REAL", "'REAL'");
    		tokenNameToValue.put("SINT", "'SINT'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TIME", "'TIME'");
    		tokenNameToValue.put("TRUE", "'TRUE'");
    		tokenNameToValue.put("UINT", "'UINT'");
    		tokenNameToValue.put("WORD", "'WORD'");
    		tokenNameToValue.put("ARRAY", "'ARRAY'");
    		tokenNameToValue.put("DWORD", "'DWORD'");
    		tokenNameToValue.put("ELSIF", "'ELSIF'");
    		tokenNameToValue.put("FALSE", "'FALSE'");
    		tokenNameToValue.put("LDATE", "'LDATE'");
    		tokenNameToValue.put("LREAL", "'LREAL'");
    		tokenNameToValue.put("LTIME", "'LTIME'");
    		tokenNameToValue.put("LWORD", "'LWORD'");
    		tokenNameToValue.put("UDINT", "'UDINT'");
    		tokenNameToValue.put("ULINT", "'ULINT'");
    		tokenNameToValue.put("UNTIL", "'UNTIL'");
    		tokenNameToValue.put("USINT", "'USINT'");
    		tokenNameToValue.put("WCHAR", "'WCHAR'");
    		tokenNameToValue.put("WHILE", "'WHILE'");
    		tokenNameToValue.put("END_IF", "'END_IF'");
    		tokenNameToValue.put("REPEAT", "'REPEAT'");
    		tokenNameToValue.put("RETURN", "'RETURN'");
    		tokenNameToValue.put("STRING", "'STRING'");
    		tokenNameToValue.put("END_FOR", "'END_FOR'");
    		tokenNameToValue.put("END_VAR", "'END_VAR'");
    		tokenNameToValue.put("WSTRING", "'WSTRING'");
    		tokenNameToValue.put("CONSTANT", "'CONSTANT'");
    		tokenNameToValue.put("CONTINUE", "'CONTINUE'");
    		tokenNameToValue.put("END_CASE", "'END_CASE'");
    		tokenNameToValue.put("VAR_TEMP", "'VAR_TEMP'");
    		tokenNameToValue.put("ALGORITHM", "'ALGORITHM'");
    		tokenNameToValue.put("END_WHILE", "'END_WHILE'");
    		tokenNameToValue.put("VAR_INPUT", "'VAR_INPUT'");
    		tokenNameToValue.put("END_REPEAT", "'END_REPEAT'");
    		tokenNameToValue.put("VAR_OUTPUT", "'VAR_OUTPUT'");
    		tokenNameToValue.put("TIME_OF_DAY", "'TIME_OF_DAY'");
    		tokenNameToValue.put("LTIME_OF_DAY", "'LTIME_OF_DAY'");
    		tokenNameToValue.put("DATE_AND_TIME", "'DATE_AND_TIME'");
    		tokenNameToValue.put("END_ALGORITHM", "'END_ALGORITHM'");
    		tokenNameToValue.put("LDATE_AND_TIME", "'LDATE_AND_TIME'");
    	}

    	public void setGrammarAccess(STAlgorithmGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleSTAlgorithmSource"
    // InternalSTAlgorithmParser.g:165:1: entryRuleSTAlgorithmSource : ruleSTAlgorithmSource EOF ;
    public final void entryRuleSTAlgorithmSource() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:166:1: ( ruleSTAlgorithmSource EOF )
            // InternalSTAlgorithmParser.g:167:1: ruleSTAlgorithmSource EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAlgorithmSource();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmSourceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAlgorithmSource"


    // $ANTLR start "ruleSTAlgorithmSource"
    // InternalSTAlgorithmParser.g:174:1: ruleSTAlgorithmSource : ( ( rule__STAlgorithmSource__Group__0 ) ) ;
    public final void ruleSTAlgorithmSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:178:2: ( ( ( rule__STAlgorithmSource__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:179:2: ( ( rule__STAlgorithmSource__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:179:2: ( ( rule__STAlgorithmSource__Group__0 ) )
            // InternalSTAlgorithmParser.g:180:3: ( rule__STAlgorithmSource__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmSourceAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:181:3: ( rule__STAlgorithmSource__Group__0 )
            // InternalSTAlgorithmParser.g:181:4: rule__STAlgorithmSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithmSource__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmSourceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAlgorithmSource"


    // $ANTLR start "entryRuleSTAlgorithm"
    // InternalSTAlgorithmParser.g:190:1: entryRuleSTAlgorithm : ruleSTAlgorithm EOF ;
    public final void entryRuleSTAlgorithm() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:191:1: ( ruleSTAlgorithm EOF )
            // InternalSTAlgorithmParser.g:192:1: ruleSTAlgorithm EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAlgorithm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAlgorithm"


    // $ANTLR start "ruleSTAlgorithm"
    // InternalSTAlgorithmParser.g:199:1: ruleSTAlgorithm : ( ( rule__STAlgorithm__Group__0 ) ) ;
    public final void ruleSTAlgorithm() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:203:2: ( ( ( rule__STAlgorithm__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:204:2: ( ( rule__STAlgorithm__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:204:2: ( ( rule__STAlgorithm__Group__0 ) )
            // InternalSTAlgorithmParser.g:205:3: ( rule__STAlgorithm__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:206:3: ( rule__STAlgorithm__Group__0 )
            // InternalSTAlgorithmParser.g:206:4: rule__STAlgorithm__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAlgorithm"


    // $ANTLR start "entryRuleSTAlgorithmBody"
    // InternalSTAlgorithmParser.g:215:1: entryRuleSTAlgorithmBody : ruleSTAlgorithmBody EOF ;
    public final void entryRuleSTAlgorithmBody() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:216:1: ( ruleSTAlgorithmBody EOF )
            // InternalSTAlgorithmParser.g:217:1: ruleSTAlgorithmBody EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAlgorithmBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAlgorithmBody"


    // $ANTLR start "ruleSTAlgorithmBody"
    // InternalSTAlgorithmParser.g:224:1: ruleSTAlgorithmBody : ( ( rule__STAlgorithmBody__Group__0 ) ) ;
    public final void ruleSTAlgorithmBody() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:228:2: ( ( ( rule__STAlgorithmBody__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:229:2: ( ( rule__STAlgorithmBody__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:229:2: ( ( rule__STAlgorithmBody__Group__0 ) )
            // InternalSTAlgorithmParser.g:230:3: ( rule__STAlgorithmBody__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:231:3: ( rule__STAlgorithmBody__Group__0 )
            // InternalSTAlgorithmParser.g:231:4: rule__STAlgorithmBody__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithmBody__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAlgorithmBody"


    // $ANTLR start "entryRuleSTVarTempDeclarationBlock"
    // InternalSTAlgorithmParser.g:240:1: entryRuleSTVarTempDeclarationBlock : ruleSTVarTempDeclarationBlock EOF ;
    public final void entryRuleSTVarTempDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:241:1: ( ruleSTVarTempDeclarationBlock EOF )
            // InternalSTAlgorithmParser.g:242:1: ruleSTVarTempDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarTempDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarTempDeclarationBlock"


    // $ANTLR start "ruleSTVarTempDeclarationBlock"
    // InternalSTAlgorithmParser.g:249:1: ruleSTVarTempDeclarationBlock : ( ( rule__STVarTempDeclarationBlock__Group__0 ) ) ;
    public final void ruleSTVarTempDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:253:2: ( ( ( rule__STVarTempDeclarationBlock__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:254:2: ( ( rule__STVarTempDeclarationBlock__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:254:2: ( ( rule__STVarTempDeclarationBlock__Group__0 ) )
            // InternalSTAlgorithmParser.g:255:3: ( rule__STVarTempDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:256:3: ( rule__STVarTempDeclarationBlock__Group__0 )
            // InternalSTAlgorithmParser.g:256:4: rule__STVarTempDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarTempDeclarationBlock"


    // $ANTLR start "entryRuleSTVarDeclaration"
    // InternalSTAlgorithmParser.g:265:1: entryRuleSTVarDeclaration : ruleSTVarDeclaration EOF ;
    public final void entryRuleSTVarDeclaration() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:266:1: ( ruleSTVarDeclaration EOF )
            // InternalSTAlgorithmParser.g:267:1: ruleSTVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarDeclaration"


    // $ANTLR start "ruleSTVarDeclaration"
    // InternalSTAlgorithmParser.g:274:1: ruleSTVarDeclaration : ( ( rule__STVarDeclaration__Group__0 ) ) ;
    public final void ruleSTVarDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:278:2: ( ( ( rule__STVarDeclaration__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:279:2: ( ( rule__STVarDeclaration__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:279:2: ( ( rule__STVarDeclaration__Group__0 ) )
            // InternalSTAlgorithmParser.g:280:3: ( rule__STVarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:281:3: ( rule__STVarDeclaration__Group__0 )
            // InternalSTAlgorithmParser.g:281:4: rule__STVarDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarDeclaration"


    // $ANTLR start "entryRuleSTInitializerExpression"
    // InternalSTAlgorithmParser.g:290:1: entryRuleSTInitializerExpression : ruleSTInitializerExpression EOF ;
    public final void entryRuleSTInitializerExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:291:1: ( ruleSTInitializerExpression EOF )
            // InternalSTAlgorithmParser.g:292:1: ruleSTInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTInitializerExpression"


    // $ANTLR start "ruleSTInitializerExpression"
    // InternalSTAlgorithmParser.g:299:1: ruleSTInitializerExpression : ( ( rule__STInitializerExpression__Alternatives ) ) ;
    public final void ruleSTInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:303:2: ( ( ( rule__STInitializerExpression__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:304:2: ( ( rule__STInitializerExpression__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:304:2: ( ( rule__STInitializerExpression__Alternatives ) )
            // InternalSTAlgorithmParser.g:305:3: ( rule__STInitializerExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:306:3: ( rule__STInitializerExpression__Alternatives )
            // InternalSTAlgorithmParser.g:306:4: rule__STInitializerExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STInitializerExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTInitializerExpression"


    // $ANTLR start "entryRuleSTElementaryInitializerExpression"
    // InternalSTAlgorithmParser.g:315:1: entryRuleSTElementaryInitializerExpression : ruleSTElementaryInitializerExpression EOF ;
    public final void entryRuleSTElementaryInitializerExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:316:1: ( ruleSTElementaryInitializerExpression EOF )
            // InternalSTAlgorithmParser.g:317:1: ruleSTElementaryInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElementaryInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElementaryInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElementaryInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElementaryInitializerExpression"


    // $ANTLR start "ruleSTElementaryInitializerExpression"
    // InternalSTAlgorithmParser.g:324:1: ruleSTElementaryInitializerExpression : ( ( rule__STElementaryInitializerExpression__ValueAssignment ) ) ;
    public final void ruleSTElementaryInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:328:2: ( ( ( rule__STElementaryInitializerExpression__ValueAssignment ) ) )
            // InternalSTAlgorithmParser.g:329:2: ( ( rule__STElementaryInitializerExpression__ValueAssignment ) )
            {
            // InternalSTAlgorithmParser.g:329:2: ( ( rule__STElementaryInitializerExpression__ValueAssignment ) )
            // InternalSTAlgorithmParser.g:330:3: ( rule__STElementaryInitializerExpression__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueAssignment()); 
            }
            // InternalSTAlgorithmParser.g:331:3: ( rule__STElementaryInitializerExpression__ValueAssignment )
            // InternalSTAlgorithmParser.g:331:4: rule__STElementaryInitializerExpression__ValueAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STElementaryInitializerExpression__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElementaryInitializerExpression"


    // $ANTLR start "entryRuleSTArrayInitializerExpression"
    // InternalSTAlgorithmParser.g:340:1: entryRuleSTArrayInitializerExpression : ruleSTArrayInitializerExpression EOF ;
    public final void entryRuleSTArrayInitializerExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:341:1: ( ruleSTArrayInitializerExpression EOF )
            // InternalSTAlgorithmParser.g:342:1: ruleSTArrayInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTArrayInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTArrayInitializerExpression"


    // $ANTLR start "ruleSTArrayInitializerExpression"
    // InternalSTAlgorithmParser.g:349:1: ruleSTArrayInitializerExpression : ( ( rule__STArrayInitializerExpression__Group__0 ) ) ;
    public final void ruleSTArrayInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:353:2: ( ( ( rule__STArrayInitializerExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:354:2: ( ( rule__STArrayInitializerExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:354:2: ( ( rule__STArrayInitializerExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:355:3: ( rule__STArrayInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:356:3: ( rule__STArrayInitializerExpression__Group__0 )
            // InternalSTAlgorithmParser.g:356:4: rule__STArrayInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTArrayInitializerExpression"


    // $ANTLR start "entryRuleSTArrayInitElement"
    // InternalSTAlgorithmParser.g:365:1: entryRuleSTArrayInitElement : ruleSTArrayInitElement EOF ;
    public final void entryRuleSTArrayInitElement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:366:1: ( ruleSTArrayInitElement EOF )
            // InternalSTAlgorithmParser.g:367:1: ruleSTArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTArrayInitElement"


    // $ANTLR start "ruleSTArrayInitElement"
    // InternalSTAlgorithmParser.g:374:1: ruleSTArrayInitElement : ( ( rule__STArrayInitElement__Group__0 ) ) ;
    public final void ruleSTArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:378:2: ( ( ( rule__STArrayInitElement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:379:2: ( ( rule__STArrayInitElement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:379:2: ( ( rule__STArrayInitElement__Group__0 ) )
            // InternalSTAlgorithmParser.g:380:3: ( rule__STArrayInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:381:3: ( rule__STArrayInitElement__Group__0 )
            // InternalSTAlgorithmParser.g:381:4: rule__STArrayInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTArrayInitElement"


    // $ANTLR start "entryRuleSTStatement"
    // InternalSTAlgorithmParser.g:390:1: entryRuleSTStatement : ruleSTStatement EOF ;
    public final void entryRuleSTStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:391:1: ( ruleSTStatement EOF )
            // InternalSTAlgorithmParser.g:392:1: ruleSTStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStatement"


    // $ANTLR start "ruleSTStatement"
    // InternalSTAlgorithmParser.g:399:1: ruleSTStatement : ( ( rule__STStatement__Alternatives ) ) ;
    public final void ruleSTStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:403:2: ( ( ( rule__STStatement__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:404:2: ( ( rule__STStatement__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:404:2: ( ( rule__STStatement__Alternatives ) )
            // InternalSTAlgorithmParser.g:405:3: ( rule__STStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:406:3: ( rule__STStatement__Alternatives )
            // InternalSTAlgorithmParser.g:406:4: rule__STStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStatement"


    // $ANTLR start "entryRuleSTAssignmentStatement"
    // InternalSTAlgorithmParser.g:415:1: entryRuleSTAssignmentStatement : ruleSTAssignmentStatement EOF ;
    public final void entryRuleSTAssignmentStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:416:1: ( ruleSTAssignmentStatement EOF )
            // InternalSTAlgorithmParser.g:417:1: ruleSTAssignmentStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAssignmentStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAssignmentStatement"


    // $ANTLR start "ruleSTAssignmentStatement"
    // InternalSTAlgorithmParser.g:424:1: ruleSTAssignmentStatement : ( ( rule__STAssignmentStatement__Group__0 ) ) ;
    public final void ruleSTAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:428:2: ( ( ( rule__STAssignmentStatement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:429:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:429:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            // InternalSTAlgorithmParser.g:430:3: ( rule__STAssignmentStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:431:3: ( rule__STAssignmentStatement__Group__0 )
            // InternalSTAlgorithmParser.g:431:4: rule__STAssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAssignmentStatement"


    // $ANTLR start "entryRuleSTCallStatement"
    // InternalSTAlgorithmParser.g:440:1: entryRuleSTCallStatement : ruleSTCallStatement EOF ;
    public final void entryRuleSTCallStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:441:1: ( ruleSTCallStatement EOF )
            // InternalSTAlgorithmParser.g:442:1: ruleSTCallStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallStatement"


    // $ANTLR start "ruleSTCallStatement"
    // InternalSTAlgorithmParser.g:449:1: ruleSTCallStatement : ( ( rule__STCallStatement__CallAssignment ) ) ;
    public final void ruleSTCallStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:453:2: ( ( ( rule__STCallStatement__CallAssignment ) ) )
            // InternalSTAlgorithmParser.g:454:2: ( ( rule__STCallStatement__CallAssignment ) )
            {
            // InternalSTAlgorithmParser.g:454:2: ( ( rule__STCallStatement__CallAssignment ) )
            // InternalSTAlgorithmParser.g:455:3: ( rule__STCallStatement__CallAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallStatementAccess().getCallAssignment()); 
            }
            // InternalSTAlgorithmParser.g:456:3: ( rule__STCallStatement__CallAssignment )
            // InternalSTAlgorithmParser.g:456:4: rule__STCallStatement__CallAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STCallStatement__CallAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallStatementAccess().getCallAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallStatement"


    // $ANTLR start "entryRuleSTCallArgument"
    // InternalSTAlgorithmParser.g:465:1: entryRuleSTCallArgument : ruleSTCallArgument EOF ;
    public final void entryRuleSTCallArgument() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:466:1: ( ruleSTCallArgument EOF )
            // InternalSTAlgorithmParser.g:467:1: ruleSTCallArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallArgument"


    // $ANTLR start "ruleSTCallArgument"
    // InternalSTAlgorithmParser.g:474:1: ruleSTCallArgument : ( ( rule__STCallArgument__Alternatives ) ) ;
    public final void ruleSTCallArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:478:2: ( ( ( rule__STCallArgument__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:479:2: ( ( rule__STCallArgument__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:479:2: ( ( rule__STCallArgument__Alternatives ) )
            // InternalSTAlgorithmParser.g:480:3: ( rule__STCallArgument__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallArgumentAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:481:3: ( rule__STCallArgument__Alternatives )
            // InternalSTAlgorithmParser.g:481:4: rule__STCallArgument__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STCallArgument__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallArgumentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallArgument"


    // $ANTLR start "entryRuleSTCallUnnamedArgument"
    // InternalSTAlgorithmParser.g:490:1: entryRuleSTCallUnnamedArgument : ruleSTCallUnnamedArgument EOF ;
    public final void entryRuleSTCallUnnamedArgument() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:491:1: ( ruleSTCallUnnamedArgument EOF )
            // InternalSTAlgorithmParser.g:492:1: ruleSTCallUnnamedArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallUnnamedArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallUnnamedArgument"


    // $ANTLR start "ruleSTCallUnnamedArgument"
    // InternalSTAlgorithmParser.g:499:1: ruleSTCallUnnamedArgument : ( ( rule__STCallUnnamedArgument__ArgAssignment ) ) ;
    public final void ruleSTCallUnnamedArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:503:2: ( ( ( rule__STCallUnnamedArgument__ArgAssignment ) ) )
            // InternalSTAlgorithmParser.g:504:2: ( ( rule__STCallUnnamedArgument__ArgAssignment ) )
            {
            // InternalSTAlgorithmParser.g:504:2: ( ( rule__STCallUnnamedArgument__ArgAssignment ) )
            // InternalSTAlgorithmParser.g:505:3: ( rule__STCallUnnamedArgument__ArgAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentAccess().getArgAssignment()); 
            }
            // InternalSTAlgorithmParser.g:506:3: ( rule__STCallUnnamedArgument__ArgAssignment )
            // InternalSTAlgorithmParser.g:506:4: rule__STCallUnnamedArgument__ArgAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STCallUnnamedArgument__ArgAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentAccess().getArgAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallUnnamedArgument"


    // $ANTLR start "entryRuleSTCallNamedInputArgument"
    // InternalSTAlgorithmParser.g:515:1: entryRuleSTCallNamedInputArgument : ruleSTCallNamedInputArgument EOF ;
    public final void entryRuleSTCallNamedInputArgument() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:516:1: ( ruleSTCallNamedInputArgument EOF )
            // InternalSTAlgorithmParser.g:517:1: ruleSTCallNamedInputArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallNamedInputArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallNamedInputArgument"


    // $ANTLR start "ruleSTCallNamedInputArgument"
    // InternalSTAlgorithmParser.g:524:1: ruleSTCallNamedInputArgument : ( ( rule__STCallNamedInputArgument__Group__0 ) ) ;
    public final void ruleSTCallNamedInputArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:528:2: ( ( ( rule__STCallNamedInputArgument__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:529:2: ( ( rule__STCallNamedInputArgument__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:529:2: ( ( rule__STCallNamedInputArgument__Group__0 ) )
            // InternalSTAlgorithmParser.g:530:3: ( rule__STCallNamedInputArgument__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:531:3: ( rule__STCallNamedInputArgument__Group__0 )
            // InternalSTAlgorithmParser.g:531:4: rule__STCallNamedInputArgument__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallNamedInputArgument"


    // $ANTLR start "entryRuleSTCallNamedOutputArgument"
    // InternalSTAlgorithmParser.g:540:1: entryRuleSTCallNamedOutputArgument : ruleSTCallNamedOutputArgument EOF ;
    public final void entryRuleSTCallNamedOutputArgument() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:541:1: ( ruleSTCallNamedOutputArgument EOF )
            // InternalSTAlgorithmParser.g:542:1: ruleSTCallNamedOutputArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallNamedOutputArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallNamedOutputArgument"


    // $ANTLR start "ruleSTCallNamedOutputArgument"
    // InternalSTAlgorithmParser.g:549:1: ruleSTCallNamedOutputArgument : ( ( rule__STCallNamedOutputArgument__Group__0 ) ) ;
    public final void ruleSTCallNamedOutputArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:553:2: ( ( ( rule__STCallNamedOutputArgument__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:554:2: ( ( rule__STCallNamedOutputArgument__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:554:2: ( ( rule__STCallNamedOutputArgument__Group__0 ) )
            // InternalSTAlgorithmParser.g:555:3: ( rule__STCallNamedOutputArgument__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:556:3: ( rule__STCallNamedOutputArgument__Group__0 )
            // InternalSTAlgorithmParser.g:556:4: rule__STCallNamedOutputArgument__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallNamedOutputArgument"


    // $ANTLR start "entryRuleSTIfStatement"
    // InternalSTAlgorithmParser.g:565:1: entryRuleSTIfStatement : ruleSTIfStatement EOF ;
    public final void entryRuleSTIfStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:566:1: ( ruleSTIfStatement EOF )
            // InternalSTAlgorithmParser.g:567:1: ruleSTIfStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTIfStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTIfStatement"


    // $ANTLR start "ruleSTIfStatement"
    // InternalSTAlgorithmParser.g:574:1: ruleSTIfStatement : ( ( rule__STIfStatement__Group__0 ) ) ;
    public final void ruleSTIfStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:578:2: ( ( ( rule__STIfStatement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:579:2: ( ( rule__STIfStatement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:579:2: ( ( rule__STIfStatement__Group__0 ) )
            // InternalSTAlgorithmParser.g:580:3: ( rule__STIfStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:581:3: ( rule__STIfStatement__Group__0 )
            // InternalSTAlgorithmParser.g:581:4: rule__STIfStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTIfStatement"


    // $ANTLR start "entryRuleSTElseIfPart"
    // InternalSTAlgorithmParser.g:590:1: entryRuleSTElseIfPart : ruleSTElseIfPart EOF ;
    public final void entryRuleSTElseIfPart() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:591:1: ( ruleSTElseIfPart EOF )
            // InternalSTAlgorithmParser.g:592:1: ruleSTElseIfPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElseIfPart"


    // $ANTLR start "ruleSTElseIfPart"
    // InternalSTAlgorithmParser.g:599:1: ruleSTElseIfPart : ( ( rule__STElseIfPart__Group__0 ) ) ;
    public final void ruleSTElseIfPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:603:2: ( ( ( rule__STElseIfPart__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:604:2: ( ( rule__STElseIfPart__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:604:2: ( ( rule__STElseIfPart__Group__0 ) )
            // InternalSTAlgorithmParser.g:605:3: ( rule__STElseIfPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:606:3: ( rule__STElseIfPart__Group__0 )
            // InternalSTAlgorithmParser.g:606:4: rule__STElseIfPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElseIfPart"


    // $ANTLR start "entryRuleSTCaseStatement"
    // InternalSTAlgorithmParser.g:615:1: entryRuleSTCaseStatement : ruleSTCaseStatement EOF ;
    public final void entryRuleSTCaseStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:616:1: ( ruleSTCaseStatement EOF )
            // InternalSTAlgorithmParser.g:617:1: ruleSTCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseStatement"


    // $ANTLR start "ruleSTCaseStatement"
    // InternalSTAlgorithmParser.g:624:1: ruleSTCaseStatement : ( ( rule__STCaseStatement__Group__0 ) ) ;
    public final void ruleSTCaseStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:628:2: ( ( ( rule__STCaseStatement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:629:2: ( ( rule__STCaseStatement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:629:2: ( ( rule__STCaseStatement__Group__0 ) )
            // InternalSTAlgorithmParser.g:630:3: ( rule__STCaseStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:631:3: ( rule__STCaseStatement__Group__0 )
            // InternalSTAlgorithmParser.g:631:4: rule__STCaseStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseStatement"


    // $ANTLR start "entryRuleSTCaseCases"
    // InternalSTAlgorithmParser.g:640:1: entryRuleSTCaseCases : ruleSTCaseCases EOF ;
    public final void entryRuleSTCaseCases() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:641:1: ( ruleSTCaseCases EOF )
            // InternalSTAlgorithmParser.g:642:1: ruleSTCaseCases EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseCases"


    // $ANTLR start "ruleSTCaseCases"
    // InternalSTAlgorithmParser.g:649:1: ruleSTCaseCases : ( ( rule__STCaseCases__Group__0 ) ) ;
    public final void ruleSTCaseCases() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:653:2: ( ( ( rule__STCaseCases__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:654:2: ( ( rule__STCaseCases__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:654:2: ( ( rule__STCaseCases__Group__0 ) )
            // InternalSTAlgorithmParser.g:655:3: ( rule__STCaseCases__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:656:3: ( rule__STCaseCases__Group__0 )
            // InternalSTAlgorithmParser.g:656:4: rule__STCaseCases__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseCases"


    // $ANTLR start "entryRuleSTElsePart"
    // InternalSTAlgorithmParser.g:665:1: entryRuleSTElsePart : ruleSTElsePart EOF ;
    public final void entryRuleSTElsePart() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:666:1: ( ruleSTElsePart EOF )
            // InternalSTAlgorithmParser.g:667:1: ruleSTElsePart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElsePart"


    // $ANTLR start "ruleSTElsePart"
    // InternalSTAlgorithmParser.g:674:1: ruleSTElsePart : ( ( rule__STElsePart__Group__0 ) ) ;
    public final void ruleSTElsePart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:678:2: ( ( ( rule__STElsePart__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:679:2: ( ( rule__STElsePart__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:679:2: ( ( rule__STElsePart__Group__0 ) )
            // InternalSTAlgorithmParser.g:680:3: ( rule__STElsePart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:681:3: ( rule__STElsePart__Group__0 )
            // InternalSTAlgorithmParser.g:681:4: rule__STElsePart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElsePart"


    // $ANTLR start "entryRuleSTForStatement"
    // InternalSTAlgorithmParser.g:690:1: entryRuleSTForStatement : ruleSTForStatement EOF ;
    public final void entryRuleSTForStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:691:1: ( ruleSTForStatement EOF )
            // InternalSTAlgorithmParser.g:692:1: ruleSTForStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTForStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTForStatement"


    // $ANTLR start "ruleSTForStatement"
    // InternalSTAlgorithmParser.g:699:1: ruleSTForStatement : ( ( rule__STForStatement__Group__0 ) ) ;
    public final void ruleSTForStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:703:2: ( ( ( rule__STForStatement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:704:2: ( ( rule__STForStatement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:704:2: ( ( rule__STForStatement__Group__0 ) )
            // InternalSTAlgorithmParser.g:705:3: ( rule__STForStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:706:3: ( rule__STForStatement__Group__0 )
            // InternalSTAlgorithmParser.g:706:4: rule__STForStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTForStatement"


    // $ANTLR start "entryRuleSTWhileStatement"
    // InternalSTAlgorithmParser.g:715:1: entryRuleSTWhileStatement : ruleSTWhileStatement EOF ;
    public final void entryRuleSTWhileStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:716:1: ( ruleSTWhileStatement EOF )
            // InternalSTAlgorithmParser.g:717:1: ruleSTWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTWhileStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTWhileStatement"


    // $ANTLR start "ruleSTWhileStatement"
    // InternalSTAlgorithmParser.g:724:1: ruleSTWhileStatement : ( ( rule__STWhileStatement__Group__0 ) ) ;
    public final void ruleSTWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:728:2: ( ( ( rule__STWhileStatement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:729:2: ( ( rule__STWhileStatement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:729:2: ( ( rule__STWhileStatement__Group__0 ) )
            // InternalSTAlgorithmParser.g:730:3: ( rule__STWhileStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:731:3: ( rule__STWhileStatement__Group__0 )
            // InternalSTAlgorithmParser.g:731:4: rule__STWhileStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTWhileStatement"


    // $ANTLR start "entryRuleSTRepeatStatement"
    // InternalSTAlgorithmParser.g:740:1: entryRuleSTRepeatStatement : ruleSTRepeatStatement EOF ;
    public final void entryRuleSTRepeatStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:741:1: ( ruleSTRepeatStatement EOF )
            // InternalSTAlgorithmParser.g:742:1: ruleSTRepeatStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRepeatStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRepeatStatement"


    // $ANTLR start "ruleSTRepeatStatement"
    // InternalSTAlgorithmParser.g:749:1: ruleSTRepeatStatement : ( ( rule__STRepeatStatement__Group__0 ) ) ;
    public final void ruleSTRepeatStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:753:2: ( ( ( rule__STRepeatStatement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:754:2: ( ( rule__STRepeatStatement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:754:2: ( ( rule__STRepeatStatement__Group__0 ) )
            // InternalSTAlgorithmParser.g:755:3: ( rule__STRepeatStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:756:3: ( rule__STRepeatStatement__Group__0 )
            // InternalSTAlgorithmParser.g:756:4: rule__STRepeatStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRepeatStatement"


    // $ANTLR start "entryRuleSTExpression"
    // InternalSTAlgorithmParser.g:765:1: entryRuleSTExpression : ruleSTExpression EOF ;
    public final void entryRuleSTExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:766:1: ( ruleSTExpression EOF )
            // InternalSTAlgorithmParser.g:767:1: ruleSTExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpression"


    // $ANTLR start "ruleSTExpression"
    // InternalSTAlgorithmParser.g:774:1: ruleSTExpression : ( ruleSTSubrangeExpression ) ;
    public final void ruleSTExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:778:2: ( ( ruleSTSubrangeExpression ) )
            // InternalSTAlgorithmParser.g:779:2: ( ruleSTSubrangeExpression )
            {
            // InternalSTAlgorithmParser.g:779:2: ( ruleSTSubrangeExpression )
            // InternalSTAlgorithmParser.g:780:3: ruleSTSubrangeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpression"


    // $ANTLR start "entryRuleSTSubrangeExpression"
    // InternalSTAlgorithmParser.g:790:1: entryRuleSTSubrangeExpression : ruleSTSubrangeExpression EOF ;
    public final void entryRuleSTSubrangeExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:791:1: ( ruleSTSubrangeExpression EOF )
            // InternalSTAlgorithmParser.g:792:1: ruleSTSubrangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSubrangeExpression"


    // $ANTLR start "ruleSTSubrangeExpression"
    // InternalSTAlgorithmParser.g:799:1: ruleSTSubrangeExpression : ( ( rule__STSubrangeExpression__Group__0 ) ) ;
    public final void ruleSTSubrangeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:803:2: ( ( ( rule__STSubrangeExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:804:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:804:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:805:3: ( rule__STSubrangeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:806:3: ( rule__STSubrangeExpression__Group__0 )
            // InternalSTAlgorithmParser.g:806:4: rule__STSubrangeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSubrangeExpression"


    // $ANTLR start "entryRuleSTOrExpression"
    // InternalSTAlgorithmParser.g:815:1: entryRuleSTOrExpression : ruleSTOrExpression EOF ;
    public final void entryRuleSTOrExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:816:1: ( ruleSTOrExpression EOF )
            // InternalSTAlgorithmParser.g:817:1: ruleSTOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTOrExpression"


    // $ANTLR start "ruleSTOrExpression"
    // InternalSTAlgorithmParser.g:824:1: ruleSTOrExpression : ( ( rule__STOrExpression__Group__0 ) ) ;
    public final void ruleSTOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:828:2: ( ( ( rule__STOrExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:829:2: ( ( rule__STOrExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:829:2: ( ( rule__STOrExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:830:3: ( rule__STOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:831:3: ( rule__STOrExpression__Group__0 )
            // InternalSTAlgorithmParser.g:831:4: rule__STOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTOrExpression"


    // $ANTLR start "entryRuleSTXorExpression"
    // InternalSTAlgorithmParser.g:840:1: entryRuleSTXorExpression : ruleSTXorExpression EOF ;
    public final void entryRuleSTXorExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:841:1: ( ruleSTXorExpression EOF )
            // InternalSTAlgorithmParser.g:842:1: ruleSTXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTXorExpression"


    // $ANTLR start "ruleSTXorExpression"
    // InternalSTAlgorithmParser.g:849:1: ruleSTXorExpression : ( ( rule__STXorExpression__Group__0 ) ) ;
    public final void ruleSTXorExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:853:2: ( ( ( rule__STXorExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:854:2: ( ( rule__STXorExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:854:2: ( ( rule__STXorExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:855:3: ( rule__STXorExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:856:3: ( rule__STXorExpression__Group__0 )
            // InternalSTAlgorithmParser.g:856:4: rule__STXorExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTXorExpression"


    // $ANTLR start "entryRuleSTAndExpression"
    // InternalSTAlgorithmParser.g:865:1: entryRuleSTAndExpression : ruleSTAndExpression EOF ;
    public final void entryRuleSTAndExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:866:1: ( ruleSTAndExpression EOF )
            // InternalSTAlgorithmParser.g:867:1: ruleSTAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAndExpression"


    // $ANTLR start "ruleSTAndExpression"
    // InternalSTAlgorithmParser.g:874:1: ruleSTAndExpression : ( ( rule__STAndExpression__Group__0 ) ) ;
    public final void ruleSTAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:878:2: ( ( ( rule__STAndExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:879:2: ( ( rule__STAndExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:879:2: ( ( rule__STAndExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:880:3: ( rule__STAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:881:3: ( rule__STAndExpression__Group__0 )
            // InternalSTAlgorithmParser.g:881:4: rule__STAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAndExpression"


    // $ANTLR start "entryRuleSTEqualityExpression"
    // InternalSTAlgorithmParser.g:890:1: entryRuleSTEqualityExpression : ruleSTEqualityExpression EOF ;
    public final void entryRuleSTEqualityExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:891:1: ( ruleSTEqualityExpression EOF )
            // InternalSTAlgorithmParser.g:892:1: ruleSTEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTEqualityExpression"


    // $ANTLR start "ruleSTEqualityExpression"
    // InternalSTAlgorithmParser.g:899:1: ruleSTEqualityExpression : ( ( rule__STEqualityExpression__Group__0 ) ) ;
    public final void ruleSTEqualityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:903:2: ( ( ( rule__STEqualityExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:904:2: ( ( rule__STEqualityExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:904:2: ( ( rule__STEqualityExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:905:3: ( rule__STEqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:906:3: ( rule__STEqualityExpression__Group__0 )
            // InternalSTAlgorithmParser.g:906:4: rule__STEqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTEqualityExpression"


    // $ANTLR start "entryRuleSTComparisonExpression"
    // InternalSTAlgorithmParser.g:915:1: entryRuleSTComparisonExpression : ruleSTComparisonExpression EOF ;
    public final void entryRuleSTComparisonExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:916:1: ( ruleSTComparisonExpression EOF )
            // InternalSTAlgorithmParser.g:917:1: ruleSTComparisonExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTComparisonExpression"


    // $ANTLR start "ruleSTComparisonExpression"
    // InternalSTAlgorithmParser.g:924:1: ruleSTComparisonExpression : ( ( rule__STComparisonExpression__Group__0 ) ) ;
    public final void ruleSTComparisonExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:928:2: ( ( ( rule__STComparisonExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:929:2: ( ( rule__STComparisonExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:929:2: ( ( rule__STComparisonExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:930:3: ( rule__STComparisonExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:931:3: ( rule__STComparisonExpression__Group__0 )
            // InternalSTAlgorithmParser.g:931:4: rule__STComparisonExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTComparisonExpression"


    // $ANTLR start "entryRuleSTAddSubExpression"
    // InternalSTAlgorithmParser.g:940:1: entryRuleSTAddSubExpression : ruleSTAddSubExpression EOF ;
    public final void entryRuleSTAddSubExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:941:1: ( ruleSTAddSubExpression EOF )
            // InternalSTAlgorithmParser.g:942:1: ruleSTAddSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAddSubExpression"


    // $ANTLR start "ruleSTAddSubExpression"
    // InternalSTAlgorithmParser.g:949:1: ruleSTAddSubExpression : ( ( rule__STAddSubExpression__Group__0 ) ) ;
    public final void ruleSTAddSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:953:2: ( ( ( rule__STAddSubExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:954:2: ( ( rule__STAddSubExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:954:2: ( ( rule__STAddSubExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:955:3: ( rule__STAddSubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:956:3: ( rule__STAddSubExpression__Group__0 )
            // InternalSTAlgorithmParser.g:956:4: rule__STAddSubExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAddSubExpression"


    // $ANTLR start "entryRuleSTMulDivModExpression"
    // InternalSTAlgorithmParser.g:965:1: entryRuleSTMulDivModExpression : ruleSTMulDivModExpression EOF ;
    public final void entryRuleSTMulDivModExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:966:1: ( ruleSTMulDivModExpression EOF )
            // InternalSTAlgorithmParser.g:967:1: ruleSTMulDivModExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMulDivModExpression"


    // $ANTLR start "ruleSTMulDivModExpression"
    // InternalSTAlgorithmParser.g:974:1: ruleSTMulDivModExpression : ( ( rule__STMulDivModExpression__Group__0 ) ) ;
    public final void ruleSTMulDivModExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:978:2: ( ( ( rule__STMulDivModExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:979:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:979:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:980:3: ( rule__STMulDivModExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:981:3: ( rule__STMulDivModExpression__Group__0 )
            // InternalSTAlgorithmParser.g:981:4: rule__STMulDivModExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMulDivModExpression"


    // $ANTLR start "entryRuleSTPowerExpression"
    // InternalSTAlgorithmParser.g:990:1: entryRuleSTPowerExpression : ruleSTPowerExpression EOF ;
    public final void entryRuleSTPowerExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:991:1: ( ruleSTPowerExpression EOF )
            // InternalSTAlgorithmParser.g:992:1: ruleSTPowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPowerExpression"


    // $ANTLR start "ruleSTPowerExpression"
    // InternalSTAlgorithmParser.g:999:1: ruleSTPowerExpression : ( ( rule__STPowerExpression__Group__0 ) ) ;
    public final void ruleSTPowerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1003:2: ( ( ( rule__STPowerExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1004:2: ( ( rule__STPowerExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1004:2: ( ( rule__STPowerExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1005:3: ( rule__STPowerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1006:3: ( rule__STPowerExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1006:4: rule__STPowerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPowerExpression"


    // $ANTLR start "entryRuleSTUnaryExpression"
    // InternalSTAlgorithmParser.g:1015:1: entryRuleSTUnaryExpression : ruleSTUnaryExpression EOF ;
    public final void entryRuleSTUnaryExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1016:1: ( ruleSTUnaryExpression EOF )
            // InternalSTAlgorithmParser.g:1017:1: ruleSTUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTUnaryExpression"


    // $ANTLR start "ruleSTUnaryExpression"
    // InternalSTAlgorithmParser.g:1024:1: ruleSTUnaryExpression : ( ( rule__STUnaryExpression__Alternatives ) ) ;
    public final void ruleSTUnaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1028:2: ( ( ( rule__STUnaryExpression__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1029:2: ( ( rule__STUnaryExpression__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1029:2: ( ( rule__STUnaryExpression__Alternatives ) )
            // InternalSTAlgorithmParser.g:1030:3: ( rule__STUnaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1031:3: ( rule__STUnaryExpression__Alternatives )
            // InternalSTAlgorithmParser.g:1031:4: rule__STUnaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTUnaryExpression"


    // $ANTLR start "entryRuleSTAccessExpression"
    // InternalSTAlgorithmParser.g:1040:1: entryRuleSTAccessExpression : ruleSTAccessExpression EOF ;
    public final void entryRuleSTAccessExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1041:1: ( ruleSTAccessExpression EOF )
            // InternalSTAlgorithmParser.g:1042:1: ruleSTAccessExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAccessExpression"


    // $ANTLR start "ruleSTAccessExpression"
    // InternalSTAlgorithmParser.g:1049:1: ruleSTAccessExpression : ( ( rule__STAccessExpression__Group__0 ) ) ;
    public final void ruleSTAccessExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1053:2: ( ( ( rule__STAccessExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1054:2: ( ( rule__STAccessExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1054:2: ( ( rule__STAccessExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1055:3: ( rule__STAccessExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1056:3: ( rule__STAccessExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1056:4: rule__STAccessExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAccessExpression"


    // $ANTLR start "entryRuleSTPrimaryExpression"
    // InternalSTAlgorithmParser.g:1065:1: entryRuleSTPrimaryExpression : ruleSTPrimaryExpression EOF ;
    public final void entryRuleSTPrimaryExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1066:1: ( ruleSTPrimaryExpression EOF )
            // InternalSTAlgorithmParser.g:1067:1: ruleSTPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPrimaryExpression"


    // $ANTLR start "ruleSTPrimaryExpression"
    // InternalSTAlgorithmParser.g:1074:1: ruleSTPrimaryExpression : ( ( rule__STPrimaryExpression__Alternatives ) ) ;
    public final void ruleSTPrimaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1078:2: ( ( ( rule__STPrimaryExpression__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1079:2: ( ( rule__STPrimaryExpression__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1079:2: ( ( rule__STPrimaryExpression__Alternatives ) )
            // InternalSTAlgorithmParser.g:1080:3: ( rule__STPrimaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1081:3: ( rule__STPrimaryExpression__Alternatives )
            // InternalSTAlgorithmParser.g:1081:4: rule__STPrimaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPrimaryExpression"


    // $ANTLR start "entryRuleSTFeatureExpression"
    // InternalSTAlgorithmParser.g:1090:1: entryRuleSTFeatureExpression : ruleSTFeatureExpression EOF ;
    public final void entryRuleSTFeatureExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1091:1: ( ruleSTFeatureExpression EOF )
            // InternalSTAlgorithmParser.g:1092:1: ruleSTFeatureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFeatureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFeatureExpression"


    // $ANTLR start "ruleSTFeatureExpression"
    // InternalSTAlgorithmParser.g:1099:1: ruleSTFeatureExpression : ( ( rule__STFeatureExpression__Group__0 ) ) ;
    public final void ruleSTFeatureExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1103:2: ( ( ( rule__STFeatureExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1104:2: ( ( rule__STFeatureExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1104:2: ( ( rule__STFeatureExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1105:3: ( rule__STFeatureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1106:3: ( rule__STFeatureExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1106:4: rule__STFeatureExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFeatureExpression"


    // $ANTLR start "entryRuleSTMultibitPartialExpression"
    // InternalSTAlgorithmParser.g:1115:1: entryRuleSTMultibitPartialExpression : ruleSTMultibitPartialExpression EOF ;
    public final void entryRuleSTMultibitPartialExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1116:1: ( ruleSTMultibitPartialExpression EOF )
            // InternalSTAlgorithmParser.g:1117:1: ruleSTMultibitPartialExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMultibitPartialExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMultibitPartialExpression"


    // $ANTLR start "ruleSTMultibitPartialExpression"
    // InternalSTAlgorithmParser.g:1124:1: ruleSTMultibitPartialExpression : ( ( rule__STMultibitPartialExpression__Group__0 ) ) ;
    public final void ruleSTMultibitPartialExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1128:2: ( ( ( rule__STMultibitPartialExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1129:2: ( ( rule__STMultibitPartialExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1129:2: ( ( rule__STMultibitPartialExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1130:3: ( rule__STMultibitPartialExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1131:3: ( rule__STMultibitPartialExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1131:4: rule__STMultibitPartialExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMultibitPartialExpression"


    // $ANTLR start "entryRuleSTLiteralExpressions"
    // InternalSTAlgorithmParser.g:1140:1: entryRuleSTLiteralExpressions : ruleSTLiteralExpressions EOF ;
    public final void entryRuleSTLiteralExpressions() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1141:1: ( ruleSTLiteralExpressions EOF )
            // InternalSTAlgorithmParser.g:1142:1: ruleSTLiteralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLiteralExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLiteralExpressions"


    // $ANTLR start "ruleSTLiteralExpressions"
    // InternalSTAlgorithmParser.g:1149:1: ruleSTLiteralExpressions : ( ( rule__STLiteralExpressions__Alternatives ) ) ;
    public final void ruleSTLiteralExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1153:2: ( ( ( rule__STLiteralExpressions__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1154:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1154:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            // InternalSTAlgorithmParser.g:1155:3: ( rule__STLiteralExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1156:3: ( rule__STLiteralExpressions__Alternatives )
            // InternalSTAlgorithmParser.g:1156:4: rule__STLiteralExpressions__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLiteralExpressions"


    // $ANTLR start "entryRuleSTNumericLiteralType"
    // InternalSTAlgorithmParser.g:1165:1: entryRuleSTNumericLiteralType : ruleSTNumericLiteralType EOF ;
    public final void entryRuleSTNumericLiteralType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1166:1: ( ruleSTNumericLiteralType EOF )
            // InternalSTAlgorithmParser.g:1167:1: ruleSTNumericLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTNumericLiteralType"


    // $ANTLR start "ruleSTNumericLiteralType"
    // InternalSTAlgorithmParser.g:1174:1: ruleSTNumericLiteralType : ( ( rule__STNumericLiteralType__Alternatives ) ) ;
    public final void ruleSTNumericLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1178:2: ( ( ( rule__STNumericLiteralType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1179:2: ( ( rule__STNumericLiteralType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1179:2: ( ( rule__STNumericLiteralType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1180:3: ( rule__STNumericLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1181:3: ( rule__STNumericLiteralType__Alternatives )
            // InternalSTAlgorithmParser.g:1181:4: rule__STNumericLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTNumericLiteralType"


    // $ANTLR start "entryRuleSTNumericLiteral"
    // InternalSTAlgorithmParser.g:1190:1: entryRuleSTNumericLiteral : ruleSTNumericLiteral EOF ;
    public final void entryRuleSTNumericLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1191:1: ( ruleSTNumericLiteral EOF )
            // InternalSTAlgorithmParser.g:1192:1: ruleSTNumericLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTNumericLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTNumericLiteral"


    // $ANTLR start "ruleSTNumericLiteral"
    // InternalSTAlgorithmParser.g:1199:1: ruleSTNumericLiteral : ( ( rule__STNumericLiteral__Group__0 ) ) ;
    public final void ruleSTNumericLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1203:2: ( ( ( rule__STNumericLiteral__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1204:2: ( ( rule__STNumericLiteral__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1204:2: ( ( rule__STNumericLiteral__Group__0 ) )
            // InternalSTAlgorithmParser.g:1205:3: ( rule__STNumericLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1206:3: ( rule__STNumericLiteral__Group__0 )
            // InternalSTAlgorithmParser.g:1206:4: rule__STNumericLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTNumericLiteral"


    // $ANTLR start "entryRuleSTDateLiteralType"
    // InternalSTAlgorithmParser.g:1215:1: entryRuleSTDateLiteralType : ruleSTDateLiteralType EOF ;
    public final void entryRuleSTDateLiteralType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1216:1: ( ruleSTDateLiteralType EOF )
            // InternalSTAlgorithmParser.g:1217:1: ruleSTDateLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateLiteralType"


    // $ANTLR start "ruleSTDateLiteralType"
    // InternalSTAlgorithmParser.g:1224:1: ruleSTDateLiteralType : ( ( rule__STDateLiteralType__Alternatives ) ) ;
    public final void ruleSTDateLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1228:2: ( ( ( rule__STDateLiteralType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1229:2: ( ( rule__STDateLiteralType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1229:2: ( ( rule__STDateLiteralType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1230:3: ( rule__STDateLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1231:3: ( rule__STDateLiteralType__Alternatives )
            // InternalSTAlgorithmParser.g:1231:4: rule__STDateLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateLiteralType"


    // $ANTLR start "entryRuleSTDateLiteral"
    // InternalSTAlgorithmParser.g:1240:1: entryRuleSTDateLiteral : ruleSTDateLiteral EOF ;
    public final void entryRuleSTDateLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1241:1: ( ruleSTDateLiteral EOF )
            // InternalSTAlgorithmParser.g:1242:1: ruleSTDateLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateLiteral"


    // $ANTLR start "ruleSTDateLiteral"
    // InternalSTAlgorithmParser.g:1249:1: ruleSTDateLiteral : ( ( rule__STDateLiteral__Group__0 ) ) ;
    public final void ruleSTDateLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1253:2: ( ( ( rule__STDateLiteral__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1254:2: ( ( rule__STDateLiteral__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1254:2: ( ( rule__STDateLiteral__Group__0 ) )
            // InternalSTAlgorithmParser.g:1255:3: ( rule__STDateLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1256:3: ( rule__STDateLiteral__Group__0 )
            // InternalSTAlgorithmParser.g:1256:4: rule__STDateLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateLiteral"


    // $ANTLR start "entryRuleSTTimeLiteralType"
    // InternalSTAlgorithmParser.g:1265:1: entryRuleSTTimeLiteralType : ruleSTTimeLiteralType EOF ;
    public final void entryRuleSTTimeLiteralType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1266:1: ( ruleSTTimeLiteralType EOF )
            // InternalSTAlgorithmParser.g:1267:1: ruleSTTimeLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeLiteralType"


    // $ANTLR start "ruleSTTimeLiteralType"
    // InternalSTAlgorithmParser.g:1274:1: ruleSTTimeLiteralType : ( ( rule__STTimeLiteralType__Alternatives ) ) ;
    public final void ruleSTTimeLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1278:2: ( ( ( rule__STTimeLiteralType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1279:2: ( ( rule__STTimeLiteralType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1279:2: ( ( rule__STTimeLiteralType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1280:3: ( rule__STTimeLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1281:3: ( rule__STTimeLiteralType__Alternatives )
            // InternalSTAlgorithmParser.g:1281:4: rule__STTimeLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeLiteralType"


    // $ANTLR start "entryRuleSTTimeLiteral"
    // InternalSTAlgorithmParser.g:1290:1: entryRuleSTTimeLiteral : ruleSTTimeLiteral EOF ;
    public final void entryRuleSTTimeLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1291:1: ( ruleSTTimeLiteral EOF )
            // InternalSTAlgorithmParser.g:1292:1: ruleSTTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeLiteral"


    // $ANTLR start "ruleSTTimeLiteral"
    // InternalSTAlgorithmParser.g:1299:1: ruleSTTimeLiteral : ( ( rule__STTimeLiteral__Group__0 ) ) ;
    public final void ruleSTTimeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1303:2: ( ( ( rule__STTimeLiteral__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1304:2: ( ( rule__STTimeLiteral__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1304:2: ( ( rule__STTimeLiteral__Group__0 ) )
            // InternalSTAlgorithmParser.g:1305:3: ( rule__STTimeLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1306:3: ( rule__STTimeLiteral__Group__0 )
            // InternalSTAlgorithmParser.g:1306:4: rule__STTimeLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeLiteral"


    // $ANTLR start "entryRuleSTTimeOfDayLiteral"
    // InternalSTAlgorithmParser.g:1315:1: entryRuleSTTimeOfDayLiteral : ruleSTTimeOfDayLiteral EOF ;
    public final void entryRuleSTTimeOfDayLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1316:1: ( ruleSTTimeOfDayLiteral EOF )
            // InternalSTAlgorithmParser.g:1317:1: ruleSTTimeOfDayLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeOfDayLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeOfDayLiteral"


    // $ANTLR start "ruleSTTimeOfDayLiteral"
    // InternalSTAlgorithmParser.g:1324:1: ruleSTTimeOfDayLiteral : ( ( rule__STTimeOfDayLiteral__Group__0 ) ) ;
    public final void ruleSTTimeOfDayLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1328:2: ( ( ( rule__STTimeOfDayLiteral__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1329:2: ( ( rule__STTimeOfDayLiteral__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1329:2: ( ( rule__STTimeOfDayLiteral__Group__0 ) )
            // InternalSTAlgorithmParser.g:1330:3: ( rule__STTimeOfDayLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1331:3: ( rule__STTimeOfDayLiteral__Group__0 )
            // InternalSTAlgorithmParser.g:1331:4: rule__STTimeOfDayLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeOfDayLiteral"


    // $ANTLR start "entryRuleSTDateAndTimeLiteral"
    // InternalSTAlgorithmParser.g:1340:1: entryRuleSTDateAndTimeLiteral : ruleSTDateAndTimeLiteral EOF ;
    public final void entryRuleSTDateAndTimeLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1341:1: ( ruleSTDateAndTimeLiteral EOF )
            // InternalSTAlgorithmParser.g:1342:1: ruleSTDateAndTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateAndTimeLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateAndTimeLiteral"


    // $ANTLR start "ruleSTDateAndTimeLiteral"
    // InternalSTAlgorithmParser.g:1349:1: ruleSTDateAndTimeLiteral : ( ( rule__STDateAndTimeLiteral__Group__0 ) ) ;
    public final void ruleSTDateAndTimeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1353:2: ( ( ( rule__STDateAndTimeLiteral__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1354:2: ( ( rule__STDateAndTimeLiteral__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1354:2: ( ( rule__STDateAndTimeLiteral__Group__0 ) )
            // InternalSTAlgorithmParser.g:1355:3: ( rule__STDateAndTimeLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1356:3: ( rule__STDateAndTimeLiteral__Group__0 )
            // InternalSTAlgorithmParser.g:1356:4: rule__STDateAndTimeLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateAndTimeLiteral"


    // $ANTLR start "entryRuleSTStringLiteral"
    // InternalSTAlgorithmParser.g:1365:1: entryRuleSTStringLiteral : ruleSTStringLiteral EOF ;
    public final void entryRuleSTStringLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1366:1: ( ruleSTStringLiteral EOF )
            // InternalSTAlgorithmParser.g:1367:1: ruleSTStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStringLiteral"


    // $ANTLR start "ruleSTStringLiteral"
    // InternalSTAlgorithmParser.g:1374:1: ruleSTStringLiteral : ( ( rule__STStringLiteral__Group__0 ) ) ;
    public final void ruleSTStringLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1378:2: ( ( ( rule__STStringLiteral__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1379:2: ( ( rule__STStringLiteral__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1379:2: ( ( rule__STStringLiteral__Group__0 ) )
            // InternalSTAlgorithmParser.g:1380:3: ( rule__STStringLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1381:3: ( rule__STStringLiteral__Group__0 )
            // InternalSTAlgorithmParser.g:1381:4: rule__STStringLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStringLiteral"


    // $ANTLR start "entryRuleSTAnyType"
    // InternalSTAlgorithmParser.g:1390:1: entryRuleSTAnyType : ruleSTAnyType EOF ;
    public final void entryRuleSTAnyType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1391:1: ( ruleSTAnyType EOF )
            // InternalSTAlgorithmParser.g:1392:1: ruleSTAnyType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyType"


    // $ANTLR start "ruleSTAnyType"
    // InternalSTAlgorithmParser.g:1399:1: ruleSTAnyType : ( ( rule__STAnyType__Alternatives ) ) ;
    public final void ruleSTAnyType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1403:2: ( ( ( rule__STAnyType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1404:2: ( ( rule__STAnyType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1404:2: ( ( rule__STAnyType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1405:3: ( rule__STAnyType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1406:3: ( rule__STAnyType__Alternatives )
            // InternalSTAlgorithmParser.g:1406:4: rule__STAnyType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyType"


    // $ANTLR start "entryRuleSTAnyBuiltinType"
    // InternalSTAlgorithmParser.g:1415:1: entryRuleSTAnyBuiltinType : ruleSTAnyBuiltinType EOF ;
    public final void entryRuleSTAnyBuiltinType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1416:1: ( ruleSTAnyBuiltinType EOF )
            // InternalSTAlgorithmParser.g:1417:1: ruleSTAnyBuiltinType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBuiltinTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyBuiltinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBuiltinTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyBuiltinType"


    // $ANTLR start "ruleSTAnyBuiltinType"
    // InternalSTAlgorithmParser.g:1424:1: ruleSTAnyBuiltinType : ( ( rule__STAnyBuiltinType__Alternatives ) ) ;
    public final void ruleSTAnyBuiltinType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1428:2: ( ( ( rule__STAnyBuiltinType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1429:2: ( ( rule__STAnyBuiltinType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1429:2: ( ( rule__STAnyBuiltinType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1430:3: ( rule__STAnyBuiltinType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBuiltinTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1431:3: ( rule__STAnyBuiltinType__Alternatives )
            // InternalSTAlgorithmParser.g:1431:4: rule__STAnyBuiltinType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyBuiltinType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBuiltinTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyBuiltinType"


    // $ANTLR start "entryRuleSTAnyBitType"
    // InternalSTAlgorithmParser.g:1440:1: entryRuleSTAnyBitType : ruleSTAnyBitType EOF ;
    public final void entryRuleSTAnyBitType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1441:1: ( ruleSTAnyBitType EOF )
            // InternalSTAlgorithmParser.g:1442:1: ruleSTAnyBitType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBitTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyBitType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBitTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyBitType"


    // $ANTLR start "ruleSTAnyBitType"
    // InternalSTAlgorithmParser.g:1449:1: ruleSTAnyBitType : ( ( rule__STAnyBitType__Alternatives ) ) ;
    public final void ruleSTAnyBitType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1453:2: ( ( ( rule__STAnyBitType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1454:2: ( ( rule__STAnyBitType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1454:2: ( ( rule__STAnyBitType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1455:3: ( rule__STAnyBitType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBitTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1456:3: ( rule__STAnyBitType__Alternatives )
            // InternalSTAlgorithmParser.g:1456:4: rule__STAnyBitType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyBitType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBitTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyBitType"


    // $ANTLR start "entryRuleSTAnyNumType"
    // InternalSTAlgorithmParser.g:1465:1: entryRuleSTAnyNumType : ruleSTAnyNumType EOF ;
    public final void entryRuleSTAnyNumType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1466:1: ( ruleSTAnyNumType EOF )
            // InternalSTAlgorithmParser.g:1467:1: ruleSTAnyNumType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyNumTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyNumType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyNumTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyNumType"


    // $ANTLR start "ruleSTAnyNumType"
    // InternalSTAlgorithmParser.g:1474:1: ruleSTAnyNumType : ( ( rule__STAnyNumType__Alternatives ) ) ;
    public final void ruleSTAnyNumType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1478:2: ( ( ( rule__STAnyNumType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1479:2: ( ( rule__STAnyNumType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1479:2: ( ( rule__STAnyNumType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1480:3: ( rule__STAnyNumType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyNumTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1481:3: ( rule__STAnyNumType__Alternatives )
            // InternalSTAlgorithmParser.g:1481:4: rule__STAnyNumType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyNumType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyNumTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyNumType"


    // $ANTLR start "entryRuleSTAnyDurationType"
    // InternalSTAlgorithmParser.g:1490:1: entryRuleSTAnyDurationType : ruleSTAnyDurationType EOF ;
    public final void entryRuleSTAnyDurationType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1491:1: ( ruleSTAnyDurationType EOF )
            // InternalSTAlgorithmParser.g:1492:1: ruleSTAnyDurationType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDurationTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyDurationType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDurationTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyDurationType"


    // $ANTLR start "ruleSTAnyDurationType"
    // InternalSTAlgorithmParser.g:1499:1: ruleSTAnyDurationType : ( ( rule__STAnyDurationType__Alternatives ) ) ;
    public final void ruleSTAnyDurationType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1503:2: ( ( ( rule__STAnyDurationType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1504:2: ( ( rule__STAnyDurationType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1504:2: ( ( rule__STAnyDurationType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1505:3: ( rule__STAnyDurationType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDurationTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1506:3: ( rule__STAnyDurationType__Alternatives )
            // InternalSTAlgorithmParser.g:1506:4: rule__STAnyDurationType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyDurationType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDurationTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyDurationType"


    // $ANTLR start "entryRuleSTAnyDateType"
    // InternalSTAlgorithmParser.g:1515:1: entryRuleSTAnyDateType : ruleSTAnyDateType EOF ;
    public final void entryRuleSTAnyDateType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1516:1: ( ruleSTAnyDateType EOF )
            // InternalSTAlgorithmParser.g:1517:1: ruleSTAnyDateType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDateTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyDateType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDateTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyDateType"


    // $ANTLR start "ruleSTAnyDateType"
    // InternalSTAlgorithmParser.g:1524:1: ruleSTAnyDateType : ( ( rule__STAnyDateType__Alternatives ) ) ;
    public final void ruleSTAnyDateType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1528:2: ( ( ( rule__STAnyDateType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1529:2: ( ( rule__STAnyDateType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1529:2: ( ( rule__STAnyDateType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1530:3: ( rule__STAnyDateType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDateTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1531:3: ( rule__STAnyDateType__Alternatives )
            // InternalSTAlgorithmParser.g:1531:4: rule__STAnyDateType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyDateType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDateTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyDateType"


    // $ANTLR start "entryRuleSTDateType"
    // InternalSTAlgorithmParser.g:1540:1: entryRuleSTDateType : ruleSTDateType EOF ;
    public final void entryRuleSTDateType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1541:1: ( ruleSTDateType EOF )
            // InternalSTAlgorithmParser.g:1542:1: ruleSTDateType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateType"


    // $ANTLR start "ruleSTDateType"
    // InternalSTAlgorithmParser.g:1549:1: ruleSTDateType : ( ( rule__STDateType__Alternatives ) ) ;
    public final void ruleSTDateType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1553:2: ( ( ( rule__STDateType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1554:2: ( ( rule__STDateType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1554:2: ( ( rule__STDateType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1555:3: ( rule__STDateType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1556:3: ( rule__STDateType__Alternatives )
            // InternalSTAlgorithmParser.g:1556:4: rule__STDateType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateType"


    // $ANTLR start "entryRuleSTTimeOfDayType"
    // InternalSTAlgorithmParser.g:1565:1: entryRuleSTTimeOfDayType : ruleSTTimeOfDayType EOF ;
    public final void entryRuleSTTimeOfDayType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1566:1: ( ruleSTTimeOfDayType EOF )
            // InternalSTAlgorithmParser.g:1567:1: ruleSTTimeOfDayType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeOfDayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeOfDayType"


    // $ANTLR start "ruleSTTimeOfDayType"
    // InternalSTAlgorithmParser.g:1574:1: ruleSTTimeOfDayType : ( ( rule__STTimeOfDayType__Alternatives ) ) ;
    public final void ruleSTTimeOfDayType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1578:2: ( ( ( rule__STTimeOfDayType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1579:2: ( ( rule__STTimeOfDayType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1579:2: ( ( rule__STTimeOfDayType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1580:3: ( rule__STTimeOfDayType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1581:3: ( rule__STTimeOfDayType__Alternatives )
            // InternalSTAlgorithmParser.g:1581:4: rule__STTimeOfDayType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeOfDayType"


    // $ANTLR start "entryRuleSTDateAndTimeType"
    // InternalSTAlgorithmParser.g:1590:1: entryRuleSTDateAndTimeType : ruleSTDateAndTimeType EOF ;
    public final void entryRuleSTDateAndTimeType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1591:1: ( ruleSTDateAndTimeType EOF )
            // InternalSTAlgorithmParser.g:1592:1: ruleSTDateAndTimeType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateAndTimeType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateAndTimeType"


    // $ANTLR start "ruleSTDateAndTimeType"
    // InternalSTAlgorithmParser.g:1599:1: ruleSTDateAndTimeType : ( ( rule__STDateAndTimeType__Alternatives ) ) ;
    public final void ruleSTDateAndTimeType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1603:2: ( ( ( rule__STDateAndTimeType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1604:2: ( ( rule__STDateAndTimeType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1604:2: ( ( rule__STDateAndTimeType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1605:3: ( rule__STDateAndTimeType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1606:3: ( rule__STDateAndTimeType__Alternatives )
            // InternalSTAlgorithmParser.g:1606:4: rule__STDateAndTimeType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateAndTimeType"


    // $ANTLR start "entryRuleSTAnyCharsType"
    // InternalSTAlgorithmParser.g:1615:1: entryRuleSTAnyCharsType : ruleSTAnyCharsType EOF ;
    public final void entryRuleSTAnyCharsType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1616:1: ( ruleSTAnyCharsType EOF )
            // InternalSTAlgorithmParser.g:1617:1: ruleSTAnyCharsType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyCharsTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyCharsType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyCharsTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyCharsType"


    // $ANTLR start "ruleSTAnyCharsType"
    // InternalSTAlgorithmParser.g:1624:1: ruleSTAnyCharsType : ( ( rule__STAnyCharsType__Alternatives ) ) ;
    public final void ruleSTAnyCharsType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1628:2: ( ( ( rule__STAnyCharsType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1629:2: ( ( rule__STAnyCharsType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1629:2: ( ( rule__STAnyCharsType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1630:3: ( rule__STAnyCharsType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyCharsTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1631:3: ( rule__STAnyCharsType__Alternatives )
            // InternalSTAlgorithmParser.g:1631:4: rule__STAnyCharsType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyCharsType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyCharsTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyCharsType"


    // $ANTLR start "entryRuleBoolLiteral"
    // InternalSTAlgorithmParser.g:1640:1: entryRuleBoolLiteral : ruleBoolLiteral EOF ;
    public final void entryRuleBoolLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1641:1: ( ruleBoolLiteral EOF )
            // InternalSTAlgorithmParser.g:1642:1: ruleBoolLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBoolLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolLiteral"


    // $ANTLR start "ruleBoolLiteral"
    // InternalSTAlgorithmParser.g:1649:1: ruleBoolLiteral : ( ( rule__BoolLiteral__Alternatives ) ) ;
    public final void ruleBoolLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1653:2: ( ( ( rule__BoolLiteral__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1654:2: ( ( rule__BoolLiteral__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1654:2: ( ( rule__BoolLiteral__Alternatives ) )
            // InternalSTAlgorithmParser.g:1655:3: ( rule__BoolLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolLiteralAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1656:3: ( rule__BoolLiteral__Alternatives )
            // InternalSTAlgorithmParser.g:1656:4: rule__BoolLiteral__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BoolLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolLiteral"


    // $ANTLR start "entryRuleNumber"
    // InternalSTAlgorithmParser.g:1665:1: entryRuleNumber : ruleNumber EOF ;
    public final void entryRuleNumber() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1666:1: ( ruleNumber EOF )
            // InternalSTAlgorithmParser.g:1667:1: ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalSTAlgorithmParser.g:1674:1: ruleNumber : ( ( rule__Number__Group__0 ) ) ;
    public final void ruleNumber() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1678:2: ( ( ( rule__Number__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1679:2: ( ( rule__Number__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1679:2: ( ( rule__Number__Group__0 ) )
            // InternalSTAlgorithmParser.g:1680:3: ( rule__Number__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1681:3: ( rule__Number__Group__0 )
            // InternalSTAlgorithmParser.g:1681:4: rule__Number__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleDate"
    // InternalSTAlgorithmParser.g:1690:1: entryRuleDate : ruleDate EOF ;
    public final void entryRuleDate() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1691:1: ( ruleDate EOF )
            // InternalSTAlgorithmParser.g:1692:1: ruleDate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDate"


    // $ANTLR start "ruleDate"
    // InternalSTAlgorithmParser.g:1699:1: ruleDate : ( ( rule__Date__Group__0 ) ) ;
    public final void ruleDate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1703:2: ( ( ( rule__Date__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1704:2: ( ( rule__Date__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1704:2: ( ( rule__Date__Group__0 ) )
            // InternalSTAlgorithmParser.g:1705:3: ( rule__Date__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1706:3: ( rule__Date__Group__0 )
            // InternalSTAlgorithmParser.g:1706:4: rule__Date__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Date__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDate"


    // $ANTLR start "entryRuleDateAndTime"
    // InternalSTAlgorithmParser.g:1715:1: entryRuleDateAndTime : ruleDateAndTime EOF ;
    public final void entryRuleDateAndTime() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1716:1: ( ruleDateAndTime EOF )
            // InternalSTAlgorithmParser.g:1717:1: ruleDateAndTime EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDateAndTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDateAndTime"


    // $ANTLR start "ruleDateAndTime"
    // InternalSTAlgorithmParser.g:1724:1: ruleDateAndTime : ( ( rule__DateAndTime__Group__0 ) ) ;
    public final void ruleDateAndTime() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1728:2: ( ( ( rule__DateAndTime__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1729:2: ( ( rule__DateAndTime__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1729:2: ( ( rule__DateAndTime__Group__0 ) )
            // InternalSTAlgorithmParser.g:1730:3: ( rule__DateAndTime__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1731:3: ( rule__DateAndTime__Group__0 )
            // InternalSTAlgorithmParser.g:1731:4: rule__DateAndTime__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDateAndTime"


    // $ANTLR start "entryRuleTimeOfDay"
    // InternalSTAlgorithmParser.g:1740:1: entryRuleTimeOfDay : ruleTimeOfDay EOF ;
    public final void entryRuleTimeOfDay() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1741:1: ( ruleTimeOfDay EOF )
            // InternalSTAlgorithmParser.g:1742:1: ruleTimeOfDay EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTimeOfDay"


    // $ANTLR start "ruleTimeOfDay"
    // InternalSTAlgorithmParser.g:1749:1: ruleTimeOfDay : ( ( rule__TimeOfDay__Group__0 ) ) ;
    public final void ruleTimeOfDay() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1753:2: ( ( ( rule__TimeOfDay__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1754:2: ( ( rule__TimeOfDay__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1754:2: ( ( rule__TimeOfDay__Group__0 ) )
            // InternalSTAlgorithmParser.g:1755:3: ( rule__TimeOfDay__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1756:3: ( rule__TimeOfDay__Group__0 )
            // InternalSTAlgorithmParser.g:1756:4: rule__TimeOfDay__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTimeOfDay"


    // $ANTLR start "entryRuleTime"
    // InternalSTAlgorithmParser.g:1765:1: entryRuleTime : ruleTime EOF ;
    public final void entryRuleTime() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1766:1: ( ruleTime EOF )
            // InternalSTAlgorithmParser.g:1767:1: ruleTime EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTime"


    // $ANTLR start "ruleTime"
    // InternalSTAlgorithmParser.g:1774:1: ruleTime : ( ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* ) ) ;
    public final void ruleTime() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1778:2: ( ( ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* ) ) )
            // InternalSTAlgorithmParser.g:1779:2: ( ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* ) )
            {
            // InternalSTAlgorithmParser.g:1779:2: ( ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* ) )
            // InternalSTAlgorithmParser.g:1780:3: ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* )
            {
            // InternalSTAlgorithmParser.g:1780:3: ( ( rule__Time__Group__0 ) )
            // InternalSTAlgorithmParser.g:1781:4: ( rule__Time__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1782:4: ( rule__Time__Group__0 )
            // InternalSTAlgorithmParser.g:1782:5: rule__Time__Group__0
            {
            pushFollow(FOLLOW_3);
            rule__Time__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getGroup()); 
            }

            }

            // InternalSTAlgorithmParser.g:1785:3: ( ( rule__Time__Group__0 )* )
            // InternalSTAlgorithmParser.g:1786:4: ( rule__Time__Group__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1787:4: ( rule__Time__Group__0 )*
            loop1:
            do {
                int alt1=2;
                switch ( input.LA(1) ) {
                case PlusSign:
                    {
                    int LA1_2 = input.LA(2);

                    if ( (LA1_2==RULE_INT) ) {
                        int LA1_5 = input.LA(3);

                        if ( (LA1_5==FullStop) ) {
                            int LA1_6 = input.LA(4);

                            if ( (LA1_6==RULE_INT) ) {
                                int LA1_7 = input.LA(5);

                                if ( ((LA1_7>=MS && LA1_7<=NS)||LA1_7==US||(LA1_7>=D && LA1_7<=S)) ) {
                                    alt1=1;
                                }


                            }
                            else if ( (LA1_6==RULE_EXT_INT) ) {
                                int LA1_8 = input.LA(5);

                                if ( ((LA1_8>=MS && LA1_8<=NS)||LA1_8==US||(LA1_8>=D && LA1_8<=S)) ) {
                                    alt1=1;
                                }


                            }


                        }
                        else if ( ((LA1_5>=MS && LA1_5<=NS)||LA1_5==US||(LA1_5>=D && LA1_5<=S)) ) {
                            alt1=1;
                        }


                    }


                    }
                    break;
                case HyphenMinus:
                    {
                    int LA1_3 = input.LA(2);

                    if ( (LA1_3==RULE_INT) ) {
                        int LA1_5 = input.LA(3);

                        if ( (LA1_5==FullStop) ) {
                            int LA1_6 = input.LA(4);

                            if ( (LA1_6==RULE_INT) ) {
                                int LA1_7 = input.LA(5);

                                if ( ((LA1_7>=MS && LA1_7<=NS)||LA1_7==US||(LA1_7>=D && LA1_7<=S)) ) {
                                    alt1=1;
                                }


                            }
                            else if ( (LA1_6==RULE_EXT_INT) ) {
                                int LA1_8 = input.LA(5);

                                if ( ((LA1_8>=MS && LA1_8<=NS)||LA1_8==US||(LA1_8>=D && LA1_8<=S)) ) {
                                    alt1=1;
                                }


                            }


                        }
                        else if ( ((LA1_5>=MS && LA1_5<=NS)||LA1_5==US||(LA1_5>=D && LA1_5<=S)) ) {
                            alt1=1;
                        }


                    }


                    }
                    break;
                case RULE_INT:
                    {
                    alt1=1;
                    }
                    break;

                }

                switch (alt1) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:1787:5: rule__Time__Group__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Time__Group__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getGroup()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTime"


    // $ANTLR start "ruleSubrangeOperator"
    // InternalSTAlgorithmParser.g:1797:1: ruleSubrangeOperator : ( ( FullStopFullStop ) ) ;
    public final void ruleSubrangeOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1801:1: ( ( ( FullStopFullStop ) ) )
            // InternalSTAlgorithmParser.g:1802:2: ( ( FullStopFullStop ) )
            {
            // InternalSTAlgorithmParser.g:1802:2: ( ( FullStopFullStop ) )
            // InternalSTAlgorithmParser.g:1803:3: ( FullStopFullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }
            // InternalSTAlgorithmParser.g:1804:3: ( FullStopFullStop )
            // InternalSTAlgorithmParser.g:1804:4: FullStopFullStop
            {
            match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubrangeOperator"


    // $ANTLR start "ruleOrOperator"
    // InternalSTAlgorithmParser.g:1813:1: ruleOrOperator : ( ( OR ) ) ;
    public final void ruleOrOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1817:1: ( ( ( OR ) ) )
            // InternalSTAlgorithmParser.g:1818:2: ( ( OR ) )
            {
            // InternalSTAlgorithmParser.g:1818:2: ( ( OR ) )
            // InternalSTAlgorithmParser.g:1819:3: ( OR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }
            // InternalSTAlgorithmParser.g:1820:3: ( OR )
            // InternalSTAlgorithmParser.g:1820:4: OR
            {
            match(input,OR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalSTAlgorithmParser.g:1829:1: ruleXorOperator : ( ( XOR ) ) ;
    public final void ruleXorOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1833:1: ( ( ( XOR ) ) )
            // InternalSTAlgorithmParser.g:1834:2: ( ( XOR ) )
            {
            // InternalSTAlgorithmParser.g:1834:2: ( ( XOR ) )
            // InternalSTAlgorithmParser.g:1835:3: ( XOR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }
            // InternalSTAlgorithmParser.g:1836:3: ( XOR )
            // InternalSTAlgorithmParser.g:1836:4: XOR
            {
            match(input,XOR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalSTAlgorithmParser.g:1845:1: ruleAndOperator : ( ( rule__AndOperator__Alternatives ) ) ;
    public final void ruleAndOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1849:1: ( ( ( rule__AndOperator__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1850:2: ( ( rule__AndOperator__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1850:2: ( ( rule__AndOperator__Alternatives ) )
            // InternalSTAlgorithmParser.g:1851:3: ( rule__AndOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1852:3: ( rule__AndOperator__Alternatives )
            // InternalSTAlgorithmParser.g:1852:4: rule__AndOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AndOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "ruleEqualityOperator"
    // InternalSTAlgorithmParser.g:1861:1: ruleEqualityOperator : ( ( rule__EqualityOperator__Alternatives ) ) ;
    public final void ruleEqualityOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1865:1: ( ( ( rule__EqualityOperator__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1866:2: ( ( rule__EqualityOperator__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1866:2: ( ( rule__EqualityOperator__Alternatives ) )
            // InternalSTAlgorithmParser.g:1867:3: ( rule__EqualityOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1868:3: ( rule__EqualityOperator__Alternatives )
            // InternalSTAlgorithmParser.g:1868:4: rule__EqualityOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EqualityOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSTAlgorithmParser.g:1877:1: ruleCompareOperator : ( ( rule__CompareOperator__Alternatives ) ) ;
    public final void ruleCompareOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1881:1: ( ( ( rule__CompareOperator__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1882:2: ( ( rule__CompareOperator__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1882:2: ( ( rule__CompareOperator__Alternatives ) )
            // InternalSTAlgorithmParser.g:1883:3: ( rule__CompareOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1884:3: ( rule__CompareOperator__Alternatives )
            // InternalSTAlgorithmParser.g:1884:4: rule__CompareOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CompareOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "ruleAddSubOperator"
    // InternalSTAlgorithmParser.g:1893:1: ruleAddSubOperator : ( ( rule__AddSubOperator__Alternatives ) ) ;
    public final void ruleAddSubOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1897:1: ( ( ( rule__AddSubOperator__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1898:2: ( ( rule__AddSubOperator__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1898:2: ( ( rule__AddSubOperator__Alternatives ) )
            // InternalSTAlgorithmParser.g:1899:3: ( rule__AddSubOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1900:3: ( rule__AddSubOperator__Alternatives )
            // InternalSTAlgorithmParser.g:1900:4: rule__AddSubOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AddSubOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddSubOperator"


    // $ANTLR start "ruleMulDivModOperator"
    // InternalSTAlgorithmParser.g:1909:1: ruleMulDivModOperator : ( ( rule__MulDivModOperator__Alternatives ) ) ;
    public final void ruleMulDivModOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1913:1: ( ( ( rule__MulDivModOperator__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1914:2: ( ( rule__MulDivModOperator__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1914:2: ( ( rule__MulDivModOperator__Alternatives ) )
            // InternalSTAlgorithmParser.g:1915:3: ( rule__MulDivModOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1916:3: ( rule__MulDivModOperator__Alternatives )
            // InternalSTAlgorithmParser.g:1916:4: rule__MulDivModOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MulDivModOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulDivModOperator"


    // $ANTLR start "rulePowerOperator"
    // InternalSTAlgorithmParser.g:1925:1: rulePowerOperator : ( ( AsteriskAsterisk ) ) ;
    public final void rulePowerOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1929:1: ( ( ( AsteriskAsterisk ) ) )
            // InternalSTAlgorithmParser.g:1930:2: ( ( AsteriskAsterisk ) )
            {
            // InternalSTAlgorithmParser.g:1930:2: ( ( AsteriskAsterisk ) )
            // InternalSTAlgorithmParser.g:1931:3: ( AsteriskAsterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }
            // InternalSTAlgorithmParser.g:1932:3: ( AsteriskAsterisk )
            // InternalSTAlgorithmParser.g:1932:4: AsteriskAsterisk
            {
            match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePowerOperator"


    // $ANTLR start "ruleUnaryOperator"
    // InternalSTAlgorithmParser.g:1941:1: ruleUnaryOperator : ( ( rule__UnaryOperator__Alternatives ) ) ;
    public final void ruleUnaryOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1945:1: ( ( ( rule__UnaryOperator__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1946:2: ( ( rule__UnaryOperator__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1946:2: ( ( rule__UnaryOperator__Alternatives ) )
            // InternalSTAlgorithmParser.g:1947:3: ( rule__UnaryOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1948:3: ( rule__UnaryOperator__Alternatives )
            // InternalSTAlgorithmParser.g:1948:4: rule__UnaryOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "ruleSTMultiBitAccessSpecifier"
    // InternalSTAlgorithmParser.g:1957:1: ruleSTMultiBitAccessSpecifier : ( ( rule__STMultiBitAccessSpecifier__Alternatives ) ) ;
    public final void ruleSTMultiBitAccessSpecifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1961:1: ( ( ( rule__STMultiBitAccessSpecifier__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1962:2: ( ( rule__STMultiBitAccessSpecifier__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1962:2: ( ( rule__STMultiBitAccessSpecifier__Alternatives ) )
            // InternalSTAlgorithmParser.g:1963:3: ( rule__STMultiBitAccessSpecifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1964:3: ( rule__STMultiBitAccessSpecifier__Alternatives )
            // InternalSTAlgorithmParser.g:1964:4: rule__STMultiBitAccessSpecifier__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STMultiBitAccessSpecifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMultiBitAccessSpecifier"


    // $ANTLR start "rule__STVarDeclaration__Alternatives_4_1"
    // InternalSTAlgorithmParser.g:1972:1: rule__STVarDeclaration__Alternatives_4_1 : ( ( ( rule__STVarDeclaration__Group_4_1_0__0 ) ) | ( ( rule__STVarDeclaration__Group_4_1_1__0 ) ) );
    public final void rule__STVarDeclaration__Alternatives_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1976:1: ( ( ( rule__STVarDeclaration__Group_4_1_0__0 ) ) | ( ( rule__STVarDeclaration__Group_4_1_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==LeftSquareBracket) ) {
                int LA2_1 = input.LA(2);

                if ( ((LA2_1>=LDATE_AND_TIME && LA2_1<=DATE_AND_TIME)||(LA2_1>=LTIME_OF_DAY && LA2_1<=TIME_OF_DAY)||LA2_1==WSTRING||LA2_1==STRING||LA2_1==DWORD||(LA2_1>=FALSE && LA2_1<=ULINT)||(LA2_1>=USINT && LA2_1<=WCHAR)||(LA2_1>=BOOL && LA2_1<=BYTE)||(LA2_1>=CHAR && LA2_1<=DINT)||(LA2_1>=LINT && LA2_1<=SINT)||(LA2_1>=TIME && LA2_1<=WORD)||(LA2_1>=INT && LA2_1<=LDT)||(LA2_1>=NOT && LA2_1<=TOD)||LA2_1==DT||(LA2_1>=LD && LA2_1<=LT)||LA2_1==LeftParenthesis||LA2_1==PlusSign||LA2_1==HyphenMinus||LA2_1==D||LA2_1==T||(LA2_1>=RULE_NON_DECIMAL && LA2_1<=RULE_INT)||(LA2_1>=RULE_ID && LA2_1<=RULE_WSTRING)) ) {
                    alt2=1;
                }
                else if ( (LA2_1==Asterisk) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSTAlgorithmParser.g:1977:2: ( ( rule__STVarDeclaration__Group_4_1_0__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:1977:2: ( ( rule__STVarDeclaration__Group_4_1_0__0 ) )
                    // InternalSTAlgorithmParser.g:1978:3: ( rule__STVarDeclaration__Group_4_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0()); 
                    }
                    // InternalSTAlgorithmParser.g:1979:3: ( rule__STVarDeclaration__Group_4_1_0__0 )
                    // InternalSTAlgorithmParser.g:1979:4: rule__STVarDeclaration__Group_4_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_4_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:1983:2: ( ( rule__STVarDeclaration__Group_4_1_1__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:1983:2: ( ( rule__STVarDeclaration__Group_4_1_1__0 ) )
                    // InternalSTAlgorithmParser.g:1984:3: ( rule__STVarDeclaration__Group_4_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1()); 
                    }
                    // InternalSTAlgorithmParser.g:1985:3: ( rule__STVarDeclaration__Group_4_1_1__0 )
                    // InternalSTAlgorithmParser.g:1985:4: rule__STVarDeclaration__Group_4_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_4_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Alternatives_4_1"


    // $ANTLR start "rule__STInitializerExpression__Alternatives"
    // InternalSTAlgorithmParser.g:1993:1: rule__STInitializerExpression__Alternatives : ( ( ruleSTElementaryInitializerExpression ) | ( ruleSTArrayInitializerExpression ) );
    public final void rule__STInitializerExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1997:1: ( ( ruleSTElementaryInitializerExpression ) | ( ruleSTArrayInitializerExpression ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=LDATE_AND_TIME && LA3_0<=DATE_AND_TIME)||(LA3_0>=LTIME_OF_DAY && LA3_0<=TIME_OF_DAY)||LA3_0==WSTRING||LA3_0==STRING||LA3_0==DWORD||(LA3_0>=FALSE && LA3_0<=ULINT)||(LA3_0>=USINT && LA3_0<=WCHAR)||(LA3_0>=BOOL && LA3_0<=BYTE)||(LA3_0>=CHAR && LA3_0<=DINT)||(LA3_0>=LINT && LA3_0<=SINT)||(LA3_0>=TIME && LA3_0<=WORD)||(LA3_0>=INT && LA3_0<=LDT)||(LA3_0>=NOT && LA3_0<=TOD)||LA3_0==DT||(LA3_0>=LD && LA3_0<=LT)||LA3_0==LeftParenthesis||LA3_0==PlusSign||LA3_0==HyphenMinus||LA3_0==D||LA3_0==T||(LA3_0>=RULE_NON_DECIMAL && LA3_0<=RULE_INT)||(LA3_0>=RULE_ID && LA3_0<=RULE_WSTRING)) ) {
                alt3=1;
            }
            else if ( (LA3_0==LeftSquareBracket) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSTAlgorithmParser.g:1998:2: ( ruleSTElementaryInitializerExpression )
                    {
                    // InternalSTAlgorithmParser.g:1998:2: ( ruleSTElementaryInitializerExpression )
                    // InternalSTAlgorithmParser.g:1999:3: ruleSTElementaryInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTInitializerExpressionAccess().getSTElementaryInitializerExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTElementaryInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTInitializerExpressionAccess().getSTElementaryInitializerExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2004:2: ( ruleSTArrayInitializerExpression )
                    {
                    // InternalSTAlgorithmParser.g:2004:2: ( ruleSTArrayInitializerExpression )
                    // InternalSTAlgorithmParser.g:2005:3: ruleSTArrayInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTInitializerExpressionAccess().getSTArrayInitializerExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTArrayInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTInitializerExpressionAccess().getSTArrayInitializerExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpression__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives"
    // InternalSTAlgorithmParser.g:2014:1: rule__STStatement__Alternatives : ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) );
    public final void rule__STStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2018:1: ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( ((LA4_0>=LDATE_AND_TIME && LA4_0<=DATE_AND_TIME)||(LA4_0>=LTIME_OF_DAY && LA4_0<=TIME_OF_DAY)||LA4_0==CONTINUE||LA4_0==WSTRING||(LA4_0>=REPEAT && LA4_0<=STRING)||LA4_0==DWORD||(LA4_0>=FALSE && LA4_0<=ULINT)||(LA4_0>=USINT && LA4_0<=DINT)||(LA4_0>=EXIT && LA4_0<=SINT)||(LA4_0>=TIME && LA4_0<=WORD)||(LA4_0>=FOR && LA4_0<=LDT)||LA4_0==TOD||(LA4_0>=DT && LA4_0<=LT)||LA4_0==LeftParenthesis||LA4_0==PlusSign||LA4_0==HyphenMinus||LA4_0==D||LA4_0==T||(LA4_0>=RULE_NON_DECIMAL && LA4_0<=RULE_INT)||(LA4_0>=RULE_ID && LA4_0<=RULE_WSTRING)) ) {
                alt4=1;
            }
            else if ( (LA4_0==Semicolon) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2019:2: ( ( rule__STStatement__Group_0__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2019:2: ( ( rule__STStatement__Group_0__0 ) )
                    // InternalSTAlgorithmParser.g:2020:3: ( rule__STStatement__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2021:3: ( rule__STStatement__Group_0__0 )
                    // InternalSTAlgorithmParser.g:2021:4: rule__STStatement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2025:2: ( ( rule__STStatement__Group_1__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2025:2: ( ( rule__STStatement__Group_1__0 ) )
                    // InternalSTAlgorithmParser.g:2026:3: ( rule__STStatement__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2027:3: ( rule__STStatement__Group_1__0 )
                    // InternalSTAlgorithmParser.g:2027:4: rule__STStatement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives_0_0"
    // InternalSTAlgorithmParser.g:2035:1: rule__STStatement__Alternatives_0_0 : ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ( ruleSTAssignmentStatement ) ) | ( ruleSTCallStatement ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) | ( ( rule__STStatement__Group_0_0_9__0 ) ) );
    public final void rule__STStatement__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2039:1: ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ( ruleSTAssignmentStatement ) ) | ( ruleSTCallStatement ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) | ( ( rule__STStatement__Group_0_0_9__0 ) ) )
            int alt5=10;
            alt5 = dfa5.predict(input);
            switch (alt5) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2040:2: ( ruleSTIfStatement )
                    {
                    // InternalSTAlgorithmParser.g:2040:2: ( ruleSTIfStatement )
                    // InternalSTAlgorithmParser.g:2041:3: ruleSTIfStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTIfStatementParserRuleCall_0_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTIfStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTIfStatementParserRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2046:2: ( ruleSTCaseStatement )
                    {
                    // InternalSTAlgorithmParser.g:2046:2: ( ruleSTCaseStatement )
                    // InternalSTAlgorithmParser.g:2047:3: ruleSTCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCaseStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2052:2: ( ruleSTForStatement )
                    {
                    // InternalSTAlgorithmParser.g:2052:2: ( ruleSTForStatement )
                    // InternalSTAlgorithmParser.g:2053:3: ruleSTForStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTForStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2058:2: ( ruleSTWhileStatement )
                    {
                    // InternalSTAlgorithmParser.g:2058:2: ( ruleSTWhileStatement )
                    // InternalSTAlgorithmParser.g:2059:3: ruleSTWhileStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTWhileStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:2064:2: ( ruleSTRepeatStatement )
                    {
                    // InternalSTAlgorithmParser.g:2064:2: ( ruleSTRepeatStatement )
                    // InternalSTAlgorithmParser.g:2065:3: ruleSTRepeatStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTRepeatStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTAlgorithmParser.g:2070:2: ( ( ruleSTAssignmentStatement ) )
                    {
                    // InternalSTAlgorithmParser.g:2070:2: ( ( ruleSTAssignmentStatement ) )
                    // InternalSTAlgorithmParser.g:2071:3: ( ruleSTAssignmentStatement )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }
                    // InternalSTAlgorithmParser.g:2072:3: ( ruleSTAssignmentStatement )
                    // InternalSTAlgorithmParser.g:2072:4: ruleSTAssignmentStatement
                    {
                    pushFollow(FOLLOW_2);
                    ruleSTAssignmentStatement();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTAlgorithmParser.g:2076:2: ( ruleSTCallStatement )
                    {
                    // InternalSTAlgorithmParser.g:2076:2: ( ruleSTCallStatement )
                    // InternalSTAlgorithmParser.g:2077:3: ruleSTCallStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTCallStatementParserRuleCall_0_0_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTCallStatementParserRuleCall_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTAlgorithmParser.g:2082:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2082:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    // InternalSTAlgorithmParser.g:2083:3: ( rule__STStatement__Group_0_0_7__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }
                    // InternalSTAlgorithmParser.g:2084:3: ( rule__STStatement__Group_0_0_7__0 )
                    // InternalSTAlgorithmParser.g:2084:4: rule__STStatement__Group_0_0_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTAlgorithmParser.g:2088:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2088:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    // InternalSTAlgorithmParser.g:2089:3: ( rule__STStatement__Group_0_0_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }
                    // InternalSTAlgorithmParser.g:2090:3: ( rule__STStatement__Group_0_0_8__0 )
                    // InternalSTAlgorithmParser.g:2090:4: rule__STStatement__Group_0_0_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTAlgorithmParser.g:2094:2: ( ( rule__STStatement__Group_0_0_9__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2094:2: ( ( rule__STStatement__Group_0_0_9__0 ) )
                    // InternalSTAlgorithmParser.g:2095:3: ( rule__STStatement__Group_0_0_9__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_9()); 
                    }
                    // InternalSTAlgorithmParser.g:2096:3: ( rule__STStatement__Group_0_0_9__0 )
                    // InternalSTAlgorithmParser.g:2096:4: rule__STStatement__Group_0_0_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives_0_0"


    // $ANTLR start "rule__STCallArgument__Alternatives"
    // InternalSTAlgorithmParser.g:2104:1: rule__STCallArgument__Alternatives : ( ( ruleSTCallUnnamedArgument ) | ( ruleSTCallNamedInputArgument ) | ( ruleSTCallNamedOutputArgument ) );
    public final void rule__STCallArgument__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2108:1: ( ( ruleSTCallUnnamedArgument ) | ( ruleSTCallNamedInputArgument ) | ( ruleSTCallNamedOutputArgument ) )
            int alt6=3;
            switch ( input.LA(1) ) {
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case DT:
            case LD:
            case LT:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_STRING:
            case RULE_WSTRING:
                {
                alt6=1;
                }
                break;
            case RULE_ID:
                {
                switch ( input.LA(2) ) {
                case EOF:
                case AND:
                case MOD:
                case XOR:
                case AsteriskAsterisk:
                case FullStopFullStop:
                case LessThanSignEqualsSign:
                case LessThanSignGreaterThanSign:
                case GreaterThanSignEqualsSign:
                case OR:
                case Ampersand:
                case LeftParenthesis:
                case RightParenthesis:
                case Asterisk:
                case PlusSign:
                case Comma:
                case HyphenMinus:
                case FullStop:
                case Solidus:
                case LessThanSign:
                case EqualsSign:
                case GreaterThanSign:
                case LeftSquareBracket:
                    {
                    alt6=1;
                    }
                    break;
                case EqualsSignGreaterThanSign:
                    {
                    alt6=3;
                    }
                    break;
                case ColonEqualsSign:
                    {
                    alt6=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 2, input);

                    throw nvae;
                }

                }
                break;
            case NOT:
                {
                int LA6_3 = input.LA(2);

                if ( (LA6_3==RULE_ID) ) {
                    int LA6_6 = input.LA(3);

                    if ( (LA6_6==EqualsSignGreaterThanSign) ) {
                        alt6=3;
                    }
                    else if ( (LA6_6==EOF||LA6_6==AND||LA6_6==MOD||LA6_6==XOR||(LA6_6>=AsteriskAsterisk && LA6_6<=FullStopFullStop)||(LA6_6>=LessThanSignEqualsSign && LA6_6<=LessThanSignGreaterThanSign)||LA6_6==GreaterThanSignEqualsSign||LA6_6==OR||(LA6_6>=Ampersand && LA6_6<=Solidus)||(LA6_6>=LessThanSign && LA6_6<=GreaterThanSign)||LA6_6==LeftSquareBracket) ) {
                        alt6=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 6, 6, input);

                        throw nvae;
                    }
                }
                else if ( ((LA6_3>=LDATE_AND_TIME && LA6_3<=DATE_AND_TIME)||(LA6_3>=LTIME_OF_DAY && LA6_3<=TIME_OF_DAY)||LA6_3==WSTRING||LA6_3==STRING||LA6_3==DWORD||(LA6_3>=FALSE && LA6_3<=ULINT)||(LA6_3>=USINT && LA6_3<=WCHAR)||(LA6_3>=BOOL && LA6_3<=BYTE)||(LA6_3>=CHAR && LA6_3<=DINT)||(LA6_3>=LINT && LA6_3<=SINT)||(LA6_3>=TIME && LA6_3<=WORD)||(LA6_3>=INT && LA6_3<=LDT)||(LA6_3>=NOT && LA6_3<=TOD)||LA6_3==DT||(LA6_3>=LD && LA6_3<=LT)||LA6_3==LeftParenthesis||LA6_3==PlusSign||LA6_3==HyphenMinus||LA6_3==D||LA6_3==T||(LA6_3>=RULE_NON_DECIMAL && LA6_3<=RULE_INT)||(LA6_3>=RULE_STRING && LA6_3<=RULE_WSTRING)) ) {
                    alt6=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2109:2: ( ruleSTCallUnnamedArgument )
                    {
                    // InternalSTAlgorithmParser.g:2109:2: ( ruleSTCallUnnamedArgument )
                    // InternalSTAlgorithmParser.g:2110:3: ruleSTCallUnnamedArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallUnnamedArgumentParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallUnnamedArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallUnnamedArgumentParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2115:2: ( ruleSTCallNamedInputArgument )
                    {
                    // InternalSTAlgorithmParser.g:2115:2: ( ruleSTCallNamedInputArgument )
                    // InternalSTAlgorithmParser.g:2116:3: ruleSTCallNamedInputArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallNamedInputArgumentParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallNamedInputArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallNamedInputArgumentParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2121:2: ( ruleSTCallNamedOutputArgument )
                    {
                    // InternalSTAlgorithmParser.g:2121:2: ( ruleSTCallNamedOutputArgument )
                    // InternalSTAlgorithmParser.g:2122:3: ruleSTCallNamedOutputArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallNamedOutputArgumentParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallNamedOutputArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallNamedOutputArgumentParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallArgument__Alternatives"


    // $ANTLR start "rule__STUnaryExpression__Alternatives"
    // InternalSTAlgorithmParser.g:2131:1: rule__STUnaryExpression__Alternatives : ( ( ( ruleSTAccessExpression ) ) | ( ( rule__STUnaryExpression__Group_1__0 ) ) );
    public final void rule__STUnaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2135:1: ( ( ( ruleSTAccessExpression ) ) | ( ( rule__STUnaryExpression__Group_1__0 ) ) )
            int alt7=2;
            switch ( input.LA(1) ) {
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case DT:
            case LD:
            case LT:
            case LeftParenthesis:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_ID:
            case RULE_STRING:
            case RULE_WSTRING:
                {
                alt7=1;
                }
                break;
            case PlusSign:
                {
                int LA7_2 = input.LA(2);

                if ( (synpred16_InternalSTAlgorithmParser()) ) {
                    alt7=1;
                }
                else if ( (true) ) {
                    alt7=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 2, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA7_3 = input.LA(2);

                if ( (synpred16_InternalSTAlgorithmParser()) ) {
                    alt7=1;
                }
                else if ( (true) ) {
                    alt7=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 3, input);

                    throw nvae;
                }
                }
                break;
            case NOT:
                {
                alt7=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2136:2: ( ( ruleSTAccessExpression ) )
                    {
                    // InternalSTAlgorithmParser.g:2136:2: ( ( ruleSTAccessExpression ) )
                    // InternalSTAlgorithmParser.g:2137:3: ( ruleSTAccessExpression )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2138:3: ( ruleSTAccessExpression )
                    // InternalSTAlgorithmParser.g:2138:4: ruleSTAccessExpression
                    {
                    pushFollow(FOLLOW_2);
                    ruleSTAccessExpression();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2142:2: ( ( rule__STUnaryExpression__Group_1__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2142:2: ( ( rule__STUnaryExpression__Group_1__0 ) )
                    // InternalSTAlgorithmParser.g:2143:3: ( rule__STUnaryExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getGroup_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2144:3: ( rule__STUnaryExpression__Group_1__0 )
                    // InternalSTAlgorithmParser.g:2144:4: rule__STUnaryExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STUnaryExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Alternatives"


    // $ANTLR start "rule__STAccessExpression__Alternatives_1"
    // InternalSTAlgorithmParser.g:2152:1: rule__STAccessExpression__Alternatives_1 : ( ( ( rule__STAccessExpression__Group_1_0__0 ) ) | ( ( rule__STAccessExpression__Group_1_1__0 ) ) );
    public final void rule__STAccessExpression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2156:1: ( ( ( rule__STAccessExpression__Group_1_0__0 ) ) | ( ( rule__STAccessExpression__Group_1_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==FullStop) ) {
                alt8=1;
            }
            else if ( (LA8_0==LeftSquareBracket) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2157:2: ( ( rule__STAccessExpression__Group_1_0__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2157:2: ( ( rule__STAccessExpression__Group_1_0__0 ) )
                    // InternalSTAlgorithmParser.g:2158:3: ( rule__STAccessExpression__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2159:3: ( rule__STAccessExpression__Group_1_0__0 )
                    // InternalSTAlgorithmParser.g:2159:4: rule__STAccessExpression__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAccessExpression__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2163:2: ( ( rule__STAccessExpression__Group_1_1__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2163:2: ( ( rule__STAccessExpression__Group_1_1__0 ) )
                    // InternalSTAlgorithmParser.g:2164:3: ( rule__STAccessExpression__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2165:3: ( rule__STAccessExpression__Group_1_1__0 )
                    // InternalSTAlgorithmParser.g:2165:4: rule__STAccessExpression__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAccessExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Alternatives_1"


    // $ANTLR start "rule__STAccessExpression__MemberAlternatives_1_0_2_0"
    // InternalSTAlgorithmParser.g:2173:1: rule__STAccessExpression__MemberAlternatives_1_0_2_0 : ( ( ruleSTFeatureExpression ) | ( ruleSTMultibitPartialExpression ) );
    public final void rule__STAccessExpression__MemberAlternatives_1_0_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2177:1: ( ( ruleSTFeatureExpression ) | ( ruleSTMultibitPartialExpression ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID) ) {
                alt9=1;
            }
            else if ( ((LA9_0>=B && LA9_0<=X)||LA9_0==LeftParenthesis||LA9_0==RULE_INT) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2178:2: ( ruleSTFeatureExpression )
                    {
                    // InternalSTAlgorithmParser.g:2178:2: ( ruleSTFeatureExpression )
                    // InternalSTAlgorithmParser.g:2179:3: ruleSTFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getMemberSTFeatureExpressionParserRuleCall_1_0_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getMemberSTFeatureExpressionParserRuleCall_1_0_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2184:2: ( ruleSTMultibitPartialExpression )
                    {
                    // InternalSTAlgorithmParser.g:2184:2: ( ruleSTMultibitPartialExpression )
                    // InternalSTAlgorithmParser.g:2185:3: ruleSTMultibitPartialExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getMemberSTMultibitPartialExpressionParserRuleCall_1_0_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTMultibitPartialExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getMemberSTMultibitPartialExpressionParserRuleCall_1_0_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__MemberAlternatives_1_0_2_0"


    // $ANTLR start "rule__STPrimaryExpression__Alternatives"
    // InternalSTAlgorithmParser.g:2194:1: rule__STPrimaryExpression__Alternatives : ( ( ( rule__STPrimaryExpression__Group_0__0 ) ) | ( ruleSTFeatureExpression ) | ( ruleSTLiteralExpressions ) );
    public final void rule__STPrimaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2198:1: ( ( ( rule__STPrimaryExpression__Group_0__0 ) ) | ( ruleSTFeatureExpression ) | ( ruleSTLiteralExpressions ) )
            int alt10=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                alt10=1;
                }
                break;
            case RULE_ID:
                {
                alt10=2;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case DT:
            case LD:
            case LT:
            case PlusSign:
            case HyphenMinus:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_STRING:
            case RULE_WSTRING:
                {
                alt10=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2199:2: ( ( rule__STPrimaryExpression__Group_0__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2199:2: ( ( rule__STPrimaryExpression__Group_0__0 ) )
                    // InternalSTAlgorithmParser.g:2200:3: ( rule__STPrimaryExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getGroup_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2201:3: ( rule__STPrimaryExpression__Group_0__0 )
                    // InternalSTAlgorithmParser.g:2201:4: rule__STPrimaryExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STPrimaryExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2205:2: ( ruleSTFeatureExpression )
                    {
                    // InternalSTAlgorithmParser.g:2205:2: ( ruleSTFeatureExpression )
                    // InternalSTAlgorithmParser.g:2206:3: ruleSTFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTFeatureExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTFeatureExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2211:2: ( ruleSTLiteralExpressions )
                    {
                    // InternalSTAlgorithmParser.g:2211:2: ( ruleSTLiteralExpressions )
                    // InternalSTAlgorithmParser.g:2212:3: ruleSTLiteralExpressions
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTLiteralExpressionsParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTLiteralExpressions();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTLiteralExpressionsParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Alternatives"


    // $ANTLR start "rule__STMultibitPartialExpression__Alternatives_2"
    // InternalSTAlgorithmParser.g:2221:1: rule__STMultibitPartialExpression__Alternatives_2 : ( ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) ) | ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) ) );
    public final void rule__STMultibitPartialExpression__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2225:1: ( ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) ) | ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_INT) ) {
                alt11=1;
            }
            else if ( (LA11_0==LeftParenthesis) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2226:2: ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2226:2: ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) )
                    // InternalSTAlgorithmParser.g:2227:3: ( rule__STMultibitPartialExpression__IndexAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexAssignment_2_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2228:3: ( rule__STMultibitPartialExpression__IndexAssignment_2_0 )
                    // InternalSTAlgorithmParser.g:2228:4: rule__STMultibitPartialExpression__IndexAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__IndexAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2232:2: ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2232:2: ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) )
                    // InternalSTAlgorithmParser.g:2233:3: ( rule__STMultibitPartialExpression__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup_2_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2234:3: ( rule__STMultibitPartialExpression__Group_2_1__0 )
                    // InternalSTAlgorithmParser.g:2234:4: rule__STMultibitPartialExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Alternatives_2"


    // $ANTLR start "rule__STLiteralExpressions__Alternatives"
    // InternalSTAlgorithmParser.g:2242:1: rule__STLiteralExpressions__Alternatives : ( ( ruleSTNumericLiteral ) | ( ruleSTDateLiteral ) | ( ruleSTTimeLiteral ) | ( ruleSTTimeOfDayLiteral ) | ( ruleSTDateAndTimeLiteral ) | ( ruleSTStringLiteral ) );
    public final void rule__STLiteralExpressions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2246:1: ( ( ruleSTNumericLiteral ) | ( ruleSTDateLiteral ) | ( ruleSTTimeLiteral ) | ( ruleSTTimeOfDayLiteral ) | ( ruleSTDateAndTimeLiteral ) | ( ruleSTStringLiteral ) )
            int alt12=6;
            switch ( input.LA(1) ) {
            case DWORD:
            case FALSE:
            case LREAL:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case BOOL:
            case BYTE:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case PlusSign:
            case HyphenMinus:
            case RULE_NON_DECIMAL:
            case RULE_INT:
                {
                alt12=1;
                }
                break;
            case LDATE:
            case DATE:
            case LD:
            case D:
                {
                alt12=2;
                }
                break;
            case LTIME:
            case TIME:
            case LT:
            case T:
                {
                alt12=3;
                }
                break;
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt12=4;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt12=5;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
            case RULE_STRING:
            case RULE_WSTRING:
                {
                alt12=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2247:2: ( ruleSTNumericLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2247:2: ( ruleSTNumericLiteral )
                    // InternalSTAlgorithmParser.g:2248:3: ruleSTNumericLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTNumericLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2253:2: ( ruleSTDateLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2253:2: ( ruleSTDateLiteral )
                    // InternalSTAlgorithmParser.g:2254:3: ruleSTDateLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2259:2: ( ruleSTTimeLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2259:2: ( ruleSTTimeLiteral )
                    // InternalSTAlgorithmParser.g:2260:3: ruleSTTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2265:2: ( ruleSTTimeOfDayLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2265:2: ( ruleSTTimeOfDayLiteral )
                    // InternalSTAlgorithmParser.g:2266:3: ruleSTTimeOfDayLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeOfDayLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:2271:2: ( ruleSTDateAndTimeLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2271:2: ( ruleSTDateAndTimeLiteral )
                    // InternalSTAlgorithmParser.g:2272:3: ruleSTDateAndTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateAndTimeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTAlgorithmParser.g:2277:2: ( ruleSTStringLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2277:2: ( ruleSTStringLiteral )
                    // InternalSTAlgorithmParser.g:2278:3: ruleSTStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTStringLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Alternatives"


    // $ANTLR start "rule__STNumericLiteralType__Alternatives"
    // InternalSTAlgorithmParser.g:2287:1: rule__STNumericLiteralType__Alternatives : ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) );
    public final void rule__STNumericLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2291:1: ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==DWORD||LA13_0==LWORD||(LA13_0>=BOOL && LA13_0<=BYTE)||LA13_0==WORD) ) {
                alt13=1;
            }
            else if ( (LA13_0==LREAL||(LA13_0>=UDINT && LA13_0<=ULINT)||LA13_0==USINT||LA13_0==DINT||LA13_0==LINT||(LA13_0>=REAL && LA13_0<=SINT)||LA13_0==UINT||LA13_0==INT) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2292:2: ( ruleSTAnyBitType )
                    {
                    // InternalSTAlgorithmParser.g:2292:2: ( ruleSTAnyBitType )
                    // InternalSTAlgorithmParser.g:2293:3: ruleSTAnyBitType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBitType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2298:2: ( ruleSTAnyNumType )
                    {
                    // InternalSTAlgorithmParser.g:2298:2: ( ruleSTAnyNumType )
                    // InternalSTAlgorithmParser.g:2299:3: ruleSTAnyNumType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyNumType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteralType__Alternatives"


    // $ANTLR start "rule__STNumericLiteral__ValueAlternatives_1_0"
    // InternalSTAlgorithmParser.g:2308:1: rule__STNumericLiteral__ValueAlternatives_1_0 : ( ( ruleBoolLiteral ) | ( ruleNumber ) | ( RULE_NON_DECIMAL ) );
    public final void rule__STNumericLiteral__ValueAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2312:1: ( ( ruleBoolLiteral ) | ( ruleNumber ) | ( RULE_NON_DECIMAL ) )
            int alt14=3;
            switch ( input.LA(1) ) {
            case FALSE:
            case TRUE:
                {
                alt14=1;
                }
                break;
            case PlusSign:
            case HyphenMinus:
            case RULE_INT:
                {
                alt14=2;
                }
                break;
            case RULE_NON_DECIMAL:
                {
                alt14=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2313:2: ( ruleBoolLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2313:2: ( ruleBoolLiteral )
                    // InternalSTAlgorithmParser.g:2314:3: ruleBoolLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralAccess().getValueBoolLiteralParserRuleCall_1_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBoolLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralAccess().getValueBoolLiteralParserRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2319:2: ( ruleNumber )
                    {
                    // InternalSTAlgorithmParser.g:2319:2: ( ruleNumber )
                    // InternalSTAlgorithmParser.g:2320:3: ruleNumber
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralAccess().getValueNumberParserRuleCall_1_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleNumber();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralAccess().getValueNumberParserRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2325:2: ( RULE_NON_DECIMAL )
                    {
                    // InternalSTAlgorithmParser.g:2325:2: ( RULE_NON_DECIMAL )
                    // InternalSTAlgorithmParser.g:2326:3: RULE_NON_DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralAccess().getValueNON_DECIMALTerminalRuleCall_1_0_2()); 
                    }
                    match(input,RULE_NON_DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralAccess().getValueNON_DECIMALTerminalRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__ValueAlternatives_1_0"


    // $ANTLR start "rule__STDateLiteralType__Alternatives"
    // InternalSTAlgorithmParser.g:2335:1: rule__STDateLiteralType__Alternatives : ( ( ruleSTDateType ) | ( D ) | ( LD ) );
    public final void rule__STDateLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2339:1: ( ( ruleSTDateType ) | ( D ) | ( LD ) )
            int alt15=3;
            switch ( input.LA(1) ) {
            case LDATE:
            case DATE:
                {
                alt15=1;
                }
                break;
            case D:
                {
                alt15=2;
                }
                break;
            case LD:
                {
                alt15=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2340:2: ( ruleSTDateType )
                    {
                    // InternalSTAlgorithmParser.g:2340:2: ( ruleSTDateType )
                    // InternalSTAlgorithmParser.g:2341:3: ruleSTDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2346:2: ( D )
                    {
                    // InternalSTAlgorithmParser.g:2346:2: ( D )
                    // InternalSTAlgorithmParser.g:2347:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getDKeyword_1()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getDKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2352:2: ( LD )
                    {
                    // InternalSTAlgorithmParser.g:2352:2: ( LD )
                    // InternalSTAlgorithmParser.g:2353:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getLDKeyword_2()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getLDKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteralType__Alternatives"


    // $ANTLR start "rule__STTimeLiteralType__Alternatives"
    // InternalSTAlgorithmParser.g:2362:1: rule__STTimeLiteralType__Alternatives : ( ( ruleSTAnyDurationType ) | ( T ) | ( LT ) );
    public final void rule__STTimeLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2366:1: ( ( ruleSTAnyDurationType ) | ( T ) | ( LT ) )
            int alt16=3;
            switch ( input.LA(1) ) {
            case LTIME:
            case TIME:
                {
                alt16=1;
                }
                break;
            case T:
                {
                alt16=2;
                }
                break;
            case LT:
                {
                alt16=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2367:2: ( ruleSTAnyDurationType )
                    {
                    // InternalSTAlgorithmParser.g:2367:2: ( ruleSTAnyDurationType )
                    // InternalSTAlgorithmParser.g:2368:3: ruleSTAnyDurationType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getSTAnyDurationTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDurationType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getSTAnyDurationTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2373:2: ( T )
                    {
                    // InternalSTAlgorithmParser.g:2373:2: ( T )
                    // InternalSTAlgorithmParser.g:2374:3: T
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getTKeyword_1()); 
                    }
                    match(input,T,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2379:2: ( LT )
                    {
                    // InternalSTAlgorithmParser.g:2379:2: ( LT )
                    // InternalSTAlgorithmParser.g:2380:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getLTKeyword_2()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getLTKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteralType__Alternatives"


    // $ANTLR start "rule__STStringLiteral__ValueAlternatives_1_0"
    // InternalSTAlgorithmParser.g:2389:1: rule__STStringLiteral__ValueAlternatives_1_0 : ( ( RULE_STRING ) | ( RULE_WSTRING ) );
    public final void rule__STStringLiteral__ValueAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2393:1: ( ( RULE_STRING ) | ( RULE_WSTRING ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_STRING) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_WSTRING) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2394:2: ( RULE_STRING )
                    {
                    // InternalSTAlgorithmParser.g:2394:2: ( RULE_STRING )
                    // InternalSTAlgorithmParser.g:2395:3: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0_0()); 
                    }
                    match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2400:2: ( RULE_WSTRING )
                    {
                    // InternalSTAlgorithmParser.g:2400:2: ( RULE_WSTRING )
                    // InternalSTAlgorithmParser.g:2401:3: RULE_WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStringLiteralAccess().getValueWSTRINGTerminalRuleCall_1_0_1()); 
                    }
                    match(input,RULE_WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStringLiteralAccess().getValueWSTRINGTerminalRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__ValueAlternatives_1_0"


    // $ANTLR start "rule__STAnyType__Alternatives"
    // InternalSTAlgorithmParser.g:2410:1: rule__STAnyType__Alternatives : ( ( RULE_ID ) | ( ruleSTAnyBuiltinType ) );
    public final void rule__STAnyType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2414:1: ( ( RULE_ID ) | ( ruleSTAnyBuiltinType ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_ID) ) {
                alt18=1;
            }
            else if ( ((LA18_0>=LDATE_AND_TIME && LA18_0<=DATE_AND_TIME)||(LA18_0>=LTIME_OF_DAY && LA18_0<=TIME_OF_DAY)||LA18_0==WSTRING||LA18_0==STRING||LA18_0==DWORD||(LA18_0>=LDATE && LA18_0<=ULINT)||(LA18_0>=USINT && LA18_0<=WCHAR)||(LA18_0>=BOOL && LA18_0<=BYTE)||(LA18_0>=CHAR && LA18_0<=DINT)||(LA18_0>=LINT && LA18_0<=SINT)||LA18_0==TIME||(LA18_0>=UINT && LA18_0<=WORD)||(LA18_0>=INT && LA18_0<=LDT)||LA18_0==TOD||LA18_0==DT) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2415:2: ( RULE_ID )
                    {
                    // InternalSTAlgorithmParser.g:2415:2: ( RULE_ID )
                    // InternalSTAlgorithmParser.g:2416:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyTypeAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyTypeAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2421:2: ( ruleSTAnyBuiltinType )
                    {
                    // InternalSTAlgorithmParser.g:2421:2: ( ruleSTAnyBuiltinType )
                    // InternalSTAlgorithmParser.g:2422:3: ruleSTAnyBuiltinType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyTypeAccess().getSTAnyBuiltinTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBuiltinType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyTypeAccess().getSTAnyBuiltinTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyType__Alternatives"


    // $ANTLR start "rule__STAnyBuiltinType__Alternatives"
    // InternalSTAlgorithmParser.g:2431:1: rule__STAnyBuiltinType__Alternatives : ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) | ( ruleSTAnyDurationType ) | ( ruleSTAnyDateType ) | ( ruleSTAnyCharsType ) );
    public final void rule__STAnyBuiltinType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2435:1: ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) | ( ruleSTAnyDurationType ) | ( ruleSTAnyDateType ) | ( ruleSTAnyCharsType ) )
            int alt19=5;
            switch ( input.LA(1) ) {
            case DWORD:
            case LWORD:
            case BOOL:
            case BYTE:
            case WORD:
                {
                alt19=1;
                }
                break;
            case LREAL:
            case UDINT:
            case ULINT:
            case USINT:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case UINT:
            case INT:
                {
                alt19=2;
                }
                break;
            case LTIME:
            case TIME:
                {
                alt19=3;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LDATE:
            case DATE:
            case LTOD:
            case LDT:
            case TOD:
            case DT:
                {
                alt19=4;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
                {
                alt19=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2436:2: ( ruleSTAnyBitType )
                    {
                    // InternalSTAlgorithmParser.g:2436:2: ( ruleSTAnyBitType )
                    // InternalSTAlgorithmParser.g:2437:3: ruleSTAnyBitType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBitType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2442:2: ( ruleSTAnyNumType )
                    {
                    // InternalSTAlgorithmParser.g:2442:2: ( ruleSTAnyNumType )
                    // InternalSTAlgorithmParser.g:2443:3: ruleSTAnyNumType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyNumType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2448:2: ( ruleSTAnyDurationType )
                    {
                    // InternalSTAlgorithmParser.g:2448:2: ( ruleSTAnyDurationType )
                    // InternalSTAlgorithmParser.g:2449:3: ruleSTAnyDurationType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDurationTypeParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDurationType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDurationTypeParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2454:2: ( ruleSTAnyDateType )
                    {
                    // InternalSTAlgorithmParser.g:2454:2: ( ruleSTAnyDateType )
                    // InternalSTAlgorithmParser.g:2455:3: ruleSTAnyDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDateTypeParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDateTypeParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:2460:2: ( ruleSTAnyCharsType )
                    {
                    // InternalSTAlgorithmParser.g:2460:2: ( ruleSTAnyCharsType )
                    // InternalSTAlgorithmParser.g:2461:3: ruleSTAnyCharsType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyCharsTypeParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyCharsType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyCharsTypeParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyBuiltinType__Alternatives"


    // $ANTLR start "rule__STAnyBitType__Alternatives"
    // InternalSTAlgorithmParser.g:2470:1: rule__STAnyBitType__Alternatives : ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) );
    public final void rule__STAnyBitType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2474:1: ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) )
            int alt20=5;
            switch ( input.LA(1) ) {
            case BOOL:
                {
                alt20=1;
                }
                break;
            case BYTE:
                {
                alt20=2;
                }
                break;
            case WORD:
                {
                alt20=3;
                }
                break;
            case DWORD:
                {
                alt20=4;
                }
                break;
            case LWORD:
                {
                alt20=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2475:2: ( BOOL )
                    {
                    // InternalSTAlgorithmParser.g:2475:2: ( BOOL )
                    // InternalSTAlgorithmParser.g:2476:3: BOOL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getBOOLKeyword_0()); 
                    }
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getBOOLKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2481:2: ( BYTE )
                    {
                    // InternalSTAlgorithmParser.g:2481:2: ( BYTE )
                    // InternalSTAlgorithmParser.g:2482:3: BYTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getBYTEKeyword_1()); 
                    }
                    match(input,BYTE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getBYTEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2487:2: ( WORD )
                    {
                    // InternalSTAlgorithmParser.g:2487:2: ( WORD )
                    // InternalSTAlgorithmParser.g:2488:3: WORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getWORDKeyword_2()); 
                    }
                    match(input,WORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getWORDKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2493:2: ( DWORD )
                    {
                    // InternalSTAlgorithmParser.g:2493:2: ( DWORD )
                    // InternalSTAlgorithmParser.g:2494:3: DWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getDWORDKeyword_3()); 
                    }
                    match(input,DWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getDWORDKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:2499:2: ( LWORD )
                    {
                    // InternalSTAlgorithmParser.g:2499:2: ( LWORD )
                    // InternalSTAlgorithmParser.g:2500:3: LWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getLWORDKeyword_4()); 
                    }
                    match(input,LWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getLWORDKeyword_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyBitType__Alternatives"


    // $ANTLR start "rule__STAnyNumType__Alternatives"
    // InternalSTAlgorithmParser.g:2509:1: rule__STAnyNumType__Alternatives : ( ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) );
    public final void rule__STAnyNumType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2513:1: ( ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) )
            int alt21=10;
            switch ( input.LA(1) ) {
            case SINT:
                {
                alt21=1;
                }
                break;
            case INT:
                {
                alt21=2;
                }
                break;
            case DINT:
                {
                alt21=3;
                }
                break;
            case LINT:
                {
                alt21=4;
                }
                break;
            case USINT:
                {
                alt21=5;
                }
                break;
            case UINT:
                {
                alt21=6;
                }
                break;
            case UDINT:
                {
                alt21=7;
                }
                break;
            case ULINT:
                {
                alt21=8;
                }
                break;
            case REAL:
                {
                alt21=9;
                }
                break;
            case LREAL:
                {
                alt21=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2514:2: ( SINT )
                    {
                    // InternalSTAlgorithmParser.g:2514:2: ( SINT )
                    // InternalSTAlgorithmParser.g:2515:3: SINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getSINTKeyword_0()); 
                    }
                    match(input,SINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getSINTKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2520:2: ( INT )
                    {
                    // InternalSTAlgorithmParser.g:2520:2: ( INT )
                    // InternalSTAlgorithmParser.g:2521:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getINTKeyword_1()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getINTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2526:2: ( DINT )
                    {
                    // InternalSTAlgorithmParser.g:2526:2: ( DINT )
                    // InternalSTAlgorithmParser.g:2527:3: DINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getDINTKeyword_2()); 
                    }
                    match(input,DINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getDINTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2532:2: ( LINT )
                    {
                    // InternalSTAlgorithmParser.g:2532:2: ( LINT )
                    // InternalSTAlgorithmParser.g:2533:3: LINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getLINTKeyword_3()); 
                    }
                    match(input,LINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getLINTKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:2538:2: ( USINT )
                    {
                    // InternalSTAlgorithmParser.g:2538:2: ( USINT )
                    // InternalSTAlgorithmParser.g:2539:3: USINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUSINTKeyword_4()); 
                    }
                    match(input,USINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUSINTKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTAlgorithmParser.g:2544:2: ( UINT )
                    {
                    // InternalSTAlgorithmParser.g:2544:2: ( UINT )
                    // InternalSTAlgorithmParser.g:2545:3: UINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUINTKeyword_5()); 
                    }
                    match(input,UINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUINTKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTAlgorithmParser.g:2550:2: ( UDINT )
                    {
                    // InternalSTAlgorithmParser.g:2550:2: ( UDINT )
                    // InternalSTAlgorithmParser.g:2551:3: UDINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUDINTKeyword_6()); 
                    }
                    match(input,UDINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUDINTKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTAlgorithmParser.g:2556:2: ( ULINT )
                    {
                    // InternalSTAlgorithmParser.g:2556:2: ( ULINT )
                    // InternalSTAlgorithmParser.g:2557:3: ULINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getULINTKeyword_7()); 
                    }
                    match(input,ULINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getULINTKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTAlgorithmParser.g:2562:2: ( REAL )
                    {
                    // InternalSTAlgorithmParser.g:2562:2: ( REAL )
                    // InternalSTAlgorithmParser.g:2563:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getREALKeyword_8()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getREALKeyword_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTAlgorithmParser.g:2568:2: ( LREAL )
                    {
                    // InternalSTAlgorithmParser.g:2568:2: ( LREAL )
                    // InternalSTAlgorithmParser.g:2569:3: LREAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getLREALKeyword_9()); 
                    }
                    match(input,LREAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getLREALKeyword_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyNumType__Alternatives"


    // $ANTLR start "rule__STAnyDurationType__Alternatives"
    // InternalSTAlgorithmParser.g:2578:1: rule__STAnyDurationType__Alternatives : ( ( TIME ) | ( LTIME ) );
    public final void rule__STAnyDurationType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2582:1: ( ( TIME ) | ( LTIME ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==TIME) ) {
                alt22=1;
            }
            else if ( (LA22_0==LTIME) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2583:2: ( TIME )
                    {
                    // InternalSTAlgorithmParser.g:2583:2: ( TIME )
                    // InternalSTAlgorithmParser.g:2584:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDurationTypeAccess().getTIMEKeyword_0()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDurationTypeAccess().getTIMEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2589:2: ( LTIME )
                    {
                    // InternalSTAlgorithmParser.g:2589:2: ( LTIME )
                    // InternalSTAlgorithmParser.g:2590:3: LTIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDurationTypeAccess().getLTIMEKeyword_1()); 
                    }
                    match(input,LTIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDurationTypeAccess().getLTIMEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyDurationType__Alternatives"


    // $ANTLR start "rule__STAnyDateType__Alternatives"
    // InternalSTAlgorithmParser.g:2599:1: rule__STAnyDateType__Alternatives : ( ( ruleSTDateType ) | ( ruleSTTimeOfDayType ) | ( ruleSTDateAndTimeType ) );
    public final void rule__STAnyDateType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2603:1: ( ( ruleSTDateType ) | ( ruleSTTimeOfDayType ) | ( ruleSTDateAndTimeType ) )
            int alt23=3;
            switch ( input.LA(1) ) {
            case LDATE:
            case DATE:
                {
                alt23=1;
                }
                break;
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt23=2;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt23=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2604:2: ( ruleSTDateType )
                    {
                    // InternalSTAlgorithmParser.g:2604:2: ( ruleSTDateType )
                    // InternalSTAlgorithmParser.g:2605:3: ruleSTDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2610:2: ( ruleSTTimeOfDayType )
                    {
                    // InternalSTAlgorithmParser.g:2610:2: ( ruleSTTimeOfDayType )
                    // InternalSTAlgorithmParser.g:2611:3: ruleSTTimeOfDayType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTTimeOfDayTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeOfDayType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTTimeOfDayTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2616:2: ( ruleSTDateAndTimeType )
                    {
                    // InternalSTAlgorithmParser.g:2616:2: ( ruleSTDateAndTimeType )
                    // InternalSTAlgorithmParser.g:2617:3: ruleSTDateAndTimeType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTDateAndTimeTypeParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateAndTimeType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTDateAndTimeTypeParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyDateType__Alternatives"


    // $ANTLR start "rule__STDateType__Alternatives"
    // InternalSTAlgorithmParser.g:2626:1: rule__STDateType__Alternatives : ( ( DATE ) | ( LDATE ) );
    public final void rule__STDateType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2630:1: ( ( DATE ) | ( LDATE ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==DATE) ) {
                alt24=1;
            }
            else if ( (LA24_0==LDATE) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2631:2: ( DATE )
                    {
                    // InternalSTAlgorithmParser.g:2631:2: ( DATE )
                    // InternalSTAlgorithmParser.g:2632:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateTypeAccess().getDATEKeyword_0()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateTypeAccess().getDATEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2637:2: ( LDATE )
                    {
                    // InternalSTAlgorithmParser.g:2637:2: ( LDATE )
                    // InternalSTAlgorithmParser.g:2638:3: LDATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateTypeAccess().getLDATEKeyword_1()); 
                    }
                    match(input,LDATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateTypeAccess().getLDATEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateType__Alternatives"


    // $ANTLR start "rule__STTimeOfDayType__Alternatives"
    // InternalSTAlgorithmParser.g:2647:1: rule__STTimeOfDayType__Alternatives : ( ( TIME_OF_DAY ) | ( LTIME_OF_DAY ) | ( TOD ) | ( LTOD ) );
    public final void rule__STTimeOfDayType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2651:1: ( ( TIME_OF_DAY ) | ( LTIME_OF_DAY ) | ( TOD ) | ( LTOD ) )
            int alt25=4;
            switch ( input.LA(1) ) {
            case TIME_OF_DAY:
                {
                alt25=1;
                }
                break;
            case LTIME_OF_DAY:
                {
                alt25=2;
                }
                break;
            case TOD:
                {
                alt25=3;
                }
                break;
            case LTOD:
                {
                alt25=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2652:2: ( TIME_OF_DAY )
                    {
                    // InternalSTAlgorithmParser.g:2652:2: ( TIME_OF_DAY )
                    // InternalSTAlgorithmParser.g:2653:3: TIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getTIME_OF_DAYKeyword_0()); 
                    }
                    match(input,TIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getTIME_OF_DAYKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2658:2: ( LTIME_OF_DAY )
                    {
                    // InternalSTAlgorithmParser.g:2658:2: ( LTIME_OF_DAY )
                    // InternalSTAlgorithmParser.g:2659:3: LTIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getLTIME_OF_DAYKeyword_1()); 
                    }
                    match(input,LTIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getLTIME_OF_DAYKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2664:2: ( TOD )
                    {
                    // InternalSTAlgorithmParser.g:2664:2: ( TOD )
                    // InternalSTAlgorithmParser.g:2665:3: TOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getTODKeyword_2()); 
                    }
                    match(input,TOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getTODKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2670:2: ( LTOD )
                    {
                    // InternalSTAlgorithmParser.g:2670:2: ( LTOD )
                    // InternalSTAlgorithmParser.g:2671:3: LTOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getLTODKeyword_3()); 
                    }
                    match(input,LTOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getLTODKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayType__Alternatives"


    // $ANTLR start "rule__STDateAndTimeType__Alternatives"
    // InternalSTAlgorithmParser.g:2680:1: rule__STDateAndTimeType__Alternatives : ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) );
    public final void rule__STDateAndTimeType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2684:1: ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) )
            int alt26=4;
            switch ( input.LA(1) ) {
            case DATE_AND_TIME:
                {
                alt26=1;
                }
                break;
            case LDATE_AND_TIME:
                {
                alt26=2;
                }
                break;
            case DT:
                {
                alt26=3;
                }
                break;
            case LDT:
                {
                alt26=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2685:2: ( DATE_AND_TIME )
                    {
                    // InternalSTAlgorithmParser.g:2685:2: ( DATE_AND_TIME )
                    // InternalSTAlgorithmParser.g:2686:3: DATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getDATE_AND_TIMEKeyword_0()); 
                    }
                    match(input,DATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getDATE_AND_TIMEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2691:2: ( LDATE_AND_TIME )
                    {
                    // InternalSTAlgorithmParser.g:2691:2: ( LDATE_AND_TIME )
                    // InternalSTAlgorithmParser.g:2692:3: LDATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getLDATE_AND_TIMEKeyword_1()); 
                    }
                    match(input,LDATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getLDATE_AND_TIMEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2697:2: ( DT )
                    {
                    // InternalSTAlgorithmParser.g:2697:2: ( DT )
                    // InternalSTAlgorithmParser.g:2698:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getDTKeyword_2()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getDTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2703:2: ( LDT )
                    {
                    // InternalSTAlgorithmParser.g:2703:2: ( LDT )
                    // InternalSTAlgorithmParser.g:2704:3: LDT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getLDTKeyword_3()); 
                    }
                    match(input,LDT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getLDTKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeType__Alternatives"


    // $ANTLR start "rule__STAnyCharsType__Alternatives"
    // InternalSTAlgorithmParser.g:2713:1: rule__STAnyCharsType__Alternatives : ( ( STRING ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) );
    public final void rule__STAnyCharsType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2717:1: ( ( STRING ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) )
            int alt27=4;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt27=1;
                }
                break;
            case WSTRING:
                {
                alt27=2;
                }
                break;
            case CHAR:
                {
                alt27=3;
                }
                break;
            case WCHAR:
                {
                alt27=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2718:2: ( STRING )
                    {
                    // InternalSTAlgorithmParser.g:2718:2: ( STRING )
                    // InternalSTAlgorithmParser.g:2719:3: STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getSTRINGKeyword_0()); 
                    }
                    match(input,STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getSTRINGKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2724:2: ( WSTRING )
                    {
                    // InternalSTAlgorithmParser.g:2724:2: ( WSTRING )
                    // InternalSTAlgorithmParser.g:2725:3: WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getWSTRINGKeyword_1()); 
                    }
                    match(input,WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getWSTRINGKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2730:2: ( CHAR )
                    {
                    // InternalSTAlgorithmParser.g:2730:2: ( CHAR )
                    // InternalSTAlgorithmParser.g:2731:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getCHARKeyword_2()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getCHARKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2736:2: ( WCHAR )
                    {
                    // InternalSTAlgorithmParser.g:2736:2: ( WCHAR )
                    // InternalSTAlgorithmParser.g:2737:3: WCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getWCHARKeyword_3()); 
                    }
                    match(input,WCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getWCHARKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyCharsType__Alternatives"


    // $ANTLR start "rule__BoolLiteral__Alternatives"
    // InternalSTAlgorithmParser.g:2746:1: rule__BoolLiteral__Alternatives : ( ( TRUE ) | ( FALSE ) );
    public final void rule__BoolLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2750:1: ( ( TRUE ) | ( FALSE ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==TRUE) ) {
                alt28=1;
            }
            else if ( (LA28_0==FALSE) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2751:2: ( TRUE )
                    {
                    // InternalSTAlgorithmParser.g:2751:2: ( TRUE )
                    // InternalSTAlgorithmParser.g:2752:3: TRUE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolLiteralAccess().getTRUEKeyword_0()); 
                    }
                    match(input,TRUE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolLiteralAccess().getTRUEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2757:2: ( FALSE )
                    {
                    // InternalSTAlgorithmParser.g:2757:2: ( FALSE )
                    // InternalSTAlgorithmParser.g:2758:3: FALSE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolLiteralAccess().getFALSEKeyword_1()); 
                    }
                    match(input,FALSE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolLiteralAccess().getFALSEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolLiteral__Alternatives"


    // $ANTLR start "rule__Number__Alternatives_0"
    // InternalSTAlgorithmParser.g:2767:1: rule__Number__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__Number__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2771:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==PlusSign) ) {
                alt29=1;
            }
            else if ( (LA29_0==HyphenMinus) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2772:2: ( PlusSign )
                    {
                    // InternalSTAlgorithmParser.g:2772:2: ( PlusSign )
                    // InternalSTAlgorithmParser.g:2773:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2778:2: ( HyphenMinus )
                    {
                    // InternalSTAlgorithmParser.g:2778:2: ( HyphenMinus )
                    // InternalSTAlgorithmParser.g:2779:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_0"


    // $ANTLR start "rule__Number__Alternatives_2_1"
    // InternalSTAlgorithmParser.g:2788:1: rule__Number__Alternatives_2_1 : ( ( RULE_EXT_INT ) | ( RULE_INT ) );
    public final void rule__Number__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2792:1: ( ( RULE_EXT_INT ) | ( RULE_INT ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_EXT_INT) ) {
                alt30=1;
            }
            else if ( (LA30_0==RULE_INT) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2793:2: ( RULE_EXT_INT )
                    {
                    // InternalSTAlgorithmParser.g:2793:2: ( RULE_EXT_INT )
                    // InternalSTAlgorithmParser.g:2794:3: RULE_EXT_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getEXT_INTTerminalRuleCall_2_1_0()); 
                    }
                    match(input,RULE_EXT_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getEXT_INTTerminalRuleCall_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2799:2: ( RULE_INT )
                    {
                    // InternalSTAlgorithmParser.g:2799:2: ( RULE_INT )
                    // InternalSTAlgorithmParser.g:2800:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_2_1_1()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_2_1"


    // $ANTLR start "rule__Time__Alternatives_1"
    // InternalSTAlgorithmParser.g:2809:1: rule__Time__Alternatives_1 : ( ( D ) | ( H ) | ( M ) | ( S ) | ( MS ) | ( US ) | ( NS ) );
    public final void rule__Time__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2813:1: ( ( D ) | ( H ) | ( M ) | ( S ) | ( MS ) | ( US ) | ( NS ) )
            int alt31=7;
            switch ( input.LA(1) ) {
            case D:
                {
                alt31=1;
                }
                break;
            case H:
                {
                alt31=2;
                }
                break;
            case M:
                {
                alt31=3;
                }
                break;
            case S:
                {
                alt31=4;
                }
                break;
            case MS:
                {
                alt31=5;
                }
                break;
            case US:
                {
                alt31=6;
                }
                break;
            case NS:
                {
                alt31=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }

            switch (alt31) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2814:2: ( D )
                    {
                    // InternalSTAlgorithmParser.g:2814:2: ( D )
                    // InternalSTAlgorithmParser.g:2815:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getDKeyword_1_0()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getDKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2820:2: ( H )
                    {
                    // InternalSTAlgorithmParser.g:2820:2: ( H )
                    // InternalSTAlgorithmParser.g:2821:3: H
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getHKeyword_1_1()); 
                    }
                    match(input,H,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getHKeyword_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2826:2: ( M )
                    {
                    // InternalSTAlgorithmParser.g:2826:2: ( M )
                    // InternalSTAlgorithmParser.g:2827:3: M
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getMKeyword_1_2()); 
                    }
                    match(input,M,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getMKeyword_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2832:2: ( S )
                    {
                    // InternalSTAlgorithmParser.g:2832:2: ( S )
                    // InternalSTAlgorithmParser.g:2833:3: S
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getSKeyword_1_3()); 
                    }
                    match(input,S,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getSKeyword_1_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:2838:2: ( MS )
                    {
                    // InternalSTAlgorithmParser.g:2838:2: ( MS )
                    // InternalSTAlgorithmParser.g:2839:3: MS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getMSKeyword_1_4()); 
                    }
                    match(input,MS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getMSKeyword_1_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTAlgorithmParser.g:2844:2: ( US )
                    {
                    // InternalSTAlgorithmParser.g:2844:2: ( US )
                    // InternalSTAlgorithmParser.g:2845:3: US
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getUSKeyword_1_5()); 
                    }
                    match(input,US,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getUSKeyword_1_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTAlgorithmParser.g:2850:2: ( NS )
                    {
                    // InternalSTAlgorithmParser.g:2850:2: ( NS )
                    // InternalSTAlgorithmParser.g:2851:3: NS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getNSKeyword_1_6()); 
                    }
                    match(input,NS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getNSKeyword_1_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Alternatives_1"


    // $ANTLR start "rule__AndOperator__Alternatives"
    // InternalSTAlgorithmParser.g:2860:1: rule__AndOperator__Alternatives : ( ( ( AND ) ) | ( ( Ampersand ) ) );
    public final void rule__AndOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2864:1: ( ( ( AND ) ) | ( ( Ampersand ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==AND) ) {
                alt32=1;
            }
            else if ( (LA32_0==Ampersand) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2865:2: ( ( AND ) )
                    {
                    // InternalSTAlgorithmParser.g:2865:2: ( ( AND ) )
                    // InternalSTAlgorithmParser.g:2866:3: ( AND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2867:3: ( AND )
                    // InternalSTAlgorithmParser.g:2867:4: AND
                    {
                    match(input,AND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2871:2: ( ( Ampersand ) )
                    {
                    // InternalSTAlgorithmParser.g:2871:2: ( ( Ampersand ) )
                    // InternalSTAlgorithmParser.g:2872:3: ( Ampersand )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2873:3: ( Ampersand )
                    // InternalSTAlgorithmParser.g:2873:4: Ampersand
                    {
                    match(input,Ampersand,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndOperator__Alternatives"


    // $ANTLR start "rule__EqualityOperator__Alternatives"
    // InternalSTAlgorithmParser.g:2881:1: rule__EqualityOperator__Alternatives : ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) );
    public final void rule__EqualityOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2885:1: ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==EqualsSign) ) {
                alt33=1;
            }
            else if ( (LA33_0==LessThanSignGreaterThanSign) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2886:2: ( ( EqualsSign ) )
                    {
                    // InternalSTAlgorithmParser.g:2886:2: ( ( EqualsSign ) )
                    // InternalSTAlgorithmParser.g:2887:3: ( EqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2888:3: ( EqualsSign )
                    // InternalSTAlgorithmParser.g:2888:4: EqualsSign
                    {
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2892:2: ( ( LessThanSignGreaterThanSign ) )
                    {
                    // InternalSTAlgorithmParser.g:2892:2: ( ( LessThanSignGreaterThanSign ) )
                    // InternalSTAlgorithmParser.g:2893:3: ( LessThanSignGreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2894:3: ( LessThanSignGreaterThanSign )
                    // InternalSTAlgorithmParser.g:2894:4: LessThanSignGreaterThanSign
                    {
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityOperator__Alternatives"


    // $ANTLR start "rule__CompareOperator__Alternatives"
    // InternalSTAlgorithmParser.g:2902:1: rule__CompareOperator__Alternatives : ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) );
    public final void rule__CompareOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2906:1: ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) )
            int alt34=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt34=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt34=2;
                }
                break;
            case GreaterThanSign:
                {
                alt34=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt34=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2907:2: ( ( LessThanSign ) )
                    {
                    // InternalSTAlgorithmParser.g:2907:2: ( ( LessThanSign ) )
                    // InternalSTAlgorithmParser.g:2908:3: ( LessThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2909:3: ( LessThanSign )
                    // InternalSTAlgorithmParser.g:2909:4: LessThanSign
                    {
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2913:2: ( ( LessThanSignEqualsSign ) )
                    {
                    // InternalSTAlgorithmParser.g:2913:2: ( ( LessThanSignEqualsSign ) )
                    // InternalSTAlgorithmParser.g:2914:3: ( LessThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2915:3: ( LessThanSignEqualsSign )
                    // InternalSTAlgorithmParser.g:2915:4: LessThanSignEqualsSign
                    {
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2919:2: ( ( GreaterThanSign ) )
                    {
                    // InternalSTAlgorithmParser.g:2919:2: ( ( GreaterThanSign ) )
                    // InternalSTAlgorithmParser.g:2920:3: ( GreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTAlgorithmParser.g:2921:3: ( GreaterThanSign )
                    // InternalSTAlgorithmParser.g:2921:4: GreaterThanSign
                    {
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2925:2: ( ( GreaterThanSignEqualsSign ) )
                    {
                    // InternalSTAlgorithmParser.g:2925:2: ( ( GreaterThanSignEqualsSign ) )
                    // InternalSTAlgorithmParser.g:2926:3: ( GreaterThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTAlgorithmParser.g:2927:3: ( GreaterThanSignEqualsSign )
                    // InternalSTAlgorithmParser.g:2927:4: GreaterThanSignEqualsSign
                    {
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperator__Alternatives"


    // $ANTLR start "rule__AddSubOperator__Alternatives"
    // InternalSTAlgorithmParser.g:2935:1: rule__AddSubOperator__Alternatives : ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) );
    public final void rule__AddSubOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2939:1: ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==PlusSign) ) {
                alt35=1;
            }
            else if ( (LA35_0==HyphenMinus) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2940:2: ( ( PlusSign ) )
                    {
                    // InternalSTAlgorithmParser.g:2940:2: ( ( PlusSign ) )
                    // InternalSTAlgorithmParser.g:2941:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2942:3: ( PlusSign )
                    // InternalSTAlgorithmParser.g:2942:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2946:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTAlgorithmParser.g:2946:2: ( ( HyphenMinus ) )
                    // InternalSTAlgorithmParser.g:2947:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2948:3: ( HyphenMinus )
                    // InternalSTAlgorithmParser.g:2948:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddSubOperator__Alternatives"


    // $ANTLR start "rule__MulDivModOperator__Alternatives"
    // InternalSTAlgorithmParser.g:2956:1: rule__MulDivModOperator__Alternatives : ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) );
    public final void rule__MulDivModOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2960:1: ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) )
            int alt36=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt36=1;
                }
                break;
            case Solidus:
                {
                alt36=2;
                }
                break;
            case MOD:
                {
                alt36=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2961:2: ( ( Asterisk ) )
                    {
                    // InternalSTAlgorithmParser.g:2961:2: ( ( Asterisk ) )
                    // InternalSTAlgorithmParser.g:2962:3: ( Asterisk )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2963:3: ( Asterisk )
                    // InternalSTAlgorithmParser.g:2963:4: Asterisk
                    {
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2967:2: ( ( Solidus ) )
                    {
                    // InternalSTAlgorithmParser.g:2967:2: ( ( Solidus ) )
                    // InternalSTAlgorithmParser.g:2968:3: ( Solidus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2969:3: ( Solidus )
                    // InternalSTAlgorithmParser.g:2969:4: Solidus
                    {
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2973:2: ( ( MOD ) )
                    {
                    // InternalSTAlgorithmParser.g:2973:2: ( ( MOD ) )
                    // InternalSTAlgorithmParser.g:2974:3: ( MOD )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTAlgorithmParser.g:2975:3: ( MOD )
                    // InternalSTAlgorithmParser.g:2975:4: MOD
                    {
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulDivModOperator__Alternatives"


    // $ANTLR start "rule__UnaryOperator__Alternatives"
    // InternalSTAlgorithmParser.g:2983:1: rule__UnaryOperator__Alternatives : ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) );
    public final void rule__UnaryOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2987:1: ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) )
            int alt37=3;
            switch ( input.LA(1) ) {
            case HyphenMinus:
                {
                alt37=1;
                }
                break;
            case PlusSign:
                {
                alt37=2;
                }
                break;
            case NOT:
                {
                alt37=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2988:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTAlgorithmParser.g:2988:2: ( ( HyphenMinus ) )
                    // InternalSTAlgorithmParser.g:2989:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2990:3: ( HyphenMinus )
                    // InternalSTAlgorithmParser.g:2990:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2994:2: ( ( PlusSign ) )
                    {
                    // InternalSTAlgorithmParser.g:2994:2: ( ( PlusSign ) )
                    // InternalSTAlgorithmParser.g:2995:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2996:3: ( PlusSign )
                    // InternalSTAlgorithmParser.g:2996:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:3000:2: ( ( NOT ) )
                    {
                    // InternalSTAlgorithmParser.g:3000:2: ( ( NOT ) )
                    // InternalSTAlgorithmParser.g:3001:3: ( NOT )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTAlgorithmParser.g:3002:3: ( NOT )
                    // InternalSTAlgorithmParser.g:3002:4: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOperator__Alternatives"


    // $ANTLR start "rule__STMultiBitAccessSpecifier__Alternatives"
    // InternalSTAlgorithmParser.g:3010:1: rule__STMultiBitAccessSpecifier__Alternatives : ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) );
    public final void rule__STMultiBitAccessSpecifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3014:1: ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) )
            int alt38=5;
            switch ( input.LA(1) ) {
            case L:
                {
                alt38=1;
                }
                break;
            case D_1:
                {
                alt38=2;
                }
                break;
            case W:
                {
                alt38=3;
                }
                break;
            case B:
                {
                alt38=4;
                }
                break;
            case X:
                {
                alt38=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3015:2: ( ( L ) )
                    {
                    // InternalSTAlgorithmParser.g:3015:2: ( ( L ) )
                    // InternalSTAlgorithmParser.g:3016:3: ( L )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getLEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:3017:3: ( L )
                    // InternalSTAlgorithmParser.g:3017:4: L
                    {
                    match(input,L,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getLEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3021:2: ( ( D_1 ) )
                    {
                    // InternalSTAlgorithmParser.g:3021:2: ( ( D_1 ) )
                    // InternalSTAlgorithmParser.g:3022:3: ( D_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:3023:3: ( D_1 )
                    // InternalSTAlgorithmParser.g:3023:4: D_1
                    {
                    match(input,D_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:3027:2: ( ( W ) )
                    {
                    // InternalSTAlgorithmParser.g:3027:2: ( ( W ) )
                    // InternalSTAlgorithmParser.g:3028:3: ( W )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getWEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTAlgorithmParser.g:3029:3: ( W )
                    // InternalSTAlgorithmParser.g:3029:4: W
                    {
                    match(input,W,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getWEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:3033:2: ( ( B ) )
                    {
                    // InternalSTAlgorithmParser.g:3033:2: ( ( B ) )
                    // InternalSTAlgorithmParser.g:3034:3: ( B )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getBEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTAlgorithmParser.g:3035:3: ( B )
                    // InternalSTAlgorithmParser.g:3035:4: B
                    {
                    match(input,B,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getBEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:3039:2: ( ( X ) )
                    {
                    // InternalSTAlgorithmParser.g:3039:2: ( ( X ) )
                    // InternalSTAlgorithmParser.g:3040:3: ( X )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getXEnumLiteralDeclaration_4()); 
                    }
                    // InternalSTAlgorithmParser.g:3041:3: ( X )
                    // InternalSTAlgorithmParser.g:3041:4: X
                    {
                    match(input,X,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getXEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultiBitAccessSpecifier__Alternatives"


    // $ANTLR start "rule__STAlgorithmSource__Group__0"
    // InternalSTAlgorithmParser.g:3049:1: rule__STAlgorithmSource__Group__0 : rule__STAlgorithmSource__Group__0__Impl rule__STAlgorithmSource__Group__1 ;
    public final void rule__STAlgorithmSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3053:1: ( rule__STAlgorithmSource__Group__0__Impl rule__STAlgorithmSource__Group__1 )
            // InternalSTAlgorithmParser.g:3054:2: rule__STAlgorithmSource__Group__0__Impl rule__STAlgorithmSource__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__STAlgorithmSource__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAlgorithmSource__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmSource__Group__0"


    // $ANTLR start "rule__STAlgorithmSource__Group__0__Impl"
    // InternalSTAlgorithmParser.g:3061:1: rule__STAlgorithmSource__Group__0__Impl : ( () ) ;
    public final void rule__STAlgorithmSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3065:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:3066:1: ( () )
            {
            // InternalSTAlgorithmParser.g:3066:1: ( () )
            // InternalSTAlgorithmParser.g:3067:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmSourceAccess().getSTAlgorithmSourceAction_0()); 
            }
            // InternalSTAlgorithmParser.g:3068:2: ()
            // InternalSTAlgorithmParser.g:3068:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmSourceAccess().getSTAlgorithmSourceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmSource__Group__0__Impl"


    // $ANTLR start "rule__STAlgorithmSource__Group__1"
    // InternalSTAlgorithmParser.g:3076:1: rule__STAlgorithmSource__Group__1 : rule__STAlgorithmSource__Group__1__Impl ;
    public final void rule__STAlgorithmSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3080:1: ( rule__STAlgorithmSource__Group__1__Impl )
            // InternalSTAlgorithmParser.g:3081:2: rule__STAlgorithmSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithmSource__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmSource__Group__1"


    // $ANTLR start "rule__STAlgorithmSource__Group__1__Impl"
    // InternalSTAlgorithmParser.g:3087:1: rule__STAlgorithmSource__Group__1__Impl : ( ( rule__STAlgorithmSource__AlgorithmsAssignment_1 )* ) ;
    public final void rule__STAlgorithmSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3091:1: ( ( ( rule__STAlgorithmSource__AlgorithmsAssignment_1 )* ) )
            // InternalSTAlgorithmParser.g:3092:1: ( ( rule__STAlgorithmSource__AlgorithmsAssignment_1 )* )
            {
            // InternalSTAlgorithmParser.g:3092:1: ( ( rule__STAlgorithmSource__AlgorithmsAssignment_1 )* )
            // InternalSTAlgorithmParser.g:3093:2: ( rule__STAlgorithmSource__AlgorithmsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmSourceAccess().getAlgorithmsAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:3094:2: ( rule__STAlgorithmSource__AlgorithmsAssignment_1 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==ALGORITHM) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:3094:3: rule__STAlgorithmSource__AlgorithmsAssignment_1
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__STAlgorithmSource__AlgorithmsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmSourceAccess().getAlgorithmsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmSource__Group__1__Impl"


    // $ANTLR start "rule__STAlgorithm__Group__0"
    // InternalSTAlgorithmParser.g:3103:1: rule__STAlgorithm__Group__0 : rule__STAlgorithm__Group__0__Impl rule__STAlgorithm__Group__1 ;
    public final void rule__STAlgorithm__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3107:1: ( rule__STAlgorithm__Group__0__Impl rule__STAlgorithm__Group__1 )
            // InternalSTAlgorithmParser.g:3108:2: rule__STAlgorithm__Group__0__Impl rule__STAlgorithm__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__STAlgorithm__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__0"


    // $ANTLR start "rule__STAlgorithm__Group__0__Impl"
    // InternalSTAlgorithmParser.g:3115:1: rule__STAlgorithm__Group__0__Impl : ( ALGORITHM ) ;
    public final void rule__STAlgorithm__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3119:1: ( ( ALGORITHM ) )
            // InternalSTAlgorithmParser.g:3120:1: ( ALGORITHM )
            {
            // InternalSTAlgorithmParser.g:3120:1: ( ALGORITHM )
            // InternalSTAlgorithmParser.g:3121:2: ALGORITHM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getALGORITHMKeyword_0()); 
            }
            match(input,ALGORITHM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getALGORITHMKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__0__Impl"


    // $ANTLR start "rule__STAlgorithm__Group__1"
    // InternalSTAlgorithmParser.g:3130:1: rule__STAlgorithm__Group__1 : rule__STAlgorithm__Group__1__Impl rule__STAlgorithm__Group__2 ;
    public final void rule__STAlgorithm__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3134:1: ( rule__STAlgorithm__Group__1__Impl rule__STAlgorithm__Group__2 )
            // InternalSTAlgorithmParser.g:3135:2: rule__STAlgorithm__Group__1__Impl rule__STAlgorithm__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__STAlgorithm__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__1"


    // $ANTLR start "rule__STAlgorithm__Group__1__Impl"
    // InternalSTAlgorithmParser.g:3142:1: rule__STAlgorithm__Group__1__Impl : ( ( rule__STAlgorithm__NameAssignment_1 ) ) ;
    public final void rule__STAlgorithm__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3146:1: ( ( ( rule__STAlgorithm__NameAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:3147:1: ( ( rule__STAlgorithm__NameAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:3147:1: ( ( rule__STAlgorithm__NameAssignment_1 ) )
            // InternalSTAlgorithmParser.g:3148:2: ( rule__STAlgorithm__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getNameAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:3149:2: ( rule__STAlgorithm__NameAssignment_1 )
            // InternalSTAlgorithmParser.g:3149:3: rule__STAlgorithm__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__1__Impl"


    // $ANTLR start "rule__STAlgorithm__Group__2"
    // InternalSTAlgorithmParser.g:3157:1: rule__STAlgorithm__Group__2 : rule__STAlgorithm__Group__2__Impl rule__STAlgorithm__Group__3 ;
    public final void rule__STAlgorithm__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3161:1: ( rule__STAlgorithm__Group__2__Impl rule__STAlgorithm__Group__3 )
            // InternalSTAlgorithmParser.g:3162:2: rule__STAlgorithm__Group__2__Impl rule__STAlgorithm__Group__3
            {
            pushFollow(FOLLOW_8);
            rule__STAlgorithm__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__2"


    // $ANTLR start "rule__STAlgorithm__Group__2__Impl"
    // InternalSTAlgorithmParser.g:3169:1: rule__STAlgorithm__Group__2__Impl : ( ( rule__STAlgorithm__BodyAssignment_2 ) ) ;
    public final void rule__STAlgorithm__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3173:1: ( ( ( rule__STAlgorithm__BodyAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:3174:1: ( ( rule__STAlgorithm__BodyAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:3174:1: ( ( rule__STAlgorithm__BodyAssignment_2 ) )
            // InternalSTAlgorithmParser.g:3175:2: ( rule__STAlgorithm__BodyAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getBodyAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:3176:2: ( rule__STAlgorithm__BodyAssignment_2 )
            // InternalSTAlgorithmParser.g:3176:3: rule__STAlgorithm__BodyAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__BodyAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getBodyAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__2__Impl"


    // $ANTLR start "rule__STAlgorithm__Group__3"
    // InternalSTAlgorithmParser.g:3184:1: rule__STAlgorithm__Group__3 : rule__STAlgorithm__Group__3__Impl ;
    public final void rule__STAlgorithm__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3188:1: ( rule__STAlgorithm__Group__3__Impl )
            // InternalSTAlgorithmParser.g:3189:2: rule__STAlgorithm__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__3"


    // $ANTLR start "rule__STAlgorithm__Group__3__Impl"
    // InternalSTAlgorithmParser.g:3195:1: rule__STAlgorithm__Group__3__Impl : ( END_ALGORITHM ) ;
    public final void rule__STAlgorithm__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3199:1: ( ( END_ALGORITHM ) )
            // InternalSTAlgorithmParser.g:3200:1: ( END_ALGORITHM )
            {
            // InternalSTAlgorithmParser.g:3200:1: ( END_ALGORITHM )
            // InternalSTAlgorithmParser.g:3201:2: END_ALGORITHM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getEND_ALGORITHMKeyword_3()); 
            }
            match(input,END_ALGORITHM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getEND_ALGORITHMKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__3__Impl"


    // $ANTLR start "rule__STAlgorithmBody__Group__0"
    // InternalSTAlgorithmParser.g:3211:1: rule__STAlgorithmBody__Group__0 : rule__STAlgorithmBody__Group__0__Impl rule__STAlgorithmBody__Group__1 ;
    public final void rule__STAlgorithmBody__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3215:1: ( rule__STAlgorithmBody__Group__0__Impl rule__STAlgorithmBody__Group__1 )
            // InternalSTAlgorithmParser.g:3216:2: rule__STAlgorithmBody__Group__0__Impl rule__STAlgorithmBody__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__STAlgorithmBody__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAlgorithmBody__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__Group__0"


    // $ANTLR start "rule__STAlgorithmBody__Group__0__Impl"
    // InternalSTAlgorithmParser.g:3223:1: rule__STAlgorithmBody__Group__0__Impl : ( () ) ;
    public final void rule__STAlgorithmBody__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3227:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:3228:1: ( () )
            {
            // InternalSTAlgorithmParser.g:3228:1: ( () )
            // InternalSTAlgorithmParser.g:3229:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyAccess().getSTAlgorithmBodyAction_0()); 
            }
            // InternalSTAlgorithmParser.g:3230:2: ()
            // InternalSTAlgorithmParser.g:3230:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyAccess().getSTAlgorithmBodyAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__Group__0__Impl"


    // $ANTLR start "rule__STAlgorithmBody__Group__1"
    // InternalSTAlgorithmParser.g:3238:1: rule__STAlgorithmBody__Group__1 : rule__STAlgorithmBody__Group__1__Impl rule__STAlgorithmBody__Group__2 ;
    public final void rule__STAlgorithmBody__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3242:1: ( rule__STAlgorithmBody__Group__1__Impl rule__STAlgorithmBody__Group__2 )
            // InternalSTAlgorithmParser.g:3243:2: rule__STAlgorithmBody__Group__1__Impl rule__STAlgorithmBody__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__STAlgorithmBody__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAlgorithmBody__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__Group__1"


    // $ANTLR start "rule__STAlgorithmBody__Group__1__Impl"
    // InternalSTAlgorithmParser.g:3250:1: rule__STAlgorithmBody__Group__1__Impl : ( ( rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 )* ) ;
    public final void rule__STAlgorithmBody__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3254:1: ( ( ( rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 )* ) )
            // InternalSTAlgorithmParser.g:3255:1: ( ( rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 )* )
            {
            // InternalSTAlgorithmParser.g:3255:1: ( ( rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 )* )
            // InternalSTAlgorithmParser.g:3256:2: ( rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyAccess().getVarTempDeclarationsAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:3257:2: ( rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==VAR_TEMP) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:3257:3: rule__STAlgorithmBody__VarTempDeclarationsAssignment_1
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STAlgorithmBody__VarTempDeclarationsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyAccess().getVarTempDeclarationsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__Group__1__Impl"


    // $ANTLR start "rule__STAlgorithmBody__Group__2"
    // InternalSTAlgorithmParser.g:3265:1: rule__STAlgorithmBody__Group__2 : rule__STAlgorithmBody__Group__2__Impl ;
    public final void rule__STAlgorithmBody__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3269:1: ( rule__STAlgorithmBody__Group__2__Impl )
            // InternalSTAlgorithmParser.g:3270:2: rule__STAlgorithmBody__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithmBody__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__Group__2"


    // $ANTLR start "rule__STAlgorithmBody__Group__2__Impl"
    // InternalSTAlgorithmParser.g:3276:1: rule__STAlgorithmBody__Group__2__Impl : ( ( rule__STAlgorithmBody__StatementsAssignment_2 )* ) ;
    public final void rule__STAlgorithmBody__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3280:1: ( ( ( rule__STAlgorithmBody__StatementsAssignment_2 )* ) )
            // InternalSTAlgorithmParser.g:3281:1: ( ( rule__STAlgorithmBody__StatementsAssignment_2 )* )
            {
            // InternalSTAlgorithmParser.g:3281:1: ( ( rule__STAlgorithmBody__StatementsAssignment_2 )* )
            // InternalSTAlgorithmParser.g:3282:2: ( rule__STAlgorithmBody__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyAccess().getStatementsAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:3283:2: ( rule__STAlgorithmBody__StatementsAssignment_2 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( ((LA41_0>=LDATE_AND_TIME && LA41_0<=DATE_AND_TIME)||(LA41_0>=LTIME_OF_DAY && LA41_0<=TIME_OF_DAY)||LA41_0==CONTINUE||LA41_0==WSTRING||(LA41_0>=REPEAT && LA41_0<=STRING)||LA41_0==DWORD||(LA41_0>=FALSE && LA41_0<=ULINT)||(LA41_0>=USINT && LA41_0<=DINT)||(LA41_0>=EXIT && LA41_0<=SINT)||(LA41_0>=TIME && LA41_0<=WORD)||(LA41_0>=FOR && LA41_0<=LDT)||LA41_0==TOD||(LA41_0>=DT && LA41_0<=LT)||LA41_0==LeftParenthesis||LA41_0==PlusSign||LA41_0==HyphenMinus||LA41_0==Semicolon||LA41_0==D||LA41_0==T||(LA41_0>=RULE_NON_DECIMAL && LA41_0<=RULE_INT)||(LA41_0>=RULE_ID && LA41_0<=RULE_WSTRING)) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:3283:3: rule__STAlgorithmBody__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__STAlgorithmBody__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__Group__2__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__0"
    // InternalSTAlgorithmParser.g:3292:1: rule__STVarTempDeclarationBlock__Group__0 : rule__STVarTempDeclarationBlock__Group__0__Impl rule__STVarTempDeclarationBlock__Group__1 ;
    public final void rule__STVarTempDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3296:1: ( rule__STVarTempDeclarationBlock__Group__0__Impl rule__STVarTempDeclarationBlock__Group__1 )
            // InternalSTAlgorithmParser.g:3297:2: rule__STVarTempDeclarationBlock__Group__0__Impl rule__STVarTempDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__STVarTempDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__0"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__0__Impl"
    // InternalSTAlgorithmParser.g:3304:1: rule__STVarTempDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__STVarTempDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3308:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:3309:1: ( () )
            {
            // InternalSTAlgorithmParser.g:3309:1: ( () )
            // InternalSTAlgorithmParser.g:3310:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getSTVarDeclarationBlockAction_0()); 
            }
            // InternalSTAlgorithmParser.g:3311:2: ()
            // InternalSTAlgorithmParser.g:3311:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getSTVarDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__1"
    // InternalSTAlgorithmParser.g:3319:1: rule__STVarTempDeclarationBlock__Group__1 : rule__STVarTempDeclarationBlock__Group__1__Impl rule__STVarTempDeclarationBlock__Group__2 ;
    public final void rule__STVarTempDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3323:1: ( rule__STVarTempDeclarationBlock__Group__1__Impl rule__STVarTempDeclarationBlock__Group__2 )
            // InternalSTAlgorithmParser.g:3324:2: rule__STVarTempDeclarationBlock__Group__1__Impl rule__STVarTempDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__STVarTempDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__1"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__1__Impl"
    // InternalSTAlgorithmParser.g:3331:1: rule__STVarTempDeclarationBlock__Group__1__Impl : ( VAR_TEMP ) ;
    public final void rule__STVarTempDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3335:1: ( ( VAR_TEMP ) )
            // InternalSTAlgorithmParser.g:3336:1: ( VAR_TEMP )
            {
            // InternalSTAlgorithmParser.g:3336:1: ( VAR_TEMP )
            // InternalSTAlgorithmParser.g:3337:2: VAR_TEMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getVAR_TEMPKeyword_1()); 
            }
            match(input,VAR_TEMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getVAR_TEMPKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__2"
    // InternalSTAlgorithmParser.g:3346:1: rule__STVarTempDeclarationBlock__Group__2 : rule__STVarTempDeclarationBlock__Group__2__Impl rule__STVarTempDeclarationBlock__Group__3 ;
    public final void rule__STVarTempDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3350:1: ( rule__STVarTempDeclarationBlock__Group__2__Impl rule__STVarTempDeclarationBlock__Group__3 )
            // InternalSTAlgorithmParser.g:3351:2: rule__STVarTempDeclarationBlock__Group__2__Impl rule__STVarTempDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_12);
            rule__STVarTempDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__2"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__2__Impl"
    // InternalSTAlgorithmParser.g:3358:1: rule__STVarTempDeclarationBlock__Group__2__Impl : ( ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__STVarTempDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3362:1: ( ( ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTAlgorithmParser.g:3363:1: ( ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTAlgorithmParser.g:3363:1: ( ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTAlgorithmParser.g:3364:2: ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:3365:2: ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==CONSTANT) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3365:3: rule__STVarTempDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarTempDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__3"
    // InternalSTAlgorithmParser.g:3373:1: rule__STVarTempDeclarationBlock__Group__3 : rule__STVarTempDeclarationBlock__Group__3__Impl rule__STVarTempDeclarationBlock__Group__4 ;
    public final void rule__STVarTempDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3377:1: ( rule__STVarTempDeclarationBlock__Group__3__Impl rule__STVarTempDeclarationBlock__Group__4 )
            // InternalSTAlgorithmParser.g:3378:2: rule__STVarTempDeclarationBlock__Group__3__Impl rule__STVarTempDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_12);
            rule__STVarTempDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__3"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__3__Impl"
    // InternalSTAlgorithmParser.g:3385:1: rule__STVarTempDeclarationBlock__Group__3__Impl : ( ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__STVarTempDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3389:1: ( ( ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:3390:1: ( ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:3390:1: ( ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:3391:2: ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:3392:2: ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==RULE_ID) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:3392:3: rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__4"
    // InternalSTAlgorithmParser.g:3400:1: rule__STVarTempDeclarationBlock__Group__4 : rule__STVarTempDeclarationBlock__Group__4__Impl ;
    public final void rule__STVarTempDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3404:1: ( rule__STVarTempDeclarationBlock__Group__4__Impl )
            // InternalSTAlgorithmParser.g:3405:2: rule__STVarTempDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__4"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__4__Impl"
    // InternalSTAlgorithmParser.g:3411:1: rule__STVarTempDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__STVarTempDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3415:1: ( ( END_VAR ) )
            // InternalSTAlgorithmParser.g:3416:1: ( END_VAR )
            {
            // InternalSTAlgorithmParser.g:3416:1: ( END_VAR )
            // InternalSTAlgorithmParser.g:3417:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__0"
    // InternalSTAlgorithmParser.g:3427:1: rule__STVarDeclaration__Group__0 : rule__STVarDeclaration__Group__0__Impl rule__STVarDeclaration__Group__1 ;
    public final void rule__STVarDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3431:1: ( rule__STVarDeclaration__Group__0__Impl rule__STVarDeclaration__Group__1 )
            // InternalSTAlgorithmParser.g:3432:2: rule__STVarDeclaration__Group__0__Impl rule__STVarDeclaration__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__STVarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__0"


    // $ANTLR start "rule__STVarDeclaration__Group__0__Impl"
    // InternalSTAlgorithmParser.g:3439:1: rule__STVarDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__STVarDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3443:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:3444:1: ( () )
            {
            // InternalSTAlgorithmParser.g:3444:1: ( () )
            // InternalSTAlgorithmParser.g:3445:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getSTVarDeclarationAction_0()); 
            }
            // InternalSTAlgorithmParser.g:3446:2: ()
            // InternalSTAlgorithmParser.g:3446:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getSTVarDeclarationAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__1"
    // InternalSTAlgorithmParser.g:3454:1: rule__STVarDeclaration__Group__1 : rule__STVarDeclaration__Group__1__Impl rule__STVarDeclaration__Group__2 ;
    public final void rule__STVarDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3458:1: ( rule__STVarDeclaration__Group__1__Impl rule__STVarDeclaration__Group__2 )
            // InternalSTAlgorithmParser.g:3459:2: rule__STVarDeclaration__Group__1__Impl rule__STVarDeclaration__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__STVarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__1"


    // $ANTLR start "rule__STVarDeclaration__Group__1__Impl"
    // InternalSTAlgorithmParser.g:3466:1: rule__STVarDeclaration__Group__1__Impl : ( ( rule__STVarDeclaration__NameAssignment_1 ) ) ;
    public final void rule__STVarDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3470:1: ( ( ( rule__STVarDeclaration__NameAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:3471:1: ( ( rule__STVarDeclaration__NameAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:3471:1: ( ( rule__STVarDeclaration__NameAssignment_1 ) )
            // InternalSTAlgorithmParser.g:3472:2: ( rule__STVarDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:3473:2: ( rule__STVarDeclaration__NameAssignment_1 )
            // InternalSTAlgorithmParser.g:3473:3: rule__STVarDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__2"
    // InternalSTAlgorithmParser.g:3481:1: rule__STVarDeclaration__Group__2 : rule__STVarDeclaration__Group__2__Impl rule__STVarDeclaration__Group__3 ;
    public final void rule__STVarDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3485:1: ( rule__STVarDeclaration__Group__2__Impl rule__STVarDeclaration__Group__3 )
            // InternalSTAlgorithmParser.g:3486:2: rule__STVarDeclaration__Group__2__Impl rule__STVarDeclaration__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__STVarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__2"


    // $ANTLR start "rule__STVarDeclaration__Group__2__Impl"
    // InternalSTAlgorithmParser.g:3493:1: rule__STVarDeclaration__Group__2__Impl : ( ( rule__STVarDeclaration__Group_2__0 )? ) ;
    public final void rule__STVarDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3497:1: ( ( ( rule__STVarDeclaration__Group_2__0 )? ) )
            // InternalSTAlgorithmParser.g:3498:1: ( ( rule__STVarDeclaration__Group_2__0 )? )
            {
            // InternalSTAlgorithmParser.g:3498:1: ( ( rule__STVarDeclaration__Group_2__0 )? )
            // InternalSTAlgorithmParser.g:3499:2: ( rule__STVarDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_2()); 
            }
            // InternalSTAlgorithmParser.g:3500:2: ( rule__STVarDeclaration__Group_2__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==AT) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3500:3: rule__STVarDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__3"
    // InternalSTAlgorithmParser.g:3508:1: rule__STVarDeclaration__Group__3 : rule__STVarDeclaration__Group__3__Impl rule__STVarDeclaration__Group__4 ;
    public final void rule__STVarDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3512:1: ( rule__STVarDeclaration__Group__3__Impl rule__STVarDeclaration__Group__4 )
            // InternalSTAlgorithmParser.g:3513:2: rule__STVarDeclaration__Group__3__Impl rule__STVarDeclaration__Group__4
            {
            pushFollow(FOLLOW_15);
            rule__STVarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__3"


    // $ANTLR start "rule__STVarDeclaration__Group__3__Impl"
    // InternalSTAlgorithmParser.g:3520:1: rule__STVarDeclaration__Group__3__Impl : ( Colon ) ;
    public final void rule__STVarDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3524:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:3525:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:3525:1: ( Colon )
            // InternalSTAlgorithmParser.g:3526:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__4"
    // InternalSTAlgorithmParser.g:3535:1: rule__STVarDeclaration__Group__4 : rule__STVarDeclaration__Group__4__Impl rule__STVarDeclaration__Group__5 ;
    public final void rule__STVarDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3539:1: ( rule__STVarDeclaration__Group__4__Impl rule__STVarDeclaration__Group__5 )
            // InternalSTAlgorithmParser.g:3540:2: rule__STVarDeclaration__Group__4__Impl rule__STVarDeclaration__Group__5
            {
            pushFollow(FOLLOW_15);
            rule__STVarDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__4"


    // $ANTLR start "rule__STVarDeclaration__Group__4__Impl"
    // InternalSTAlgorithmParser.g:3547:1: rule__STVarDeclaration__Group__4__Impl : ( ( rule__STVarDeclaration__Group_4__0 )? ) ;
    public final void rule__STVarDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3551:1: ( ( ( rule__STVarDeclaration__Group_4__0 )? ) )
            // InternalSTAlgorithmParser.g:3552:1: ( ( rule__STVarDeclaration__Group_4__0 )? )
            {
            // InternalSTAlgorithmParser.g:3552:1: ( ( rule__STVarDeclaration__Group_4__0 )? )
            // InternalSTAlgorithmParser.g:3553:2: ( rule__STVarDeclaration__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_4()); 
            }
            // InternalSTAlgorithmParser.g:3554:2: ( rule__STVarDeclaration__Group_4__0 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==ARRAY) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3554:3: rule__STVarDeclaration__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__4__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__5"
    // InternalSTAlgorithmParser.g:3562:1: rule__STVarDeclaration__Group__5 : rule__STVarDeclaration__Group__5__Impl rule__STVarDeclaration__Group__6 ;
    public final void rule__STVarDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3566:1: ( rule__STVarDeclaration__Group__5__Impl rule__STVarDeclaration__Group__6 )
            // InternalSTAlgorithmParser.g:3567:2: rule__STVarDeclaration__Group__5__Impl rule__STVarDeclaration__Group__6
            {
            pushFollow(FOLLOW_16);
            rule__STVarDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__5"


    // $ANTLR start "rule__STVarDeclaration__Group__5__Impl"
    // InternalSTAlgorithmParser.g:3574:1: rule__STVarDeclaration__Group__5__Impl : ( ( rule__STVarDeclaration__TypeAssignment_5 ) ) ;
    public final void rule__STVarDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3578:1: ( ( ( rule__STVarDeclaration__TypeAssignment_5 ) ) )
            // InternalSTAlgorithmParser.g:3579:1: ( ( rule__STVarDeclaration__TypeAssignment_5 ) )
            {
            // InternalSTAlgorithmParser.g:3579:1: ( ( rule__STVarDeclaration__TypeAssignment_5 ) )
            // InternalSTAlgorithmParser.g:3580:2: ( rule__STVarDeclaration__TypeAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getTypeAssignment_5()); 
            }
            // InternalSTAlgorithmParser.g:3581:2: ( rule__STVarDeclaration__TypeAssignment_5 )
            // InternalSTAlgorithmParser.g:3581:3: rule__STVarDeclaration__TypeAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__TypeAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getTypeAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__5__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__6"
    // InternalSTAlgorithmParser.g:3589:1: rule__STVarDeclaration__Group__6 : rule__STVarDeclaration__Group__6__Impl rule__STVarDeclaration__Group__7 ;
    public final void rule__STVarDeclaration__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3593:1: ( rule__STVarDeclaration__Group__6__Impl rule__STVarDeclaration__Group__7 )
            // InternalSTAlgorithmParser.g:3594:2: rule__STVarDeclaration__Group__6__Impl rule__STVarDeclaration__Group__7
            {
            pushFollow(FOLLOW_16);
            rule__STVarDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__6"


    // $ANTLR start "rule__STVarDeclaration__Group__6__Impl"
    // InternalSTAlgorithmParser.g:3601:1: rule__STVarDeclaration__Group__6__Impl : ( ( rule__STVarDeclaration__Group_6__0 )? ) ;
    public final void rule__STVarDeclaration__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3605:1: ( ( ( rule__STVarDeclaration__Group_6__0 )? ) )
            // InternalSTAlgorithmParser.g:3606:1: ( ( rule__STVarDeclaration__Group_6__0 )? )
            {
            // InternalSTAlgorithmParser.g:3606:1: ( ( rule__STVarDeclaration__Group_6__0 )? )
            // InternalSTAlgorithmParser.g:3607:2: ( rule__STVarDeclaration__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_6()); 
            }
            // InternalSTAlgorithmParser.g:3608:2: ( rule__STVarDeclaration__Group_6__0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==LeftSquareBracket) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3608:3: rule__STVarDeclaration__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__6__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__7"
    // InternalSTAlgorithmParser.g:3616:1: rule__STVarDeclaration__Group__7 : rule__STVarDeclaration__Group__7__Impl rule__STVarDeclaration__Group__8 ;
    public final void rule__STVarDeclaration__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3620:1: ( rule__STVarDeclaration__Group__7__Impl rule__STVarDeclaration__Group__8 )
            // InternalSTAlgorithmParser.g:3621:2: rule__STVarDeclaration__Group__7__Impl rule__STVarDeclaration__Group__8
            {
            pushFollow(FOLLOW_16);
            rule__STVarDeclaration__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__7"


    // $ANTLR start "rule__STVarDeclaration__Group__7__Impl"
    // InternalSTAlgorithmParser.g:3628:1: rule__STVarDeclaration__Group__7__Impl : ( ( rule__STVarDeclaration__Group_7__0 )? ) ;
    public final void rule__STVarDeclaration__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3632:1: ( ( ( rule__STVarDeclaration__Group_7__0 )? ) )
            // InternalSTAlgorithmParser.g:3633:1: ( ( rule__STVarDeclaration__Group_7__0 )? )
            {
            // InternalSTAlgorithmParser.g:3633:1: ( ( rule__STVarDeclaration__Group_7__0 )? )
            // InternalSTAlgorithmParser.g:3634:2: ( rule__STVarDeclaration__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_7()); 
            }
            // InternalSTAlgorithmParser.g:3635:2: ( rule__STVarDeclaration__Group_7__0 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==ColonEqualsSign) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3635:3: rule__STVarDeclaration__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__7__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__8"
    // InternalSTAlgorithmParser.g:3643:1: rule__STVarDeclaration__Group__8 : rule__STVarDeclaration__Group__8__Impl ;
    public final void rule__STVarDeclaration__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3647:1: ( rule__STVarDeclaration__Group__8__Impl )
            // InternalSTAlgorithmParser.g:3648:2: rule__STVarDeclaration__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__8"


    // $ANTLR start "rule__STVarDeclaration__Group__8__Impl"
    // InternalSTAlgorithmParser.g:3654:1: rule__STVarDeclaration__Group__8__Impl : ( Semicolon ) ;
    public final void rule__STVarDeclaration__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3658:1: ( ( Semicolon ) )
            // InternalSTAlgorithmParser.g:3659:1: ( Semicolon )
            {
            // InternalSTAlgorithmParser.g:3659:1: ( Semicolon )
            // InternalSTAlgorithmParser.g:3660:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getSemicolonKeyword_8()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getSemicolonKeyword_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__8__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_2__0"
    // InternalSTAlgorithmParser.g:3670:1: rule__STVarDeclaration__Group_2__0 : rule__STVarDeclaration__Group_2__0__Impl rule__STVarDeclaration__Group_2__1 ;
    public final void rule__STVarDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3674:1: ( rule__STVarDeclaration__Group_2__0__Impl rule__STVarDeclaration__Group_2__1 )
            // InternalSTAlgorithmParser.g:3675:2: rule__STVarDeclaration__Group_2__0__Impl rule__STVarDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_6);
            rule__STVarDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__0"


    // $ANTLR start "rule__STVarDeclaration__Group_2__0__Impl"
    // InternalSTAlgorithmParser.g:3682:1: rule__STVarDeclaration__Group_2__0__Impl : ( AT ) ;
    public final void rule__STVarDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3686:1: ( ( AT ) )
            // InternalSTAlgorithmParser.g:3687:1: ( AT )
            {
            // InternalSTAlgorithmParser.g:3687:1: ( AT )
            // InternalSTAlgorithmParser.g:3688:2: AT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getATKeyword_2_0()); 
            }
            match(input,AT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getATKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_2__1"
    // InternalSTAlgorithmParser.g:3697:1: rule__STVarDeclaration__Group_2__1 : rule__STVarDeclaration__Group_2__1__Impl ;
    public final void rule__STVarDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3701:1: ( rule__STVarDeclaration__Group_2__1__Impl )
            // InternalSTAlgorithmParser.g:3702:2: rule__STVarDeclaration__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__1"


    // $ANTLR start "rule__STVarDeclaration__Group_2__1__Impl"
    // InternalSTAlgorithmParser.g:3708:1: rule__STVarDeclaration__Group_2__1__Impl : ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) ) ;
    public final void rule__STVarDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3712:1: ( ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) ) )
            // InternalSTAlgorithmParser.g:3713:1: ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:3713:1: ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) )
            // InternalSTAlgorithmParser.g:3714:2: ( rule__STVarDeclaration__LocatedAtAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLocatedAtAssignment_2_1()); 
            }
            // InternalSTAlgorithmParser.g:3715:2: ( rule__STVarDeclaration__LocatedAtAssignment_2_1 )
            // InternalSTAlgorithmParser.g:3715:3: rule__STVarDeclaration__LocatedAtAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__LocatedAtAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLocatedAtAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4__0"
    // InternalSTAlgorithmParser.g:3724:1: rule__STVarDeclaration__Group_4__0 : rule__STVarDeclaration__Group_4__0__Impl rule__STVarDeclaration__Group_4__1 ;
    public final void rule__STVarDeclaration__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3728:1: ( rule__STVarDeclaration__Group_4__0__Impl rule__STVarDeclaration__Group_4__1 )
            // InternalSTAlgorithmParser.g:3729:2: rule__STVarDeclaration__Group_4__0__Impl rule__STVarDeclaration__Group_4__1
            {
            pushFollow(FOLLOW_17);
            rule__STVarDeclaration__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4__0__Impl"
    // InternalSTAlgorithmParser.g:3736:1: rule__STVarDeclaration__Group_4__0__Impl : ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) ) ;
    public final void rule__STVarDeclaration__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3740:1: ( ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) ) )
            // InternalSTAlgorithmParser.g:3741:1: ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) )
            {
            // InternalSTAlgorithmParser.g:3741:1: ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) )
            // InternalSTAlgorithmParser.g:3742:2: ( rule__STVarDeclaration__ArrayAssignment_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getArrayAssignment_4_0()); 
            }
            // InternalSTAlgorithmParser.g:3743:2: ( rule__STVarDeclaration__ArrayAssignment_4_0 )
            // InternalSTAlgorithmParser.g:3743:3: rule__STVarDeclaration__ArrayAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__ArrayAssignment_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getArrayAssignment_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4__1"
    // InternalSTAlgorithmParser.g:3751:1: rule__STVarDeclaration__Group_4__1 : rule__STVarDeclaration__Group_4__1__Impl rule__STVarDeclaration__Group_4__2 ;
    public final void rule__STVarDeclaration__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3755:1: ( rule__STVarDeclaration__Group_4__1__Impl rule__STVarDeclaration__Group_4__2 )
            // InternalSTAlgorithmParser.g:3756:2: rule__STVarDeclaration__Group_4__1__Impl rule__STVarDeclaration__Group_4__2
            {
            pushFollow(FOLLOW_18);
            rule__STVarDeclaration__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4__1__Impl"
    // InternalSTAlgorithmParser.g:3763:1: rule__STVarDeclaration__Group_4__1__Impl : ( ( rule__STVarDeclaration__Alternatives_4_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3767:1: ( ( ( rule__STVarDeclaration__Alternatives_4_1 ) ) )
            // InternalSTAlgorithmParser.g:3768:1: ( ( rule__STVarDeclaration__Alternatives_4_1 ) )
            {
            // InternalSTAlgorithmParser.g:3768:1: ( ( rule__STVarDeclaration__Alternatives_4_1 ) )
            // InternalSTAlgorithmParser.g:3769:2: ( rule__STVarDeclaration__Alternatives_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getAlternatives_4_1()); 
            }
            // InternalSTAlgorithmParser.g:3770:2: ( rule__STVarDeclaration__Alternatives_4_1 )
            // InternalSTAlgorithmParser.g:3770:3: rule__STVarDeclaration__Alternatives_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Alternatives_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getAlternatives_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4__2"
    // InternalSTAlgorithmParser.g:3778:1: rule__STVarDeclaration__Group_4__2 : rule__STVarDeclaration__Group_4__2__Impl ;
    public final void rule__STVarDeclaration__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3782:1: ( rule__STVarDeclaration__Group_4__2__Impl )
            // InternalSTAlgorithmParser.g:3783:2: rule__STVarDeclaration__Group_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__2"


    // $ANTLR start "rule__STVarDeclaration__Group_4__2__Impl"
    // InternalSTAlgorithmParser.g:3789:1: rule__STVarDeclaration__Group_4__2__Impl : ( OF ) ;
    public final void rule__STVarDeclaration__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3793:1: ( ( OF ) )
            // InternalSTAlgorithmParser.g:3794:1: ( OF )
            {
            // InternalSTAlgorithmParser.g:3794:1: ( OF )
            // InternalSTAlgorithmParser.g:3795:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getOFKeyword_4_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getOFKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__0"
    // InternalSTAlgorithmParser.g:3805:1: rule__STVarDeclaration__Group_4_1_0__0 : rule__STVarDeclaration__Group_4_1_0__0__Impl rule__STVarDeclaration__Group_4_1_0__1 ;
    public final void rule__STVarDeclaration__Group_4_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3809:1: ( rule__STVarDeclaration__Group_4_1_0__0__Impl rule__STVarDeclaration__Group_4_1_0__1 )
            // InternalSTAlgorithmParser.g:3810:2: rule__STVarDeclaration__Group_4_1_0__0__Impl rule__STVarDeclaration__Group_4_1_0__1
            {
            pushFollow(FOLLOW_19);
            rule__STVarDeclaration__Group_4_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:3817:1: rule__STVarDeclaration__Group_4_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3821:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:3822:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:3822:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:3823:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__1"
    // InternalSTAlgorithmParser.g:3832:1: rule__STVarDeclaration__Group_4_1_0__1 : rule__STVarDeclaration__Group_4_1_0__1__Impl rule__STVarDeclaration__Group_4_1_0__2 ;
    public final void rule__STVarDeclaration__Group_4_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3836:1: ( rule__STVarDeclaration__Group_4_1_0__1__Impl rule__STVarDeclaration__Group_4_1_0__2 )
            // InternalSTAlgorithmParser.g:3837:2: rule__STVarDeclaration__Group_4_1_0__1__Impl rule__STVarDeclaration__Group_4_1_0__2
            {
            pushFollow(FOLLOW_20);
            rule__STVarDeclaration__Group_4_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:3844:1: rule__STVarDeclaration__Group_4_1_0__1__Impl : ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3848:1: ( ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:3849:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:3849:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) )
            // InternalSTAlgorithmParser.g:3850:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:3851:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 )
            // InternalSTAlgorithmParser.g:3851:3: rule__STVarDeclaration__RangesAssignment_4_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__RangesAssignment_4_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__2"
    // InternalSTAlgorithmParser.g:3859:1: rule__STVarDeclaration__Group_4_1_0__2 : rule__STVarDeclaration__Group_4_1_0__2__Impl rule__STVarDeclaration__Group_4_1_0__3 ;
    public final void rule__STVarDeclaration__Group_4_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3863:1: ( rule__STVarDeclaration__Group_4_1_0__2__Impl rule__STVarDeclaration__Group_4_1_0__3 )
            // InternalSTAlgorithmParser.g:3864:2: rule__STVarDeclaration__Group_4_1_0__2__Impl rule__STVarDeclaration__Group_4_1_0__3
            {
            pushFollow(FOLLOW_20);
            rule__STVarDeclaration__Group_4_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__2"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__2__Impl"
    // InternalSTAlgorithmParser.g:3871:1: rule__STVarDeclaration__Group_4_1_0__2__Impl : ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3875:1: ( ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* ) )
            // InternalSTAlgorithmParser.g:3876:1: ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* )
            {
            // InternalSTAlgorithmParser.g:3876:1: ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* )
            // InternalSTAlgorithmParser.g:3877:2: ( rule__STVarDeclaration__Group_4_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0_2()); 
            }
            // InternalSTAlgorithmParser.g:3878:2: ( rule__STVarDeclaration__Group_4_1_0_2__0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==Comma) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:3878:3: rule__STVarDeclaration__Group_4_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__STVarDeclaration__Group_4_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__3"
    // InternalSTAlgorithmParser.g:3886:1: rule__STVarDeclaration__Group_4_1_0__3 : rule__STVarDeclaration__Group_4_1_0__3__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3890:1: ( rule__STVarDeclaration__Group_4_1_0__3__Impl )
            // InternalSTAlgorithmParser.g:3891:2: rule__STVarDeclaration__Group_4_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__3"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__3__Impl"
    // InternalSTAlgorithmParser.g:3897:1: rule__STVarDeclaration__Group_4_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3901:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:3902:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:3902:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:3903:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__3__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__0"
    // InternalSTAlgorithmParser.g:3913:1: rule__STVarDeclaration__Group_4_1_0_2__0 : rule__STVarDeclaration__Group_4_1_0_2__0__Impl rule__STVarDeclaration__Group_4_1_0_2__1 ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3917:1: ( rule__STVarDeclaration__Group_4_1_0_2__0__Impl rule__STVarDeclaration__Group_4_1_0_2__1 )
            // InternalSTAlgorithmParser.g:3918:2: rule__STVarDeclaration__Group_4_1_0_2__0__Impl rule__STVarDeclaration__Group_4_1_0_2__1
            {
            pushFollow(FOLLOW_19);
            rule__STVarDeclaration__Group_4_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__0__Impl"
    // InternalSTAlgorithmParser.g:3925:1: rule__STVarDeclaration__Group_4_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3929:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:3930:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:3930:1: ( Comma )
            // InternalSTAlgorithmParser.g:3931:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__1"
    // InternalSTAlgorithmParser.g:3940:1: rule__STVarDeclaration__Group_4_1_0_2__1 : rule__STVarDeclaration__Group_4_1_0_2__1__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3944:1: ( rule__STVarDeclaration__Group_4_1_0_2__1__Impl )
            // InternalSTAlgorithmParser.g:3945:2: rule__STVarDeclaration__Group_4_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__1__Impl"
    // InternalSTAlgorithmParser.g:3951:1: rule__STVarDeclaration__Group_4_1_0_2__1__Impl : ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3955:1: ( ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) ) )
            // InternalSTAlgorithmParser.g:3956:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:3956:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) )
            // InternalSTAlgorithmParser.g:3957:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_2_1()); 
            }
            // InternalSTAlgorithmParser.g:3958:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 )
            // InternalSTAlgorithmParser.g:3958:3: rule__STVarDeclaration__RangesAssignment_4_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__RangesAssignment_4_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__0"
    // InternalSTAlgorithmParser.g:3967:1: rule__STVarDeclaration__Group_4_1_1__0 : rule__STVarDeclaration__Group_4_1_1__0__Impl rule__STVarDeclaration__Group_4_1_1__1 ;
    public final void rule__STVarDeclaration__Group_4_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3971:1: ( rule__STVarDeclaration__Group_4_1_1__0__Impl rule__STVarDeclaration__Group_4_1_1__1 )
            // InternalSTAlgorithmParser.g:3972:2: rule__STVarDeclaration__Group_4_1_1__0__Impl rule__STVarDeclaration__Group_4_1_1__1
            {
            pushFollow(FOLLOW_22);
            rule__STVarDeclaration__Group_4_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__0__Impl"
    // InternalSTAlgorithmParser.g:3979:1: rule__STVarDeclaration__Group_4_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3983:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:3984:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:3984:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:3985:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__1"
    // InternalSTAlgorithmParser.g:3994:1: rule__STVarDeclaration__Group_4_1_1__1 : rule__STVarDeclaration__Group_4_1_1__1__Impl rule__STVarDeclaration__Group_4_1_1__2 ;
    public final void rule__STVarDeclaration__Group_4_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3998:1: ( rule__STVarDeclaration__Group_4_1_1__1__Impl rule__STVarDeclaration__Group_4_1_1__2 )
            // InternalSTAlgorithmParser.g:3999:2: rule__STVarDeclaration__Group_4_1_1__1__Impl rule__STVarDeclaration__Group_4_1_1__2
            {
            pushFollow(FOLLOW_20);
            rule__STVarDeclaration__Group_4_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__1__Impl"
    // InternalSTAlgorithmParser.g:4006:1: rule__STVarDeclaration__Group_4_1_1__1__Impl : ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4010:1: ( ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) ) )
            // InternalSTAlgorithmParser.g:4011:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:4011:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) )
            // InternalSTAlgorithmParser.g:4012:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_1()); 
            }
            // InternalSTAlgorithmParser.g:4013:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_1 )
            // InternalSTAlgorithmParser.g:4013:3: rule__STVarDeclaration__CountAssignment_4_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__CountAssignment_4_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__2"
    // InternalSTAlgorithmParser.g:4021:1: rule__STVarDeclaration__Group_4_1_1__2 : rule__STVarDeclaration__Group_4_1_1__2__Impl rule__STVarDeclaration__Group_4_1_1__3 ;
    public final void rule__STVarDeclaration__Group_4_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4025:1: ( rule__STVarDeclaration__Group_4_1_1__2__Impl rule__STVarDeclaration__Group_4_1_1__3 )
            // InternalSTAlgorithmParser.g:4026:2: rule__STVarDeclaration__Group_4_1_1__2__Impl rule__STVarDeclaration__Group_4_1_1__3
            {
            pushFollow(FOLLOW_20);
            rule__STVarDeclaration__Group_4_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__2"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__2__Impl"
    // InternalSTAlgorithmParser.g:4033:1: rule__STVarDeclaration__Group_4_1_1__2__Impl : ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4037:1: ( ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* ) )
            // InternalSTAlgorithmParser.g:4038:1: ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* )
            {
            // InternalSTAlgorithmParser.g:4038:1: ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* )
            // InternalSTAlgorithmParser.g:4039:2: ( rule__STVarDeclaration__Group_4_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1_2()); 
            }
            // InternalSTAlgorithmParser.g:4040:2: ( rule__STVarDeclaration__Group_4_1_1_2__0 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==Comma) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:4040:3: rule__STVarDeclaration__Group_4_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__STVarDeclaration__Group_4_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__3"
    // InternalSTAlgorithmParser.g:4048:1: rule__STVarDeclaration__Group_4_1_1__3 : rule__STVarDeclaration__Group_4_1_1__3__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4052:1: ( rule__STVarDeclaration__Group_4_1_1__3__Impl )
            // InternalSTAlgorithmParser.g:4053:2: rule__STVarDeclaration__Group_4_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__3"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__3__Impl"
    // InternalSTAlgorithmParser.g:4059:1: rule__STVarDeclaration__Group_4_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4063:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:4064:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:4064:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:4065:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__3__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__0"
    // InternalSTAlgorithmParser.g:4075:1: rule__STVarDeclaration__Group_4_1_1_2__0 : rule__STVarDeclaration__Group_4_1_1_2__0__Impl rule__STVarDeclaration__Group_4_1_1_2__1 ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4079:1: ( rule__STVarDeclaration__Group_4_1_1_2__0__Impl rule__STVarDeclaration__Group_4_1_1_2__1 )
            // InternalSTAlgorithmParser.g:4080:2: rule__STVarDeclaration__Group_4_1_1_2__0__Impl rule__STVarDeclaration__Group_4_1_1_2__1
            {
            pushFollow(FOLLOW_22);
            rule__STVarDeclaration__Group_4_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__0__Impl"
    // InternalSTAlgorithmParser.g:4087:1: rule__STVarDeclaration__Group_4_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4091:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:4092:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:4092:1: ( Comma )
            // InternalSTAlgorithmParser.g:4093:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__1"
    // InternalSTAlgorithmParser.g:4102:1: rule__STVarDeclaration__Group_4_1_1_2__1 : rule__STVarDeclaration__Group_4_1_1_2__1__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4106:1: ( rule__STVarDeclaration__Group_4_1_1_2__1__Impl )
            // InternalSTAlgorithmParser.g:4107:2: rule__STVarDeclaration__Group_4_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__1__Impl"
    // InternalSTAlgorithmParser.g:4113:1: rule__STVarDeclaration__Group_4_1_1_2__1__Impl : ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4117:1: ( ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) ) )
            // InternalSTAlgorithmParser.g:4118:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:4118:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) )
            // InternalSTAlgorithmParser.g:4119:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_2_1()); 
            }
            // InternalSTAlgorithmParser.g:4120:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 )
            // InternalSTAlgorithmParser.g:4120:3: rule__STVarDeclaration__CountAssignment_4_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__CountAssignment_4_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_6__0"
    // InternalSTAlgorithmParser.g:4129:1: rule__STVarDeclaration__Group_6__0 : rule__STVarDeclaration__Group_6__0__Impl rule__STVarDeclaration__Group_6__1 ;
    public final void rule__STVarDeclaration__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4133:1: ( rule__STVarDeclaration__Group_6__0__Impl rule__STVarDeclaration__Group_6__1 )
            // InternalSTAlgorithmParser.g:4134:2: rule__STVarDeclaration__Group_6__0__Impl rule__STVarDeclaration__Group_6__1
            {
            pushFollow(FOLLOW_19);
            rule__STVarDeclaration__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__0"


    // $ANTLR start "rule__STVarDeclaration__Group_6__0__Impl"
    // InternalSTAlgorithmParser.g:4141:1: rule__STVarDeclaration__Group_6__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4145:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:4146:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:4146:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:4147:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_6_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_6__1"
    // InternalSTAlgorithmParser.g:4156:1: rule__STVarDeclaration__Group_6__1 : rule__STVarDeclaration__Group_6__1__Impl rule__STVarDeclaration__Group_6__2 ;
    public final void rule__STVarDeclaration__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4160:1: ( rule__STVarDeclaration__Group_6__1__Impl rule__STVarDeclaration__Group_6__2 )
            // InternalSTAlgorithmParser.g:4161:2: rule__STVarDeclaration__Group_6__1__Impl rule__STVarDeclaration__Group_6__2
            {
            pushFollow(FOLLOW_23);
            rule__STVarDeclaration__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__1"


    // $ANTLR start "rule__STVarDeclaration__Group_6__1__Impl"
    // InternalSTAlgorithmParser.g:4168:1: rule__STVarDeclaration__Group_6__1__Impl : ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) ) ;
    public final void rule__STVarDeclaration__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4172:1: ( ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) ) )
            // InternalSTAlgorithmParser.g:4173:1: ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) )
            {
            // InternalSTAlgorithmParser.g:4173:1: ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) )
            // InternalSTAlgorithmParser.g:4174:2: ( rule__STVarDeclaration__MaxLengthAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getMaxLengthAssignment_6_1()); 
            }
            // InternalSTAlgorithmParser.g:4175:2: ( rule__STVarDeclaration__MaxLengthAssignment_6_1 )
            // InternalSTAlgorithmParser.g:4175:3: rule__STVarDeclaration__MaxLengthAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__MaxLengthAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getMaxLengthAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_6__2"
    // InternalSTAlgorithmParser.g:4183:1: rule__STVarDeclaration__Group_6__2 : rule__STVarDeclaration__Group_6__2__Impl ;
    public final void rule__STVarDeclaration__Group_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4187:1: ( rule__STVarDeclaration__Group_6__2__Impl )
            // InternalSTAlgorithmParser.g:4188:2: rule__STVarDeclaration__Group_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__2"


    // $ANTLR start "rule__STVarDeclaration__Group_6__2__Impl"
    // InternalSTAlgorithmParser.g:4194:1: rule__STVarDeclaration__Group_6__2__Impl : ( RightSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4198:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:4199:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:4199:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:4200:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_6_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_7__0"
    // InternalSTAlgorithmParser.g:4210:1: rule__STVarDeclaration__Group_7__0 : rule__STVarDeclaration__Group_7__0__Impl rule__STVarDeclaration__Group_7__1 ;
    public final void rule__STVarDeclaration__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4214:1: ( rule__STVarDeclaration__Group_7__0__Impl rule__STVarDeclaration__Group_7__1 )
            // InternalSTAlgorithmParser.g:4215:2: rule__STVarDeclaration__Group_7__0__Impl rule__STVarDeclaration__Group_7__1
            {
            pushFollow(FOLLOW_24);
            rule__STVarDeclaration__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__0"


    // $ANTLR start "rule__STVarDeclaration__Group_7__0__Impl"
    // InternalSTAlgorithmParser.g:4222:1: rule__STVarDeclaration__Group_7__0__Impl : ( ColonEqualsSign ) ;
    public final void rule__STVarDeclaration__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4226:1: ( ( ColonEqualsSign ) )
            // InternalSTAlgorithmParser.g:4227:1: ( ColonEqualsSign )
            {
            // InternalSTAlgorithmParser.g:4227:1: ( ColonEqualsSign )
            // InternalSTAlgorithmParser.g:4228:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getColonEqualsSignKeyword_7_0()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getColonEqualsSignKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_7__1"
    // InternalSTAlgorithmParser.g:4237:1: rule__STVarDeclaration__Group_7__1 : rule__STVarDeclaration__Group_7__1__Impl ;
    public final void rule__STVarDeclaration__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4241:1: ( rule__STVarDeclaration__Group_7__1__Impl )
            // InternalSTAlgorithmParser.g:4242:2: rule__STVarDeclaration__Group_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__1"


    // $ANTLR start "rule__STVarDeclaration__Group_7__1__Impl"
    // InternalSTAlgorithmParser.g:4248:1: rule__STVarDeclaration__Group_7__1__Impl : ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) ) ;
    public final void rule__STVarDeclaration__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4252:1: ( ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) ) )
            // InternalSTAlgorithmParser.g:4253:1: ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) )
            {
            // InternalSTAlgorithmParser.g:4253:1: ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) )
            // InternalSTAlgorithmParser.g:4254:2: ( rule__STVarDeclaration__DefaultValueAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getDefaultValueAssignment_7_1()); 
            }
            // InternalSTAlgorithmParser.g:4255:2: ( rule__STVarDeclaration__DefaultValueAssignment_7_1 )
            // InternalSTAlgorithmParser.g:4255:3: rule__STVarDeclaration__DefaultValueAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__DefaultValueAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getDefaultValueAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__1__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__0"
    // InternalSTAlgorithmParser.g:4264:1: rule__STArrayInitializerExpression__Group__0 : rule__STArrayInitializerExpression__Group__0__Impl rule__STArrayInitializerExpression__Group__1 ;
    public final void rule__STArrayInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4268:1: ( rule__STArrayInitializerExpression__Group__0__Impl rule__STArrayInitializerExpression__Group__1 )
            // InternalSTAlgorithmParser.g:4269:2: rule__STArrayInitializerExpression__Group__0__Impl rule__STArrayInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STArrayInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__0"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:4276:1: rule__STArrayInitializerExpression__Group__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STArrayInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4280:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:4281:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:4281:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:4282:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__1"
    // InternalSTAlgorithmParser.g:4291:1: rule__STArrayInitializerExpression__Group__1 : rule__STArrayInitializerExpression__Group__1__Impl rule__STArrayInitializerExpression__Group__2 ;
    public final void rule__STArrayInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4295:1: ( rule__STArrayInitializerExpression__Group__1__Impl rule__STArrayInitializerExpression__Group__2 )
            // InternalSTAlgorithmParser.g:4296:2: rule__STArrayInitializerExpression__Group__1__Impl rule__STArrayInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_20);
            rule__STArrayInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__1"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:4303:1: rule__STArrayInitializerExpression__Group__1__Impl : ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__STArrayInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4307:1: ( ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:4308:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:4308:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) )
            // InternalSTAlgorithmParser.g:4309:2: ( rule__STArrayInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:4310:2: ( rule__STArrayInitializerExpression__ValuesAssignment_1 )
            // InternalSTAlgorithmParser.g:4310:3: rule__STArrayInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__2"
    // InternalSTAlgorithmParser.g:4318:1: rule__STArrayInitializerExpression__Group__2 : rule__STArrayInitializerExpression__Group__2__Impl rule__STArrayInitializerExpression__Group__3 ;
    public final void rule__STArrayInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4322:1: ( rule__STArrayInitializerExpression__Group__2__Impl rule__STArrayInitializerExpression__Group__3 )
            // InternalSTAlgorithmParser.g:4323:2: rule__STArrayInitializerExpression__Group__2__Impl rule__STArrayInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_20);
            rule__STArrayInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__2"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__2__Impl"
    // InternalSTAlgorithmParser.g:4330:1: rule__STArrayInitializerExpression__Group__2__Impl : ( ( rule__STArrayInitializerExpression__Group_2__0 )* ) ;
    public final void rule__STArrayInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4334:1: ( ( ( rule__STArrayInitializerExpression__Group_2__0 )* ) )
            // InternalSTAlgorithmParser.g:4335:1: ( ( rule__STArrayInitializerExpression__Group_2__0 )* )
            {
            // InternalSTAlgorithmParser.g:4335:1: ( ( rule__STArrayInitializerExpression__Group_2__0 )* )
            // InternalSTAlgorithmParser.g:4336:2: ( rule__STArrayInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalSTAlgorithmParser.g:4337:2: ( rule__STArrayInitializerExpression__Group_2__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==Comma) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:4337:3: rule__STArrayInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__STArrayInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__3"
    // InternalSTAlgorithmParser.g:4345:1: rule__STArrayInitializerExpression__Group__3 : rule__STArrayInitializerExpression__Group__3__Impl ;
    public final void rule__STArrayInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4349:1: ( rule__STArrayInitializerExpression__Group__3__Impl )
            // InternalSTAlgorithmParser.g:4350:2: rule__STArrayInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__3"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__3__Impl"
    // InternalSTAlgorithmParser.g:4356:1: rule__STArrayInitializerExpression__Group__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STArrayInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4360:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:4361:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:4361:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:4362:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__0"
    // InternalSTAlgorithmParser.g:4372:1: rule__STArrayInitializerExpression__Group_2__0 : rule__STArrayInitializerExpression__Group_2__0__Impl rule__STArrayInitializerExpression__Group_2__1 ;
    public final void rule__STArrayInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4376:1: ( rule__STArrayInitializerExpression__Group_2__0__Impl rule__STArrayInitializerExpression__Group_2__1 )
            // InternalSTAlgorithmParser.g:4377:2: rule__STArrayInitializerExpression__Group_2__0__Impl rule__STArrayInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_19);
            rule__STArrayInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__0"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__0__Impl"
    // InternalSTAlgorithmParser.g:4384:1: rule__STArrayInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__STArrayInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4388:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:4389:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:4389:1: ( Comma )
            // InternalSTAlgorithmParser.g:4390:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__1"
    // InternalSTAlgorithmParser.g:4399:1: rule__STArrayInitializerExpression__Group_2__1 : rule__STArrayInitializerExpression__Group_2__1__Impl ;
    public final void rule__STArrayInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4403:1: ( rule__STArrayInitializerExpression__Group_2__1__Impl )
            // InternalSTAlgorithmParser.g:4404:2: rule__STArrayInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__1"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__1__Impl"
    // InternalSTAlgorithmParser.g:4410:1: rule__STArrayInitializerExpression__Group_2__1__Impl : ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__STArrayInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4414:1: ( ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalSTAlgorithmParser.g:4415:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:4415:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalSTAlgorithmParser.g:4416:2: ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalSTAlgorithmParser.g:4417:2: ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 )
            // InternalSTAlgorithmParser.g:4417:3: rule__STArrayInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group__0"
    // InternalSTAlgorithmParser.g:4426:1: rule__STArrayInitElement__Group__0 : rule__STArrayInitElement__Group__0__Impl rule__STArrayInitElement__Group__1 ;
    public final void rule__STArrayInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4430:1: ( rule__STArrayInitElement__Group__0__Impl rule__STArrayInitElement__Group__1 )
            // InternalSTAlgorithmParser.g:4431:2: rule__STArrayInitElement__Group__0__Impl rule__STArrayInitElement__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__STArrayInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group__0"


    // $ANTLR start "rule__STArrayInitElement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:4438:1: rule__STArrayInitElement__Group__0__Impl : ( ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) ;
    public final void rule__STArrayInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4442:1: ( ( ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:4443:1: ( ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:4443:1: ( ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            // InternalSTAlgorithmParser.g:4444:2: ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:4445:2: ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 )
            // InternalSTAlgorithmParser.g:4445:3: rule__STArrayInitElement__IndexOrInitExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__IndexOrInitExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group__0__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group__1"
    // InternalSTAlgorithmParser.g:4453:1: rule__STArrayInitElement__Group__1 : rule__STArrayInitElement__Group__1__Impl ;
    public final void rule__STArrayInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4457:1: ( rule__STArrayInitElement__Group__1__Impl )
            // InternalSTAlgorithmParser.g:4458:2: rule__STArrayInitElement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group__1"


    // $ANTLR start "rule__STArrayInitElement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:4464:1: rule__STArrayInitElement__Group__1__Impl : ( ( rule__STArrayInitElement__Group_1__0 )? ) ;
    public final void rule__STArrayInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4468:1: ( ( ( rule__STArrayInitElement__Group_1__0 )? ) )
            // InternalSTAlgorithmParser.g:4469:1: ( ( rule__STArrayInitElement__Group_1__0 )? )
            {
            // InternalSTAlgorithmParser.g:4469:1: ( ( rule__STArrayInitElement__Group_1__0 )? )
            // InternalSTAlgorithmParser.g:4470:2: ( rule__STArrayInitElement__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:4471:2: ( rule__STArrayInitElement__Group_1__0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==LeftParenthesis) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSTAlgorithmParser.g:4471:3: rule__STArrayInitElement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STArrayInitElement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group__1__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1__0"
    // InternalSTAlgorithmParser.g:4480:1: rule__STArrayInitElement__Group_1__0 : rule__STArrayInitElement__Group_1__0__Impl rule__STArrayInitElement__Group_1__1 ;
    public final void rule__STArrayInitElement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4484:1: ( rule__STArrayInitElement__Group_1__0__Impl rule__STArrayInitElement__Group_1__1 )
            // InternalSTAlgorithmParser.g:4485:2: rule__STArrayInitElement__Group_1__0__Impl rule__STArrayInitElement__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STArrayInitElement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__0"


    // $ANTLR start "rule__STArrayInitElement__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:4492:1: rule__STArrayInitElement__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STArrayInitElement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4496:1: ( ( LeftParenthesis ) )
            // InternalSTAlgorithmParser.g:4497:1: ( LeftParenthesis )
            {
            // InternalSTAlgorithmParser.g:4497:1: ( LeftParenthesis )
            // InternalSTAlgorithmParser.g:4498:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__0__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1__1"
    // InternalSTAlgorithmParser.g:4507:1: rule__STArrayInitElement__Group_1__1 : rule__STArrayInitElement__Group_1__1__Impl rule__STArrayInitElement__Group_1__2 ;
    public final void rule__STArrayInitElement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4511:1: ( rule__STArrayInitElement__Group_1__1__Impl rule__STArrayInitElement__Group_1__2 )
            // InternalSTAlgorithmParser.g:4512:2: rule__STArrayInitElement__Group_1__1__Impl rule__STArrayInitElement__Group_1__2
            {
            pushFollow(FOLLOW_26);
            rule__STArrayInitElement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__1"


    // $ANTLR start "rule__STArrayInitElement__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:4519:1: rule__STArrayInitElement__Group_1__1__Impl : ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 ) ) ;
    public final void rule__STArrayInitElement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4523:1: ( ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:4524:1: ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:4524:1: ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:4525:2: ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:4526:2: ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 )
            // InternalSTAlgorithmParser.g:4526:3: rule__STArrayInitElement__InitExpressionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__InitExpressionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__1__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1__2"
    // InternalSTAlgorithmParser.g:4534:1: rule__STArrayInitElement__Group_1__2 : rule__STArrayInitElement__Group_1__2__Impl rule__STArrayInitElement__Group_1__3 ;
    public final void rule__STArrayInitElement__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4538:1: ( rule__STArrayInitElement__Group_1__2__Impl rule__STArrayInitElement__Group_1__3 )
            // InternalSTAlgorithmParser.g:4539:2: rule__STArrayInitElement__Group_1__2__Impl rule__STArrayInitElement__Group_1__3
            {
            pushFollow(FOLLOW_26);
            rule__STArrayInitElement__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__2"


    // $ANTLR start "rule__STArrayInitElement__Group_1__2__Impl"
    // InternalSTAlgorithmParser.g:4546:1: rule__STArrayInitElement__Group_1__2__Impl : ( ( rule__STArrayInitElement__Group_1_2__0 )* ) ;
    public final void rule__STArrayInitElement__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4550:1: ( ( ( rule__STArrayInitElement__Group_1_2__0 )* ) )
            // InternalSTAlgorithmParser.g:4551:1: ( ( rule__STArrayInitElement__Group_1_2__0 )* )
            {
            // InternalSTAlgorithmParser.g:4551:1: ( ( rule__STArrayInitElement__Group_1_2__0 )* )
            // InternalSTAlgorithmParser.g:4552:2: ( rule__STArrayInitElement__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getGroup_1_2()); 
            }
            // InternalSTAlgorithmParser.g:4553:2: ( rule__STArrayInitElement__Group_1_2__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==Comma) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:4553:3: rule__STArrayInitElement__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__STArrayInitElement__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__2__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1__3"
    // InternalSTAlgorithmParser.g:4561:1: rule__STArrayInitElement__Group_1__3 : rule__STArrayInitElement__Group_1__3__Impl ;
    public final void rule__STArrayInitElement__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4565:1: ( rule__STArrayInitElement__Group_1__3__Impl )
            // InternalSTAlgorithmParser.g:4566:2: rule__STArrayInitElement__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__3"


    // $ANTLR start "rule__STArrayInitElement__Group_1__3__Impl"
    // InternalSTAlgorithmParser.g:4572:1: rule__STArrayInitElement__Group_1__3__Impl : ( RightParenthesis ) ;
    public final void rule__STArrayInitElement__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4576:1: ( ( RightParenthesis ) )
            // InternalSTAlgorithmParser.g:4577:1: ( RightParenthesis )
            {
            // InternalSTAlgorithmParser.g:4577:1: ( RightParenthesis )
            // InternalSTAlgorithmParser.g:4578:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getRightParenthesisKeyword_1_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getRightParenthesisKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__3__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1_2__0"
    // InternalSTAlgorithmParser.g:4588:1: rule__STArrayInitElement__Group_1_2__0 : rule__STArrayInitElement__Group_1_2__0__Impl rule__STArrayInitElement__Group_1_2__1 ;
    public final void rule__STArrayInitElement__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4592:1: ( rule__STArrayInitElement__Group_1_2__0__Impl rule__STArrayInitElement__Group_1_2__1 )
            // InternalSTAlgorithmParser.g:4593:2: rule__STArrayInitElement__Group_1_2__0__Impl rule__STArrayInitElement__Group_1_2__1
            {
            pushFollow(FOLLOW_19);
            rule__STArrayInitElement__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1_2__0"


    // $ANTLR start "rule__STArrayInitElement__Group_1_2__0__Impl"
    // InternalSTAlgorithmParser.g:4600:1: rule__STArrayInitElement__Group_1_2__0__Impl : ( Comma ) ;
    public final void rule__STArrayInitElement__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4604:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:4605:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:4605:1: ( Comma )
            // InternalSTAlgorithmParser.g:4606:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getCommaKeyword_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getCommaKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1_2__0__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1_2__1"
    // InternalSTAlgorithmParser.g:4615:1: rule__STArrayInitElement__Group_1_2__1 : rule__STArrayInitElement__Group_1_2__1__Impl ;
    public final void rule__STArrayInitElement__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4619:1: ( rule__STArrayInitElement__Group_1_2__1__Impl )
            // InternalSTAlgorithmParser.g:4620:2: rule__STArrayInitElement__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1_2__1"


    // $ANTLR start "rule__STArrayInitElement__Group_1_2__1__Impl"
    // InternalSTAlgorithmParser.g:4626:1: rule__STArrayInitElement__Group_1_2__1__Impl : ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__STArrayInitElement__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4630:1: ( ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 ) ) )
            // InternalSTAlgorithmParser.g:4631:1: ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:4631:1: ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 ) )
            // InternalSTAlgorithmParser.g:4632:2: ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsAssignment_1_2_1()); 
            }
            // InternalSTAlgorithmParser.g:4633:2: ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 )
            // InternalSTAlgorithmParser.g:4633:3: rule__STArrayInitElement__InitExpressionsAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__InitExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1_2__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0__0"
    // InternalSTAlgorithmParser.g:4642:1: rule__STStatement__Group_0__0 : rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 ;
    public final void rule__STStatement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4646:1: ( rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 )
            // InternalSTAlgorithmParser.g:4647:2: rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1
            {
            pushFollow(FOLLOW_27);
            rule__STStatement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0"


    // $ANTLR start "rule__STStatement__Group_0__0__Impl"
    // InternalSTAlgorithmParser.g:4654:1: rule__STStatement__Group_0__0__Impl : ( ( rule__STStatement__Alternatives_0_0 ) ) ;
    public final void rule__STStatement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4658:1: ( ( ( rule__STStatement__Alternatives_0_0 ) ) )
            // InternalSTAlgorithmParser.g:4659:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            {
            // InternalSTAlgorithmParser.g:4659:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            // InternalSTAlgorithmParser.g:4660:2: ( rule__STStatement__Alternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }
            // InternalSTAlgorithmParser.g:4661:2: ( rule__STStatement__Alternatives_0_0 )
            // InternalSTAlgorithmParser.g:4661:3: rule__STStatement__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0__1"
    // InternalSTAlgorithmParser.g:4669:1: rule__STStatement__Group_0__1 : rule__STStatement__Group_0__1__Impl ;
    public final void rule__STStatement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4673:1: ( rule__STStatement__Group_0__1__Impl )
            // InternalSTAlgorithmParser.g:4674:2: rule__STStatement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1"


    // $ANTLR start "rule__STStatement__Group_0__1__Impl"
    // InternalSTAlgorithmParser.g:4680:1: rule__STStatement__Group_0__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4684:1: ( ( Semicolon ) )
            // InternalSTAlgorithmParser.g:4685:1: ( Semicolon )
            {
            // InternalSTAlgorithmParser.g:4685:1: ( Semicolon )
            // InternalSTAlgorithmParser.g:4686:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0"
    // InternalSTAlgorithmParser.g:4696:1: rule__STStatement__Group_0_0_7__0 : rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 ;
    public final void rule__STStatement__Group_0_0_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4700:1: ( rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 )
            // InternalSTAlgorithmParser.g:4701:2: rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1
            {
            pushFollow(FOLLOW_28);
            rule__STStatement__Group_0_0_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0__Impl"
    // InternalSTAlgorithmParser.g:4708:1: rule__STStatement__Group_0_0_7__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4712:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:4713:1: ( () )
            {
            // InternalSTAlgorithmParser.g:4713:1: ( () )
            // InternalSTAlgorithmParser.g:4714:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_7_0()); 
            }
            // InternalSTAlgorithmParser.g:4715:2: ()
            // InternalSTAlgorithmParser.g:4715:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_7_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1"
    // InternalSTAlgorithmParser.g:4723:1: rule__STStatement__Group_0_0_7__1 : rule__STStatement__Group_0_0_7__1__Impl ;
    public final void rule__STStatement__Group_0_0_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4727:1: ( rule__STStatement__Group_0_0_7__1__Impl )
            // InternalSTAlgorithmParser.g:4728:2: rule__STStatement__Group_0_0_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1__Impl"
    // InternalSTAlgorithmParser.g:4734:1: rule__STStatement__Group_0_0_7__1__Impl : ( RETURN ) ;
    public final void rule__STStatement__Group_0_0_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4738:1: ( ( RETURN ) )
            // InternalSTAlgorithmParser.g:4739:1: ( RETURN )
            {
            // InternalSTAlgorithmParser.g:4739:1: ( RETURN )
            // InternalSTAlgorithmParser.g:4740:2: RETURN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_7_1()); 
            }
            match(input,RETURN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0"
    // InternalSTAlgorithmParser.g:4750:1: rule__STStatement__Group_0_0_8__0 : rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 ;
    public final void rule__STStatement__Group_0_0_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4754:1: ( rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 )
            // InternalSTAlgorithmParser.g:4755:2: rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1
            {
            pushFollow(FOLLOW_29);
            rule__STStatement__Group_0_0_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0__Impl"
    // InternalSTAlgorithmParser.g:4762:1: rule__STStatement__Group_0_0_8__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4766:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:4767:1: ( () )
            {
            // InternalSTAlgorithmParser.g:4767:1: ( () )
            // InternalSTAlgorithmParser.g:4768:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_8_0()); 
            }
            // InternalSTAlgorithmParser.g:4769:2: ()
            // InternalSTAlgorithmParser.g:4769:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_8_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1"
    // InternalSTAlgorithmParser.g:4777:1: rule__STStatement__Group_0_0_8__1 : rule__STStatement__Group_0_0_8__1__Impl ;
    public final void rule__STStatement__Group_0_0_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4781:1: ( rule__STStatement__Group_0_0_8__1__Impl )
            // InternalSTAlgorithmParser.g:4782:2: rule__STStatement__Group_0_0_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1__Impl"
    // InternalSTAlgorithmParser.g:4788:1: rule__STStatement__Group_0_0_8__1__Impl : ( CONTINUE ) ;
    public final void rule__STStatement__Group_0_0_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4792:1: ( ( CONTINUE ) )
            // InternalSTAlgorithmParser.g:4793:1: ( CONTINUE )
            {
            // InternalSTAlgorithmParser.g:4793:1: ( CONTINUE )
            // InternalSTAlgorithmParser.g:4794:2: CONTINUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_8_1()); 
            }
            match(input,CONTINUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_9__0"
    // InternalSTAlgorithmParser.g:4804:1: rule__STStatement__Group_0_0_9__0 : rule__STStatement__Group_0_0_9__0__Impl rule__STStatement__Group_0_0_9__1 ;
    public final void rule__STStatement__Group_0_0_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4808:1: ( rule__STStatement__Group_0_0_9__0__Impl rule__STStatement__Group_0_0_9__1 )
            // InternalSTAlgorithmParser.g:4809:2: rule__STStatement__Group_0_0_9__0__Impl rule__STStatement__Group_0_0_9__1
            {
            pushFollow(FOLLOW_30);
            rule__STStatement__Group_0_0_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__0"


    // $ANTLR start "rule__STStatement__Group_0_0_9__0__Impl"
    // InternalSTAlgorithmParser.g:4816:1: rule__STStatement__Group_0_0_9__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4820:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:4821:1: ( () )
            {
            // InternalSTAlgorithmParser.g:4821:1: ( () )
            // InternalSTAlgorithmParser.g:4822:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_9_0()); 
            }
            // InternalSTAlgorithmParser.g:4823:2: ()
            // InternalSTAlgorithmParser.g:4823:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_9_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_9__1"
    // InternalSTAlgorithmParser.g:4831:1: rule__STStatement__Group_0_0_9__1 : rule__STStatement__Group_0_0_9__1__Impl ;
    public final void rule__STStatement__Group_0_0_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4835:1: ( rule__STStatement__Group_0_0_9__1__Impl )
            // InternalSTAlgorithmParser.g:4836:2: rule__STStatement__Group_0_0_9__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__1"


    // $ANTLR start "rule__STStatement__Group_0_0_9__1__Impl"
    // InternalSTAlgorithmParser.g:4842:1: rule__STStatement__Group_0_0_9__1__Impl : ( EXIT ) ;
    public final void rule__STStatement__Group_0_0_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4846:1: ( ( EXIT ) )
            // InternalSTAlgorithmParser.g:4847:1: ( EXIT )
            {
            // InternalSTAlgorithmParser.g:4847:1: ( EXIT )
            // InternalSTAlgorithmParser.g:4848:2: EXIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_9_1()); 
            }
            match(input,EXIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__1__Impl"


    // $ANTLR start "rule__STStatement__Group_1__0"
    // InternalSTAlgorithmParser.g:4858:1: rule__STStatement__Group_1__0 : rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 ;
    public final void rule__STStatement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4862:1: ( rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 )
            // InternalSTAlgorithmParser.g:4863:2: rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1
            {
            pushFollow(FOLLOW_31);
            rule__STStatement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0"


    // $ANTLR start "rule__STStatement__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:4870:1: rule__STStatement__Group_1__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4874:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:4875:1: ( () )
            {
            // InternalSTAlgorithmParser.g:4875:1: ( () )
            // InternalSTAlgorithmParser.g:4876:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }
            // InternalSTAlgorithmParser.g:4877:2: ()
            // InternalSTAlgorithmParser.g:4877:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0__Impl"


    // $ANTLR start "rule__STStatement__Group_1__1"
    // InternalSTAlgorithmParser.g:4885:1: rule__STStatement__Group_1__1 : rule__STStatement__Group_1__1__Impl ;
    public final void rule__STStatement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4889:1: ( rule__STStatement__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:4890:2: rule__STStatement__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1"


    // $ANTLR start "rule__STStatement__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:4896:1: rule__STStatement__Group_1__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4900:1: ( ( Semicolon ) )
            // InternalSTAlgorithmParser.g:4901:1: ( Semicolon )
            {
            // InternalSTAlgorithmParser.g:4901:1: ( Semicolon )
            // InternalSTAlgorithmParser.g:4902:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__0"
    // InternalSTAlgorithmParser.g:4912:1: rule__STAssignmentStatement__Group__0 : rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 ;
    public final void rule__STAssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4916:1: ( rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 )
            // InternalSTAlgorithmParser.g:4917:2: rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__STAssignmentStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0"


    // $ANTLR start "rule__STAssignmentStatement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:4924:1: rule__STAssignmentStatement__Group__0__Impl : ( ( rule__STAssignmentStatement__LeftAssignment_0 ) ) ;
    public final void rule__STAssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4928:1: ( ( ( rule__STAssignmentStatement__LeftAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:4929:1: ( ( rule__STAssignmentStatement__LeftAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:4929:1: ( ( rule__STAssignmentStatement__LeftAssignment_0 ) )
            // InternalSTAlgorithmParser.g:4930:2: ( rule__STAssignmentStatement__LeftAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLeftAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:4931:2: ( rule__STAssignmentStatement__LeftAssignment_0 )
            // InternalSTAlgorithmParser.g:4931:3: rule__STAssignmentStatement__LeftAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__LeftAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLeftAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__1"
    // InternalSTAlgorithmParser.g:4939:1: rule__STAssignmentStatement__Group__1 : rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 ;
    public final void rule__STAssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4943:1: ( rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 )
            // InternalSTAlgorithmParser.g:4944:2: rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__STAssignmentStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1"


    // $ANTLR start "rule__STAssignmentStatement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:4951:1: rule__STAssignmentStatement__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STAssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4955:1: ( ( ColonEqualsSign ) )
            // InternalSTAlgorithmParser.g:4956:1: ( ColonEqualsSign )
            {
            // InternalSTAlgorithmParser.g:4956:1: ( ColonEqualsSign )
            // InternalSTAlgorithmParser.g:4957:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__2"
    // InternalSTAlgorithmParser.g:4966:1: rule__STAssignmentStatement__Group__2 : rule__STAssignmentStatement__Group__2__Impl ;
    public final void rule__STAssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4970:1: ( rule__STAssignmentStatement__Group__2__Impl )
            // InternalSTAlgorithmParser.g:4971:2: rule__STAssignmentStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2"


    // $ANTLR start "rule__STAssignmentStatement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:4977:1: rule__STAssignmentStatement__Group__2__Impl : ( ( rule__STAssignmentStatement__RightAssignment_2 ) ) ;
    public final void rule__STAssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4981:1: ( ( ( rule__STAssignmentStatement__RightAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:4982:1: ( ( rule__STAssignmentStatement__RightAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:4982:1: ( ( rule__STAssignmentStatement__RightAssignment_2 ) )
            // InternalSTAlgorithmParser.g:4983:2: ( rule__STAssignmentStatement__RightAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRightAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:4984:2: ( rule__STAssignmentStatement__RightAssignment_2 )
            // InternalSTAlgorithmParser.g:4984:3: rule__STAssignmentStatement__RightAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__RightAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRightAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__0"
    // InternalSTAlgorithmParser.g:4993:1: rule__STCallNamedInputArgument__Group__0 : rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1 ;
    public final void rule__STCallNamedInputArgument__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4997:1: ( rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1 )
            // InternalSTAlgorithmParser.g:4998:2: rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__STCallNamedInputArgument__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__0"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__0__Impl"
    // InternalSTAlgorithmParser.g:5005:1: rule__STCallNamedInputArgument__Group__0__Impl : ( ( rule__STCallNamedInputArgument__TargetAssignment_0 ) ) ;
    public final void rule__STCallNamedInputArgument__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5009:1: ( ( ( rule__STCallNamedInputArgument__TargetAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:5010:1: ( ( rule__STCallNamedInputArgument__TargetAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:5010:1: ( ( rule__STCallNamedInputArgument__TargetAssignment_0 ) )
            // InternalSTAlgorithmParser.g:5011:2: ( rule__STCallNamedInputArgument__TargetAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getTargetAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:5012:2: ( rule__STCallNamedInputArgument__TargetAssignment_0 )
            // InternalSTAlgorithmParser.g:5012:3: rule__STCallNamedInputArgument__TargetAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__TargetAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getTargetAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__0__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__1"
    // InternalSTAlgorithmParser.g:5020:1: rule__STCallNamedInputArgument__Group__1 : rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2 ;
    public final void rule__STCallNamedInputArgument__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5024:1: ( rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2 )
            // InternalSTAlgorithmParser.g:5025:2: rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__STCallNamedInputArgument__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__1"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__1__Impl"
    // InternalSTAlgorithmParser.g:5032:1: rule__STCallNamedInputArgument__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STCallNamedInputArgument__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5036:1: ( ( ColonEqualsSign ) )
            // InternalSTAlgorithmParser.g:5037:1: ( ColonEqualsSign )
            {
            // InternalSTAlgorithmParser.g:5037:1: ( ColonEqualsSign )
            // InternalSTAlgorithmParser.g:5038:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__1__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__2"
    // InternalSTAlgorithmParser.g:5047:1: rule__STCallNamedInputArgument__Group__2 : rule__STCallNamedInputArgument__Group__2__Impl ;
    public final void rule__STCallNamedInputArgument__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5051:1: ( rule__STCallNamedInputArgument__Group__2__Impl )
            // InternalSTAlgorithmParser.g:5052:2: rule__STCallNamedInputArgument__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__2"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__2__Impl"
    // InternalSTAlgorithmParser.g:5058:1: rule__STCallNamedInputArgument__Group__2__Impl : ( ( rule__STCallNamedInputArgument__SourceAssignment_2 ) ) ;
    public final void rule__STCallNamedInputArgument__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5062:1: ( ( ( rule__STCallNamedInputArgument__SourceAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:5063:1: ( ( rule__STCallNamedInputArgument__SourceAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:5063:1: ( ( rule__STCallNamedInputArgument__SourceAssignment_2 ) )
            // InternalSTAlgorithmParser.g:5064:2: ( rule__STCallNamedInputArgument__SourceAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getSourceAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:5065:2: ( rule__STCallNamedInputArgument__SourceAssignment_2 )
            // InternalSTAlgorithmParser.g:5065:3: rule__STCallNamedInputArgument__SourceAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__SourceAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getSourceAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__0"
    // InternalSTAlgorithmParser.g:5074:1: rule__STCallNamedOutputArgument__Group__0 : rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1 ;
    public final void rule__STCallNamedOutputArgument__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5078:1: ( rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1 )
            // InternalSTAlgorithmParser.g:5079:2: rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__STCallNamedOutputArgument__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__0"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__0__Impl"
    // InternalSTAlgorithmParser.g:5086:1: rule__STCallNamedOutputArgument__Group__0__Impl : ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? ) ;
    public final void rule__STCallNamedOutputArgument__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5090:1: ( ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? ) )
            // InternalSTAlgorithmParser.g:5091:1: ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? )
            {
            // InternalSTAlgorithmParser.g:5091:1: ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? )
            // InternalSTAlgorithmParser.g:5092:2: ( rule__STCallNamedOutputArgument__NotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:5093:2: ( rule__STCallNamedOutputArgument__NotAssignment_0 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==NOT) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalSTAlgorithmParser.g:5093:3: rule__STCallNamedOutputArgument__NotAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCallNamedOutputArgument__NotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__0__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__1"
    // InternalSTAlgorithmParser.g:5101:1: rule__STCallNamedOutputArgument__Group__1 : rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2 ;
    public final void rule__STCallNamedOutputArgument__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5105:1: ( rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2 )
            // InternalSTAlgorithmParser.g:5106:2: rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__STCallNamedOutputArgument__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__1"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__1__Impl"
    // InternalSTAlgorithmParser.g:5113:1: rule__STCallNamedOutputArgument__Group__1__Impl : ( ( rule__STCallNamedOutputArgument__SourceAssignment_1 ) ) ;
    public final void rule__STCallNamedOutputArgument__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5117:1: ( ( ( rule__STCallNamedOutputArgument__SourceAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:5118:1: ( ( rule__STCallNamedOutputArgument__SourceAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:5118:1: ( ( rule__STCallNamedOutputArgument__SourceAssignment_1 ) )
            // InternalSTAlgorithmParser.g:5119:2: ( rule__STCallNamedOutputArgument__SourceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getSourceAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:5120:2: ( rule__STCallNamedOutputArgument__SourceAssignment_1 )
            // InternalSTAlgorithmParser.g:5120:3: rule__STCallNamedOutputArgument__SourceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__SourceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getSourceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__1__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__2"
    // InternalSTAlgorithmParser.g:5128:1: rule__STCallNamedOutputArgument__Group__2 : rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3 ;
    public final void rule__STCallNamedOutputArgument__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5132:1: ( rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3 )
            // InternalSTAlgorithmParser.g:5133:2: rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__STCallNamedOutputArgument__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__2"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__2__Impl"
    // InternalSTAlgorithmParser.g:5140:1: rule__STCallNamedOutputArgument__Group__2__Impl : ( EqualsSignGreaterThanSign ) ;
    public final void rule__STCallNamedOutputArgument__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5144:1: ( ( EqualsSignGreaterThanSign ) )
            // InternalSTAlgorithmParser.g:5145:1: ( EqualsSignGreaterThanSign )
            {
            // InternalSTAlgorithmParser.g:5145:1: ( EqualsSignGreaterThanSign )
            // InternalSTAlgorithmParser.g:5146:2: EqualsSignGreaterThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getEqualsSignGreaterThanSignKeyword_2()); 
            }
            match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getEqualsSignGreaterThanSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__3"
    // InternalSTAlgorithmParser.g:5155:1: rule__STCallNamedOutputArgument__Group__3 : rule__STCallNamedOutputArgument__Group__3__Impl ;
    public final void rule__STCallNamedOutputArgument__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5159:1: ( rule__STCallNamedOutputArgument__Group__3__Impl )
            // InternalSTAlgorithmParser.g:5160:2: rule__STCallNamedOutputArgument__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__3"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__3__Impl"
    // InternalSTAlgorithmParser.g:5166:1: rule__STCallNamedOutputArgument__Group__3__Impl : ( ( rule__STCallNamedOutputArgument__TargetAssignment_3 ) ) ;
    public final void rule__STCallNamedOutputArgument__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5170:1: ( ( ( rule__STCallNamedOutputArgument__TargetAssignment_3 ) ) )
            // InternalSTAlgorithmParser.g:5171:1: ( ( rule__STCallNamedOutputArgument__TargetAssignment_3 ) )
            {
            // InternalSTAlgorithmParser.g:5171:1: ( ( rule__STCallNamedOutputArgument__TargetAssignment_3 ) )
            // InternalSTAlgorithmParser.g:5172:2: ( rule__STCallNamedOutputArgument__TargetAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getTargetAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:5173:2: ( rule__STCallNamedOutputArgument__TargetAssignment_3 )
            // InternalSTAlgorithmParser.g:5173:3: rule__STCallNamedOutputArgument__TargetAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__TargetAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getTargetAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__3__Impl"


    // $ANTLR start "rule__STIfStatement__Group__0"
    // InternalSTAlgorithmParser.g:5182:1: rule__STIfStatement__Group__0 : rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1 ;
    public final void rule__STIfStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5186:1: ( rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1 )
            // InternalSTAlgorithmParser.g:5187:2: rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STIfStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__0"


    // $ANTLR start "rule__STIfStatement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:5194:1: rule__STIfStatement__Group__0__Impl : ( IF ) ;
    public final void rule__STIfStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5198:1: ( ( IF ) )
            // InternalSTAlgorithmParser.g:5199:1: ( IF )
            {
            // InternalSTAlgorithmParser.g:5199:1: ( IF )
            // InternalSTAlgorithmParser.g:5200:2: IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getIFKeyword_0()); 
            }
            match(input,IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__0__Impl"


    // $ANTLR start "rule__STIfStatement__Group__1"
    // InternalSTAlgorithmParser.g:5209:1: rule__STIfStatement__Group__1 : rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2 ;
    public final void rule__STIfStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5213:1: ( rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2 )
            // InternalSTAlgorithmParser.g:5214:2: rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__STIfStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__1"


    // $ANTLR start "rule__STIfStatement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:5221:1: rule__STIfStatement__Group__1__Impl : ( ( rule__STIfStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STIfStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5225:1: ( ( ( rule__STIfStatement__ConditionAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:5226:1: ( ( rule__STIfStatement__ConditionAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:5226:1: ( ( rule__STIfStatement__ConditionAssignment_1 ) )
            // InternalSTAlgorithmParser.g:5227:2: ( rule__STIfStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:5228:2: ( rule__STIfStatement__ConditionAssignment_1 )
            // InternalSTAlgorithmParser.g:5228:3: rule__STIfStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__1__Impl"


    // $ANTLR start "rule__STIfStatement__Group__2"
    // InternalSTAlgorithmParser.g:5236:1: rule__STIfStatement__Group__2 : rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3 ;
    public final void rule__STIfStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5240:1: ( rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3 )
            // InternalSTAlgorithmParser.g:5241:2: rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__STIfStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__2"


    // $ANTLR start "rule__STIfStatement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:5248:1: rule__STIfStatement__Group__2__Impl : ( THEN ) ;
    public final void rule__STIfStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5252:1: ( ( THEN ) )
            // InternalSTAlgorithmParser.g:5253:1: ( THEN )
            {
            // InternalSTAlgorithmParser.g:5253:1: ( THEN )
            // InternalSTAlgorithmParser.g:5254:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__2__Impl"


    // $ANTLR start "rule__STIfStatement__Group__3"
    // InternalSTAlgorithmParser.g:5263:1: rule__STIfStatement__Group__3 : rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4 ;
    public final void rule__STIfStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5267:1: ( rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4 )
            // InternalSTAlgorithmParser.g:5268:2: rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4
            {
            pushFollow(FOLLOW_35);
            rule__STIfStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__3"


    // $ANTLR start "rule__STIfStatement__Group__3__Impl"
    // InternalSTAlgorithmParser.g:5275:1: rule__STIfStatement__Group__3__Impl : ( ( rule__STIfStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STIfStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5279:1: ( ( ( rule__STIfStatement__StatementsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:5280:1: ( ( rule__STIfStatement__StatementsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:5280:1: ( ( rule__STIfStatement__StatementsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:5281:2: ( rule__STIfStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:5282:2: ( rule__STIfStatement__StatementsAssignment_3 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( ((LA54_0>=LDATE_AND_TIME && LA54_0<=DATE_AND_TIME)||(LA54_0>=LTIME_OF_DAY && LA54_0<=TIME_OF_DAY)||LA54_0==CONTINUE||LA54_0==WSTRING||(LA54_0>=REPEAT && LA54_0<=STRING)||LA54_0==DWORD||(LA54_0>=FALSE && LA54_0<=ULINT)||(LA54_0>=USINT && LA54_0<=DINT)||(LA54_0>=EXIT && LA54_0<=SINT)||(LA54_0>=TIME && LA54_0<=WORD)||(LA54_0>=FOR && LA54_0<=LDT)||LA54_0==TOD||(LA54_0>=DT && LA54_0<=LT)||LA54_0==LeftParenthesis||LA54_0==PlusSign||LA54_0==HyphenMinus||LA54_0==Semicolon||LA54_0==D||LA54_0==T||(LA54_0>=RULE_NON_DECIMAL && LA54_0<=RULE_INT)||(LA54_0>=RULE_ID && LA54_0<=RULE_WSTRING)) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:5282:3: rule__STIfStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__STIfStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__3__Impl"


    // $ANTLR start "rule__STIfStatement__Group__4"
    // InternalSTAlgorithmParser.g:5290:1: rule__STIfStatement__Group__4 : rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5 ;
    public final void rule__STIfStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5294:1: ( rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5 )
            // InternalSTAlgorithmParser.g:5295:2: rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5
            {
            pushFollow(FOLLOW_35);
            rule__STIfStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__4"


    // $ANTLR start "rule__STIfStatement__Group__4__Impl"
    // InternalSTAlgorithmParser.g:5302:1: rule__STIfStatement__Group__4__Impl : ( ( rule__STIfStatement__ElseifsAssignment_4 )* ) ;
    public final void rule__STIfStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5306:1: ( ( ( rule__STIfStatement__ElseifsAssignment_4 )* ) )
            // InternalSTAlgorithmParser.g:5307:1: ( ( rule__STIfStatement__ElseifsAssignment_4 )* )
            {
            // InternalSTAlgorithmParser.g:5307:1: ( ( rule__STIfStatement__ElseifsAssignment_4 )* )
            // InternalSTAlgorithmParser.g:5308:2: ( rule__STIfStatement__ElseifsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseifsAssignment_4()); 
            }
            // InternalSTAlgorithmParser.g:5309:2: ( rule__STIfStatement__ElseifsAssignment_4 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==ELSIF) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:5309:3: rule__STIfStatement__ElseifsAssignment_4
            	    {
            	    pushFollow(FOLLOW_36);
            	    rule__STIfStatement__ElseifsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseifsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__4__Impl"


    // $ANTLR start "rule__STIfStatement__Group__5"
    // InternalSTAlgorithmParser.g:5317:1: rule__STIfStatement__Group__5 : rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6 ;
    public final void rule__STIfStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5321:1: ( rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6 )
            // InternalSTAlgorithmParser.g:5322:2: rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6
            {
            pushFollow(FOLLOW_35);
            rule__STIfStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__5"


    // $ANTLR start "rule__STIfStatement__Group__5__Impl"
    // InternalSTAlgorithmParser.g:5329:1: rule__STIfStatement__Group__5__Impl : ( ( rule__STIfStatement__ElseAssignment_5 )? ) ;
    public final void rule__STIfStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5333:1: ( ( ( rule__STIfStatement__ElseAssignment_5 )? ) )
            // InternalSTAlgorithmParser.g:5334:1: ( ( rule__STIfStatement__ElseAssignment_5 )? )
            {
            // InternalSTAlgorithmParser.g:5334:1: ( ( rule__STIfStatement__ElseAssignment_5 )? )
            // InternalSTAlgorithmParser.g:5335:2: ( rule__STIfStatement__ElseAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseAssignment_5()); 
            }
            // InternalSTAlgorithmParser.g:5336:2: ( rule__STIfStatement__ElseAssignment_5 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==ELSE) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalSTAlgorithmParser.g:5336:3: rule__STIfStatement__ElseAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__STIfStatement__ElseAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__5__Impl"


    // $ANTLR start "rule__STIfStatement__Group__6"
    // InternalSTAlgorithmParser.g:5344:1: rule__STIfStatement__Group__6 : rule__STIfStatement__Group__6__Impl ;
    public final void rule__STIfStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5348:1: ( rule__STIfStatement__Group__6__Impl )
            // InternalSTAlgorithmParser.g:5349:2: rule__STIfStatement__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__6"


    // $ANTLR start "rule__STIfStatement__Group__6__Impl"
    // InternalSTAlgorithmParser.g:5355:1: rule__STIfStatement__Group__6__Impl : ( END_IF ) ;
    public final void rule__STIfStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5359:1: ( ( END_IF ) )
            // InternalSTAlgorithmParser.g:5360:1: ( END_IF )
            {
            // InternalSTAlgorithmParser.g:5360:1: ( END_IF )
            // InternalSTAlgorithmParser.g:5361:2: END_IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getEND_IFKeyword_6()); 
            }
            match(input,END_IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getEND_IFKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__6__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__0"
    // InternalSTAlgorithmParser.g:5371:1: rule__STElseIfPart__Group__0 : rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 ;
    public final void rule__STElseIfPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5375:1: ( rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 )
            // InternalSTAlgorithmParser.g:5376:2: rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STElseIfPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0"


    // $ANTLR start "rule__STElseIfPart__Group__0__Impl"
    // InternalSTAlgorithmParser.g:5383:1: rule__STElseIfPart__Group__0__Impl : ( ELSIF ) ;
    public final void rule__STElseIfPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5387:1: ( ( ELSIF ) )
            // InternalSTAlgorithmParser.g:5388:1: ( ELSIF )
            {
            // InternalSTAlgorithmParser.g:5388:1: ( ELSIF )
            // InternalSTAlgorithmParser.g:5389:2: ELSIF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }
            match(input,ELSIF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__1"
    // InternalSTAlgorithmParser.g:5398:1: rule__STElseIfPart__Group__1 : rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 ;
    public final void rule__STElseIfPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5402:1: ( rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 )
            // InternalSTAlgorithmParser.g:5403:2: rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__STElseIfPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1"


    // $ANTLR start "rule__STElseIfPart__Group__1__Impl"
    // InternalSTAlgorithmParser.g:5410:1: rule__STElseIfPart__Group__1__Impl : ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) ;
    public final void rule__STElseIfPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5414:1: ( ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:5415:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:5415:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            // InternalSTAlgorithmParser.g:5416:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:5417:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            // InternalSTAlgorithmParser.g:5417:3: rule__STElseIfPart__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__2"
    // InternalSTAlgorithmParser.g:5425:1: rule__STElseIfPart__Group__2 : rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 ;
    public final void rule__STElseIfPart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5429:1: ( rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 )
            // InternalSTAlgorithmParser.g:5430:2: rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__STElseIfPart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2"


    // $ANTLR start "rule__STElseIfPart__Group__2__Impl"
    // InternalSTAlgorithmParser.g:5437:1: rule__STElseIfPart__Group__2__Impl : ( THEN ) ;
    public final void rule__STElseIfPart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5441:1: ( ( THEN ) )
            // InternalSTAlgorithmParser.g:5442:1: ( THEN )
            {
            // InternalSTAlgorithmParser.g:5442:1: ( THEN )
            // InternalSTAlgorithmParser.g:5443:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__3"
    // InternalSTAlgorithmParser.g:5452:1: rule__STElseIfPart__Group__3 : rule__STElseIfPart__Group__3__Impl ;
    public final void rule__STElseIfPart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5456:1: ( rule__STElseIfPart__Group__3__Impl )
            // InternalSTAlgorithmParser.g:5457:2: rule__STElseIfPart__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3"


    // $ANTLR start "rule__STElseIfPart__Group__3__Impl"
    // InternalSTAlgorithmParser.g:5463:1: rule__STElseIfPart__Group__3__Impl : ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) ;
    public final void rule__STElseIfPart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5467:1: ( ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:5468:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:5468:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:5469:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:5470:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( ((LA57_0>=LDATE_AND_TIME && LA57_0<=DATE_AND_TIME)||(LA57_0>=LTIME_OF_DAY && LA57_0<=TIME_OF_DAY)||LA57_0==CONTINUE||LA57_0==WSTRING||(LA57_0>=REPEAT && LA57_0<=STRING)||LA57_0==DWORD||(LA57_0>=FALSE && LA57_0<=ULINT)||(LA57_0>=USINT && LA57_0<=DINT)||(LA57_0>=EXIT && LA57_0<=SINT)||(LA57_0>=TIME && LA57_0<=WORD)||(LA57_0>=FOR && LA57_0<=LDT)||LA57_0==TOD||(LA57_0>=DT && LA57_0<=LT)||LA57_0==LeftParenthesis||LA57_0==PlusSign||LA57_0==HyphenMinus||LA57_0==Semicolon||LA57_0==D||LA57_0==T||(LA57_0>=RULE_NON_DECIMAL && LA57_0<=RULE_INT)||(LA57_0>=RULE_ID && LA57_0<=RULE_WSTRING)) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:5470:3: rule__STElseIfPart__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__STElseIfPart__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__0"
    // InternalSTAlgorithmParser.g:5479:1: rule__STCaseStatement__Group__0 : rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 ;
    public final void rule__STCaseStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5483:1: ( rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 )
            // InternalSTAlgorithmParser.g:5484:2: rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STCaseStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0"


    // $ANTLR start "rule__STCaseStatement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:5491:1: rule__STCaseStatement__Group__0__Impl : ( CASE ) ;
    public final void rule__STCaseStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5495:1: ( ( CASE ) )
            // InternalSTAlgorithmParser.g:5496:1: ( CASE )
            {
            // InternalSTAlgorithmParser.g:5496:1: ( CASE )
            // InternalSTAlgorithmParser.g:5497:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__1"
    // InternalSTAlgorithmParser.g:5506:1: rule__STCaseStatement__Group__1 : rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 ;
    public final void rule__STCaseStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5510:1: ( rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 )
            // InternalSTAlgorithmParser.g:5511:2: rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__STCaseStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1"


    // $ANTLR start "rule__STCaseStatement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:5518:1: rule__STCaseStatement__Group__1__Impl : ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) ;
    public final void rule__STCaseStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5522:1: ( ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:5523:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:5523:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            // InternalSTAlgorithmParser.g:5524:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:5525:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            // InternalSTAlgorithmParser.g:5525:3: rule__STCaseStatement__SelectorAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__SelectorAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__2"
    // InternalSTAlgorithmParser.g:5533:1: rule__STCaseStatement__Group__2 : rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 ;
    public final void rule__STCaseStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5537:1: ( rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 )
            // InternalSTAlgorithmParser.g:5538:2: rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__STCaseStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2"


    // $ANTLR start "rule__STCaseStatement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:5545:1: rule__STCaseStatement__Group__2__Impl : ( OF ) ;
    public final void rule__STCaseStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5549:1: ( ( OF ) )
            // InternalSTAlgorithmParser.g:5550:1: ( OF )
            {
            // InternalSTAlgorithmParser.g:5550:1: ( OF )
            // InternalSTAlgorithmParser.g:5551:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__3"
    // InternalSTAlgorithmParser.g:5560:1: rule__STCaseStatement__Group__3 : rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 ;
    public final void rule__STCaseStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5564:1: ( rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 )
            // InternalSTAlgorithmParser.g:5565:2: rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4
            {
            pushFollow(FOLLOW_37);
            rule__STCaseStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3"


    // $ANTLR start "rule__STCaseStatement__Group__3__Impl"
    // InternalSTAlgorithmParser.g:5572:1: rule__STCaseStatement__Group__3__Impl : ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) ;
    public final void rule__STCaseStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5576:1: ( ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) )
            // InternalSTAlgorithmParser.g:5577:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            {
            // InternalSTAlgorithmParser.g:5577:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:5578:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:5578:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) )
            // InternalSTAlgorithmParser.g:5579:3: ( rule__STCaseStatement__CasesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:5580:3: ( rule__STCaseStatement__CasesAssignment_3 )
            // InternalSTAlgorithmParser.g:5580:4: rule__STCaseStatement__CasesAssignment_3
            {
            pushFollow(FOLLOW_38);
            rule__STCaseStatement__CasesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }

            // InternalSTAlgorithmParser.g:5583:2: ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            // InternalSTAlgorithmParser.g:5584:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:5585:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( ((LA58_0>=LDATE_AND_TIME && LA58_0<=DATE_AND_TIME)||(LA58_0>=LTIME_OF_DAY && LA58_0<=TIME_OF_DAY)||LA58_0==WSTRING||LA58_0==STRING||LA58_0==DWORD||(LA58_0>=FALSE && LA58_0<=ULINT)||(LA58_0>=USINT && LA58_0<=WCHAR)||(LA58_0>=BOOL && LA58_0<=BYTE)||(LA58_0>=CHAR && LA58_0<=DINT)||(LA58_0>=LINT && LA58_0<=SINT)||(LA58_0>=TIME && LA58_0<=WORD)||(LA58_0>=INT && LA58_0<=LDT)||(LA58_0>=NOT && LA58_0<=TOD)||LA58_0==DT||(LA58_0>=LD && LA58_0<=LT)||LA58_0==LeftParenthesis||LA58_0==PlusSign||LA58_0==HyphenMinus||LA58_0==D||LA58_0==T||(LA58_0>=RULE_NON_DECIMAL && LA58_0<=RULE_INT)||(LA58_0>=RULE_ID && LA58_0<=RULE_WSTRING)) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:5585:4: rule__STCaseStatement__CasesAssignment_3
            	    {
            	    pushFollow(FOLLOW_38);
            	    rule__STCaseStatement__CasesAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__4"
    // InternalSTAlgorithmParser.g:5594:1: rule__STCaseStatement__Group__4 : rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 ;
    public final void rule__STCaseStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5598:1: ( rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 )
            // InternalSTAlgorithmParser.g:5599:2: rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5
            {
            pushFollow(FOLLOW_37);
            rule__STCaseStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4"


    // $ANTLR start "rule__STCaseStatement__Group__4__Impl"
    // InternalSTAlgorithmParser.g:5606:1: rule__STCaseStatement__Group__4__Impl : ( ( rule__STCaseStatement__ElseAssignment_4 )? ) ;
    public final void rule__STCaseStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5610:1: ( ( ( rule__STCaseStatement__ElseAssignment_4 )? ) )
            // InternalSTAlgorithmParser.g:5611:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            {
            // InternalSTAlgorithmParser.g:5611:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            // InternalSTAlgorithmParser.g:5612:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }
            // InternalSTAlgorithmParser.g:5613:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==ELSE) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalSTAlgorithmParser.g:5613:3: rule__STCaseStatement__ElseAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCaseStatement__ElseAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__5"
    // InternalSTAlgorithmParser.g:5621:1: rule__STCaseStatement__Group__5 : rule__STCaseStatement__Group__5__Impl ;
    public final void rule__STCaseStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5625:1: ( rule__STCaseStatement__Group__5__Impl )
            // InternalSTAlgorithmParser.g:5626:2: rule__STCaseStatement__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5"


    // $ANTLR start "rule__STCaseStatement__Group__5__Impl"
    // InternalSTAlgorithmParser.g:5632:1: rule__STCaseStatement__Group__5__Impl : ( END_CASE ) ;
    public final void rule__STCaseStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5636:1: ( ( END_CASE ) )
            // InternalSTAlgorithmParser.g:5637:1: ( END_CASE )
            {
            // InternalSTAlgorithmParser.g:5637:1: ( END_CASE )
            // InternalSTAlgorithmParser.g:5638:2: END_CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }
            match(input,END_CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5__Impl"


    // $ANTLR start "rule__STCaseCases__Group__0"
    // InternalSTAlgorithmParser.g:5648:1: rule__STCaseCases__Group__0 : rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 ;
    public final void rule__STCaseCases__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5652:1: ( rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 )
            // InternalSTAlgorithmParser.g:5653:2: rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__STCaseCases__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0"


    // $ANTLR start "rule__STCaseCases__Group__0__Impl"
    // InternalSTAlgorithmParser.g:5660:1: rule__STCaseCases__Group__0__Impl : ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) ;
    public final void rule__STCaseCases__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5664:1: ( ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:5665:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:5665:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            // InternalSTAlgorithmParser.g:5666:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:5667:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            // InternalSTAlgorithmParser.g:5667:3: rule__STCaseCases__ConditionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group__1"
    // InternalSTAlgorithmParser.g:5675:1: rule__STCaseCases__Group__1 : rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 ;
    public final void rule__STCaseCases__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5679:1: ( rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 )
            // InternalSTAlgorithmParser.g:5680:2: rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2
            {
            pushFollow(FOLLOW_39);
            rule__STCaseCases__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1"


    // $ANTLR start "rule__STCaseCases__Group__1__Impl"
    // InternalSTAlgorithmParser.g:5687:1: rule__STCaseCases__Group__1__Impl : ( ( rule__STCaseCases__Group_1__0 )* ) ;
    public final void rule__STCaseCases__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5691:1: ( ( ( rule__STCaseCases__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:5692:1: ( ( rule__STCaseCases__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:5692:1: ( ( rule__STCaseCases__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:5693:2: ( rule__STCaseCases__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:5694:2: ( rule__STCaseCases__Group_1__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==Comma) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:5694:3: rule__STCaseCases__Group_1__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__STCaseCases__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1__Impl"


    // $ANTLR start "rule__STCaseCases__Group__2"
    // InternalSTAlgorithmParser.g:5702:1: rule__STCaseCases__Group__2 : rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 ;
    public final void rule__STCaseCases__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5706:1: ( rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 )
            // InternalSTAlgorithmParser.g:5707:2: rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__STCaseCases__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2"


    // $ANTLR start "rule__STCaseCases__Group__2__Impl"
    // InternalSTAlgorithmParser.g:5714:1: rule__STCaseCases__Group__2__Impl : ( Colon ) ;
    public final void rule__STCaseCases__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5718:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:5719:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:5719:1: ( Colon )
            // InternalSTAlgorithmParser.g:5720:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2__Impl"


    // $ANTLR start "rule__STCaseCases__Group__3"
    // InternalSTAlgorithmParser.g:5729:1: rule__STCaseCases__Group__3 : rule__STCaseCases__Group__3__Impl ;
    public final void rule__STCaseCases__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5733:1: ( rule__STCaseCases__Group__3__Impl )
            // InternalSTAlgorithmParser.g:5734:2: rule__STCaseCases__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3"


    // $ANTLR start "rule__STCaseCases__Group__3__Impl"
    // InternalSTAlgorithmParser.g:5740:1: rule__STCaseCases__Group__3__Impl : ( ( rule__STCaseCases__StatementsAssignment_3 )* ) ;
    public final void rule__STCaseCases__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5744:1: ( ( ( rule__STCaseCases__StatementsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:5745:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:5745:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:5746:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:5747:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            loop61:
            do {
                int alt61=2;
                alt61 = dfa61.predict(input);
                switch (alt61) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:5747:3: rule__STCaseCases__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__STCaseCases__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__0"
    // InternalSTAlgorithmParser.g:5756:1: rule__STCaseCases__Group_1__0 : rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 ;
    public final void rule__STCaseCases__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5760:1: ( rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 )
            // InternalSTAlgorithmParser.g:5761:2: rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STCaseCases__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0"


    // $ANTLR start "rule__STCaseCases__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:5768:1: rule__STCaseCases__Group_1__0__Impl : ( Comma ) ;
    public final void rule__STCaseCases__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5772:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:5773:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:5773:1: ( Comma )
            // InternalSTAlgorithmParser.g:5774:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__1"
    // InternalSTAlgorithmParser.g:5783:1: rule__STCaseCases__Group_1__1 : rule__STCaseCases__Group_1__1__Impl ;
    public final void rule__STCaseCases__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5787:1: ( rule__STCaseCases__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:5788:2: rule__STCaseCases__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1"


    // $ANTLR start "rule__STCaseCases__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:5794:1: rule__STCaseCases__Group_1__1__Impl : ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) ;
    public final void rule__STCaseCases__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5798:1: ( ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:5799:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:5799:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:5800:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:5801:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            // InternalSTAlgorithmParser.g:5801:3: rule__STCaseCases__ConditionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__0"
    // InternalSTAlgorithmParser.g:5810:1: rule__STElsePart__Group__0 : rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 ;
    public final void rule__STElsePart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5814:1: ( rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 )
            // InternalSTAlgorithmParser.g:5815:2: rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__STElsePart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0"


    // $ANTLR start "rule__STElsePart__Group__0__Impl"
    // InternalSTAlgorithmParser.g:5822:1: rule__STElsePart__Group__0__Impl : ( () ) ;
    public final void rule__STElsePart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5826:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:5827:1: ( () )
            {
            // InternalSTAlgorithmParser.g:5827:1: ( () )
            // InternalSTAlgorithmParser.g:5828:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }
            // InternalSTAlgorithmParser.g:5829:2: ()
            // InternalSTAlgorithmParser.g:5829:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0__Impl"


    // $ANTLR start "rule__STElsePart__Group__1"
    // InternalSTAlgorithmParser.g:5837:1: rule__STElsePart__Group__1 : rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 ;
    public final void rule__STElsePart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5841:1: ( rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 )
            // InternalSTAlgorithmParser.g:5842:2: rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__STElsePart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1"


    // $ANTLR start "rule__STElsePart__Group__1__Impl"
    // InternalSTAlgorithmParser.g:5849:1: rule__STElsePart__Group__1__Impl : ( ELSE ) ;
    public final void rule__STElsePart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5853:1: ( ( ELSE ) )
            // InternalSTAlgorithmParser.g:5854:1: ( ELSE )
            {
            // InternalSTAlgorithmParser.g:5854:1: ( ELSE )
            // InternalSTAlgorithmParser.g:5855:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__2"
    // InternalSTAlgorithmParser.g:5864:1: rule__STElsePart__Group__2 : rule__STElsePart__Group__2__Impl ;
    public final void rule__STElsePart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5868:1: ( rule__STElsePart__Group__2__Impl )
            // InternalSTAlgorithmParser.g:5869:2: rule__STElsePart__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2"


    // $ANTLR start "rule__STElsePart__Group__2__Impl"
    // InternalSTAlgorithmParser.g:5875:1: rule__STElsePart__Group__2__Impl : ( ( rule__STElsePart__StatementsAssignment_2 )* ) ;
    public final void rule__STElsePart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5879:1: ( ( ( rule__STElsePart__StatementsAssignment_2 )* ) )
            // InternalSTAlgorithmParser.g:5880:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            {
            // InternalSTAlgorithmParser.g:5880:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            // InternalSTAlgorithmParser.g:5881:2: ( rule__STElsePart__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:5882:2: ( rule__STElsePart__StatementsAssignment_2 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( ((LA62_0>=LDATE_AND_TIME && LA62_0<=DATE_AND_TIME)||(LA62_0>=LTIME_OF_DAY && LA62_0<=TIME_OF_DAY)||LA62_0==CONTINUE||LA62_0==WSTRING||(LA62_0>=REPEAT && LA62_0<=STRING)||LA62_0==DWORD||(LA62_0>=FALSE && LA62_0<=ULINT)||(LA62_0>=USINT && LA62_0<=DINT)||(LA62_0>=EXIT && LA62_0<=SINT)||(LA62_0>=TIME && LA62_0<=WORD)||(LA62_0>=FOR && LA62_0<=LDT)||LA62_0==TOD||(LA62_0>=DT && LA62_0<=LT)||LA62_0==LeftParenthesis||LA62_0==PlusSign||LA62_0==HyphenMinus||LA62_0==Semicolon||LA62_0==D||LA62_0==T||(LA62_0>=RULE_NON_DECIMAL && LA62_0<=RULE_INT)||(LA62_0>=RULE_ID && LA62_0<=RULE_WSTRING)) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:5882:3: rule__STElsePart__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__STElsePart__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__0"
    // InternalSTAlgorithmParser.g:5891:1: rule__STForStatement__Group__0 : rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 ;
    public final void rule__STForStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5895:1: ( rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 )
            // InternalSTAlgorithmParser.g:5896:2: rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__STForStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0"


    // $ANTLR start "rule__STForStatement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:5903:1: rule__STForStatement__Group__0__Impl : ( FOR ) ;
    public final void rule__STForStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5907:1: ( ( FOR ) )
            // InternalSTAlgorithmParser.g:5908:1: ( FOR )
            {
            // InternalSTAlgorithmParser.g:5908:1: ( FOR )
            // InternalSTAlgorithmParser.g:5909:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0__Impl"


    // $ANTLR start "rule__STForStatement__Group__1"
    // InternalSTAlgorithmParser.g:5918:1: rule__STForStatement__Group__1 : rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 ;
    public final void rule__STForStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5922:1: ( rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 )
            // InternalSTAlgorithmParser.g:5923:2: rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2
            {
            pushFollow(FOLLOW_32);
            rule__STForStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1"


    // $ANTLR start "rule__STForStatement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:5930:1: rule__STForStatement__Group__1__Impl : ( ( rule__STForStatement__VariableAssignment_1 ) ) ;
    public final void rule__STForStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5934:1: ( ( ( rule__STForStatement__VariableAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:5935:1: ( ( rule__STForStatement__VariableAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:5935:1: ( ( rule__STForStatement__VariableAssignment_1 ) )
            // InternalSTAlgorithmParser.g:5936:2: ( rule__STForStatement__VariableAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:5937:2: ( rule__STForStatement__VariableAssignment_1 )
            // InternalSTAlgorithmParser.g:5937:3: rule__STForStatement__VariableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__VariableAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1__Impl"


    // $ANTLR start "rule__STForStatement__Group__2"
    // InternalSTAlgorithmParser.g:5945:1: rule__STForStatement__Group__2 : rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 ;
    public final void rule__STForStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5949:1: ( rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 )
            // InternalSTAlgorithmParser.g:5950:2: rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__STForStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2"


    // $ANTLR start "rule__STForStatement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:5957:1: rule__STForStatement__Group__2__Impl : ( ColonEqualsSign ) ;
    public final void rule__STForStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5961:1: ( ( ColonEqualsSign ) )
            // InternalSTAlgorithmParser.g:5962:1: ( ColonEqualsSign )
            {
            // InternalSTAlgorithmParser.g:5962:1: ( ColonEqualsSign )
            // InternalSTAlgorithmParser.g:5963:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getColonEqualsSignKeyword_2()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getColonEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__3"
    // InternalSTAlgorithmParser.g:5972:1: rule__STForStatement__Group__3 : rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 ;
    public final void rule__STForStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5976:1: ( rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 )
            // InternalSTAlgorithmParser.g:5977:2: rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4
            {
            pushFollow(FOLLOW_41);
            rule__STForStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3"


    // $ANTLR start "rule__STForStatement__Group__3__Impl"
    // InternalSTAlgorithmParser.g:5984:1: rule__STForStatement__Group__3__Impl : ( ( rule__STForStatement__FromAssignment_3 ) ) ;
    public final void rule__STForStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5988:1: ( ( ( rule__STForStatement__FromAssignment_3 ) ) )
            // InternalSTAlgorithmParser.g:5989:1: ( ( rule__STForStatement__FromAssignment_3 ) )
            {
            // InternalSTAlgorithmParser.g:5989:1: ( ( rule__STForStatement__FromAssignment_3 ) )
            // InternalSTAlgorithmParser.g:5990:2: ( rule__STForStatement__FromAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFromAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:5991:2: ( rule__STForStatement__FromAssignment_3 )
            // InternalSTAlgorithmParser.g:5991:3: rule__STForStatement__FromAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__FromAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFromAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3__Impl"


    // $ANTLR start "rule__STForStatement__Group__4"
    // InternalSTAlgorithmParser.g:5999:1: rule__STForStatement__Group__4 : rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 ;
    public final void rule__STForStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6003:1: ( rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 )
            // InternalSTAlgorithmParser.g:6004:2: rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5
            {
            pushFollow(FOLLOW_19);
            rule__STForStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4"


    // $ANTLR start "rule__STForStatement__Group__4__Impl"
    // InternalSTAlgorithmParser.g:6011:1: rule__STForStatement__Group__4__Impl : ( TO ) ;
    public final void rule__STForStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6015:1: ( ( TO ) )
            // InternalSTAlgorithmParser.g:6016:1: ( TO )
            {
            // InternalSTAlgorithmParser.g:6016:1: ( TO )
            // InternalSTAlgorithmParser.g:6017:2: TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getTOKeyword_4()); 
            }
            match(input,TO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getTOKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4__Impl"


    // $ANTLR start "rule__STForStatement__Group__5"
    // InternalSTAlgorithmParser.g:6026:1: rule__STForStatement__Group__5 : rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 ;
    public final void rule__STForStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6030:1: ( rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 )
            // InternalSTAlgorithmParser.g:6031:2: rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6
            {
            pushFollow(FOLLOW_42);
            rule__STForStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5"


    // $ANTLR start "rule__STForStatement__Group__5__Impl"
    // InternalSTAlgorithmParser.g:6038:1: rule__STForStatement__Group__5__Impl : ( ( rule__STForStatement__ToAssignment_5 ) ) ;
    public final void rule__STForStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6042:1: ( ( ( rule__STForStatement__ToAssignment_5 ) ) )
            // InternalSTAlgorithmParser.g:6043:1: ( ( rule__STForStatement__ToAssignment_5 ) )
            {
            // InternalSTAlgorithmParser.g:6043:1: ( ( rule__STForStatement__ToAssignment_5 ) )
            // InternalSTAlgorithmParser.g:6044:2: ( rule__STForStatement__ToAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToAssignment_5()); 
            }
            // InternalSTAlgorithmParser.g:6045:2: ( rule__STForStatement__ToAssignment_5 )
            // InternalSTAlgorithmParser.g:6045:3: rule__STForStatement__ToAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ToAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5__Impl"


    // $ANTLR start "rule__STForStatement__Group__6"
    // InternalSTAlgorithmParser.g:6053:1: rule__STForStatement__Group__6 : rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 ;
    public final void rule__STForStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6057:1: ( rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 )
            // InternalSTAlgorithmParser.g:6058:2: rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7
            {
            pushFollow(FOLLOW_42);
            rule__STForStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6"


    // $ANTLR start "rule__STForStatement__Group__6__Impl"
    // InternalSTAlgorithmParser.g:6065:1: rule__STForStatement__Group__6__Impl : ( ( rule__STForStatement__Group_6__0 )? ) ;
    public final void rule__STForStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6069:1: ( ( ( rule__STForStatement__Group_6__0 )? ) )
            // InternalSTAlgorithmParser.g:6070:1: ( ( rule__STForStatement__Group_6__0 )? )
            {
            // InternalSTAlgorithmParser.g:6070:1: ( ( rule__STForStatement__Group_6__0 )? )
            // InternalSTAlgorithmParser.g:6071:2: ( rule__STForStatement__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup_6()); 
            }
            // InternalSTAlgorithmParser.g:6072:2: ( rule__STForStatement__Group_6__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==BY) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalSTAlgorithmParser.g:6072:3: rule__STForStatement__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STForStatement__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6__Impl"


    // $ANTLR start "rule__STForStatement__Group__7"
    // InternalSTAlgorithmParser.g:6080:1: rule__STForStatement__Group__7 : rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8 ;
    public final void rule__STForStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6084:1: ( rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8 )
            // InternalSTAlgorithmParser.g:6085:2: rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8
            {
            pushFollow(FOLLOW_43);
            rule__STForStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7"


    // $ANTLR start "rule__STForStatement__Group__7__Impl"
    // InternalSTAlgorithmParser.g:6092:1: rule__STForStatement__Group__7__Impl : ( DO ) ;
    public final void rule__STForStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6096:1: ( ( DO ) )
            // InternalSTAlgorithmParser.g:6097:1: ( DO )
            {
            // InternalSTAlgorithmParser.g:6097:1: ( DO )
            // InternalSTAlgorithmParser.g:6098:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getDOKeyword_7()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getDOKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7__Impl"


    // $ANTLR start "rule__STForStatement__Group__8"
    // InternalSTAlgorithmParser.g:6107:1: rule__STForStatement__Group__8 : rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9 ;
    public final void rule__STForStatement__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6111:1: ( rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9 )
            // InternalSTAlgorithmParser.g:6112:2: rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9
            {
            pushFollow(FOLLOW_43);
            rule__STForStatement__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__8"


    // $ANTLR start "rule__STForStatement__Group__8__Impl"
    // InternalSTAlgorithmParser.g:6119:1: rule__STForStatement__Group__8__Impl : ( ( rule__STForStatement__StatementsAssignment_8 )* ) ;
    public final void rule__STForStatement__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6123:1: ( ( ( rule__STForStatement__StatementsAssignment_8 )* ) )
            // InternalSTAlgorithmParser.g:6124:1: ( ( rule__STForStatement__StatementsAssignment_8 )* )
            {
            // InternalSTAlgorithmParser.g:6124:1: ( ( rule__STForStatement__StatementsAssignment_8 )* )
            // InternalSTAlgorithmParser.g:6125:2: ( rule__STForStatement__StatementsAssignment_8 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsAssignment_8()); 
            }
            // InternalSTAlgorithmParser.g:6126:2: ( rule__STForStatement__StatementsAssignment_8 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( ((LA64_0>=LDATE_AND_TIME && LA64_0<=DATE_AND_TIME)||(LA64_0>=LTIME_OF_DAY && LA64_0<=TIME_OF_DAY)||LA64_0==CONTINUE||LA64_0==WSTRING||(LA64_0>=REPEAT && LA64_0<=STRING)||LA64_0==DWORD||(LA64_0>=FALSE && LA64_0<=ULINT)||(LA64_0>=USINT && LA64_0<=DINT)||(LA64_0>=EXIT && LA64_0<=SINT)||(LA64_0>=TIME && LA64_0<=WORD)||(LA64_0>=FOR && LA64_0<=LDT)||LA64_0==TOD||(LA64_0>=DT && LA64_0<=LT)||LA64_0==LeftParenthesis||LA64_0==PlusSign||LA64_0==HyphenMinus||LA64_0==Semicolon||LA64_0==D||LA64_0==T||(LA64_0>=RULE_NON_DECIMAL && LA64_0<=RULE_INT)||(LA64_0>=RULE_ID && LA64_0<=RULE_WSTRING)) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:6126:3: rule__STForStatement__StatementsAssignment_8
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__STForStatement__StatementsAssignment_8();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsAssignment_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__8__Impl"


    // $ANTLR start "rule__STForStatement__Group__9"
    // InternalSTAlgorithmParser.g:6134:1: rule__STForStatement__Group__9 : rule__STForStatement__Group__9__Impl ;
    public final void rule__STForStatement__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6138:1: ( rule__STForStatement__Group__9__Impl )
            // InternalSTAlgorithmParser.g:6139:2: rule__STForStatement__Group__9__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__9"


    // $ANTLR start "rule__STForStatement__Group__9__Impl"
    // InternalSTAlgorithmParser.g:6145:1: rule__STForStatement__Group__9__Impl : ( END_FOR ) ;
    public final void rule__STForStatement__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6149:1: ( ( END_FOR ) )
            // InternalSTAlgorithmParser.g:6150:1: ( END_FOR )
            {
            // InternalSTAlgorithmParser.g:6150:1: ( END_FOR )
            // InternalSTAlgorithmParser.g:6151:2: END_FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_9()); 
            }
            match(input,END_FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__9__Impl"


    // $ANTLR start "rule__STForStatement__Group_6__0"
    // InternalSTAlgorithmParser.g:6161:1: rule__STForStatement__Group_6__0 : rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1 ;
    public final void rule__STForStatement__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6165:1: ( rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1 )
            // InternalSTAlgorithmParser.g:6166:2: rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1
            {
            pushFollow(FOLLOW_19);
            rule__STForStatement__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__0"


    // $ANTLR start "rule__STForStatement__Group_6__0__Impl"
    // InternalSTAlgorithmParser.g:6173:1: rule__STForStatement__Group_6__0__Impl : ( BY ) ;
    public final void rule__STForStatement__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6177:1: ( ( BY ) )
            // InternalSTAlgorithmParser.g:6178:1: ( BY )
            {
            // InternalSTAlgorithmParser.g:6178:1: ( BY )
            // InternalSTAlgorithmParser.g:6179:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBYKeyword_6_0()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBYKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__0__Impl"


    // $ANTLR start "rule__STForStatement__Group_6__1"
    // InternalSTAlgorithmParser.g:6188:1: rule__STForStatement__Group_6__1 : rule__STForStatement__Group_6__1__Impl ;
    public final void rule__STForStatement__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6192:1: ( rule__STForStatement__Group_6__1__Impl )
            // InternalSTAlgorithmParser.g:6193:2: rule__STForStatement__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__1"


    // $ANTLR start "rule__STForStatement__Group_6__1__Impl"
    // InternalSTAlgorithmParser.g:6199:1: rule__STForStatement__Group_6__1__Impl : ( ( rule__STForStatement__ByAssignment_6_1 ) ) ;
    public final void rule__STForStatement__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6203:1: ( ( ( rule__STForStatement__ByAssignment_6_1 ) ) )
            // InternalSTAlgorithmParser.g:6204:1: ( ( rule__STForStatement__ByAssignment_6_1 ) )
            {
            // InternalSTAlgorithmParser.g:6204:1: ( ( rule__STForStatement__ByAssignment_6_1 ) )
            // InternalSTAlgorithmParser.g:6205:2: ( rule__STForStatement__ByAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getByAssignment_6_1()); 
            }
            // InternalSTAlgorithmParser.g:6206:2: ( rule__STForStatement__ByAssignment_6_1 )
            // InternalSTAlgorithmParser.g:6206:3: rule__STForStatement__ByAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ByAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getByAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__0"
    // InternalSTAlgorithmParser.g:6215:1: rule__STWhileStatement__Group__0 : rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 ;
    public final void rule__STWhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6219:1: ( rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 )
            // InternalSTAlgorithmParser.g:6220:2: rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STWhileStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0"


    // $ANTLR start "rule__STWhileStatement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:6227:1: rule__STWhileStatement__Group__0__Impl : ( WHILE ) ;
    public final void rule__STWhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6231:1: ( ( WHILE ) )
            // InternalSTAlgorithmParser.g:6232:1: ( WHILE )
            {
            // InternalSTAlgorithmParser.g:6232:1: ( WHILE )
            // InternalSTAlgorithmParser.g:6233:2: WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }
            match(input,WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__1"
    // InternalSTAlgorithmParser.g:6242:1: rule__STWhileStatement__Group__1 : rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 ;
    public final void rule__STWhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6246:1: ( rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 )
            // InternalSTAlgorithmParser.g:6247:2: rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2
            {
            pushFollow(FOLLOW_44);
            rule__STWhileStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1"


    // $ANTLR start "rule__STWhileStatement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:6254:1: rule__STWhileStatement__Group__1__Impl : ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STWhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6258:1: ( ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:6259:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:6259:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            // InternalSTAlgorithmParser.g:6260:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:6261:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            // InternalSTAlgorithmParser.g:6261:3: rule__STWhileStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__2"
    // InternalSTAlgorithmParser.g:6269:1: rule__STWhileStatement__Group__2 : rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 ;
    public final void rule__STWhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6273:1: ( rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 )
            // InternalSTAlgorithmParser.g:6274:2: rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3
            {
            pushFollow(FOLLOW_45);
            rule__STWhileStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2"


    // $ANTLR start "rule__STWhileStatement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:6281:1: rule__STWhileStatement__Group__2__Impl : ( DO ) ;
    public final void rule__STWhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6285:1: ( ( DO ) )
            // InternalSTAlgorithmParser.g:6286:1: ( DO )
            {
            // InternalSTAlgorithmParser.g:6286:1: ( DO )
            // InternalSTAlgorithmParser.g:6287:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__3"
    // InternalSTAlgorithmParser.g:6296:1: rule__STWhileStatement__Group__3 : rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 ;
    public final void rule__STWhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6300:1: ( rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 )
            // InternalSTAlgorithmParser.g:6301:2: rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4
            {
            pushFollow(FOLLOW_45);
            rule__STWhileStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3"


    // $ANTLR start "rule__STWhileStatement__Group__3__Impl"
    // InternalSTAlgorithmParser.g:6308:1: rule__STWhileStatement__Group__3__Impl : ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STWhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6312:1: ( ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:6313:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:6313:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:6314:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:6315:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( ((LA65_0>=LDATE_AND_TIME && LA65_0<=DATE_AND_TIME)||(LA65_0>=LTIME_OF_DAY && LA65_0<=TIME_OF_DAY)||LA65_0==CONTINUE||LA65_0==WSTRING||(LA65_0>=REPEAT && LA65_0<=STRING)||LA65_0==DWORD||(LA65_0>=FALSE && LA65_0<=ULINT)||(LA65_0>=USINT && LA65_0<=DINT)||(LA65_0>=EXIT && LA65_0<=SINT)||(LA65_0>=TIME && LA65_0<=WORD)||(LA65_0>=FOR && LA65_0<=LDT)||LA65_0==TOD||(LA65_0>=DT && LA65_0<=LT)||LA65_0==LeftParenthesis||LA65_0==PlusSign||LA65_0==HyphenMinus||LA65_0==Semicolon||LA65_0==D||LA65_0==T||(LA65_0>=RULE_NON_DECIMAL && LA65_0<=RULE_INT)||(LA65_0>=RULE_ID && LA65_0<=RULE_WSTRING)) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:6315:3: rule__STWhileStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__STWhileStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__4"
    // InternalSTAlgorithmParser.g:6323:1: rule__STWhileStatement__Group__4 : rule__STWhileStatement__Group__4__Impl ;
    public final void rule__STWhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6327:1: ( rule__STWhileStatement__Group__4__Impl )
            // InternalSTAlgorithmParser.g:6328:2: rule__STWhileStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4"


    // $ANTLR start "rule__STWhileStatement__Group__4__Impl"
    // InternalSTAlgorithmParser.g:6334:1: rule__STWhileStatement__Group__4__Impl : ( END_WHILE ) ;
    public final void rule__STWhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6338:1: ( ( END_WHILE ) )
            // InternalSTAlgorithmParser.g:6339:1: ( END_WHILE )
            {
            // InternalSTAlgorithmParser.g:6339:1: ( END_WHILE )
            // InternalSTAlgorithmParser.g:6340:2: END_WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }
            match(input,END_WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__0"
    // InternalSTAlgorithmParser.g:6350:1: rule__STRepeatStatement__Group__0 : rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 ;
    public final void rule__STRepeatStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6354:1: ( rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 )
            // InternalSTAlgorithmParser.g:6355:2: rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__STRepeatStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0"


    // $ANTLR start "rule__STRepeatStatement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:6362:1: rule__STRepeatStatement__Group__0__Impl : ( REPEAT ) ;
    public final void rule__STRepeatStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6366:1: ( ( REPEAT ) )
            // InternalSTAlgorithmParser.g:6367:1: ( REPEAT )
            {
            // InternalSTAlgorithmParser.g:6367:1: ( REPEAT )
            // InternalSTAlgorithmParser.g:6368:2: REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }
            match(input,REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__1"
    // InternalSTAlgorithmParser.g:6377:1: rule__STRepeatStatement__Group__1 : rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 ;
    public final void rule__STRepeatStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6381:1: ( rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 )
            // InternalSTAlgorithmParser.g:6382:2: rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2
            {
            pushFollow(FOLLOW_46);
            rule__STRepeatStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1"


    // $ANTLR start "rule__STRepeatStatement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:6389:1: rule__STRepeatStatement__Group__1__Impl : ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) ;
    public final void rule__STRepeatStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6393:1: ( ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) )
            // InternalSTAlgorithmParser.g:6394:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            {
            // InternalSTAlgorithmParser.g:6394:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            // InternalSTAlgorithmParser.g:6395:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:6396:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( ((LA66_0>=LDATE_AND_TIME && LA66_0<=DATE_AND_TIME)||(LA66_0>=LTIME_OF_DAY && LA66_0<=TIME_OF_DAY)||LA66_0==CONTINUE||LA66_0==WSTRING||(LA66_0>=REPEAT && LA66_0<=STRING)||LA66_0==DWORD||(LA66_0>=FALSE && LA66_0<=ULINT)||(LA66_0>=USINT && LA66_0<=DINT)||(LA66_0>=EXIT && LA66_0<=SINT)||(LA66_0>=TIME && LA66_0<=WORD)||(LA66_0>=FOR && LA66_0<=LDT)||LA66_0==TOD||(LA66_0>=DT && LA66_0<=LT)||LA66_0==LeftParenthesis||LA66_0==PlusSign||LA66_0==HyphenMinus||LA66_0==Semicolon||LA66_0==D||LA66_0==T||(LA66_0>=RULE_NON_DECIMAL && LA66_0<=RULE_INT)||(LA66_0>=RULE_ID && LA66_0<=RULE_WSTRING)) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:6396:3: rule__STRepeatStatement__StatementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__STRepeatStatement__StatementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__2"
    // InternalSTAlgorithmParser.g:6404:1: rule__STRepeatStatement__Group__2 : rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 ;
    public final void rule__STRepeatStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6408:1: ( rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 )
            // InternalSTAlgorithmParser.g:6409:2: rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__STRepeatStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2"


    // $ANTLR start "rule__STRepeatStatement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:6416:1: rule__STRepeatStatement__Group__2__Impl : ( UNTIL ) ;
    public final void rule__STRepeatStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6420:1: ( ( UNTIL ) )
            // InternalSTAlgorithmParser.g:6421:1: ( UNTIL )
            {
            // InternalSTAlgorithmParser.g:6421:1: ( UNTIL )
            // InternalSTAlgorithmParser.g:6422:2: UNTIL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }
            match(input,UNTIL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__3"
    // InternalSTAlgorithmParser.g:6431:1: rule__STRepeatStatement__Group__3 : rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 ;
    public final void rule__STRepeatStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6435:1: ( rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 )
            // InternalSTAlgorithmParser.g:6436:2: rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4
            {
            pushFollow(FOLLOW_47);
            rule__STRepeatStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3"


    // $ANTLR start "rule__STRepeatStatement__Group__3__Impl"
    // InternalSTAlgorithmParser.g:6443:1: rule__STRepeatStatement__Group__3__Impl : ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) ;
    public final void rule__STRepeatStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6447:1: ( ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) )
            // InternalSTAlgorithmParser.g:6448:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            {
            // InternalSTAlgorithmParser.g:6448:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            // InternalSTAlgorithmParser.g:6449:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:6450:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            // InternalSTAlgorithmParser.g:6450:3: rule__STRepeatStatement__ConditionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__ConditionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__4"
    // InternalSTAlgorithmParser.g:6458:1: rule__STRepeatStatement__Group__4 : rule__STRepeatStatement__Group__4__Impl ;
    public final void rule__STRepeatStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6462:1: ( rule__STRepeatStatement__Group__4__Impl )
            // InternalSTAlgorithmParser.g:6463:2: rule__STRepeatStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4"


    // $ANTLR start "rule__STRepeatStatement__Group__4__Impl"
    // InternalSTAlgorithmParser.g:6469:1: rule__STRepeatStatement__Group__4__Impl : ( END_REPEAT ) ;
    public final void rule__STRepeatStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6473:1: ( ( END_REPEAT ) )
            // InternalSTAlgorithmParser.g:6474:1: ( END_REPEAT )
            {
            // InternalSTAlgorithmParser.g:6474:1: ( END_REPEAT )
            // InternalSTAlgorithmParser.g:6475:2: END_REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }
            match(input,END_REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__0"
    // InternalSTAlgorithmParser.g:6485:1: rule__STSubrangeExpression__Group__0 : rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 ;
    public final void rule__STSubrangeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6489:1: ( rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 )
            // InternalSTAlgorithmParser.g:6490:2: rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__STSubrangeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0"


    // $ANTLR start "rule__STSubrangeExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:6497:1: rule__STSubrangeExpression__Group__0__Impl : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6501:1: ( ( ruleSTOrExpression ) )
            // InternalSTAlgorithmParser.g:6502:1: ( ruleSTOrExpression )
            {
            // InternalSTAlgorithmParser.g:6502:1: ( ruleSTOrExpression )
            // InternalSTAlgorithmParser.g:6503:2: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__1"
    // InternalSTAlgorithmParser.g:6512:1: rule__STSubrangeExpression__Group__1 : rule__STSubrangeExpression__Group__1__Impl ;
    public final void rule__STSubrangeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6516:1: ( rule__STSubrangeExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:6517:2: rule__STSubrangeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1"


    // $ANTLR start "rule__STSubrangeExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:6523:1: rule__STSubrangeExpression__Group__1__Impl : ( ( rule__STSubrangeExpression__Group_1__0 )* ) ;
    public final void rule__STSubrangeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6527:1: ( ( ( rule__STSubrangeExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:6528:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:6528:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:6529:2: ( rule__STSubrangeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:6530:2: ( rule__STSubrangeExpression__Group_1__0 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==FullStopFullStop) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:6530:3: rule__STSubrangeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_49);
            	    rule__STSubrangeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:6539:1: rule__STSubrangeExpression__Group_1__0 : rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 ;
    public final void rule__STSubrangeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6543:1: ( rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:6544:2: rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STSubrangeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:6551:1: rule__STSubrangeExpression__Group_1__0__Impl : ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6555:1: ( ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:6556:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:6556:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:6557:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:6558:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:6558:3: rule__STSubrangeExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:6566:1: rule__STSubrangeExpression__Group_1__1 : rule__STSubrangeExpression__Group_1__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6570:1: ( rule__STSubrangeExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:6571:2: rule__STSubrangeExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:6577:1: rule__STSubrangeExpression__Group_1__1__Impl : ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6581:1: ( ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:6582:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:6582:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:6583:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:6584:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:6584:3: rule__STSubrangeExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:6593:1: rule__STSubrangeExpression__Group_1_0__0 : rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 ;
    public final void rule__STSubrangeExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6597:1: ( rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:6598:2: rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_48);
            rule__STSubrangeExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:6605:1: rule__STSubrangeExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STSubrangeExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6609:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:6610:1: ( () )
            {
            // InternalSTAlgorithmParser.g:6610:1: ( () )
            // InternalSTAlgorithmParser.g:6611:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:6612:2: ()
            // InternalSTAlgorithmParser.g:6612:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:6620:1: rule__STSubrangeExpression__Group_1_0__1 : rule__STSubrangeExpression__Group_1_0__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6624:1: ( rule__STSubrangeExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:6625:2: rule__STSubrangeExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:6631:1: rule__STSubrangeExpression__Group_1_0__1__Impl : ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6635:1: ( ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:6636:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:6636:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:6637:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:6638:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:6638:3: rule__STSubrangeExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group__0"
    // InternalSTAlgorithmParser.g:6647:1: rule__STOrExpression__Group__0 : rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 ;
    public final void rule__STOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6651:1: ( rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 )
            // InternalSTAlgorithmParser.g:6652:2: rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__STOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0"


    // $ANTLR start "rule__STOrExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:6659:1: rule__STOrExpression__Group__0__Impl : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6663:1: ( ( ruleSTXorExpression ) )
            // InternalSTAlgorithmParser.g:6664:1: ( ruleSTXorExpression )
            {
            // InternalSTAlgorithmParser.g:6664:1: ( ruleSTXorExpression )
            // InternalSTAlgorithmParser.g:6665:2: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group__1"
    // InternalSTAlgorithmParser.g:6674:1: rule__STOrExpression__Group__1 : rule__STOrExpression__Group__1__Impl ;
    public final void rule__STOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6678:1: ( rule__STOrExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:6679:2: rule__STOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1"


    // $ANTLR start "rule__STOrExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:6685:1: rule__STOrExpression__Group__1__Impl : ( ( rule__STOrExpression__Group_1__0 )* ) ;
    public final void rule__STOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6689:1: ( ( ( rule__STOrExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:6690:1: ( ( rule__STOrExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:6690:1: ( ( rule__STOrExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:6691:2: ( rule__STOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:6692:2: ( rule__STOrExpression__Group_1__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==OR) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:6692:3: rule__STOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_51);
            	    rule__STOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:6701:1: rule__STOrExpression__Group_1__0 : rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 ;
    public final void rule__STOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6705:1: ( rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:6706:2: rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0"


    // $ANTLR start "rule__STOrExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:6713:1: rule__STOrExpression__Group_1__0__Impl : ( ( rule__STOrExpression__Group_1_0__0 ) ) ;
    public final void rule__STOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6717:1: ( ( ( rule__STOrExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:6718:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:6718:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:6719:2: ( rule__STOrExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:6720:2: ( rule__STOrExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:6720:3: rule__STOrExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:6728:1: rule__STOrExpression__Group_1__1 : rule__STOrExpression__Group_1__1__Impl ;
    public final void rule__STOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6732:1: ( rule__STOrExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:6733:2: rule__STOrExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1"


    // $ANTLR start "rule__STOrExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:6739:1: rule__STOrExpression__Group_1__1__Impl : ( ( rule__STOrExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6743:1: ( ( ( rule__STOrExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:6744:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:6744:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:6745:2: ( rule__STOrExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:6746:2: ( rule__STOrExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:6746:3: rule__STOrExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:6755:1: rule__STOrExpression__Group_1_0__0 : rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 ;
    public final void rule__STOrExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6759:1: ( rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:6760:2: rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_50);
            rule__STOrExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:6767:1: rule__STOrExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STOrExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6771:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:6772:1: ( () )
            {
            // InternalSTAlgorithmParser.g:6772:1: ( () )
            // InternalSTAlgorithmParser.g:6773:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:6774:2: ()
            // InternalSTAlgorithmParser.g:6774:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:6782:1: rule__STOrExpression__Group_1_0__1 : rule__STOrExpression__Group_1_0__1__Impl ;
    public final void rule__STOrExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6786:1: ( rule__STOrExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:6787:2: rule__STOrExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:6793:1: rule__STOrExpression__Group_1_0__1__Impl : ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STOrExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6797:1: ( ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:6798:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:6798:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:6799:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:6800:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:6800:3: rule__STOrExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group__0"
    // InternalSTAlgorithmParser.g:6809:1: rule__STXorExpression__Group__0 : rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 ;
    public final void rule__STXorExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6813:1: ( rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 )
            // InternalSTAlgorithmParser.g:6814:2: rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__STXorExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0"


    // $ANTLR start "rule__STXorExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:6821:1: rule__STXorExpression__Group__0__Impl : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6825:1: ( ( ruleSTAndExpression ) )
            // InternalSTAlgorithmParser.g:6826:1: ( ruleSTAndExpression )
            {
            // InternalSTAlgorithmParser.g:6826:1: ( ruleSTAndExpression )
            // InternalSTAlgorithmParser.g:6827:2: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group__1"
    // InternalSTAlgorithmParser.g:6836:1: rule__STXorExpression__Group__1 : rule__STXorExpression__Group__1__Impl ;
    public final void rule__STXorExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6840:1: ( rule__STXorExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:6841:2: rule__STXorExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1"


    // $ANTLR start "rule__STXorExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:6847:1: rule__STXorExpression__Group__1__Impl : ( ( rule__STXorExpression__Group_1__0 )* ) ;
    public final void rule__STXorExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6851:1: ( ( ( rule__STXorExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:6852:1: ( ( rule__STXorExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:6852:1: ( ( rule__STXorExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:6853:2: ( rule__STXorExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:6854:2: ( rule__STXorExpression__Group_1__0 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==XOR) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:6854:3: rule__STXorExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_53);
            	    rule__STXorExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:6863:1: rule__STXorExpression__Group_1__0 : rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 ;
    public final void rule__STXorExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6867:1: ( rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:6868:2: rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STXorExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0"


    // $ANTLR start "rule__STXorExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:6875:1: rule__STXorExpression__Group_1__0__Impl : ( ( rule__STXorExpression__Group_1_0__0 ) ) ;
    public final void rule__STXorExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6879:1: ( ( ( rule__STXorExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:6880:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:6880:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:6881:2: ( rule__STXorExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:6882:2: ( rule__STXorExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:6882:3: rule__STXorExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:6890:1: rule__STXorExpression__Group_1__1 : rule__STXorExpression__Group_1__1__Impl ;
    public final void rule__STXorExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6894:1: ( rule__STXorExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:6895:2: rule__STXorExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1"


    // $ANTLR start "rule__STXorExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:6901:1: rule__STXorExpression__Group_1__1__Impl : ( ( rule__STXorExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STXorExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6905:1: ( ( ( rule__STXorExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:6906:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:6906:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:6907:2: ( rule__STXorExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:6908:2: ( rule__STXorExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:6908:3: rule__STXorExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:6917:1: rule__STXorExpression__Group_1_0__0 : rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 ;
    public final void rule__STXorExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6921:1: ( rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:6922:2: rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_52);
            rule__STXorExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:6929:1: rule__STXorExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STXorExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6933:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:6934:1: ( () )
            {
            // InternalSTAlgorithmParser.g:6934:1: ( () )
            // InternalSTAlgorithmParser.g:6935:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:6936:2: ()
            // InternalSTAlgorithmParser.g:6936:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:6944:1: rule__STXorExpression__Group_1_0__1 : rule__STXorExpression__Group_1_0__1__Impl ;
    public final void rule__STXorExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6948:1: ( rule__STXorExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:6949:2: rule__STXorExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:6955:1: rule__STXorExpression__Group_1_0__1__Impl : ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STXorExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6959:1: ( ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:6960:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:6960:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:6961:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:6962:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:6962:3: rule__STXorExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group__0"
    // InternalSTAlgorithmParser.g:6971:1: rule__STAndExpression__Group__0 : rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 ;
    public final void rule__STAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6975:1: ( rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 )
            // InternalSTAlgorithmParser.g:6976:2: rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__STAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0"


    // $ANTLR start "rule__STAndExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:6983:1: rule__STAndExpression__Group__0__Impl : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6987:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTAlgorithmParser.g:6988:1: ( ruleSTEqualityExpression )
            {
            // InternalSTAlgorithmParser.g:6988:1: ( ruleSTEqualityExpression )
            // InternalSTAlgorithmParser.g:6989:2: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group__1"
    // InternalSTAlgorithmParser.g:6998:1: rule__STAndExpression__Group__1 : rule__STAndExpression__Group__1__Impl ;
    public final void rule__STAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7002:1: ( rule__STAndExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:7003:2: rule__STAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1"


    // $ANTLR start "rule__STAndExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7009:1: rule__STAndExpression__Group__1__Impl : ( ( rule__STAndExpression__Group_1__0 )* ) ;
    public final void rule__STAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7013:1: ( ( ( rule__STAndExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:7014:1: ( ( rule__STAndExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:7014:1: ( ( rule__STAndExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:7015:2: ( rule__STAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:7016:2: ( rule__STAndExpression__Group_1__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==AND||LA70_0==Ampersand) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:7016:3: rule__STAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_55);
            	    rule__STAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:7025:1: rule__STAndExpression__Group_1__0 : rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 ;
    public final void rule__STAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7029:1: ( rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:7030:2: rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0"


    // $ANTLR start "rule__STAndExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:7037:1: rule__STAndExpression__Group_1__0__Impl : ( ( rule__STAndExpression__Group_1_0__0 ) ) ;
    public final void rule__STAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7041:1: ( ( ( rule__STAndExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:7042:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:7042:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:7043:2: ( rule__STAndExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:7044:2: ( rule__STAndExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:7044:3: rule__STAndExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:7052:1: rule__STAndExpression__Group_1__1 : rule__STAndExpression__Group_1__1__Impl ;
    public final void rule__STAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7056:1: ( rule__STAndExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:7057:2: rule__STAndExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1"


    // $ANTLR start "rule__STAndExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:7063:1: rule__STAndExpression__Group_1__1__Impl : ( ( rule__STAndExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7067:1: ( ( ( rule__STAndExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:7068:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:7068:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:7069:2: ( rule__STAndExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:7070:2: ( rule__STAndExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:7070:3: rule__STAndExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:7079:1: rule__STAndExpression__Group_1_0__0 : rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 ;
    public final void rule__STAndExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7083:1: ( rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:7084:2: rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_54);
            rule__STAndExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:7091:1: rule__STAndExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAndExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7095:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:7096:1: ( () )
            {
            // InternalSTAlgorithmParser.g:7096:1: ( () )
            // InternalSTAlgorithmParser.g:7097:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:7098:2: ()
            // InternalSTAlgorithmParser.g:7098:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:7106:1: rule__STAndExpression__Group_1_0__1 : rule__STAndExpression__Group_1_0__1__Impl ;
    public final void rule__STAndExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7110:1: ( rule__STAndExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:7111:2: rule__STAndExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:7117:1: rule__STAndExpression__Group_1_0__1__Impl : ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAndExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7121:1: ( ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:7122:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:7122:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:7123:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:7124:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:7124:3: rule__STAndExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__0"
    // InternalSTAlgorithmParser.g:7133:1: rule__STEqualityExpression__Group__0 : rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 ;
    public final void rule__STEqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7137:1: ( rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 )
            // InternalSTAlgorithmParser.g:7138:2: rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1
            {
            pushFollow(FOLLOW_56);
            rule__STEqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0"


    // $ANTLR start "rule__STEqualityExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7145:1: rule__STEqualityExpression__Group__0__Impl : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7149:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTAlgorithmParser.g:7150:1: ( ruleSTComparisonExpression )
            {
            // InternalSTAlgorithmParser.g:7150:1: ( ruleSTComparisonExpression )
            // InternalSTAlgorithmParser.g:7151:2: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__1"
    // InternalSTAlgorithmParser.g:7160:1: rule__STEqualityExpression__Group__1 : rule__STEqualityExpression__Group__1__Impl ;
    public final void rule__STEqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7164:1: ( rule__STEqualityExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:7165:2: rule__STEqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1"


    // $ANTLR start "rule__STEqualityExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7171:1: rule__STEqualityExpression__Group__1__Impl : ( ( rule__STEqualityExpression__Group_1__0 )* ) ;
    public final void rule__STEqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7175:1: ( ( ( rule__STEqualityExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:7176:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:7176:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:7177:2: ( rule__STEqualityExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:7178:2: ( rule__STEqualityExpression__Group_1__0 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==LessThanSignGreaterThanSign||LA71_0==EqualsSign) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:7178:3: rule__STEqualityExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_57);
            	    rule__STEqualityExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:7187:1: rule__STEqualityExpression__Group_1__0 : rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 ;
    public final void rule__STEqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7191:1: ( rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:7192:2: rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STEqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:7199:1: rule__STEqualityExpression__Group_1__0__Impl : ( ( rule__STEqualityExpression__Group_1_0__0 ) ) ;
    public final void rule__STEqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7203:1: ( ( ( rule__STEqualityExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:7204:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:7204:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:7205:2: ( rule__STEqualityExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:7206:2: ( rule__STEqualityExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:7206:3: rule__STEqualityExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:7214:1: rule__STEqualityExpression__Group_1__1 : rule__STEqualityExpression__Group_1__1__Impl ;
    public final void rule__STEqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7218:1: ( rule__STEqualityExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:7219:2: rule__STEqualityExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:7225:1: rule__STEqualityExpression__Group_1__1__Impl : ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7229:1: ( ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:7230:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:7230:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:7231:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:7232:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:7232:3: rule__STEqualityExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:7241:1: rule__STEqualityExpression__Group_1_0__0 : rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 ;
    public final void rule__STEqualityExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7245:1: ( rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:7246:2: rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_56);
            rule__STEqualityExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:7253:1: rule__STEqualityExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STEqualityExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7257:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:7258:1: ( () )
            {
            // InternalSTAlgorithmParser.g:7258:1: ( () )
            // InternalSTAlgorithmParser.g:7259:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:7260:2: ()
            // InternalSTAlgorithmParser.g:7260:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:7268:1: rule__STEqualityExpression__Group_1_0__1 : rule__STEqualityExpression__Group_1_0__1__Impl ;
    public final void rule__STEqualityExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7272:1: ( rule__STEqualityExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:7273:2: rule__STEqualityExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:7279:1: rule__STEqualityExpression__Group_1_0__1__Impl : ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7283:1: ( ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:7284:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:7284:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:7285:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:7286:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:7286:3: rule__STEqualityExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__0"
    // InternalSTAlgorithmParser.g:7295:1: rule__STComparisonExpression__Group__0 : rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 ;
    public final void rule__STComparisonExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7299:1: ( rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 )
            // InternalSTAlgorithmParser.g:7300:2: rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1
            {
            pushFollow(FOLLOW_58);
            rule__STComparisonExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0"


    // $ANTLR start "rule__STComparisonExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7307:1: rule__STComparisonExpression__Group__0__Impl : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7311:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTAlgorithmParser.g:7312:1: ( ruleSTAddSubExpression )
            {
            // InternalSTAlgorithmParser.g:7312:1: ( ruleSTAddSubExpression )
            // InternalSTAlgorithmParser.g:7313:2: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__1"
    // InternalSTAlgorithmParser.g:7322:1: rule__STComparisonExpression__Group__1 : rule__STComparisonExpression__Group__1__Impl ;
    public final void rule__STComparisonExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7326:1: ( rule__STComparisonExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:7327:2: rule__STComparisonExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1"


    // $ANTLR start "rule__STComparisonExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7333:1: rule__STComparisonExpression__Group__1__Impl : ( ( rule__STComparisonExpression__Group_1__0 )* ) ;
    public final void rule__STComparisonExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7337:1: ( ( ( rule__STComparisonExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:7338:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:7338:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:7339:2: ( rule__STComparisonExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:7340:2: ( rule__STComparisonExpression__Group_1__0 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==LessThanSignEqualsSign||LA72_0==GreaterThanSignEqualsSign||LA72_0==LessThanSign||LA72_0==GreaterThanSign) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:7340:3: rule__STComparisonExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_59);
            	    rule__STComparisonExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:7349:1: rule__STComparisonExpression__Group_1__0 : rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 ;
    public final void rule__STComparisonExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7353:1: ( rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:7354:2: rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STComparisonExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:7361:1: rule__STComparisonExpression__Group_1__0__Impl : ( ( rule__STComparisonExpression__Group_1_0__0 ) ) ;
    public final void rule__STComparisonExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7365:1: ( ( ( rule__STComparisonExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:7366:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:7366:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:7367:2: ( rule__STComparisonExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:7368:2: ( rule__STComparisonExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:7368:3: rule__STComparisonExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:7376:1: rule__STComparisonExpression__Group_1__1 : rule__STComparisonExpression__Group_1__1__Impl ;
    public final void rule__STComparisonExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7380:1: ( rule__STComparisonExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:7381:2: rule__STComparisonExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:7387:1: rule__STComparisonExpression__Group_1__1__Impl : ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7391:1: ( ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:7392:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:7392:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:7393:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:7394:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:7394:3: rule__STComparisonExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:7403:1: rule__STComparisonExpression__Group_1_0__0 : rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 ;
    public final void rule__STComparisonExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7407:1: ( rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:7408:2: rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_58);
            rule__STComparisonExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:7415:1: rule__STComparisonExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STComparisonExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7419:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:7420:1: ( () )
            {
            // InternalSTAlgorithmParser.g:7420:1: ( () )
            // InternalSTAlgorithmParser.g:7421:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:7422:2: ()
            // InternalSTAlgorithmParser.g:7422:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:7430:1: rule__STComparisonExpression__Group_1_0__1 : rule__STComparisonExpression__Group_1_0__1__Impl ;
    public final void rule__STComparisonExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7434:1: ( rule__STComparisonExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:7435:2: rule__STComparisonExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:7441:1: rule__STComparisonExpression__Group_1_0__1__Impl : ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7445:1: ( ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:7446:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:7446:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:7447:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:7448:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:7448:3: rule__STComparisonExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__0"
    // InternalSTAlgorithmParser.g:7457:1: rule__STAddSubExpression__Group__0 : rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 ;
    public final void rule__STAddSubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7461:1: ( rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 )
            // InternalSTAlgorithmParser.g:7462:2: rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__STAddSubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0"


    // $ANTLR start "rule__STAddSubExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7469:1: rule__STAddSubExpression__Group__0__Impl : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7473:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTAlgorithmParser.g:7474:1: ( ruleSTMulDivModExpression )
            {
            // InternalSTAlgorithmParser.g:7474:1: ( ruleSTMulDivModExpression )
            // InternalSTAlgorithmParser.g:7475:2: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__1"
    // InternalSTAlgorithmParser.g:7484:1: rule__STAddSubExpression__Group__1 : rule__STAddSubExpression__Group__1__Impl ;
    public final void rule__STAddSubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7488:1: ( rule__STAddSubExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:7489:2: rule__STAddSubExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1"


    // $ANTLR start "rule__STAddSubExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7495:1: rule__STAddSubExpression__Group__1__Impl : ( ( rule__STAddSubExpression__Group_1__0 )* ) ;
    public final void rule__STAddSubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7499:1: ( ( ( rule__STAddSubExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:7500:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:7500:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:7501:2: ( rule__STAddSubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:7502:2: ( rule__STAddSubExpression__Group_1__0 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==PlusSign||LA73_0==HyphenMinus) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:7502:3: rule__STAddSubExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__STAddSubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:7511:1: rule__STAddSubExpression__Group_1__0 : rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 ;
    public final void rule__STAddSubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7515:1: ( rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:7516:2: rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STAddSubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:7523:1: rule__STAddSubExpression__Group_1__0__Impl : ( ( rule__STAddSubExpression__Group_1_0__0 ) ) ;
    public final void rule__STAddSubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7527:1: ( ( ( rule__STAddSubExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:7528:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:7528:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:7529:2: ( rule__STAddSubExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:7530:2: ( rule__STAddSubExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:7530:3: rule__STAddSubExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:7538:1: rule__STAddSubExpression__Group_1__1 : rule__STAddSubExpression__Group_1__1__Impl ;
    public final void rule__STAddSubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7542:1: ( rule__STAddSubExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:7543:2: rule__STAddSubExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:7549:1: rule__STAddSubExpression__Group_1__1__Impl : ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7553:1: ( ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:7554:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:7554:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:7555:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:7556:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:7556:3: rule__STAddSubExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:7565:1: rule__STAddSubExpression__Group_1_0__0 : rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 ;
    public final void rule__STAddSubExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7569:1: ( rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:7570:2: rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_60);
            rule__STAddSubExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:7577:1: rule__STAddSubExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAddSubExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7581:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:7582:1: ( () )
            {
            // InternalSTAlgorithmParser.g:7582:1: ( () )
            // InternalSTAlgorithmParser.g:7583:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:7584:2: ()
            // InternalSTAlgorithmParser.g:7584:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:7592:1: rule__STAddSubExpression__Group_1_0__1 : rule__STAddSubExpression__Group_1_0__1__Impl ;
    public final void rule__STAddSubExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7596:1: ( rule__STAddSubExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:7597:2: rule__STAddSubExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:7603:1: rule__STAddSubExpression__Group_1_0__1__Impl : ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7607:1: ( ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:7608:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:7608:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:7609:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:7610:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:7610:3: rule__STAddSubExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__0"
    // InternalSTAlgorithmParser.g:7619:1: rule__STMulDivModExpression__Group__0 : rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 ;
    public final void rule__STMulDivModExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7623:1: ( rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 )
            // InternalSTAlgorithmParser.g:7624:2: rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__STMulDivModExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0"


    // $ANTLR start "rule__STMulDivModExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7631:1: rule__STMulDivModExpression__Group__0__Impl : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7635:1: ( ( ruleSTPowerExpression ) )
            // InternalSTAlgorithmParser.g:7636:1: ( ruleSTPowerExpression )
            {
            // InternalSTAlgorithmParser.g:7636:1: ( ruleSTPowerExpression )
            // InternalSTAlgorithmParser.g:7637:2: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__1"
    // InternalSTAlgorithmParser.g:7646:1: rule__STMulDivModExpression__Group__1 : rule__STMulDivModExpression__Group__1__Impl ;
    public final void rule__STMulDivModExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7650:1: ( rule__STMulDivModExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:7651:2: rule__STMulDivModExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1"


    // $ANTLR start "rule__STMulDivModExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7657:1: rule__STMulDivModExpression__Group__1__Impl : ( ( rule__STMulDivModExpression__Group_1__0 )* ) ;
    public final void rule__STMulDivModExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7661:1: ( ( ( rule__STMulDivModExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:7662:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:7662:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:7663:2: ( rule__STMulDivModExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:7664:2: ( rule__STMulDivModExpression__Group_1__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==MOD||LA74_0==Asterisk||LA74_0==Solidus) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:7664:3: rule__STMulDivModExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_63);
            	    rule__STMulDivModExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:7673:1: rule__STMulDivModExpression__Group_1__0 : rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 ;
    public final void rule__STMulDivModExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7677:1: ( rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:7678:2: rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STMulDivModExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:7685:1: rule__STMulDivModExpression__Group_1__0__Impl : ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7689:1: ( ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:7690:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:7690:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:7691:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:7692:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:7692:3: rule__STMulDivModExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:7700:1: rule__STMulDivModExpression__Group_1__1 : rule__STMulDivModExpression__Group_1__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7704:1: ( rule__STMulDivModExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:7705:2: rule__STMulDivModExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:7711:1: rule__STMulDivModExpression__Group_1__1__Impl : ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7715:1: ( ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:7716:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:7716:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:7717:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:7718:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:7718:3: rule__STMulDivModExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:7727:1: rule__STMulDivModExpression__Group_1_0__0 : rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 ;
    public final void rule__STMulDivModExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7731:1: ( rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:7732:2: rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_62);
            rule__STMulDivModExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:7739:1: rule__STMulDivModExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STMulDivModExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7743:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:7744:1: ( () )
            {
            // InternalSTAlgorithmParser.g:7744:1: ( () )
            // InternalSTAlgorithmParser.g:7745:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:7746:2: ()
            // InternalSTAlgorithmParser.g:7746:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:7754:1: rule__STMulDivModExpression__Group_1_0__1 : rule__STMulDivModExpression__Group_1_0__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7758:1: ( rule__STMulDivModExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:7759:2: rule__STMulDivModExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:7765:1: rule__STMulDivModExpression__Group_1_0__1__Impl : ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7769:1: ( ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:7770:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:7770:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:7771:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:7772:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:7772:3: rule__STMulDivModExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__0"
    // InternalSTAlgorithmParser.g:7781:1: rule__STPowerExpression__Group__0 : rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 ;
    public final void rule__STPowerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7785:1: ( rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 )
            // InternalSTAlgorithmParser.g:7786:2: rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1
            {
            pushFollow(FOLLOW_64);
            rule__STPowerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0"


    // $ANTLR start "rule__STPowerExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7793:1: rule__STPowerExpression__Group__0__Impl : ( ruleSTUnaryExpression ) ;
    public final void rule__STPowerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7797:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTAlgorithmParser.g:7798:1: ( ruleSTUnaryExpression )
            {
            // InternalSTAlgorithmParser.g:7798:1: ( ruleSTUnaryExpression )
            // InternalSTAlgorithmParser.g:7799:2: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTUnaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTUnaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__1"
    // InternalSTAlgorithmParser.g:7808:1: rule__STPowerExpression__Group__1 : rule__STPowerExpression__Group__1__Impl ;
    public final void rule__STPowerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7812:1: ( rule__STPowerExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:7813:2: rule__STPowerExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1"


    // $ANTLR start "rule__STPowerExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7819:1: rule__STPowerExpression__Group__1__Impl : ( ( rule__STPowerExpression__Group_1__0 )* ) ;
    public final void rule__STPowerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7823:1: ( ( ( rule__STPowerExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:7824:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:7824:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:7825:2: ( rule__STPowerExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:7826:2: ( rule__STPowerExpression__Group_1__0 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==AsteriskAsterisk) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:7826:3: rule__STPowerExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_65);
            	    rule__STPowerExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:7835:1: rule__STPowerExpression__Group_1__0 : rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 ;
    public final void rule__STPowerExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7839:1: ( rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:7840:2: rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STPowerExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0"


    // $ANTLR start "rule__STPowerExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:7847:1: rule__STPowerExpression__Group_1__0__Impl : ( ( rule__STPowerExpression__Group_1_0__0 ) ) ;
    public final void rule__STPowerExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7851:1: ( ( ( rule__STPowerExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:7852:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:7852:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:7853:2: ( rule__STPowerExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:7854:2: ( rule__STPowerExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:7854:3: rule__STPowerExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:7862:1: rule__STPowerExpression__Group_1__1 : rule__STPowerExpression__Group_1__1__Impl ;
    public final void rule__STPowerExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7866:1: ( rule__STPowerExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:7867:2: rule__STPowerExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1"


    // $ANTLR start "rule__STPowerExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:7873:1: rule__STPowerExpression__Group_1__1__Impl : ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STPowerExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7877:1: ( ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:7878:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:7878:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:7879:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:7880:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:7880:3: rule__STPowerExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:7889:1: rule__STPowerExpression__Group_1_0__0 : rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 ;
    public final void rule__STPowerExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7893:1: ( rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:7894:2: rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_64);
            rule__STPowerExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:7901:1: rule__STPowerExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STPowerExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7905:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:7906:1: ( () )
            {
            // InternalSTAlgorithmParser.g:7906:1: ( () )
            // InternalSTAlgorithmParser.g:7907:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:7908:2: ()
            // InternalSTAlgorithmParser.g:7908:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:7916:1: rule__STPowerExpression__Group_1_0__1 : rule__STPowerExpression__Group_1_0__1__Impl ;
    public final void rule__STPowerExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7920:1: ( rule__STPowerExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:7921:2: rule__STPowerExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:7927:1: rule__STPowerExpression__Group_1_0__1__Impl : ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STPowerExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7931:1: ( ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:7932:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:7932:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:7933:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:7934:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:7934:3: rule__STPowerExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:7943:1: rule__STUnaryExpression__Group_1__0 : rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1 ;
    public final void rule__STUnaryExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7947:1: ( rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:7948:2: rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STUnaryExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__0"


    // $ANTLR start "rule__STUnaryExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:7955:1: rule__STUnaryExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STUnaryExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7959:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:7960:1: ( () )
            {
            // InternalSTAlgorithmParser.g:7960:1: ( () )
            // InternalSTAlgorithmParser.g:7961:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getSTUnaryExpressionAction_1_0()); 
            }
            // InternalSTAlgorithmParser.g:7962:2: ()
            // InternalSTAlgorithmParser.g:7962:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getSTUnaryExpressionAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:7970:1: rule__STUnaryExpression__Group_1__1 : rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2 ;
    public final void rule__STUnaryExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7974:1: ( rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2 )
            // InternalSTAlgorithmParser.g:7975:2: rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2
            {
            pushFollow(FOLLOW_19);
            rule__STUnaryExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__1"


    // $ANTLR start "rule__STUnaryExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:7982:1: rule__STUnaryExpression__Group_1__1__Impl : ( ( rule__STUnaryExpression__OpAssignment_1_1 ) ) ;
    public final void rule__STUnaryExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7986:1: ( ( ( rule__STUnaryExpression__OpAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:7987:1: ( ( rule__STUnaryExpression__OpAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:7987:1: ( ( rule__STUnaryExpression__OpAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:7988:2: ( rule__STUnaryExpression__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getOpAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:7989:2: ( rule__STUnaryExpression__OpAssignment_1_1 )
            // InternalSTAlgorithmParser.g:7989:3: rule__STUnaryExpression__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__2"
    // InternalSTAlgorithmParser.g:7997:1: rule__STUnaryExpression__Group_1__2 : rule__STUnaryExpression__Group_1__2__Impl ;
    public final void rule__STUnaryExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8001:1: ( rule__STUnaryExpression__Group_1__2__Impl )
            // InternalSTAlgorithmParser.g:8002:2: rule__STUnaryExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__2"


    // $ANTLR start "rule__STUnaryExpression__Group_1__2__Impl"
    // InternalSTAlgorithmParser.g:8008:1: rule__STUnaryExpression__Group_1__2__Impl : ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) ) ;
    public final void rule__STUnaryExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8012:1: ( ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) ) )
            // InternalSTAlgorithmParser.g:8013:1: ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) )
            {
            // InternalSTAlgorithmParser.g:8013:1: ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) )
            // InternalSTAlgorithmParser.g:8014:2: ( rule__STUnaryExpression__ExpressionAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getExpressionAssignment_1_2()); 
            }
            // InternalSTAlgorithmParser.g:8015:2: ( rule__STUnaryExpression__ExpressionAssignment_1_2 )
            // InternalSTAlgorithmParser.g:8015:3: rule__STUnaryExpression__ExpressionAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__ExpressionAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getExpressionAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group__0"
    // InternalSTAlgorithmParser.g:8024:1: rule__STAccessExpression__Group__0 : rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1 ;
    public final void rule__STAccessExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8028:1: ( rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1 )
            // InternalSTAlgorithmParser.g:8029:2: rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1
            {
            pushFollow(FOLLOW_66);
            rule__STAccessExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__0"


    // $ANTLR start "rule__STAccessExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:8036:1: rule__STAccessExpression__Group__0__Impl : ( ruleSTPrimaryExpression ) ;
    public final void rule__STAccessExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8040:1: ( ( ruleSTPrimaryExpression ) )
            // InternalSTAlgorithmParser.g:8041:1: ( ruleSTPrimaryExpression )
            {
            // InternalSTAlgorithmParser.g:8041:1: ( ruleSTPrimaryExpression )
            // InternalSTAlgorithmParser.g:8042:2: ruleSTPrimaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTPrimaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTPrimaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group__1"
    // InternalSTAlgorithmParser.g:8051:1: rule__STAccessExpression__Group__1 : rule__STAccessExpression__Group__1__Impl ;
    public final void rule__STAccessExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8055:1: ( rule__STAccessExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:8056:2: rule__STAccessExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__1"


    // $ANTLR start "rule__STAccessExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:8062:1: rule__STAccessExpression__Group__1__Impl : ( ( rule__STAccessExpression__Alternatives_1 )* ) ;
    public final void rule__STAccessExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8066:1: ( ( ( rule__STAccessExpression__Alternatives_1 )* ) )
            // InternalSTAlgorithmParser.g:8067:1: ( ( rule__STAccessExpression__Alternatives_1 )* )
            {
            // InternalSTAlgorithmParser.g:8067:1: ( ( rule__STAccessExpression__Alternatives_1 )* )
            // InternalSTAlgorithmParser.g:8068:2: ( rule__STAccessExpression__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getAlternatives_1()); 
            }
            // InternalSTAlgorithmParser.g:8069:2: ( rule__STAccessExpression__Alternatives_1 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==FullStop||LA76_0==LeftSquareBracket) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:8069:3: rule__STAccessExpression__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_67);
            	    rule__STAccessExpression__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:8078:1: rule__STAccessExpression__Group_1_0__0 : rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1 ;
    public final void rule__STAccessExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8082:1: ( rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:8083:2: rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_68);
            rule__STAccessExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:8090:1: rule__STAccessExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAccessExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8094:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:8095:1: ( () )
            {
            // InternalSTAlgorithmParser.g:8095:1: ( () )
            // InternalSTAlgorithmParser.g:8096:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTMemberAccessExpressionReceiverAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:8097:2: ()
            // InternalSTAlgorithmParser.g:8097:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTMemberAccessExpressionReceiverAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:8105:1: rule__STAccessExpression__Group_1_0__1 : rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2 ;
    public final void rule__STAccessExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8109:1: ( rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2 )
            // InternalSTAlgorithmParser.g:8110:2: rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2
            {
            pushFollow(FOLLOW_69);
            rule__STAccessExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:8117:1: rule__STAccessExpression__Group_1_0__1__Impl : ( FullStop ) ;
    public final void rule__STAccessExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8121:1: ( ( FullStop ) )
            // InternalSTAlgorithmParser.g:8122:1: ( FullStop )
            {
            // InternalSTAlgorithmParser.g:8122:1: ( FullStop )
            // InternalSTAlgorithmParser.g:8123:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getFullStopKeyword_1_0_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getFullStopKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__2"
    // InternalSTAlgorithmParser.g:8132:1: rule__STAccessExpression__Group_1_0__2 : rule__STAccessExpression__Group_1_0__2__Impl ;
    public final void rule__STAccessExpression__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8136:1: ( rule__STAccessExpression__Group_1_0__2__Impl )
            // InternalSTAlgorithmParser.g:8137:2: rule__STAccessExpression__Group_1_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__2"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__2__Impl"
    // InternalSTAlgorithmParser.g:8143:1: rule__STAccessExpression__Group_1_0__2__Impl : ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) ) ;
    public final void rule__STAccessExpression__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8147:1: ( ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) ) )
            // InternalSTAlgorithmParser.g:8148:1: ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) )
            {
            // InternalSTAlgorithmParser.g:8148:1: ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) )
            // InternalSTAlgorithmParser.g:8149:2: ( rule__STAccessExpression__MemberAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getMemberAssignment_1_0_2()); 
            }
            // InternalSTAlgorithmParser.g:8150:2: ( rule__STAccessExpression__MemberAssignment_1_0_2 )
            // InternalSTAlgorithmParser.g:8150:3: rule__STAccessExpression__MemberAssignment_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__MemberAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getMemberAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__0"
    // InternalSTAlgorithmParser.g:8159:1: rule__STAccessExpression__Group_1_1__0 : rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1 ;
    public final void rule__STAccessExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8163:1: ( rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1 )
            // InternalSTAlgorithmParser.g:8164:2: rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_66);
            rule__STAccessExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__0__Impl"
    // InternalSTAlgorithmParser.g:8171:1: rule__STAccessExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__STAccessExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8175:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:8176:1: ( () )
            {
            // InternalSTAlgorithmParser.g:8176:1: ( () )
            // InternalSTAlgorithmParser.g:8177:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTArrayAccessExpressionReceiverAction_1_1_0()); 
            }
            // InternalSTAlgorithmParser.g:8178:2: ()
            // InternalSTAlgorithmParser.g:8178:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTArrayAccessExpressionReceiverAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__1"
    // InternalSTAlgorithmParser.g:8186:1: rule__STAccessExpression__Group_1_1__1 : rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2 ;
    public final void rule__STAccessExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8190:1: ( rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2 )
            // InternalSTAlgorithmParser.g:8191:2: rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2
            {
            pushFollow(FOLLOW_19);
            rule__STAccessExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__1__Impl"
    // InternalSTAlgorithmParser.g:8198:1: rule__STAccessExpression__Group_1_1__1__Impl : ( LeftSquareBracket ) ;
    public final void rule__STAccessExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8202:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:8203:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:8203:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:8204:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__2"
    // InternalSTAlgorithmParser.g:8213:1: rule__STAccessExpression__Group_1_1__2 : rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3 ;
    public final void rule__STAccessExpression__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8217:1: ( rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3 )
            // InternalSTAlgorithmParser.g:8218:2: rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3
            {
            pushFollow(FOLLOW_20);
            rule__STAccessExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__2"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__2__Impl"
    // InternalSTAlgorithmParser.g:8225:1: rule__STAccessExpression__Group_1_1__2__Impl : ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) ) ;
    public final void rule__STAccessExpression__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8229:1: ( ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) ) )
            // InternalSTAlgorithmParser.g:8230:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) )
            {
            // InternalSTAlgorithmParser.g:8230:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) )
            // InternalSTAlgorithmParser.g:8231:2: ( rule__STAccessExpression__IndexAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_2()); 
            }
            // InternalSTAlgorithmParser.g:8232:2: ( rule__STAccessExpression__IndexAssignment_1_1_2 )
            // InternalSTAlgorithmParser.g:8232:3: rule__STAccessExpression__IndexAssignment_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__IndexAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__3"
    // InternalSTAlgorithmParser.g:8240:1: rule__STAccessExpression__Group_1_1__3 : rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4 ;
    public final void rule__STAccessExpression__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8244:1: ( rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4 )
            // InternalSTAlgorithmParser.g:8245:2: rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4
            {
            pushFollow(FOLLOW_20);
            rule__STAccessExpression__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__3"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__3__Impl"
    // InternalSTAlgorithmParser.g:8252:1: rule__STAccessExpression__Group_1_1__3__Impl : ( ( rule__STAccessExpression__Group_1_1_3__0 )* ) ;
    public final void rule__STAccessExpression__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8256:1: ( ( ( rule__STAccessExpression__Group_1_1_3__0 )* ) )
            // InternalSTAlgorithmParser.g:8257:1: ( ( rule__STAccessExpression__Group_1_1_3__0 )* )
            {
            // InternalSTAlgorithmParser.g:8257:1: ( ( rule__STAccessExpression__Group_1_1_3__0 )* )
            // InternalSTAlgorithmParser.g:8258:2: ( rule__STAccessExpression__Group_1_1_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1_3()); 
            }
            // InternalSTAlgorithmParser.g:8259:2: ( rule__STAccessExpression__Group_1_1_3__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==Comma) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:8259:3: rule__STAccessExpression__Group_1_1_3__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__STAccessExpression__Group_1_1_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__3__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__4"
    // InternalSTAlgorithmParser.g:8267:1: rule__STAccessExpression__Group_1_1__4 : rule__STAccessExpression__Group_1_1__4__Impl ;
    public final void rule__STAccessExpression__Group_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8271:1: ( rule__STAccessExpression__Group_1_1__4__Impl )
            // InternalSTAlgorithmParser.g:8272:2: rule__STAccessExpression__Group_1_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__4"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__4__Impl"
    // InternalSTAlgorithmParser.g:8278:1: rule__STAccessExpression__Group_1_1__4__Impl : ( RightSquareBracket ) ;
    public final void rule__STAccessExpression__Group_1_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8282:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:8283:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:8283:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:8284:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getRightSquareBracketKeyword_1_1_4()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getRightSquareBracketKeyword_1_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__4__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__0"
    // InternalSTAlgorithmParser.g:8294:1: rule__STAccessExpression__Group_1_1_3__0 : rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1 ;
    public final void rule__STAccessExpression__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8298:1: ( rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1 )
            // InternalSTAlgorithmParser.g:8299:2: rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1
            {
            pushFollow(FOLLOW_19);
            rule__STAccessExpression__Group_1_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__0__Impl"
    // InternalSTAlgorithmParser.g:8306:1: rule__STAccessExpression__Group_1_1_3__0__Impl : ( Comma ) ;
    public final void rule__STAccessExpression__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8310:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:8311:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:8311:1: ( Comma )
            // InternalSTAlgorithmParser.g:8312:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getCommaKeyword_1_1_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getCommaKeyword_1_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__1"
    // InternalSTAlgorithmParser.g:8321:1: rule__STAccessExpression__Group_1_1_3__1 : rule__STAccessExpression__Group_1_1_3__1__Impl ;
    public final void rule__STAccessExpression__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8325:1: ( rule__STAccessExpression__Group_1_1_3__1__Impl )
            // InternalSTAlgorithmParser.g:8326:2: rule__STAccessExpression__Group_1_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__1__Impl"
    // InternalSTAlgorithmParser.g:8332:1: rule__STAccessExpression__Group_1_1_3__1__Impl : ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) ) ;
    public final void rule__STAccessExpression__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8336:1: ( ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) ) )
            // InternalSTAlgorithmParser.g:8337:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) )
            {
            // InternalSTAlgorithmParser.g:8337:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) )
            // InternalSTAlgorithmParser.g:8338:2: ( rule__STAccessExpression__IndexAssignment_1_1_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_3_1()); 
            }
            // InternalSTAlgorithmParser.g:8339:2: ( rule__STAccessExpression__IndexAssignment_1_1_3_1 )
            // InternalSTAlgorithmParser.g:8339:3: rule__STAccessExpression__IndexAssignment_1_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__IndexAssignment_1_1_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__0"
    // InternalSTAlgorithmParser.g:8348:1: rule__STPrimaryExpression__Group_0__0 : rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1 ;
    public final void rule__STPrimaryExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8352:1: ( rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1 )
            // InternalSTAlgorithmParser.g:8353:2: rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1
            {
            pushFollow(FOLLOW_19);
            rule__STPrimaryExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__0"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__0__Impl"
    // InternalSTAlgorithmParser.g:8360:1: rule__STPrimaryExpression__Group_0__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STPrimaryExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8364:1: ( ( LeftParenthesis ) )
            // InternalSTAlgorithmParser.g:8365:1: ( LeftParenthesis )
            {
            // InternalSTAlgorithmParser.g:8365:1: ( LeftParenthesis )
            // InternalSTAlgorithmParser.g:8366:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__0__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__1"
    // InternalSTAlgorithmParser.g:8375:1: rule__STPrimaryExpression__Group_0__1 : rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2 ;
    public final void rule__STPrimaryExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8379:1: ( rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2 )
            // InternalSTAlgorithmParser.g:8380:2: rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2
            {
            pushFollow(FOLLOW_70);
            rule__STPrimaryExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__1"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__1__Impl"
    // InternalSTAlgorithmParser.g:8387:1: rule__STPrimaryExpression__Group_0__1__Impl : ( ruleSTExpression ) ;
    public final void rule__STPrimaryExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8391:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:8392:1: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:8392:1: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:8393:2: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__1__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__2"
    // InternalSTAlgorithmParser.g:8402:1: rule__STPrimaryExpression__Group_0__2 : rule__STPrimaryExpression__Group_0__2__Impl ;
    public final void rule__STPrimaryExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8406:1: ( rule__STPrimaryExpression__Group_0__2__Impl )
            // InternalSTAlgorithmParser.g:8407:2: rule__STPrimaryExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__2"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__2__Impl"
    // InternalSTAlgorithmParser.g:8413:1: rule__STPrimaryExpression__Group_0__2__Impl : ( RightParenthesis ) ;
    public final void rule__STPrimaryExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8417:1: ( ( RightParenthesis ) )
            // InternalSTAlgorithmParser.g:8418:1: ( RightParenthesis )
            {
            // InternalSTAlgorithmParser.g:8418:1: ( RightParenthesis )
            // InternalSTAlgorithmParser.g:8419:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__0"
    // InternalSTAlgorithmParser.g:8429:1: rule__STFeatureExpression__Group__0 : rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1 ;
    public final void rule__STFeatureExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8433:1: ( rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1 )
            // InternalSTAlgorithmParser.g:8434:2: rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__STFeatureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__0"


    // $ANTLR start "rule__STFeatureExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:8441:1: rule__STFeatureExpression__Group__0__Impl : ( () ) ;
    public final void rule__STFeatureExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8445:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:8446:1: ( () )
            {
            // InternalSTAlgorithmParser.g:8446:1: ( () )
            // InternalSTAlgorithmParser.g:8447:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getSTFeatureExpressionAction_0()); 
            }
            // InternalSTAlgorithmParser.g:8448:2: ()
            // InternalSTAlgorithmParser.g:8448:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getSTFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__1"
    // InternalSTAlgorithmParser.g:8456:1: rule__STFeatureExpression__Group__1 : rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2 ;
    public final void rule__STFeatureExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8460:1: ( rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2 )
            // InternalSTAlgorithmParser.g:8461:2: rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2
            {
            pushFollow(FOLLOW_25);
            rule__STFeatureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__1"


    // $ANTLR start "rule__STFeatureExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:8468:1: rule__STFeatureExpression__Group__1__Impl : ( ( rule__STFeatureExpression__FeatureAssignment_1 ) ) ;
    public final void rule__STFeatureExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8472:1: ( ( ( rule__STFeatureExpression__FeatureAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:8473:1: ( ( rule__STFeatureExpression__FeatureAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:8473:1: ( ( rule__STFeatureExpression__FeatureAssignment_1 ) )
            // InternalSTAlgorithmParser.g:8474:2: ( rule__STFeatureExpression__FeatureAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:8475:2: ( rule__STFeatureExpression__FeatureAssignment_1 )
            // InternalSTAlgorithmParser.g:8475:3: rule__STFeatureExpression__FeatureAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__FeatureAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__2"
    // InternalSTAlgorithmParser.g:8483:1: rule__STFeatureExpression__Group__2 : rule__STFeatureExpression__Group__2__Impl ;
    public final void rule__STFeatureExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8487:1: ( rule__STFeatureExpression__Group__2__Impl )
            // InternalSTAlgorithmParser.g:8488:2: rule__STFeatureExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__2"


    // $ANTLR start "rule__STFeatureExpression__Group__2__Impl"
    // InternalSTAlgorithmParser.g:8494:1: rule__STFeatureExpression__Group__2__Impl : ( ( rule__STFeatureExpression__Group_2__0 )? ) ;
    public final void rule__STFeatureExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8498:1: ( ( ( rule__STFeatureExpression__Group_2__0 )? ) )
            // InternalSTAlgorithmParser.g:8499:1: ( ( rule__STFeatureExpression__Group_2__0 )? )
            {
            // InternalSTAlgorithmParser.g:8499:1: ( ( rule__STFeatureExpression__Group_2__0 )? )
            // InternalSTAlgorithmParser.g:8500:2: ( rule__STFeatureExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2()); 
            }
            // InternalSTAlgorithmParser.g:8501:2: ( rule__STFeatureExpression__Group_2__0 )?
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalSTAlgorithmParser.g:8501:3: rule__STFeatureExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFeatureExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__0"
    // InternalSTAlgorithmParser.g:8510:1: rule__STFeatureExpression__Group_2__0 : rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1 ;
    public final void rule__STFeatureExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8514:1: ( rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1 )
            // InternalSTAlgorithmParser.g:8515:2: rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1
            {
            pushFollow(FOLLOW_71);
            rule__STFeatureExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2__0__Impl"
    // InternalSTAlgorithmParser.g:8522:1: rule__STFeatureExpression__Group_2__0__Impl : ( ( LeftParenthesis ) ) ;
    public final void rule__STFeatureExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8526:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTAlgorithmParser.g:8527:1: ( ( LeftParenthesis ) )
            {
            // InternalSTAlgorithmParser.g:8527:1: ( ( LeftParenthesis ) )
            // InternalSTAlgorithmParser.g:8528:2: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getLeftParenthesisKeyword_2_0()); 
            }
            // InternalSTAlgorithmParser.g:8529:2: ( LeftParenthesis )
            // InternalSTAlgorithmParser.g:8529:3: LeftParenthesis
            {
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getLeftParenthesisKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__1"
    // InternalSTAlgorithmParser.g:8537:1: rule__STFeatureExpression__Group_2__1 : rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2 ;
    public final void rule__STFeatureExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8541:1: ( rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2 )
            // InternalSTAlgorithmParser.g:8542:2: rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2
            {
            pushFollow(FOLLOW_71);
            rule__STFeatureExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2__1__Impl"
    // InternalSTAlgorithmParser.g:8549:1: rule__STFeatureExpression__Group_2__1__Impl : ( ( rule__STFeatureExpression__Group_2_1__0 )? ) ;
    public final void rule__STFeatureExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8553:1: ( ( ( rule__STFeatureExpression__Group_2_1__0 )? ) )
            // InternalSTAlgorithmParser.g:8554:1: ( ( rule__STFeatureExpression__Group_2_1__0 )? )
            {
            // InternalSTAlgorithmParser.g:8554:1: ( ( rule__STFeatureExpression__Group_2_1__0 )? )
            // InternalSTAlgorithmParser.g:8555:2: ( rule__STFeatureExpression__Group_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1()); 
            }
            // InternalSTAlgorithmParser.g:8556:2: ( rule__STFeatureExpression__Group_2_1__0 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( ((LA79_0>=LDATE_AND_TIME && LA79_0<=DATE_AND_TIME)||(LA79_0>=LTIME_OF_DAY && LA79_0<=TIME_OF_DAY)||LA79_0==WSTRING||LA79_0==STRING||LA79_0==DWORD||(LA79_0>=FALSE && LA79_0<=ULINT)||(LA79_0>=USINT && LA79_0<=WCHAR)||(LA79_0>=BOOL && LA79_0<=BYTE)||(LA79_0>=CHAR && LA79_0<=DINT)||(LA79_0>=LINT && LA79_0<=SINT)||(LA79_0>=TIME && LA79_0<=WORD)||(LA79_0>=INT && LA79_0<=LDT)||(LA79_0>=NOT && LA79_0<=TOD)||LA79_0==DT||(LA79_0>=LD && LA79_0<=LT)||LA79_0==LeftParenthesis||LA79_0==PlusSign||LA79_0==HyphenMinus||LA79_0==D||LA79_0==T||(LA79_0>=RULE_NON_DECIMAL && LA79_0<=RULE_INT)||(LA79_0>=RULE_ID && LA79_0<=RULE_WSTRING)) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSTAlgorithmParser.g:8556:3: rule__STFeatureExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFeatureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__2"
    // InternalSTAlgorithmParser.g:8564:1: rule__STFeatureExpression__Group_2__2 : rule__STFeatureExpression__Group_2__2__Impl ;
    public final void rule__STFeatureExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8568:1: ( rule__STFeatureExpression__Group_2__2__Impl )
            // InternalSTAlgorithmParser.g:8569:2: rule__STFeatureExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__2"


    // $ANTLR start "rule__STFeatureExpression__Group_2__2__Impl"
    // InternalSTAlgorithmParser.g:8575:1: rule__STFeatureExpression__Group_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STFeatureExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8579:1: ( ( RightParenthesis ) )
            // InternalSTAlgorithmParser.g:8580:1: ( RightParenthesis )
            {
            // InternalSTAlgorithmParser.g:8580:1: ( RightParenthesis )
            // InternalSTAlgorithmParser.g:8581:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__0"
    // InternalSTAlgorithmParser.g:8591:1: rule__STFeatureExpression__Group_2_1__0 : rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1 ;
    public final void rule__STFeatureExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8595:1: ( rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1 )
            // InternalSTAlgorithmParser.g:8596:2: rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_72);
            rule__STFeatureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__0__Impl"
    // InternalSTAlgorithmParser.g:8603:1: rule__STFeatureExpression__Group_2_1__0__Impl : ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) ) ;
    public final void rule__STFeatureExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8607:1: ( ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) ) )
            // InternalSTAlgorithmParser.g:8608:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) )
            {
            // InternalSTAlgorithmParser.g:8608:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) )
            // InternalSTAlgorithmParser.g:8609:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }
            // InternalSTAlgorithmParser.g:8610:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_0 )
            // InternalSTAlgorithmParser.g:8610:3: rule__STFeatureExpression__ParametersAssignment_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__ParametersAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__1"
    // InternalSTAlgorithmParser.g:8618:1: rule__STFeatureExpression__Group_2_1__1 : rule__STFeatureExpression__Group_2_1__1__Impl ;
    public final void rule__STFeatureExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8622:1: ( rule__STFeatureExpression__Group_2_1__1__Impl )
            // InternalSTAlgorithmParser.g:8623:2: rule__STFeatureExpression__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__1__Impl"
    // InternalSTAlgorithmParser.g:8629:1: rule__STFeatureExpression__Group_2_1__1__Impl : ( ( rule__STFeatureExpression__Group_2_1_1__0 )* ) ;
    public final void rule__STFeatureExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8633:1: ( ( ( rule__STFeatureExpression__Group_2_1_1__0 )* ) )
            // InternalSTAlgorithmParser.g:8634:1: ( ( rule__STFeatureExpression__Group_2_1_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:8634:1: ( ( rule__STFeatureExpression__Group_2_1_1__0 )* )
            // InternalSTAlgorithmParser.g:8635:2: ( rule__STFeatureExpression__Group_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1_1()); 
            }
            // InternalSTAlgorithmParser.g:8636:2: ( rule__STFeatureExpression__Group_2_1_1__0 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==Comma) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:8636:3: rule__STFeatureExpression__Group_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__STFeatureExpression__Group_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__0"
    // InternalSTAlgorithmParser.g:8645:1: rule__STFeatureExpression__Group_2_1_1__0 : rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1 ;
    public final void rule__STFeatureExpression__Group_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8649:1: ( rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1 )
            // InternalSTAlgorithmParser.g:8650:2: rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STFeatureExpression__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__0__Impl"
    // InternalSTAlgorithmParser.g:8657:1: rule__STFeatureExpression__Group_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STFeatureExpression__Group_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8661:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:8662:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:8662:1: ( Comma )
            // InternalSTAlgorithmParser.g:8663:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__1"
    // InternalSTAlgorithmParser.g:8672:1: rule__STFeatureExpression__Group_2_1_1__1 : rule__STFeatureExpression__Group_2_1_1__1__Impl ;
    public final void rule__STFeatureExpression__Group_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8676:1: ( rule__STFeatureExpression__Group_2_1_1__1__Impl )
            // InternalSTAlgorithmParser.g:8677:2: rule__STFeatureExpression__Group_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__1__Impl"
    // InternalSTAlgorithmParser.g:8683:1: rule__STFeatureExpression__Group_2_1_1__1__Impl : ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) ) ;
    public final void rule__STFeatureExpression__Group_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8687:1: ( ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) ) )
            // InternalSTAlgorithmParser.g:8688:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:8688:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            // InternalSTAlgorithmParser.g:8689:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }
            // InternalSTAlgorithmParser.g:8690:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 )
            // InternalSTAlgorithmParser.g:8690:3: rule__STFeatureExpression__ParametersAssignment_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__ParametersAssignment_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__0"
    // InternalSTAlgorithmParser.g:8699:1: rule__STMultibitPartialExpression__Group__0 : rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1 ;
    public final void rule__STMultibitPartialExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8703:1: ( rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1 )
            // InternalSTAlgorithmParser.g:8704:2: rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__STMultibitPartialExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__0"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:8711:1: rule__STMultibitPartialExpression__Group__0__Impl : ( () ) ;
    public final void rule__STMultibitPartialExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8715:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:8716:1: ( () )
            {
            // InternalSTAlgorithmParser.g:8716:1: ( () )
            // InternalSTAlgorithmParser.g:8717:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSTMultibitPartialExpressionAction_0()); 
            }
            // InternalSTAlgorithmParser.g:8718:2: ()
            // InternalSTAlgorithmParser.g:8718:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSTMultibitPartialExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__0__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__1"
    // InternalSTAlgorithmParser.g:8726:1: rule__STMultibitPartialExpression__Group__1 : rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2 ;
    public final void rule__STMultibitPartialExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8730:1: ( rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2 )
            // InternalSTAlgorithmParser.g:8731:2: rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2
            {
            pushFollow(FOLLOW_69);
            rule__STMultibitPartialExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__1"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:8738:1: rule__STMultibitPartialExpression__Group__1__Impl : ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? ) ;
    public final void rule__STMultibitPartialExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8742:1: ( ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? ) )
            // InternalSTAlgorithmParser.g:8743:1: ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? )
            {
            // InternalSTAlgorithmParser.g:8743:1: ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? )
            // InternalSTAlgorithmParser.g:8744:2: ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:8745:2: ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( ((LA81_0>=B && LA81_0<=X)) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSTAlgorithmParser.g:8745:3: rule__STMultibitPartialExpression__SpecifierAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__SpecifierAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__2"
    // InternalSTAlgorithmParser.g:8753:1: rule__STMultibitPartialExpression__Group__2 : rule__STMultibitPartialExpression__Group__2__Impl ;
    public final void rule__STMultibitPartialExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8757:1: ( rule__STMultibitPartialExpression__Group__2__Impl )
            // InternalSTAlgorithmParser.g:8758:2: rule__STMultibitPartialExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__2"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__2__Impl"
    // InternalSTAlgorithmParser.g:8764:1: rule__STMultibitPartialExpression__Group__2__Impl : ( ( rule__STMultibitPartialExpression__Alternatives_2 ) ) ;
    public final void rule__STMultibitPartialExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8768:1: ( ( ( rule__STMultibitPartialExpression__Alternatives_2 ) ) )
            // InternalSTAlgorithmParser.g:8769:1: ( ( rule__STMultibitPartialExpression__Alternatives_2 ) )
            {
            // InternalSTAlgorithmParser.g:8769:1: ( ( rule__STMultibitPartialExpression__Alternatives_2 ) )
            // InternalSTAlgorithmParser.g:8770:2: ( rule__STMultibitPartialExpression__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getAlternatives_2()); 
            }
            // InternalSTAlgorithmParser.g:8771:2: ( rule__STMultibitPartialExpression__Alternatives_2 )
            // InternalSTAlgorithmParser.g:8771:3: rule__STMultibitPartialExpression__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__2__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__0"
    // InternalSTAlgorithmParser.g:8780:1: rule__STMultibitPartialExpression__Group_2_1__0 : rule__STMultibitPartialExpression__Group_2_1__0__Impl rule__STMultibitPartialExpression__Group_2_1__1 ;
    public final void rule__STMultibitPartialExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8784:1: ( rule__STMultibitPartialExpression__Group_2_1__0__Impl rule__STMultibitPartialExpression__Group_2_1__1 )
            // InternalSTAlgorithmParser.g:8785:2: rule__STMultibitPartialExpression__Group_2_1__0__Impl rule__STMultibitPartialExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STMultibitPartialExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__0"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__0__Impl"
    // InternalSTAlgorithmParser.g:8792:1: rule__STMultibitPartialExpression__Group_2_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STMultibitPartialExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8796:1: ( ( LeftParenthesis ) )
            // InternalSTAlgorithmParser.g:8797:1: ( LeftParenthesis )
            {
            // InternalSTAlgorithmParser.g:8797:1: ( LeftParenthesis )
            // InternalSTAlgorithmParser.g:8798:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getLeftParenthesisKeyword_2_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getLeftParenthesisKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__1"
    // InternalSTAlgorithmParser.g:8807:1: rule__STMultibitPartialExpression__Group_2_1__1 : rule__STMultibitPartialExpression__Group_2_1__1__Impl rule__STMultibitPartialExpression__Group_2_1__2 ;
    public final void rule__STMultibitPartialExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8811:1: ( rule__STMultibitPartialExpression__Group_2_1__1__Impl rule__STMultibitPartialExpression__Group_2_1__2 )
            // InternalSTAlgorithmParser.g:8812:2: rule__STMultibitPartialExpression__Group_2_1__1__Impl rule__STMultibitPartialExpression__Group_2_1__2
            {
            pushFollow(FOLLOW_70);
            rule__STMultibitPartialExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__1"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__1__Impl"
    // InternalSTAlgorithmParser.g:8819:1: rule__STMultibitPartialExpression__Group_2_1__1__Impl : ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) ) ;
    public final void rule__STMultibitPartialExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8823:1: ( ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) ) )
            // InternalSTAlgorithmParser.g:8824:1: ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:8824:1: ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) )
            // InternalSTAlgorithmParser.g:8825:2: ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionAssignment_2_1_1()); 
            }
            // InternalSTAlgorithmParser.g:8826:2: ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 )
            // InternalSTAlgorithmParser.g:8826:3: rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__2"
    // InternalSTAlgorithmParser.g:8834:1: rule__STMultibitPartialExpression__Group_2_1__2 : rule__STMultibitPartialExpression__Group_2_1__2__Impl ;
    public final void rule__STMultibitPartialExpression__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8838:1: ( rule__STMultibitPartialExpression__Group_2_1__2__Impl )
            // InternalSTAlgorithmParser.g:8839:2: rule__STMultibitPartialExpression__Group_2_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__2"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__2__Impl"
    // InternalSTAlgorithmParser.g:8845:1: rule__STMultibitPartialExpression__Group_2_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__STMultibitPartialExpression__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8849:1: ( ( RightParenthesis ) )
            // InternalSTAlgorithmParser.g:8850:1: ( RightParenthesis )
            {
            // InternalSTAlgorithmParser.g:8850:1: ( RightParenthesis )
            // InternalSTAlgorithmParser.g:8851:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getRightParenthesisKeyword_2_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getRightParenthesisKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__2__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group__0"
    // InternalSTAlgorithmParser.g:8861:1: rule__STNumericLiteral__Group__0 : rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1 ;
    public final void rule__STNumericLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8865:1: ( rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1 )
            // InternalSTAlgorithmParser.g:8866:2: rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__STNumericLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__0"


    // $ANTLR start "rule__STNumericLiteral__Group__0__Impl"
    // InternalSTAlgorithmParser.g:8873:1: rule__STNumericLiteral__Group__0__Impl : ( ( rule__STNumericLiteral__Group_0__0 )? ) ;
    public final void rule__STNumericLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8877:1: ( ( ( rule__STNumericLiteral__Group_0__0 )? ) )
            // InternalSTAlgorithmParser.g:8878:1: ( ( rule__STNumericLiteral__Group_0__0 )? )
            {
            // InternalSTAlgorithmParser.g:8878:1: ( ( rule__STNumericLiteral__Group_0__0 )? )
            // InternalSTAlgorithmParser.g:8879:2: ( rule__STNumericLiteral__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getGroup_0()); 
            }
            // InternalSTAlgorithmParser.g:8880:2: ( rule__STNumericLiteral__Group_0__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==DWORD||LA82_0==LREAL||(LA82_0>=LWORD && LA82_0<=ULINT)||LA82_0==USINT||(LA82_0>=BOOL && LA82_0<=BYTE)||LA82_0==DINT||LA82_0==LINT||(LA82_0>=REAL && LA82_0<=SINT)||(LA82_0>=UINT && LA82_0<=WORD)||LA82_0==INT) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSTAlgorithmParser.g:8880:3: rule__STNumericLiteral__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STNumericLiteral__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__0__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group__1"
    // InternalSTAlgorithmParser.g:8888:1: rule__STNumericLiteral__Group__1 : rule__STNumericLiteral__Group__1__Impl ;
    public final void rule__STNumericLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8892:1: ( rule__STNumericLiteral__Group__1__Impl )
            // InternalSTAlgorithmParser.g:8893:2: rule__STNumericLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__1"


    // $ANTLR start "rule__STNumericLiteral__Group__1__Impl"
    // InternalSTAlgorithmParser.g:8899:1: rule__STNumericLiteral__Group__1__Impl : ( ( rule__STNumericLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STNumericLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8903:1: ( ( ( rule__STNumericLiteral__ValueAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:8904:1: ( ( rule__STNumericLiteral__ValueAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:8904:1: ( ( rule__STNumericLiteral__ValueAssignment_1 ) )
            // InternalSTAlgorithmParser.g:8905:2: ( rule__STNumericLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:8906:2: ( rule__STNumericLiteral__ValueAssignment_1 )
            // InternalSTAlgorithmParser.g:8906:3: rule__STNumericLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__1__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_0__0"
    // InternalSTAlgorithmParser.g:8915:1: rule__STNumericLiteral__Group_0__0 : rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1 ;
    public final void rule__STNumericLiteral__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8919:1: ( rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1 )
            // InternalSTAlgorithmParser.g:8920:2: rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1
            {
            pushFollow(FOLLOW_74);
            rule__STNumericLiteral__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__0"


    // $ANTLR start "rule__STNumericLiteral__Group_0__0__Impl"
    // InternalSTAlgorithmParser.g:8927:1: rule__STNumericLiteral__Group_0__0__Impl : ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) ) ;
    public final void rule__STNumericLiteral__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8931:1: ( ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) ) )
            // InternalSTAlgorithmParser.g:8932:1: ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) )
            {
            // InternalSTAlgorithmParser.g:8932:1: ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) )
            // InternalSTAlgorithmParser.g:8933:2: ( rule__STNumericLiteral__TypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_0_0()); 
            }
            // InternalSTAlgorithmParser.g:8934:2: ( rule__STNumericLiteral__TypeAssignment_0_0 )
            // InternalSTAlgorithmParser.g:8934:3: rule__STNumericLiteral__TypeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__TypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__0__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_0__1"
    // InternalSTAlgorithmParser.g:8942:1: rule__STNumericLiteral__Group_0__1 : rule__STNumericLiteral__Group_0__1__Impl ;
    public final void rule__STNumericLiteral__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8946:1: ( rule__STNumericLiteral__Group_0__1__Impl )
            // InternalSTAlgorithmParser.g:8947:2: rule__STNumericLiteral__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__1"


    // $ANTLR start "rule__STNumericLiteral__Group_0__1__Impl"
    // InternalSTAlgorithmParser.g:8953:1: rule__STNumericLiteral__Group_0__1__Impl : ( NumberSign ) ;
    public final void rule__STNumericLiteral__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8957:1: ( ( NumberSign ) )
            // InternalSTAlgorithmParser.g:8958:1: ( NumberSign )
            {
            // InternalSTAlgorithmParser.g:8958:1: ( NumberSign )
            // InternalSTAlgorithmParser.g:8959:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getNumberSignKeyword_0_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getNumberSignKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__1__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__0"
    // InternalSTAlgorithmParser.g:8969:1: rule__STDateLiteral__Group__0 : rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1 ;
    public final void rule__STDateLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8973:1: ( rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1 )
            // InternalSTAlgorithmParser.g:8974:2: rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__STDateLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__0"


    // $ANTLR start "rule__STDateLiteral__Group__0__Impl"
    // InternalSTAlgorithmParser.g:8981:1: rule__STDateLiteral__Group__0__Impl : ( ( rule__STDateLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STDateLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8985:1: ( ( ( rule__STDateLiteral__TypeAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:8986:1: ( ( rule__STDateLiteral__TypeAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:8986:1: ( ( rule__STDateLiteral__TypeAssignment_0 ) )
            // InternalSTAlgorithmParser.g:8987:2: ( rule__STDateLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:8988:2: ( rule__STDateLiteral__TypeAssignment_0 )
            // InternalSTAlgorithmParser.g:8988:3: rule__STDateLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__0__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__1"
    // InternalSTAlgorithmParser.g:8996:1: rule__STDateLiteral__Group__1 : rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2 ;
    public final void rule__STDateLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9000:1: ( rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2 )
            // InternalSTAlgorithmParser.g:9001:2: rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__STDateLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__1"


    // $ANTLR start "rule__STDateLiteral__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9008:1: rule__STDateLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STDateLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9012:1: ( ( NumberSign ) )
            // InternalSTAlgorithmParser.g:9013:1: ( NumberSign )
            {
            // InternalSTAlgorithmParser.g:9013:1: ( NumberSign )
            // InternalSTAlgorithmParser.g:9014:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__2"
    // InternalSTAlgorithmParser.g:9023:1: rule__STDateLiteral__Group__2 : rule__STDateLiteral__Group__2__Impl ;
    public final void rule__STDateLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9027:1: ( rule__STDateLiteral__Group__2__Impl )
            // InternalSTAlgorithmParser.g:9028:2: rule__STDateLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__2"


    // $ANTLR start "rule__STDateLiteral__Group__2__Impl"
    // InternalSTAlgorithmParser.g:9034:1: rule__STDateLiteral__Group__2__Impl : ( ( rule__STDateLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STDateLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9038:1: ( ( ( rule__STDateLiteral__ValueAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:9039:1: ( ( rule__STDateLiteral__ValueAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:9039:1: ( ( rule__STDateLiteral__ValueAssignment_2 ) )
            // InternalSTAlgorithmParser.g:9040:2: ( rule__STDateLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:9041:2: ( rule__STDateLiteral__ValueAssignment_2 )
            // InternalSTAlgorithmParser.g:9041:3: rule__STDateLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__2__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__0"
    // InternalSTAlgorithmParser.g:9050:1: rule__STTimeLiteral__Group__0 : rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1 ;
    public final void rule__STTimeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9054:1: ( rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1 )
            // InternalSTAlgorithmParser.g:9055:2: rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__STTimeLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__0"


    // $ANTLR start "rule__STTimeLiteral__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9062:1: rule__STTimeLiteral__Group__0__Impl : ( ( rule__STTimeLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STTimeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9066:1: ( ( ( rule__STTimeLiteral__TypeAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:9067:1: ( ( rule__STTimeLiteral__TypeAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:9067:1: ( ( rule__STTimeLiteral__TypeAssignment_0 ) )
            // InternalSTAlgorithmParser.g:9068:2: ( rule__STTimeLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:9069:2: ( rule__STTimeLiteral__TypeAssignment_0 )
            // InternalSTAlgorithmParser.g:9069:3: rule__STTimeLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__0__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__1"
    // InternalSTAlgorithmParser.g:9077:1: rule__STTimeLiteral__Group__1 : rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2 ;
    public final void rule__STTimeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9081:1: ( rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2 )
            // InternalSTAlgorithmParser.g:9082:2: rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2
            {
            pushFollow(FOLLOW_76);
            rule__STTimeLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__1"


    // $ANTLR start "rule__STTimeLiteral__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9089:1: rule__STTimeLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STTimeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9093:1: ( ( NumberSign ) )
            // InternalSTAlgorithmParser.g:9094:1: ( NumberSign )
            {
            // InternalSTAlgorithmParser.g:9094:1: ( NumberSign )
            // InternalSTAlgorithmParser.g:9095:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__1__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__2"
    // InternalSTAlgorithmParser.g:9104:1: rule__STTimeLiteral__Group__2 : rule__STTimeLiteral__Group__2__Impl ;
    public final void rule__STTimeLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9108:1: ( rule__STTimeLiteral__Group__2__Impl )
            // InternalSTAlgorithmParser.g:9109:2: rule__STTimeLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__2"


    // $ANTLR start "rule__STTimeLiteral__Group__2__Impl"
    // InternalSTAlgorithmParser.g:9115:1: rule__STTimeLiteral__Group__2__Impl : ( ( rule__STTimeLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STTimeLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9119:1: ( ( ( rule__STTimeLiteral__ValueAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:9120:1: ( ( rule__STTimeLiteral__ValueAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:9120:1: ( ( rule__STTimeLiteral__ValueAssignment_2 ) )
            // InternalSTAlgorithmParser.g:9121:2: ( rule__STTimeLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:9122:2: ( rule__STTimeLiteral__ValueAssignment_2 )
            // InternalSTAlgorithmParser.g:9122:3: rule__STTimeLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__2__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__0"
    // InternalSTAlgorithmParser.g:9131:1: rule__STTimeOfDayLiteral__Group__0 : rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1 ;
    public final void rule__STTimeOfDayLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9135:1: ( rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1 )
            // InternalSTAlgorithmParser.g:9136:2: rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__STTimeOfDayLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__0"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9143:1: rule__STTimeOfDayLiteral__Group__0__Impl : ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STTimeOfDayLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9147:1: ( ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:9148:1: ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:9148:1: ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) )
            // InternalSTAlgorithmParser.g:9149:2: ( rule__STTimeOfDayLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:9150:2: ( rule__STTimeOfDayLiteral__TypeAssignment_0 )
            // InternalSTAlgorithmParser.g:9150:3: rule__STTimeOfDayLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__0__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__1"
    // InternalSTAlgorithmParser.g:9158:1: rule__STTimeOfDayLiteral__Group__1 : rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2 ;
    public final void rule__STTimeOfDayLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9162:1: ( rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2 )
            // InternalSTAlgorithmParser.g:9163:2: rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__STTimeOfDayLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__1"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9170:1: rule__STTimeOfDayLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STTimeOfDayLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9174:1: ( ( NumberSign ) )
            // InternalSTAlgorithmParser.g:9175:1: ( NumberSign )
            {
            // InternalSTAlgorithmParser.g:9175:1: ( NumberSign )
            // InternalSTAlgorithmParser.g:9176:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__1__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__2"
    // InternalSTAlgorithmParser.g:9185:1: rule__STTimeOfDayLiteral__Group__2 : rule__STTimeOfDayLiteral__Group__2__Impl ;
    public final void rule__STTimeOfDayLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9189:1: ( rule__STTimeOfDayLiteral__Group__2__Impl )
            // InternalSTAlgorithmParser.g:9190:2: rule__STTimeOfDayLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__2"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__2__Impl"
    // InternalSTAlgorithmParser.g:9196:1: rule__STTimeOfDayLiteral__Group__2__Impl : ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STTimeOfDayLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9200:1: ( ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:9201:1: ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:9201:1: ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) )
            // InternalSTAlgorithmParser.g:9202:2: ( rule__STTimeOfDayLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:9203:2: ( rule__STTimeOfDayLiteral__ValueAssignment_2 )
            // InternalSTAlgorithmParser.g:9203:3: rule__STTimeOfDayLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__2__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__0"
    // InternalSTAlgorithmParser.g:9212:1: rule__STDateAndTimeLiteral__Group__0 : rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1 ;
    public final void rule__STDateAndTimeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9216:1: ( rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1 )
            // InternalSTAlgorithmParser.g:9217:2: rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__STDateAndTimeLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__0"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9224:1: rule__STDateAndTimeLiteral__Group__0__Impl : ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9228:1: ( ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:9229:1: ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:9229:1: ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) )
            // InternalSTAlgorithmParser.g:9230:2: ( rule__STDateAndTimeLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:9231:2: ( rule__STDateAndTimeLiteral__TypeAssignment_0 )
            // InternalSTAlgorithmParser.g:9231:3: rule__STDateAndTimeLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__0__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__1"
    // InternalSTAlgorithmParser.g:9239:1: rule__STDateAndTimeLiteral__Group__1 : rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2 ;
    public final void rule__STDateAndTimeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9243:1: ( rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2 )
            // InternalSTAlgorithmParser.g:9244:2: rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__STDateAndTimeLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__1"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9251:1: rule__STDateAndTimeLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STDateAndTimeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9255:1: ( ( NumberSign ) )
            // InternalSTAlgorithmParser.g:9256:1: ( NumberSign )
            {
            // InternalSTAlgorithmParser.g:9256:1: ( NumberSign )
            // InternalSTAlgorithmParser.g:9257:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__2"
    // InternalSTAlgorithmParser.g:9266:1: rule__STDateAndTimeLiteral__Group__2 : rule__STDateAndTimeLiteral__Group__2__Impl ;
    public final void rule__STDateAndTimeLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9270:1: ( rule__STDateAndTimeLiteral__Group__2__Impl )
            // InternalSTAlgorithmParser.g:9271:2: rule__STDateAndTimeLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__2"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__2__Impl"
    // InternalSTAlgorithmParser.g:9277:1: rule__STDateAndTimeLiteral__Group__2__Impl : ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9281:1: ( ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:9282:1: ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:9282:1: ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) )
            // InternalSTAlgorithmParser.g:9283:2: ( rule__STDateAndTimeLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:9284:2: ( rule__STDateAndTimeLiteral__ValueAssignment_2 )
            // InternalSTAlgorithmParser.g:9284:3: rule__STDateAndTimeLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__2__Impl"


    // $ANTLR start "rule__STStringLiteral__Group__0"
    // InternalSTAlgorithmParser.g:9293:1: rule__STStringLiteral__Group__0 : rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1 ;
    public final void rule__STStringLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9297:1: ( rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1 )
            // InternalSTAlgorithmParser.g:9298:2: rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1
            {
            pushFollow(FOLLOW_77);
            rule__STStringLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__0"


    // $ANTLR start "rule__STStringLiteral__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9305:1: rule__STStringLiteral__Group__0__Impl : ( ( rule__STStringLiteral__Group_0__0 )? ) ;
    public final void rule__STStringLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9309:1: ( ( ( rule__STStringLiteral__Group_0__0 )? ) )
            // InternalSTAlgorithmParser.g:9310:1: ( ( rule__STStringLiteral__Group_0__0 )? )
            {
            // InternalSTAlgorithmParser.g:9310:1: ( ( rule__STStringLiteral__Group_0__0 )? )
            // InternalSTAlgorithmParser.g:9311:2: ( rule__STStringLiteral__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getGroup_0()); 
            }
            // InternalSTAlgorithmParser.g:9312:2: ( rule__STStringLiteral__Group_0__0 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==WSTRING||LA83_0==STRING||LA83_0==WCHAR||LA83_0==CHAR) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSTAlgorithmParser.g:9312:3: rule__STStringLiteral__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStringLiteral__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__0__Impl"


    // $ANTLR start "rule__STStringLiteral__Group__1"
    // InternalSTAlgorithmParser.g:9320:1: rule__STStringLiteral__Group__1 : rule__STStringLiteral__Group__1__Impl ;
    public final void rule__STStringLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9324:1: ( rule__STStringLiteral__Group__1__Impl )
            // InternalSTAlgorithmParser.g:9325:2: rule__STStringLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__1"


    // $ANTLR start "rule__STStringLiteral__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9331:1: rule__STStringLiteral__Group__1__Impl : ( ( rule__STStringLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STStringLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9335:1: ( ( ( rule__STStringLiteral__ValueAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:9336:1: ( ( rule__STStringLiteral__ValueAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:9336:1: ( ( rule__STStringLiteral__ValueAssignment_1 ) )
            // InternalSTAlgorithmParser.g:9337:2: ( rule__STStringLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getValueAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:9338:2: ( rule__STStringLiteral__ValueAssignment_1 )
            // InternalSTAlgorithmParser.g:9338:3: rule__STStringLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__1__Impl"


    // $ANTLR start "rule__STStringLiteral__Group_0__0"
    // InternalSTAlgorithmParser.g:9347:1: rule__STStringLiteral__Group_0__0 : rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1 ;
    public final void rule__STStringLiteral__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9351:1: ( rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1 )
            // InternalSTAlgorithmParser.g:9352:2: rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1
            {
            pushFollow(FOLLOW_74);
            rule__STStringLiteral__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__0"


    // $ANTLR start "rule__STStringLiteral__Group_0__0__Impl"
    // InternalSTAlgorithmParser.g:9359:1: rule__STStringLiteral__Group_0__0__Impl : ( ( rule__STStringLiteral__TypeAssignment_0_0 ) ) ;
    public final void rule__STStringLiteral__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9363:1: ( ( ( rule__STStringLiteral__TypeAssignment_0_0 ) ) )
            // InternalSTAlgorithmParser.g:9364:1: ( ( rule__STStringLiteral__TypeAssignment_0_0 ) )
            {
            // InternalSTAlgorithmParser.g:9364:1: ( ( rule__STStringLiteral__TypeAssignment_0_0 ) )
            // InternalSTAlgorithmParser.g:9365:2: ( rule__STStringLiteral__TypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeAssignment_0_0()); 
            }
            // InternalSTAlgorithmParser.g:9366:2: ( rule__STStringLiteral__TypeAssignment_0_0 )
            // InternalSTAlgorithmParser.g:9366:3: rule__STStringLiteral__TypeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__TypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__0__Impl"


    // $ANTLR start "rule__STStringLiteral__Group_0__1"
    // InternalSTAlgorithmParser.g:9374:1: rule__STStringLiteral__Group_0__1 : rule__STStringLiteral__Group_0__1__Impl ;
    public final void rule__STStringLiteral__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9378:1: ( rule__STStringLiteral__Group_0__1__Impl )
            // InternalSTAlgorithmParser.g:9379:2: rule__STStringLiteral__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__1"


    // $ANTLR start "rule__STStringLiteral__Group_0__1__Impl"
    // InternalSTAlgorithmParser.g:9385:1: rule__STStringLiteral__Group_0__1__Impl : ( NumberSign ) ;
    public final void rule__STStringLiteral__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9389:1: ( ( NumberSign ) )
            // InternalSTAlgorithmParser.g:9390:1: ( NumberSign )
            {
            // InternalSTAlgorithmParser.g:9390:1: ( NumberSign )
            // InternalSTAlgorithmParser.g:9391:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getNumberSignKeyword_0_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getNumberSignKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__1__Impl"


    // $ANTLR start "rule__Number__Group__0"
    // InternalSTAlgorithmParser.g:9401:1: rule__Number__Group__0 : rule__Number__Group__0__Impl rule__Number__Group__1 ;
    public final void rule__Number__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9405:1: ( rule__Number__Group__0__Impl rule__Number__Group__1 )
            // InternalSTAlgorithmParser.g:9406:2: rule__Number__Group__0__Impl rule__Number__Group__1
            {
            pushFollow(FOLLOW_76);
            rule__Number__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__0"


    // $ANTLR start "rule__Number__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9413:1: rule__Number__Group__0__Impl : ( ( rule__Number__Alternatives_0 )? ) ;
    public final void rule__Number__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9417:1: ( ( ( rule__Number__Alternatives_0 )? ) )
            // InternalSTAlgorithmParser.g:9418:1: ( ( rule__Number__Alternatives_0 )? )
            {
            // InternalSTAlgorithmParser.g:9418:1: ( ( rule__Number__Alternatives_0 )? )
            // InternalSTAlgorithmParser.g:9419:2: ( rule__Number__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_0()); 
            }
            // InternalSTAlgorithmParser.g:9420:2: ( rule__Number__Alternatives_0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==PlusSign||LA84_0==HyphenMinus) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSTAlgorithmParser.g:9420:3: rule__Number__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__0__Impl"


    // $ANTLR start "rule__Number__Group__1"
    // InternalSTAlgorithmParser.g:9428:1: rule__Number__Group__1 : rule__Number__Group__1__Impl rule__Number__Group__2 ;
    public final void rule__Number__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9432:1: ( rule__Number__Group__1__Impl rule__Number__Group__2 )
            // InternalSTAlgorithmParser.g:9433:2: rule__Number__Group__1__Impl rule__Number__Group__2
            {
            pushFollow(FOLLOW_68);
            rule__Number__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__1"


    // $ANTLR start "rule__Number__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9440:1: rule__Number__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__Number__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9444:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:9445:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:9445:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:9446:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__1__Impl"


    // $ANTLR start "rule__Number__Group__2"
    // InternalSTAlgorithmParser.g:9455:1: rule__Number__Group__2 : rule__Number__Group__2__Impl ;
    public final void rule__Number__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9459:1: ( rule__Number__Group__2__Impl )
            // InternalSTAlgorithmParser.g:9460:2: rule__Number__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__2"


    // $ANTLR start "rule__Number__Group__2__Impl"
    // InternalSTAlgorithmParser.g:9466:1: rule__Number__Group__2__Impl : ( ( rule__Number__Group_2__0 )? ) ;
    public final void rule__Number__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9470:1: ( ( ( rule__Number__Group_2__0 )? ) )
            // InternalSTAlgorithmParser.g:9471:1: ( ( rule__Number__Group_2__0 )? )
            {
            // InternalSTAlgorithmParser.g:9471:1: ( ( rule__Number__Group_2__0 )? )
            // InternalSTAlgorithmParser.g:9472:2: ( rule__Number__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getGroup_2()); 
            }
            // InternalSTAlgorithmParser.g:9473:2: ( rule__Number__Group_2__0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==FullStop) ) {
                int LA85_1 = input.LA(2);

                if ( (LA85_1==RULE_EXT_INT) ) {
                    alt85=1;
                }
                else if ( (LA85_1==RULE_INT) ) {
                    int LA85_4 = input.LA(3);

                    if ( (synpred135_InternalSTAlgorithmParser()) ) {
                        alt85=1;
                    }
                }
            }
            switch (alt85) {
                case 1 :
                    // InternalSTAlgorithmParser.g:9473:3: rule__Number__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__2__Impl"


    // $ANTLR start "rule__Number__Group_2__0"
    // InternalSTAlgorithmParser.g:9482:1: rule__Number__Group_2__0 : rule__Number__Group_2__0__Impl rule__Number__Group_2__1 ;
    public final void rule__Number__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9486:1: ( rule__Number__Group_2__0__Impl rule__Number__Group_2__1 )
            // InternalSTAlgorithmParser.g:9487:2: rule__Number__Group_2__0__Impl rule__Number__Group_2__1
            {
            pushFollow(FOLLOW_78);
            rule__Number__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__0"


    // $ANTLR start "rule__Number__Group_2__0__Impl"
    // InternalSTAlgorithmParser.g:9494:1: rule__Number__Group_2__0__Impl : ( ( FullStop ) ) ;
    public final void rule__Number__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9498:1: ( ( ( FullStop ) ) )
            // InternalSTAlgorithmParser.g:9499:1: ( ( FullStop ) )
            {
            // InternalSTAlgorithmParser.g:9499:1: ( ( FullStop ) )
            // InternalSTAlgorithmParser.g:9500:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getFullStopKeyword_2_0()); 
            }
            // InternalSTAlgorithmParser.g:9501:2: ( FullStop )
            // InternalSTAlgorithmParser.g:9501:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__0__Impl"


    // $ANTLR start "rule__Number__Group_2__1"
    // InternalSTAlgorithmParser.g:9509:1: rule__Number__Group_2__1 : rule__Number__Group_2__1__Impl ;
    public final void rule__Number__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9513:1: ( rule__Number__Group_2__1__Impl )
            // InternalSTAlgorithmParser.g:9514:2: rule__Number__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__1"


    // $ANTLR start "rule__Number__Group_2__1__Impl"
    // InternalSTAlgorithmParser.g:9520:1: rule__Number__Group_2__1__Impl : ( ( rule__Number__Alternatives_2_1 ) ) ;
    public final void rule__Number__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9524:1: ( ( ( rule__Number__Alternatives_2_1 ) ) )
            // InternalSTAlgorithmParser.g:9525:1: ( ( rule__Number__Alternatives_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:9525:1: ( ( rule__Number__Alternatives_2_1 ) )
            // InternalSTAlgorithmParser.g:9526:2: ( rule__Number__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_2_1()); 
            }
            // InternalSTAlgorithmParser.g:9527:2: ( rule__Number__Alternatives_2_1 )
            // InternalSTAlgorithmParser.g:9527:3: rule__Number__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Number__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__1__Impl"


    // $ANTLR start "rule__Date__Group__0"
    // InternalSTAlgorithmParser.g:9536:1: rule__Date__Group__0 : rule__Date__Group__0__Impl rule__Date__Group__1 ;
    public final void rule__Date__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9540:1: ( rule__Date__Group__0__Impl rule__Date__Group__1 )
            // InternalSTAlgorithmParser.g:9541:2: rule__Date__Group__0__Impl rule__Date__Group__1
            {
            pushFollow(FOLLOW_79);
            rule__Date__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__0"


    // $ANTLR start "rule__Date__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9548:1: rule__Date__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9552:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:9553:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:9553:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:9554:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__0__Impl"


    // $ANTLR start "rule__Date__Group__1"
    // InternalSTAlgorithmParser.g:9563:1: rule__Date__Group__1 : rule__Date__Group__1__Impl rule__Date__Group__2 ;
    public final void rule__Date__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9567:1: ( rule__Date__Group__1__Impl rule__Date__Group__2 )
            // InternalSTAlgorithmParser.g:9568:2: rule__Date__Group__1__Impl rule__Date__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__Date__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__1"


    // $ANTLR start "rule__Date__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9575:1: rule__Date__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__Date__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9579:1: ( ( HyphenMinus ) )
            // InternalSTAlgorithmParser.g:9580:1: ( HyphenMinus )
            {
            // InternalSTAlgorithmParser.g:9580:1: ( HyphenMinus )
            // InternalSTAlgorithmParser.g:9581:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__1__Impl"


    // $ANTLR start "rule__Date__Group__2"
    // InternalSTAlgorithmParser.g:9590:1: rule__Date__Group__2 : rule__Date__Group__2__Impl rule__Date__Group__3 ;
    public final void rule__Date__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9594:1: ( rule__Date__Group__2__Impl rule__Date__Group__3 )
            // InternalSTAlgorithmParser.g:9595:2: rule__Date__Group__2__Impl rule__Date__Group__3
            {
            pushFollow(FOLLOW_79);
            rule__Date__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__2"


    // $ANTLR start "rule__Date__Group__2__Impl"
    // InternalSTAlgorithmParser.g:9602:1: rule__Date__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9606:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:9607:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:9607:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:9608:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__2__Impl"


    // $ANTLR start "rule__Date__Group__3"
    // InternalSTAlgorithmParser.g:9617:1: rule__Date__Group__3 : rule__Date__Group__3__Impl rule__Date__Group__4 ;
    public final void rule__Date__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9621:1: ( rule__Date__Group__3__Impl rule__Date__Group__4 )
            // InternalSTAlgorithmParser.g:9622:2: rule__Date__Group__3__Impl rule__Date__Group__4
            {
            pushFollow(FOLLOW_75);
            rule__Date__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__3"


    // $ANTLR start "rule__Date__Group__3__Impl"
    // InternalSTAlgorithmParser.g:9629:1: rule__Date__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__Date__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9633:1: ( ( HyphenMinus ) )
            // InternalSTAlgorithmParser.g:9634:1: ( HyphenMinus )
            {
            // InternalSTAlgorithmParser.g:9634:1: ( HyphenMinus )
            // InternalSTAlgorithmParser.g:9635:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__3__Impl"


    // $ANTLR start "rule__Date__Group__4"
    // InternalSTAlgorithmParser.g:9644:1: rule__Date__Group__4 : rule__Date__Group__4__Impl ;
    public final void rule__Date__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9648:1: ( rule__Date__Group__4__Impl )
            // InternalSTAlgorithmParser.g:9649:2: rule__Date__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Date__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__4"


    // $ANTLR start "rule__Date__Group__4__Impl"
    // InternalSTAlgorithmParser.g:9655:1: rule__Date__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9659:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:9660:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:9660:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:9661:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__4__Impl"


    // $ANTLR start "rule__DateAndTime__Group__0"
    // InternalSTAlgorithmParser.g:9671:1: rule__DateAndTime__Group__0 : rule__DateAndTime__Group__0__Impl rule__DateAndTime__Group__1 ;
    public final void rule__DateAndTime__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9675:1: ( rule__DateAndTime__Group__0__Impl rule__DateAndTime__Group__1 )
            // InternalSTAlgorithmParser.g:9676:2: rule__DateAndTime__Group__0__Impl rule__DateAndTime__Group__1
            {
            pushFollow(FOLLOW_79);
            rule__DateAndTime__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__0"


    // $ANTLR start "rule__DateAndTime__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9683:1: rule__DateAndTime__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9687:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:9688:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:9688:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:9689:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__0__Impl"


    // $ANTLR start "rule__DateAndTime__Group__1"
    // InternalSTAlgorithmParser.g:9698:1: rule__DateAndTime__Group__1 : rule__DateAndTime__Group__1__Impl rule__DateAndTime__Group__2 ;
    public final void rule__DateAndTime__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9702:1: ( rule__DateAndTime__Group__1__Impl rule__DateAndTime__Group__2 )
            // InternalSTAlgorithmParser.g:9703:2: rule__DateAndTime__Group__1__Impl rule__DateAndTime__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__DateAndTime__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__1"


    // $ANTLR start "rule__DateAndTime__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9710:1: rule__DateAndTime__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__DateAndTime__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9714:1: ( ( HyphenMinus ) )
            // InternalSTAlgorithmParser.g:9715:1: ( HyphenMinus )
            {
            // InternalSTAlgorithmParser.g:9715:1: ( HyphenMinus )
            // InternalSTAlgorithmParser.g:9716:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__1__Impl"


    // $ANTLR start "rule__DateAndTime__Group__2"
    // InternalSTAlgorithmParser.g:9725:1: rule__DateAndTime__Group__2 : rule__DateAndTime__Group__2__Impl rule__DateAndTime__Group__3 ;
    public final void rule__DateAndTime__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9729:1: ( rule__DateAndTime__Group__2__Impl rule__DateAndTime__Group__3 )
            // InternalSTAlgorithmParser.g:9730:2: rule__DateAndTime__Group__2__Impl rule__DateAndTime__Group__3
            {
            pushFollow(FOLLOW_79);
            rule__DateAndTime__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__2"


    // $ANTLR start "rule__DateAndTime__Group__2__Impl"
    // InternalSTAlgorithmParser.g:9737:1: rule__DateAndTime__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9741:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:9742:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:9742:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:9743:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__2__Impl"


    // $ANTLR start "rule__DateAndTime__Group__3"
    // InternalSTAlgorithmParser.g:9752:1: rule__DateAndTime__Group__3 : rule__DateAndTime__Group__3__Impl rule__DateAndTime__Group__4 ;
    public final void rule__DateAndTime__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9756:1: ( rule__DateAndTime__Group__3__Impl rule__DateAndTime__Group__4 )
            // InternalSTAlgorithmParser.g:9757:2: rule__DateAndTime__Group__3__Impl rule__DateAndTime__Group__4
            {
            pushFollow(FOLLOW_75);
            rule__DateAndTime__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__3"


    // $ANTLR start "rule__DateAndTime__Group__3__Impl"
    // InternalSTAlgorithmParser.g:9764:1: rule__DateAndTime__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__DateAndTime__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9768:1: ( ( HyphenMinus ) )
            // InternalSTAlgorithmParser.g:9769:1: ( HyphenMinus )
            {
            // InternalSTAlgorithmParser.g:9769:1: ( HyphenMinus )
            // InternalSTAlgorithmParser.g:9770:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__3__Impl"


    // $ANTLR start "rule__DateAndTime__Group__4"
    // InternalSTAlgorithmParser.g:9779:1: rule__DateAndTime__Group__4 : rule__DateAndTime__Group__4__Impl rule__DateAndTime__Group__5 ;
    public final void rule__DateAndTime__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9783:1: ( rule__DateAndTime__Group__4__Impl rule__DateAndTime__Group__5 )
            // InternalSTAlgorithmParser.g:9784:2: rule__DateAndTime__Group__4__Impl rule__DateAndTime__Group__5
            {
            pushFollow(FOLLOW_79);
            rule__DateAndTime__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__4"


    // $ANTLR start "rule__DateAndTime__Group__4__Impl"
    // InternalSTAlgorithmParser.g:9791:1: rule__DateAndTime__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9795:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:9796:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:9796:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:9797:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__4__Impl"


    // $ANTLR start "rule__DateAndTime__Group__5"
    // InternalSTAlgorithmParser.g:9806:1: rule__DateAndTime__Group__5 : rule__DateAndTime__Group__5__Impl rule__DateAndTime__Group__6 ;
    public final void rule__DateAndTime__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9810:1: ( rule__DateAndTime__Group__5__Impl rule__DateAndTime__Group__6 )
            // InternalSTAlgorithmParser.g:9811:2: rule__DateAndTime__Group__5__Impl rule__DateAndTime__Group__6
            {
            pushFollow(FOLLOW_75);
            rule__DateAndTime__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__5"


    // $ANTLR start "rule__DateAndTime__Group__5__Impl"
    // InternalSTAlgorithmParser.g:9818:1: rule__DateAndTime__Group__5__Impl : ( HyphenMinus ) ;
    public final void rule__DateAndTime__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9822:1: ( ( HyphenMinus ) )
            // InternalSTAlgorithmParser.g:9823:1: ( HyphenMinus )
            {
            // InternalSTAlgorithmParser.g:9823:1: ( HyphenMinus )
            // InternalSTAlgorithmParser.g:9824:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_5()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__5__Impl"


    // $ANTLR start "rule__DateAndTime__Group__6"
    // InternalSTAlgorithmParser.g:9833:1: rule__DateAndTime__Group__6 : rule__DateAndTime__Group__6__Impl rule__DateAndTime__Group__7 ;
    public final void rule__DateAndTime__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9837:1: ( rule__DateAndTime__Group__6__Impl rule__DateAndTime__Group__7 )
            // InternalSTAlgorithmParser.g:9838:2: rule__DateAndTime__Group__6__Impl rule__DateAndTime__Group__7
            {
            pushFollow(FOLLOW_80);
            rule__DateAndTime__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__6"


    // $ANTLR start "rule__DateAndTime__Group__6__Impl"
    // InternalSTAlgorithmParser.g:9845:1: rule__DateAndTime__Group__6__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9849:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:9850:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:9850:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:9851:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_6()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__6__Impl"


    // $ANTLR start "rule__DateAndTime__Group__7"
    // InternalSTAlgorithmParser.g:9860:1: rule__DateAndTime__Group__7 : rule__DateAndTime__Group__7__Impl rule__DateAndTime__Group__8 ;
    public final void rule__DateAndTime__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9864:1: ( rule__DateAndTime__Group__7__Impl rule__DateAndTime__Group__8 )
            // InternalSTAlgorithmParser.g:9865:2: rule__DateAndTime__Group__7__Impl rule__DateAndTime__Group__8
            {
            pushFollow(FOLLOW_75);
            rule__DateAndTime__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__7"


    // $ANTLR start "rule__DateAndTime__Group__7__Impl"
    // InternalSTAlgorithmParser.g:9872:1: rule__DateAndTime__Group__7__Impl : ( Colon ) ;
    public final void rule__DateAndTime__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9876:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:9877:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:9877:1: ( Colon )
            // InternalSTAlgorithmParser.g:9878:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getColonKeyword_7()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getColonKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__7__Impl"


    // $ANTLR start "rule__DateAndTime__Group__8"
    // InternalSTAlgorithmParser.g:9887:1: rule__DateAndTime__Group__8 : rule__DateAndTime__Group__8__Impl rule__DateAndTime__Group__9 ;
    public final void rule__DateAndTime__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9891:1: ( rule__DateAndTime__Group__8__Impl rule__DateAndTime__Group__9 )
            // InternalSTAlgorithmParser.g:9892:2: rule__DateAndTime__Group__8__Impl rule__DateAndTime__Group__9
            {
            pushFollow(FOLLOW_80);
            rule__DateAndTime__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__8"


    // $ANTLR start "rule__DateAndTime__Group__8__Impl"
    // InternalSTAlgorithmParser.g:9899:1: rule__DateAndTime__Group__8__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9903:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:9904:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:9904:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:9905:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_8()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__8__Impl"


    // $ANTLR start "rule__DateAndTime__Group__9"
    // InternalSTAlgorithmParser.g:9914:1: rule__DateAndTime__Group__9 : rule__DateAndTime__Group__9__Impl rule__DateAndTime__Group__10 ;
    public final void rule__DateAndTime__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9918:1: ( rule__DateAndTime__Group__9__Impl rule__DateAndTime__Group__10 )
            // InternalSTAlgorithmParser.g:9919:2: rule__DateAndTime__Group__9__Impl rule__DateAndTime__Group__10
            {
            pushFollow(FOLLOW_75);
            rule__DateAndTime__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__10();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__9"


    // $ANTLR start "rule__DateAndTime__Group__9__Impl"
    // InternalSTAlgorithmParser.g:9926:1: rule__DateAndTime__Group__9__Impl : ( Colon ) ;
    public final void rule__DateAndTime__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9930:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:9931:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:9931:1: ( Colon )
            // InternalSTAlgorithmParser.g:9932:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getColonKeyword_9()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getColonKeyword_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__9__Impl"


    // $ANTLR start "rule__DateAndTime__Group__10"
    // InternalSTAlgorithmParser.g:9941:1: rule__DateAndTime__Group__10 : rule__DateAndTime__Group__10__Impl rule__DateAndTime__Group__11 ;
    public final void rule__DateAndTime__Group__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9945:1: ( rule__DateAndTime__Group__10__Impl rule__DateAndTime__Group__11 )
            // InternalSTAlgorithmParser.g:9946:2: rule__DateAndTime__Group__10__Impl rule__DateAndTime__Group__11
            {
            pushFollow(FOLLOW_68);
            rule__DateAndTime__Group__10__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__11();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__10"


    // $ANTLR start "rule__DateAndTime__Group__10__Impl"
    // InternalSTAlgorithmParser.g:9953:1: rule__DateAndTime__Group__10__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9957:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:9958:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:9958:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:9959:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_10()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_10()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__10__Impl"


    // $ANTLR start "rule__DateAndTime__Group__11"
    // InternalSTAlgorithmParser.g:9968:1: rule__DateAndTime__Group__11 : rule__DateAndTime__Group__11__Impl ;
    public final void rule__DateAndTime__Group__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9972:1: ( rule__DateAndTime__Group__11__Impl )
            // InternalSTAlgorithmParser.g:9973:2: rule__DateAndTime__Group__11__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__11__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__11"


    // $ANTLR start "rule__DateAndTime__Group__11__Impl"
    // InternalSTAlgorithmParser.g:9979:1: rule__DateAndTime__Group__11__Impl : ( ( rule__DateAndTime__Group_11__0 )? ) ;
    public final void rule__DateAndTime__Group__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9983:1: ( ( ( rule__DateAndTime__Group_11__0 )? ) )
            // InternalSTAlgorithmParser.g:9984:1: ( ( rule__DateAndTime__Group_11__0 )? )
            {
            // InternalSTAlgorithmParser.g:9984:1: ( ( rule__DateAndTime__Group_11__0 )? )
            // InternalSTAlgorithmParser.g:9985:2: ( rule__DateAndTime__Group_11__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getGroup_11()); 
            }
            // InternalSTAlgorithmParser.g:9986:2: ( rule__DateAndTime__Group_11__0 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==FullStop) ) {
                int LA86_1 = input.LA(2);

                if ( (LA86_1==RULE_INT) ) {
                    int LA86_3 = input.LA(3);

                    if ( (synpred136_InternalSTAlgorithmParser()) ) {
                        alt86=1;
                    }
                }
            }
            switch (alt86) {
                case 1 :
                    // InternalSTAlgorithmParser.g:9986:3: rule__DateAndTime__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DateAndTime__Group_11__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getGroup_11()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__11__Impl"


    // $ANTLR start "rule__DateAndTime__Group_11__0"
    // InternalSTAlgorithmParser.g:9995:1: rule__DateAndTime__Group_11__0 : rule__DateAndTime__Group_11__0__Impl rule__DateAndTime__Group_11__1 ;
    public final void rule__DateAndTime__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9999:1: ( rule__DateAndTime__Group_11__0__Impl rule__DateAndTime__Group_11__1 )
            // InternalSTAlgorithmParser.g:10000:2: rule__DateAndTime__Group_11__0__Impl rule__DateAndTime__Group_11__1
            {
            pushFollow(FOLLOW_75);
            rule__DateAndTime__Group_11__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group_11__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__0"


    // $ANTLR start "rule__DateAndTime__Group_11__0__Impl"
    // InternalSTAlgorithmParser.g:10007:1: rule__DateAndTime__Group_11__0__Impl : ( ( FullStop ) ) ;
    public final void rule__DateAndTime__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10011:1: ( ( ( FullStop ) ) )
            // InternalSTAlgorithmParser.g:10012:1: ( ( FullStop ) )
            {
            // InternalSTAlgorithmParser.g:10012:1: ( ( FullStop ) )
            // InternalSTAlgorithmParser.g:10013:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getFullStopKeyword_11_0()); 
            }
            // InternalSTAlgorithmParser.g:10014:2: ( FullStop )
            // InternalSTAlgorithmParser.g:10014:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getFullStopKeyword_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__0__Impl"


    // $ANTLR start "rule__DateAndTime__Group_11__1"
    // InternalSTAlgorithmParser.g:10022:1: rule__DateAndTime__Group_11__1 : rule__DateAndTime__Group_11__1__Impl ;
    public final void rule__DateAndTime__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10026:1: ( rule__DateAndTime__Group_11__1__Impl )
            // InternalSTAlgorithmParser.g:10027:2: rule__DateAndTime__Group_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group_11__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__1"


    // $ANTLR start "rule__DateAndTime__Group_11__1__Impl"
    // InternalSTAlgorithmParser.g:10033:1: rule__DateAndTime__Group_11__1__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10037:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:10038:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:10038:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:10039:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_11_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_11_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__1__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__0"
    // InternalSTAlgorithmParser.g:10049:1: rule__TimeOfDay__Group__0 : rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1 ;
    public final void rule__TimeOfDay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10053:1: ( rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1 )
            // InternalSTAlgorithmParser.g:10054:2: rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1
            {
            pushFollow(FOLLOW_80);
            rule__TimeOfDay__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__0"


    // $ANTLR start "rule__TimeOfDay__Group__0__Impl"
    // InternalSTAlgorithmParser.g:10061:1: rule__TimeOfDay__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10065:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:10066:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:10066:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:10067:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__0__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__1"
    // InternalSTAlgorithmParser.g:10076:1: rule__TimeOfDay__Group__1 : rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2 ;
    public final void rule__TimeOfDay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10080:1: ( rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2 )
            // InternalSTAlgorithmParser.g:10081:2: rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__TimeOfDay__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__1"


    // $ANTLR start "rule__TimeOfDay__Group__1__Impl"
    // InternalSTAlgorithmParser.g:10088:1: rule__TimeOfDay__Group__1__Impl : ( Colon ) ;
    public final void rule__TimeOfDay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10092:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:10093:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:10093:1: ( Colon )
            // InternalSTAlgorithmParser.g:10094:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__1__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__2"
    // InternalSTAlgorithmParser.g:10103:1: rule__TimeOfDay__Group__2 : rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3 ;
    public final void rule__TimeOfDay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10107:1: ( rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3 )
            // InternalSTAlgorithmParser.g:10108:2: rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3
            {
            pushFollow(FOLLOW_80);
            rule__TimeOfDay__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__2"


    // $ANTLR start "rule__TimeOfDay__Group__2__Impl"
    // InternalSTAlgorithmParser.g:10115:1: rule__TimeOfDay__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10119:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:10120:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:10120:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:10121:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__2__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__3"
    // InternalSTAlgorithmParser.g:10130:1: rule__TimeOfDay__Group__3 : rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4 ;
    public final void rule__TimeOfDay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10134:1: ( rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4 )
            // InternalSTAlgorithmParser.g:10135:2: rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4
            {
            pushFollow(FOLLOW_75);
            rule__TimeOfDay__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__3"


    // $ANTLR start "rule__TimeOfDay__Group__3__Impl"
    // InternalSTAlgorithmParser.g:10142:1: rule__TimeOfDay__Group__3__Impl : ( Colon ) ;
    public final void rule__TimeOfDay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10146:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:10147:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:10147:1: ( Colon )
            // InternalSTAlgorithmParser.g:10148:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__3__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__4"
    // InternalSTAlgorithmParser.g:10157:1: rule__TimeOfDay__Group__4 : rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5 ;
    public final void rule__TimeOfDay__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10161:1: ( rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5 )
            // InternalSTAlgorithmParser.g:10162:2: rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5
            {
            pushFollow(FOLLOW_68);
            rule__TimeOfDay__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__4"


    // $ANTLR start "rule__TimeOfDay__Group__4__Impl"
    // InternalSTAlgorithmParser.g:10169:1: rule__TimeOfDay__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10173:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:10174:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:10174:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:10175:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__4__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__5"
    // InternalSTAlgorithmParser.g:10184:1: rule__TimeOfDay__Group__5 : rule__TimeOfDay__Group__5__Impl ;
    public final void rule__TimeOfDay__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10188:1: ( rule__TimeOfDay__Group__5__Impl )
            // InternalSTAlgorithmParser.g:10189:2: rule__TimeOfDay__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__5"


    // $ANTLR start "rule__TimeOfDay__Group__5__Impl"
    // InternalSTAlgorithmParser.g:10195:1: rule__TimeOfDay__Group__5__Impl : ( ( rule__TimeOfDay__Group_5__0 )? ) ;
    public final void rule__TimeOfDay__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10199:1: ( ( ( rule__TimeOfDay__Group_5__0 )? ) )
            // InternalSTAlgorithmParser.g:10200:1: ( ( rule__TimeOfDay__Group_5__0 )? )
            {
            // InternalSTAlgorithmParser.g:10200:1: ( ( rule__TimeOfDay__Group_5__0 )? )
            // InternalSTAlgorithmParser.g:10201:2: ( rule__TimeOfDay__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getGroup_5()); 
            }
            // InternalSTAlgorithmParser.g:10202:2: ( rule__TimeOfDay__Group_5__0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==FullStop) ) {
                int LA87_1 = input.LA(2);

                if ( (LA87_1==RULE_INT) ) {
                    int LA87_3 = input.LA(3);

                    if ( (synpred137_InternalSTAlgorithmParser()) ) {
                        alt87=1;
                    }
                }
            }
            switch (alt87) {
                case 1 :
                    // InternalSTAlgorithmParser.g:10202:3: rule__TimeOfDay__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeOfDay__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__5__Impl"


    // $ANTLR start "rule__TimeOfDay__Group_5__0"
    // InternalSTAlgorithmParser.g:10211:1: rule__TimeOfDay__Group_5__0 : rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1 ;
    public final void rule__TimeOfDay__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10215:1: ( rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1 )
            // InternalSTAlgorithmParser.g:10216:2: rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1
            {
            pushFollow(FOLLOW_75);
            rule__TimeOfDay__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__0"


    // $ANTLR start "rule__TimeOfDay__Group_5__0__Impl"
    // InternalSTAlgorithmParser.g:10223:1: rule__TimeOfDay__Group_5__0__Impl : ( ( FullStop ) ) ;
    public final void rule__TimeOfDay__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10227:1: ( ( ( FullStop ) ) )
            // InternalSTAlgorithmParser.g:10228:1: ( ( FullStop ) )
            {
            // InternalSTAlgorithmParser.g:10228:1: ( ( FullStop ) )
            // InternalSTAlgorithmParser.g:10229:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getFullStopKeyword_5_0()); 
            }
            // InternalSTAlgorithmParser.g:10230:2: ( FullStop )
            // InternalSTAlgorithmParser.g:10230:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getFullStopKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__0__Impl"


    // $ANTLR start "rule__TimeOfDay__Group_5__1"
    // InternalSTAlgorithmParser.g:10238:1: rule__TimeOfDay__Group_5__1 : rule__TimeOfDay__Group_5__1__Impl ;
    public final void rule__TimeOfDay__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10242:1: ( rule__TimeOfDay__Group_5__1__Impl )
            // InternalSTAlgorithmParser.g:10243:2: rule__TimeOfDay__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__1"


    // $ANTLR start "rule__TimeOfDay__Group_5__1__Impl"
    // InternalSTAlgorithmParser.g:10249:1: rule__TimeOfDay__Group_5__1__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10253:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:10254:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:10254:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:10255:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_5_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__1__Impl"


    // $ANTLR start "rule__Time__Group__0"
    // InternalSTAlgorithmParser.g:10265:1: rule__Time__Group__0 : rule__Time__Group__0__Impl rule__Time__Group__1 ;
    public final void rule__Time__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10269:1: ( rule__Time__Group__0__Impl rule__Time__Group__1 )
            // InternalSTAlgorithmParser.g:10270:2: rule__Time__Group__0__Impl rule__Time__Group__1
            {
            pushFollow(FOLLOW_81);
            rule__Time__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Time__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__0"


    // $ANTLR start "rule__Time__Group__0__Impl"
    // InternalSTAlgorithmParser.g:10277:1: rule__Time__Group__0__Impl : ( ruleNumber ) ;
    public final void rule__Time__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10281:1: ( ( ruleNumber ) )
            // InternalSTAlgorithmParser.g:10282:1: ( ruleNumber )
            {
            // InternalSTAlgorithmParser.g:10282:1: ( ruleNumber )
            // InternalSTAlgorithmParser.g:10283:2: ruleNumber
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getNumberParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getNumberParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__0__Impl"


    // $ANTLR start "rule__Time__Group__1"
    // InternalSTAlgorithmParser.g:10292:1: rule__Time__Group__1 : rule__Time__Group__1__Impl rule__Time__Group__2 ;
    public final void rule__Time__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10296:1: ( rule__Time__Group__1__Impl rule__Time__Group__2 )
            // InternalSTAlgorithmParser.g:10297:2: rule__Time__Group__1__Impl rule__Time__Group__2
            {
            pushFollow(FOLLOW_82);
            rule__Time__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Time__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__1"


    // $ANTLR start "rule__Time__Group__1__Impl"
    // InternalSTAlgorithmParser.g:10304:1: rule__Time__Group__1__Impl : ( ( rule__Time__Alternatives_1 ) ) ;
    public final void rule__Time__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10308:1: ( ( ( rule__Time__Alternatives_1 ) ) )
            // InternalSTAlgorithmParser.g:10309:1: ( ( rule__Time__Alternatives_1 ) )
            {
            // InternalSTAlgorithmParser.g:10309:1: ( ( rule__Time__Alternatives_1 ) )
            // InternalSTAlgorithmParser.g:10310:2: ( rule__Time__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getAlternatives_1()); 
            }
            // InternalSTAlgorithmParser.g:10311:2: ( rule__Time__Alternatives_1 )
            // InternalSTAlgorithmParser.g:10311:3: rule__Time__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Time__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__1__Impl"


    // $ANTLR start "rule__Time__Group__2"
    // InternalSTAlgorithmParser.g:10319:1: rule__Time__Group__2 : rule__Time__Group__2__Impl ;
    public final void rule__Time__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10323:1: ( rule__Time__Group__2__Impl )
            // InternalSTAlgorithmParser.g:10324:2: rule__Time__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Time__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__2"


    // $ANTLR start "rule__Time__Group__2__Impl"
    // InternalSTAlgorithmParser.g:10330:1: rule__Time__Group__2__Impl : ( ( KW__ )? ) ;
    public final void rule__Time__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10334:1: ( ( ( KW__ )? ) )
            // InternalSTAlgorithmParser.g:10335:1: ( ( KW__ )? )
            {
            // InternalSTAlgorithmParser.g:10335:1: ( ( KW__ )? )
            // InternalSTAlgorithmParser.g:10336:2: ( KW__ )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().get_Keyword_2()); 
            }
            // InternalSTAlgorithmParser.g:10337:2: ( KW__ )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==KW__) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalSTAlgorithmParser.g:10337:3: KW__
                    {
                    match(input,KW__,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().get_Keyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__2__Impl"


    // $ANTLR start "rule__STAlgorithmSource__AlgorithmsAssignment_1"
    // InternalSTAlgorithmParser.g:10346:1: rule__STAlgorithmSource__AlgorithmsAssignment_1 : ( ruleSTAlgorithm ) ;
    public final void rule__STAlgorithmSource__AlgorithmsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10350:1: ( ( ruleSTAlgorithm ) )
            // InternalSTAlgorithmParser.g:10351:2: ( ruleSTAlgorithm )
            {
            // InternalSTAlgorithmParser.g:10351:2: ( ruleSTAlgorithm )
            // InternalSTAlgorithmParser.g:10352:3: ruleSTAlgorithm
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmSourceAccess().getAlgorithmsSTAlgorithmParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAlgorithm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmSourceAccess().getAlgorithmsSTAlgorithmParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmSource__AlgorithmsAssignment_1"


    // $ANTLR start "rule__STAlgorithm__NameAssignment_1"
    // InternalSTAlgorithmParser.g:10361:1: rule__STAlgorithm__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__STAlgorithm__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10365:1: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:10366:2: ( RULE_ID )
            {
            // InternalSTAlgorithmParser.g:10366:2: ( RULE_ID )
            // InternalSTAlgorithmParser.g:10367:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__NameAssignment_1"


    // $ANTLR start "rule__STAlgorithm__BodyAssignment_2"
    // InternalSTAlgorithmParser.g:10376:1: rule__STAlgorithm__BodyAssignment_2 : ( ruleSTAlgorithmBody ) ;
    public final void rule__STAlgorithm__BodyAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10380:1: ( ( ruleSTAlgorithmBody ) )
            // InternalSTAlgorithmParser.g:10381:2: ( ruleSTAlgorithmBody )
            {
            // InternalSTAlgorithmParser.g:10381:2: ( ruleSTAlgorithmBody )
            // InternalSTAlgorithmParser.g:10382:3: ruleSTAlgorithmBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getBodySTAlgorithmBodyParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAlgorithmBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getBodySTAlgorithmBodyParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__BodyAssignment_2"


    // $ANTLR start "rule__STAlgorithmBody__VarTempDeclarationsAssignment_1"
    // InternalSTAlgorithmParser.g:10391:1: rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 : ( ruleSTVarTempDeclarationBlock ) ;
    public final void rule__STAlgorithmBody__VarTempDeclarationsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10395:1: ( ( ruleSTVarTempDeclarationBlock ) )
            // InternalSTAlgorithmParser.g:10396:2: ( ruleSTVarTempDeclarationBlock )
            {
            // InternalSTAlgorithmParser.g:10396:2: ( ruleSTVarTempDeclarationBlock )
            // InternalSTAlgorithmParser.g:10397:3: ruleSTVarTempDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyAccess().getVarTempDeclarationsSTVarTempDeclarationBlockParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarTempDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyAccess().getVarTempDeclarationsSTVarTempDeclarationBlockParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__VarTempDeclarationsAssignment_1"


    // $ANTLR start "rule__STAlgorithmBody__StatementsAssignment_2"
    // InternalSTAlgorithmParser.g:10406:1: rule__STAlgorithmBody__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STAlgorithmBody__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10410:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:10411:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:10411:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:10412:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__StatementsAssignment_2"


    // $ANTLR start "rule__STVarTempDeclarationBlock__ConstantAssignment_2"
    // InternalSTAlgorithmParser.g:10421:1: rule__STVarTempDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__STVarTempDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10425:1: ( ( ( CONSTANT ) ) )
            // InternalSTAlgorithmParser.g:10426:2: ( ( CONSTANT ) )
            {
            // InternalSTAlgorithmParser.g:10426:2: ( ( CONSTANT ) )
            // InternalSTAlgorithmParser.g:10427:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTAlgorithmParser.g:10428:3: ( CONSTANT )
            // InternalSTAlgorithmParser.g:10429:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTAlgorithmParser.g:10440:1: rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleSTVarDeclaration ) ;
    public final void rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10444:1: ( ( ruleSTVarDeclaration ) )
            // InternalSTAlgorithmParser.g:10445:2: ( ruleSTVarDeclaration )
            {
            // InternalSTAlgorithmParser.g:10445:2: ( ruleSTVarDeclaration )
            // InternalSTAlgorithmParser.g:10446:3: ruleSTVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__STVarDeclaration__NameAssignment_1"
    // InternalSTAlgorithmParser.g:10455:1: rule__STVarDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__STVarDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10459:1: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:10460:2: ( RULE_ID )
            {
            // InternalSTAlgorithmParser.g:10460:2: ( RULE_ID )
            // InternalSTAlgorithmParser.g:10461:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__NameAssignment_1"


    // $ANTLR start "rule__STVarDeclaration__LocatedAtAssignment_2_1"
    // InternalSTAlgorithmParser.g:10470:1: rule__STVarDeclaration__LocatedAtAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__STVarDeclaration__LocatedAtAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10474:1: ( ( ( RULE_ID ) ) )
            // InternalSTAlgorithmParser.g:10475:2: ( ( RULE_ID ) )
            {
            // InternalSTAlgorithmParser.g:10475:2: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:10476:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementCrossReference_2_1_0()); 
            }
            // InternalSTAlgorithmParser.g:10477:3: ( RULE_ID )
            // InternalSTAlgorithmParser.g:10478:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__LocatedAtAssignment_2_1"


    // $ANTLR start "rule__STVarDeclaration__ArrayAssignment_4_0"
    // InternalSTAlgorithmParser.g:10489:1: rule__STVarDeclaration__ArrayAssignment_4_0 : ( ( ARRAY ) ) ;
    public final void rule__STVarDeclaration__ArrayAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10493:1: ( ( ( ARRAY ) ) )
            // InternalSTAlgorithmParser.g:10494:2: ( ( ARRAY ) )
            {
            // InternalSTAlgorithmParser.g:10494:2: ( ( ARRAY ) )
            // InternalSTAlgorithmParser.g:10495:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }
            // InternalSTAlgorithmParser.g:10496:3: ( ARRAY )
            // InternalSTAlgorithmParser.g:10497:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__ArrayAssignment_4_0"


    // $ANTLR start "rule__STVarDeclaration__RangesAssignment_4_1_0_1"
    // InternalSTAlgorithmParser.g:10508:1: rule__STVarDeclaration__RangesAssignment_4_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__STVarDeclaration__RangesAssignment_4_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10512:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10513:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10513:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10514:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__RangesAssignment_4_1_0_1"


    // $ANTLR start "rule__STVarDeclaration__RangesAssignment_4_1_0_2_1"
    // InternalSTAlgorithmParser.g:10523:1: rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__STVarDeclaration__RangesAssignment_4_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10527:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10528:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10528:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10529:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__RangesAssignment_4_1_0_2_1"


    // $ANTLR start "rule__STVarDeclaration__CountAssignment_4_1_1_1"
    // InternalSTAlgorithmParser.g:10538:1: rule__STVarDeclaration__CountAssignment_4_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__STVarDeclaration__CountAssignment_4_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10542:1: ( ( ( Asterisk ) ) )
            // InternalSTAlgorithmParser.g:10543:2: ( ( Asterisk ) )
            {
            // InternalSTAlgorithmParser.g:10543:2: ( ( Asterisk ) )
            // InternalSTAlgorithmParser.g:10544:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }
            // InternalSTAlgorithmParser.g:10545:3: ( Asterisk )
            // InternalSTAlgorithmParser.g:10546:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__CountAssignment_4_1_1_1"


    // $ANTLR start "rule__STVarDeclaration__CountAssignment_4_1_1_2_1"
    // InternalSTAlgorithmParser.g:10557:1: rule__STVarDeclaration__CountAssignment_4_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__STVarDeclaration__CountAssignment_4_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10561:1: ( ( ( Asterisk ) ) )
            // InternalSTAlgorithmParser.g:10562:2: ( ( Asterisk ) )
            {
            // InternalSTAlgorithmParser.g:10562:2: ( ( Asterisk ) )
            // InternalSTAlgorithmParser.g:10563:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }
            // InternalSTAlgorithmParser.g:10564:3: ( Asterisk )
            // InternalSTAlgorithmParser.g:10565:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__CountAssignment_4_1_1_2_1"


    // $ANTLR start "rule__STVarDeclaration__TypeAssignment_5"
    // InternalSTAlgorithmParser.g:10576:1: rule__STVarDeclaration__TypeAssignment_5 : ( ( ruleSTAnyType ) ) ;
    public final void rule__STVarDeclaration__TypeAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10580:1: ( ( ( ruleSTAnyType ) ) )
            // InternalSTAlgorithmParser.g:10581:2: ( ( ruleSTAnyType ) )
            {
            // InternalSTAlgorithmParser.g:10581:2: ( ( ruleSTAnyType ) )
            // InternalSTAlgorithmParser.g:10582:3: ( ruleSTAnyType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementCrossReference_5_0()); 
            }
            // InternalSTAlgorithmParser.g:10583:3: ( ruleSTAnyType )
            // InternalSTAlgorithmParser.g:10584:4: ruleSTAnyType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_5_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_5_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementCrossReference_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__TypeAssignment_5"


    // $ANTLR start "rule__STVarDeclaration__MaxLengthAssignment_6_1"
    // InternalSTAlgorithmParser.g:10595:1: rule__STVarDeclaration__MaxLengthAssignment_6_1 : ( ruleSTExpression ) ;
    public final void rule__STVarDeclaration__MaxLengthAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10599:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10600:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10600:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10601:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__MaxLengthAssignment_6_1"


    // $ANTLR start "rule__STVarDeclaration__DefaultValueAssignment_7_1"
    // InternalSTAlgorithmParser.g:10610:1: rule__STVarDeclaration__DefaultValueAssignment_7_1 : ( ruleSTInitializerExpression ) ;
    public final void rule__STVarDeclaration__DefaultValueAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10614:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTAlgorithmParser.g:10615:2: ( ruleSTInitializerExpression )
            {
            // InternalSTAlgorithmParser.g:10615:2: ( ruleSTInitializerExpression )
            // InternalSTAlgorithmParser.g:10616:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getDefaultValueSTInitializerExpressionParserRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getDefaultValueSTInitializerExpressionParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__DefaultValueAssignment_7_1"


    // $ANTLR start "rule__STElementaryInitializerExpression__ValueAssignment"
    // InternalSTAlgorithmParser.g:10625:1: rule__STElementaryInitializerExpression__ValueAssignment : ( ruleSTExpression ) ;
    public final void rule__STElementaryInitializerExpression__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10629:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10630:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10630:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10631:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueSTExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueSTExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElementaryInitializerExpression__ValueAssignment"


    // $ANTLR start "rule__STArrayInitializerExpression__ValuesAssignment_1"
    // InternalSTAlgorithmParser.g:10640:1: rule__STArrayInitializerExpression__ValuesAssignment_1 : ( ruleSTArrayInitElement ) ;
    public final void rule__STArrayInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10644:1: ( ( ruleSTArrayInitElement ) )
            // InternalSTAlgorithmParser.g:10645:2: ( ruleSTArrayInitElement )
            {
            // InternalSTAlgorithmParser.g:10645:2: ( ruleSTArrayInitElement )
            // InternalSTAlgorithmParser.g:10646:3: ruleSTArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__STArrayInitializerExpression__ValuesAssignment_2_1"
    // InternalSTAlgorithmParser.g:10655:1: rule__STArrayInitializerExpression__ValuesAssignment_2_1 : ( ruleSTArrayInitElement ) ;
    public final void rule__STArrayInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10659:1: ( ( ruleSTArrayInitElement ) )
            // InternalSTAlgorithmParser.g:10660:2: ( ruleSTArrayInitElement )
            {
            // InternalSTAlgorithmParser.g:10660:2: ( ruleSTArrayInitElement )
            // InternalSTAlgorithmParser.g:10661:3: ruleSTArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__STArrayInitElement__IndexOrInitExpressionAssignment_0"
    // InternalSTAlgorithmParser.g:10670:1: rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__STArrayInitElement__IndexOrInitExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10674:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10675:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10675:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10676:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__IndexOrInitExpressionAssignment_0"


    // $ANTLR start "rule__STArrayInitElement__InitExpressionsAssignment_1_1"
    // InternalSTAlgorithmParser.g:10685:1: rule__STArrayInitElement__InitExpressionsAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__STArrayInitElement__InitExpressionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10689:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10690:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10690:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10691:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__InitExpressionsAssignment_1_1"


    // $ANTLR start "rule__STArrayInitElement__InitExpressionsAssignment_1_2_1"
    // InternalSTAlgorithmParser.g:10700:1: rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 : ( ruleSTExpression ) ;
    public final void rule__STArrayInitElement__InitExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10704:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10705:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10705:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10706:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsSTExpressionParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsSTExpressionParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__InitExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__STAssignmentStatement__LeftAssignment_0"
    // InternalSTAlgorithmParser.g:10715:1: rule__STAssignmentStatement__LeftAssignment_0 : ( ruleSTAccessExpression ) ;
    public final void rule__STAssignmentStatement__LeftAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10719:1: ( ( ruleSTAccessExpression ) )
            // InternalSTAlgorithmParser.g:10720:2: ( ruleSTAccessExpression )
            {
            // InternalSTAlgorithmParser.g:10720:2: ( ruleSTAccessExpression )
            // InternalSTAlgorithmParser.g:10721:3: ruleSTAccessExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLeftSTAccessExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLeftSTAccessExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__LeftAssignment_0"


    // $ANTLR start "rule__STAssignmentStatement__RightAssignment_2"
    // InternalSTAlgorithmParser.g:10730:1: rule__STAssignmentStatement__RightAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STAssignmentStatement__RightAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10734:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10735:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10735:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10736:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRightSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRightSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__RightAssignment_2"


    // $ANTLR start "rule__STCallStatement__CallAssignment"
    // InternalSTAlgorithmParser.g:10745:1: rule__STCallStatement__CallAssignment : ( ruleSTAccessExpression ) ;
    public final void rule__STCallStatement__CallAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10749:1: ( ( ruleSTAccessExpression ) )
            // InternalSTAlgorithmParser.g:10750:2: ( ruleSTAccessExpression )
            {
            // InternalSTAlgorithmParser.g:10750:2: ( ruleSTAccessExpression )
            // InternalSTAlgorithmParser.g:10751:3: ruleSTAccessExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallStatementAccess().getCallSTAccessExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallStatementAccess().getCallSTAccessExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallStatement__CallAssignment"


    // $ANTLR start "rule__STCallUnnamedArgument__ArgAssignment"
    // InternalSTAlgorithmParser.g:10760:1: rule__STCallUnnamedArgument__ArgAssignment : ( ruleSTExpression ) ;
    public final void rule__STCallUnnamedArgument__ArgAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10764:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10765:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10765:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10766:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentAccess().getArgSTExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentAccess().getArgSTExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallUnnamedArgument__ArgAssignment"


    // $ANTLR start "rule__STCallNamedInputArgument__TargetAssignment_0"
    // InternalSTAlgorithmParser.g:10775:1: rule__STCallNamedInputArgument__TargetAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__STCallNamedInputArgument__TargetAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10779:1: ( ( ( RULE_ID ) ) )
            // InternalSTAlgorithmParser.g:10780:2: ( ( RULE_ID ) )
            {
            // InternalSTAlgorithmParser.g:10780:2: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:10781:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getTargetINamedElementCrossReference_0_0()); 
            }
            // InternalSTAlgorithmParser.g:10782:3: ( RULE_ID )
            // InternalSTAlgorithmParser.g:10783:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getTargetINamedElementIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getTargetINamedElementIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getTargetINamedElementCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__TargetAssignment_0"


    // $ANTLR start "rule__STCallNamedInputArgument__SourceAssignment_2"
    // InternalSTAlgorithmParser.g:10794:1: rule__STCallNamedInputArgument__SourceAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STCallNamedInputArgument__SourceAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10798:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10799:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10799:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10800:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getSourceSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getSourceSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__SourceAssignment_2"


    // $ANTLR start "rule__STCallNamedOutputArgument__NotAssignment_0"
    // InternalSTAlgorithmParser.g:10809:1: rule__STCallNamedOutputArgument__NotAssignment_0 : ( ( NOT ) ) ;
    public final void rule__STCallNamedOutputArgument__NotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10813:1: ( ( ( NOT ) ) )
            // InternalSTAlgorithmParser.g:10814:2: ( ( NOT ) )
            {
            // InternalSTAlgorithmParser.g:10814:2: ( ( NOT ) )
            // InternalSTAlgorithmParser.g:10815:3: ( NOT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }
            // InternalSTAlgorithmParser.g:10816:3: ( NOT )
            // InternalSTAlgorithmParser.g:10817:4: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__NotAssignment_0"


    // $ANTLR start "rule__STCallNamedOutputArgument__SourceAssignment_1"
    // InternalSTAlgorithmParser.g:10828:1: rule__STCallNamedOutputArgument__SourceAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__STCallNamedOutputArgument__SourceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10832:1: ( ( ( RULE_ID ) ) )
            // InternalSTAlgorithmParser.g:10833:2: ( ( RULE_ID ) )
            {
            // InternalSTAlgorithmParser.g:10833:2: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:10834:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getSourceINamedElementCrossReference_1_0()); 
            }
            // InternalSTAlgorithmParser.g:10835:3: ( RULE_ID )
            // InternalSTAlgorithmParser.g:10836:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getSourceINamedElementIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getSourceINamedElementIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getSourceINamedElementCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__SourceAssignment_1"


    // $ANTLR start "rule__STCallNamedOutputArgument__TargetAssignment_3"
    // InternalSTAlgorithmParser.g:10847:1: rule__STCallNamedOutputArgument__TargetAssignment_3 : ( ( RULE_ID ) ) ;
    public final void rule__STCallNamedOutputArgument__TargetAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10851:1: ( ( ( RULE_ID ) ) )
            // InternalSTAlgorithmParser.g:10852:2: ( ( RULE_ID ) )
            {
            // InternalSTAlgorithmParser.g:10852:2: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:10853:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getTargetINamedElementCrossReference_3_0()); 
            }
            // InternalSTAlgorithmParser.g:10854:3: ( RULE_ID )
            // InternalSTAlgorithmParser.g:10855:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getTargetINamedElementIDTerminalRuleCall_3_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getTargetINamedElementIDTerminalRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getTargetINamedElementCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__TargetAssignment_3"


    // $ANTLR start "rule__STIfStatement__ConditionAssignment_1"
    // InternalSTAlgorithmParser.g:10866:1: rule__STIfStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STIfStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10870:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10871:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10871:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10872:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STIfStatement__StatementsAssignment_3"
    // InternalSTAlgorithmParser.g:10881:1: rule__STIfStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STIfStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10885:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:10886:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:10886:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:10887:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STIfStatement__ElseifsAssignment_4"
    // InternalSTAlgorithmParser.g:10896:1: rule__STIfStatement__ElseifsAssignment_4 : ( ruleSTElseIfPart ) ;
    public final void rule__STIfStatement__ElseifsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10900:1: ( ( ruleSTElseIfPart ) )
            // InternalSTAlgorithmParser.g:10901:2: ( ruleSTElseIfPart )
            {
            // InternalSTAlgorithmParser.g:10901:2: ( ruleSTElseIfPart )
            // InternalSTAlgorithmParser.g:10902:3: ruleSTElseIfPart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ElseifsAssignment_4"


    // $ANTLR start "rule__STIfStatement__ElseAssignment_5"
    // InternalSTAlgorithmParser.g:10911:1: rule__STIfStatement__ElseAssignment_5 : ( ruleSTElsePart ) ;
    public final void rule__STIfStatement__ElseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10915:1: ( ( ruleSTElsePart ) )
            // InternalSTAlgorithmParser.g:10916:2: ( ruleSTElsePart )
            {
            // InternalSTAlgorithmParser.g:10916:2: ( ruleSTElsePart )
            // InternalSTAlgorithmParser.g:10917:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ElseAssignment_5"


    // $ANTLR start "rule__STElseIfPart__ConditionAssignment_1"
    // InternalSTAlgorithmParser.g:10926:1: rule__STElseIfPart__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STElseIfPart__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10930:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10931:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10931:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10932:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__ConditionAssignment_1"


    // $ANTLR start "rule__STElseIfPart__StatementsAssignment_3"
    // InternalSTAlgorithmParser.g:10941:1: rule__STElseIfPart__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STElseIfPart__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10945:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:10946:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:10946:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:10947:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__StatementsAssignment_3"


    // $ANTLR start "rule__STCaseStatement__SelectorAssignment_1"
    // InternalSTAlgorithmParser.g:10956:1: rule__STCaseStatement__SelectorAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseStatement__SelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10960:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10961:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10961:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10962:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__SelectorAssignment_1"


    // $ANTLR start "rule__STCaseStatement__CasesAssignment_3"
    // InternalSTAlgorithmParser.g:10971:1: rule__STCaseStatement__CasesAssignment_3 : ( ruleSTCaseCases ) ;
    public final void rule__STCaseStatement__CasesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10975:1: ( ( ruleSTCaseCases ) )
            // InternalSTAlgorithmParser.g:10976:2: ( ruleSTCaseCases )
            {
            // InternalSTAlgorithmParser.g:10976:2: ( ruleSTCaseCases )
            // InternalSTAlgorithmParser.g:10977:3: ruleSTCaseCases
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__CasesAssignment_3"


    // $ANTLR start "rule__STCaseStatement__ElseAssignment_4"
    // InternalSTAlgorithmParser.g:10986:1: rule__STCaseStatement__ElseAssignment_4 : ( ruleSTElsePart ) ;
    public final void rule__STCaseStatement__ElseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10990:1: ( ( ruleSTElsePart ) )
            // InternalSTAlgorithmParser.g:10991:2: ( ruleSTElsePart )
            {
            // InternalSTAlgorithmParser.g:10991:2: ( ruleSTElsePart )
            // InternalSTAlgorithmParser.g:10992:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__ElseAssignment_4"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_0"
    // InternalSTAlgorithmParser.g:11001:1: rule__STCaseCases__ConditionsAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11005:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:11006:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:11006:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:11007:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_0"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_1_1"
    // InternalSTAlgorithmParser.g:11016:1: rule__STCaseCases__ConditionsAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11020:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:11021:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:11021:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:11022:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_1_1"


    // $ANTLR start "rule__STCaseCases__StatementsAssignment_3"
    // InternalSTAlgorithmParser.g:11031:1: rule__STCaseCases__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STCaseCases__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11035:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:11036:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:11036:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:11037:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__StatementsAssignment_3"


    // $ANTLR start "rule__STElsePart__StatementsAssignment_2"
    // InternalSTAlgorithmParser.g:11046:1: rule__STElsePart__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STElsePart__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11050:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:11051:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:11051:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:11052:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__StatementsAssignment_2"


    // $ANTLR start "rule__STForStatement__VariableAssignment_1"
    // InternalSTAlgorithmParser.g:11061:1: rule__STForStatement__VariableAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__STForStatement__VariableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11065:1: ( ( ( RULE_ID ) ) )
            // InternalSTAlgorithmParser.g:11066:2: ( ( RULE_ID ) )
            {
            // InternalSTAlgorithmParser.g:11066:2: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:11067:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationCrossReference_1_0()); 
            }
            // InternalSTAlgorithmParser.g:11068:3: ( RULE_ID )
            // InternalSTAlgorithmParser.g:11069:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__VariableAssignment_1"


    // $ANTLR start "rule__STForStatement__FromAssignment_3"
    // InternalSTAlgorithmParser.g:11080:1: rule__STForStatement__FromAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__FromAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11084:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:11085:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:11085:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:11086:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFromSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFromSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__FromAssignment_3"


    // $ANTLR start "rule__STForStatement__ToAssignment_5"
    // InternalSTAlgorithmParser.g:11095:1: rule__STForStatement__ToAssignment_5 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ToAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11099:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:11100:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:11100:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:11101:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ToAssignment_5"


    // $ANTLR start "rule__STForStatement__ByAssignment_6_1"
    // InternalSTAlgorithmParser.g:11110:1: rule__STForStatement__ByAssignment_6_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ByAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11114:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:11115:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:11115:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:11116:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ByAssignment_6_1"


    // $ANTLR start "rule__STForStatement__StatementsAssignment_8"
    // InternalSTAlgorithmParser.g:11125:1: rule__STForStatement__StatementsAssignment_8 : ( ruleSTStatement ) ;
    public final void rule__STForStatement__StatementsAssignment_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11129:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:11130:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:11130:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:11131:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__StatementsAssignment_8"


    // $ANTLR start "rule__STWhileStatement__ConditionAssignment_1"
    // InternalSTAlgorithmParser.g:11140:1: rule__STWhileStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STWhileStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11144:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:11145:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:11145:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:11146:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STWhileStatement__StatementsAssignment_3"
    // InternalSTAlgorithmParser.g:11155:1: rule__STWhileStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STWhileStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11159:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:11160:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:11160:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:11161:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STRepeatStatement__StatementsAssignment_1"
    // InternalSTAlgorithmParser.g:11170:1: rule__STRepeatStatement__StatementsAssignment_1 : ( ruleSTStatement ) ;
    public final void rule__STRepeatStatement__StatementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11174:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:11175:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:11175:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:11176:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__StatementsAssignment_1"


    // $ANTLR start "rule__STRepeatStatement__ConditionAssignment_3"
    // InternalSTAlgorithmParser.g:11185:1: rule__STRepeatStatement__ConditionAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STRepeatStatement__ConditionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11189:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:11190:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:11190:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:11191:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__ConditionAssignment_3"


    // $ANTLR start "rule__STSubrangeExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:11200:1: rule__STSubrangeExpression__OpAssignment_1_0_1 : ( ruleSubrangeOperator ) ;
    public final void rule__STSubrangeExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11204:1: ( ( ruleSubrangeOperator ) )
            // InternalSTAlgorithmParser.g:11205:2: ( ruleSubrangeOperator )
            {
            // InternalSTAlgorithmParser.g:11205:2: ( ruleSubrangeOperator )
            // InternalSTAlgorithmParser.g:11206:3: ruleSubrangeOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubrangeOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STSubrangeExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:11215:1: rule__STSubrangeExpression__RightAssignment_1_1 : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11219:1: ( ( ruleSTOrExpression ) )
            // InternalSTAlgorithmParser.g:11220:2: ( ruleSTOrExpression )
            {
            // InternalSTAlgorithmParser.g:11220:2: ( ruleSTOrExpression )
            // InternalSTAlgorithmParser.g:11221:3: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STOrExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:11230:1: rule__STOrExpression__OpAssignment_1_0_1 : ( ruleOrOperator ) ;
    public final void rule__STOrExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11234:1: ( ( ruleOrOperator ) )
            // InternalSTAlgorithmParser.g:11235:2: ( ruleOrOperator )
            {
            // InternalSTAlgorithmParser.g:11235:2: ( ruleOrOperator )
            // InternalSTAlgorithmParser.g:11236:3: ruleOrOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STOrExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:11245:1: rule__STOrExpression__RightAssignment_1_1 : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11249:1: ( ( ruleSTXorExpression ) )
            // InternalSTAlgorithmParser.g:11250:2: ( ruleSTXorExpression )
            {
            // InternalSTAlgorithmParser.g:11250:2: ( ruleSTXorExpression )
            // InternalSTAlgorithmParser.g:11251:3: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STXorExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:11260:1: rule__STXorExpression__OpAssignment_1_0_1 : ( ruleXorOperator ) ;
    public final void rule__STXorExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11264:1: ( ( ruleXorOperator ) )
            // InternalSTAlgorithmParser.g:11265:2: ( ruleXorOperator )
            {
            // InternalSTAlgorithmParser.g:11265:2: ( ruleXorOperator )
            // InternalSTAlgorithmParser.g:11266:3: ruleXorOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXorOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STXorExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:11275:1: rule__STXorExpression__RightAssignment_1_1 : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11279:1: ( ( ruleSTAndExpression ) )
            // InternalSTAlgorithmParser.g:11280:2: ( ruleSTAndExpression )
            {
            // InternalSTAlgorithmParser.g:11280:2: ( ruleSTAndExpression )
            // InternalSTAlgorithmParser.g:11281:3: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAndExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:11290:1: rule__STAndExpression__OpAssignment_1_0_1 : ( ruleAndOperator ) ;
    public final void rule__STAndExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11294:1: ( ( ruleAndOperator ) )
            // InternalSTAlgorithmParser.g:11295:2: ( ruleAndOperator )
            {
            // InternalSTAlgorithmParser.g:11295:2: ( ruleAndOperator )
            // InternalSTAlgorithmParser.g:11296:3: ruleAndOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAndOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAndExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:11305:1: rule__STAndExpression__RightAssignment_1_1 : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11309:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTAlgorithmParser.g:11310:2: ( ruleSTEqualityExpression )
            {
            // InternalSTAlgorithmParser.g:11310:2: ( ruleSTEqualityExpression )
            // InternalSTAlgorithmParser.g:11311:3: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STEqualityExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:11320:1: rule__STEqualityExpression__OpAssignment_1_0_1 : ( ruleEqualityOperator ) ;
    public final void rule__STEqualityExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11324:1: ( ( ruleEqualityOperator ) )
            // InternalSTAlgorithmParser.g:11325:2: ( ruleEqualityOperator )
            {
            // InternalSTAlgorithmParser.g:11325:2: ( ruleEqualityOperator )
            // InternalSTAlgorithmParser.g:11326:3: ruleEqualityOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STEqualityExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:11335:1: rule__STEqualityExpression__RightAssignment_1_1 : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11339:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTAlgorithmParser.g:11340:2: ( ruleSTComparisonExpression )
            {
            // InternalSTAlgorithmParser.g:11340:2: ( ruleSTComparisonExpression )
            // InternalSTAlgorithmParser.g:11341:3: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STComparisonExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:11350:1: rule__STComparisonExpression__OpAssignment_1_0_1 : ( ruleCompareOperator ) ;
    public final void rule__STComparisonExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11354:1: ( ( ruleCompareOperator ) )
            // InternalSTAlgorithmParser.g:11355:2: ( ruleCompareOperator )
            {
            // InternalSTAlgorithmParser.g:11355:2: ( ruleCompareOperator )
            // InternalSTAlgorithmParser.g:11356:3: ruleCompareOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STComparisonExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:11365:1: rule__STComparisonExpression__RightAssignment_1_1 : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11369:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTAlgorithmParser.g:11370:2: ( ruleSTAddSubExpression )
            {
            // InternalSTAlgorithmParser.g:11370:2: ( ruleSTAddSubExpression )
            // InternalSTAlgorithmParser.g:11371:3: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAddSubExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:11380:1: rule__STAddSubExpression__OpAssignment_1_0_1 : ( ruleAddSubOperator ) ;
    public final void rule__STAddSubExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11384:1: ( ( ruleAddSubOperator ) )
            // InternalSTAlgorithmParser.g:11385:2: ( ruleAddSubOperator )
            {
            // InternalSTAlgorithmParser.g:11385:2: ( ruleAddSubOperator )
            // InternalSTAlgorithmParser.g:11386:3: ruleAddSubOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAddSubOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAddSubExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:11395:1: rule__STAddSubExpression__RightAssignment_1_1 : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11399:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTAlgorithmParser.g:11400:2: ( ruleSTMulDivModExpression )
            {
            // InternalSTAlgorithmParser.g:11400:2: ( ruleSTMulDivModExpression )
            // InternalSTAlgorithmParser.g:11401:3: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STMulDivModExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:11410:1: rule__STMulDivModExpression__OpAssignment_1_0_1 : ( ruleMulDivModOperator ) ;
    public final void rule__STMulDivModExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11414:1: ( ( ruleMulDivModOperator ) )
            // InternalSTAlgorithmParser.g:11415:2: ( ruleMulDivModOperator )
            {
            // InternalSTAlgorithmParser.g:11415:2: ( ruleMulDivModOperator )
            // InternalSTAlgorithmParser.g:11416:3: ruleMulDivModOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulDivModOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STMulDivModExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:11425:1: rule__STMulDivModExpression__RightAssignment_1_1 : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11429:1: ( ( ruleSTPowerExpression ) )
            // InternalSTAlgorithmParser.g:11430:2: ( ruleSTPowerExpression )
            {
            // InternalSTAlgorithmParser.g:11430:2: ( ruleSTPowerExpression )
            // InternalSTAlgorithmParser.g:11431:3: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STPowerExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:11440:1: rule__STPowerExpression__OpAssignment_1_0_1 : ( rulePowerOperator ) ;
    public final void rule__STPowerExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11444:1: ( ( rulePowerOperator ) )
            // InternalSTAlgorithmParser.g:11445:2: ( rulePowerOperator )
            {
            // InternalSTAlgorithmParser.g:11445:2: ( rulePowerOperator )
            // InternalSTAlgorithmParser.g:11446:3: rulePowerOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePowerOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STPowerExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:11455:1: rule__STPowerExpression__RightAssignment_1_1 : ( ruleSTUnaryExpression ) ;
    public final void rule__STPowerExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11459:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTAlgorithmParser.g:11460:2: ( ruleSTUnaryExpression )
            {
            // InternalSTAlgorithmParser.g:11460:2: ( ruleSTUnaryExpression )
            // InternalSTAlgorithmParser.g:11461:3: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightSTUnaryExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightSTUnaryExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STUnaryExpression__OpAssignment_1_1"
    // InternalSTAlgorithmParser.g:11470:1: rule__STUnaryExpression__OpAssignment_1_1 : ( ruleUnaryOperator ) ;
    public final void rule__STUnaryExpression__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11474:1: ( ( ruleUnaryOperator ) )
            // InternalSTAlgorithmParser.g:11475:2: ( ruleUnaryOperator )
            {
            // InternalSTAlgorithmParser.g:11475:2: ( ruleUnaryOperator )
            // InternalSTAlgorithmParser.g:11476:3: ruleUnaryOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__OpAssignment_1_1"


    // $ANTLR start "rule__STUnaryExpression__ExpressionAssignment_1_2"
    // InternalSTAlgorithmParser.g:11485:1: rule__STUnaryExpression__ExpressionAssignment_1_2 : ( ruleSTUnaryExpression ) ;
    public final void rule__STUnaryExpression__ExpressionAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11489:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTAlgorithmParser.g:11490:2: ( ruleSTUnaryExpression )
            {
            // InternalSTAlgorithmParser.g:11490:2: ( ruleSTUnaryExpression )
            // InternalSTAlgorithmParser.g:11491:3: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getExpressionSTUnaryExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getExpressionSTUnaryExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__ExpressionAssignment_1_2"


    // $ANTLR start "rule__STAccessExpression__MemberAssignment_1_0_2"
    // InternalSTAlgorithmParser.g:11500:1: rule__STAccessExpression__MemberAssignment_1_0_2 : ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) ) ;
    public final void rule__STAccessExpression__MemberAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11504:1: ( ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) ) )
            // InternalSTAlgorithmParser.g:11505:2: ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) )
            {
            // InternalSTAlgorithmParser.g:11505:2: ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) )
            // InternalSTAlgorithmParser.g:11506:3: ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getMemberAlternatives_1_0_2_0()); 
            }
            // InternalSTAlgorithmParser.g:11507:3: ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 )
            // InternalSTAlgorithmParser.g:11507:4: rule__STAccessExpression__MemberAlternatives_1_0_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__MemberAlternatives_1_0_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getMemberAlternatives_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__MemberAssignment_1_0_2"


    // $ANTLR start "rule__STAccessExpression__IndexAssignment_1_1_2"
    // InternalSTAlgorithmParser.g:11515:1: rule__STAccessExpression__IndexAssignment_1_1_2 : ( ruleSTExpression ) ;
    public final void rule__STAccessExpression__IndexAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11519:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:11520:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:11520:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:11521:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__IndexAssignment_1_1_2"


    // $ANTLR start "rule__STAccessExpression__IndexAssignment_1_1_3_1"
    // InternalSTAlgorithmParser.g:11530:1: rule__STAccessExpression__IndexAssignment_1_1_3_1 : ( ruleSTExpression ) ;
    public final void rule__STAccessExpression__IndexAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11534:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:11535:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:11535:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:11536:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__IndexAssignment_1_1_3_1"


    // $ANTLR start "rule__STFeatureExpression__FeatureAssignment_1"
    // InternalSTAlgorithmParser.g:11545:1: rule__STFeatureExpression__FeatureAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__STFeatureExpression__FeatureAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11549:1: ( ( ( RULE_ID ) ) )
            // InternalSTAlgorithmParser.g:11550:2: ( ( RULE_ID ) )
            {
            // InternalSTAlgorithmParser.g:11550:2: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:11551:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementCrossReference_1_0()); 
            }
            // InternalSTAlgorithmParser.g:11552:3: ( RULE_ID )
            // InternalSTAlgorithmParser.g:11553:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__FeatureAssignment_1"


    // $ANTLR start "rule__STFeatureExpression__ParametersAssignment_2_1_0"
    // InternalSTAlgorithmParser.g:11564:1: rule__STFeatureExpression__ParametersAssignment_2_1_0 : ( ruleSTCallArgument ) ;
    public final void rule__STFeatureExpression__ParametersAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11568:1: ( ( ruleSTCallArgument ) )
            // InternalSTAlgorithmParser.g:11569:2: ( ruleSTCallArgument )
            {
            // InternalSTAlgorithmParser.g:11569:2: ( ruleSTCallArgument )
            // InternalSTAlgorithmParser.g:11570:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__ParametersAssignment_2_1_0"


    // $ANTLR start "rule__STFeatureExpression__ParametersAssignment_2_1_1_1"
    // InternalSTAlgorithmParser.g:11579:1: rule__STFeatureExpression__ParametersAssignment_2_1_1_1 : ( ruleSTCallArgument ) ;
    public final void rule__STFeatureExpression__ParametersAssignment_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11583:1: ( ( ruleSTCallArgument ) )
            // InternalSTAlgorithmParser.g:11584:2: ( ruleSTCallArgument )
            {
            // InternalSTAlgorithmParser.g:11584:2: ( ruleSTCallArgument )
            // InternalSTAlgorithmParser.g:11585:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__ParametersAssignment_2_1_1_1"


    // $ANTLR start "rule__STMultibitPartialExpression__SpecifierAssignment_1"
    // InternalSTAlgorithmParser.g:11594:1: rule__STMultibitPartialExpression__SpecifierAssignment_1 : ( ruleSTMultiBitAccessSpecifier ) ;
    public final void rule__STMultibitPartialExpression__SpecifierAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11598:1: ( ( ruleSTMultiBitAccessSpecifier ) )
            // InternalSTAlgorithmParser.g:11599:2: ( ruleSTMultiBitAccessSpecifier )
            {
            // InternalSTAlgorithmParser.g:11599:2: ( ruleSTMultiBitAccessSpecifier )
            // InternalSTAlgorithmParser.g:11600:3: ruleSTMultiBitAccessSpecifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierSTMultiBitAccessSpecifierEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMultiBitAccessSpecifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierSTMultiBitAccessSpecifierEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__SpecifierAssignment_1"


    // $ANTLR start "rule__STMultibitPartialExpression__IndexAssignment_2_0"
    // InternalSTAlgorithmParser.g:11609:1: rule__STMultibitPartialExpression__IndexAssignment_2_0 : ( RULE_INT ) ;
    public final void rule__STMultibitPartialExpression__IndexAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11613:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:11614:2: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:11614:2: ( RULE_INT )
            // InternalSTAlgorithmParser.g:11615:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexINTTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexINTTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__IndexAssignment_2_0"


    // $ANTLR start "rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1"
    // InternalSTAlgorithmParser.g:11624:1: rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 : ( ruleSTExpression ) ;
    public final void rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11628:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:11629:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:11629:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:11630:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionSTExpressionParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionSTExpressionParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1"


    // $ANTLR start "rule__STNumericLiteral__TypeAssignment_0_0"
    // InternalSTAlgorithmParser.g:11639:1: rule__STNumericLiteral__TypeAssignment_0_0 : ( ( ruleSTNumericLiteralType ) ) ;
    public final void rule__STNumericLiteral__TypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11643:1: ( ( ( ruleSTNumericLiteralType ) ) )
            // InternalSTAlgorithmParser.g:11644:2: ( ( ruleSTNumericLiteralType ) )
            {
            // InternalSTAlgorithmParser.g:11644:2: ( ( ruleSTNumericLiteralType ) )
            // InternalSTAlgorithmParser.g:11645:3: ( ruleSTNumericLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }
            // InternalSTAlgorithmParser.g:11646:3: ( ruleSTNumericLiteralType )
            // InternalSTAlgorithmParser.g:11647:4: ruleSTNumericLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeSTNumericLiteralTypeParserRuleCall_0_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeSTNumericLiteralTypeParserRuleCall_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__TypeAssignment_0_0"


    // $ANTLR start "rule__STNumericLiteral__ValueAssignment_1"
    // InternalSTAlgorithmParser.g:11658:1: rule__STNumericLiteral__ValueAssignment_1 : ( ( rule__STNumericLiteral__ValueAlternatives_1_0 ) ) ;
    public final void rule__STNumericLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11662:1: ( ( ( rule__STNumericLiteral__ValueAlternatives_1_0 ) ) )
            // InternalSTAlgorithmParser.g:11663:2: ( ( rule__STNumericLiteral__ValueAlternatives_1_0 ) )
            {
            // InternalSTAlgorithmParser.g:11663:2: ( ( rule__STNumericLiteral__ValueAlternatives_1_0 ) )
            // InternalSTAlgorithmParser.g:11664:3: ( rule__STNumericLiteral__ValueAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueAlternatives_1_0()); 
            }
            // InternalSTAlgorithmParser.g:11665:3: ( rule__STNumericLiteral__ValueAlternatives_1_0 )
            // InternalSTAlgorithmParser.g:11665:4: rule__STNumericLiteral__ValueAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__ValueAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__ValueAssignment_1"


    // $ANTLR start "rule__STDateLiteral__TypeAssignment_0"
    // InternalSTAlgorithmParser.g:11673:1: rule__STDateLiteral__TypeAssignment_0 : ( ( ruleSTDateLiteralType ) ) ;
    public final void rule__STDateLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11677:1: ( ( ( ruleSTDateLiteralType ) ) )
            // InternalSTAlgorithmParser.g:11678:2: ( ( ruleSTDateLiteralType ) )
            {
            // InternalSTAlgorithmParser.g:11678:2: ( ( ruleSTDateLiteralType ) )
            // InternalSTAlgorithmParser.g:11679:3: ( ruleSTDateLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTAlgorithmParser.g:11680:3: ( ruleSTDateLiteralType )
            // InternalSTAlgorithmParser.g:11681:4: ruleSTDateLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeSTDateLiteralTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTDateLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeSTDateLiteralTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STDateLiteral__ValueAssignment_2"
    // InternalSTAlgorithmParser.g:11692:1: rule__STDateLiteral__ValueAssignment_2 : ( ruleDate ) ;
    public final void rule__STDateLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11696:1: ( ( ruleDate ) )
            // InternalSTAlgorithmParser.g:11697:2: ( ruleDate )
            {
            // InternalSTAlgorithmParser.g:11697:2: ( ruleDate )
            // InternalSTAlgorithmParser.g:11698:3: ruleDate
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getValueDateParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getValueDateParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STTimeLiteral__TypeAssignment_0"
    // InternalSTAlgorithmParser.g:11707:1: rule__STTimeLiteral__TypeAssignment_0 : ( ( ruleSTTimeLiteralType ) ) ;
    public final void rule__STTimeLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11711:1: ( ( ( ruleSTTimeLiteralType ) ) )
            // InternalSTAlgorithmParser.g:11712:2: ( ( ruleSTTimeLiteralType ) )
            {
            // InternalSTAlgorithmParser.g:11712:2: ( ( ruleSTTimeLiteralType ) )
            // InternalSTAlgorithmParser.g:11713:3: ( ruleSTTimeLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTAlgorithmParser.g:11714:3: ( ruleSTTimeLiteralType )
            // InternalSTAlgorithmParser.g:11715:4: ruleSTTimeLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeSTTimeLiteralTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeSTTimeLiteralTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STTimeLiteral__ValueAssignment_2"
    // InternalSTAlgorithmParser.g:11726:1: rule__STTimeLiteral__ValueAssignment_2 : ( ruleTime ) ;
    public final void rule__STTimeLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11730:1: ( ( ruleTime ) )
            // InternalSTAlgorithmParser.g:11731:2: ( ruleTime )
            {
            // InternalSTAlgorithmParser.g:11731:2: ( ruleTime )
            // InternalSTAlgorithmParser.g:11732:3: ruleTime
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getValueTimeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getValueTimeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STTimeOfDayLiteral__TypeAssignment_0"
    // InternalSTAlgorithmParser.g:11741:1: rule__STTimeOfDayLiteral__TypeAssignment_0 : ( ( ruleSTTimeOfDayType ) ) ;
    public final void rule__STTimeOfDayLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11745:1: ( ( ( ruleSTTimeOfDayType ) ) )
            // InternalSTAlgorithmParser.g:11746:2: ( ( ruleSTTimeOfDayType ) )
            {
            // InternalSTAlgorithmParser.g:11746:2: ( ( ruleSTTimeOfDayType ) )
            // InternalSTAlgorithmParser.g:11747:3: ( ruleSTTimeOfDayType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTAlgorithmParser.g:11748:3: ( ruleSTTimeOfDayType )
            // InternalSTAlgorithmParser.g:11749:4: ruleSTTimeOfDayType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeSTTimeOfDayTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTTimeOfDayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeSTTimeOfDayTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STTimeOfDayLiteral__ValueAssignment_2"
    // InternalSTAlgorithmParser.g:11760:1: rule__STTimeOfDayLiteral__ValueAssignment_2 : ( ruleTimeOfDay ) ;
    public final void rule__STTimeOfDayLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11764:1: ( ( ruleTimeOfDay ) )
            // InternalSTAlgorithmParser.g:11765:2: ( ruleTimeOfDay )
            {
            // InternalSTAlgorithmParser.g:11765:2: ( ruleTimeOfDay )
            // InternalSTAlgorithmParser.g:11766:3: ruleTimeOfDay
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getValueTimeOfDayParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getValueTimeOfDayParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STDateAndTimeLiteral__TypeAssignment_0"
    // InternalSTAlgorithmParser.g:11775:1: rule__STDateAndTimeLiteral__TypeAssignment_0 : ( ( ruleSTDateAndTimeType ) ) ;
    public final void rule__STDateAndTimeLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11779:1: ( ( ( ruleSTDateAndTimeType ) ) )
            // InternalSTAlgorithmParser.g:11780:2: ( ( ruleSTDateAndTimeType ) )
            {
            // InternalSTAlgorithmParser.g:11780:2: ( ( ruleSTDateAndTimeType ) )
            // InternalSTAlgorithmParser.g:11781:3: ( ruleSTDateAndTimeType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTAlgorithmParser.g:11782:3: ( ruleSTDateAndTimeType )
            // InternalSTAlgorithmParser.g:11783:4: ruleSTDateAndTimeType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeSTDateAndTimeTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTDateAndTimeType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeSTDateAndTimeTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STDateAndTimeLiteral__ValueAssignment_2"
    // InternalSTAlgorithmParser.g:11794:1: rule__STDateAndTimeLiteral__ValueAssignment_2 : ( ruleDateAndTime ) ;
    public final void rule__STDateAndTimeLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11798:1: ( ( ruleDateAndTime ) )
            // InternalSTAlgorithmParser.g:11799:2: ( ruleDateAndTime )
            {
            // InternalSTAlgorithmParser.g:11799:2: ( ruleDateAndTime )
            // InternalSTAlgorithmParser.g:11800:3: ruleDateAndTime
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getValueDateAndTimeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDateAndTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getValueDateAndTimeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STStringLiteral__TypeAssignment_0_0"
    // InternalSTAlgorithmParser.g:11809:1: rule__STStringLiteral__TypeAssignment_0_0 : ( ( ruleSTAnyCharsType ) ) ;
    public final void rule__STStringLiteral__TypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11813:1: ( ( ( ruleSTAnyCharsType ) ) )
            // InternalSTAlgorithmParser.g:11814:2: ( ( ruleSTAnyCharsType ) )
            {
            // InternalSTAlgorithmParser.g:11814:2: ( ( ruleSTAnyCharsType ) )
            // InternalSTAlgorithmParser.g:11815:3: ( ruleSTAnyCharsType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }
            // InternalSTAlgorithmParser.g:11816:3: ( ruleSTAnyCharsType )
            // InternalSTAlgorithmParser.g:11817:4: ruleSTAnyCharsType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeSTAnyCharsTypeParserRuleCall_0_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyCharsType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeSTAnyCharsTypeParserRuleCall_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__TypeAssignment_0_0"


    // $ANTLR start "rule__STStringLiteral__ValueAssignment_1"
    // InternalSTAlgorithmParser.g:11828:1: rule__STStringLiteral__ValueAssignment_1 : ( ( rule__STStringLiteral__ValueAlternatives_1_0 ) ) ;
    public final void rule__STStringLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11832:1: ( ( ( rule__STStringLiteral__ValueAlternatives_1_0 ) ) )
            // InternalSTAlgorithmParser.g:11833:2: ( ( rule__STStringLiteral__ValueAlternatives_1_0 ) )
            {
            // InternalSTAlgorithmParser.g:11833:2: ( ( rule__STStringLiteral__ValueAlternatives_1_0 ) )
            // InternalSTAlgorithmParser.g:11834:3: ( rule__STStringLiteral__ValueAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getValueAlternatives_1_0()); 
            }
            // InternalSTAlgorithmParser.g:11835:3: ( rule__STStringLiteral__ValueAlternatives_1_0 )
            // InternalSTAlgorithmParser.g:11835:4: rule__STStringLiteral__ValueAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__ValueAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getValueAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__ValueAssignment_1"

    // $ANTLR start synpred10_InternalSTAlgorithmParser
    public final void synpred10_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:2070:2: ( ( ( ruleSTAssignmentStatement ) ) )
        // InternalSTAlgorithmParser.g:2070:2: ( ( ruleSTAssignmentStatement ) )
        {
        // InternalSTAlgorithmParser.g:2070:2: ( ( ruleSTAssignmentStatement ) )
        // InternalSTAlgorithmParser.g:2071:3: ( ruleSTAssignmentStatement )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
        }
        // InternalSTAlgorithmParser.g:2072:3: ( ruleSTAssignmentStatement )
        // InternalSTAlgorithmParser.g:2072:4: ruleSTAssignmentStatement
        {
        pushFollow(FOLLOW_2);
        ruleSTAssignmentStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred10_InternalSTAlgorithmParser

    // $ANTLR start synpred11_InternalSTAlgorithmParser
    public final void synpred11_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:2076:2: ( ( ruleSTCallStatement ) )
        // InternalSTAlgorithmParser.g:2076:2: ( ruleSTCallStatement )
        {
        // InternalSTAlgorithmParser.g:2076:2: ( ruleSTCallStatement )
        // InternalSTAlgorithmParser.g:2077:3: ruleSTCallStatement
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTStatementAccess().getSTCallStatementParserRuleCall_0_0_6()); 
        }
        pushFollow(FOLLOW_2);
        ruleSTCallStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred11_InternalSTAlgorithmParser

    // $ANTLR start synpred16_InternalSTAlgorithmParser
    public final void synpred16_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:2136:2: ( ( ( ruleSTAccessExpression ) ) )
        // InternalSTAlgorithmParser.g:2136:2: ( ( ruleSTAccessExpression ) )
        {
        // InternalSTAlgorithmParser.g:2136:2: ( ( ruleSTAccessExpression ) )
        // InternalSTAlgorithmParser.g:2137:3: ( ruleSTAccessExpression )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
        }
        // InternalSTAlgorithmParser.g:2138:3: ( ruleSTAccessExpression )
        // InternalSTAlgorithmParser.g:2138:4: ruleSTAccessExpression
        {
        pushFollow(FOLLOW_2);
        ruleSTAccessExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred16_InternalSTAlgorithmParser

    // $ANTLR start synpred111_InternalSTAlgorithmParser
    public final void synpred111_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:5747:3: ( rule__STCaseCases__StatementsAssignment_3 )
        // InternalSTAlgorithmParser.g:5747:3: rule__STCaseCases__StatementsAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__STCaseCases__StatementsAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred111_InternalSTAlgorithmParser

    // $ANTLR start synpred128_InternalSTAlgorithmParser
    public final void synpred128_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:8501:3: ( rule__STFeatureExpression__Group_2__0 )
        // InternalSTAlgorithmParser.g:8501:3: rule__STFeatureExpression__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__STFeatureExpression__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred128_InternalSTAlgorithmParser

    // $ANTLR start synpred135_InternalSTAlgorithmParser
    public final void synpred135_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:9473:3: ( rule__Number__Group_2__0 )
        // InternalSTAlgorithmParser.g:9473:3: rule__Number__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__Number__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred135_InternalSTAlgorithmParser

    // $ANTLR start synpred136_InternalSTAlgorithmParser
    public final void synpred136_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:9986:3: ( rule__DateAndTime__Group_11__0 )
        // InternalSTAlgorithmParser.g:9986:3: rule__DateAndTime__Group_11__0
        {
        pushFollow(FOLLOW_2);
        rule__DateAndTime__Group_11__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred136_InternalSTAlgorithmParser

    // $ANTLR start synpred137_InternalSTAlgorithmParser
    public final void synpred137_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:10202:3: ( rule__TimeOfDay__Group_5__0 )
        // InternalSTAlgorithmParser.g:10202:3: rule__TimeOfDay__Group_5__0
        {
        pushFollow(FOLLOW_2);
        rule__TimeOfDay__Group_5__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred137_InternalSTAlgorithmParser

    // Delegated rules

    public final boolean synpred10_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA5 dfa5 = new DFA5(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA78 dfa78 = new DFA78(this);
    static final String dfa_1s = "\70\uffff";
    static final String dfa_2s = "\1\4\5\uffff\55\0\5\uffff";
    static final String dfa_3s = "\1\167\5\uffff\55\0\5\uffff";
    static final String dfa_4s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\55\uffff\1\10\1\11\1\12\1\6\1\7";
    static final String dfa_5s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\5\uffff}>";
    static final String[] dfa_6s = {
            "\1\52\1\51\1\uffff\1\46\1\45\6\uffff\1\64\4\uffff\1\56\1\uffff\1\5\1\63\1\55\1\uffff\1\13\1\uffff\1\30\1\36\1\26\1\42\1\14\1\23\1\24\1\uffff\1\21\1\60\1\4\1\10\1\11\1\2\1\57\1\35\1\17\1\uffff\1\65\1\20\1\50\1\25\1\15\1\uffff\1\41\1\27\1\22\1\12\1\uffff\1\3\1\16\1\54\2\uffff\1\47\21\uffff\1\53\1\1\1\40\1\44\10\uffff\1\6\2\uffff\1\31\1\uffff\1\32\7\uffff\1\37\3\uffff\1\43\4\uffff\1\34\1\33\1\uffff\1\7\1\61\1\62",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2035:1: rule__STStatement__Alternatives_0_0 : ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ( ruleSTAssignmentStatement ) ) | ( ruleSTCallStatement ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) | ( ( rule__STStatement__Group_0_0_9__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA5_6 = input.LA(1);

                         
                        int index5_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA5_7 = input.LA(1);

                         
                        int index5_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA5_8 = input.LA(1);

                         
                        int index5_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA5_9 = input.LA(1);

                         
                        int index5_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA5_10 = input.LA(1);

                         
                        int index5_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA5_11 = input.LA(1);

                         
                        int index5_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA5_12 = input.LA(1);

                         
                        int index5_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA5_13 = input.LA(1);

                         
                        int index5_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA5_14 = input.LA(1);

                         
                        int index5_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA5_15 = input.LA(1);

                         
                        int index5_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA5_16 = input.LA(1);

                         
                        int index5_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_16);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA5_17 = input.LA(1);

                         
                        int index5_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_17);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA5_18 = input.LA(1);

                         
                        int index5_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_18);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA5_19 = input.LA(1);

                         
                        int index5_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_19);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA5_20 = input.LA(1);

                         
                        int index5_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_20);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA5_21 = input.LA(1);

                         
                        int index5_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_21);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA5_22 = input.LA(1);

                         
                        int index5_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_22);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA5_23 = input.LA(1);

                         
                        int index5_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_23);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA5_24 = input.LA(1);

                         
                        int index5_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_24);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA5_25 = input.LA(1);

                         
                        int index5_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_25);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA5_26 = input.LA(1);

                         
                        int index5_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_26);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA5_27 = input.LA(1);

                         
                        int index5_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_27);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA5_28 = input.LA(1);

                         
                        int index5_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_28);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA5_29 = input.LA(1);

                         
                        int index5_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_29);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA5_30 = input.LA(1);

                         
                        int index5_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_30);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA5_31 = input.LA(1);

                         
                        int index5_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_31);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA5_32 = input.LA(1);

                         
                        int index5_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_32);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA5_33 = input.LA(1);

                         
                        int index5_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_33);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA5_34 = input.LA(1);

                         
                        int index5_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_34);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA5_35 = input.LA(1);

                         
                        int index5_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_35);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA5_36 = input.LA(1);

                         
                        int index5_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_36);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA5_37 = input.LA(1);

                         
                        int index5_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_37);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA5_38 = input.LA(1);

                         
                        int index5_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_38);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA5_39 = input.LA(1);

                         
                        int index5_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_39);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA5_40 = input.LA(1);

                         
                        int index5_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_40);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA5_41 = input.LA(1);

                         
                        int index5_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_41);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA5_42 = input.LA(1);

                         
                        int index5_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_42);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA5_43 = input.LA(1);

                         
                        int index5_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_43);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA5_44 = input.LA(1);

                         
                        int index5_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_44);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA5_45 = input.LA(1);

                         
                        int index5_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_45);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA5_46 = input.LA(1);

                         
                        int index5_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_46);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA5_47 = input.LA(1);

                         
                        int index5_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_47);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA5_48 = input.LA(1);

                         
                        int index5_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_48);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA5_49 = input.LA(1);

                         
                        int index5_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_49);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA5_50 = input.LA(1);

                         
                        int index5_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSTAlgorithmParser()) ) {s = 54;}

                        else if ( (synpred11_InternalSTAlgorithmParser()) ) {s = 55;}

                         
                        input.seek(index5_50);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 5, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\73\uffff";
    static final String dfa_8s = "\1\1\72\uffff";
    static final String dfa_9s = "\1\4\1\uffff\55\0\14\uffff";
    static final String dfa_10s = "\1\167\1\uffff\55\0\14\uffff";
    static final String dfa_11s = "\1\uffff\1\2\60\uffff\1\1\10\uffff";
    static final String dfa_12s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\14\uffff}>";
    static final String[] dfa_13s = {
            "\1\46\1\45\1\uffff\1\42\1\41\6\uffff\1\62\1\1\3\uffff\1\52\1\uffff\2\62\1\51\1\uffff\1\7\1\uffff\1\24\1\32\1\22\1\36\1\10\1\17\1\20\1\uffff\1\15\1\54\1\62\1\4\1\5\1\62\1\53\1\31\1\13\1\1\1\62\1\14\1\44\1\21\1\11\1\uffff\1\35\1\23\1\16\1\6\1\uffff\1\62\1\12\1\50\1\uffff\1\1\1\43\21\uffff\1\47\1\62\1\34\1\40\10\uffff\1\2\2\uffff\1\25\1\uffff\1\26\3\uffff\1\62\3\uffff\1\33\3\uffff\1\37\4\uffff\1\30\1\27\1\uffff\1\3\1\55\1\56",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "()* loopback of 5747:2: ( rule__STCaseCases__StatementsAssignment_3 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_2 = input.LA(1);

                         
                        int index61_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA61_3 = input.LA(1);

                         
                        int index61_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA61_4 = input.LA(1);

                         
                        int index61_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA61_5 = input.LA(1);

                         
                        int index61_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA61_6 = input.LA(1);

                         
                        int index61_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA61_7 = input.LA(1);

                         
                        int index61_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA61_8 = input.LA(1);

                         
                        int index61_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA61_9 = input.LA(1);

                         
                        int index61_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA61_10 = input.LA(1);

                         
                        int index61_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA61_11 = input.LA(1);

                         
                        int index61_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA61_12 = input.LA(1);

                         
                        int index61_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA61_13 = input.LA(1);

                         
                        int index61_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA61_14 = input.LA(1);

                         
                        int index61_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA61_15 = input.LA(1);

                         
                        int index61_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA61_16 = input.LA(1);

                         
                        int index61_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA61_17 = input.LA(1);

                         
                        int index61_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA61_18 = input.LA(1);

                         
                        int index61_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA61_19 = input.LA(1);

                         
                        int index61_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA61_20 = input.LA(1);

                         
                        int index61_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA61_21 = input.LA(1);

                         
                        int index61_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA61_22 = input.LA(1);

                         
                        int index61_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA61_23 = input.LA(1);

                         
                        int index61_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA61_24 = input.LA(1);

                         
                        int index61_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA61_25 = input.LA(1);

                         
                        int index61_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA61_26 = input.LA(1);

                         
                        int index61_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA61_27 = input.LA(1);

                         
                        int index61_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA61_28 = input.LA(1);

                         
                        int index61_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA61_29 = input.LA(1);

                         
                        int index61_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA61_30 = input.LA(1);

                         
                        int index61_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA61_31 = input.LA(1);

                         
                        int index61_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA61_32 = input.LA(1);

                         
                        int index61_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA61_33 = input.LA(1);

                         
                        int index61_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA61_34 = input.LA(1);

                         
                        int index61_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA61_35 = input.LA(1);

                         
                        int index61_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA61_36 = input.LA(1);

                         
                        int index61_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA61_37 = input.LA(1);

                         
                        int index61_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA61_38 = input.LA(1);

                         
                        int index61_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA61_39 = input.LA(1);

                         
                        int index61_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA61_40 = input.LA(1);

                         
                        int index61_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA61_41 = input.LA(1);

                         
                        int index61_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA61_42 = input.LA(1);

                         
                        int index61_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA61_43 = input.LA(1);

                         
                        int index61_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA61_44 = input.LA(1);

                         
                        int index61_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA61_45 = input.LA(1);

                         
                        int index61_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_45);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA61_46 = input.LA(1);

                         
                        int index61_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalSTAlgorithmParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index61_46);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\43\uffff";
    static final String dfa_15s = "\1\2\42\uffff";
    static final String dfa_16s = "\1\11\1\0\41\uffff";
    static final String dfa_17s = "\1\157\1\0\41\uffff";
    static final String dfa_18s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_19s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_20s = {
            "\1\2\51\uffff\1\2\4\uffff\1\2\3\uffff\1\2\3\uffff\1\2\5\uffff\5\2\1\uffff\1\2\1\uffff\2\2\6\uffff\3\2\2\uffff\1\2\1\1\14\2\5\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "8501:2: ( rule__STFeatureExpression__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_1 = input.LA(1);

                         
                        int index78_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalSTAlgorithmParser()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index78_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000002L,0x0008000280000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000802L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x4EF7DFF7F5D281B0L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x4EF7DFF7F5D081B2L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000084000L,0x0020000000000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000002L,0x0020000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000001000002000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x4CD79DB7E71001B0L,0x0020000000010000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000402000000100L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x6CF79DB7F51001B0L,0x00EC2202900D0000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000800100000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x6CF79DB7F51001B0L,0x00EC6202900D0000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000120000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x4EF7DFF7F5D081B0L,0x00EC2202900F0000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x4EF7DFF7F5D081B0L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x4EF7FFF7FDF081B0L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000200000010000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x6CF79DB7F51001B2L,0x00EC2202900D0000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000001100000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x000000000000C000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x4EF7DFF7F5D481B0L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x4EF7DFF7F5D091B0L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x4EF7DFFFF5D081B0L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0100000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0100000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000400L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000400L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000014000001200L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000002L,0x0000014000001200L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000280000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000002L,0x0000000280000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x1000000000000000L,0x0000000840000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x1000000000000002L,0x0000000840000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000400400000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000002L,0x0000400400000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x002800001000003EL});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x6CF79DB7F51001B0L,0x00EC2202B00D0000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x04E6919754000000L,0x000C000280000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0008000280000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x4CF79DB7F51001B0L,0x00EC2202900D0000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0018000000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x00001E0002300000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});

}