package org.eclipse.fordiac.ide.structuredtextalgorithm.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.fordiac.ide.structuredtextalgorithm.services.STAlgorithmGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSTAlgorithmParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "END_FUNCTION_BLOCK", "END_CONFIGURATION", "END_TRANSITION", "FUNCTION_BLOCK", "LDATE_AND_TIME", "CONFIGURATION", "DATE_AND_TIME", "END_ALGORITHM", "END_INTERFACE", "END_NAMESPACE", "END_FUNCTION", "END_RESOURCE", "INITIAL_STEP", "LTIME_OF_DAY", "VAR_EXTERNAL", "END_PROGRAM", "TIME_OF_DAY", "END_ACTION", "END_METHOD", "END_REPEAT", "END_STRUCT", "IMPLEMENTS", "NON_RETAIN", "READ_WRITE", "TRANSITION", "VAR_ACCESS", "VAR_CONFIG", "VAR_GLOBAL", "VAR_IN_OUT", "VAR_OUTPUT", "ALGORITHM", "END_CLASS", "END_WHILE", "INTERFACE", "NAMESPACE", "PROTECTED", "READ_ONLY", "VAR_INPUT", "ABSTRACT", "CONSTANT", "CONTINUE", "END_CASE", "END_STEP", "END_TYPE", "FUNCTION", "INTERNAL", "INTERVAL", "OVERRIDE", "PRIORITY", "RESOURCE", "VAR_TEMP", "END_FOR", "END_VAR", "EXTENDS", "INTERAL", "OVERLAP", "PRIVATE", "PROGRAM", "WSTRING", "ACTION", "END_IF", "METHOD", "PUBLIC", "REF_TO", "REPEAT", "RETAIN", "RETURN", "SINGLE", "STRING", "STRUCT", "ARRAY", "CLASS", "DWORD", "ELSIF", "FALSE", "FINAL", "LDATE", "LREAL", "LTIME", "LWORD", "SUPER", "UDINT", "ULINT", "UNTIL", "USING", "USINT", "WCHAR", "WHILE", "BOOL", "BYTE", "CASE", "CHAR", "DATE", "DINT", "ELSE", "EXIT", "FROM", "LINT", "LTOD", "NULL", "REAL", "SINT", "STEP", "TASK", "THEN", "THIS", "TIME", "TRUE", "TYPE", "UINT", "WITH", "WORD", "AND", "FOR", "INT", "LDT", "MOD", "NOT", "REF", "TOD", "VAR", "XOR", "B", "D_1", "L", "W", "X", "AsteriskAsterisk", "FullStopFullStop", "ColonEqualsSign", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "AT", "BY", "DO", "DT", "IF", "LD", "LT", "OF", "ON", "OR", "TO", "NumberSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "D", "T", "LeftSquareBracket", "RightSquareBracket", "RULE_HEX_DIGIT", "RULE_NON_DECIMAL", "RULE_INT", "RULE_DECIMAL", "RULE_TIME_PART", "RULE_TIME_VALUE", "RULE_TIME_DAYS", "RULE_TIME_HOURS", "RULE_TIME_MINUTES", "RULE_TIME_SECONDS", "RULE_TIME_MILLIS", "RULE_TIME_MICROS", "RULE_TIME_NANOS", "RULE_ID", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LWORD=83;
    public static final int LessThanSignGreaterThanSign=135;
    public static final int FUNCTION_BLOCK=7;
    public static final int EqualsSignGreaterThanSign=136;
    public static final int VAR=124;
    public static final int END_IF=64;
    public static final int ULINT=86;
    public static final int END_CASE=45;
    public static final int LessThanSign=161;
    public static final int RULE_TIME_HOURS=175;
    public static final int LeftParenthesis=151;
    public static final int INTERFACE=37;
    public static final int VAR_CONFIG=30;
    public static final int BYTE=93;
    public static final int INTERNAL=49;
    public static final int ELSE=98;
    public static final int REF_TO=67;
    public static final int TYPE=112;
    public static final int IF=142;
    public static final int LINT=101;
    public static final int GreaterThanSign=163;
    public static final int WORD=115;
    public static final int DATE_AND_TIME=10;
    public static final int RULE_ID=181;
    public static final int CONFIGURATION=9;
    public static final int TOD=123;
    public static final int DINT=97;
    public static final int FUNCTION=48;
    public static final int UDINT=85;
    public static final int RULE_TIME_NANOS=180;
    public static final int CASE=94;
    public static final int GreaterThanSignEqualsSign=137;
    public static final int END_ALGORITHM=11;
    public static final int AT=138;
    public static final int PlusSign=154;
    public static final int RULE_INT=170;
    public static final int END_FOR=55;
    public static final int RULE_TIME_DAYS=174;
    public static final int RULE_ML_COMMENT=183;
    public static final int PUBLIC=66;
    public static final int THEN=108;
    public static final int XOR=125;
    public static final int LeftSquareBracket=166;
    public static final int PROGRAM=61;
    public static final int EXIT=99;
    public static final int TIME_OF_DAY=20;
    public static final int B=126;
    public static final int LDATE_AND_TIME=8;
    public static final int REPEAT=68;
    public static final int D=164;
    public static final int CHAR=95;
    public static final int L=128;
    public static final int LTIME=82;
    public static final int Comma=155;
    public static final int HyphenMinus=156;
    public static final int T=165;
    public static final int W=129;
    public static final int BY=139;
    public static final int X=130;
    public static final int ELSIF=77;
    public static final int END_REPEAT=23;
    public static final int LessThanSignEqualsSign=134;
    public static final int Solidus=158;
    public static final int PROTECTED=39;
    public static final int VAR_INPUT=41;
    public static final int RESOURCE=53;
    public static final int INTERVAL=50;
    public static final int FullStop=157;
    public static final int RULE_TIME_SECONDS=177;
    public static final int VAR_TEMP=54;
    public static final int INTERAL=58;
    public static final int CONSTANT=43;
    public static final int RULE_TIME_VALUE=173;
    public static final int PRIVATE=60;
    public static final int TRANSITION=28;
    public static final int CONTINUE=44;
    public static final int Semicolon=160;
    public static final int REF=122;
    public static final int LD=143;
    public static final int VAR_OUTPUT=33;
    public static final int STRING=72;
    public static final int RULE_HEX_DIGIT=168;
    public static final int TO=148;
    public static final int END_TYPE=47;
    public static final int UINT=113;
    public static final int INITIAL_STEP=16;
    public static final int LTOD=102;
    public static final int NAMESPACE=38;
    public static final int EXTENDS=57;
    public static final int SINGLE=71;
    public static final int ARRAY=74;
    public static final int LT=144;
    public static final int PRIORITY=52;
    public static final int CLASS=75;
    public static final int FROM=100;
    public static final int DO=140;
    public static final int WSTRING=62;
    public static final int READ_WRITE=27;
    public static final int END_CONFIGURATION=5;
    public static final int DT=141;
    public static final int END_VAR=56;
    public static final int END_STEP=46;
    public static final int END_STRUCT=24;
    public static final int RULE_TIME_PART=172;
    public static final int FullStopFullStop=132;
    public static final int OVERLAP=59;
    public static final int Ampersand=150;
    public static final int END_NAMESPACE=13;
    public static final int END_ACTION=21;
    public static final int RightSquareBracket=167;
    public static final int TASK=107;
    public static final int NULL=103;
    public static final int USINT=89;
    public static final int DWORD=76;
    public static final int FOR=117;
    public static final int RightParenthesis=152;
    public static final int TRUE=111;
    public static final int FINAL=79;
    public static final int ColonEqualsSign=133;
    public static final int END_FUNCTION=14;
    public static final int END_WHILE=36;
    public static final int USING=88;
    public static final int RULE_DECIMAL=171;
    public static final int DATE=96;
    public static final int NOT=121;
    public static final int LDATE=80;
    public static final int AND=116;
    public static final int NumberSign=149;
    public static final int REAL=104;
    public static final int AsteriskAsterisk=131;
    public static final int METHOD=65;
    public static final int THIS=109;
    public static final int SINT=105;
    public static final int NON_RETAIN=26;
    public static final int STRUCT=73;
    public static final int LTIME_OF_DAY=17;
    public static final int END_TRANSITION=6;
    public static final int LREAL=81;
    public static final int VAR_GLOBAL=31;
    public static final int WCHAR=90;
    public static final int ALGORITHM=34;
    public static final int END_FUNCTION_BLOCK=4;
    public static final int VAR_EXTERNAL=18;
    public static final int RULE_STRING=182;
    public static final int VAR_ACCESS=29;
    public static final int ABSTRACT=42;
    public static final int READ_ONLY=40;
    public static final int INT=118;
    public static final int RULE_SL_COMMENT=184;
    public static final int RETURN=70;
    public static final int EqualsSign=162;
    public static final int OF=145;
    public static final int END_METHOD=22;
    public static final int END_RESOURCE=15;
    public static final int Colon=159;
    public static final int EOF=-1;
    public static final int LDT=119;
    public static final int Asterisk=153;
    public static final int RULE_TIME_MILLIS=178;
    public static final int ON=146;
    public static final int SUPER=84;
    public static final int MOD=120;
    public static final int OR=147;
    public static final int RETAIN=69;
    public static final int RULE_WS=185;
    public static final int VAR_IN_OUT=32;
    public static final int END_INTERFACE=12;
    public static final int IMPLEMENTS=25;
    public static final int STEP=106;
    public static final int TIME=110;
    public static final int RULE_ANY_OTHER=186;
    public static final int UNTIL=87;
    public static final int WITH=114;
    public static final int RULE_TIME_MINUTES=176;
    public static final int END_CLASS=35;
    public static final int OVERRIDE=51;
    public static final int ACTION=63;
    public static final int BOOL=92;
    public static final int D_1=127;
    public static final int FALSE=78;
    public static final int WHILE=91;
    public static final int RULE_TIME_MICROS=179;
    public static final int END_PROGRAM=19;
    public static final int RULE_NON_DECIMAL=169;

    // delegates
    // delegators


        public InternalSTAlgorithmParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSTAlgorithmParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSTAlgorithmParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSTAlgorithmParser.g"; }


    	private STAlgorithmGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("NumberSign", "'#'");
    		tokenNameToValue.put("Ampersand", "'&'");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("D", "'D'");
    		tokenNameToValue.put("T", "'T'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("B", "'%B'");
    		tokenNameToValue.put("D_1", "'%D'");
    		tokenNameToValue.put("L", "'%L'");
    		tokenNameToValue.put("W", "'%W'");
    		tokenNameToValue.put("X", "'%X'");
    		tokenNameToValue.put("AsteriskAsterisk", "'**'");
    		tokenNameToValue.put("FullStopFullStop", "'..'");
    		tokenNameToValue.put("ColonEqualsSign", "':='");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AT", "'AT'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("DO", "'DO'");
    		tokenNameToValue.put("DT", "'DT'");
    		tokenNameToValue.put("IF", "'IF'");
    		tokenNameToValue.put("LD", "'LD'");
    		tokenNameToValue.put("LT", "'LT'");
    		tokenNameToValue.put("OF", "'OF'");
    		tokenNameToValue.put("ON", "'ON'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("TO", "'TO'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("INT", "'INT'");
    		tokenNameToValue.put("LDT", "'LDT'");
    		tokenNameToValue.put("MOD", "'MOD'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("REF", "'REF'");
    		tokenNameToValue.put("TOD", "'TOD'");
    		tokenNameToValue.put("VAR", "'VAR'");
    		tokenNameToValue.put("XOR", "'XOR'");
    		tokenNameToValue.put("BOOL", "'BOOL'");
    		tokenNameToValue.put("BYTE", "'BYTE'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("CHAR", "'CHAR'");
    		tokenNameToValue.put("DATE", "'DATE'");
    		tokenNameToValue.put("DINT", "'DINT'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("EXIT", "'EXIT'");
    		tokenNameToValue.put("FROM", "'FROM'");
    		tokenNameToValue.put("LINT", "'LINT'");
    		tokenNameToValue.put("LTOD", "'LTOD'");
    		tokenNameToValue.put("NULL", "'NULL'");
    		tokenNameToValue.put("REAL", "'REAL'");
    		tokenNameToValue.put("SINT", "'SINT'");
    		tokenNameToValue.put("STEP", "'STEP'");
    		tokenNameToValue.put("TASK", "'TASK'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("THIS", "'THIS'");
    		tokenNameToValue.put("TIME", "'TIME'");
    		tokenNameToValue.put("TRUE", "'TRUE'");
    		tokenNameToValue.put("TYPE", "'TYPE'");
    		tokenNameToValue.put("UINT", "'UINT'");
    		tokenNameToValue.put("WITH", "'WITH'");
    		tokenNameToValue.put("WORD", "'WORD'");
    		tokenNameToValue.put("ARRAY", "'ARRAY'");
    		tokenNameToValue.put("CLASS", "'CLASS'");
    		tokenNameToValue.put("DWORD", "'DWORD'");
    		tokenNameToValue.put("ELSIF", "'ELSIF'");
    		tokenNameToValue.put("FALSE", "'FALSE'");
    		tokenNameToValue.put("FINAL", "'FINAL'");
    		tokenNameToValue.put("LDATE", "'LDATE'");
    		tokenNameToValue.put("LREAL", "'LREAL'");
    		tokenNameToValue.put("LTIME", "'LTIME'");
    		tokenNameToValue.put("LWORD", "'LWORD'");
    		tokenNameToValue.put("SUPER", "'SUPER'");
    		tokenNameToValue.put("UDINT", "'UDINT'");
    		tokenNameToValue.put("ULINT", "'ULINT'");
    		tokenNameToValue.put("UNTIL", "'UNTIL'");
    		tokenNameToValue.put("USING", "'USING'");
    		tokenNameToValue.put("USINT", "'USINT'");
    		tokenNameToValue.put("WCHAR", "'WCHAR'");
    		tokenNameToValue.put("WHILE", "'WHILE'");
    		tokenNameToValue.put("ACTION", "'ACTION'");
    		tokenNameToValue.put("END_IF", "'END_IF'");
    		tokenNameToValue.put("METHOD", "'METHOD'");
    		tokenNameToValue.put("PUBLIC", "'PUBLIC'");
    		tokenNameToValue.put("REF_TO", "'REF_TO'");
    		tokenNameToValue.put("REPEAT", "'REPEAT'");
    		tokenNameToValue.put("RETAIN", "'RETAIN'");
    		tokenNameToValue.put("RETURN", "'RETURN'");
    		tokenNameToValue.put("SINGLE", "'SINGLE'");
    		tokenNameToValue.put("STRING", "'STRING'");
    		tokenNameToValue.put("STRUCT", "'STRUCT'");
    		tokenNameToValue.put("END_FOR", "'END_FOR'");
    		tokenNameToValue.put("END_VAR", "'END_VAR'");
    		tokenNameToValue.put("EXTENDS", "'EXTENDS'");
    		tokenNameToValue.put("INTERAL", "'INTERAL'");
    		tokenNameToValue.put("OVERLAP", "'OVERLAP'");
    		tokenNameToValue.put("PRIVATE", "'PRIVATE'");
    		tokenNameToValue.put("PROGRAM", "'PROGRAM'");
    		tokenNameToValue.put("WSTRING", "'WSTRING'");
    		tokenNameToValue.put("ABSTRACT", "'ABSTRACT'");
    		tokenNameToValue.put("CONSTANT", "'CONSTANT'");
    		tokenNameToValue.put("CONTINUE", "'CONTINUE'");
    		tokenNameToValue.put("END_CASE", "'END_CASE'");
    		tokenNameToValue.put("END_STEP", "'END_STEP'");
    		tokenNameToValue.put("END_TYPE", "'END_TYPE'");
    		tokenNameToValue.put("FUNCTION", "'FUNCTION'");
    		tokenNameToValue.put("INTERNAL", "'INTERNAL'");
    		tokenNameToValue.put("INTERVAL", "'INTERVAL'");
    		tokenNameToValue.put("OVERRIDE", "'OVERRIDE'");
    		tokenNameToValue.put("PRIORITY", "'PRIORITY'");
    		tokenNameToValue.put("RESOURCE", "'RESOURCE'");
    		tokenNameToValue.put("VAR_TEMP", "'VAR_TEMP'");
    		tokenNameToValue.put("ALGORITHM", "'ALGORITHM'");
    		tokenNameToValue.put("END_CLASS", "'END_CLASS'");
    		tokenNameToValue.put("END_WHILE", "'END_WHILE'");
    		tokenNameToValue.put("INTERFACE", "'INTERFACE'");
    		tokenNameToValue.put("NAMESPACE", "'NAMESPACE'");
    		tokenNameToValue.put("PROTECTED", "'PROTECTED'");
    		tokenNameToValue.put("READ_ONLY", "'READ_ONLY'");
    		tokenNameToValue.put("VAR_INPUT", "'VAR_INPUT'");
    		tokenNameToValue.put("END_ACTION", "'END_ACTION'");
    		tokenNameToValue.put("END_METHOD", "'END_METHOD'");
    		tokenNameToValue.put("END_REPEAT", "'END_REPEAT'");
    		tokenNameToValue.put("END_STRUCT", "'END_STRUCT'");
    		tokenNameToValue.put("IMPLEMENTS", "'IMPLEMENTS'");
    		tokenNameToValue.put("NON_RETAIN", "'NON_RETAIN'");
    		tokenNameToValue.put("READ_WRITE", "'READ_WRITE'");
    		tokenNameToValue.put("TRANSITION", "'TRANSITION'");
    		tokenNameToValue.put("VAR_ACCESS", "'VAR_ACCESS'");
    		tokenNameToValue.put("VAR_CONFIG", "'VAR_CONFIG'");
    		tokenNameToValue.put("VAR_GLOBAL", "'VAR_GLOBAL'");
    		tokenNameToValue.put("VAR_IN_OUT", "'VAR_IN_OUT'");
    		tokenNameToValue.put("VAR_OUTPUT", "'VAR_OUTPUT'");
    		tokenNameToValue.put("END_PROGRAM", "'END_PROGRAM'");
    		tokenNameToValue.put("TIME_OF_DAY", "'TIME_OF_DAY'");
    		tokenNameToValue.put("END_FUNCTION", "'END_FUNCTION'");
    		tokenNameToValue.put("END_RESOURCE", "'END_RESOURCE'");
    		tokenNameToValue.put("INITIAL_STEP", "'INITIAL_STEP'");
    		tokenNameToValue.put("LTIME_OF_DAY", "'LTIME_OF_DAY'");
    		tokenNameToValue.put("VAR_EXTERNAL", "'VAR_EXTERNAL'");
    		tokenNameToValue.put("CONFIGURATION", "'CONFIGURATION'");
    		tokenNameToValue.put("DATE_AND_TIME", "'DATE_AND_TIME'");
    		tokenNameToValue.put("END_ALGORITHM", "'END_ALGORITHM'");
    		tokenNameToValue.put("END_INTERFACE", "'END_INTERFACE'");
    		tokenNameToValue.put("END_NAMESPACE", "'END_NAMESPACE'");
    		tokenNameToValue.put("END_TRANSITION", "'END_TRANSITION'");
    		tokenNameToValue.put("FUNCTION_BLOCK", "'FUNCTION_BLOCK'");
    		tokenNameToValue.put("LDATE_AND_TIME", "'LDATE_AND_TIME'");
    		tokenNameToValue.put("END_CONFIGURATION", "'END_CONFIGURATION'");
    		tokenNameToValue.put("END_FUNCTION_BLOCK", "'END_FUNCTION_BLOCK'");
    	}

    	public void setGrammarAccess(STAlgorithmGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleSTAlgorithmSource"
    // InternalSTAlgorithmParser.g:220:1: entryRuleSTAlgorithmSource : ruleSTAlgorithmSource EOF ;
    public final void entryRuleSTAlgorithmSource() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:221:1: ( ruleSTAlgorithmSource EOF )
            // InternalSTAlgorithmParser.g:222:1: ruleSTAlgorithmSource EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAlgorithmSource();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmSourceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAlgorithmSource"


    // $ANTLR start "ruleSTAlgorithmSource"
    // InternalSTAlgorithmParser.g:229:1: ruleSTAlgorithmSource : ( ( rule__STAlgorithmSource__Group__0 ) ) ;
    public final void ruleSTAlgorithmSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:233:2: ( ( ( rule__STAlgorithmSource__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:234:2: ( ( rule__STAlgorithmSource__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:234:2: ( ( rule__STAlgorithmSource__Group__0 ) )
            // InternalSTAlgorithmParser.g:235:3: ( rule__STAlgorithmSource__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmSourceAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:236:3: ( rule__STAlgorithmSource__Group__0 )
            // InternalSTAlgorithmParser.g:236:4: rule__STAlgorithmSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithmSource__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmSourceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAlgorithmSource"


    // $ANTLR start "entryRuleSTAlgorithmSourceElement"
    // InternalSTAlgorithmParser.g:245:1: entryRuleSTAlgorithmSourceElement : ruleSTAlgorithmSourceElement EOF ;
    public final void entryRuleSTAlgorithmSourceElement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:246:1: ( ruleSTAlgorithmSourceElement EOF )
            // InternalSTAlgorithmParser.g:247:1: ruleSTAlgorithmSourceElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmSourceElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAlgorithmSourceElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmSourceElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAlgorithmSourceElement"


    // $ANTLR start "ruleSTAlgorithmSourceElement"
    // InternalSTAlgorithmParser.g:254:1: ruleSTAlgorithmSourceElement : ( ( rule__STAlgorithmSourceElement__Alternatives ) ) ;
    public final void ruleSTAlgorithmSourceElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:258:2: ( ( ( rule__STAlgorithmSourceElement__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:259:2: ( ( rule__STAlgorithmSourceElement__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:259:2: ( ( rule__STAlgorithmSourceElement__Alternatives ) )
            // InternalSTAlgorithmParser.g:260:3: ( rule__STAlgorithmSourceElement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmSourceElementAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:261:3: ( rule__STAlgorithmSourceElement__Alternatives )
            // InternalSTAlgorithmParser.g:261:4: rule__STAlgorithmSourceElement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithmSourceElement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmSourceElementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAlgorithmSourceElement"


    // $ANTLR start "entryRuleSTAlgorithm"
    // InternalSTAlgorithmParser.g:270:1: entryRuleSTAlgorithm : ruleSTAlgorithm EOF ;
    public final void entryRuleSTAlgorithm() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:271:1: ( ruleSTAlgorithm EOF )
            // InternalSTAlgorithmParser.g:272:1: ruleSTAlgorithm EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAlgorithm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAlgorithm"


    // $ANTLR start "ruleSTAlgorithm"
    // InternalSTAlgorithmParser.g:279:1: ruleSTAlgorithm : ( ( rule__STAlgorithm__Group__0 ) ) ;
    public final void ruleSTAlgorithm() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:283:2: ( ( ( rule__STAlgorithm__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:284:2: ( ( rule__STAlgorithm__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:284:2: ( ( rule__STAlgorithm__Group__0 ) )
            // InternalSTAlgorithmParser.g:285:3: ( rule__STAlgorithm__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:286:3: ( rule__STAlgorithm__Group__0 )
            // InternalSTAlgorithmParser.g:286:4: rule__STAlgorithm__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAlgorithm"


    // $ANTLR start "entryRuleSTAlgorithmBody"
    // InternalSTAlgorithmParser.g:295:1: entryRuleSTAlgorithmBody : ruleSTAlgorithmBody EOF ;
    public final void entryRuleSTAlgorithmBody() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:296:1: ( ruleSTAlgorithmBody EOF )
            // InternalSTAlgorithmParser.g:297:1: ruleSTAlgorithmBody EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAlgorithmBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAlgorithmBody"


    // $ANTLR start "ruleSTAlgorithmBody"
    // InternalSTAlgorithmParser.g:304:1: ruleSTAlgorithmBody : ( ( rule__STAlgorithmBody__Group__0 ) ) ;
    public final void ruleSTAlgorithmBody() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:308:2: ( ( ( rule__STAlgorithmBody__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:309:2: ( ( rule__STAlgorithmBody__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:309:2: ( ( rule__STAlgorithmBody__Group__0 ) )
            // InternalSTAlgorithmParser.g:310:3: ( rule__STAlgorithmBody__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:311:3: ( rule__STAlgorithmBody__Group__0 )
            // InternalSTAlgorithmParser.g:311:4: rule__STAlgorithmBody__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithmBody__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAlgorithmBody"


    // $ANTLR start "entryRuleSTMethod"
    // InternalSTAlgorithmParser.g:320:1: entryRuleSTMethod : ruleSTMethod EOF ;
    public final void entryRuleSTMethod() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:321:1: ( ruleSTMethod EOF )
            // InternalSTAlgorithmParser.g:322:1: ruleSTMethod EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMethod();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMethod"


    // $ANTLR start "ruleSTMethod"
    // InternalSTAlgorithmParser.g:329:1: ruleSTMethod : ( ( rule__STMethod__Group__0 ) ) ;
    public final void ruleSTMethod() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:333:2: ( ( ( rule__STMethod__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:334:2: ( ( rule__STMethod__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:334:2: ( ( rule__STMethod__Group__0 ) )
            // InternalSTAlgorithmParser.g:335:3: ( rule__STMethod__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:336:3: ( rule__STMethod__Group__0 )
            // InternalSTAlgorithmParser.g:336:4: rule__STMethod__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMethod__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMethod"


    // $ANTLR start "entryRuleSTMethodBody"
    // InternalSTAlgorithmParser.g:345:1: entryRuleSTMethodBody : ruleSTMethodBody EOF ;
    public final void entryRuleSTMethodBody() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:346:1: ( ruleSTMethodBody EOF )
            // InternalSTAlgorithmParser.g:347:1: ruleSTMethodBody EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMethodBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodBodyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMethodBody"


    // $ANTLR start "ruleSTMethodBody"
    // InternalSTAlgorithmParser.g:354:1: ruleSTMethodBody : ( ( rule__STMethodBody__Group__0 ) ) ;
    public final void ruleSTMethodBody() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:358:2: ( ( ( rule__STMethodBody__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:359:2: ( ( rule__STMethodBody__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:359:2: ( ( rule__STMethodBody__Group__0 ) )
            // InternalSTAlgorithmParser.g:360:3: ( rule__STMethodBody__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodBodyAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:361:3: ( rule__STMethodBody__Group__0 )
            // InternalSTAlgorithmParser.g:361:4: rule__STMethodBody__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMethodBody__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodBodyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMethodBody"


    // $ANTLR start "entryRuleSTExpressionSource"
    // InternalSTAlgorithmParser.g:370:1: entryRuleSTExpressionSource : ruleSTExpressionSource EOF ;
    public final void entryRuleSTExpressionSource() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:371:1: ( ruleSTExpressionSource EOF )
            // InternalSTAlgorithmParser.g:372:1: ruleSTExpressionSource EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpressionSource();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpressionSource"


    // $ANTLR start "ruleSTExpressionSource"
    // InternalSTAlgorithmParser.g:379:1: ruleSTExpressionSource : ( ( rule__STExpressionSource__Group__0 ) ) ;
    public final void ruleSTExpressionSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:383:2: ( ( ( rule__STExpressionSource__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:384:2: ( ( rule__STExpressionSource__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:384:2: ( ( rule__STExpressionSource__Group__0 ) )
            // InternalSTAlgorithmParser.g:385:3: ( rule__STExpressionSource__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:386:3: ( rule__STExpressionSource__Group__0 )
            // InternalSTAlgorithmParser.g:386:4: rule__STExpressionSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STExpressionSource__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpressionSource"


    // $ANTLR start "entryRuleSTInitializerExpressionSource"
    // InternalSTAlgorithmParser.g:395:1: entryRuleSTInitializerExpressionSource : ruleSTInitializerExpressionSource EOF ;
    public final void entryRuleSTInitializerExpressionSource() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:396:1: ( ruleSTInitializerExpressionSource EOF )
            // InternalSTAlgorithmParser.g:397:1: ruleSTInitializerExpressionSource EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTInitializerExpressionSource();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTInitializerExpressionSource"


    // $ANTLR start "ruleSTInitializerExpressionSource"
    // InternalSTAlgorithmParser.g:404:1: ruleSTInitializerExpressionSource : ( ( rule__STInitializerExpressionSource__Group__0 ) ) ;
    public final void ruleSTInitializerExpressionSource() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:408:2: ( ( ( rule__STInitializerExpressionSource__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:409:2: ( ( rule__STInitializerExpressionSource__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:409:2: ( ( rule__STInitializerExpressionSource__Group__0 ) )
            // InternalSTAlgorithmParser.g:410:3: ( rule__STInitializerExpressionSource__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:411:3: ( rule__STInitializerExpressionSource__Group__0 )
            // InternalSTAlgorithmParser.g:411:4: rule__STInitializerExpressionSource__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STInitializerExpressionSource__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTInitializerExpressionSource"


    // $ANTLR start "entryRuleSTVarTempDeclarationBlock"
    // InternalSTAlgorithmParser.g:420:1: entryRuleSTVarTempDeclarationBlock : ruleSTVarTempDeclarationBlock EOF ;
    public final void entryRuleSTVarTempDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:421:1: ( ruleSTVarTempDeclarationBlock EOF )
            // InternalSTAlgorithmParser.g:422:1: ruleSTVarTempDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarTempDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarTempDeclarationBlock"


    // $ANTLR start "ruleSTVarTempDeclarationBlock"
    // InternalSTAlgorithmParser.g:429:1: ruleSTVarTempDeclarationBlock : ( ( rule__STVarTempDeclarationBlock__Group__0 ) ) ;
    public final void ruleSTVarTempDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:433:2: ( ( ( rule__STVarTempDeclarationBlock__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:434:2: ( ( rule__STVarTempDeclarationBlock__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:434:2: ( ( rule__STVarTempDeclarationBlock__Group__0 ) )
            // InternalSTAlgorithmParser.g:435:3: ( rule__STVarTempDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:436:3: ( rule__STVarTempDeclarationBlock__Group__0 )
            // InternalSTAlgorithmParser.g:436:4: rule__STVarTempDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarTempDeclarationBlock"


    // $ANTLR start "entryRuleSTVarInputDeclarationBlock"
    // InternalSTAlgorithmParser.g:445:1: entryRuleSTVarInputDeclarationBlock : ruleSTVarInputDeclarationBlock EOF ;
    public final void entryRuleSTVarInputDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:446:1: ( ruleSTVarInputDeclarationBlock EOF )
            // InternalSTAlgorithmParser.g:447:1: ruleSTVarInputDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarInputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarInputDeclarationBlock"


    // $ANTLR start "ruleSTVarInputDeclarationBlock"
    // InternalSTAlgorithmParser.g:454:1: ruleSTVarInputDeclarationBlock : ( ( rule__STVarInputDeclarationBlock__Group__0 ) ) ;
    public final void ruleSTVarInputDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:458:2: ( ( ( rule__STVarInputDeclarationBlock__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:459:2: ( ( rule__STVarInputDeclarationBlock__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:459:2: ( ( rule__STVarInputDeclarationBlock__Group__0 ) )
            // InternalSTAlgorithmParser.g:460:3: ( rule__STVarInputDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:461:3: ( rule__STVarInputDeclarationBlock__Group__0 )
            // InternalSTAlgorithmParser.g:461:4: rule__STVarInputDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarInputDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarInputDeclarationBlock"


    // $ANTLR start "entryRuleSTVarOutputDeclarationBlock"
    // InternalSTAlgorithmParser.g:470:1: entryRuleSTVarOutputDeclarationBlock : ruleSTVarOutputDeclarationBlock EOF ;
    public final void entryRuleSTVarOutputDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:471:1: ( ruleSTVarOutputDeclarationBlock EOF )
            // InternalSTAlgorithmParser.g:472:1: ruleSTVarOutputDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarOutputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarOutputDeclarationBlock"


    // $ANTLR start "ruleSTVarOutputDeclarationBlock"
    // InternalSTAlgorithmParser.g:479:1: ruleSTVarOutputDeclarationBlock : ( ( rule__STVarOutputDeclarationBlock__Group__0 ) ) ;
    public final void ruleSTVarOutputDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:483:2: ( ( ( rule__STVarOutputDeclarationBlock__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:484:2: ( ( rule__STVarOutputDeclarationBlock__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:484:2: ( ( rule__STVarOutputDeclarationBlock__Group__0 ) )
            // InternalSTAlgorithmParser.g:485:3: ( rule__STVarOutputDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:486:3: ( rule__STVarOutputDeclarationBlock__Group__0 )
            // InternalSTAlgorithmParser.g:486:4: rule__STVarOutputDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarOutputDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarOutputDeclarationBlock"


    // $ANTLR start "entryRuleSTVarInOutDeclarationBlock"
    // InternalSTAlgorithmParser.g:495:1: entryRuleSTVarInOutDeclarationBlock : ruleSTVarInOutDeclarationBlock EOF ;
    public final void entryRuleSTVarInOutDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:496:1: ( ruleSTVarInOutDeclarationBlock EOF )
            // InternalSTAlgorithmParser.g:497:1: ruleSTVarInOutDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarInOutDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarInOutDeclarationBlock"


    // $ANTLR start "ruleSTVarInOutDeclarationBlock"
    // InternalSTAlgorithmParser.g:504:1: ruleSTVarInOutDeclarationBlock : ( ( rule__STVarInOutDeclarationBlock__Group__0 ) ) ;
    public final void ruleSTVarInOutDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:508:2: ( ( ( rule__STVarInOutDeclarationBlock__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:509:2: ( ( rule__STVarInOutDeclarationBlock__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:509:2: ( ( rule__STVarInOutDeclarationBlock__Group__0 ) )
            // InternalSTAlgorithmParser.g:510:3: ( rule__STVarInOutDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:511:3: ( rule__STVarInOutDeclarationBlock__Group__0 )
            // InternalSTAlgorithmParser.g:511:4: rule__STVarInOutDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarInOutDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarInOutDeclarationBlock"


    // $ANTLR start "entryRuleSTVarDeclaration"
    // InternalSTAlgorithmParser.g:520:1: entryRuleSTVarDeclaration : ruleSTVarDeclaration EOF ;
    public final void entryRuleSTVarDeclaration() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:521:1: ( ruleSTVarDeclaration EOF )
            // InternalSTAlgorithmParser.g:522:1: ruleSTVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTVarDeclaration"


    // $ANTLR start "ruleSTVarDeclaration"
    // InternalSTAlgorithmParser.g:529:1: ruleSTVarDeclaration : ( ( rule__STVarDeclaration__Group__0 ) ) ;
    public final void ruleSTVarDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:533:2: ( ( ( rule__STVarDeclaration__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:534:2: ( ( rule__STVarDeclaration__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:534:2: ( ( rule__STVarDeclaration__Group__0 ) )
            // InternalSTAlgorithmParser.g:535:3: ( rule__STVarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:536:3: ( rule__STVarDeclaration__Group__0 )
            // InternalSTAlgorithmParser.g:536:4: rule__STVarDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTVarDeclaration"


    // $ANTLR start "entryRuleSTTypeDeclaration"
    // InternalSTAlgorithmParser.g:545:1: entryRuleSTTypeDeclaration : ruleSTTypeDeclaration EOF ;
    public final void entryRuleSTTypeDeclaration() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:546:1: ( ruleSTTypeDeclaration EOF )
            // InternalSTAlgorithmParser.g:547:1: ruleSTTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTypeDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTypeDeclaration"


    // $ANTLR start "ruleSTTypeDeclaration"
    // InternalSTAlgorithmParser.g:554:1: ruleSTTypeDeclaration : ( ( rule__STTypeDeclaration__Group__0 ) ) ;
    public final void ruleSTTypeDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:558:2: ( ( ( rule__STTypeDeclaration__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:559:2: ( ( rule__STTypeDeclaration__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:559:2: ( ( rule__STTypeDeclaration__Group__0 ) )
            // InternalSTAlgorithmParser.g:560:3: ( rule__STTypeDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:561:3: ( rule__STTypeDeclaration__Group__0 )
            // InternalSTAlgorithmParser.g:561:4: rule__STTypeDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTypeDeclaration"


    // $ANTLR start "entryRuleSTInitializerExpression"
    // InternalSTAlgorithmParser.g:570:1: entryRuleSTInitializerExpression : ruleSTInitializerExpression EOF ;
    public final void entryRuleSTInitializerExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:571:1: ( ruleSTInitializerExpression EOF )
            // InternalSTAlgorithmParser.g:572:1: ruleSTInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTInitializerExpression"


    // $ANTLR start "ruleSTInitializerExpression"
    // InternalSTAlgorithmParser.g:579:1: ruleSTInitializerExpression : ( ( rule__STInitializerExpression__Alternatives ) ) ;
    public final void ruleSTInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:583:2: ( ( ( rule__STInitializerExpression__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:584:2: ( ( rule__STInitializerExpression__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:584:2: ( ( rule__STInitializerExpression__Alternatives ) )
            // InternalSTAlgorithmParser.g:585:3: ( rule__STInitializerExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:586:3: ( rule__STInitializerExpression__Alternatives )
            // InternalSTAlgorithmParser.g:586:4: rule__STInitializerExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STInitializerExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTInitializerExpression"


    // $ANTLR start "entryRuleSTElementaryInitializerExpression"
    // InternalSTAlgorithmParser.g:595:1: entryRuleSTElementaryInitializerExpression : ruleSTElementaryInitializerExpression EOF ;
    public final void entryRuleSTElementaryInitializerExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:596:1: ( ruleSTElementaryInitializerExpression EOF )
            // InternalSTAlgorithmParser.g:597:1: ruleSTElementaryInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElementaryInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElementaryInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElementaryInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElementaryInitializerExpression"


    // $ANTLR start "ruleSTElementaryInitializerExpression"
    // InternalSTAlgorithmParser.g:604:1: ruleSTElementaryInitializerExpression : ( ( rule__STElementaryInitializerExpression__ValueAssignment ) ) ;
    public final void ruleSTElementaryInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:608:2: ( ( ( rule__STElementaryInitializerExpression__ValueAssignment ) ) )
            // InternalSTAlgorithmParser.g:609:2: ( ( rule__STElementaryInitializerExpression__ValueAssignment ) )
            {
            // InternalSTAlgorithmParser.g:609:2: ( ( rule__STElementaryInitializerExpression__ValueAssignment ) )
            // InternalSTAlgorithmParser.g:610:3: ( rule__STElementaryInitializerExpression__ValueAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueAssignment()); 
            }
            // InternalSTAlgorithmParser.g:611:3: ( rule__STElementaryInitializerExpression__ValueAssignment )
            // InternalSTAlgorithmParser.g:611:4: rule__STElementaryInitializerExpression__ValueAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STElementaryInitializerExpression__ValueAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElementaryInitializerExpression"


    // $ANTLR start "entryRuleSTArrayInitializerExpression"
    // InternalSTAlgorithmParser.g:620:1: entryRuleSTArrayInitializerExpression : ruleSTArrayInitializerExpression EOF ;
    public final void entryRuleSTArrayInitializerExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:621:1: ( ruleSTArrayInitializerExpression EOF )
            // InternalSTAlgorithmParser.g:622:1: ruleSTArrayInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTArrayInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTArrayInitializerExpression"


    // $ANTLR start "ruleSTArrayInitializerExpression"
    // InternalSTAlgorithmParser.g:629:1: ruleSTArrayInitializerExpression : ( ( rule__STArrayInitializerExpression__Group__0 ) ) ;
    public final void ruleSTArrayInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:633:2: ( ( ( rule__STArrayInitializerExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:634:2: ( ( rule__STArrayInitializerExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:634:2: ( ( rule__STArrayInitializerExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:635:3: ( rule__STArrayInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:636:3: ( rule__STArrayInitializerExpression__Group__0 )
            // InternalSTAlgorithmParser.g:636:4: rule__STArrayInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTArrayInitializerExpression"


    // $ANTLR start "entryRuleSTArrayInitElement"
    // InternalSTAlgorithmParser.g:645:1: entryRuleSTArrayInitElement : ruleSTArrayInitElement EOF ;
    public final void entryRuleSTArrayInitElement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:646:1: ( ruleSTArrayInitElement EOF )
            // InternalSTAlgorithmParser.g:647:1: ruleSTArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTArrayInitElement"


    // $ANTLR start "ruleSTArrayInitElement"
    // InternalSTAlgorithmParser.g:654:1: ruleSTArrayInitElement : ( ( rule__STArrayInitElement__Group__0 ) ) ;
    public final void ruleSTArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:658:2: ( ( ( rule__STArrayInitElement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:659:2: ( ( rule__STArrayInitElement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:659:2: ( ( rule__STArrayInitElement__Group__0 ) )
            // InternalSTAlgorithmParser.g:660:3: ( rule__STArrayInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:661:3: ( rule__STArrayInitElement__Group__0 )
            // InternalSTAlgorithmParser.g:661:4: rule__STArrayInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTArrayInitElement"


    // $ANTLR start "entryRuleSTStructInitializerExpression"
    // InternalSTAlgorithmParser.g:670:1: entryRuleSTStructInitializerExpression : ruleSTStructInitializerExpression EOF ;
    public final void entryRuleSTStructInitializerExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:671:1: ( ruleSTStructInitializerExpression EOF )
            // InternalSTAlgorithmParser.g:672:1: ruleSTStructInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStructInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStructInitializerExpression"


    // $ANTLR start "ruleSTStructInitializerExpression"
    // InternalSTAlgorithmParser.g:679:1: ruleSTStructInitializerExpression : ( ( rule__STStructInitializerExpression__Group__0 ) ) ;
    public final void ruleSTStructInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:683:2: ( ( ( rule__STStructInitializerExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:684:2: ( ( rule__STStructInitializerExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:684:2: ( ( rule__STStructInitializerExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:685:3: ( rule__STStructInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:686:3: ( rule__STStructInitializerExpression__Group__0 )
            // InternalSTAlgorithmParser.g:686:4: rule__STStructInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStructInitializerExpression"


    // $ANTLR start "entryRuleSTStructInitElement"
    // InternalSTAlgorithmParser.g:695:1: entryRuleSTStructInitElement : ruleSTStructInitElement EOF ;
    public final void entryRuleSTStructInitElement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:696:1: ( ruleSTStructInitElement EOF )
            // InternalSTAlgorithmParser.g:697:1: ruleSTStructInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStructInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStructInitElement"


    // $ANTLR start "ruleSTStructInitElement"
    // InternalSTAlgorithmParser.g:704:1: ruleSTStructInitElement : ( ( rule__STStructInitElement__Group__0 ) ) ;
    public final void ruleSTStructInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:708:2: ( ( ( rule__STStructInitElement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:709:2: ( ( rule__STStructInitElement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:709:2: ( ( rule__STStructInitElement__Group__0 ) )
            // InternalSTAlgorithmParser.g:710:3: ( rule__STStructInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:711:3: ( rule__STStructInitElement__Group__0 )
            // InternalSTAlgorithmParser.g:711:4: rule__STStructInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStructInitElement"


    // $ANTLR start "entryRuleSTStatement"
    // InternalSTAlgorithmParser.g:720:1: entryRuleSTStatement : ruleSTStatement EOF ;
    public final void entryRuleSTStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:721:1: ( ruleSTStatement EOF )
            // InternalSTAlgorithmParser.g:722:1: ruleSTStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStatement"


    // $ANTLR start "ruleSTStatement"
    // InternalSTAlgorithmParser.g:729:1: ruleSTStatement : ( ( rule__STStatement__Alternatives ) ) ;
    public final void ruleSTStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:733:2: ( ( ( rule__STStatement__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:734:2: ( ( rule__STStatement__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:734:2: ( ( rule__STStatement__Alternatives ) )
            // InternalSTAlgorithmParser.g:735:3: ( rule__STStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:736:3: ( rule__STStatement__Alternatives )
            // InternalSTAlgorithmParser.g:736:4: rule__STStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStatement"


    // $ANTLR start "entryRuleSTAssignmentStatement"
    // InternalSTAlgorithmParser.g:745:1: entryRuleSTAssignmentStatement : ruleSTAssignmentStatement EOF ;
    public final void entryRuleSTAssignmentStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:746:1: ( ruleSTAssignmentStatement EOF )
            // InternalSTAlgorithmParser.g:747:1: ruleSTAssignmentStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAssignmentStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAssignmentStatement"


    // $ANTLR start "ruleSTAssignmentStatement"
    // InternalSTAlgorithmParser.g:754:1: ruleSTAssignmentStatement : ( ( rule__STAssignmentStatement__Group__0 ) ) ;
    public final void ruleSTAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:758:2: ( ( ( rule__STAssignmentStatement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:759:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:759:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            // InternalSTAlgorithmParser.g:760:3: ( rule__STAssignmentStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:761:3: ( rule__STAssignmentStatement__Group__0 )
            // InternalSTAlgorithmParser.g:761:4: rule__STAssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAssignmentStatement"


    // $ANTLR start "entryRuleSTCallStatement"
    // InternalSTAlgorithmParser.g:770:1: entryRuleSTCallStatement : ruleSTCallStatement EOF ;
    public final void entryRuleSTCallStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:771:1: ( ruleSTCallStatement EOF )
            // InternalSTAlgorithmParser.g:772:1: ruleSTCallStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallStatement"


    // $ANTLR start "ruleSTCallStatement"
    // InternalSTAlgorithmParser.g:779:1: ruleSTCallStatement : ( ( rule__STCallStatement__CallAssignment ) ) ;
    public final void ruleSTCallStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:783:2: ( ( ( rule__STCallStatement__CallAssignment ) ) )
            // InternalSTAlgorithmParser.g:784:2: ( ( rule__STCallStatement__CallAssignment ) )
            {
            // InternalSTAlgorithmParser.g:784:2: ( ( rule__STCallStatement__CallAssignment ) )
            // InternalSTAlgorithmParser.g:785:3: ( rule__STCallStatement__CallAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallStatementAccess().getCallAssignment()); 
            }
            // InternalSTAlgorithmParser.g:786:3: ( rule__STCallStatement__CallAssignment )
            // InternalSTAlgorithmParser.g:786:4: rule__STCallStatement__CallAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STCallStatement__CallAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallStatementAccess().getCallAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallStatement"


    // $ANTLR start "entryRuleSTCallArgument"
    // InternalSTAlgorithmParser.g:795:1: entryRuleSTCallArgument : ruleSTCallArgument EOF ;
    public final void entryRuleSTCallArgument() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:796:1: ( ruleSTCallArgument EOF )
            // InternalSTAlgorithmParser.g:797:1: ruleSTCallArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallArgument"


    // $ANTLR start "ruleSTCallArgument"
    // InternalSTAlgorithmParser.g:804:1: ruleSTCallArgument : ( ( rule__STCallArgument__Alternatives ) ) ;
    public final void ruleSTCallArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:808:2: ( ( ( rule__STCallArgument__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:809:2: ( ( rule__STCallArgument__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:809:2: ( ( rule__STCallArgument__Alternatives ) )
            // InternalSTAlgorithmParser.g:810:3: ( rule__STCallArgument__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallArgumentAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:811:3: ( rule__STCallArgument__Alternatives )
            // InternalSTAlgorithmParser.g:811:4: rule__STCallArgument__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STCallArgument__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallArgumentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallArgument"


    // $ANTLR start "entryRuleSTCallUnnamedArgument"
    // InternalSTAlgorithmParser.g:820:1: entryRuleSTCallUnnamedArgument : ruleSTCallUnnamedArgument EOF ;
    public final void entryRuleSTCallUnnamedArgument() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:821:1: ( ruleSTCallUnnamedArgument EOF )
            // InternalSTAlgorithmParser.g:822:1: ruleSTCallUnnamedArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallUnnamedArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallUnnamedArgument"


    // $ANTLR start "ruleSTCallUnnamedArgument"
    // InternalSTAlgorithmParser.g:829:1: ruleSTCallUnnamedArgument : ( ( rule__STCallUnnamedArgument__ArgumentAssignment ) ) ;
    public final void ruleSTCallUnnamedArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:833:2: ( ( ( rule__STCallUnnamedArgument__ArgumentAssignment ) ) )
            // InternalSTAlgorithmParser.g:834:2: ( ( rule__STCallUnnamedArgument__ArgumentAssignment ) )
            {
            // InternalSTAlgorithmParser.g:834:2: ( ( rule__STCallUnnamedArgument__ArgumentAssignment ) )
            // InternalSTAlgorithmParser.g:835:3: ( rule__STCallUnnamedArgument__ArgumentAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentAccess().getArgumentAssignment()); 
            }
            // InternalSTAlgorithmParser.g:836:3: ( rule__STCallUnnamedArgument__ArgumentAssignment )
            // InternalSTAlgorithmParser.g:836:4: rule__STCallUnnamedArgument__ArgumentAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STCallUnnamedArgument__ArgumentAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentAccess().getArgumentAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallUnnamedArgument"


    // $ANTLR start "entryRuleSTCallNamedInputArgument"
    // InternalSTAlgorithmParser.g:845:1: entryRuleSTCallNamedInputArgument : ruleSTCallNamedInputArgument EOF ;
    public final void entryRuleSTCallNamedInputArgument() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:846:1: ( ruleSTCallNamedInputArgument EOF )
            // InternalSTAlgorithmParser.g:847:1: ruleSTCallNamedInputArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallNamedInputArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallNamedInputArgument"


    // $ANTLR start "ruleSTCallNamedInputArgument"
    // InternalSTAlgorithmParser.g:854:1: ruleSTCallNamedInputArgument : ( ( rule__STCallNamedInputArgument__Group__0 ) ) ;
    public final void ruleSTCallNamedInputArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:858:2: ( ( ( rule__STCallNamedInputArgument__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:859:2: ( ( rule__STCallNamedInputArgument__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:859:2: ( ( rule__STCallNamedInputArgument__Group__0 ) )
            // InternalSTAlgorithmParser.g:860:3: ( rule__STCallNamedInputArgument__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:861:3: ( rule__STCallNamedInputArgument__Group__0 )
            // InternalSTAlgorithmParser.g:861:4: rule__STCallNamedInputArgument__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallNamedInputArgument"


    // $ANTLR start "entryRuleSTCallNamedOutputArgument"
    // InternalSTAlgorithmParser.g:870:1: entryRuleSTCallNamedOutputArgument : ruleSTCallNamedOutputArgument EOF ;
    public final void entryRuleSTCallNamedOutputArgument() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:871:1: ( ruleSTCallNamedOutputArgument EOF )
            // InternalSTAlgorithmParser.g:872:1: ruleSTCallNamedOutputArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallNamedOutputArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallNamedOutputArgument"


    // $ANTLR start "ruleSTCallNamedOutputArgument"
    // InternalSTAlgorithmParser.g:879:1: ruleSTCallNamedOutputArgument : ( ( rule__STCallNamedOutputArgument__Group__0 ) ) ;
    public final void ruleSTCallNamedOutputArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:883:2: ( ( ( rule__STCallNamedOutputArgument__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:884:2: ( ( rule__STCallNamedOutputArgument__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:884:2: ( ( rule__STCallNamedOutputArgument__Group__0 ) )
            // InternalSTAlgorithmParser.g:885:3: ( rule__STCallNamedOutputArgument__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:886:3: ( rule__STCallNamedOutputArgument__Group__0 )
            // InternalSTAlgorithmParser.g:886:4: rule__STCallNamedOutputArgument__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallNamedOutputArgument"


    // $ANTLR start "entryRuleSTIfStatement"
    // InternalSTAlgorithmParser.g:895:1: entryRuleSTIfStatement : ruleSTIfStatement EOF ;
    public final void entryRuleSTIfStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:896:1: ( ruleSTIfStatement EOF )
            // InternalSTAlgorithmParser.g:897:1: ruleSTIfStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTIfStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTIfStatement"


    // $ANTLR start "ruleSTIfStatement"
    // InternalSTAlgorithmParser.g:904:1: ruleSTIfStatement : ( ( rule__STIfStatement__Group__0 ) ) ;
    public final void ruleSTIfStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:908:2: ( ( ( rule__STIfStatement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:909:2: ( ( rule__STIfStatement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:909:2: ( ( rule__STIfStatement__Group__0 ) )
            // InternalSTAlgorithmParser.g:910:3: ( rule__STIfStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:911:3: ( rule__STIfStatement__Group__0 )
            // InternalSTAlgorithmParser.g:911:4: rule__STIfStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTIfStatement"


    // $ANTLR start "entryRuleSTElseIfPart"
    // InternalSTAlgorithmParser.g:920:1: entryRuleSTElseIfPart : ruleSTElseIfPart EOF ;
    public final void entryRuleSTElseIfPart() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:921:1: ( ruleSTElseIfPart EOF )
            // InternalSTAlgorithmParser.g:922:1: ruleSTElseIfPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElseIfPart"


    // $ANTLR start "ruleSTElseIfPart"
    // InternalSTAlgorithmParser.g:929:1: ruleSTElseIfPart : ( ( rule__STElseIfPart__Group__0 ) ) ;
    public final void ruleSTElseIfPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:933:2: ( ( ( rule__STElseIfPart__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:934:2: ( ( rule__STElseIfPart__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:934:2: ( ( rule__STElseIfPart__Group__0 ) )
            // InternalSTAlgorithmParser.g:935:3: ( rule__STElseIfPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:936:3: ( rule__STElseIfPart__Group__0 )
            // InternalSTAlgorithmParser.g:936:4: rule__STElseIfPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElseIfPart"


    // $ANTLR start "entryRuleSTCaseStatement"
    // InternalSTAlgorithmParser.g:945:1: entryRuleSTCaseStatement : ruleSTCaseStatement EOF ;
    public final void entryRuleSTCaseStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:946:1: ( ruleSTCaseStatement EOF )
            // InternalSTAlgorithmParser.g:947:1: ruleSTCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseStatement"


    // $ANTLR start "ruleSTCaseStatement"
    // InternalSTAlgorithmParser.g:954:1: ruleSTCaseStatement : ( ( rule__STCaseStatement__Group__0 ) ) ;
    public final void ruleSTCaseStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:958:2: ( ( ( rule__STCaseStatement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:959:2: ( ( rule__STCaseStatement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:959:2: ( ( rule__STCaseStatement__Group__0 ) )
            // InternalSTAlgorithmParser.g:960:3: ( rule__STCaseStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:961:3: ( rule__STCaseStatement__Group__0 )
            // InternalSTAlgorithmParser.g:961:4: rule__STCaseStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseStatement"


    // $ANTLR start "entryRuleSTCaseCases"
    // InternalSTAlgorithmParser.g:970:1: entryRuleSTCaseCases : ruleSTCaseCases EOF ;
    public final void entryRuleSTCaseCases() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:971:1: ( ruleSTCaseCases EOF )
            // InternalSTAlgorithmParser.g:972:1: ruleSTCaseCases EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseCases"


    // $ANTLR start "ruleSTCaseCases"
    // InternalSTAlgorithmParser.g:979:1: ruleSTCaseCases : ( ( rule__STCaseCases__Group__0 ) ) ;
    public final void ruleSTCaseCases() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:983:2: ( ( ( rule__STCaseCases__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:984:2: ( ( rule__STCaseCases__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:984:2: ( ( rule__STCaseCases__Group__0 ) )
            // InternalSTAlgorithmParser.g:985:3: ( rule__STCaseCases__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:986:3: ( rule__STCaseCases__Group__0 )
            // InternalSTAlgorithmParser.g:986:4: rule__STCaseCases__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseCases"


    // $ANTLR start "entryRuleSTElsePart"
    // InternalSTAlgorithmParser.g:995:1: entryRuleSTElsePart : ruleSTElsePart EOF ;
    public final void entryRuleSTElsePart() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:996:1: ( ruleSTElsePart EOF )
            // InternalSTAlgorithmParser.g:997:1: ruleSTElsePart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElsePart"


    // $ANTLR start "ruleSTElsePart"
    // InternalSTAlgorithmParser.g:1004:1: ruleSTElsePart : ( ( rule__STElsePart__Group__0 ) ) ;
    public final void ruleSTElsePart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1008:2: ( ( ( rule__STElsePart__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1009:2: ( ( rule__STElsePart__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1009:2: ( ( rule__STElsePart__Group__0 ) )
            // InternalSTAlgorithmParser.g:1010:3: ( rule__STElsePart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1011:3: ( rule__STElsePart__Group__0 )
            // InternalSTAlgorithmParser.g:1011:4: rule__STElsePart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElsePart"


    // $ANTLR start "entryRuleSTForStatement"
    // InternalSTAlgorithmParser.g:1020:1: entryRuleSTForStatement : ruleSTForStatement EOF ;
    public final void entryRuleSTForStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1021:1: ( ruleSTForStatement EOF )
            // InternalSTAlgorithmParser.g:1022:1: ruleSTForStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTForStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTForStatement"


    // $ANTLR start "ruleSTForStatement"
    // InternalSTAlgorithmParser.g:1029:1: ruleSTForStatement : ( ( rule__STForStatement__Group__0 ) ) ;
    public final void ruleSTForStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1033:2: ( ( ( rule__STForStatement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1034:2: ( ( rule__STForStatement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1034:2: ( ( rule__STForStatement__Group__0 ) )
            // InternalSTAlgorithmParser.g:1035:3: ( rule__STForStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1036:3: ( rule__STForStatement__Group__0 )
            // InternalSTAlgorithmParser.g:1036:4: rule__STForStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTForStatement"


    // $ANTLR start "entryRuleSTWhileStatement"
    // InternalSTAlgorithmParser.g:1045:1: entryRuleSTWhileStatement : ruleSTWhileStatement EOF ;
    public final void entryRuleSTWhileStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1046:1: ( ruleSTWhileStatement EOF )
            // InternalSTAlgorithmParser.g:1047:1: ruleSTWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTWhileStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTWhileStatement"


    // $ANTLR start "ruleSTWhileStatement"
    // InternalSTAlgorithmParser.g:1054:1: ruleSTWhileStatement : ( ( rule__STWhileStatement__Group__0 ) ) ;
    public final void ruleSTWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1058:2: ( ( ( rule__STWhileStatement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1059:2: ( ( rule__STWhileStatement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1059:2: ( ( rule__STWhileStatement__Group__0 ) )
            // InternalSTAlgorithmParser.g:1060:3: ( rule__STWhileStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1061:3: ( rule__STWhileStatement__Group__0 )
            // InternalSTAlgorithmParser.g:1061:4: rule__STWhileStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTWhileStatement"


    // $ANTLR start "entryRuleSTRepeatStatement"
    // InternalSTAlgorithmParser.g:1070:1: entryRuleSTRepeatStatement : ruleSTRepeatStatement EOF ;
    public final void entryRuleSTRepeatStatement() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1071:1: ( ruleSTRepeatStatement EOF )
            // InternalSTAlgorithmParser.g:1072:1: ruleSTRepeatStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRepeatStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRepeatStatement"


    // $ANTLR start "ruleSTRepeatStatement"
    // InternalSTAlgorithmParser.g:1079:1: ruleSTRepeatStatement : ( ( rule__STRepeatStatement__Group__0 ) ) ;
    public final void ruleSTRepeatStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1083:2: ( ( ( rule__STRepeatStatement__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1084:2: ( ( rule__STRepeatStatement__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1084:2: ( ( rule__STRepeatStatement__Group__0 ) )
            // InternalSTAlgorithmParser.g:1085:3: ( rule__STRepeatStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1086:3: ( rule__STRepeatStatement__Group__0 )
            // InternalSTAlgorithmParser.g:1086:4: rule__STRepeatStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRepeatStatement"


    // $ANTLR start "entryRuleSTExpression"
    // InternalSTAlgorithmParser.g:1095:1: entryRuleSTExpression : ruleSTExpression EOF ;
    public final void entryRuleSTExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1096:1: ( ruleSTExpression EOF )
            // InternalSTAlgorithmParser.g:1097:1: ruleSTExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpression"


    // $ANTLR start "ruleSTExpression"
    // InternalSTAlgorithmParser.g:1104:1: ruleSTExpression : ( ruleSTSubrangeExpression ) ;
    public final void ruleSTExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1108:2: ( ( ruleSTSubrangeExpression ) )
            // InternalSTAlgorithmParser.g:1109:2: ( ruleSTSubrangeExpression )
            {
            // InternalSTAlgorithmParser.g:1109:2: ( ruleSTSubrangeExpression )
            // InternalSTAlgorithmParser.g:1110:3: ruleSTSubrangeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpression"


    // $ANTLR start "entryRuleSTSubrangeExpression"
    // InternalSTAlgorithmParser.g:1120:1: entryRuleSTSubrangeExpression : ruleSTSubrangeExpression EOF ;
    public final void entryRuleSTSubrangeExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1121:1: ( ruleSTSubrangeExpression EOF )
            // InternalSTAlgorithmParser.g:1122:1: ruleSTSubrangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSubrangeExpression"


    // $ANTLR start "ruleSTSubrangeExpression"
    // InternalSTAlgorithmParser.g:1129:1: ruleSTSubrangeExpression : ( ( rule__STSubrangeExpression__Group__0 ) ) ;
    public final void ruleSTSubrangeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1133:2: ( ( ( rule__STSubrangeExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1134:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1134:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1135:3: ( rule__STSubrangeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1136:3: ( rule__STSubrangeExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1136:4: rule__STSubrangeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSubrangeExpression"


    // $ANTLR start "entryRuleSTOrExpression"
    // InternalSTAlgorithmParser.g:1145:1: entryRuleSTOrExpression : ruleSTOrExpression EOF ;
    public final void entryRuleSTOrExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1146:1: ( ruleSTOrExpression EOF )
            // InternalSTAlgorithmParser.g:1147:1: ruleSTOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTOrExpression"


    // $ANTLR start "ruleSTOrExpression"
    // InternalSTAlgorithmParser.g:1154:1: ruleSTOrExpression : ( ( rule__STOrExpression__Group__0 ) ) ;
    public final void ruleSTOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1158:2: ( ( ( rule__STOrExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1159:2: ( ( rule__STOrExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1159:2: ( ( rule__STOrExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1160:3: ( rule__STOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1161:3: ( rule__STOrExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1161:4: rule__STOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTOrExpression"


    // $ANTLR start "entryRuleSTXorExpression"
    // InternalSTAlgorithmParser.g:1170:1: entryRuleSTXorExpression : ruleSTXorExpression EOF ;
    public final void entryRuleSTXorExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1171:1: ( ruleSTXorExpression EOF )
            // InternalSTAlgorithmParser.g:1172:1: ruleSTXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTXorExpression"


    // $ANTLR start "ruleSTXorExpression"
    // InternalSTAlgorithmParser.g:1179:1: ruleSTXorExpression : ( ( rule__STXorExpression__Group__0 ) ) ;
    public final void ruleSTXorExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1183:2: ( ( ( rule__STXorExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1184:2: ( ( rule__STXorExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1184:2: ( ( rule__STXorExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1185:3: ( rule__STXorExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1186:3: ( rule__STXorExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1186:4: rule__STXorExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTXorExpression"


    // $ANTLR start "entryRuleSTAndExpression"
    // InternalSTAlgorithmParser.g:1195:1: entryRuleSTAndExpression : ruleSTAndExpression EOF ;
    public final void entryRuleSTAndExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1196:1: ( ruleSTAndExpression EOF )
            // InternalSTAlgorithmParser.g:1197:1: ruleSTAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAndExpression"


    // $ANTLR start "ruleSTAndExpression"
    // InternalSTAlgorithmParser.g:1204:1: ruleSTAndExpression : ( ( rule__STAndExpression__Group__0 ) ) ;
    public final void ruleSTAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1208:2: ( ( ( rule__STAndExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1209:2: ( ( rule__STAndExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1209:2: ( ( rule__STAndExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1210:3: ( rule__STAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1211:3: ( rule__STAndExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1211:4: rule__STAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAndExpression"


    // $ANTLR start "entryRuleSTEqualityExpression"
    // InternalSTAlgorithmParser.g:1220:1: entryRuleSTEqualityExpression : ruleSTEqualityExpression EOF ;
    public final void entryRuleSTEqualityExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1221:1: ( ruleSTEqualityExpression EOF )
            // InternalSTAlgorithmParser.g:1222:1: ruleSTEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTEqualityExpression"


    // $ANTLR start "ruleSTEqualityExpression"
    // InternalSTAlgorithmParser.g:1229:1: ruleSTEqualityExpression : ( ( rule__STEqualityExpression__Group__0 ) ) ;
    public final void ruleSTEqualityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1233:2: ( ( ( rule__STEqualityExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1234:2: ( ( rule__STEqualityExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1234:2: ( ( rule__STEqualityExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1235:3: ( rule__STEqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1236:3: ( rule__STEqualityExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1236:4: rule__STEqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTEqualityExpression"


    // $ANTLR start "entryRuleSTComparisonExpression"
    // InternalSTAlgorithmParser.g:1245:1: entryRuleSTComparisonExpression : ruleSTComparisonExpression EOF ;
    public final void entryRuleSTComparisonExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1246:1: ( ruleSTComparisonExpression EOF )
            // InternalSTAlgorithmParser.g:1247:1: ruleSTComparisonExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTComparisonExpression"


    // $ANTLR start "ruleSTComparisonExpression"
    // InternalSTAlgorithmParser.g:1254:1: ruleSTComparisonExpression : ( ( rule__STComparisonExpression__Group__0 ) ) ;
    public final void ruleSTComparisonExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1258:2: ( ( ( rule__STComparisonExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1259:2: ( ( rule__STComparisonExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1259:2: ( ( rule__STComparisonExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1260:3: ( rule__STComparisonExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1261:3: ( rule__STComparisonExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1261:4: rule__STComparisonExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTComparisonExpression"


    // $ANTLR start "entryRuleSTAddSubExpression"
    // InternalSTAlgorithmParser.g:1270:1: entryRuleSTAddSubExpression : ruleSTAddSubExpression EOF ;
    public final void entryRuleSTAddSubExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1271:1: ( ruleSTAddSubExpression EOF )
            // InternalSTAlgorithmParser.g:1272:1: ruleSTAddSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAddSubExpression"


    // $ANTLR start "ruleSTAddSubExpression"
    // InternalSTAlgorithmParser.g:1279:1: ruleSTAddSubExpression : ( ( rule__STAddSubExpression__Group__0 ) ) ;
    public final void ruleSTAddSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1283:2: ( ( ( rule__STAddSubExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1284:2: ( ( rule__STAddSubExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1284:2: ( ( rule__STAddSubExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1285:3: ( rule__STAddSubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1286:3: ( rule__STAddSubExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1286:4: rule__STAddSubExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAddSubExpression"


    // $ANTLR start "entryRuleSTMulDivModExpression"
    // InternalSTAlgorithmParser.g:1295:1: entryRuleSTMulDivModExpression : ruleSTMulDivModExpression EOF ;
    public final void entryRuleSTMulDivModExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1296:1: ( ruleSTMulDivModExpression EOF )
            // InternalSTAlgorithmParser.g:1297:1: ruleSTMulDivModExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMulDivModExpression"


    // $ANTLR start "ruleSTMulDivModExpression"
    // InternalSTAlgorithmParser.g:1304:1: ruleSTMulDivModExpression : ( ( rule__STMulDivModExpression__Group__0 ) ) ;
    public final void ruleSTMulDivModExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1308:2: ( ( ( rule__STMulDivModExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1309:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1309:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1310:3: ( rule__STMulDivModExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1311:3: ( rule__STMulDivModExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1311:4: rule__STMulDivModExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMulDivModExpression"


    // $ANTLR start "entryRuleSTPowerExpression"
    // InternalSTAlgorithmParser.g:1320:1: entryRuleSTPowerExpression : ruleSTPowerExpression EOF ;
    public final void entryRuleSTPowerExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1321:1: ( ruleSTPowerExpression EOF )
            // InternalSTAlgorithmParser.g:1322:1: ruleSTPowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPowerExpression"


    // $ANTLR start "ruleSTPowerExpression"
    // InternalSTAlgorithmParser.g:1329:1: ruleSTPowerExpression : ( ( rule__STPowerExpression__Group__0 ) ) ;
    public final void ruleSTPowerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1333:2: ( ( ( rule__STPowerExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1334:2: ( ( rule__STPowerExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1334:2: ( ( rule__STPowerExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1335:3: ( rule__STPowerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1336:3: ( rule__STPowerExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1336:4: rule__STPowerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPowerExpression"


    // $ANTLR start "entryRuleSTUnaryExpression"
    // InternalSTAlgorithmParser.g:1345:1: entryRuleSTUnaryExpression : ruleSTUnaryExpression EOF ;
    public final void entryRuleSTUnaryExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1346:1: ( ruleSTUnaryExpression EOF )
            // InternalSTAlgorithmParser.g:1347:1: ruleSTUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTUnaryExpression"


    // $ANTLR start "ruleSTUnaryExpression"
    // InternalSTAlgorithmParser.g:1354:1: ruleSTUnaryExpression : ( ( rule__STUnaryExpression__Alternatives ) ) ;
    public final void ruleSTUnaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1358:2: ( ( ( rule__STUnaryExpression__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1359:2: ( ( rule__STUnaryExpression__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1359:2: ( ( rule__STUnaryExpression__Alternatives ) )
            // InternalSTAlgorithmParser.g:1360:3: ( rule__STUnaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1361:3: ( rule__STUnaryExpression__Alternatives )
            // InternalSTAlgorithmParser.g:1361:4: rule__STUnaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTUnaryExpression"


    // $ANTLR start "entryRuleSTAccessExpression"
    // InternalSTAlgorithmParser.g:1370:1: entryRuleSTAccessExpression : ruleSTAccessExpression EOF ;
    public final void entryRuleSTAccessExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1371:1: ( ruleSTAccessExpression EOF )
            // InternalSTAlgorithmParser.g:1372:1: ruleSTAccessExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAccessExpression"


    // $ANTLR start "ruleSTAccessExpression"
    // InternalSTAlgorithmParser.g:1379:1: ruleSTAccessExpression : ( ( rule__STAccessExpression__Group__0 ) ) ;
    public final void ruleSTAccessExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1383:2: ( ( ( rule__STAccessExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1384:2: ( ( rule__STAccessExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1384:2: ( ( rule__STAccessExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1385:3: ( rule__STAccessExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1386:3: ( rule__STAccessExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1386:4: rule__STAccessExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAccessExpression"


    // $ANTLR start "entryRuleSTPrimaryExpression"
    // InternalSTAlgorithmParser.g:1395:1: entryRuleSTPrimaryExpression : ruleSTPrimaryExpression EOF ;
    public final void entryRuleSTPrimaryExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1396:1: ( ruleSTPrimaryExpression EOF )
            // InternalSTAlgorithmParser.g:1397:1: ruleSTPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPrimaryExpression"


    // $ANTLR start "ruleSTPrimaryExpression"
    // InternalSTAlgorithmParser.g:1404:1: ruleSTPrimaryExpression : ( ( rule__STPrimaryExpression__Alternatives ) ) ;
    public final void ruleSTPrimaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1408:2: ( ( ( rule__STPrimaryExpression__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1409:2: ( ( rule__STPrimaryExpression__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1409:2: ( ( rule__STPrimaryExpression__Alternatives ) )
            // InternalSTAlgorithmParser.g:1410:3: ( rule__STPrimaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1411:3: ( rule__STPrimaryExpression__Alternatives )
            // InternalSTAlgorithmParser.g:1411:4: rule__STPrimaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPrimaryExpression"


    // $ANTLR start "entryRuleSTFeatureExpression"
    // InternalSTAlgorithmParser.g:1420:1: entryRuleSTFeatureExpression : ruleSTFeatureExpression EOF ;
    public final void entryRuleSTFeatureExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1421:1: ( ruleSTFeatureExpression EOF )
            // InternalSTAlgorithmParser.g:1422:1: ruleSTFeatureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFeatureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFeatureExpression"


    // $ANTLR start "ruleSTFeatureExpression"
    // InternalSTAlgorithmParser.g:1429:1: ruleSTFeatureExpression : ( ( rule__STFeatureExpression__Group__0 ) ) ;
    public final void ruleSTFeatureExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1433:2: ( ( ( rule__STFeatureExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1434:2: ( ( rule__STFeatureExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1434:2: ( ( rule__STFeatureExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1435:3: ( rule__STFeatureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1436:3: ( rule__STFeatureExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1436:4: rule__STFeatureExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFeatureExpression"


    // $ANTLR start "entryRuleSTFeatureName"
    // InternalSTAlgorithmParser.g:1445:1: entryRuleSTFeatureName : ruleSTFeatureName EOF ;
    public final void entryRuleSTFeatureName() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1446:1: ( ruleSTFeatureName EOF )
            // InternalSTAlgorithmParser.g:1447:1: ruleSTFeatureName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFeatureName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFeatureName"


    // $ANTLR start "ruleSTFeatureName"
    // InternalSTAlgorithmParser.g:1454:1: ruleSTFeatureName : ( ( rule__STFeatureName__Alternatives ) ) ;
    public final void ruleSTFeatureName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1458:2: ( ( ( rule__STFeatureName__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1459:2: ( ( rule__STFeatureName__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1459:2: ( ( rule__STFeatureName__Alternatives ) )
            // InternalSTAlgorithmParser.g:1460:3: ( rule__STFeatureName__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureNameAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1461:3: ( rule__STFeatureName__Alternatives )
            // InternalSTAlgorithmParser.g:1461:4: rule__STFeatureName__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureName__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureNameAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFeatureName"


    // $ANTLR start "entryRuleSTBuiltinFeatureExpression"
    // InternalSTAlgorithmParser.g:1470:1: entryRuleSTBuiltinFeatureExpression : ruleSTBuiltinFeatureExpression EOF ;
    public final void entryRuleSTBuiltinFeatureExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1471:1: ( ruleSTBuiltinFeatureExpression EOF )
            // InternalSTAlgorithmParser.g:1472:1: ruleSTBuiltinFeatureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTBuiltinFeatureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTBuiltinFeatureExpression"


    // $ANTLR start "ruleSTBuiltinFeatureExpression"
    // InternalSTAlgorithmParser.g:1479:1: ruleSTBuiltinFeatureExpression : ( ( rule__STBuiltinFeatureExpression__Group__0 ) ) ;
    public final void ruleSTBuiltinFeatureExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1483:2: ( ( ( rule__STBuiltinFeatureExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1484:2: ( ( rule__STBuiltinFeatureExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1484:2: ( ( rule__STBuiltinFeatureExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1485:3: ( rule__STBuiltinFeatureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1486:3: ( rule__STBuiltinFeatureExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1486:4: rule__STBuiltinFeatureExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTBuiltinFeatureExpression"


    // $ANTLR start "entryRuleSTMultibitPartialExpression"
    // InternalSTAlgorithmParser.g:1495:1: entryRuleSTMultibitPartialExpression : ruleSTMultibitPartialExpression EOF ;
    public final void entryRuleSTMultibitPartialExpression() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1496:1: ( ruleSTMultibitPartialExpression EOF )
            // InternalSTAlgorithmParser.g:1497:1: ruleSTMultibitPartialExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMultibitPartialExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMultibitPartialExpression"


    // $ANTLR start "ruleSTMultibitPartialExpression"
    // InternalSTAlgorithmParser.g:1504:1: ruleSTMultibitPartialExpression : ( ( rule__STMultibitPartialExpression__Group__0 ) ) ;
    public final void ruleSTMultibitPartialExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1508:2: ( ( ( rule__STMultibitPartialExpression__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1509:2: ( ( rule__STMultibitPartialExpression__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1509:2: ( ( rule__STMultibitPartialExpression__Group__0 ) )
            // InternalSTAlgorithmParser.g:1510:3: ( rule__STMultibitPartialExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1511:3: ( rule__STMultibitPartialExpression__Group__0 )
            // InternalSTAlgorithmParser.g:1511:4: rule__STMultibitPartialExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMultibitPartialExpression"


    // $ANTLR start "entryRuleSTLiteralExpressions"
    // InternalSTAlgorithmParser.g:1520:1: entryRuleSTLiteralExpressions : ruleSTLiteralExpressions EOF ;
    public final void entryRuleSTLiteralExpressions() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1521:1: ( ruleSTLiteralExpressions EOF )
            // InternalSTAlgorithmParser.g:1522:1: ruleSTLiteralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLiteralExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLiteralExpressions"


    // $ANTLR start "ruleSTLiteralExpressions"
    // InternalSTAlgorithmParser.g:1529:1: ruleSTLiteralExpressions : ( ( rule__STLiteralExpressions__Alternatives ) ) ;
    public final void ruleSTLiteralExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1533:2: ( ( ( rule__STLiteralExpressions__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1534:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1534:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            // InternalSTAlgorithmParser.g:1535:3: ( rule__STLiteralExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1536:3: ( rule__STLiteralExpressions__Alternatives )
            // InternalSTAlgorithmParser.g:1536:4: rule__STLiteralExpressions__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLiteralExpressions"


    // $ANTLR start "entryRuleSTNumericLiteralType"
    // InternalSTAlgorithmParser.g:1545:1: entryRuleSTNumericLiteralType : ruleSTNumericLiteralType EOF ;
    public final void entryRuleSTNumericLiteralType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1546:1: ( ruleSTNumericLiteralType EOF )
            // InternalSTAlgorithmParser.g:1547:1: ruleSTNumericLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTNumericLiteralType"


    // $ANTLR start "ruleSTNumericLiteralType"
    // InternalSTAlgorithmParser.g:1554:1: ruleSTNumericLiteralType : ( ( rule__STNumericLiteralType__Alternatives ) ) ;
    public final void ruleSTNumericLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1558:2: ( ( ( rule__STNumericLiteralType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1559:2: ( ( rule__STNumericLiteralType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1559:2: ( ( rule__STNumericLiteralType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1560:3: ( rule__STNumericLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1561:3: ( rule__STNumericLiteralType__Alternatives )
            // InternalSTAlgorithmParser.g:1561:4: rule__STNumericLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTNumericLiteralType"


    // $ANTLR start "entryRuleSTNumericLiteral"
    // InternalSTAlgorithmParser.g:1570:1: entryRuleSTNumericLiteral : ruleSTNumericLiteral EOF ;
    public final void entryRuleSTNumericLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1571:1: ( ruleSTNumericLiteral EOF )
            // InternalSTAlgorithmParser.g:1572:1: ruleSTNumericLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTNumericLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTNumericLiteral"


    // $ANTLR start "ruleSTNumericLiteral"
    // InternalSTAlgorithmParser.g:1579:1: ruleSTNumericLiteral : ( ( rule__STNumericLiteral__Group__0 ) ) ;
    public final void ruleSTNumericLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1583:2: ( ( ( rule__STNumericLiteral__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1584:2: ( ( rule__STNumericLiteral__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1584:2: ( ( rule__STNumericLiteral__Group__0 ) )
            // InternalSTAlgorithmParser.g:1585:3: ( rule__STNumericLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1586:3: ( rule__STNumericLiteral__Group__0 )
            // InternalSTAlgorithmParser.g:1586:4: rule__STNumericLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTNumericLiteral"


    // $ANTLR start "entryRuleSTDateLiteralType"
    // InternalSTAlgorithmParser.g:1595:1: entryRuleSTDateLiteralType : ruleSTDateLiteralType EOF ;
    public final void entryRuleSTDateLiteralType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1596:1: ( ruleSTDateLiteralType EOF )
            // InternalSTAlgorithmParser.g:1597:1: ruleSTDateLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateLiteralType"


    // $ANTLR start "ruleSTDateLiteralType"
    // InternalSTAlgorithmParser.g:1604:1: ruleSTDateLiteralType : ( ( rule__STDateLiteralType__Alternatives ) ) ;
    public final void ruleSTDateLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1608:2: ( ( ( rule__STDateLiteralType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1609:2: ( ( rule__STDateLiteralType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1609:2: ( ( rule__STDateLiteralType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1610:3: ( rule__STDateLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1611:3: ( rule__STDateLiteralType__Alternatives )
            // InternalSTAlgorithmParser.g:1611:4: rule__STDateLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateLiteralType"


    // $ANTLR start "entryRuleSTDateLiteral"
    // InternalSTAlgorithmParser.g:1620:1: entryRuleSTDateLiteral : ruleSTDateLiteral EOF ;
    public final void entryRuleSTDateLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1621:1: ( ruleSTDateLiteral EOF )
            // InternalSTAlgorithmParser.g:1622:1: ruleSTDateLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateLiteral"


    // $ANTLR start "ruleSTDateLiteral"
    // InternalSTAlgorithmParser.g:1629:1: ruleSTDateLiteral : ( ( rule__STDateLiteral__Group__0 ) ) ;
    public final void ruleSTDateLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1633:2: ( ( ( rule__STDateLiteral__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1634:2: ( ( rule__STDateLiteral__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1634:2: ( ( rule__STDateLiteral__Group__0 ) )
            // InternalSTAlgorithmParser.g:1635:3: ( rule__STDateLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1636:3: ( rule__STDateLiteral__Group__0 )
            // InternalSTAlgorithmParser.g:1636:4: rule__STDateLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateLiteral"


    // $ANTLR start "entryRuleSTTimeLiteralType"
    // InternalSTAlgorithmParser.g:1645:1: entryRuleSTTimeLiteralType : ruleSTTimeLiteralType EOF ;
    public final void entryRuleSTTimeLiteralType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1646:1: ( ruleSTTimeLiteralType EOF )
            // InternalSTAlgorithmParser.g:1647:1: ruleSTTimeLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeLiteralType"


    // $ANTLR start "ruleSTTimeLiteralType"
    // InternalSTAlgorithmParser.g:1654:1: ruleSTTimeLiteralType : ( ( rule__STTimeLiteralType__Alternatives ) ) ;
    public final void ruleSTTimeLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1658:2: ( ( ( rule__STTimeLiteralType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1659:2: ( ( rule__STTimeLiteralType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1659:2: ( ( rule__STTimeLiteralType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1660:3: ( rule__STTimeLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1661:3: ( rule__STTimeLiteralType__Alternatives )
            // InternalSTAlgorithmParser.g:1661:4: rule__STTimeLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeLiteralType"


    // $ANTLR start "entryRuleSTTimeLiteral"
    // InternalSTAlgorithmParser.g:1670:1: entryRuleSTTimeLiteral : ruleSTTimeLiteral EOF ;
    public final void entryRuleSTTimeLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1671:1: ( ruleSTTimeLiteral EOF )
            // InternalSTAlgorithmParser.g:1672:1: ruleSTTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeLiteral"


    // $ANTLR start "ruleSTTimeLiteral"
    // InternalSTAlgorithmParser.g:1679:1: ruleSTTimeLiteral : ( ( rule__STTimeLiteral__Group__0 ) ) ;
    public final void ruleSTTimeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1683:2: ( ( ( rule__STTimeLiteral__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1684:2: ( ( rule__STTimeLiteral__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1684:2: ( ( rule__STTimeLiteral__Group__0 ) )
            // InternalSTAlgorithmParser.g:1685:3: ( rule__STTimeLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1686:3: ( rule__STTimeLiteral__Group__0 )
            // InternalSTAlgorithmParser.g:1686:4: rule__STTimeLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeLiteral"


    // $ANTLR start "entryRuleSTTimeOfDayLiteral"
    // InternalSTAlgorithmParser.g:1695:1: entryRuleSTTimeOfDayLiteral : ruleSTTimeOfDayLiteral EOF ;
    public final void entryRuleSTTimeOfDayLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1696:1: ( ruleSTTimeOfDayLiteral EOF )
            // InternalSTAlgorithmParser.g:1697:1: ruleSTTimeOfDayLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeOfDayLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeOfDayLiteral"


    // $ANTLR start "ruleSTTimeOfDayLiteral"
    // InternalSTAlgorithmParser.g:1704:1: ruleSTTimeOfDayLiteral : ( ( rule__STTimeOfDayLiteral__Group__0 ) ) ;
    public final void ruleSTTimeOfDayLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1708:2: ( ( ( rule__STTimeOfDayLiteral__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1709:2: ( ( rule__STTimeOfDayLiteral__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1709:2: ( ( rule__STTimeOfDayLiteral__Group__0 ) )
            // InternalSTAlgorithmParser.g:1710:3: ( rule__STTimeOfDayLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1711:3: ( rule__STTimeOfDayLiteral__Group__0 )
            // InternalSTAlgorithmParser.g:1711:4: rule__STTimeOfDayLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeOfDayLiteral"


    // $ANTLR start "entryRuleSTDateAndTimeLiteral"
    // InternalSTAlgorithmParser.g:1720:1: entryRuleSTDateAndTimeLiteral : ruleSTDateAndTimeLiteral EOF ;
    public final void entryRuleSTDateAndTimeLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1721:1: ( ruleSTDateAndTimeLiteral EOF )
            // InternalSTAlgorithmParser.g:1722:1: ruleSTDateAndTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateAndTimeLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateAndTimeLiteral"


    // $ANTLR start "ruleSTDateAndTimeLiteral"
    // InternalSTAlgorithmParser.g:1729:1: ruleSTDateAndTimeLiteral : ( ( rule__STDateAndTimeLiteral__Group__0 ) ) ;
    public final void ruleSTDateAndTimeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1733:2: ( ( ( rule__STDateAndTimeLiteral__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1734:2: ( ( rule__STDateAndTimeLiteral__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1734:2: ( ( rule__STDateAndTimeLiteral__Group__0 ) )
            // InternalSTAlgorithmParser.g:1735:3: ( rule__STDateAndTimeLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1736:3: ( rule__STDateAndTimeLiteral__Group__0 )
            // InternalSTAlgorithmParser.g:1736:4: rule__STDateAndTimeLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateAndTimeLiteral"


    // $ANTLR start "entryRuleSTStringLiteral"
    // InternalSTAlgorithmParser.g:1745:1: entryRuleSTStringLiteral : ruleSTStringLiteral EOF ;
    public final void entryRuleSTStringLiteral() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1746:1: ( ruleSTStringLiteral EOF )
            // InternalSTAlgorithmParser.g:1747:1: ruleSTStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStringLiteral"


    // $ANTLR start "ruleSTStringLiteral"
    // InternalSTAlgorithmParser.g:1754:1: ruleSTStringLiteral : ( ( rule__STStringLiteral__Group__0 ) ) ;
    public final void ruleSTStringLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1758:2: ( ( ( rule__STStringLiteral__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:1759:2: ( ( rule__STStringLiteral__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:1759:2: ( ( rule__STStringLiteral__Group__0 ) )
            // InternalSTAlgorithmParser.g:1760:3: ( rule__STStringLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:1761:3: ( rule__STStringLiteral__Group__0 )
            // InternalSTAlgorithmParser.g:1761:4: rule__STStringLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStringLiteral"


    // $ANTLR start "entryRuleSTAnyType"
    // InternalSTAlgorithmParser.g:1770:1: entryRuleSTAnyType : ruleSTAnyType EOF ;
    public final void entryRuleSTAnyType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1771:1: ( ruleSTAnyType EOF )
            // InternalSTAlgorithmParser.g:1772:1: ruleSTAnyType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyType"


    // $ANTLR start "ruleSTAnyType"
    // InternalSTAlgorithmParser.g:1779:1: ruleSTAnyType : ( ( rule__STAnyType__Alternatives ) ) ;
    public final void ruleSTAnyType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1783:2: ( ( ( rule__STAnyType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1784:2: ( ( rule__STAnyType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1784:2: ( ( rule__STAnyType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1785:3: ( rule__STAnyType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1786:3: ( rule__STAnyType__Alternatives )
            // InternalSTAlgorithmParser.g:1786:4: rule__STAnyType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyType"


    // $ANTLR start "entryRuleSTAnyBuiltinType"
    // InternalSTAlgorithmParser.g:1795:1: entryRuleSTAnyBuiltinType : ruleSTAnyBuiltinType EOF ;
    public final void entryRuleSTAnyBuiltinType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1796:1: ( ruleSTAnyBuiltinType EOF )
            // InternalSTAlgorithmParser.g:1797:1: ruleSTAnyBuiltinType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBuiltinTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyBuiltinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBuiltinTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyBuiltinType"


    // $ANTLR start "ruleSTAnyBuiltinType"
    // InternalSTAlgorithmParser.g:1804:1: ruleSTAnyBuiltinType : ( ( rule__STAnyBuiltinType__Alternatives ) ) ;
    public final void ruleSTAnyBuiltinType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1808:2: ( ( ( rule__STAnyBuiltinType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1809:2: ( ( rule__STAnyBuiltinType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1809:2: ( ( rule__STAnyBuiltinType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1810:3: ( rule__STAnyBuiltinType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBuiltinTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1811:3: ( rule__STAnyBuiltinType__Alternatives )
            // InternalSTAlgorithmParser.g:1811:4: rule__STAnyBuiltinType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyBuiltinType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBuiltinTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyBuiltinType"


    // $ANTLR start "entryRuleSTAnyBitType"
    // InternalSTAlgorithmParser.g:1820:1: entryRuleSTAnyBitType : ruleSTAnyBitType EOF ;
    public final void entryRuleSTAnyBitType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1821:1: ( ruleSTAnyBitType EOF )
            // InternalSTAlgorithmParser.g:1822:1: ruleSTAnyBitType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBitTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyBitType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBitTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyBitType"


    // $ANTLR start "ruleSTAnyBitType"
    // InternalSTAlgorithmParser.g:1829:1: ruleSTAnyBitType : ( ( rule__STAnyBitType__Alternatives ) ) ;
    public final void ruleSTAnyBitType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1833:2: ( ( ( rule__STAnyBitType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1834:2: ( ( rule__STAnyBitType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1834:2: ( ( rule__STAnyBitType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1835:3: ( rule__STAnyBitType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBitTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1836:3: ( rule__STAnyBitType__Alternatives )
            // InternalSTAlgorithmParser.g:1836:4: rule__STAnyBitType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyBitType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBitTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyBitType"


    // $ANTLR start "entryRuleSTAnyNumType"
    // InternalSTAlgorithmParser.g:1845:1: entryRuleSTAnyNumType : ruleSTAnyNumType EOF ;
    public final void entryRuleSTAnyNumType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1846:1: ( ruleSTAnyNumType EOF )
            // InternalSTAlgorithmParser.g:1847:1: ruleSTAnyNumType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyNumTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyNumType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyNumTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyNumType"


    // $ANTLR start "ruleSTAnyNumType"
    // InternalSTAlgorithmParser.g:1854:1: ruleSTAnyNumType : ( ( rule__STAnyNumType__Alternatives ) ) ;
    public final void ruleSTAnyNumType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1858:2: ( ( ( rule__STAnyNumType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1859:2: ( ( rule__STAnyNumType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1859:2: ( ( rule__STAnyNumType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1860:3: ( rule__STAnyNumType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyNumTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1861:3: ( rule__STAnyNumType__Alternatives )
            // InternalSTAlgorithmParser.g:1861:4: rule__STAnyNumType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyNumType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyNumTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyNumType"


    // $ANTLR start "entryRuleSTAnyDurationType"
    // InternalSTAlgorithmParser.g:1870:1: entryRuleSTAnyDurationType : ruleSTAnyDurationType EOF ;
    public final void entryRuleSTAnyDurationType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1871:1: ( ruleSTAnyDurationType EOF )
            // InternalSTAlgorithmParser.g:1872:1: ruleSTAnyDurationType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDurationTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyDurationType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDurationTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyDurationType"


    // $ANTLR start "ruleSTAnyDurationType"
    // InternalSTAlgorithmParser.g:1879:1: ruleSTAnyDurationType : ( ( rule__STAnyDurationType__Alternatives ) ) ;
    public final void ruleSTAnyDurationType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1883:2: ( ( ( rule__STAnyDurationType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1884:2: ( ( rule__STAnyDurationType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1884:2: ( ( rule__STAnyDurationType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1885:3: ( rule__STAnyDurationType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDurationTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1886:3: ( rule__STAnyDurationType__Alternatives )
            // InternalSTAlgorithmParser.g:1886:4: rule__STAnyDurationType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyDurationType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDurationTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyDurationType"


    // $ANTLR start "entryRuleSTAnyDateType"
    // InternalSTAlgorithmParser.g:1895:1: entryRuleSTAnyDateType : ruleSTAnyDateType EOF ;
    public final void entryRuleSTAnyDateType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1896:1: ( ruleSTAnyDateType EOF )
            // InternalSTAlgorithmParser.g:1897:1: ruleSTAnyDateType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDateTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyDateType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDateTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyDateType"


    // $ANTLR start "ruleSTAnyDateType"
    // InternalSTAlgorithmParser.g:1904:1: ruleSTAnyDateType : ( ( rule__STAnyDateType__Alternatives ) ) ;
    public final void ruleSTAnyDateType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1908:2: ( ( ( rule__STAnyDateType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1909:2: ( ( rule__STAnyDateType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1909:2: ( ( rule__STAnyDateType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1910:3: ( rule__STAnyDateType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDateTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1911:3: ( rule__STAnyDateType__Alternatives )
            // InternalSTAlgorithmParser.g:1911:4: rule__STAnyDateType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyDateType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDateTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyDateType"


    // $ANTLR start "entryRuleSTDateType"
    // InternalSTAlgorithmParser.g:1920:1: entryRuleSTDateType : ruleSTDateType EOF ;
    public final void entryRuleSTDateType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1921:1: ( ruleSTDateType EOF )
            // InternalSTAlgorithmParser.g:1922:1: ruleSTDateType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateType"


    // $ANTLR start "ruleSTDateType"
    // InternalSTAlgorithmParser.g:1929:1: ruleSTDateType : ( ( rule__STDateType__Alternatives ) ) ;
    public final void ruleSTDateType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1933:2: ( ( ( rule__STDateType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1934:2: ( ( rule__STDateType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1934:2: ( ( rule__STDateType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1935:3: ( rule__STDateType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1936:3: ( rule__STDateType__Alternatives )
            // InternalSTAlgorithmParser.g:1936:4: rule__STDateType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateType"


    // $ANTLR start "entryRuleSTTimeOfDayType"
    // InternalSTAlgorithmParser.g:1945:1: entryRuleSTTimeOfDayType : ruleSTTimeOfDayType EOF ;
    public final void entryRuleSTTimeOfDayType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1946:1: ( ruleSTTimeOfDayType EOF )
            // InternalSTAlgorithmParser.g:1947:1: ruleSTTimeOfDayType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeOfDayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeOfDayType"


    // $ANTLR start "ruleSTTimeOfDayType"
    // InternalSTAlgorithmParser.g:1954:1: ruleSTTimeOfDayType : ( ( rule__STTimeOfDayType__Alternatives ) ) ;
    public final void ruleSTTimeOfDayType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1958:2: ( ( ( rule__STTimeOfDayType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1959:2: ( ( rule__STTimeOfDayType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1959:2: ( ( rule__STTimeOfDayType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1960:3: ( rule__STTimeOfDayType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1961:3: ( rule__STTimeOfDayType__Alternatives )
            // InternalSTAlgorithmParser.g:1961:4: rule__STTimeOfDayType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeOfDayType"


    // $ANTLR start "entryRuleSTDateAndTimeType"
    // InternalSTAlgorithmParser.g:1970:1: entryRuleSTDateAndTimeType : ruleSTDateAndTimeType EOF ;
    public final void entryRuleSTDateAndTimeType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1971:1: ( ruleSTDateAndTimeType EOF )
            // InternalSTAlgorithmParser.g:1972:1: ruleSTDateAndTimeType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateAndTimeType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateAndTimeType"


    // $ANTLR start "ruleSTDateAndTimeType"
    // InternalSTAlgorithmParser.g:1979:1: ruleSTDateAndTimeType : ( ( rule__STDateAndTimeType__Alternatives ) ) ;
    public final void ruleSTDateAndTimeType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:1983:2: ( ( ( rule__STDateAndTimeType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:1984:2: ( ( rule__STDateAndTimeType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:1984:2: ( ( rule__STDateAndTimeType__Alternatives ) )
            // InternalSTAlgorithmParser.g:1985:3: ( rule__STDateAndTimeType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:1986:3: ( rule__STDateAndTimeType__Alternatives )
            // InternalSTAlgorithmParser.g:1986:4: rule__STDateAndTimeType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateAndTimeType"


    // $ANTLR start "entryRuleSTAnyCharsType"
    // InternalSTAlgorithmParser.g:1995:1: entryRuleSTAnyCharsType : ruleSTAnyCharsType EOF ;
    public final void entryRuleSTAnyCharsType() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:1996:1: ( ruleSTAnyCharsType EOF )
            // InternalSTAlgorithmParser.g:1997:1: ruleSTAnyCharsType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyCharsTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyCharsType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyCharsTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyCharsType"


    // $ANTLR start "ruleSTAnyCharsType"
    // InternalSTAlgorithmParser.g:2004:1: ruleSTAnyCharsType : ( ( rule__STAnyCharsType__Alternatives ) ) ;
    public final void ruleSTAnyCharsType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2008:2: ( ( ( rule__STAnyCharsType__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:2009:2: ( ( rule__STAnyCharsType__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:2009:2: ( ( rule__STAnyCharsType__Alternatives ) )
            // InternalSTAlgorithmParser.g:2010:3: ( rule__STAnyCharsType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyCharsTypeAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:2011:3: ( rule__STAnyCharsType__Alternatives )
            // InternalSTAlgorithmParser.g:2011:4: rule__STAnyCharsType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyCharsType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyCharsTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyCharsType"


    // $ANTLR start "entryRuleNumeric"
    // InternalSTAlgorithmParser.g:2020:1: entryRuleNumeric : ruleNumeric EOF ;
    public final void entryRuleNumeric() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:2021:1: ( ruleNumeric EOF )
            // InternalSTAlgorithmParser.g:2022:1: ruleNumeric EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumericRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumeric();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumericRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNumeric"


    // $ANTLR start "ruleNumeric"
    // InternalSTAlgorithmParser.g:2029:1: ruleNumeric : ( ( rule__Numeric__Alternatives ) ) ;
    public final void ruleNumeric() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2033:2: ( ( ( rule__Numeric__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:2034:2: ( ( rule__Numeric__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:2034:2: ( ( rule__Numeric__Alternatives ) )
            // InternalSTAlgorithmParser.g:2035:3: ( rule__Numeric__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumericAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:2036:3: ( rule__Numeric__Alternatives )
            // InternalSTAlgorithmParser.g:2036:4: rule__Numeric__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Numeric__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumericAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNumeric"


    // $ANTLR start "entryRuleNumber"
    // InternalSTAlgorithmParser.g:2045:1: entryRuleNumber : ruleNumber EOF ;
    public final void entryRuleNumber() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalSTAlgorithmParser.g:2049:1: ( ruleNumber EOF )
            // InternalSTAlgorithmParser.g:2050:1: ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalSTAlgorithmParser.g:2060:1: ruleNumber : ( ( rule__Number__Group__0 ) ) ;
    public final void ruleNumber() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2065:2: ( ( ( rule__Number__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:2066:2: ( ( rule__Number__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:2066:2: ( ( rule__Number__Group__0 ) )
            // InternalSTAlgorithmParser.g:2067:3: ( rule__Number__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:2068:3: ( rule__Number__Group__0 )
            // InternalSTAlgorithmParser.g:2068:4: rule__Number__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleTime"
    // InternalSTAlgorithmParser.g:2078:1: entryRuleTime : ruleTime EOF ;
    public final void entryRuleTime() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalSTAlgorithmParser.g:2082:1: ( ruleTime EOF )
            // InternalSTAlgorithmParser.g:2083:1: ruleTime EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleTime"


    // $ANTLR start "ruleTime"
    // InternalSTAlgorithmParser.g:2093:1: ruleTime : ( ( rule__Time__Group__0 ) ) ;
    public final void ruleTime() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2098:2: ( ( ( rule__Time__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:2099:2: ( ( rule__Time__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:2099:2: ( ( rule__Time__Group__0 ) )
            // InternalSTAlgorithmParser.g:2100:3: ( rule__Time__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:2101:3: ( rule__Time__Group__0 )
            // InternalSTAlgorithmParser.g:2101:4: rule__Time__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Time__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleTime"


    // $ANTLR start "entryRuleDate"
    // InternalSTAlgorithmParser.g:2111:1: entryRuleDate : ruleDate EOF ;
    public final void entryRuleDate() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:2112:1: ( ruleDate EOF )
            // InternalSTAlgorithmParser.g:2113:1: ruleDate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDate"


    // $ANTLR start "ruleDate"
    // InternalSTAlgorithmParser.g:2120:1: ruleDate : ( ( rule__Date__Group__0 ) ) ;
    public final void ruleDate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2124:2: ( ( ( rule__Date__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:2125:2: ( ( rule__Date__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:2125:2: ( ( rule__Date__Group__0 ) )
            // InternalSTAlgorithmParser.g:2126:3: ( rule__Date__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:2127:3: ( rule__Date__Group__0 )
            // InternalSTAlgorithmParser.g:2127:4: rule__Date__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Date__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDate"


    // $ANTLR start "entryRuleDateAndTime"
    // InternalSTAlgorithmParser.g:2136:1: entryRuleDateAndTime : ruleDateAndTime EOF ;
    public final void entryRuleDateAndTime() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:2137:1: ( ruleDateAndTime EOF )
            // InternalSTAlgorithmParser.g:2138:1: ruleDateAndTime EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDateAndTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDateAndTime"


    // $ANTLR start "ruleDateAndTime"
    // InternalSTAlgorithmParser.g:2145:1: ruleDateAndTime : ( ( rule__DateAndTime__Group__0 ) ) ;
    public final void ruleDateAndTime() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2149:2: ( ( ( rule__DateAndTime__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:2150:2: ( ( rule__DateAndTime__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:2150:2: ( ( rule__DateAndTime__Group__0 ) )
            // InternalSTAlgorithmParser.g:2151:3: ( rule__DateAndTime__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:2152:3: ( rule__DateAndTime__Group__0 )
            // InternalSTAlgorithmParser.g:2152:4: rule__DateAndTime__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDateAndTime"


    // $ANTLR start "entryRuleTimeOfDay"
    // InternalSTAlgorithmParser.g:2161:1: entryRuleTimeOfDay : ruleTimeOfDay EOF ;
    public final void entryRuleTimeOfDay() throws RecognitionException {
        try {
            // InternalSTAlgorithmParser.g:2162:1: ( ruleTimeOfDay EOF )
            // InternalSTAlgorithmParser.g:2163:1: ruleTimeOfDay EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTimeOfDay"


    // $ANTLR start "ruleTimeOfDay"
    // InternalSTAlgorithmParser.g:2170:1: ruleTimeOfDay : ( ( rule__TimeOfDay__Group__0 ) ) ;
    public final void ruleTimeOfDay() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2174:2: ( ( ( rule__TimeOfDay__Group__0 ) ) )
            // InternalSTAlgorithmParser.g:2175:2: ( ( rule__TimeOfDay__Group__0 ) )
            {
            // InternalSTAlgorithmParser.g:2175:2: ( ( rule__TimeOfDay__Group__0 ) )
            // InternalSTAlgorithmParser.g:2176:3: ( rule__TimeOfDay__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getGroup()); 
            }
            // InternalSTAlgorithmParser.g:2177:3: ( rule__TimeOfDay__Group__0 )
            // InternalSTAlgorithmParser.g:2177:4: rule__TimeOfDay__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTimeOfDay"


    // $ANTLR start "ruleSubrangeOperator"
    // InternalSTAlgorithmParser.g:2186:1: ruleSubrangeOperator : ( ( FullStopFullStop ) ) ;
    public final void ruleSubrangeOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2190:1: ( ( ( FullStopFullStop ) ) )
            // InternalSTAlgorithmParser.g:2191:2: ( ( FullStopFullStop ) )
            {
            // InternalSTAlgorithmParser.g:2191:2: ( ( FullStopFullStop ) )
            // InternalSTAlgorithmParser.g:2192:3: ( FullStopFullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }
            // InternalSTAlgorithmParser.g:2193:3: ( FullStopFullStop )
            // InternalSTAlgorithmParser.g:2193:4: FullStopFullStop
            {
            match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubrangeOperator"


    // $ANTLR start "ruleOrOperator"
    // InternalSTAlgorithmParser.g:2202:1: ruleOrOperator : ( ( OR ) ) ;
    public final void ruleOrOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2206:1: ( ( ( OR ) ) )
            // InternalSTAlgorithmParser.g:2207:2: ( ( OR ) )
            {
            // InternalSTAlgorithmParser.g:2207:2: ( ( OR ) )
            // InternalSTAlgorithmParser.g:2208:3: ( OR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }
            // InternalSTAlgorithmParser.g:2209:3: ( OR )
            // InternalSTAlgorithmParser.g:2209:4: OR
            {
            match(input,OR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalSTAlgorithmParser.g:2218:1: ruleXorOperator : ( ( XOR ) ) ;
    public final void ruleXorOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2222:1: ( ( ( XOR ) ) )
            // InternalSTAlgorithmParser.g:2223:2: ( ( XOR ) )
            {
            // InternalSTAlgorithmParser.g:2223:2: ( ( XOR ) )
            // InternalSTAlgorithmParser.g:2224:3: ( XOR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }
            // InternalSTAlgorithmParser.g:2225:3: ( XOR )
            // InternalSTAlgorithmParser.g:2225:4: XOR
            {
            match(input,XOR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalSTAlgorithmParser.g:2234:1: ruleAndOperator : ( ( rule__AndOperator__Alternatives ) ) ;
    public final void ruleAndOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2238:1: ( ( ( rule__AndOperator__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:2239:2: ( ( rule__AndOperator__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:2239:2: ( ( rule__AndOperator__Alternatives ) )
            // InternalSTAlgorithmParser.g:2240:3: ( rule__AndOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:2241:3: ( rule__AndOperator__Alternatives )
            // InternalSTAlgorithmParser.g:2241:4: rule__AndOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AndOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "ruleEqualityOperator"
    // InternalSTAlgorithmParser.g:2250:1: ruleEqualityOperator : ( ( rule__EqualityOperator__Alternatives ) ) ;
    public final void ruleEqualityOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2254:1: ( ( ( rule__EqualityOperator__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:2255:2: ( ( rule__EqualityOperator__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:2255:2: ( ( rule__EqualityOperator__Alternatives ) )
            // InternalSTAlgorithmParser.g:2256:3: ( rule__EqualityOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:2257:3: ( rule__EqualityOperator__Alternatives )
            // InternalSTAlgorithmParser.g:2257:4: rule__EqualityOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EqualityOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSTAlgorithmParser.g:2266:1: ruleCompareOperator : ( ( rule__CompareOperator__Alternatives ) ) ;
    public final void ruleCompareOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2270:1: ( ( ( rule__CompareOperator__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:2271:2: ( ( rule__CompareOperator__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:2271:2: ( ( rule__CompareOperator__Alternatives ) )
            // InternalSTAlgorithmParser.g:2272:3: ( rule__CompareOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:2273:3: ( rule__CompareOperator__Alternatives )
            // InternalSTAlgorithmParser.g:2273:4: rule__CompareOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CompareOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "ruleAddSubOperator"
    // InternalSTAlgorithmParser.g:2282:1: ruleAddSubOperator : ( ( rule__AddSubOperator__Alternatives ) ) ;
    public final void ruleAddSubOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2286:1: ( ( ( rule__AddSubOperator__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:2287:2: ( ( rule__AddSubOperator__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:2287:2: ( ( rule__AddSubOperator__Alternatives ) )
            // InternalSTAlgorithmParser.g:2288:3: ( rule__AddSubOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:2289:3: ( rule__AddSubOperator__Alternatives )
            // InternalSTAlgorithmParser.g:2289:4: rule__AddSubOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AddSubOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddSubOperator"


    // $ANTLR start "ruleMulDivModOperator"
    // InternalSTAlgorithmParser.g:2298:1: ruleMulDivModOperator : ( ( rule__MulDivModOperator__Alternatives ) ) ;
    public final void ruleMulDivModOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2302:1: ( ( ( rule__MulDivModOperator__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:2303:2: ( ( rule__MulDivModOperator__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:2303:2: ( ( rule__MulDivModOperator__Alternatives ) )
            // InternalSTAlgorithmParser.g:2304:3: ( rule__MulDivModOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:2305:3: ( rule__MulDivModOperator__Alternatives )
            // InternalSTAlgorithmParser.g:2305:4: rule__MulDivModOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MulDivModOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulDivModOperator"


    // $ANTLR start "rulePowerOperator"
    // InternalSTAlgorithmParser.g:2314:1: rulePowerOperator : ( ( AsteriskAsterisk ) ) ;
    public final void rulePowerOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2318:1: ( ( ( AsteriskAsterisk ) ) )
            // InternalSTAlgorithmParser.g:2319:2: ( ( AsteriskAsterisk ) )
            {
            // InternalSTAlgorithmParser.g:2319:2: ( ( AsteriskAsterisk ) )
            // InternalSTAlgorithmParser.g:2320:3: ( AsteriskAsterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }
            // InternalSTAlgorithmParser.g:2321:3: ( AsteriskAsterisk )
            // InternalSTAlgorithmParser.g:2321:4: AsteriskAsterisk
            {
            match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePowerOperator"


    // $ANTLR start "ruleUnaryOperator"
    // InternalSTAlgorithmParser.g:2330:1: ruleUnaryOperator : ( ( rule__UnaryOperator__Alternatives ) ) ;
    public final void ruleUnaryOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2334:1: ( ( ( rule__UnaryOperator__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:2335:2: ( ( rule__UnaryOperator__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:2335:2: ( ( rule__UnaryOperator__Alternatives ) )
            // InternalSTAlgorithmParser.g:2336:3: ( rule__UnaryOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:2337:3: ( rule__UnaryOperator__Alternatives )
            // InternalSTAlgorithmParser.g:2337:4: rule__UnaryOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "ruleSTBuiltinFeature"
    // InternalSTAlgorithmParser.g:2346:1: ruleSTBuiltinFeature : ( ( THIS ) ) ;
    public final void ruleSTBuiltinFeature() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2350:1: ( ( ( THIS ) ) )
            // InternalSTAlgorithmParser.g:2351:2: ( ( THIS ) )
            {
            // InternalSTAlgorithmParser.g:2351:2: ( ( THIS ) )
            // InternalSTAlgorithmParser.g:2352:3: ( THIS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureAccess().getTHISEnumLiteralDeclaration()); 
            }
            // InternalSTAlgorithmParser.g:2353:3: ( THIS )
            // InternalSTAlgorithmParser.g:2353:4: THIS
            {
            match(input,THIS,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureAccess().getTHISEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTBuiltinFeature"


    // $ANTLR start "ruleSTMultiBitAccessSpecifier"
    // InternalSTAlgorithmParser.g:2362:1: ruleSTMultiBitAccessSpecifier : ( ( rule__STMultiBitAccessSpecifier__Alternatives ) ) ;
    public final void ruleSTMultiBitAccessSpecifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2366:1: ( ( ( rule__STMultiBitAccessSpecifier__Alternatives ) ) )
            // InternalSTAlgorithmParser.g:2367:2: ( ( rule__STMultiBitAccessSpecifier__Alternatives ) )
            {
            // InternalSTAlgorithmParser.g:2367:2: ( ( rule__STMultiBitAccessSpecifier__Alternatives ) )
            // InternalSTAlgorithmParser.g:2368:3: ( rule__STMultiBitAccessSpecifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getAlternatives()); 
            }
            // InternalSTAlgorithmParser.g:2369:3: ( rule__STMultiBitAccessSpecifier__Alternatives )
            // InternalSTAlgorithmParser.g:2369:4: rule__STMultiBitAccessSpecifier__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STMultiBitAccessSpecifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMultiBitAccessSpecifier"


    // $ANTLR start "rule__STAlgorithmSourceElement__Alternatives"
    // InternalSTAlgorithmParser.g:2377:1: rule__STAlgorithmSourceElement__Alternatives : ( ( ruleSTAlgorithm ) | ( ruleSTMethod ) );
    public final void rule__STAlgorithmSourceElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2381:1: ( ( ruleSTAlgorithm ) | ( ruleSTMethod ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==ALGORITHM) ) {
                alt1=1;
            }
            else if ( (LA1_0==METHOD) ) {
                alt1=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2382:2: ( ruleSTAlgorithm )
                    {
                    // InternalSTAlgorithmParser.g:2382:2: ( ruleSTAlgorithm )
                    // InternalSTAlgorithmParser.g:2383:3: ruleSTAlgorithm
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAlgorithmSourceElementAccess().getSTAlgorithmParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAlgorithm();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAlgorithmSourceElementAccess().getSTAlgorithmParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2388:2: ( ruleSTMethod )
                    {
                    // InternalSTAlgorithmParser.g:2388:2: ( ruleSTMethod )
                    // InternalSTAlgorithmParser.g:2389:3: ruleSTMethod
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAlgorithmSourceElementAccess().getSTMethodParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTMethod();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAlgorithmSourceElementAccess().getSTMethodParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmSourceElement__Alternatives"


    // $ANTLR start "rule__STMethodBody__VarDeclarationsAlternatives_1_0"
    // InternalSTAlgorithmParser.g:2398:1: rule__STMethodBody__VarDeclarationsAlternatives_1_0 : ( ( ruleSTVarTempDeclarationBlock ) | ( ruleSTVarInputDeclarationBlock ) | ( ruleSTVarOutputDeclarationBlock ) | ( ruleSTVarInOutDeclarationBlock ) );
    public final void rule__STMethodBody__VarDeclarationsAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2402:1: ( ( ruleSTVarTempDeclarationBlock ) | ( ruleSTVarInputDeclarationBlock ) | ( ruleSTVarOutputDeclarationBlock ) | ( ruleSTVarInOutDeclarationBlock ) )
            int alt2=4;
            switch ( input.LA(1) ) {
            case VAR_TEMP:
                {
                alt2=1;
                }
                break;
            case VAR_INPUT:
                {
                alt2=2;
                }
                break;
            case VAR_OUTPUT:
                {
                alt2=3;
                }
                break;
            case VAR_IN_OUT:
                {
                alt2=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2403:2: ( ruleSTVarTempDeclarationBlock )
                    {
                    // InternalSTAlgorithmParser.g:2403:2: ( ruleSTVarTempDeclarationBlock )
                    // InternalSTAlgorithmParser.g:2404:3: ruleSTVarTempDeclarationBlock
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMethodBodyAccess().getVarDeclarationsSTVarTempDeclarationBlockParserRuleCall_1_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTVarTempDeclarationBlock();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMethodBodyAccess().getVarDeclarationsSTVarTempDeclarationBlockParserRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2409:2: ( ruleSTVarInputDeclarationBlock )
                    {
                    // InternalSTAlgorithmParser.g:2409:2: ( ruleSTVarInputDeclarationBlock )
                    // InternalSTAlgorithmParser.g:2410:3: ruleSTVarInputDeclarationBlock
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMethodBodyAccess().getVarDeclarationsSTVarInputDeclarationBlockParserRuleCall_1_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTVarInputDeclarationBlock();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMethodBodyAccess().getVarDeclarationsSTVarInputDeclarationBlockParserRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2415:2: ( ruleSTVarOutputDeclarationBlock )
                    {
                    // InternalSTAlgorithmParser.g:2415:2: ( ruleSTVarOutputDeclarationBlock )
                    // InternalSTAlgorithmParser.g:2416:3: ruleSTVarOutputDeclarationBlock
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMethodBodyAccess().getVarDeclarationsSTVarOutputDeclarationBlockParserRuleCall_1_0_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTVarOutputDeclarationBlock();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMethodBodyAccess().getVarDeclarationsSTVarOutputDeclarationBlockParserRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2421:2: ( ruleSTVarInOutDeclarationBlock )
                    {
                    // InternalSTAlgorithmParser.g:2421:2: ( ruleSTVarInOutDeclarationBlock )
                    // InternalSTAlgorithmParser.g:2422:3: ruleSTVarInOutDeclarationBlock
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMethodBodyAccess().getVarDeclarationsSTVarInOutDeclarationBlockParserRuleCall_1_0_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTVarInOutDeclarationBlock();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMethodBodyAccess().getVarDeclarationsSTVarInOutDeclarationBlockParserRuleCall_1_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethodBody__VarDeclarationsAlternatives_1_0"


    // $ANTLR start "rule__STVarDeclaration__Alternatives_4_1"
    // InternalSTAlgorithmParser.g:2431:1: rule__STVarDeclaration__Alternatives_4_1 : ( ( ( rule__STVarDeclaration__Group_4_1_0__0 ) ) | ( ( rule__STVarDeclaration__Group_4_1_1__0 ) ) );
    public final void rule__STVarDeclaration__Alternatives_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2435:1: ( ( ( rule__STVarDeclaration__Group_4_1_0__0 ) ) | ( ( rule__STVarDeclaration__Group_4_1_1__0 ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==LeftSquareBracket) ) {
                int LA3_1 = input.LA(2);

                if ( (LA3_1==Asterisk) ) {
                    alt3=2;
                }
                else if ( (LA3_1==LDATE_AND_TIME||LA3_1==DATE_AND_TIME||LA3_1==LTIME_OF_DAY||LA3_1==TIME_OF_DAY||LA3_1==WSTRING||LA3_1==STRING||LA3_1==DWORD||LA3_1==FALSE||(LA3_1>=LDATE && LA3_1<=LWORD)||(LA3_1>=UDINT && LA3_1<=ULINT)||(LA3_1>=USINT && LA3_1<=WCHAR)||(LA3_1>=BOOL && LA3_1<=BYTE)||(LA3_1>=CHAR && LA3_1<=DINT)||(LA3_1>=LINT && LA3_1<=LTOD)||(LA3_1>=REAL && LA3_1<=SINT)||(LA3_1>=THIS && LA3_1<=TRUE)||LA3_1==UINT||(LA3_1>=WORD && LA3_1<=AND)||(LA3_1>=INT && LA3_1<=NOT)||LA3_1==TOD||LA3_1==XOR||LA3_1==DT||(LA3_1>=LD && LA3_1<=LT)||LA3_1==OR||LA3_1==LeftParenthesis||LA3_1==PlusSign||LA3_1==HyphenMinus||(LA3_1>=D && LA3_1<=T)||(LA3_1>=RULE_NON_DECIMAL && LA3_1<=RULE_DECIMAL)||(LA3_1>=RULE_ID && LA3_1<=RULE_STRING)) ) {
                    alt3=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2436:2: ( ( rule__STVarDeclaration__Group_4_1_0__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2436:2: ( ( rule__STVarDeclaration__Group_4_1_0__0 ) )
                    // InternalSTAlgorithmParser.g:2437:3: ( rule__STVarDeclaration__Group_4_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2438:3: ( rule__STVarDeclaration__Group_4_1_0__0 )
                    // InternalSTAlgorithmParser.g:2438:4: rule__STVarDeclaration__Group_4_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_4_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2442:2: ( ( rule__STVarDeclaration__Group_4_1_1__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2442:2: ( ( rule__STVarDeclaration__Group_4_1_1__0 ) )
                    // InternalSTAlgorithmParser.g:2443:3: ( rule__STVarDeclaration__Group_4_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2444:3: ( rule__STVarDeclaration__Group_4_1_1__0 )
                    // InternalSTAlgorithmParser.g:2444:4: rule__STVarDeclaration__Group_4_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_4_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Alternatives_4_1"


    // $ANTLR start "rule__STTypeDeclaration__Alternatives_1_1"
    // InternalSTAlgorithmParser.g:2452:1: rule__STTypeDeclaration__Alternatives_1_1 : ( ( ( rule__STTypeDeclaration__Group_1_1_0__0 ) ) | ( ( rule__STTypeDeclaration__Group_1_1_1__0 ) ) );
    public final void rule__STTypeDeclaration__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2456:1: ( ( ( rule__STTypeDeclaration__Group_1_1_0__0 ) ) | ( ( rule__STTypeDeclaration__Group_1_1_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==LeftSquareBracket) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==Asterisk) ) {
                    alt4=2;
                }
                else if ( (LA4_1==LDATE_AND_TIME||LA4_1==DATE_AND_TIME||LA4_1==LTIME_OF_DAY||LA4_1==TIME_OF_DAY||LA4_1==WSTRING||LA4_1==STRING||LA4_1==DWORD||LA4_1==FALSE||(LA4_1>=LDATE && LA4_1<=LWORD)||(LA4_1>=UDINT && LA4_1<=ULINT)||(LA4_1>=USINT && LA4_1<=WCHAR)||(LA4_1>=BOOL && LA4_1<=BYTE)||(LA4_1>=CHAR && LA4_1<=DINT)||(LA4_1>=LINT && LA4_1<=LTOD)||(LA4_1>=REAL && LA4_1<=SINT)||(LA4_1>=THIS && LA4_1<=TRUE)||LA4_1==UINT||(LA4_1>=WORD && LA4_1<=AND)||(LA4_1>=INT && LA4_1<=NOT)||LA4_1==TOD||LA4_1==XOR||LA4_1==DT||(LA4_1>=LD && LA4_1<=LT)||LA4_1==OR||LA4_1==LeftParenthesis||LA4_1==PlusSign||LA4_1==HyphenMinus||(LA4_1>=D && LA4_1<=T)||(LA4_1>=RULE_NON_DECIMAL && LA4_1<=RULE_DECIMAL)||(LA4_1>=RULE_ID && LA4_1<=RULE_STRING)) ) {
                    alt4=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2457:2: ( ( rule__STTypeDeclaration__Group_1_1_0__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2457:2: ( ( rule__STTypeDeclaration__Group_1_1_0__0 ) )
                    // InternalSTAlgorithmParser.g:2458:3: ( rule__STTypeDeclaration__Group_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2459:3: ( rule__STTypeDeclaration__Group_1_1_0__0 )
                    // InternalSTAlgorithmParser.g:2459:4: rule__STTypeDeclaration__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STTypeDeclaration__Group_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2463:2: ( ( rule__STTypeDeclaration__Group_1_1_1__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2463:2: ( ( rule__STTypeDeclaration__Group_1_1_1__0 ) )
                    // InternalSTAlgorithmParser.g:2464:3: ( rule__STTypeDeclaration__Group_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2465:3: ( rule__STTypeDeclaration__Group_1_1_1__0 )
                    // InternalSTAlgorithmParser.g:2465:4: rule__STTypeDeclaration__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STTypeDeclaration__Group_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Alternatives_1_1"


    // $ANTLR start "rule__STInitializerExpression__Alternatives"
    // InternalSTAlgorithmParser.g:2473:1: rule__STInitializerExpression__Alternatives : ( ( ruleSTElementaryInitializerExpression ) | ( ruleSTArrayInitializerExpression ) | ( ruleSTStructInitializerExpression ) );
    public final void rule__STInitializerExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2477:1: ( ( ruleSTElementaryInitializerExpression ) | ( ruleSTArrayInitializerExpression ) | ( ruleSTStructInitializerExpression ) )
            int alt5=3;
            alt5 = dfa5.predict(input);
            switch (alt5) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2478:2: ( ruleSTElementaryInitializerExpression )
                    {
                    // InternalSTAlgorithmParser.g:2478:2: ( ruleSTElementaryInitializerExpression )
                    // InternalSTAlgorithmParser.g:2479:3: ruleSTElementaryInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTInitializerExpressionAccess().getSTElementaryInitializerExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTElementaryInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTInitializerExpressionAccess().getSTElementaryInitializerExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2484:2: ( ruleSTArrayInitializerExpression )
                    {
                    // InternalSTAlgorithmParser.g:2484:2: ( ruleSTArrayInitializerExpression )
                    // InternalSTAlgorithmParser.g:2485:3: ruleSTArrayInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTInitializerExpressionAccess().getSTArrayInitializerExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTArrayInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTInitializerExpressionAccess().getSTArrayInitializerExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2490:2: ( ruleSTStructInitializerExpression )
                    {
                    // InternalSTAlgorithmParser.g:2490:2: ( ruleSTStructInitializerExpression )
                    // InternalSTAlgorithmParser.g:2491:3: ruleSTStructInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTInitializerExpressionAccess().getSTStructInitializerExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTStructInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTInitializerExpressionAccess().getSTStructInitializerExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpression__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives"
    // InternalSTAlgorithmParser.g:2500:1: rule__STStatement__Alternatives : ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) );
    public final void rule__STStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2504:1: ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==LDATE_AND_TIME||LA6_0==DATE_AND_TIME||LA6_0==LTIME_OF_DAY||LA6_0==TIME_OF_DAY||LA6_0==CONTINUE||LA6_0==WSTRING||LA6_0==REPEAT||LA6_0==RETURN||LA6_0==STRING||LA6_0==DWORD||LA6_0==FALSE||(LA6_0>=LDATE && LA6_0<=LWORD)||(LA6_0>=UDINT && LA6_0<=ULINT)||(LA6_0>=USINT && LA6_0<=DINT)||LA6_0==EXIT||(LA6_0>=LINT && LA6_0<=LTOD)||(LA6_0>=REAL && LA6_0<=SINT)||(LA6_0>=THIS && LA6_0<=TRUE)||LA6_0==UINT||(LA6_0>=WORD && LA6_0<=MOD)||LA6_0==TOD||LA6_0==XOR||(LA6_0>=DT && LA6_0<=LT)||LA6_0==OR||LA6_0==LeftParenthesis||LA6_0==PlusSign||LA6_0==HyphenMinus||(LA6_0>=D && LA6_0<=T)||(LA6_0>=RULE_NON_DECIMAL && LA6_0<=RULE_DECIMAL)||(LA6_0>=RULE_ID && LA6_0<=RULE_STRING)) ) {
                alt6=1;
            }
            else if ( (LA6_0==Semicolon) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2505:2: ( ( rule__STStatement__Group_0__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2505:2: ( ( rule__STStatement__Group_0__0 ) )
                    // InternalSTAlgorithmParser.g:2506:3: ( rule__STStatement__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2507:3: ( rule__STStatement__Group_0__0 )
                    // InternalSTAlgorithmParser.g:2507:4: rule__STStatement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2511:2: ( ( rule__STStatement__Group_1__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2511:2: ( ( rule__STStatement__Group_1__0 ) )
                    // InternalSTAlgorithmParser.g:2512:3: ( rule__STStatement__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2513:3: ( rule__STStatement__Group_1__0 )
                    // InternalSTAlgorithmParser.g:2513:4: rule__STStatement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives_0_0"
    // InternalSTAlgorithmParser.g:2521:1: rule__STStatement__Alternatives_0_0 : ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ( ruleSTAssignmentStatement ) ) | ( ruleSTCallStatement ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) | ( ( rule__STStatement__Group_0_0_9__0 ) ) );
    public final void rule__STStatement__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2525:1: ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ( ruleSTAssignmentStatement ) ) | ( ruleSTCallStatement ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) | ( ( rule__STStatement__Group_0_0_9__0 ) ) )
            int alt7=10;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2526:2: ( ruleSTIfStatement )
                    {
                    // InternalSTAlgorithmParser.g:2526:2: ( ruleSTIfStatement )
                    // InternalSTAlgorithmParser.g:2527:3: ruleSTIfStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTIfStatementParserRuleCall_0_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTIfStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTIfStatementParserRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2532:2: ( ruleSTCaseStatement )
                    {
                    // InternalSTAlgorithmParser.g:2532:2: ( ruleSTCaseStatement )
                    // InternalSTAlgorithmParser.g:2533:3: ruleSTCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCaseStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2538:2: ( ruleSTForStatement )
                    {
                    // InternalSTAlgorithmParser.g:2538:2: ( ruleSTForStatement )
                    // InternalSTAlgorithmParser.g:2539:3: ruleSTForStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTForStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2544:2: ( ruleSTWhileStatement )
                    {
                    // InternalSTAlgorithmParser.g:2544:2: ( ruleSTWhileStatement )
                    // InternalSTAlgorithmParser.g:2545:3: ruleSTWhileStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTWhileStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:2550:2: ( ruleSTRepeatStatement )
                    {
                    // InternalSTAlgorithmParser.g:2550:2: ( ruleSTRepeatStatement )
                    // InternalSTAlgorithmParser.g:2551:3: ruleSTRepeatStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTRepeatStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTAlgorithmParser.g:2556:2: ( ( ruleSTAssignmentStatement ) )
                    {
                    // InternalSTAlgorithmParser.g:2556:2: ( ( ruleSTAssignmentStatement ) )
                    // InternalSTAlgorithmParser.g:2557:3: ( ruleSTAssignmentStatement )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }
                    // InternalSTAlgorithmParser.g:2558:3: ( ruleSTAssignmentStatement )
                    // InternalSTAlgorithmParser.g:2558:4: ruleSTAssignmentStatement
                    {
                    pushFollow(FOLLOW_2);
                    ruleSTAssignmentStatement();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTAlgorithmParser.g:2562:2: ( ruleSTCallStatement )
                    {
                    // InternalSTAlgorithmParser.g:2562:2: ( ruleSTCallStatement )
                    // InternalSTAlgorithmParser.g:2563:3: ruleSTCallStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTCallStatementParserRuleCall_0_0_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTCallStatementParserRuleCall_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTAlgorithmParser.g:2568:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2568:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    // InternalSTAlgorithmParser.g:2569:3: ( rule__STStatement__Group_0_0_7__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }
                    // InternalSTAlgorithmParser.g:2570:3: ( rule__STStatement__Group_0_0_7__0 )
                    // InternalSTAlgorithmParser.g:2570:4: rule__STStatement__Group_0_0_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTAlgorithmParser.g:2574:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2574:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    // InternalSTAlgorithmParser.g:2575:3: ( rule__STStatement__Group_0_0_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }
                    // InternalSTAlgorithmParser.g:2576:3: ( rule__STStatement__Group_0_0_8__0 )
                    // InternalSTAlgorithmParser.g:2576:4: rule__STStatement__Group_0_0_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTAlgorithmParser.g:2580:2: ( ( rule__STStatement__Group_0_0_9__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2580:2: ( ( rule__STStatement__Group_0_0_9__0 ) )
                    // InternalSTAlgorithmParser.g:2581:3: ( rule__STStatement__Group_0_0_9__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_9()); 
                    }
                    // InternalSTAlgorithmParser.g:2582:3: ( rule__STStatement__Group_0_0_9__0 )
                    // InternalSTAlgorithmParser.g:2582:4: rule__STStatement__Group_0_0_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives_0_0"


    // $ANTLR start "rule__STCallArgument__Alternatives"
    // InternalSTAlgorithmParser.g:2590:1: rule__STCallArgument__Alternatives : ( ( ruleSTCallUnnamedArgument ) | ( ruleSTCallNamedInputArgument ) | ( ruleSTCallNamedOutputArgument ) );
    public final void rule__STCallArgument__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2594:1: ( ( ruleSTCallUnnamedArgument ) | ( ruleSTCallNamedInputArgument ) | ( ruleSTCallNamedOutputArgument ) )
            int alt8=3;
            switch ( input.LA(1) ) {
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case THIS:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case AND:
            case INT:
            case LDT:
            case MOD:
            case TOD:
            case XOR:
            case DT:
            case LD:
            case LT:
            case OR:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_DECIMAL:
            case RULE_STRING:
                {
                alt8=1;
                }
                break;
            case RULE_ID:
                {
                switch ( input.LA(2) ) {
                case EqualsSignGreaterThanSign:
                    {
                    alt8=3;
                    }
                    break;
                case ColonEqualsSign:
                    {
                    alt8=2;
                    }
                    break;
                case EOF:
                case AND:
                case MOD:
                case XOR:
                case AsteriskAsterisk:
                case FullStopFullStop:
                case LessThanSignEqualsSign:
                case LessThanSignGreaterThanSign:
                case GreaterThanSignEqualsSign:
                case OR:
                case Ampersand:
                case LeftParenthesis:
                case RightParenthesis:
                case Asterisk:
                case PlusSign:
                case Comma:
                case HyphenMinus:
                case FullStop:
                case Solidus:
                case LessThanSign:
                case EqualsSign:
                case GreaterThanSign:
                case LeftSquareBracket:
                    {
                    alt8=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 2, input);

                    throw nvae;
                }

                }
                break;
            case NOT:
                {
                int LA8_3 = input.LA(2);

                if ( (LA8_3==RULE_ID) ) {
                    int LA8_6 = input.LA(3);

                    if ( (LA8_6==EqualsSignGreaterThanSign) ) {
                        alt8=3;
                    }
                    else if ( (LA8_6==EOF||LA8_6==AND||LA8_6==MOD||LA8_6==XOR||(LA8_6>=AsteriskAsterisk && LA8_6<=FullStopFullStop)||(LA8_6>=LessThanSignEqualsSign && LA8_6<=LessThanSignGreaterThanSign)||LA8_6==GreaterThanSignEqualsSign||LA8_6==OR||(LA8_6>=Ampersand && LA8_6<=Solidus)||(LA8_6>=LessThanSign && LA8_6<=GreaterThanSign)||LA8_6==LeftSquareBracket) ) {
                        alt8=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 8, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA8_3==LDATE_AND_TIME||LA8_3==DATE_AND_TIME||LA8_3==LTIME_OF_DAY||LA8_3==TIME_OF_DAY||LA8_3==WSTRING||LA8_3==STRING||LA8_3==DWORD||LA8_3==FALSE||(LA8_3>=LDATE && LA8_3<=LWORD)||(LA8_3>=UDINT && LA8_3<=ULINT)||(LA8_3>=USINT && LA8_3<=WCHAR)||(LA8_3>=BOOL && LA8_3<=BYTE)||(LA8_3>=CHAR && LA8_3<=DINT)||(LA8_3>=LINT && LA8_3<=LTOD)||(LA8_3>=REAL && LA8_3<=SINT)||(LA8_3>=THIS && LA8_3<=TRUE)||LA8_3==UINT||(LA8_3>=WORD && LA8_3<=AND)||(LA8_3>=INT && LA8_3<=NOT)||LA8_3==TOD||LA8_3==XOR||LA8_3==DT||(LA8_3>=LD && LA8_3<=LT)||LA8_3==OR||LA8_3==LeftParenthesis||LA8_3==PlusSign||LA8_3==HyphenMinus||(LA8_3>=D && LA8_3<=T)||(LA8_3>=RULE_NON_DECIMAL && LA8_3<=RULE_DECIMAL)||LA8_3==RULE_STRING) ) {
                    alt8=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2595:2: ( ruleSTCallUnnamedArgument )
                    {
                    // InternalSTAlgorithmParser.g:2595:2: ( ruleSTCallUnnamedArgument )
                    // InternalSTAlgorithmParser.g:2596:3: ruleSTCallUnnamedArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallUnnamedArgumentParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallUnnamedArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallUnnamedArgumentParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2601:2: ( ruleSTCallNamedInputArgument )
                    {
                    // InternalSTAlgorithmParser.g:2601:2: ( ruleSTCallNamedInputArgument )
                    // InternalSTAlgorithmParser.g:2602:3: ruleSTCallNamedInputArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallNamedInputArgumentParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallNamedInputArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallNamedInputArgumentParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2607:2: ( ruleSTCallNamedOutputArgument )
                    {
                    // InternalSTAlgorithmParser.g:2607:2: ( ruleSTCallNamedOutputArgument )
                    // InternalSTAlgorithmParser.g:2608:3: ruleSTCallNamedOutputArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallNamedOutputArgumentParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallNamedOutputArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallNamedOutputArgumentParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallArgument__Alternatives"


    // $ANTLR start "rule__STUnaryExpression__Alternatives"
    // InternalSTAlgorithmParser.g:2617:1: rule__STUnaryExpression__Alternatives : ( ( ( ruleSTAccessExpression ) ) | ( ( rule__STUnaryExpression__Group_1__0 ) ) );
    public final void rule__STUnaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2621:1: ( ( ( ruleSTAccessExpression ) ) | ( ( rule__STUnaryExpression__Group_1__0 ) ) )
            int alt9=2;
            switch ( input.LA(1) ) {
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case THIS:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case AND:
            case INT:
            case LDT:
            case MOD:
            case TOD:
            case XOR:
            case DT:
            case LD:
            case LT:
            case OR:
            case LeftParenthesis:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_DECIMAL:
            case RULE_ID:
            case RULE_STRING:
                {
                alt9=1;
                }
                break;
            case PlusSign:
                {
                int LA9_2 = input.LA(2);

                if ( (synpred21_InternalSTAlgorithmParser()) ) {
                    alt9=1;
                }
                else if ( (true) ) {
                    alt9=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 2, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA9_3 = input.LA(2);

                if ( (synpred21_InternalSTAlgorithmParser()) ) {
                    alt9=1;
                }
                else if ( (true) ) {
                    alt9=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 3, input);

                    throw nvae;
                }
                }
                break;
            case NOT:
                {
                alt9=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2622:2: ( ( ruleSTAccessExpression ) )
                    {
                    // InternalSTAlgorithmParser.g:2622:2: ( ( ruleSTAccessExpression ) )
                    // InternalSTAlgorithmParser.g:2623:3: ( ruleSTAccessExpression )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2624:3: ( ruleSTAccessExpression )
                    // InternalSTAlgorithmParser.g:2624:4: ruleSTAccessExpression
                    {
                    pushFollow(FOLLOW_2);
                    ruleSTAccessExpression();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2628:2: ( ( rule__STUnaryExpression__Group_1__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2628:2: ( ( rule__STUnaryExpression__Group_1__0 ) )
                    // InternalSTAlgorithmParser.g:2629:3: ( rule__STUnaryExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getGroup_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2630:3: ( rule__STUnaryExpression__Group_1__0 )
                    // InternalSTAlgorithmParser.g:2630:4: rule__STUnaryExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STUnaryExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Alternatives"


    // $ANTLR start "rule__STAccessExpression__Alternatives_1"
    // InternalSTAlgorithmParser.g:2638:1: rule__STAccessExpression__Alternatives_1 : ( ( ( rule__STAccessExpression__Group_1_0__0 ) ) | ( ( rule__STAccessExpression__Group_1_1__0 ) ) );
    public final void rule__STAccessExpression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2642:1: ( ( ( rule__STAccessExpression__Group_1_0__0 ) ) | ( ( rule__STAccessExpression__Group_1_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==FullStop) ) {
                alt10=1;
            }
            else if ( (LA10_0==LeftSquareBracket) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2643:2: ( ( rule__STAccessExpression__Group_1_0__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2643:2: ( ( rule__STAccessExpression__Group_1_0__0 ) )
                    // InternalSTAlgorithmParser.g:2644:3: ( rule__STAccessExpression__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2645:3: ( rule__STAccessExpression__Group_1_0__0 )
                    // InternalSTAlgorithmParser.g:2645:4: rule__STAccessExpression__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAccessExpression__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2649:2: ( ( rule__STAccessExpression__Group_1_1__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2649:2: ( ( rule__STAccessExpression__Group_1_1__0 ) )
                    // InternalSTAlgorithmParser.g:2650:3: ( rule__STAccessExpression__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2651:3: ( rule__STAccessExpression__Group_1_1__0 )
                    // InternalSTAlgorithmParser.g:2651:4: rule__STAccessExpression__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAccessExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Alternatives_1"


    // $ANTLR start "rule__STAccessExpression__MemberAlternatives_1_0_2_0"
    // InternalSTAlgorithmParser.g:2659:1: rule__STAccessExpression__MemberAlternatives_1_0_2_0 : ( ( ruleSTFeatureExpression ) | ( ruleSTMultibitPartialExpression ) );
    public final void rule__STAccessExpression__MemberAlternatives_1_0_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2663:1: ( ( ruleSTFeatureExpression ) | ( ruleSTMultibitPartialExpression ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==AND||LA11_0==MOD||LA11_0==XOR||LA11_0==DT||(LA11_0>=LD && LA11_0<=LT)||LA11_0==OR||LA11_0==D||LA11_0==RULE_ID) ) {
                alt11=1;
            }
            else if ( ((LA11_0>=B && LA11_0<=X)||LA11_0==LeftParenthesis||LA11_0==RULE_INT) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2664:2: ( ruleSTFeatureExpression )
                    {
                    // InternalSTAlgorithmParser.g:2664:2: ( ruleSTFeatureExpression )
                    // InternalSTAlgorithmParser.g:2665:3: ruleSTFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getMemberSTFeatureExpressionParserRuleCall_1_0_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getMemberSTFeatureExpressionParserRuleCall_1_0_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2670:2: ( ruleSTMultibitPartialExpression )
                    {
                    // InternalSTAlgorithmParser.g:2670:2: ( ruleSTMultibitPartialExpression )
                    // InternalSTAlgorithmParser.g:2671:3: ruleSTMultibitPartialExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getMemberSTMultibitPartialExpressionParserRuleCall_1_0_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTMultibitPartialExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getMemberSTMultibitPartialExpressionParserRuleCall_1_0_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__MemberAlternatives_1_0_2_0"


    // $ANTLR start "rule__STPrimaryExpression__Alternatives"
    // InternalSTAlgorithmParser.g:2680:1: rule__STPrimaryExpression__Alternatives : ( ( ( rule__STPrimaryExpression__Group_0__0 ) ) | ( ruleSTFeatureExpression ) | ( ruleSTBuiltinFeatureExpression ) | ( ruleSTLiteralExpressions ) );
    public final void rule__STPrimaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2684:1: ( ( ( rule__STPrimaryExpression__Group_0__0 ) ) | ( ruleSTFeatureExpression ) | ( ruleSTBuiltinFeatureExpression ) | ( ruleSTLiteralExpressions ) )
            int alt12=4;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                alt12=1;
                }
                break;
            case AND:
            case MOD:
            case XOR:
            case OR:
            case RULE_ID:
                {
                alt12=2;
                }
                break;
            case LT:
                {
                int LA12_3 = input.LA(2);

                if ( (LA12_3==EOF||LA12_3==END_REPEAT||LA12_3==THEN||LA12_3==AND||LA12_3==MOD||LA12_3==XOR||(LA12_3>=AsteriskAsterisk && LA12_3<=LessThanSignGreaterThanSign)||LA12_3==GreaterThanSignEqualsSign||(LA12_3>=BY && LA12_3<=DO)||LA12_3==OF||(LA12_3>=OR && LA12_3<=TO)||(LA12_3>=Ampersand && LA12_3<=GreaterThanSign)||(LA12_3>=LeftSquareBracket && LA12_3<=RightSquareBracket)) ) {
                    alt12=2;
                }
                else if ( (LA12_3==NumberSign) ) {
                    alt12=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 3, input);

                    throw nvae;
                }
                }
                break;
            case D:
                {
                int LA12_4 = input.LA(2);

                if ( (LA12_4==EOF||LA12_4==END_REPEAT||LA12_4==THEN||LA12_4==AND||LA12_4==MOD||LA12_4==XOR||(LA12_4>=AsteriskAsterisk && LA12_4<=LessThanSignGreaterThanSign)||LA12_4==GreaterThanSignEqualsSign||(LA12_4>=BY && LA12_4<=DO)||LA12_4==OF||(LA12_4>=OR && LA12_4<=TO)||(LA12_4>=Ampersand && LA12_4<=GreaterThanSign)||(LA12_4>=LeftSquareBracket && LA12_4<=RightSquareBracket)) ) {
                    alt12=2;
                }
                else if ( (LA12_4==NumberSign) ) {
                    alt12=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 4, input);

                    throw nvae;
                }
                }
                break;
            case DT:
                {
                int LA12_5 = input.LA(2);

                if ( (LA12_5==EOF||LA12_5==END_REPEAT||LA12_5==THEN||LA12_5==AND||LA12_5==MOD||LA12_5==XOR||(LA12_5>=AsteriskAsterisk && LA12_5<=LessThanSignGreaterThanSign)||LA12_5==GreaterThanSignEqualsSign||(LA12_5>=BY && LA12_5<=DO)||LA12_5==OF||(LA12_5>=OR && LA12_5<=TO)||(LA12_5>=Ampersand && LA12_5<=GreaterThanSign)||(LA12_5>=LeftSquareBracket && LA12_5<=RightSquareBracket)) ) {
                    alt12=2;
                }
                else if ( (LA12_5==NumberSign) ) {
                    alt12=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 5, input);

                    throw nvae;
                }
                }
                break;
            case LD:
                {
                int LA12_6 = input.LA(2);

                if ( (LA12_6==NumberSign) ) {
                    alt12=4;
                }
                else if ( (LA12_6==EOF||LA12_6==END_REPEAT||LA12_6==THEN||LA12_6==AND||LA12_6==MOD||LA12_6==XOR||(LA12_6>=AsteriskAsterisk && LA12_6<=LessThanSignGreaterThanSign)||LA12_6==GreaterThanSignEqualsSign||(LA12_6>=BY && LA12_6<=DO)||LA12_6==OF||(LA12_6>=OR && LA12_6<=TO)||(LA12_6>=Ampersand && LA12_6<=GreaterThanSign)||(LA12_6>=LeftSquareBracket && LA12_6<=RightSquareBracket)) ) {
                    alt12=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 6, input);

                    throw nvae;
                }
                }
                break;
            case THIS:
                {
                alt12=3;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case PlusSign:
            case HyphenMinus:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_DECIMAL:
            case RULE_STRING:
                {
                alt12=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2685:2: ( ( rule__STPrimaryExpression__Group_0__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2685:2: ( ( rule__STPrimaryExpression__Group_0__0 ) )
                    // InternalSTAlgorithmParser.g:2686:3: ( rule__STPrimaryExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getGroup_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2687:3: ( rule__STPrimaryExpression__Group_0__0 )
                    // InternalSTAlgorithmParser.g:2687:4: rule__STPrimaryExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STPrimaryExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2691:2: ( ruleSTFeatureExpression )
                    {
                    // InternalSTAlgorithmParser.g:2691:2: ( ruleSTFeatureExpression )
                    // InternalSTAlgorithmParser.g:2692:3: ruleSTFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTFeatureExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTFeatureExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2697:2: ( ruleSTBuiltinFeatureExpression )
                    {
                    // InternalSTAlgorithmParser.g:2697:2: ( ruleSTBuiltinFeatureExpression )
                    // InternalSTAlgorithmParser.g:2698:3: ruleSTBuiltinFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTBuiltinFeatureExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTBuiltinFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTBuiltinFeatureExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2703:2: ( ruleSTLiteralExpressions )
                    {
                    // InternalSTAlgorithmParser.g:2703:2: ( ruleSTLiteralExpressions )
                    // InternalSTAlgorithmParser.g:2704:3: ruleSTLiteralExpressions
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTLiteralExpressionsParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTLiteralExpressions();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTLiteralExpressionsParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Alternatives"


    // $ANTLR start "rule__STFeatureName__Alternatives"
    // InternalSTAlgorithmParser.g:2713:1: rule__STFeatureName__Alternatives : ( ( RULE_ID ) | ( LT ) | ( AND ) | ( OR ) | ( XOR ) | ( MOD ) | ( D ) | ( DT ) | ( LD ) );
    public final void rule__STFeatureName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2717:1: ( ( RULE_ID ) | ( LT ) | ( AND ) | ( OR ) | ( XOR ) | ( MOD ) | ( D ) | ( DT ) | ( LD ) )
            int alt13=9;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt13=1;
                }
                break;
            case LT:
                {
                alt13=2;
                }
                break;
            case AND:
                {
                alt13=3;
                }
                break;
            case OR:
                {
                alt13=4;
                }
                break;
            case XOR:
                {
                alt13=5;
                }
                break;
            case MOD:
                {
                alt13=6;
                }
                break;
            case D:
                {
                alt13=7;
                }
                break;
            case DT:
                {
                alt13=8;
                }
                break;
            case LD:
                {
                alt13=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2718:2: ( RULE_ID )
                    {
                    // InternalSTAlgorithmParser.g:2718:2: ( RULE_ID )
                    // InternalSTAlgorithmParser.g:2719:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2724:2: ( LT )
                    {
                    // InternalSTAlgorithmParser.g:2724:2: ( LT )
                    // InternalSTAlgorithmParser.g:2725:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getLTKeyword_1()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getLTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2730:2: ( AND )
                    {
                    // InternalSTAlgorithmParser.g:2730:2: ( AND )
                    // InternalSTAlgorithmParser.g:2731:3: AND
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getANDKeyword_2()); 
                    }
                    match(input,AND,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getANDKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2736:2: ( OR )
                    {
                    // InternalSTAlgorithmParser.g:2736:2: ( OR )
                    // InternalSTAlgorithmParser.g:2737:3: OR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getORKeyword_3()); 
                    }
                    match(input,OR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getORKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:2742:2: ( XOR )
                    {
                    // InternalSTAlgorithmParser.g:2742:2: ( XOR )
                    // InternalSTAlgorithmParser.g:2743:3: XOR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getXORKeyword_4()); 
                    }
                    match(input,XOR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getXORKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTAlgorithmParser.g:2748:2: ( MOD )
                    {
                    // InternalSTAlgorithmParser.g:2748:2: ( MOD )
                    // InternalSTAlgorithmParser.g:2749:3: MOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getMODKeyword_5()); 
                    }
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getMODKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTAlgorithmParser.g:2754:2: ( D )
                    {
                    // InternalSTAlgorithmParser.g:2754:2: ( D )
                    // InternalSTAlgorithmParser.g:2755:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getDKeyword_6()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getDKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTAlgorithmParser.g:2760:2: ( DT )
                    {
                    // InternalSTAlgorithmParser.g:2760:2: ( DT )
                    // InternalSTAlgorithmParser.g:2761:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getDTKeyword_7()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getDTKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTAlgorithmParser.g:2766:2: ( LD )
                    {
                    // InternalSTAlgorithmParser.g:2766:2: ( LD )
                    // InternalSTAlgorithmParser.g:2767:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTFeatureNameAccess().getLDKeyword_8()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTFeatureNameAccess().getLDKeyword_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureName__Alternatives"


    // $ANTLR start "rule__STMultibitPartialExpression__Alternatives_2"
    // InternalSTAlgorithmParser.g:2776:1: rule__STMultibitPartialExpression__Alternatives_2 : ( ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) ) | ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) ) );
    public final void rule__STMultibitPartialExpression__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2780:1: ( ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) ) | ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_INT) ) {
                alt14=1;
            }
            else if ( (LA14_0==LeftParenthesis) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2781:2: ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2781:2: ( ( rule__STMultibitPartialExpression__IndexAssignment_2_0 ) )
                    // InternalSTAlgorithmParser.g:2782:3: ( rule__STMultibitPartialExpression__IndexAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexAssignment_2_0()); 
                    }
                    // InternalSTAlgorithmParser.g:2783:3: ( rule__STMultibitPartialExpression__IndexAssignment_2_0 )
                    // InternalSTAlgorithmParser.g:2783:4: rule__STMultibitPartialExpression__IndexAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__IndexAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2787:2: ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) )
                    {
                    // InternalSTAlgorithmParser.g:2787:2: ( ( rule__STMultibitPartialExpression__Group_2_1__0 ) )
                    // InternalSTAlgorithmParser.g:2788:3: ( rule__STMultibitPartialExpression__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup_2_1()); 
                    }
                    // InternalSTAlgorithmParser.g:2789:3: ( rule__STMultibitPartialExpression__Group_2_1__0 )
                    // InternalSTAlgorithmParser.g:2789:4: rule__STMultibitPartialExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Alternatives_2"


    // $ANTLR start "rule__STLiteralExpressions__Alternatives"
    // InternalSTAlgorithmParser.g:2797:1: rule__STLiteralExpressions__Alternatives : ( ( ruleSTNumericLiteral ) | ( ruleSTDateLiteral ) | ( ruleSTTimeLiteral ) | ( ruleSTTimeOfDayLiteral ) | ( ruleSTDateAndTimeLiteral ) | ( ruleSTStringLiteral ) );
    public final void rule__STLiteralExpressions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2801:1: ( ( ruleSTNumericLiteral ) | ( ruleSTDateLiteral ) | ( ruleSTTimeLiteral ) | ( ruleSTTimeOfDayLiteral ) | ( ruleSTDateAndTimeLiteral ) | ( ruleSTStringLiteral ) )
            int alt15=6;
            switch ( input.LA(1) ) {
            case DWORD:
            case FALSE:
            case LREAL:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case BOOL:
            case BYTE:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case PlusSign:
            case HyphenMinus:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_DECIMAL:
                {
                alt15=1;
                }
                break;
            case LDATE:
            case DATE:
            case LD:
            case D:
                {
                alt15=2;
                }
                break;
            case LTIME:
            case TIME:
            case LT:
            case T:
                {
                alt15=3;
                }
                break;
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt15=4;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt15=5;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
            case RULE_STRING:
                {
                alt15=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2802:2: ( ruleSTNumericLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2802:2: ( ruleSTNumericLiteral )
                    // InternalSTAlgorithmParser.g:2803:3: ruleSTNumericLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTNumericLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2808:2: ( ruleSTDateLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2808:2: ( ruleSTDateLiteral )
                    // InternalSTAlgorithmParser.g:2809:3: ruleSTDateLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2814:2: ( ruleSTTimeLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2814:2: ( ruleSTTimeLiteral )
                    // InternalSTAlgorithmParser.g:2815:3: ruleSTTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2820:2: ( ruleSTTimeOfDayLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2820:2: ( ruleSTTimeOfDayLiteral )
                    // InternalSTAlgorithmParser.g:2821:3: ruleSTTimeOfDayLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeOfDayLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:2826:2: ( ruleSTDateAndTimeLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2826:2: ( ruleSTDateAndTimeLiteral )
                    // InternalSTAlgorithmParser.g:2827:3: ruleSTDateAndTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateAndTimeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTAlgorithmParser.g:2832:2: ( ruleSTStringLiteral )
                    {
                    // InternalSTAlgorithmParser.g:2832:2: ( ruleSTStringLiteral )
                    // InternalSTAlgorithmParser.g:2833:3: ruleSTStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTStringLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Alternatives"


    // $ANTLR start "rule__STNumericLiteralType__Alternatives"
    // InternalSTAlgorithmParser.g:2842:1: rule__STNumericLiteralType__Alternatives : ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) );
    public final void rule__STNumericLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2846:1: ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==DWORD||LA16_0==LWORD||(LA16_0>=BOOL && LA16_0<=BYTE)||LA16_0==WORD) ) {
                alt16=1;
            }
            else if ( (LA16_0==LREAL||(LA16_0>=UDINT && LA16_0<=ULINT)||LA16_0==USINT||LA16_0==DINT||LA16_0==LINT||(LA16_0>=REAL && LA16_0<=SINT)||LA16_0==UINT||LA16_0==INT) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2847:2: ( ruleSTAnyBitType )
                    {
                    // InternalSTAlgorithmParser.g:2847:2: ( ruleSTAnyBitType )
                    // InternalSTAlgorithmParser.g:2848:3: ruleSTAnyBitType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBitType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2853:2: ( ruleSTAnyNumType )
                    {
                    // InternalSTAlgorithmParser.g:2853:2: ( ruleSTAnyNumType )
                    // InternalSTAlgorithmParser.g:2854:3: ruleSTAnyNumType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyNumType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteralType__Alternatives"


    // $ANTLR start "rule__STDateLiteralType__Alternatives"
    // InternalSTAlgorithmParser.g:2863:1: rule__STDateLiteralType__Alternatives : ( ( ruleSTDateType ) | ( D ) | ( LD ) );
    public final void rule__STDateLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2867:1: ( ( ruleSTDateType ) | ( D ) | ( LD ) )
            int alt17=3;
            switch ( input.LA(1) ) {
            case LDATE:
            case DATE:
                {
                alt17=1;
                }
                break;
            case D:
                {
                alt17=2;
                }
                break;
            case LD:
                {
                alt17=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2868:2: ( ruleSTDateType )
                    {
                    // InternalSTAlgorithmParser.g:2868:2: ( ruleSTDateType )
                    // InternalSTAlgorithmParser.g:2869:3: ruleSTDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2874:2: ( D )
                    {
                    // InternalSTAlgorithmParser.g:2874:2: ( D )
                    // InternalSTAlgorithmParser.g:2875:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getDKeyword_1()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getDKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2880:2: ( LD )
                    {
                    // InternalSTAlgorithmParser.g:2880:2: ( LD )
                    // InternalSTAlgorithmParser.g:2881:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getLDKeyword_2()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getLDKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteralType__Alternatives"


    // $ANTLR start "rule__STTimeLiteralType__Alternatives"
    // InternalSTAlgorithmParser.g:2890:1: rule__STTimeLiteralType__Alternatives : ( ( ruleSTAnyDurationType ) | ( T ) | ( LT ) );
    public final void rule__STTimeLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2894:1: ( ( ruleSTAnyDurationType ) | ( T ) | ( LT ) )
            int alt18=3;
            switch ( input.LA(1) ) {
            case LTIME:
            case TIME:
                {
                alt18=1;
                }
                break;
            case T:
                {
                alt18=2;
                }
                break;
            case LT:
                {
                alt18=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2895:2: ( ruleSTAnyDurationType )
                    {
                    // InternalSTAlgorithmParser.g:2895:2: ( ruleSTAnyDurationType )
                    // InternalSTAlgorithmParser.g:2896:3: ruleSTAnyDurationType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getSTAnyDurationTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDurationType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getSTAnyDurationTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2901:2: ( T )
                    {
                    // InternalSTAlgorithmParser.g:2901:2: ( T )
                    // InternalSTAlgorithmParser.g:2902:3: T
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getTKeyword_1()); 
                    }
                    match(input,T,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2907:2: ( LT )
                    {
                    // InternalSTAlgorithmParser.g:2907:2: ( LT )
                    // InternalSTAlgorithmParser.g:2908:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getLTKeyword_2()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getLTKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteralType__Alternatives"


    // $ANTLR start "rule__STAnyType__Alternatives"
    // InternalSTAlgorithmParser.g:2917:1: rule__STAnyType__Alternatives : ( ( RULE_ID ) | ( ruleSTAnyBuiltinType ) );
    public final void rule__STAnyType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2921:1: ( ( RULE_ID ) | ( ruleSTAnyBuiltinType ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_ID) ) {
                alt19=1;
            }
            else if ( (LA19_0==LDATE_AND_TIME||LA19_0==DATE_AND_TIME||LA19_0==LTIME_OF_DAY||LA19_0==TIME_OF_DAY||LA19_0==WSTRING||LA19_0==STRING||LA19_0==DWORD||(LA19_0>=LDATE && LA19_0<=LWORD)||(LA19_0>=UDINT && LA19_0<=ULINT)||(LA19_0>=USINT && LA19_0<=WCHAR)||(LA19_0>=BOOL && LA19_0<=BYTE)||(LA19_0>=CHAR && LA19_0<=DINT)||(LA19_0>=LINT && LA19_0<=LTOD)||(LA19_0>=REAL && LA19_0<=SINT)||LA19_0==TIME||LA19_0==UINT||LA19_0==WORD||(LA19_0>=INT && LA19_0<=LDT)||LA19_0==TOD||LA19_0==DT) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2922:2: ( RULE_ID )
                    {
                    // InternalSTAlgorithmParser.g:2922:2: ( RULE_ID )
                    // InternalSTAlgorithmParser.g:2923:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyTypeAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyTypeAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2928:2: ( ruleSTAnyBuiltinType )
                    {
                    // InternalSTAlgorithmParser.g:2928:2: ( ruleSTAnyBuiltinType )
                    // InternalSTAlgorithmParser.g:2929:3: ruleSTAnyBuiltinType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyTypeAccess().getSTAnyBuiltinTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBuiltinType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyTypeAccess().getSTAnyBuiltinTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyType__Alternatives"


    // $ANTLR start "rule__STAnyBuiltinType__Alternatives"
    // InternalSTAlgorithmParser.g:2938:1: rule__STAnyBuiltinType__Alternatives : ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) | ( ruleSTAnyDurationType ) | ( ruleSTAnyDateType ) | ( ruleSTAnyCharsType ) );
    public final void rule__STAnyBuiltinType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2942:1: ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) | ( ruleSTAnyDurationType ) | ( ruleSTAnyDateType ) | ( ruleSTAnyCharsType ) )
            int alt20=5;
            switch ( input.LA(1) ) {
            case DWORD:
            case LWORD:
            case BOOL:
            case BYTE:
            case WORD:
                {
                alt20=1;
                }
                break;
            case LREAL:
            case UDINT:
            case ULINT:
            case USINT:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case UINT:
            case INT:
                {
                alt20=2;
                }
                break;
            case LTIME:
            case TIME:
                {
                alt20=3;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LDATE:
            case DATE:
            case LTOD:
            case LDT:
            case TOD:
            case DT:
                {
                alt20=4;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
                {
                alt20=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2943:2: ( ruleSTAnyBitType )
                    {
                    // InternalSTAlgorithmParser.g:2943:2: ( ruleSTAnyBitType )
                    // InternalSTAlgorithmParser.g:2944:3: ruleSTAnyBitType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBitType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2949:2: ( ruleSTAnyNumType )
                    {
                    // InternalSTAlgorithmParser.g:2949:2: ( ruleSTAnyNumType )
                    // InternalSTAlgorithmParser.g:2950:3: ruleSTAnyNumType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyNumType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2955:2: ( ruleSTAnyDurationType )
                    {
                    // InternalSTAlgorithmParser.g:2955:2: ( ruleSTAnyDurationType )
                    // InternalSTAlgorithmParser.g:2956:3: ruleSTAnyDurationType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDurationTypeParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDurationType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDurationTypeParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:2961:2: ( ruleSTAnyDateType )
                    {
                    // InternalSTAlgorithmParser.g:2961:2: ( ruleSTAnyDateType )
                    // InternalSTAlgorithmParser.g:2962:3: ruleSTAnyDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDateTypeParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDateTypeParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:2967:2: ( ruleSTAnyCharsType )
                    {
                    // InternalSTAlgorithmParser.g:2967:2: ( ruleSTAnyCharsType )
                    // InternalSTAlgorithmParser.g:2968:3: ruleSTAnyCharsType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyCharsTypeParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyCharsType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyCharsTypeParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyBuiltinType__Alternatives"


    // $ANTLR start "rule__STAnyBitType__Alternatives"
    // InternalSTAlgorithmParser.g:2977:1: rule__STAnyBitType__Alternatives : ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) );
    public final void rule__STAnyBitType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:2981:1: ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) )
            int alt21=5;
            switch ( input.LA(1) ) {
            case BOOL:
                {
                alt21=1;
                }
                break;
            case BYTE:
                {
                alt21=2;
                }
                break;
            case WORD:
                {
                alt21=3;
                }
                break;
            case DWORD:
                {
                alt21=4;
                }
                break;
            case LWORD:
                {
                alt21=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalSTAlgorithmParser.g:2982:2: ( BOOL )
                    {
                    // InternalSTAlgorithmParser.g:2982:2: ( BOOL )
                    // InternalSTAlgorithmParser.g:2983:3: BOOL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getBOOLKeyword_0()); 
                    }
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getBOOLKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:2988:2: ( BYTE )
                    {
                    // InternalSTAlgorithmParser.g:2988:2: ( BYTE )
                    // InternalSTAlgorithmParser.g:2989:3: BYTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getBYTEKeyword_1()); 
                    }
                    match(input,BYTE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getBYTEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:2994:2: ( WORD )
                    {
                    // InternalSTAlgorithmParser.g:2994:2: ( WORD )
                    // InternalSTAlgorithmParser.g:2995:3: WORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getWORDKeyword_2()); 
                    }
                    match(input,WORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getWORDKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:3000:2: ( DWORD )
                    {
                    // InternalSTAlgorithmParser.g:3000:2: ( DWORD )
                    // InternalSTAlgorithmParser.g:3001:3: DWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getDWORDKeyword_3()); 
                    }
                    match(input,DWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getDWORDKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:3006:2: ( LWORD )
                    {
                    // InternalSTAlgorithmParser.g:3006:2: ( LWORD )
                    // InternalSTAlgorithmParser.g:3007:3: LWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getLWORDKeyword_4()); 
                    }
                    match(input,LWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getLWORDKeyword_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyBitType__Alternatives"


    // $ANTLR start "rule__STAnyNumType__Alternatives"
    // InternalSTAlgorithmParser.g:3016:1: rule__STAnyNumType__Alternatives : ( ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) );
    public final void rule__STAnyNumType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3020:1: ( ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) )
            int alt22=10;
            switch ( input.LA(1) ) {
            case SINT:
                {
                alt22=1;
                }
                break;
            case INT:
                {
                alt22=2;
                }
                break;
            case DINT:
                {
                alt22=3;
                }
                break;
            case LINT:
                {
                alt22=4;
                }
                break;
            case USINT:
                {
                alt22=5;
                }
                break;
            case UINT:
                {
                alt22=6;
                }
                break;
            case UDINT:
                {
                alt22=7;
                }
                break;
            case ULINT:
                {
                alt22=8;
                }
                break;
            case REAL:
                {
                alt22=9;
                }
                break;
            case LREAL:
                {
                alt22=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3021:2: ( SINT )
                    {
                    // InternalSTAlgorithmParser.g:3021:2: ( SINT )
                    // InternalSTAlgorithmParser.g:3022:3: SINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getSINTKeyword_0()); 
                    }
                    match(input,SINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getSINTKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3027:2: ( INT )
                    {
                    // InternalSTAlgorithmParser.g:3027:2: ( INT )
                    // InternalSTAlgorithmParser.g:3028:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getINTKeyword_1()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getINTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:3033:2: ( DINT )
                    {
                    // InternalSTAlgorithmParser.g:3033:2: ( DINT )
                    // InternalSTAlgorithmParser.g:3034:3: DINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getDINTKeyword_2()); 
                    }
                    match(input,DINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getDINTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:3039:2: ( LINT )
                    {
                    // InternalSTAlgorithmParser.g:3039:2: ( LINT )
                    // InternalSTAlgorithmParser.g:3040:3: LINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getLINTKeyword_3()); 
                    }
                    match(input,LINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getLINTKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:3045:2: ( USINT )
                    {
                    // InternalSTAlgorithmParser.g:3045:2: ( USINT )
                    // InternalSTAlgorithmParser.g:3046:3: USINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUSINTKeyword_4()); 
                    }
                    match(input,USINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUSINTKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTAlgorithmParser.g:3051:2: ( UINT )
                    {
                    // InternalSTAlgorithmParser.g:3051:2: ( UINT )
                    // InternalSTAlgorithmParser.g:3052:3: UINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUINTKeyword_5()); 
                    }
                    match(input,UINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUINTKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTAlgorithmParser.g:3057:2: ( UDINT )
                    {
                    // InternalSTAlgorithmParser.g:3057:2: ( UDINT )
                    // InternalSTAlgorithmParser.g:3058:3: UDINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUDINTKeyword_6()); 
                    }
                    match(input,UDINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUDINTKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTAlgorithmParser.g:3063:2: ( ULINT )
                    {
                    // InternalSTAlgorithmParser.g:3063:2: ( ULINT )
                    // InternalSTAlgorithmParser.g:3064:3: ULINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getULINTKeyword_7()); 
                    }
                    match(input,ULINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getULINTKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTAlgorithmParser.g:3069:2: ( REAL )
                    {
                    // InternalSTAlgorithmParser.g:3069:2: ( REAL )
                    // InternalSTAlgorithmParser.g:3070:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getREALKeyword_8()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getREALKeyword_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTAlgorithmParser.g:3075:2: ( LREAL )
                    {
                    // InternalSTAlgorithmParser.g:3075:2: ( LREAL )
                    // InternalSTAlgorithmParser.g:3076:3: LREAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getLREALKeyword_9()); 
                    }
                    match(input,LREAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getLREALKeyword_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyNumType__Alternatives"


    // $ANTLR start "rule__STAnyDurationType__Alternatives"
    // InternalSTAlgorithmParser.g:3085:1: rule__STAnyDurationType__Alternatives : ( ( TIME ) | ( LTIME ) );
    public final void rule__STAnyDurationType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3089:1: ( ( TIME ) | ( LTIME ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==TIME) ) {
                alt23=1;
            }
            else if ( (LA23_0==LTIME) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3090:2: ( TIME )
                    {
                    // InternalSTAlgorithmParser.g:3090:2: ( TIME )
                    // InternalSTAlgorithmParser.g:3091:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDurationTypeAccess().getTIMEKeyword_0()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDurationTypeAccess().getTIMEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3096:2: ( LTIME )
                    {
                    // InternalSTAlgorithmParser.g:3096:2: ( LTIME )
                    // InternalSTAlgorithmParser.g:3097:3: LTIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDurationTypeAccess().getLTIMEKeyword_1()); 
                    }
                    match(input,LTIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDurationTypeAccess().getLTIMEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyDurationType__Alternatives"


    // $ANTLR start "rule__STAnyDateType__Alternatives"
    // InternalSTAlgorithmParser.g:3106:1: rule__STAnyDateType__Alternatives : ( ( ruleSTDateType ) | ( ruleSTTimeOfDayType ) | ( ruleSTDateAndTimeType ) );
    public final void rule__STAnyDateType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3110:1: ( ( ruleSTDateType ) | ( ruleSTTimeOfDayType ) | ( ruleSTDateAndTimeType ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case LDATE:
            case DATE:
                {
                alt24=1;
                }
                break;
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt24=2;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3111:2: ( ruleSTDateType )
                    {
                    // InternalSTAlgorithmParser.g:3111:2: ( ruleSTDateType )
                    // InternalSTAlgorithmParser.g:3112:3: ruleSTDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3117:2: ( ruleSTTimeOfDayType )
                    {
                    // InternalSTAlgorithmParser.g:3117:2: ( ruleSTTimeOfDayType )
                    // InternalSTAlgorithmParser.g:3118:3: ruleSTTimeOfDayType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTTimeOfDayTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeOfDayType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTTimeOfDayTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:3123:2: ( ruleSTDateAndTimeType )
                    {
                    // InternalSTAlgorithmParser.g:3123:2: ( ruleSTDateAndTimeType )
                    // InternalSTAlgorithmParser.g:3124:3: ruleSTDateAndTimeType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTDateAndTimeTypeParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateAndTimeType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTDateAndTimeTypeParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyDateType__Alternatives"


    // $ANTLR start "rule__STDateType__Alternatives"
    // InternalSTAlgorithmParser.g:3133:1: rule__STDateType__Alternatives : ( ( DATE ) | ( LDATE ) );
    public final void rule__STDateType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3137:1: ( ( DATE ) | ( LDATE ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==DATE) ) {
                alt25=1;
            }
            else if ( (LA25_0==LDATE) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3138:2: ( DATE )
                    {
                    // InternalSTAlgorithmParser.g:3138:2: ( DATE )
                    // InternalSTAlgorithmParser.g:3139:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateTypeAccess().getDATEKeyword_0()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateTypeAccess().getDATEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3144:2: ( LDATE )
                    {
                    // InternalSTAlgorithmParser.g:3144:2: ( LDATE )
                    // InternalSTAlgorithmParser.g:3145:3: LDATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateTypeAccess().getLDATEKeyword_1()); 
                    }
                    match(input,LDATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateTypeAccess().getLDATEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateType__Alternatives"


    // $ANTLR start "rule__STTimeOfDayType__Alternatives"
    // InternalSTAlgorithmParser.g:3154:1: rule__STTimeOfDayType__Alternatives : ( ( TIME_OF_DAY ) | ( LTIME_OF_DAY ) | ( TOD ) | ( LTOD ) );
    public final void rule__STTimeOfDayType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3158:1: ( ( TIME_OF_DAY ) | ( LTIME_OF_DAY ) | ( TOD ) | ( LTOD ) )
            int alt26=4;
            switch ( input.LA(1) ) {
            case TIME_OF_DAY:
                {
                alt26=1;
                }
                break;
            case LTIME_OF_DAY:
                {
                alt26=2;
                }
                break;
            case TOD:
                {
                alt26=3;
                }
                break;
            case LTOD:
                {
                alt26=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3159:2: ( TIME_OF_DAY )
                    {
                    // InternalSTAlgorithmParser.g:3159:2: ( TIME_OF_DAY )
                    // InternalSTAlgorithmParser.g:3160:3: TIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getTIME_OF_DAYKeyword_0()); 
                    }
                    match(input,TIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getTIME_OF_DAYKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3165:2: ( LTIME_OF_DAY )
                    {
                    // InternalSTAlgorithmParser.g:3165:2: ( LTIME_OF_DAY )
                    // InternalSTAlgorithmParser.g:3166:3: LTIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getLTIME_OF_DAYKeyword_1()); 
                    }
                    match(input,LTIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getLTIME_OF_DAYKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:3171:2: ( TOD )
                    {
                    // InternalSTAlgorithmParser.g:3171:2: ( TOD )
                    // InternalSTAlgorithmParser.g:3172:3: TOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getTODKeyword_2()); 
                    }
                    match(input,TOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getTODKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:3177:2: ( LTOD )
                    {
                    // InternalSTAlgorithmParser.g:3177:2: ( LTOD )
                    // InternalSTAlgorithmParser.g:3178:3: LTOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getLTODKeyword_3()); 
                    }
                    match(input,LTOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getLTODKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayType__Alternatives"


    // $ANTLR start "rule__STDateAndTimeType__Alternatives"
    // InternalSTAlgorithmParser.g:3187:1: rule__STDateAndTimeType__Alternatives : ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) );
    public final void rule__STDateAndTimeType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3191:1: ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) )
            int alt27=4;
            switch ( input.LA(1) ) {
            case DATE_AND_TIME:
                {
                alt27=1;
                }
                break;
            case LDATE_AND_TIME:
                {
                alt27=2;
                }
                break;
            case DT:
                {
                alt27=3;
                }
                break;
            case LDT:
                {
                alt27=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3192:2: ( DATE_AND_TIME )
                    {
                    // InternalSTAlgorithmParser.g:3192:2: ( DATE_AND_TIME )
                    // InternalSTAlgorithmParser.g:3193:3: DATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getDATE_AND_TIMEKeyword_0()); 
                    }
                    match(input,DATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getDATE_AND_TIMEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3198:2: ( LDATE_AND_TIME )
                    {
                    // InternalSTAlgorithmParser.g:3198:2: ( LDATE_AND_TIME )
                    // InternalSTAlgorithmParser.g:3199:3: LDATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getLDATE_AND_TIMEKeyword_1()); 
                    }
                    match(input,LDATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getLDATE_AND_TIMEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:3204:2: ( DT )
                    {
                    // InternalSTAlgorithmParser.g:3204:2: ( DT )
                    // InternalSTAlgorithmParser.g:3205:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getDTKeyword_2()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getDTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:3210:2: ( LDT )
                    {
                    // InternalSTAlgorithmParser.g:3210:2: ( LDT )
                    // InternalSTAlgorithmParser.g:3211:3: LDT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getLDTKeyword_3()); 
                    }
                    match(input,LDT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getLDTKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeType__Alternatives"


    // $ANTLR start "rule__STAnyCharsType__Alternatives"
    // InternalSTAlgorithmParser.g:3220:1: rule__STAnyCharsType__Alternatives : ( ( STRING ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) );
    public final void rule__STAnyCharsType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3224:1: ( ( STRING ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) )
            int alt28=4;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt28=1;
                }
                break;
            case WSTRING:
                {
                alt28=2;
                }
                break;
            case CHAR:
                {
                alt28=3;
                }
                break;
            case WCHAR:
                {
                alt28=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3225:2: ( STRING )
                    {
                    // InternalSTAlgorithmParser.g:3225:2: ( STRING )
                    // InternalSTAlgorithmParser.g:3226:3: STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getSTRINGKeyword_0()); 
                    }
                    match(input,STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getSTRINGKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3231:2: ( WSTRING )
                    {
                    // InternalSTAlgorithmParser.g:3231:2: ( WSTRING )
                    // InternalSTAlgorithmParser.g:3232:3: WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getWSTRINGKeyword_1()); 
                    }
                    match(input,WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getWSTRINGKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:3237:2: ( CHAR )
                    {
                    // InternalSTAlgorithmParser.g:3237:2: ( CHAR )
                    // InternalSTAlgorithmParser.g:3238:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getCHARKeyword_2()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getCHARKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:3243:2: ( WCHAR )
                    {
                    // InternalSTAlgorithmParser.g:3243:2: ( WCHAR )
                    // InternalSTAlgorithmParser.g:3244:3: WCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getWCHARKeyword_3()); 
                    }
                    match(input,WCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getWCHARKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyCharsType__Alternatives"


    // $ANTLR start "rule__Numeric__Alternatives"
    // InternalSTAlgorithmParser.g:3253:1: rule__Numeric__Alternatives : ( ( TRUE ) | ( FALSE ) | ( ruleNumber ) | ( RULE_NON_DECIMAL ) );
    public final void rule__Numeric__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3257:1: ( ( TRUE ) | ( FALSE ) | ( ruleNumber ) | ( RULE_NON_DECIMAL ) )
            int alt29=4;
            switch ( input.LA(1) ) {
            case TRUE:
                {
                alt29=1;
                }
                break;
            case FALSE:
                {
                alt29=2;
                }
                break;
            case PlusSign:
            case HyphenMinus:
            case RULE_INT:
            case RULE_DECIMAL:
                {
                alt29=3;
                }
                break;
            case RULE_NON_DECIMAL:
                {
                alt29=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3258:2: ( TRUE )
                    {
                    // InternalSTAlgorithmParser.g:3258:2: ( TRUE )
                    // InternalSTAlgorithmParser.g:3259:3: TRUE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumericAccess().getTRUEKeyword_0()); 
                    }
                    match(input,TRUE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumericAccess().getTRUEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3264:2: ( FALSE )
                    {
                    // InternalSTAlgorithmParser.g:3264:2: ( FALSE )
                    // InternalSTAlgorithmParser.g:3265:3: FALSE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumericAccess().getFALSEKeyword_1()); 
                    }
                    match(input,FALSE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumericAccess().getFALSEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:3270:2: ( ruleNumber )
                    {
                    // InternalSTAlgorithmParser.g:3270:2: ( ruleNumber )
                    // InternalSTAlgorithmParser.g:3271:3: ruleNumber
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumericAccess().getNumberParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleNumber();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumericAccess().getNumberParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:3276:2: ( RULE_NON_DECIMAL )
                    {
                    // InternalSTAlgorithmParser.g:3276:2: ( RULE_NON_DECIMAL )
                    // InternalSTAlgorithmParser.g:3277:3: RULE_NON_DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumericAccess().getNON_DECIMALTerminalRuleCall_3()); 
                    }
                    match(input,RULE_NON_DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumericAccess().getNON_DECIMALTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Numeric__Alternatives"


    // $ANTLR start "rule__Number__Alternatives_0"
    // InternalSTAlgorithmParser.g:3286:1: rule__Number__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__Number__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3290:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==PlusSign) ) {
                alt30=1;
            }
            else if ( (LA30_0==HyphenMinus) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3291:2: ( PlusSign )
                    {
                    // InternalSTAlgorithmParser.g:3291:2: ( PlusSign )
                    // InternalSTAlgorithmParser.g:3292:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3297:2: ( HyphenMinus )
                    {
                    // InternalSTAlgorithmParser.g:3297:2: ( HyphenMinus )
                    // InternalSTAlgorithmParser.g:3298:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_0"


    // $ANTLR start "rule__Number__Alternatives_1"
    // InternalSTAlgorithmParser.g:3307:1: rule__Number__Alternatives_1 : ( ( RULE_INT ) | ( RULE_DECIMAL ) );
    public final void rule__Number__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3311:1: ( ( RULE_INT ) | ( RULE_DECIMAL ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_INT) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_DECIMAL) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3312:2: ( RULE_INT )
                    {
                    // InternalSTAlgorithmParser.g:3312:2: ( RULE_INT )
                    // InternalSTAlgorithmParser.g:3313:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3318:2: ( RULE_DECIMAL )
                    {
                    // InternalSTAlgorithmParser.g:3318:2: ( RULE_DECIMAL )
                    // InternalSTAlgorithmParser.g:3319:3: RULE_DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_1"


    // $ANTLR start "rule__Number__Alternatives_2_1"
    // InternalSTAlgorithmParser.g:3328:1: rule__Number__Alternatives_2_1 : ( ( RULE_INT ) | ( RULE_DECIMAL ) );
    public final void rule__Number__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3332:1: ( ( RULE_INT ) | ( RULE_DECIMAL ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_INT) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_DECIMAL) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3333:2: ( RULE_INT )
                    {
                    // InternalSTAlgorithmParser.g:3333:2: ( RULE_INT )
                    // InternalSTAlgorithmParser.g:3334:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_2_1_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3339:2: ( RULE_DECIMAL )
                    {
                    // InternalSTAlgorithmParser.g:3339:2: ( RULE_DECIMAL )
                    // InternalSTAlgorithmParser.g:3340:3: RULE_DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_2_1_1()); 
                    }
                    match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_2_1"


    // $ANTLR start "rule__Time__Alternatives_0"
    // InternalSTAlgorithmParser.g:3349:1: rule__Time__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__Time__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3353:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==PlusSign) ) {
                alt33=1;
            }
            else if ( (LA33_0==HyphenMinus) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3354:2: ( PlusSign )
                    {
                    // InternalSTAlgorithmParser.g:3354:2: ( PlusSign )
                    // InternalSTAlgorithmParser.g:3355:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3360:2: ( HyphenMinus )
                    {
                    // InternalSTAlgorithmParser.g:3360:2: ( HyphenMinus )
                    // InternalSTAlgorithmParser.g:3361:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Alternatives_0"


    // $ANTLR start "rule__AndOperator__Alternatives"
    // InternalSTAlgorithmParser.g:3370:1: rule__AndOperator__Alternatives : ( ( ( AND ) ) | ( ( Ampersand ) ) );
    public final void rule__AndOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3374:1: ( ( ( AND ) ) | ( ( Ampersand ) ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==AND) ) {
                alt34=1;
            }
            else if ( (LA34_0==Ampersand) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3375:2: ( ( AND ) )
                    {
                    // InternalSTAlgorithmParser.g:3375:2: ( ( AND ) )
                    // InternalSTAlgorithmParser.g:3376:3: ( AND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:3377:3: ( AND )
                    // InternalSTAlgorithmParser.g:3377:4: AND
                    {
                    match(input,AND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3381:2: ( ( Ampersand ) )
                    {
                    // InternalSTAlgorithmParser.g:3381:2: ( ( Ampersand ) )
                    // InternalSTAlgorithmParser.g:3382:3: ( Ampersand )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:3383:3: ( Ampersand )
                    // InternalSTAlgorithmParser.g:3383:4: Ampersand
                    {
                    match(input,Ampersand,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndOperator__Alternatives"


    // $ANTLR start "rule__EqualityOperator__Alternatives"
    // InternalSTAlgorithmParser.g:3391:1: rule__EqualityOperator__Alternatives : ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) );
    public final void rule__EqualityOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3395:1: ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==EqualsSign) ) {
                alt35=1;
            }
            else if ( (LA35_0==LessThanSignGreaterThanSign) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3396:2: ( ( EqualsSign ) )
                    {
                    // InternalSTAlgorithmParser.g:3396:2: ( ( EqualsSign ) )
                    // InternalSTAlgorithmParser.g:3397:3: ( EqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:3398:3: ( EqualsSign )
                    // InternalSTAlgorithmParser.g:3398:4: EqualsSign
                    {
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3402:2: ( ( LessThanSignGreaterThanSign ) )
                    {
                    // InternalSTAlgorithmParser.g:3402:2: ( ( LessThanSignGreaterThanSign ) )
                    // InternalSTAlgorithmParser.g:3403:3: ( LessThanSignGreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:3404:3: ( LessThanSignGreaterThanSign )
                    // InternalSTAlgorithmParser.g:3404:4: LessThanSignGreaterThanSign
                    {
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityOperator__Alternatives"


    // $ANTLR start "rule__CompareOperator__Alternatives"
    // InternalSTAlgorithmParser.g:3412:1: rule__CompareOperator__Alternatives : ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) );
    public final void rule__CompareOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3416:1: ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) )
            int alt36=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt36=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt36=2;
                }
                break;
            case GreaterThanSign:
                {
                alt36=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt36=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3417:2: ( ( LessThanSign ) )
                    {
                    // InternalSTAlgorithmParser.g:3417:2: ( ( LessThanSign ) )
                    // InternalSTAlgorithmParser.g:3418:3: ( LessThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:3419:3: ( LessThanSign )
                    // InternalSTAlgorithmParser.g:3419:4: LessThanSign
                    {
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3423:2: ( ( LessThanSignEqualsSign ) )
                    {
                    // InternalSTAlgorithmParser.g:3423:2: ( ( LessThanSignEqualsSign ) )
                    // InternalSTAlgorithmParser.g:3424:3: ( LessThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:3425:3: ( LessThanSignEqualsSign )
                    // InternalSTAlgorithmParser.g:3425:4: LessThanSignEqualsSign
                    {
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:3429:2: ( ( GreaterThanSign ) )
                    {
                    // InternalSTAlgorithmParser.g:3429:2: ( ( GreaterThanSign ) )
                    // InternalSTAlgorithmParser.g:3430:3: ( GreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTAlgorithmParser.g:3431:3: ( GreaterThanSign )
                    // InternalSTAlgorithmParser.g:3431:4: GreaterThanSign
                    {
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:3435:2: ( ( GreaterThanSignEqualsSign ) )
                    {
                    // InternalSTAlgorithmParser.g:3435:2: ( ( GreaterThanSignEqualsSign ) )
                    // InternalSTAlgorithmParser.g:3436:3: ( GreaterThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTAlgorithmParser.g:3437:3: ( GreaterThanSignEqualsSign )
                    // InternalSTAlgorithmParser.g:3437:4: GreaterThanSignEqualsSign
                    {
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperator__Alternatives"


    // $ANTLR start "rule__AddSubOperator__Alternatives"
    // InternalSTAlgorithmParser.g:3445:1: rule__AddSubOperator__Alternatives : ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) );
    public final void rule__AddSubOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3449:1: ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==PlusSign) ) {
                alt37=1;
            }
            else if ( (LA37_0==HyphenMinus) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3450:2: ( ( PlusSign ) )
                    {
                    // InternalSTAlgorithmParser.g:3450:2: ( ( PlusSign ) )
                    // InternalSTAlgorithmParser.g:3451:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:3452:3: ( PlusSign )
                    // InternalSTAlgorithmParser.g:3452:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3456:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTAlgorithmParser.g:3456:2: ( ( HyphenMinus ) )
                    // InternalSTAlgorithmParser.g:3457:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:3458:3: ( HyphenMinus )
                    // InternalSTAlgorithmParser.g:3458:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddSubOperator__Alternatives"


    // $ANTLR start "rule__MulDivModOperator__Alternatives"
    // InternalSTAlgorithmParser.g:3466:1: rule__MulDivModOperator__Alternatives : ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) );
    public final void rule__MulDivModOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3470:1: ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) )
            int alt38=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt38=1;
                }
                break;
            case Solidus:
                {
                alt38=2;
                }
                break;
            case MOD:
                {
                alt38=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3471:2: ( ( Asterisk ) )
                    {
                    // InternalSTAlgorithmParser.g:3471:2: ( ( Asterisk ) )
                    // InternalSTAlgorithmParser.g:3472:3: ( Asterisk )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:3473:3: ( Asterisk )
                    // InternalSTAlgorithmParser.g:3473:4: Asterisk
                    {
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3477:2: ( ( Solidus ) )
                    {
                    // InternalSTAlgorithmParser.g:3477:2: ( ( Solidus ) )
                    // InternalSTAlgorithmParser.g:3478:3: ( Solidus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:3479:3: ( Solidus )
                    // InternalSTAlgorithmParser.g:3479:4: Solidus
                    {
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:3483:2: ( ( MOD ) )
                    {
                    // InternalSTAlgorithmParser.g:3483:2: ( ( MOD ) )
                    // InternalSTAlgorithmParser.g:3484:3: ( MOD )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTAlgorithmParser.g:3485:3: ( MOD )
                    // InternalSTAlgorithmParser.g:3485:4: MOD
                    {
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulDivModOperator__Alternatives"


    // $ANTLR start "rule__UnaryOperator__Alternatives"
    // InternalSTAlgorithmParser.g:3493:1: rule__UnaryOperator__Alternatives : ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) );
    public final void rule__UnaryOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3497:1: ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) )
            int alt39=3;
            switch ( input.LA(1) ) {
            case HyphenMinus:
                {
                alt39=1;
                }
                break;
            case PlusSign:
                {
                alt39=2;
                }
                break;
            case NOT:
                {
                alt39=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3498:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTAlgorithmParser.g:3498:2: ( ( HyphenMinus ) )
                    // InternalSTAlgorithmParser.g:3499:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:3500:3: ( HyphenMinus )
                    // InternalSTAlgorithmParser.g:3500:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3504:2: ( ( PlusSign ) )
                    {
                    // InternalSTAlgorithmParser.g:3504:2: ( ( PlusSign ) )
                    // InternalSTAlgorithmParser.g:3505:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:3506:3: ( PlusSign )
                    // InternalSTAlgorithmParser.g:3506:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:3510:2: ( ( NOT ) )
                    {
                    // InternalSTAlgorithmParser.g:3510:2: ( ( NOT ) )
                    // InternalSTAlgorithmParser.g:3511:3: ( NOT )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTAlgorithmParser.g:3512:3: ( NOT )
                    // InternalSTAlgorithmParser.g:3512:4: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOperator__Alternatives"


    // $ANTLR start "rule__STMultiBitAccessSpecifier__Alternatives"
    // InternalSTAlgorithmParser.g:3520:1: rule__STMultiBitAccessSpecifier__Alternatives : ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) );
    public final void rule__STMultiBitAccessSpecifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3524:1: ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) )
            int alt40=5;
            switch ( input.LA(1) ) {
            case L:
                {
                alt40=1;
                }
                break;
            case D_1:
                {
                alt40=2;
                }
                break;
            case W:
                {
                alt40=3;
                }
                break;
            case B:
                {
                alt40=4;
                }
                break;
            case X:
                {
                alt40=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3525:2: ( ( L ) )
                    {
                    // InternalSTAlgorithmParser.g:3525:2: ( ( L ) )
                    // InternalSTAlgorithmParser.g:3526:3: ( L )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getLEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTAlgorithmParser.g:3527:3: ( L )
                    // InternalSTAlgorithmParser.g:3527:4: L
                    {
                    match(input,L,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getLEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTAlgorithmParser.g:3531:2: ( ( D_1 ) )
                    {
                    // InternalSTAlgorithmParser.g:3531:2: ( ( D_1 ) )
                    // InternalSTAlgorithmParser.g:3532:3: ( D_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTAlgorithmParser.g:3533:3: ( D_1 )
                    // InternalSTAlgorithmParser.g:3533:4: D_1
                    {
                    match(input,D_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTAlgorithmParser.g:3537:2: ( ( W ) )
                    {
                    // InternalSTAlgorithmParser.g:3537:2: ( ( W ) )
                    // InternalSTAlgorithmParser.g:3538:3: ( W )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getWEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTAlgorithmParser.g:3539:3: ( W )
                    // InternalSTAlgorithmParser.g:3539:4: W
                    {
                    match(input,W,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getWEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTAlgorithmParser.g:3543:2: ( ( B ) )
                    {
                    // InternalSTAlgorithmParser.g:3543:2: ( ( B ) )
                    // InternalSTAlgorithmParser.g:3544:3: ( B )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getBEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTAlgorithmParser.g:3545:3: ( B )
                    // InternalSTAlgorithmParser.g:3545:4: B
                    {
                    match(input,B,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getBEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTAlgorithmParser.g:3549:2: ( ( X ) )
                    {
                    // InternalSTAlgorithmParser.g:3549:2: ( ( X ) )
                    // InternalSTAlgorithmParser.g:3550:3: ( X )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getXEnumLiteralDeclaration_4()); 
                    }
                    // InternalSTAlgorithmParser.g:3551:3: ( X )
                    // InternalSTAlgorithmParser.g:3551:4: X
                    {
                    match(input,X,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getXEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultiBitAccessSpecifier__Alternatives"


    // $ANTLR start "rule__STAlgorithmSource__Group__0"
    // InternalSTAlgorithmParser.g:3559:1: rule__STAlgorithmSource__Group__0 : rule__STAlgorithmSource__Group__0__Impl rule__STAlgorithmSource__Group__1 ;
    public final void rule__STAlgorithmSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3563:1: ( rule__STAlgorithmSource__Group__0__Impl rule__STAlgorithmSource__Group__1 )
            // InternalSTAlgorithmParser.g:3564:2: rule__STAlgorithmSource__Group__0__Impl rule__STAlgorithmSource__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__STAlgorithmSource__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAlgorithmSource__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmSource__Group__0"


    // $ANTLR start "rule__STAlgorithmSource__Group__0__Impl"
    // InternalSTAlgorithmParser.g:3571:1: rule__STAlgorithmSource__Group__0__Impl : ( () ) ;
    public final void rule__STAlgorithmSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3575:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:3576:1: ( () )
            {
            // InternalSTAlgorithmParser.g:3576:1: ( () )
            // InternalSTAlgorithmParser.g:3577:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmSourceAccess().getSTAlgorithmSourceAction_0()); 
            }
            // InternalSTAlgorithmParser.g:3578:2: ()
            // InternalSTAlgorithmParser.g:3578:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmSourceAccess().getSTAlgorithmSourceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmSource__Group__0__Impl"


    // $ANTLR start "rule__STAlgorithmSource__Group__1"
    // InternalSTAlgorithmParser.g:3586:1: rule__STAlgorithmSource__Group__1 : rule__STAlgorithmSource__Group__1__Impl ;
    public final void rule__STAlgorithmSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3590:1: ( rule__STAlgorithmSource__Group__1__Impl )
            // InternalSTAlgorithmParser.g:3591:2: rule__STAlgorithmSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithmSource__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmSource__Group__1"


    // $ANTLR start "rule__STAlgorithmSource__Group__1__Impl"
    // InternalSTAlgorithmParser.g:3597:1: rule__STAlgorithmSource__Group__1__Impl : ( ( rule__STAlgorithmSource__ElementsAssignment_1 )* ) ;
    public final void rule__STAlgorithmSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3601:1: ( ( ( rule__STAlgorithmSource__ElementsAssignment_1 )* ) )
            // InternalSTAlgorithmParser.g:3602:1: ( ( rule__STAlgorithmSource__ElementsAssignment_1 )* )
            {
            // InternalSTAlgorithmParser.g:3602:1: ( ( rule__STAlgorithmSource__ElementsAssignment_1 )* )
            // InternalSTAlgorithmParser.g:3603:2: ( rule__STAlgorithmSource__ElementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmSourceAccess().getElementsAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:3604:2: ( rule__STAlgorithmSource__ElementsAssignment_1 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==ALGORITHM||LA41_0==METHOD) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:3604:3: rule__STAlgorithmSource__ElementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__STAlgorithmSource__ElementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmSourceAccess().getElementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmSource__Group__1__Impl"


    // $ANTLR start "rule__STAlgorithm__Group__0"
    // InternalSTAlgorithmParser.g:3613:1: rule__STAlgorithm__Group__0 : rule__STAlgorithm__Group__0__Impl rule__STAlgorithm__Group__1 ;
    public final void rule__STAlgorithm__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3617:1: ( rule__STAlgorithm__Group__0__Impl rule__STAlgorithm__Group__1 )
            // InternalSTAlgorithmParser.g:3618:2: rule__STAlgorithm__Group__0__Impl rule__STAlgorithm__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__STAlgorithm__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__0"


    // $ANTLR start "rule__STAlgorithm__Group__0__Impl"
    // InternalSTAlgorithmParser.g:3625:1: rule__STAlgorithm__Group__0__Impl : ( ALGORITHM ) ;
    public final void rule__STAlgorithm__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3629:1: ( ( ALGORITHM ) )
            // InternalSTAlgorithmParser.g:3630:1: ( ALGORITHM )
            {
            // InternalSTAlgorithmParser.g:3630:1: ( ALGORITHM )
            // InternalSTAlgorithmParser.g:3631:2: ALGORITHM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getALGORITHMKeyword_0()); 
            }
            match(input,ALGORITHM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getALGORITHMKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__0__Impl"


    // $ANTLR start "rule__STAlgorithm__Group__1"
    // InternalSTAlgorithmParser.g:3640:1: rule__STAlgorithm__Group__1 : rule__STAlgorithm__Group__1__Impl rule__STAlgorithm__Group__2 ;
    public final void rule__STAlgorithm__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3644:1: ( rule__STAlgorithm__Group__1__Impl rule__STAlgorithm__Group__2 )
            // InternalSTAlgorithmParser.g:3645:2: rule__STAlgorithm__Group__1__Impl rule__STAlgorithm__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__STAlgorithm__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__1"


    // $ANTLR start "rule__STAlgorithm__Group__1__Impl"
    // InternalSTAlgorithmParser.g:3652:1: rule__STAlgorithm__Group__1__Impl : ( ( rule__STAlgorithm__NameAssignment_1 ) ) ;
    public final void rule__STAlgorithm__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3656:1: ( ( ( rule__STAlgorithm__NameAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:3657:1: ( ( rule__STAlgorithm__NameAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:3657:1: ( ( rule__STAlgorithm__NameAssignment_1 ) )
            // InternalSTAlgorithmParser.g:3658:2: ( rule__STAlgorithm__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getNameAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:3659:2: ( rule__STAlgorithm__NameAssignment_1 )
            // InternalSTAlgorithmParser.g:3659:3: rule__STAlgorithm__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__1__Impl"


    // $ANTLR start "rule__STAlgorithm__Group__2"
    // InternalSTAlgorithmParser.g:3667:1: rule__STAlgorithm__Group__2 : rule__STAlgorithm__Group__2__Impl rule__STAlgorithm__Group__3 ;
    public final void rule__STAlgorithm__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3671:1: ( rule__STAlgorithm__Group__2__Impl rule__STAlgorithm__Group__3 )
            // InternalSTAlgorithmParser.g:3672:2: rule__STAlgorithm__Group__2__Impl rule__STAlgorithm__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__STAlgorithm__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__2"


    // $ANTLR start "rule__STAlgorithm__Group__2__Impl"
    // InternalSTAlgorithmParser.g:3679:1: rule__STAlgorithm__Group__2__Impl : ( ( rule__STAlgorithm__BodyAssignment_2 ) ) ;
    public final void rule__STAlgorithm__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3683:1: ( ( ( rule__STAlgorithm__BodyAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:3684:1: ( ( rule__STAlgorithm__BodyAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:3684:1: ( ( rule__STAlgorithm__BodyAssignment_2 ) )
            // InternalSTAlgorithmParser.g:3685:2: ( rule__STAlgorithm__BodyAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getBodyAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:3686:2: ( rule__STAlgorithm__BodyAssignment_2 )
            // InternalSTAlgorithmParser.g:3686:3: rule__STAlgorithm__BodyAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__BodyAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getBodyAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__2__Impl"


    // $ANTLR start "rule__STAlgorithm__Group__3"
    // InternalSTAlgorithmParser.g:3694:1: rule__STAlgorithm__Group__3 : rule__STAlgorithm__Group__3__Impl ;
    public final void rule__STAlgorithm__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3698:1: ( rule__STAlgorithm__Group__3__Impl )
            // InternalSTAlgorithmParser.g:3699:2: rule__STAlgorithm__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithm__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__3"


    // $ANTLR start "rule__STAlgorithm__Group__3__Impl"
    // InternalSTAlgorithmParser.g:3705:1: rule__STAlgorithm__Group__3__Impl : ( END_ALGORITHM ) ;
    public final void rule__STAlgorithm__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3709:1: ( ( END_ALGORITHM ) )
            // InternalSTAlgorithmParser.g:3710:1: ( END_ALGORITHM )
            {
            // InternalSTAlgorithmParser.g:3710:1: ( END_ALGORITHM )
            // InternalSTAlgorithmParser.g:3711:2: END_ALGORITHM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getEND_ALGORITHMKeyword_3()); 
            }
            match(input,END_ALGORITHM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getEND_ALGORITHMKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__Group__3__Impl"


    // $ANTLR start "rule__STAlgorithmBody__Group__0"
    // InternalSTAlgorithmParser.g:3721:1: rule__STAlgorithmBody__Group__0 : rule__STAlgorithmBody__Group__0__Impl rule__STAlgorithmBody__Group__1 ;
    public final void rule__STAlgorithmBody__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3725:1: ( rule__STAlgorithmBody__Group__0__Impl rule__STAlgorithmBody__Group__1 )
            // InternalSTAlgorithmParser.g:3726:2: rule__STAlgorithmBody__Group__0__Impl rule__STAlgorithmBody__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__STAlgorithmBody__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAlgorithmBody__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__Group__0"


    // $ANTLR start "rule__STAlgorithmBody__Group__0__Impl"
    // InternalSTAlgorithmParser.g:3733:1: rule__STAlgorithmBody__Group__0__Impl : ( () ) ;
    public final void rule__STAlgorithmBody__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3737:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:3738:1: ( () )
            {
            // InternalSTAlgorithmParser.g:3738:1: ( () )
            // InternalSTAlgorithmParser.g:3739:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyAccess().getSTAlgorithmBodyAction_0()); 
            }
            // InternalSTAlgorithmParser.g:3740:2: ()
            // InternalSTAlgorithmParser.g:3740:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyAccess().getSTAlgorithmBodyAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__Group__0__Impl"


    // $ANTLR start "rule__STAlgorithmBody__Group__1"
    // InternalSTAlgorithmParser.g:3748:1: rule__STAlgorithmBody__Group__1 : rule__STAlgorithmBody__Group__1__Impl rule__STAlgorithmBody__Group__2 ;
    public final void rule__STAlgorithmBody__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3752:1: ( rule__STAlgorithmBody__Group__1__Impl rule__STAlgorithmBody__Group__2 )
            // InternalSTAlgorithmParser.g:3753:2: rule__STAlgorithmBody__Group__1__Impl rule__STAlgorithmBody__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__STAlgorithmBody__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAlgorithmBody__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__Group__1"


    // $ANTLR start "rule__STAlgorithmBody__Group__1__Impl"
    // InternalSTAlgorithmParser.g:3760:1: rule__STAlgorithmBody__Group__1__Impl : ( ( rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 )* ) ;
    public final void rule__STAlgorithmBody__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3764:1: ( ( ( rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 )* ) )
            // InternalSTAlgorithmParser.g:3765:1: ( ( rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 )* )
            {
            // InternalSTAlgorithmParser.g:3765:1: ( ( rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 )* )
            // InternalSTAlgorithmParser.g:3766:2: ( rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyAccess().getVarTempDeclarationsAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:3767:2: ( rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==VAR_TEMP) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:3767:3: rule__STAlgorithmBody__VarTempDeclarationsAssignment_1
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__STAlgorithmBody__VarTempDeclarationsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyAccess().getVarTempDeclarationsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__Group__1__Impl"


    // $ANTLR start "rule__STAlgorithmBody__Group__2"
    // InternalSTAlgorithmParser.g:3775:1: rule__STAlgorithmBody__Group__2 : rule__STAlgorithmBody__Group__2__Impl ;
    public final void rule__STAlgorithmBody__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3779:1: ( rule__STAlgorithmBody__Group__2__Impl )
            // InternalSTAlgorithmParser.g:3780:2: rule__STAlgorithmBody__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAlgorithmBody__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__Group__2"


    // $ANTLR start "rule__STAlgorithmBody__Group__2__Impl"
    // InternalSTAlgorithmParser.g:3786:1: rule__STAlgorithmBody__Group__2__Impl : ( ( rule__STAlgorithmBody__StatementsAssignment_2 )* ) ;
    public final void rule__STAlgorithmBody__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3790:1: ( ( ( rule__STAlgorithmBody__StatementsAssignment_2 )* ) )
            // InternalSTAlgorithmParser.g:3791:1: ( ( rule__STAlgorithmBody__StatementsAssignment_2 )* )
            {
            // InternalSTAlgorithmParser.g:3791:1: ( ( rule__STAlgorithmBody__StatementsAssignment_2 )* )
            // InternalSTAlgorithmParser.g:3792:2: ( rule__STAlgorithmBody__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyAccess().getStatementsAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:3793:2: ( rule__STAlgorithmBody__StatementsAssignment_2 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==LDATE_AND_TIME||LA43_0==DATE_AND_TIME||LA43_0==LTIME_OF_DAY||LA43_0==TIME_OF_DAY||LA43_0==CONTINUE||LA43_0==WSTRING||LA43_0==REPEAT||LA43_0==RETURN||LA43_0==STRING||LA43_0==DWORD||LA43_0==FALSE||(LA43_0>=LDATE && LA43_0<=LWORD)||(LA43_0>=UDINT && LA43_0<=ULINT)||(LA43_0>=USINT && LA43_0<=DINT)||LA43_0==EXIT||(LA43_0>=LINT && LA43_0<=LTOD)||(LA43_0>=REAL && LA43_0<=SINT)||(LA43_0>=THIS && LA43_0<=TRUE)||LA43_0==UINT||(LA43_0>=WORD && LA43_0<=MOD)||LA43_0==TOD||LA43_0==XOR||(LA43_0>=DT && LA43_0<=LT)||LA43_0==OR||LA43_0==LeftParenthesis||LA43_0==PlusSign||LA43_0==HyphenMinus||LA43_0==Semicolon||(LA43_0>=D && LA43_0<=T)||(LA43_0>=RULE_NON_DECIMAL && LA43_0<=RULE_DECIMAL)||(LA43_0>=RULE_ID && LA43_0<=RULE_STRING)) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:3793:3: rule__STAlgorithmBody__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STAlgorithmBody__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__Group__2__Impl"


    // $ANTLR start "rule__STMethod__Group__0"
    // InternalSTAlgorithmParser.g:3802:1: rule__STMethod__Group__0 : rule__STMethod__Group__0__Impl rule__STMethod__Group__1 ;
    public final void rule__STMethod__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3806:1: ( rule__STMethod__Group__0__Impl rule__STMethod__Group__1 )
            // InternalSTAlgorithmParser.g:3807:2: rule__STMethod__Group__0__Impl rule__STMethod__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__STMethod__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMethod__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group__0"


    // $ANTLR start "rule__STMethod__Group__0__Impl"
    // InternalSTAlgorithmParser.g:3814:1: rule__STMethod__Group__0__Impl : ( METHOD ) ;
    public final void rule__STMethod__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3818:1: ( ( METHOD ) )
            // InternalSTAlgorithmParser.g:3819:1: ( METHOD )
            {
            // InternalSTAlgorithmParser.g:3819:1: ( METHOD )
            // InternalSTAlgorithmParser.g:3820:2: METHOD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodAccess().getMETHODKeyword_0()); 
            }
            match(input,METHOD,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodAccess().getMETHODKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group__0__Impl"


    // $ANTLR start "rule__STMethod__Group__1"
    // InternalSTAlgorithmParser.g:3829:1: rule__STMethod__Group__1 : rule__STMethod__Group__1__Impl rule__STMethod__Group__2 ;
    public final void rule__STMethod__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3833:1: ( rule__STMethod__Group__1__Impl rule__STMethod__Group__2 )
            // InternalSTAlgorithmParser.g:3834:2: rule__STMethod__Group__1__Impl rule__STMethod__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__STMethod__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMethod__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group__1"


    // $ANTLR start "rule__STMethod__Group__1__Impl"
    // InternalSTAlgorithmParser.g:3841:1: rule__STMethod__Group__1__Impl : ( ( rule__STMethod__NameAssignment_1 ) ) ;
    public final void rule__STMethod__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3845:1: ( ( ( rule__STMethod__NameAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:3846:1: ( ( rule__STMethod__NameAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:3846:1: ( ( rule__STMethod__NameAssignment_1 ) )
            // InternalSTAlgorithmParser.g:3847:2: ( rule__STMethod__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodAccess().getNameAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:3848:2: ( rule__STMethod__NameAssignment_1 )
            // InternalSTAlgorithmParser.g:3848:3: rule__STMethod__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STMethod__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group__1__Impl"


    // $ANTLR start "rule__STMethod__Group__2"
    // InternalSTAlgorithmParser.g:3856:1: rule__STMethod__Group__2 : rule__STMethod__Group__2__Impl rule__STMethod__Group__3 ;
    public final void rule__STMethod__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3860:1: ( rule__STMethod__Group__2__Impl rule__STMethod__Group__3 )
            // InternalSTAlgorithmParser.g:3861:2: rule__STMethod__Group__2__Impl rule__STMethod__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STMethod__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMethod__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group__2"


    // $ANTLR start "rule__STMethod__Group__2__Impl"
    // InternalSTAlgorithmParser.g:3868:1: rule__STMethod__Group__2__Impl : ( ( rule__STMethod__Group_2__0 )? ) ;
    public final void rule__STMethod__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3872:1: ( ( ( rule__STMethod__Group_2__0 )? ) )
            // InternalSTAlgorithmParser.g:3873:1: ( ( rule__STMethod__Group_2__0 )? )
            {
            // InternalSTAlgorithmParser.g:3873:1: ( ( rule__STMethod__Group_2__0 )? )
            // InternalSTAlgorithmParser.g:3874:2: ( rule__STMethod__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodAccess().getGroup_2()); 
            }
            // InternalSTAlgorithmParser.g:3875:2: ( rule__STMethod__Group_2__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==Colon) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalSTAlgorithmParser.g:3875:3: rule__STMethod__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMethod__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group__2__Impl"


    // $ANTLR start "rule__STMethod__Group__3"
    // InternalSTAlgorithmParser.g:3883:1: rule__STMethod__Group__3 : rule__STMethod__Group__3__Impl rule__STMethod__Group__4 ;
    public final void rule__STMethod__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3887:1: ( rule__STMethod__Group__3__Impl rule__STMethod__Group__4 )
            // InternalSTAlgorithmParser.g:3888:2: rule__STMethod__Group__3__Impl rule__STMethod__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__STMethod__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMethod__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group__3"


    // $ANTLR start "rule__STMethod__Group__3__Impl"
    // InternalSTAlgorithmParser.g:3895:1: rule__STMethod__Group__3__Impl : ( ( rule__STMethod__BodyAssignment_3 ) ) ;
    public final void rule__STMethod__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3899:1: ( ( ( rule__STMethod__BodyAssignment_3 ) ) )
            // InternalSTAlgorithmParser.g:3900:1: ( ( rule__STMethod__BodyAssignment_3 ) )
            {
            // InternalSTAlgorithmParser.g:3900:1: ( ( rule__STMethod__BodyAssignment_3 ) )
            // InternalSTAlgorithmParser.g:3901:2: ( rule__STMethod__BodyAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodAccess().getBodyAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:3902:2: ( rule__STMethod__BodyAssignment_3 )
            // InternalSTAlgorithmParser.g:3902:3: rule__STMethod__BodyAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STMethod__BodyAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodAccess().getBodyAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group__3__Impl"


    // $ANTLR start "rule__STMethod__Group__4"
    // InternalSTAlgorithmParser.g:3910:1: rule__STMethod__Group__4 : rule__STMethod__Group__4__Impl ;
    public final void rule__STMethod__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3914:1: ( rule__STMethod__Group__4__Impl )
            // InternalSTAlgorithmParser.g:3915:2: rule__STMethod__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMethod__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group__4"


    // $ANTLR start "rule__STMethod__Group__4__Impl"
    // InternalSTAlgorithmParser.g:3921:1: rule__STMethod__Group__4__Impl : ( END_METHOD ) ;
    public final void rule__STMethod__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3925:1: ( ( END_METHOD ) )
            // InternalSTAlgorithmParser.g:3926:1: ( END_METHOD )
            {
            // InternalSTAlgorithmParser.g:3926:1: ( END_METHOD )
            // InternalSTAlgorithmParser.g:3927:2: END_METHOD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodAccess().getEND_METHODKeyword_4()); 
            }
            match(input,END_METHOD,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodAccess().getEND_METHODKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group__4__Impl"


    // $ANTLR start "rule__STMethod__Group_2__0"
    // InternalSTAlgorithmParser.g:3937:1: rule__STMethod__Group_2__0 : rule__STMethod__Group_2__0__Impl rule__STMethod__Group_2__1 ;
    public final void rule__STMethod__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3941:1: ( rule__STMethod__Group_2__0__Impl rule__STMethod__Group_2__1 )
            // InternalSTAlgorithmParser.g:3942:2: rule__STMethod__Group_2__0__Impl rule__STMethod__Group_2__1
            {
            pushFollow(FOLLOW_12);
            rule__STMethod__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMethod__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group_2__0"


    // $ANTLR start "rule__STMethod__Group_2__0__Impl"
    // InternalSTAlgorithmParser.g:3949:1: rule__STMethod__Group_2__0__Impl : ( Colon ) ;
    public final void rule__STMethod__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3953:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:3954:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:3954:1: ( Colon )
            // InternalSTAlgorithmParser.g:3955:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodAccess().getColonKeyword_2_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodAccess().getColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group_2__0__Impl"


    // $ANTLR start "rule__STMethod__Group_2__1"
    // InternalSTAlgorithmParser.g:3964:1: rule__STMethod__Group_2__1 : rule__STMethod__Group_2__1__Impl ;
    public final void rule__STMethod__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3968:1: ( rule__STMethod__Group_2__1__Impl )
            // InternalSTAlgorithmParser.g:3969:2: rule__STMethod__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMethod__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group_2__1"


    // $ANTLR start "rule__STMethod__Group_2__1__Impl"
    // InternalSTAlgorithmParser.g:3975:1: rule__STMethod__Group_2__1__Impl : ( ( rule__STMethod__ReturnTypeAssignment_2_1 ) ) ;
    public final void rule__STMethod__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3979:1: ( ( ( rule__STMethod__ReturnTypeAssignment_2_1 ) ) )
            // InternalSTAlgorithmParser.g:3980:1: ( ( rule__STMethod__ReturnTypeAssignment_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:3980:1: ( ( rule__STMethod__ReturnTypeAssignment_2_1 ) )
            // InternalSTAlgorithmParser.g:3981:2: ( rule__STMethod__ReturnTypeAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodAccess().getReturnTypeAssignment_2_1()); 
            }
            // InternalSTAlgorithmParser.g:3982:2: ( rule__STMethod__ReturnTypeAssignment_2_1 )
            // InternalSTAlgorithmParser.g:3982:3: rule__STMethod__ReturnTypeAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STMethod__ReturnTypeAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodAccess().getReturnTypeAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__Group_2__1__Impl"


    // $ANTLR start "rule__STMethodBody__Group__0"
    // InternalSTAlgorithmParser.g:3991:1: rule__STMethodBody__Group__0 : rule__STMethodBody__Group__0__Impl rule__STMethodBody__Group__1 ;
    public final void rule__STMethodBody__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:3995:1: ( rule__STMethodBody__Group__0__Impl rule__STMethodBody__Group__1 )
            // InternalSTAlgorithmParser.g:3996:2: rule__STMethodBody__Group__0__Impl rule__STMethodBody__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STMethodBody__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMethodBody__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethodBody__Group__0"


    // $ANTLR start "rule__STMethodBody__Group__0__Impl"
    // InternalSTAlgorithmParser.g:4003:1: rule__STMethodBody__Group__0__Impl : ( () ) ;
    public final void rule__STMethodBody__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4007:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:4008:1: ( () )
            {
            // InternalSTAlgorithmParser.g:4008:1: ( () )
            // InternalSTAlgorithmParser.g:4009:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodBodyAccess().getSTMethodBodyAction_0()); 
            }
            // InternalSTAlgorithmParser.g:4010:2: ()
            // InternalSTAlgorithmParser.g:4010:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodBodyAccess().getSTMethodBodyAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethodBody__Group__0__Impl"


    // $ANTLR start "rule__STMethodBody__Group__1"
    // InternalSTAlgorithmParser.g:4018:1: rule__STMethodBody__Group__1 : rule__STMethodBody__Group__1__Impl rule__STMethodBody__Group__2 ;
    public final void rule__STMethodBody__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4022:1: ( rule__STMethodBody__Group__1__Impl rule__STMethodBody__Group__2 )
            // InternalSTAlgorithmParser.g:4023:2: rule__STMethodBody__Group__1__Impl rule__STMethodBody__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__STMethodBody__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMethodBody__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethodBody__Group__1"


    // $ANTLR start "rule__STMethodBody__Group__1__Impl"
    // InternalSTAlgorithmParser.g:4030:1: rule__STMethodBody__Group__1__Impl : ( ( rule__STMethodBody__VarDeclarationsAssignment_1 )* ) ;
    public final void rule__STMethodBody__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4034:1: ( ( ( rule__STMethodBody__VarDeclarationsAssignment_1 )* ) )
            // InternalSTAlgorithmParser.g:4035:1: ( ( rule__STMethodBody__VarDeclarationsAssignment_1 )* )
            {
            // InternalSTAlgorithmParser.g:4035:1: ( ( rule__STMethodBody__VarDeclarationsAssignment_1 )* )
            // InternalSTAlgorithmParser.g:4036:2: ( rule__STMethodBody__VarDeclarationsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodBodyAccess().getVarDeclarationsAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:4037:2: ( rule__STMethodBody__VarDeclarationsAssignment_1 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( ((LA45_0>=VAR_IN_OUT && LA45_0<=VAR_OUTPUT)||LA45_0==VAR_INPUT||LA45_0==VAR_TEMP) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:4037:3: rule__STMethodBody__VarDeclarationsAssignment_1
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__STMethodBody__VarDeclarationsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodBodyAccess().getVarDeclarationsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethodBody__Group__1__Impl"


    // $ANTLR start "rule__STMethodBody__Group__2"
    // InternalSTAlgorithmParser.g:4045:1: rule__STMethodBody__Group__2 : rule__STMethodBody__Group__2__Impl ;
    public final void rule__STMethodBody__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4049:1: ( rule__STMethodBody__Group__2__Impl )
            // InternalSTAlgorithmParser.g:4050:2: rule__STMethodBody__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMethodBody__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethodBody__Group__2"


    // $ANTLR start "rule__STMethodBody__Group__2__Impl"
    // InternalSTAlgorithmParser.g:4056:1: rule__STMethodBody__Group__2__Impl : ( ( rule__STMethodBody__StatementsAssignment_2 )* ) ;
    public final void rule__STMethodBody__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4060:1: ( ( ( rule__STMethodBody__StatementsAssignment_2 )* ) )
            // InternalSTAlgorithmParser.g:4061:1: ( ( rule__STMethodBody__StatementsAssignment_2 )* )
            {
            // InternalSTAlgorithmParser.g:4061:1: ( ( rule__STMethodBody__StatementsAssignment_2 )* )
            // InternalSTAlgorithmParser.g:4062:2: ( rule__STMethodBody__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodBodyAccess().getStatementsAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:4063:2: ( rule__STMethodBody__StatementsAssignment_2 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==LDATE_AND_TIME||LA46_0==DATE_AND_TIME||LA46_0==LTIME_OF_DAY||LA46_0==TIME_OF_DAY||LA46_0==CONTINUE||LA46_0==WSTRING||LA46_0==REPEAT||LA46_0==RETURN||LA46_0==STRING||LA46_0==DWORD||LA46_0==FALSE||(LA46_0>=LDATE && LA46_0<=LWORD)||(LA46_0>=UDINT && LA46_0<=ULINT)||(LA46_0>=USINT && LA46_0<=DINT)||LA46_0==EXIT||(LA46_0>=LINT && LA46_0<=LTOD)||(LA46_0>=REAL && LA46_0<=SINT)||(LA46_0>=THIS && LA46_0<=TRUE)||LA46_0==UINT||(LA46_0>=WORD && LA46_0<=MOD)||LA46_0==TOD||LA46_0==XOR||(LA46_0>=DT && LA46_0<=LT)||LA46_0==OR||LA46_0==LeftParenthesis||LA46_0==PlusSign||LA46_0==HyphenMinus||LA46_0==Semicolon||(LA46_0>=D && LA46_0<=T)||(LA46_0>=RULE_NON_DECIMAL && LA46_0<=RULE_DECIMAL)||(LA46_0>=RULE_ID && LA46_0<=RULE_STRING)) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:4063:3: rule__STMethodBody__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STMethodBody__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodBodyAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethodBody__Group__2__Impl"


    // $ANTLR start "rule__STExpressionSource__Group__0"
    // InternalSTAlgorithmParser.g:4072:1: rule__STExpressionSource__Group__0 : rule__STExpressionSource__Group__0__Impl rule__STExpressionSource__Group__1 ;
    public final void rule__STExpressionSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4076:1: ( rule__STExpressionSource__Group__0__Impl rule__STExpressionSource__Group__1 )
            // InternalSTAlgorithmParser.g:4077:2: rule__STExpressionSource__Group__0__Impl rule__STExpressionSource__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__STExpressionSource__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STExpressionSource__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__Group__0"


    // $ANTLR start "rule__STExpressionSource__Group__0__Impl"
    // InternalSTAlgorithmParser.g:4084:1: rule__STExpressionSource__Group__0__Impl : ( () ) ;
    public final void rule__STExpressionSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4088:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:4089:1: ( () )
            {
            // InternalSTAlgorithmParser.g:4089:1: ( () )
            // InternalSTAlgorithmParser.g:4090:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceAccess().getSTExpressionSourceAction_0()); 
            }
            // InternalSTAlgorithmParser.g:4091:2: ()
            // InternalSTAlgorithmParser.g:4091:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceAccess().getSTExpressionSourceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__Group__0__Impl"


    // $ANTLR start "rule__STExpressionSource__Group__1"
    // InternalSTAlgorithmParser.g:4099:1: rule__STExpressionSource__Group__1 : rule__STExpressionSource__Group__1__Impl ;
    public final void rule__STExpressionSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4103:1: ( rule__STExpressionSource__Group__1__Impl )
            // InternalSTAlgorithmParser.g:4104:2: rule__STExpressionSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STExpressionSource__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__Group__1"


    // $ANTLR start "rule__STExpressionSource__Group__1__Impl"
    // InternalSTAlgorithmParser.g:4110:1: rule__STExpressionSource__Group__1__Impl : ( ( rule__STExpressionSource__ExpressionAssignment_1 )? ) ;
    public final void rule__STExpressionSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4114:1: ( ( ( rule__STExpressionSource__ExpressionAssignment_1 )? ) )
            // InternalSTAlgorithmParser.g:4115:1: ( ( rule__STExpressionSource__ExpressionAssignment_1 )? )
            {
            // InternalSTAlgorithmParser.g:4115:1: ( ( rule__STExpressionSource__ExpressionAssignment_1 )? )
            // InternalSTAlgorithmParser.g:4116:2: ( rule__STExpressionSource__ExpressionAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceAccess().getExpressionAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:4117:2: ( rule__STExpressionSource__ExpressionAssignment_1 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==LDATE_AND_TIME||LA47_0==DATE_AND_TIME||LA47_0==LTIME_OF_DAY||LA47_0==TIME_OF_DAY||LA47_0==WSTRING||LA47_0==STRING||LA47_0==DWORD||LA47_0==FALSE||(LA47_0>=LDATE && LA47_0<=LWORD)||(LA47_0>=UDINT && LA47_0<=ULINT)||(LA47_0>=USINT && LA47_0<=WCHAR)||(LA47_0>=BOOL && LA47_0<=BYTE)||(LA47_0>=CHAR && LA47_0<=DINT)||(LA47_0>=LINT && LA47_0<=LTOD)||(LA47_0>=REAL && LA47_0<=SINT)||(LA47_0>=THIS && LA47_0<=TRUE)||LA47_0==UINT||(LA47_0>=WORD && LA47_0<=AND)||(LA47_0>=INT && LA47_0<=NOT)||LA47_0==TOD||LA47_0==XOR||LA47_0==DT||(LA47_0>=LD && LA47_0<=LT)||LA47_0==OR||LA47_0==LeftParenthesis||LA47_0==PlusSign||LA47_0==HyphenMinus||(LA47_0>=D && LA47_0<=T)||(LA47_0>=RULE_NON_DECIMAL && LA47_0<=RULE_DECIMAL)||(LA47_0>=RULE_ID && LA47_0<=RULE_STRING)) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalSTAlgorithmParser.g:4117:3: rule__STExpressionSource__ExpressionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__STExpressionSource__ExpressionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__Group__1__Impl"


    // $ANTLR start "rule__STInitializerExpressionSource__Group__0"
    // InternalSTAlgorithmParser.g:4126:1: rule__STInitializerExpressionSource__Group__0 : rule__STInitializerExpressionSource__Group__0__Impl rule__STInitializerExpressionSource__Group__1 ;
    public final void rule__STInitializerExpressionSource__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4130:1: ( rule__STInitializerExpressionSource__Group__0__Impl rule__STInitializerExpressionSource__Group__1 )
            // InternalSTAlgorithmParser.g:4131:2: rule__STInitializerExpressionSource__Group__0__Impl rule__STInitializerExpressionSource__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__STInitializerExpressionSource__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STInitializerExpressionSource__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__Group__0"


    // $ANTLR start "rule__STInitializerExpressionSource__Group__0__Impl"
    // InternalSTAlgorithmParser.g:4138:1: rule__STInitializerExpressionSource__Group__0__Impl : ( () ) ;
    public final void rule__STInitializerExpressionSource__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4142:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:4143:1: ( () )
            {
            // InternalSTAlgorithmParser.g:4143:1: ( () )
            // InternalSTAlgorithmParser.g:4144:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceAccess().getSTInitializerExpressionSourceAction_0()); 
            }
            // InternalSTAlgorithmParser.g:4145:2: ()
            // InternalSTAlgorithmParser.g:4145:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceAccess().getSTInitializerExpressionSourceAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__Group__0__Impl"


    // $ANTLR start "rule__STInitializerExpressionSource__Group__1"
    // InternalSTAlgorithmParser.g:4153:1: rule__STInitializerExpressionSource__Group__1 : rule__STInitializerExpressionSource__Group__1__Impl ;
    public final void rule__STInitializerExpressionSource__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4157:1: ( rule__STInitializerExpressionSource__Group__1__Impl )
            // InternalSTAlgorithmParser.g:4158:2: rule__STInitializerExpressionSource__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STInitializerExpressionSource__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__Group__1"


    // $ANTLR start "rule__STInitializerExpressionSource__Group__1__Impl"
    // InternalSTAlgorithmParser.g:4164:1: rule__STInitializerExpressionSource__Group__1__Impl : ( ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )? ) ;
    public final void rule__STInitializerExpressionSource__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4168:1: ( ( ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )? ) )
            // InternalSTAlgorithmParser.g:4169:1: ( ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )? )
            {
            // InternalSTAlgorithmParser.g:4169:1: ( ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )? )
            // InternalSTAlgorithmParser.g:4170:2: ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceAccess().getInitializerExpressionAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:4171:2: ( rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==LDATE_AND_TIME||LA48_0==DATE_AND_TIME||LA48_0==LTIME_OF_DAY||LA48_0==TIME_OF_DAY||LA48_0==WSTRING||LA48_0==STRING||LA48_0==DWORD||LA48_0==FALSE||(LA48_0>=LDATE && LA48_0<=LWORD)||(LA48_0>=UDINT && LA48_0<=ULINT)||(LA48_0>=USINT && LA48_0<=WCHAR)||(LA48_0>=BOOL && LA48_0<=BYTE)||(LA48_0>=CHAR && LA48_0<=DINT)||(LA48_0>=LINT && LA48_0<=LTOD)||(LA48_0>=REAL && LA48_0<=SINT)||(LA48_0>=THIS && LA48_0<=TRUE)||LA48_0==UINT||(LA48_0>=WORD && LA48_0<=AND)||(LA48_0>=INT && LA48_0<=NOT)||LA48_0==TOD||LA48_0==XOR||LA48_0==DT||(LA48_0>=LD && LA48_0<=LT)||LA48_0==OR||LA48_0==LeftParenthesis||LA48_0==PlusSign||LA48_0==HyphenMinus||(LA48_0>=D && LA48_0<=LeftSquareBracket)||(LA48_0>=RULE_NON_DECIMAL && LA48_0<=RULE_DECIMAL)||(LA48_0>=RULE_ID && LA48_0<=RULE_STRING)) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalSTAlgorithmParser.g:4171:3: rule__STInitializerExpressionSource__InitializerExpressionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__STInitializerExpressionSource__InitializerExpressionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceAccess().getInitializerExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__Group__1__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__0"
    // InternalSTAlgorithmParser.g:4180:1: rule__STVarTempDeclarationBlock__Group__0 : rule__STVarTempDeclarationBlock__Group__0__Impl rule__STVarTempDeclarationBlock__Group__1 ;
    public final void rule__STVarTempDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4184:1: ( rule__STVarTempDeclarationBlock__Group__0__Impl rule__STVarTempDeclarationBlock__Group__1 )
            // InternalSTAlgorithmParser.g:4185:2: rule__STVarTempDeclarationBlock__Group__0__Impl rule__STVarTempDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__STVarTempDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__0"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__0__Impl"
    // InternalSTAlgorithmParser.g:4192:1: rule__STVarTempDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__STVarTempDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4196:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:4197:1: ( () )
            {
            // InternalSTAlgorithmParser.g:4197:1: ( () )
            // InternalSTAlgorithmParser.g:4198:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getSTVarTempDeclarationBlockAction_0()); 
            }
            // InternalSTAlgorithmParser.g:4199:2: ()
            // InternalSTAlgorithmParser.g:4199:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getSTVarTempDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__1"
    // InternalSTAlgorithmParser.g:4207:1: rule__STVarTempDeclarationBlock__Group__1 : rule__STVarTempDeclarationBlock__Group__1__Impl rule__STVarTempDeclarationBlock__Group__2 ;
    public final void rule__STVarTempDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4211:1: ( rule__STVarTempDeclarationBlock__Group__1__Impl rule__STVarTempDeclarationBlock__Group__2 )
            // InternalSTAlgorithmParser.g:4212:2: rule__STVarTempDeclarationBlock__Group__1__Impl rule__STVarTempDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__STVarTempDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__1"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__1__Impl"
    // InternalSTAlgorithmParser.g:4219:1: rule__STVarTempDeclarationBlock__Group__1__Impl : ( VAR_TEMP ) ;
    public final void rule__STVarTempDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4223:1: ( ( VAR_TEMP ) )
            // InternalSTAlgorithmParser.g:4224:1: ( VAR_TEMP )
            {
            // InternalSTAlgorithmParser.g:4224:1: ( VAR_TEMP )
            // InternalSTAlgorithmParser.g:4225:2: VAR_TEMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getVAR_TEMPKeyword_1()); 
            }
            match(input,VAR_TEMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getVAR_TEMPKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__2"
    // InternalSTAlgorithmParser.g:4234:1: rule__STVarTempDeclarationBlock__Group__2 : rule__STVarTempDeclarationBlock__Group__2__Impl rule__STVarTempDeclarationBlock__Group__3 ;
    public final void rule__STVarTempDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4238:1: ( rule__STVarTempDeclarationBlock__Group__2__Impl rule__STVarTempDeclarationBlock__Group__3 )
            // InternalSTAlgorithmParser.g:4239:2: rule__STVarTempDeclarationBlock__Group__2__Impl rule__STVarTempDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_17);
            rule__STVarTempDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__2"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__2__Impl"
    // InternalSTAlgorithmParser.g:4246:1: rule__STVarTempDeclarationBlock__Group__2__Impl : ( ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__STVarTempDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4250:1: ( ( ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTAlgorithmParser.g:4251:1: ( ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTAlgorithmParser.g:4251:1: ( ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTAlgorithmParser.g:4252:2: ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:4253:2: ( rule__STVarTempDeclarationBlock__ConstantAssignment_2 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==CONSTANT) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalSTAlgorithmParser.g:4253:3: rule__STVarTempDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarTempDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__3"
    // InternalSTAlgorithmParser.g:4261:1: rule__STVarTempDeclarationBlock__Group__3 : rule__STVarTempDeclarationBlock__Group__3__Impl rule__STVarTempDeclarationBlock__Group__4 ;
    public final void rule__STVarTempDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4265:1: ( rule__STVarTempDeclarationBlock__Group__3__Impl rule__STVarTempDeclarationBlock__Group__4 )
            // InternalSTAlgorithmParser.g:4266:2: rule__STVarTempDeclarationBlock__Group__3__Impl rule__STVarTempDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__STVarTempDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__3"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__3__Impl"
    // InternalSTAlgorithmParser.g:4273:1: rule__STVarTempDeclarationBlock__Group__3__Impl : ( ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__STVarTempDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4277:1: ( ( ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:4278:1: ( ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:4278:1: ( ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:4279:2: ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:4280:2: ( rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==RULE_ID) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:4280:3: rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_18);
            	    rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__4"
    // InternalSTAlgorithmParser.g:4288:1: rule__STVarTempDeclarationBlock__Group__4 : rule__STVarTempDeclarationBlock__Group__4__Impl ;
    public final void rule__STVarTempDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4292:1: ( rule__STVarTempDeclarationBlock__Group__4__Impl )
            // InternalSTAlgorithmParser.g:4293:2: rule__STVarTempDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarTempDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__4"


    // $ANTLR start "rule__STVarTempDeclarationBlock__Group__4__Impl"
    // InternalSTAlgorithmParser.g:4299:1: rule__STVarTempDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__STVarTempDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4303:1: ( ( END_VAR ) )
            // InternalSTAlgorithmParser.g:4304:1: ( END_VAR )
            {
            // InternalSTAlgorithmParser.g:4304:1: ( END_VAR )
            // InternalSTAlgorithmParser.g:4305:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__0"
    // InternalSTAlgorithmParser.g:4315:1: rule__STVarInputDeclarationBlock__Group__0 : rule__STVarInputDeclarationBlock__Group__0__Impl rule__STVarInputDeclarationBlock__Group__1 ;
    public final void rule__STVarInputDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4319:1: ( rule__STVarInputDeclarationBlock__Group__0__Impl rule__STVarInputDeclarationBlock__Group__1 )
            // InternalSTAlgorithmParser.g:4320:2: rule__STVarInputDeclarationBlock__Group__0__Impl rule__STVarInputDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STVarInputDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInputDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__0"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__0__Impl"
    // InternalSTAlgorithmParser.g:4327:1: rule__STVarInputDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__STVarInputDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4331:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:4332:1: ( () )
            {
            // InternalSTAlgorithmParser.g:4332:1: ( () )
            // InternalSTAlgorithmParser.g:4333:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getSTVarInputDeclarationBlockAction_0()); 
            }
            // InternalSTAlgorithmParser.g:4334:2: ()
            // InternalSTAlgorithmParser.g:4334:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getSTVarInputDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__1"
    // InternalSTAlgorithmParser.g:4342:1: rule__STVarInputDeclarationBlock__Group__1 : rule__STVarInputDeclarationBlock__Group__1__Impl rule__STVarInputDeclarationBlock__Group__2 ;
    public final void rule__STVarInputDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4346:1: ( rule__STVarInputDeclarationBlock__Group__1__Impl rule__STVarInputDeclarationBlock__Group__2 )
            // InternalSTAlgorithmParser.g:4347:2: rule__STVarInputDeclarationBlock__Group__1__Impl rule__STVarInputDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__STVarInputDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInputDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__1"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__1__Impl"
    // InternalSTAlgorithmParser.g:4354:1: rule__STVarInputDeclarationBlock__Group__1__Impl : ( VAR_INPUT ) ;
    public final void rule__STVarInputDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4358:1: ( ( VAR_INPUT ) )
            // InternalSTAlgorithmParser.g:4359:1: ( VAR_INPUT )
            {
            // InternalSTAlgorithmParser.g:4359:1: ( VAR_INPUT )
            // InternalSTAlgorithmParser.g:4360:2: VAR_INPUT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getVAR_INPUTKeyword_1()); 
            }
            match(input,VAR_INPUT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getVAR_INPUTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__2"
    // InternalSTAlgorithmParser.g:4369:1: rule__STVarInputDeclarationBlock__Group__2 : rule__STVarInputDeclarationBlock__Group__2__Impl rule__STVarInputDeclarationBlock__Group__3 ;
    public final void rule__STVarInputDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4373:1: ( rule__STVarInputDeclarationBlock__Group__2__Impl rule__STVarInputDeclarationBlock__Group__3 )
            // InternalSTAlgorithmParser.g:4374:2: rule__STVarInputDeclarationBlock__Group__2__Impl rule__STVarInputDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_17);
            rule__STVarInputDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInputDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__2"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__2__Impl"
    // InternalSTAlgorithmParser.g:4381:1: rule__STVarInputDeclarationBlock__Group__2__Impl : ( ( rule__STVarInputDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__STVarInputDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4385:1: ( ( ( rule__STVarInputDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTAlgorithmParser.g:4386:1: ( ( rule__STVarInputDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTAlgorithmParser.g:4386:1: ( ( rule__STVarInputDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTAlgorithmParser.g:4387:2: ( rule__STVarInputDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:4388:2: ( rule__STVarInputDeclarationBlock__ConstantAssignment_2 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==CONSTANT) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSTAlgorithmParser.g:4388:3: rule__STVarInputDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarInputDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__3"
    // InternalSTAlgorithmParser.g:4396:1: rule__STVarInputDeclarationBlock__Group__3 : rule__STVarInputDeclarationBlock__Group__3__Impl rule__STVarInputDeclarationBlock__Group__4 ;
    public final void rule__STVarInputDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4400:1: ( rule__STVarInputDeclarationBlock__Group__3__Impl rule__STVarInputDeclarationBlock__Group__4 )
            // InternalSTAlgorithmParser.g:4401:2: rule__STVarInputDeclarationBlock__Group__3__Impl rule__STVarInputDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__STVarInputDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInputDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__3"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__3__Impl"
    // InternalSTAlgorithmParser.g:4408:1: rule__STVarInputDeclarationBlock__Group__3__Impl : ( ( rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__STVarInputDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4412:1: ( ( ( rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:4413:1: ( ( rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:4413:1: ( ( rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:4414:2: ( rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:4415:2: ( rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==RULE_ID) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:4415:3: rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_18);
            	    rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__4"
    // InternalSTAlgorithmParser.g:4423:1: rule__STVarInputDeclarationBlock__Group__4 : rule__STVarInputDeclarationBlock__Group__4__Impl ;
    public final void rule__STVarInputDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4427:1: ( rule__STVarInputDeclarationBlock__Group__4__Impl )
            // InternalSTAlgorithmParser.g:4428:2: rule__STVarInputDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarInputDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__4"


    // $ANTLR start "rule__STVarInputDeclarationBlock__Group__4__Impl"
    // InternalSTAlgorithmParser.g:4434:1: rule__STVarInputDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__STVarInputDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4438:1: ( ( END_VAR ) )
            // InternalSTAlgorithmParser.g:4439:1: ( END_VAR )
            {
            // InternalSTAlgorithmParser.g:4439:1: ( END_VAR )
            // InternalSTAlgorithmParser.g:4440:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__0"
    // InternalSTAlgorithmParser.g:4450:1: rule__STVarOutputDeclarationBlock__Group__0 : rule__STVarOutputDeclarationBlock__Group__0__Impl rule__STVarOutputDeclarationBlock__Group__1 ;
    public final void rule__STVarOutputDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4454:1: ( rule__STVarOutputDeclarationBlock__Group__0__Impl rule__STVarOutputDeclarationBlock__Group__1 )
            // InternalSTAlgorithmParser.g:4455:2: rule__STVarOutputDeclarationBlock__Group__0__Impl rule__STVarOutputDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__STVarOutputDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarOutputDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__0"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__0__Impl"
    // InternalSTAlgorithmParser.g:4462:1: rule__STVarOutputDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__STVarOutputDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4466:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:4467:1: ( () )
            {
            // InternalSTAlgorithmParser.g:4467:1: ( () )
            // InternalSTAlgorithmParser.g:4468:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getSTVarOutputDeclarationBlockAction_0()); 
            }
            // InternalSTAlgorithmParser.g:4469:2: ()
            // InternalSTAlgorithmParser.g:4469:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getSTVarOutputDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__1"
    // InternalSTAlgorithmParser.g:4477:1: rule__STVarOutputDeclarationBlock__Group__1 : rule__STVarOutputDeclarationBlock__Group__1__Impl rule__STVarOutputDeclarationBlock__Group__2 ;
    public final void rule__STVarOutputDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4481:1: ( rule__STVarOutputDeclarationBlock__Group__1__Impl rule__STVarOutputDeclarationBlock__Group__2 )
            // InternalSTAlgorithmParser.g:4482:2: rule__STVarOutputDeclarationBlock__Group__1__Impl rule__STVarOutputDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__STVarOutputDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarOutputDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__1"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__1__Impl"
    // InternalSTAlgorithmParser.g:4489:1: rule__STVarOutputDeclarationBlock__Group__1__Impl : ( VAR_OUTPUT ) ;
    public final void rule__STVarOutputDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4493:1: ( ( VAR_OUTPUT ) )
            // InternalSTAlgorithmParser.g:4494:1: ( VAR_OUTPUT )
            {
            // InternalSTAlgorithmParser.g:4494:1: ( VAR_OUTPUT )
            // InternalSTAlgorithmParser.g:4495:2: VAR_OUTPUT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getVAR_OUTPUTKeyword_1()); 
            }
            match(input,VAR_OUTPUT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getVAR_OUTPUTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__2"
    // InternalSTAlgorithmParser.g:4504:1: rule__STVarOutputDeclarationBlock__Group__2 : rule__STVarOutputDeclarationBlock__Group__2__Impl rule__STVarOutputDeclarationBlock__Group__3 ;
    public final void rule__STVarOutputDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4508:1: ( rule__STVarOutputDeclarationBlock__Group__2__Impl rule__STVarOutputDeclarationBlock__Group__3 )
            // InternalSTAlgorithmParser.g:4509:2: rule__STVarOutputDeclarationBlock__Group__2__Impl rule__STVarOutputDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_17);
            rule__STVarOutputDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarOutputDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__2"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__2__Impl"
    // InternalSTAlgorithmParser.g:4516:1: rule__STVarOutputDeclarationBlock__Group__2__Impl : ( ( rule__STVarOutputDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__STVarOutputDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4520:1: ( ( ( rule__STVarOutputDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTAlgorithmParser.g:4521:1: ( ( rule__STVarOutputDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTAlgorithmParser.g:4521:1: ( ( rule__STVarOutputDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTAlgorithmParser.g:4522:2: ( rule__STVarOutputDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:4523:2: ( rule__STVarOutputDeclarationBlock__ConstantAssignment_2 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==CONSTANT) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalSTAlgorithmParser.g:4523:3: rule__STVarOutputDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarOutputDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__3"
    // InternalSTAlgorithmParser.g:4531:1: rule__STVarOutputDeclarationBlock__Group__3 : rule__STVarOutputDeclarationBlock__Group__3__Impl rule__STVarOutputDeclarationBlock__Group__4 ;
    public final void rule__STVarOutputDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4535:1: ( rule__STVarOutputDeclarationBlock__Group__3__Impl rule__STVarOutputDeclarationBlock__Group__4 )
            // InternalSTAlgorithmParser.g:4536:2: rule__STVarOutputDeclarationBlock__Group__3__Impl rule__STVarOutputDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__STVarOutputDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarOutputDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__3"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__3__Impl"
    // InternalSTAlgorithmParser.g:4543:1: rule__STVarOutputDeclarationBlock__Group__3__Impl : ( ( rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__STVarOutputDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4547:1: ( ( ( rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:4548:1: ( ( rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:4548:1: ( ( rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:4549:2: ( rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:4550:2: ( rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==RULE_ID) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:4550:3: rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_18);
            	    rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__4"
    // InternalSTAlgorithmParser.g:4558:1: rule__STVarOutputDeclarationBlock__Group__4 : rule__STVarOutputDeclarationBlock__Group__4__Impl ;
    public final void rule__STVarOutputDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4562:1: ( rule__STVarOutputDeclarationBlock__Group__4__Impl )
            // InternalSTAlgorithmParser.g:4563:2: rule__STVarOutputDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarOutputDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__4"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__Group__4__Impl"
    // InternalSTAlgorithmParser.g:4569:1: rule__STVarOutputDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__STVarOutputDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4573:1: ( ( END_VAR ) )
            // InternalSTAlgorithmParser.g:4574:1: ( END_VAR )
            {
            // InternalSTAlgorithmParser.g:4574:1: ( END_VAR )
            // InternalSTAlgorithmParser.g:4575:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__0"
    // InternalSTAlgorithmParser.g:4585:1: rule__STVarInOutDeclarationBlock__Group__0 : rule__STVarInOutDeclarationBlock__Group__0__Impl rule__STVarInOutDeclarationBlock__Group__1 ;
    public final void rule__STVarInOutDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4589:1: ( rule__STVarInOutDeclarationBlock__Group__0__Impl rule__STVarInOutDeclarationBlock__Group__1 )
            // InternalSTAlgorithmParser.g:4590:2: rule__STVarInOutDeclarationBlock__Group__0__Impl rule__STVarInOutDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__STVarInOutDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInOutDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__0"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__0__Impl"
    // InternalSTAlgorithmParser.g:4597:1: rule__STVarInOutDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__STVarInOutDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4601:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:4602:1: ( () )
            {
            // InternalSTAlgorithmParser.g:4602:1: ( () )
            // InternalSTAlgorithmParser.g:4603:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getSTVarInOutDeclarationBlockAction_0()); 
            }
            // InternalSTAlgorithmParser.g:4604:2: ()
            // InternalSTAlgorithmParser.g:4604:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getSTVarInOutDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__1"
    // InternalSTAlgorithmParser.g:4612:1: rule__STVarInOutDeclarationBlock__Group__1 : rule__STVarInOutDeclarationBlock__Group__1__Impl rule__STVarInOutDeclarationBlock__Group__2 ;
    public final void rule__STVarInOutDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4616:1: ( rule__STVarInOutDeclarationBlock__Group__1__Impl rule__STVarInOutDeclarationBlock__Group__2 )
            // InternalSTAlgorithmParser.g:4617:2: rule__STVarInOutDeclarationBlock__Group__1__Impl rule__STVarInOutDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__STVarInOutDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInOutDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__1"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__1__Impl"
    // InternalSTAlgorithmParser.g:4624:1: rule__STVarInOutDeclarationBlock__Group__1__Impl : ( VAR_IN_OUT ) ;
    public final void rule__STVarInOutDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4628:1: ( ( VAR_IN_OUT ) )
            // InternalSTAlgorithmParser.g:4629:1: ( VAR_IN_OUT )
            {
            // InternalSTAlgorithmParser.g:4629:1: ( VAR_IN_OUT )
            // InternalSTAlgorithmParser.g:4630:2: VAR_IN_OUT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getVAR_IN_OUTKeyword_1()); 
            }
            match(input,VAR_IN_OUT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getVAR_IN_OUTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__2"
    // InternalSTAlgorithmParser.g:4639:1: rule__STVarInOutDeclarationBlock__Group__2 : rule__STVarInOutDeclarationBlock__Group__2__Impl rule__STVarInOutDeclarationBlock__Group__3 ;
    public final void rule__STVarInOutDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4643:1: ( rule__STVarInOutDeclarationBlock__Group__2__Impl rule__STVarInOutDeclarationBlock__Group__3 )
            // InternalSTAlgorithmParser.g:4644:2: rule__STVarInOutDeclarationBlock__Group__2__Impl rule__STVarInOutDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_17);
            rule__STVarInOutDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInOutDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__2"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__2__Impl"
    // InternalSTAlgorithmParser.g:4651:1: rule__STVarInOutDeclarationBlock__Group__2__Impl : ( ( rule__STVarInOutDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__STVarInOutDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4655:1: ( ( ( rule__STVarInOutDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTAlgorithmParser.g:4656:1: ( ( rule__STVarInOutDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTAlgorithmParser.g:4656:1: ( ( rule__STVarInOutDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTAlgorithmParser.g:4657:2: ( rule__STVarInOutDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:4658:2: ( rule__STVarInOutDeclarationBlock__ConstantAssignment_2 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==CONSTANT) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalSTAlgorithmParser.g:4658:3: rule__STVarInOutDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarInOutDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__3"
    // InternalSTAlgorithmParser.g:4666:1: rule__STVarInOutDeclarationBlock__Group__3 : rule__STVarInOutDeclarationBlock__Group__3__Impl rule__STVarInOutDeclarationBlock__Group__4 ;
    public final void rule__STVarInOutDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4670:1: ( rule__STVarInOutDeclarationBlock__Group__3__Impl rule__STVarInOutDeclarationBlock__Group__4 )
            // InternalSTAlgorithmParser.g:4671:2: rule__STVarInOutDeclarationBlock__Group__3__Impl rule__STVarInOutDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__STVarInOutDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarInOutDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__3"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__3__Impl"
    // InternalSTAlgorithmParser.g:4678:1: rule__STVarInOutDeclarationBlock__Group__3__Impl : ( ( rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__STVarInOutDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4682:1: ( ( ( rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:4683:1: ( ( rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:4683:1: ( ( rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:4684:2: ( rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:4685:2: ( rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==RULE_ID) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:4685:3: rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_18);
            	    rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__4"
    // InternalSTAlgorithmParser.g:4693:1: rule__STVarInOutDeclarationBlock__Group__4 : rule__STVarInOutDeclarationBlock__Group__4__Impl ;
    public final void rule__STVarInOutDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4697:1: ( rule__STVarInOutDeclarationBlock__Group__4__Impl )
            // InternalSTAlgorithmParser.g:4698:2: rule__STVarInOutDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarInOutDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__4"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__Group__4__Impl"
    // InternalSTAlgorithmParser.g:4704:1: rule__STVarInOutDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__STVarInOutDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4708:1: ( ( END_VAR ) )
            // InternalSTAlgorithmParser.g:4709:1: ( END_VAR )
            {
            // InternalSTAlgorithmParser.g:4709:1: ( END_VAR )
            // InternalSTAlgorithmParser.g:4710:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__0"
    // InternalSTAlgorithmParser.g:4720:1: rule__STVarDeclaration__Group__0 : rule__STVarDeclaration__Group__0__Impl rule__STVarDeclaration__Group__1 ;
    public final void rule__STVarDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4724:1: ( rule__STVarDeclaration__Group__0__Impl rule__STVarDeclaration__Group__1 )
            // InternalSTAlgorithmParser.g:4725:2: rule__STVarDeclaration__Group__0__Impl rule__STVarDeclaration__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__STVarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__0"


    // $ANTLR start "rule__STVarDeclaration__Group__0__Impl"
    // InternalSTAlgorithmParser.g:4732:1: rule__STVarDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__STVarDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4736:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:4737:1: ( () )
            {
            // InternalSTAlgorithmParser.g:4737:1: ( () )
            // InternalSTAlgorithmParser.g:4738:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getSTVarDeclarationAction_0()); 
            }
            // InternalSTAlgorithmParser.g:4739:2: ()
            // InternalSTAlgorithmParser.g:4739:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getSTVarDeclarationAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__1"
    // InternalSTAlgorithmParser.g:4747:1: rule__STVarDeclaration__Group__1 : rule__STVarDeclaration__Group__1__Impl rule__STVarDeclaration__Group__2 ;
    public final void rule__STVarDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4751:1: ( rule__STVarDeclaration__Group__1__Impl rule__STVarDeclaration__Group__2 )
            // InternalSTAlgorithmParser.g:4752:2: rule__STVarDeclaration__Group__1__Impl rule__STVarDeclaration__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__STVarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__1"


    // $ANTLR start "rule__STVarDeclaration__Group__1__Impl"
    // InternalSTAlgorithmParser.g:4759:1: rule__STVarDeclaration__Group__1__Impl : ( ( rule__STVarDeclaration__NameAssignment_1 ) ) ;
    public final void rule__STVarDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4763:1: ( ( ( rule__STVarDeclaration__NameAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:4764:1: ( ( rule__STVarDeclaration__NameAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:4764:1: ( ( rule__STVarDeclaration__NameAssignment_1 ) )
            // InternalSTAlgorithmParser.g:4765:2: ( rule__STVarDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:4766:2: ( rule__STVarDeclaration__NameAssignment_1 )
            // InternalSTAlgorithmParser.g:4766:3: rule__STVarDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__2"
    // InternalSTAlgorithmParser.g:4774:1: rule__STVarDeclaration__Group__2 : rule__STVarDeclaration__Group__2__Impl rule__STVarDeclaration__Group__3 ;
    public final void rule__STVarDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4778:1: ( rule__STVarDeclaration__Group__2__Impl rule__STVarDeclaration__Group__3 )
            // InternalSTAlgorithmParser.g:4779:2: rule__STVarDeclaration__Group__2__Impl rule__STVarDeclaration__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__STVarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__2"


    // $ANTLR start "rule__STVarDeclaration__Group__2__Impl"
    // InternalSTAlgorithmParser.g:4786:1: rule__STVarDeclaration__Group__2__Impl : ( ( rule__STVarDeclaration__Group_2__0 )? ) ;
    public final void rule__STVarDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4790:1: ( ( ( rule__STVarDeclaration__Group_2__0 )? ) )
            // InternalSTAlgorithmParser.g:4791:1: ( ( rule__STVarDeclaration__Group_2__0 )? )
            {
            // InternalSTAlgorithmParser.g:4791:1: ( ( rule__STVarDeclaration__Group_2__0 )? )
            // InternalSTAlgorithmParser.g:4792:2: ( rule__STVarDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_2()); 
            }
            // InternalSTAlgorithmParser.g:4793:2: ( rule__STVarDeclaration__Group_2__0 )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==AT) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalSTAlgorithmParser.g:4793:3: rule__STVarDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__3"
    // InternalSTAlgorithmParser.g:4801:1: rule__STVarDeclaration__Group__3 : rule__STVarDeclaration__Group__3__Impl rule__STVarDeclaration__Group__4 ;
    public final void rule__STVarDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4805:1: ( rule__STVarDeclaration__Group__3__Impl rule__STVarDeclaration__Group__4 )
            // InternalSTAlgorithmParser.g:4806:2: rule__STVarDeclaration__Group__3__Impl rule__STVarDeclaration__Group__4
            {
            pushFollow(FOLLOW_23);
            rule__STVarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__3"


    // $ANTLR start "rule__STVarDeclaration__Group__3__Impl"
    // InternalSTAlgorithmParser.g:4813:1: rule__STVarDeclaration__Group__3__Impl : ( Colon ) ;
    public final void rule__STVarDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4817:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:4818:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:4818:1: ( Colon )
            // InternalSTAlgorithmParser.g:4819:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__4"
    // InternalSTAlgorithmParser.g:4828:1: rule__STVarDeclaration__Group__4 : rule__STVarDeclaration__Group__4__Impl rule__STVarDeclaration__Group__5 ;
    public final void rule__STVarDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4832:1: ( rule__STVarDeclaration__Group__4__Impl rule__STVarDeclaration__Group__5 )
            // InternalSTAlgorithmParser.g:4833:2: rule__STVarDeclaration__Group__4__Impl rule__STVarDeclaration__Group__5
            {
            pushFollow(FOLLOW_23);
            rule__STVarDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__4"


    // $ANTLR start "rule__STVarDeclaration__Group__4__Impl"
    // InternalSTAlgorithmParser.g:4840:1: rule__STVarDeclaration__Group__4__Impl : ( ( rule__STVarDeclaration__Group_4__0 )? ) ;
    public final void rule__STVarDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4844:1: ( ( ( rule__STVarDeclaration__Group_4__0 )? ) )
            // InternalSTAlgorithmParser.g:4845:1: ( ( rule__STVarDeclaration__Group_4__0 )? )
            {
            // InternalSTAlgorithmParser.g:4845:1: ( ( rule__STVarDeclaration__Group_4__0 )? )
            // InternalSTAlgorithmParser.g:4846:2: ( rule__STVarDeclaration__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_4()); 
            }
            // InternalSTAlgorithmParser.g:4847:2: ( rule__STVarDeclaration__Group_4__0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==ARRAY) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalSTAlgorithmParser.g:4847:3: rule__STVarDeclaration__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__4__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__5"
    // InternalSTAlgorithmParser.g:4855:1: rule__STVarDeclaration__Group__5 : rule__STVarDeclaration__Group__5__Impl rule__STVarDeclaration__Group__6 ;
    public final void rule__STVarDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4859:1: ( rule__STVarDeclaration__Group__5__Impl rule__STVarDeclaration__Group__6 )
            // InternalSTAlgorithmParser.g:4860:2: rule__STVarDeclaration__Group__5__Impl rule__STVarDeclaration__Group__6
            {
            pushFollow(FOLLOW_24);
            rule__STVarDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__5"


    // $ANTLR start "rule__STVarDeclaration__Group__5__Impl"
    // InternalSTAlgorithmParser.g:4867:1: rule__STVarDeclaration__Group__5__Impl : ( ( rule__STVarDeclaration__TypeAssignment_5 ) ) ;
    public final void rule__STVarDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4871:1: ( ( ( rule__STVarDeclaration__TypeAssignment_5 ) ) )
            // InternalSTAlgorithmParser.g:4872:1: ( ( rule__STVarDeclaration__TypeAssignment_5 ) )
            {
            // InternalSTAlgorithmParser.g:4872:1: ( ( rule__STVarDeclaration__TypeAssignment_5 ) )
            // InternalSTAlgorithmParser.g:4873:2: ( rule__STVarDeclaration__TypeAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getTypeAssignment_5()); 
            }
            // InternalSTAlgorithmParser.g:4874:2: ( rule__STVarDeclaration__TypeAssignment_5 )
            // InternalSTAlgorithmParser.g:4874:3: rule__STVarDeclaration__TypeAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__TypeAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getTypeAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__5__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__6"
    // InternalSTAlgorithmParser.g:4882:1: rule__STVarDeclaration__Group__6 : rule__STVarDeclaration__Group__6__Impl rule__STVarDeclaration__Group__7 ;
    public final void rule__STVarDeclaration__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4886:1: ( rule__STVarDeclaration__Group__6__Impl rule__STVarDeclaration__Group__7 )
            // InternalSTAlgorithmParser.g:4887:2: rule__STVarDeclaration__Group__6__Impl rule__STVarDeclaration__Group__7
            {
            pushFollow(FOLLOW_24);
            rule__STVarDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__6"


    // $ANTLR start "rule__STVarDeclaration__Group__6__Impl"
    // InternalSTAlgorithmParser.g:4894:1: rule__STVarDeclaration__Group__6__Impl : ( ( rule__STVarDeclaration__Group_6__0 )? ) ;
    public final void rule__STVarDeclaration__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4898:1: ( ( ( rule__STVarDeclaration__Group_6__0 )? ) )
            // InternalSTAlgorithmParser.g:4899:1: ( ( rule__STVarDeclaration__Group_6__0 )? )
            {
            // InternalSTAlgorithmParser.g:4899:1: ( ( rule__STVarDeclaration__Group_6__0 )? )
            // InternalSTAlgorithmParser.g:4900:2: ( rule__STVarDeclaration__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_6()); 
            }
            // InternalSTAlgorithmParser.g:4901:2: ( rule__STVarDeclaration__Group_6__0 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==LeftSquareBracket) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalSTAlgorithmParser.g:4901:3: rule__STVarDeclaration__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__6__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__7"
    // InternalSTAlgorithmParser.g:4909:1: rule__STVarDeclaration__Group__7 : rule__STVarDeclaration__Group__7__Impl rule__STVarDeclaration__Group__8 ;
    public final void rule__STVarDeclaration__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4913:1: ( rule__STVarDeclaration__Group__7__Impl rule__STVarDeclaration__Group__8 )
            // InternalSTAlgorithmParser.g:4914:2: rule__STVarDeclaration__Group__7__Impl rule__STVarDeclaration__Group__8
            {
            pushFollow(FOLLOW_24);
            rule__STVarDeclaration__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__7"


    // $ANTLR start "rule__STVarDeclaration__Group__7__Impl"
    // InternalSTAlgorithmParser.g:4921:1: rule__STVarDeclaration__Group__7__Impl : ( ( rule__STVarDeclaration__Group_7__0 )? ) ;
    public final void rule__STVarDeclaration__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4925:1: ( ( ( rule__STVarDeclaration__Group_7__0 )? ) )
            // InternalSTAlgorithmParser.g:4926:1: ( ( rule__STVarDeclaration__Group_7__0 )? )
            {
            // InternalSTAlgorithmParser.g:4926:1: ( ( rule__STVarDeclaration__Group_7__0 )? )
            // InternalSTAlgorithmParser.g:4927:2: ( rule__STVarDeclaration__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_7()); 
            }
            // InternalSTAlgorithmParser.g:4928:2: ( rule__STVarDeclaration__Group_7__0 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==ColonEqualsSign) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalSTAlgorithmParser.g:4928:3: rule__STVarDeclaration__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STVarDeclaration__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__7__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group__8"
    // InternalSTAlgorithmParser.g:4936:1: rule__STVarDeclaration__Group__8 : rule__STVarDeclaration__Group__8__Impl ;
    public final void rule__STVarDeclaration__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4940:1: ( rule__STVarDeclaration__Group__8__Impl )
            // InternalSTAlgorithmParser.g:4941:2: rule__STVarDeclaration__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__8"


    // $ANTLR start "rule__STVarDeclaration__Group__8__Impl"
    // InternalSTAlgorithmParser.g:4947:1: rule__STVarDeclaration__Group__8__Impl : ( Semicolon ) ;
    public final void rule__STVarDeclaration__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4951:1: ( ( Semicolon ) )
            // InternalSTAlgorithmParser.g:4952:1: ( Semicolon )
            {
            // InternalSTAlgorithmParser.g:4952:1: ( Semicolon )
            // InternalSTAlgorithmParser.g:4953:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getSemicolonKeyword_8()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getSemicolonKeyword_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group__8__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_2__0"
    // InternalSTAlgorithmParser.g:4963:1: rule__STVarDeclaration__Group_2__0 : rule__STVarDeclaration__Group_2__0__Impl rule__STVarDeclaration__Group_2__1 ;
    public final void rule__STVarDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4967:1: ( rule__STVarDeclaration__Group_2__0__Impl rule__STVarDeclaration__Group_2__1 )
            // InternalSTAlgorithmParser.g:4968:2: rule__STVarDeclaration__Group_2__0__Impl rule__STVarDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__STVarDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__0"


    // $ANTLR start "rule__STVarDeclaration__Group_2__0__Impl"
    // InternalSTAlgorithmParser.g:4975:1: rule__STVarDeclaration__Group_2__0__Impl : ( AT ) ;
    public final void rule__STVarDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4979:1: ( ( AT ) )
            // InternalSTAlgorithmParser.g:4980:1: ( AT )
            {
            // InternalSTAlgorithmParser.g:4980:1: ( AT )
            // InternalSTAlgorithmParser.g:4981:2: AT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getATKeyword_2_0()); 
            }
            match(input,AT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getATKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_2__1"
    // InternalSTAlgorithmParser.g:4990:1: rule__STVarDeclaration__Group_2__1 : rule__STVarDeclaration__Group_2__1__Impl ;
    public final void rule__STVarDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:4994:1: ( rule__STVarDeclaration__Group_2__1__Impl )
            // InternalSTAlgorithmParser.g:4995:2: rule__STVarDeclaration__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__1"


    // $ANTLR start "rule__STVarDeclaration__Group_2__1__Impl"
    // InternalSTAlgorithmParser.g:5001:1: rule__STVarDeclaration__Group_2__1__Impl : ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) ) ;
    public final void rule__STVarDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5005:1: ( ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) ) )
            // InternalSTAlgorithmParser.g:5006:1: ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:5006:1: ( ( rule__STVarDeclaration__LocatedAtAssignment_2_1 ) )
            // InternalSTAlgorithmParser.g:5007:2: ( rule__STVarDeclaration__LocatedAtAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLocatedAtAssignment_2_1()); 
            }
            // InternalSTAlgorithmParser.g:5008:2: ( rule__STVarDeclaration__LocatedAtAssignment_2_1 )
            // InternalSTAlgorithmParser.g:5008:3: rule__STVarDeclaration__LocatedAtAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__LocatedAtAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLocatedAtAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4__0"
    // InternalSTAlgorithmParser.g:5017:1: rule__STVarDeclaration__Group_4__0 : rule__STVarDeclaration__Group_4__0__Impl rule__STVarDeclaration__Group_4__1 ;
    public final void rule__STVarDeclaration__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5021:1: ( rule__STVarDeclaration__Group_4__0__Impl rule__STVarDeclaration__Group_4__1 )
            // InternalSTAlgorithmParser.g:5022:2: rule__STVarDeclaration__Group_4__0__Impl rule__STVarDeclaration__Group_4__1
            {
            pushFollow(FOLLOW_25);
            rule__STVarDeclaration__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4__0__Impl"
    // InternalSTAlgorithmParser.g:5029:1: rule__STVarDeclaration__Group_4__0__Impl : ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) ) ;
    public final void rule__STVarDeclaration__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5033:1: ( ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) ) )
            // InternalSTAlgorithmParser.g:5034:1: ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) )
            {
            // InternalSTAlgorithmParser.g:5034:1: ( ( rule__STVarDeclaration__ArrayAssignment_4_0 ) )
            // InternalSTAlgorithmParser.g:5035:2: ( rule__STVarDeclaration__ArrayAssignment_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getArrayAssignment_4_0()); 
            }
            // InternalSTAlgorithmParser.g:5036:2: ( rule__STVarDeclaration__ArrayAssignment_4_0 )
            // InternalSTAlgorithmParser.g:5036:3: rule__STVarDeclaration__ArrayAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__ArrayAssignment_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getArrayAssignment_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4__1"
    // InternalSTAlgorithmParser.g:5044:1: rule__STVarDeclaration__Group_4__1 : rule__STVarDeclaration__Group_4__1__Impl rule__STVarDeclaration__Group_4__2 ;
    public final void rule__STVarDeclaration__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5048:1: ( rule__STVarDeclaration__Group_4__1__Impl rule__STVarDeclaration__Group_4__2 )
            // InternalSTAlgorithmParser.g:5049:2: rule__STVarDeclaration__Group_4__1__Impl rule__STVarDeclaration__Group_4__2
            {
            pushFollow(FOLLOW_26);
            rule__STVarDeclaration__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4__1__Impl"
    // InternalSTAlgorithmParser.g:5056:1: rule__STVarDeclaration__Group_4__1__Impl : ( ( rule__STVarDeclaration__Alternatives_4_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5060:1: ( ( ( rule__STVarDeclaration__Alternatives_4_1 ) ) )
            // InternalSTAlgorithmParser.g:5061:1: ( ( rule__STVarDeclaration__Alternatives_4_1 ) )
            {
            // InternalSTAlgorithmParser.g:5061:1: ( ( rule__STVarDeclaration__Alternatives_4_1 ) )
            // InternalSTAlgorithmParser.g:5062:2: ( rule__STVarDeclaration__Alternatives_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getAlternatives_4_1()); 
            }
            // InternalSTAlgorithmParser.g:5063:2: ( rule__STVarDeclaration__Alternatives_4_1 )
            // InternalSTAlgorithmParser.g:5063:3: rule__STVarDeclaration__Alternatives_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Alternatives_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getAlternatives_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4__2"
    // InternalSTAlgorithmParser.g:5071:1: rule__STVarDeclaration__Group_4__2 : rule__STVarDeclaration__Group_4__2__Impl ;
    public final void rule__STVarDeclaration__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5075:1: ( rule__STVarDeclaration__Group_4__2__Impl )
            // InternalSTAlgorithmParser.g:5076:2: rule__STVarDeclaration__Group_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__2"


    // $ANTLR start "rule__STVarDeclaration__Group_4__2__Impl"
    // InternalSTAlgorithmParser.g:5082:1: rule__STVarDeclaration__Group_4__2__Impl : ( OF ) ;
    public final void rule__STVarDeclaration__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5086:1: ( ( OF ) )
            // InternalSTAlgorithmParser.g:5087:1: ( OF )
            {
            // InternalSTAlgorithmParser.g:5087:1: ( OF )
            // InternalSTAlgorithmParser.g:5088:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getOFKeyword_4_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getOFKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__0"
    // InternalSTAlgorithmParser.g:5098:1: rule__STVarDeclaration__Group_4_1_0__0 : rule__STVarDeclaration__Group_4_1_0__0__Impl rule__STVarDeclaration__Group_4_1_0__1 ;
    public final void rule__STVarDeclaration__Group_4_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5102:1: ( rule__STVarDeclaration__Group_4_1_0__0__Impl rule__STVarDeclaration__Group_4_1_0__1 )
            // InternalSTAlgorithmParser.g:5103:2: rule__STVarDeclaration__Group_4_1_0__0__Impl rule__STVarDeclaration__Group_4_1_0__1
            {
            pushFollow(FOLLOW_14);
            rule__STVarDeclaration__Group_4_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:5110:1: rule__STVarDeclaration__Group_4_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5114:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:5115:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:5115:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:5116:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__1"
    // InternalSTAlgorithmParser.g:5125:1: rule__STVarDeclaration__Group_4_1_0__1 : rule__STVarDeclaration__Group_4_1_0__1__Impl rule__STVarDeclaration__Group_4_1_0__2 ;
    public final void rule__STVarDeclaration__Group_4_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5129:1: ( rule__STVarDeclaration__Group_4_1_0__1__Impl rule__STVarDeclaration__Group_4_1_0__2 )
            // InternalSTAlgorithmParser.g:5130:2: rule__STVarDeclaration__Group_4_1_0__1__Impl rule__STVarDeclaration__Group_4_1_0__2
            {
            pushFollow(FOLLOW_27);
            rule__STVarDeclaration__Group_4_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:5137:1: rule__STVarDeclaration__Group_4_1_0__1__Impl : ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5141:1: ( ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:5142:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:5142:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 ) )
            // InternalSTAlgorithmParser.g:5143:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:5144:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_1 )
            // InternalSTAlgorithmParser.g:5144:3: rule__STVarDeclaration__RangesAssignment_4_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__RangesAssignment_4_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__2"
    // InternalSTAlgorithmParser.g:5152:1: rule__STVarDeclaration__Group_4_1_0__2 : rule__STVarDeclaration__Group_4_1_0__2__Impl rule__STVarDeclaration__Group_4_1_0__3 ;
    public final void rule__STVarDeclaration__Group_4_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5156:1: ( rule__STVarDeclaration__Group_4_1_0__2__Impl rule__STVarDeclaration__Group_4_1_0__3 )
            // InternalSTAlgorithmParser.g:5157:2: rule__STVarDeclaration__Group_4_1_0__2__Impl rule__STVarDeclaration__Group_4_1_0__3
            {
            pushFollow(FOLLOW_27);
            rule__STVarDeclaration__Group_4_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__2"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__2__Impl"
    // InternalSTAlgorithmParser.g:5164:1: rule__STVarDeclaration__Group_4_1_0__2__Impl : ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5168:1: ( ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* ) )
            // InternalSTAlgorithmParser.g:5169:1: ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* )
            {
            // InternalSTAlgorithmParser.g:5169:1: ( ( rule__STVarDeclaration__Group_4_1_0_2__0 )* )
            // InternalSTAlgorithmParser.g:5170:2: ( rule__STVarDeclaration__Group_4_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0_2()); 
            }
            // InternalSTAlgorithmParser.g:5171:2: ( rule__STVarDeclaration__Group_4_1_0_2__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==Comma) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:5171:3: rule__STVarDeclaration__Group_4_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STVarDeclaration__Group_4_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__3"
    // InternalSTAlgorithmParser.g:5179:1: rule__STVarDeclaration__Group_4_1_0__3 : rule__STVarDeclaration__Group_4_1_0__3__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5183:1: ( rule__STVarDeclaration__Group_4_1_0__3__Impl )
            // InternalSTAlgorithmParser.g:5184:2: rule__STVarDeclaration__Group_4_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__3"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0__3__Impl"
    // InternalSTAlgorithmParser.g:5190:1: rule__STVarDeclaration__Group_4_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5194:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:5195:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:5195:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:5196:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0__3__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__0"
    // InternalSTAlgorithmParser.g:5206:1: rule__STVarDeclaration__Group_4_1_0_2__0 : rule__STVarDeclaration__Group_4_1_0_2__0__Impl rule__STVarDeclaration__Group_4_1_0_2__1 ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5210:1: ( rule__STVarDeclaration__Group_4_1_0_2__0__Impl rule__STVarDeclaration__Group_4_1_0_2__1 )
            // InternalSTAlgorithmParser.g:5211:2: rule__STVarDeclaration__Group_4_1_0_2__0__Impl rule__STVarDeclaration__Group_4_1_0_2__1
            {
            pushFollow(FOLLOW_14);
            rule__STVarDeclaration__Group_4_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__0__Impl"
    // InternalSTAlgorithmParser.g:5218:1: rule__STVarDeclaration__Group_4_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5222:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:5223:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:5223:1: ( Comma )
            // InternalSTAlgorithmParser.g:5224:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__1"
    // InternalSTAlgorithmParser.g:5233:1: rule__STVarDeclaration__Group_4_1_0_2__1 : rule__STVarDeclaration__Group_4_1_0_2__1__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5237:1: ( rule__STVarDeclaration__Group_4_1_0_2__1__Impl )
            // InternalSTAlgorithmParser.g:5238:2: rule__STVarDeclaration__Group_4_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_0_2__1__Impl"
    // InternalSTAlgorithmParser.g:5244:1: rule__STVarDeclaration__Group_4_1_0_2__1__Impl : ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5248:1: ( ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) ) )
            // InternalSTAlgorithmParser.g:5249:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:5249:1: ( ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 ) )
            // InternalSTAlgorithmParser.g:5250:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_2_1()); 
            }
            // InternalSTAlgorithmParser.g:5251:2: ( rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 )
            // InternalSTAlgorithmParser.g:5251:3: rule__STVarDeclaration__RangesAssignment_4_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__RangesAssignment_4_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesAssignment_4_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_0_2__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__0"
    // InternalSTAlgorithmParser.g:5260:1: rule__STVarDeclaration__Group_4_1_1__0 : rule__STVarDeclaration__Group_4_1_1__0__Impl rule__STVarDeclaration__Group_4_1_1__1 ;
    public final void rule__STVarDeclaration__Group_4_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5264:1: ( rule__STVarDeclaration__Group_4_1_1__0__Impl rule__STVarDeclaration__Group_4_1_1__1 )
            // InternalSTAlgorithmParser.g:5265:2: rule__STVarDeclaration__Group_4_1_1__0__Impl rule__STVarDeclaration__Group_4_1_1__1
            {
            pushFollow(FOLLOW_29);
            rule__STVarDeclaration__Group_4_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__0__Impl"
    // InternalSTAlgorithmParser.g:5272:1: rule__STVarDeclaration__Group_4_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5276:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:5277:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:5277:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:5278:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__1"
    // InternalSTAlgorithmParser.g:5287:1: rule__STVarDeclaration__Group_4_1_1__1 : rule__STVarDeclaration__Group_4_1_1__1__Impl rule__STVarDeclaration__Group_4_1_1__2 ;
    public final void rule__STVarDeclaration__Group_4_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5291:1: ( rule__STVarDeclaration__Group_4_1_1__1__Impl rule__STVarDeclaration__Group_4_1_1__2 )
            // InternalSTAlgorithmParser.g:5292:2: rule__STVarDeclaration__Group_4_1_1__1__Impl rule__STVarDeclaration__Group_4_1_1__2
            {
            pushFollow(FOLLOW_27);
            rule__STVarDeclaration__Group_4_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__1__Impl"
    // InternalSTAlgorithmParser.g:5299:1: rule__STVarDeclaration__Group_4_1_1__1__Impl : ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5303:1: ( ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) ) )
            // InternalSTAlgorithmParser.g:5304:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:5304:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_1 ) )
            // InternalSTAlgorithmParser.g:5305:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_1()); 
            }
            // InternalSTAlgorithmParser.g:5306:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_1 )
            // InternalSTAlgorithmParser.g:5306:3: rule__STVarDeclaration__CountAssignment_4_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__CountAssignment_4_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__2"
    // InternalSTAlgorithmParser.g:5314:1: rule__STVarDeclaration__Group_4_1_1__2 : rule__STVarDeclaration__Group_4_1_1__2__Impl rule__STVarDeclaration__Group_4_1_1__3 ;
    public final void rule__STVarDeclaration__Group_4_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5318:1: ( rule__STVarDeclaration__Group_4_1_1__2__Impl rule__STVarDeclaration__Group_4_1_1__3 )
            // InternalSTAlgorithmParser.g:5319:2: rule__STVarDeclaration__Group_4_1_1__2__Impl rule__STVarDeclaration__Group_4_1_1__3
            {
            pushFollow(FOLLOW_27);
            rule__STVarDeclaration__Group_4_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__2"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__2__Impl"
    // InternalSTAlgorithmParser.g:5326:1: rule__STVarDeclaration__Group_4_1_1__2__Impl : ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5330:1: ( ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* ) )
            // InternalSTAlgorithmParser.g:5331:1: ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* )
            {
            // InternalSTAlgorithmParser.g:5331:1: ( ( rule__STVarDeclaration__Group_4_1_1_2__0 )* )
            // InternalSTAlgorithmParser.g:5332:2: ( rule__STVarDeclaration__Group_4_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1_2()); 
            }
            // InternalSTAlgorithmParser.g:5333:2: ( rule__STVarDeclaration__Group_4_1_1_2__0 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==Comma) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:5333:3: rule__STVarDeclaration__Group_4_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STVarDeclaration__Group_4_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getGroup_4_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__3"
    // InternalSTAlgorithmParser.g:5341:1: rule__STVarDeclaration__Group_4_1_1__3 : rule__STVarDeclaration__Group_4_1_1__3__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5345:1: ( rule__STVarDeclaration__Group_4_1_1__3__Impl )
            // InternalSTAlgorithmParser.g:5346:2: rule__STVarDeclaration__Group_4_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__3"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1__3__Impl"
    // InternalSTAlgorithmParser.g:5352:1: rule__STVarDeclaration__Group_4_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_4_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5356:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:5357:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:5357:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:5358:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_4_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1__3__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__0"
    // InternalSTAlgorithmParser.g:5368:1: rule__STVarDeclaration__Group_4_1_1_2__0 : rule__STVarDeclaration__Group_4_1_1_2__0__Impl rule__STVarDeclaration__Group_4_1_1_2__1 ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5372:1: ( rule__STVarDeclaration__Group_4_1_1_2__0__Impl rule__STVarDeclaration__Group_4_1_1_2__1 )
            // InternalSTAlgorithmParser.g:5373:2: rule__STVarDeclaration__Group_4_1_1_2__0__Impl rule__STVarDeclaration__Group_4_1_1_2__1
            {
            pushFollow(FOLLOW_29);
            rule__STVarDeclaration__Group_4_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__0"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__0__Impl"
    // InternalSTAlgorithmParser.g:5380:1: rule__STVarDeclaration__Group_4_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5384:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:5385:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:5385:1: ( Comma )
            // InternalSTAlgorithmParser.g:5386:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCommaKeyword_4_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__1"
    // InternalSTAlgorithmParser.g:5395:1: rule__STVarDeclaration__Group_4_1_1_2__1 : rule__STVarDeclaration__Group_4_1_1_2__1__Impl ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5399:1: ( rule__STVarDeclaration__Group_4_1_1_2__1__Impl )
            // InternalSTAlgorithmParser.g:5400:2: rule__STVarDeclaration__Group_4_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_4_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__1"


    // $ANTLR start "rule__STVarDeclaration__Group_4_1_1_2__1__Impl"
    // InternalSTAlgorithmParser.g:5406:1: rule__STVarDeclaration__Group_4_1_1_2__1__Impl : ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) ) ;
    public final void rule__STVarDeclaration__Group_4_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5410:1: ( ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) ) )
            // InternalSTAlgorithmParser.g:5411:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:5411:1: ( ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 ) )
            // InternalSTAlgorithmParser.g:5412:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_2_1()); 
            }
            // InternalSTAlgorithmParser.g:5413:2: ( rule__STVarDeclaration__CountAssignment_4_1_1_2_1 )
            // InternalSTAlgorithmParser.g:5413:3: rule__STVarDeclaration__CountAssignment_4_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__CountAssignment_4_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAssignment_4_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_4_1_1_2__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_6__0"
    // InternalSTAlgorithmParser.g:5422:1: rule__STVarDeclaration__Group_6__0 : rule__STVarDeclaration__Group_6__0__Impl rule__STVarDeclaration__Group_6__1 ;
    public final void rule__STVarDeclaration__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5426:1: ( rule__STVarDeclaration__Group_6__0__Impl rule__STVarDeclaration__Group_6__1 )
            // InternalSTAlgorithmParser.g:5427:2: rule__STVarDeclaration__Group_6__0__Impl rule__STVarDeclaration__Group_6__1
            {
            pushFollow(FOLLOW_14);
            rule__STVarDeclaration__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__0"


    // $ANTLR start "rule__STVarDeclaration__Group_6__0__Impl"
    // InternalSTAlgorithmParser.g:5434:1: rule__STVarDeclaration__Group_6__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5438:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:5439:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:5439:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:5440:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_6_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLeftSquareBracketKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_6__1"
    // InternalSTAlgorithmParser.g:5449:1: rule__STVarDeclaration__Group_6__1 : rule__STVarDeclaration__Group_6__1__Impl rule__STVarDeclaration__Group_6__2 ;
    public final void rule__STVarDeclaration__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5453:1: ( rule__STVarDeclaration__Group_6__1__Impl rule__STVarDeclaration__Group_6__2 )
            // InternalSTAlgorithmParser.g:5454:2: rule__STVarDeclaration__Group_6__1__Impl rule__STVarDeclaration__Group_6__2
            {
            pushFollow(FOLLOW_30);
            rule__STVarDeclaration__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__1"


    // $ANTLR start "rule__STVarDeclaration__Group_6__1__Impl"
    // InternalSTAlgorithmParser.g:5461:1: rule__STVarDeclaration__Group_6__1__Impl : ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) ) ;
    public final void rule__STVarDeclaration__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5465:1: ( ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) ) )
            // InternalSTAlgorithmParser.g:5466:1: ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) )
            {
            // InternalSTAlgorithmParser.g:5466:1: ( ( rule__STVarDeclaration__MaxLengthAssignment_6_1 ) )
            // InternalSTAlgorithmParser.g:5467:2: ( rule__STVarDeclaration__MaxLengthAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getMaxLengthAssignment_6_1()); 
            }
            // InternalSTAlgorithmParser.g:5468:2: ( rule__STVarDeclaration__MaxLengthAssignment_6_1 )
            // InternalSTAlgorithmParser.g:5468:3: rule__STVarDeclaration__MaxLengthAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__MaxLengthAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getMaxLengthAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__1__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_6__2"
    // InternalSTAlgorithmParser.g:5476:1: rule__STVarDeclaration__Group_6__2 : rule__STVarDeclaration__Group_6__2__Impl ;
    public final void rule__STVarDeclaration__Group_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5480:1: ( rule__STVarDeclaration__Group_6__2__Impl )
            // InternalSTAlgorithmParser.g:5481:2: rule__STVarDeclaration__Group_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__2"


    // $ANTLR start "rule__STVarDeclaration__Group_6__2__Impl"
    // InternalSTAlgorithmParser.g:5487:1: rule__STVarDeclaration__Group_6__2__Impl : ( RightSquareBracket ) ;
    public final void rule__STVarDeclaration__Group_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5491:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:5492:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:5492:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:5493:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_6_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRightSquareBracketKeyword_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_6__2__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_7__0"
    // InternalSTAlgorithmParser.g:5503:1: rule__STVarDeclaration__Group_7__0 : rule__STVarDeclaration__Group_7__0__Impl rule__STVarDeclaration__Group_7__1 ;
    public final void rule__STVarDeclaration__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5507:1: ( rule__STVarDeclaration__Group_7__0__Impl rule__STVarDeclaration__Group_7__1 )
            // InternalSTAlgorithmParser.g:5508:2: rule__STVarDeclaration__Group_7__0__Impl rule__STVarDeclaration__Group_7__1
            {
            pushFollow(FOLLOW_15);
            rule__STVarDeclaration__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__0"


    // $ANTLR start "rule__STVarDeclaration__Group_7__0__Impl"
    // InternalSTAlgorithmParser.g:5515:1: rule__STVarDeclaration__Group_7__0__Impl : ( ColonEqualsSign ) ;
    public final void rule__STVarDeclaration__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5519:1: ( ( ColonEqualsSign ) )
            // InternalSTAlgorithmParser.g:5520:1: ( ColonEqualsSign )
            {
            // InternalSTAlgorithmParser.g:5520:1: ( ColonEqualsSign )
            // InternalSTAlgorithmParser.g:5521:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getColonEqualsSignKeyword_7_0()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getColonEqualsSignKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__0__Impl"


    // $ANTLR start "rule__STVarDeclaration__Group_7__1"
    // InternalSTAlgorithmParser.g:5530:1: rule__STVarDeclaration__Group_7__1 : rule__STVarDeclaration__Group_7__1__Impl ;
    public final void rule__STVarDeclaration__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5534:1: ( rule__STVarDeclaration__Group_7__1__Impl )
            // InternalSTAlgorithmParser.g:5535:2: rule__STVarDeclaration__Group_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__1"


    // $ANTLR start "rule__STVarDeclaration__Group_7__1__Impl"
    // InternalSTAlgorithmParser.g:5541:1: rule__STVarDeclaration__Group_7__1__Impl : ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) ) ;
    public final void rule__STVarDeclaration__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5545:1: ( ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) ) )
            // InternalSTAlgorithmParser.g:5546:1: ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) )
            {
            // InternalSTAlgorithmParser.g:5546:1: ( ( rule__STVarDeclaration__DefaultValueAssignment_7_1 ) )
            // InternalSTAlgorithmParser.g:5547:2: ( rule__STVarDeclaration__DefaultValueAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getDefaultValueAssignment_7_1()); 
            }
            // InternalSTAlgorithmParser.g:5548:2: ( rule__STVarDeclaration__DefaultValueAssignment_7_1 )
            // InternalSTAlgorithmParser.g:5548:3: rule__STVarDeclaration__DefaultValueAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__STVarDeclaration__DefaultValueAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getDefaultValueAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__Group_7__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group__0"
    // InternalSTAlgorithmParser.g:5557:1: rule__STTypeDeclaration__Group__0 : rule__STTypeDeclaration__Group__0__Impl rule__STTypeDeclaration__Group__1 ;
    public final void rule__STTypeDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5561:1: ( rule__STTypeDeclaration__Group__0__Impl rule__STTypeDeclaration__Group__1 )
            // InternalSTAlgorithmParser.g:5562:2: rule__STTypeDeclaration__Group__0__Impl rule__STTypeDeclaration__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__STTypeDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__0"


    // $ANTLR start "rule__STTypeDeclaration__Group__0__Impl"
    // InternalSTAlgorithmParser.g:5569:1: rule__STTypeDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__STTypeDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5573:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:5574:1: ( () )
            {
            // InternalSTAlgorithmParser.g:5574:1: ( () )
            // InternalSTAlgorithmParser.g:5575:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getSTTypeDeclarationAction_0()); 
            }
            // InternalSTAlgorithmParser.g:5576:2: ()
            // InternalSTAlgorithmParser.g:5576:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getSTTypeDeclarationAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group__1"
    // InternalSTAlgorithmParser.g:5584:1: rule__STTypeDeclaration__Group__1 : rule__STTypeDeclaration__Group__1__Impl rule__STTypeDeclaration__Group__2 ;
    public final void rule__STTypeDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5588:1: ( rule__STTypeDeclaration__Group__1__Impl rule__STTypeDeclaration__Group__2 )
            // InternalSTAlgorithmParser.g:5589:2: rule__STTypeDeclaration__Group__1__Impl rule__STTypeDeclaration__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__STTypeDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__1"


    // $ANTLR start "rule__STTypeDeclaration__Group__1__Impl"
    // InternalSTAlgorithmParser.g:5596:1: rule__STTypeDeclaration__Group__1__Impl : ( ( rule__STTypeDeclaration__Group_1__0 )? ) ;
    public final void rule__STTypeDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5600:1: ( ( ( rule__STTypeDeclaration__Group_1__0 )? ) )
            // InternalSTAlgorithmParser.g:5601:1: ( ( rule__STTypeDeclaration__Group_1__0 )? )
            {
            // InternalSTAlgorithmParser.g:5601:1: ( ( rule__STTypeDeclaration__Group_1__0 )? )
            // InternalSTAlgorithmParser.g:5602:2: ( rule__STTypeDeclaration__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:5603:2: ( rule__STTypeDeclaration__Group_1__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==ARRAY) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalSTAlgorithmParser.g:5603:3: rule__STTypeDeclaration__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STTypeDeclaration__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group__2"
    // InternalSTAlgorithmParser.g:5611:1: rule__STTypeDeclaration__Group__2 : rule__STTypeDeclaration__Group__2__Impl rule__STTypeDeclaration__Group__3 ;
    public final void rule__STTypeDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5615:1: ( rule__STTypeDeclaration__Group__2__Impl rule__STTypeDeclaration__Group__3 )
            // InternalSTAlgorithmParser.g:5616:2: rule__STTypeDeclaration__Group__2__Impl rule__STTypeDeclaration__Group__3
            {
            pushFollow(FOLLOW_25);
            rule__STTypeDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__2"


    // $ANTLR start "rule__STTypeDeclaration__Group__2__Impl"
    // InternalSTAlgorithmParser.g:5623:1: rule__STTypeDeclaration__Group__2__Impl : ( ( rule__STTypeDeclaration__TypeAssignment_2 ) ) ;
    public final void rule__STTypeDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5627:1: ( ( ( rule__STTypeDeclaration__TypeAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:5628:1: ( ( rule__STTypeDeclaration__TypeAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:5628:1: ( ( rule__STTypeDeclaration__TypeAssignment_2 ) )
            // InternalSTAlgorithmParser.g:5629:2: ( rule__STTypeDeclaration__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getTypeAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:5630:2: ( rule__STTypeDeclaration__TypeAssignment_2 )
            // InternalSTAlgorithmParser.g:5630:3: rule__STTypeDeclaration__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__2__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group__3"
    // InternalSTAlgorithmParser.g:5638:1: rule__STTypeDeclaration__Group__3 : rule__STTypeDeclaration__Group__3__Impl ;
    public final void rule__STTypeDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5642:1: ( rule__STTypeDeclaration__Group__3__Impl )
            // InternalSTAlgorithmParser.g:5643:2: rule__STTypeDeclaration__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__3"


    // $ANTLR start "rule__STTypeDeclaration__Group__3__Impl"
    // InternalSTAlgorithmParser.g:5649:1: rule__STTypeDeclaration__Group__3__Impl : ( ( rule__STTypeDeclaration__Group_3__0 )? ) ;
    public final void rule__STTypeDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5653:1: ( ( ( rule__STTypeDeclaration__Group_3__0 )? ) )
            // InternalSTAlgorithmParser.g:5654:1: ( ( rule__STTypeDeclaration__Group_3__0 )? )
            {
            // InternalSTAlgorithmParser.g:5654:1: ( ( rule__STTypeDeclaration__Group_3__0 )? )
            // InternalSTAlgorithmParser.g:5655:2: ( rule__STTypeDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup_3()); 
            }
            // InternalSTAlgorithmParser.g:5656:2: ( rule__STTypeDeclaration__Group_3__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==LeftSquareBracket) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSTAlgorithmParser.g:5656:3: rule__STTypeDeclaration__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STTypeDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group__3__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__0"
    // InternalSTAlgorithmParser.g:5665:1: rule__STTypeDeclaration__Group_1__0 : rule__STTypeDeclaration__Group_1__0__Impl rule__STTypeDeclaration__Group_1__1 ;
    public final void rule__STTypeDeclaration__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5669:1: ( rule__STTypeDeclaration__Group_1__0__Impl rule__STTypeDeclaration__Group_1__1 )
            // InternalSTAlgorithmParser.g:5670:2: rule__STTypeDeclaration__Group_1__0__Impl rule__STTypeDeclaration__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__STTypeDeclaration__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:5677:1: rule__STTypeDeclaration__Group_1__0__Impl : ( ( rule__STTypeDeclaration__ArrayAssignment_1_0 ) ) ;
    public final void rule__STTypeDeclaration__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5681:1: ( ( ( rule__STTypeDeclaration__ArrayAssignment_1_0 ) ) )
            // InternalSTAlgorithmParser.g:5682:1: ( ( rule__STTypeDeclaration__ArrayAssignment_1_0 ) )
            {
            // InternalSTAlgorithmParser.g:5682:1: ( ( rule__STTypeDeclaration__ArrayAssignment_1_0 ) )
            // InternalSTAlgorithmParser.g:5683:2: ( rule__STTypeDeclaration__ArrayAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getArrayAssignment_1_0()); 
            }
            // InternalSTAlgorithmParser.g:5684:2: ( rule__STTypeDeclaration__ArrayAssignment_1_0 )
            // InternalSTAlgorithmParser.g:5684:3: rule__STTypeDeclaration__ArrayAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__ArrayAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getArrayAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__1"
    // InternalSTAlgorithmParser.g:5692:1: rule__STTypeDeclaration__Group_1__1 : rule__STTypeDeclaration__Group_1__1__Impl rule__STTypeDeclaration__Group_1__2 ;
    public final void rule__STTypeDeclaration__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5696:1: ( rule__STTypeDeclaration__Group_1__1__Impl rule__STTypeDeclaration__Group_1__2 )
            // InternalSTAlgorithmParser.g:5697:2: rule__STTypeDeclaration__Group_1__1__Impl rule__STTypeDeclaration__Group_1__2
            {
            pushFollow(FOLLOW_26);
            rule__STTypeDeclaration__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:5704:1: rule__STTypeDeclaration__Group_1__1__Impl : ( ( rule__STTypeDeclaration__Alternatives_1_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5708:1: ( ( ( rule__STTypeDeclaration__Alternatives_1_1 ) ) )
            // InternalSTAlgorithmParser.g:5709:1: ( ( rule__STTypeDeclaration__Alternatives_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:5709:1: ( ( rule__STTypeDeclaration__Alternatives_1_1 ) )
            // InternalSTAlgorithmParser.g:5710:2: ( rule__STTypeDeclaration__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getAlternatives_1_1()); 
            }
            // InternalSTAlgorithmParser.g:5711:2: ( rule__STTypeDeclaration__Alternatives_1_1 )
            // InternalSTAlgorithmParser.g:5711:3: rule__STTypeDeclaration__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__2"
    // InternalSTAlgorithmParser.g:5719:1: rule__STTypeDeclaration__Group_1__2 : rule__STTypeDeclaration__Group_1__2__Impl ;
    public final void rule__STTypeDeclaration__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5723:1: ( rule__STTypeDeclaration__Group_1__2__Impl )
            // InternalSTAlgorithmParser.g:5724:2: rule__STTypeDeclaration__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__2"


    // $ANTLR start "rule__STTypeDeclaration__Group_1__2__Impl"
    // InternalSTAlgorithmParser.g:5730:1: rule__STTypeDeclaration__Group_1__2__Impl : ( OF ) ;
    public final void rule__STTypeDeclaration__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5734:1: ( ( OF ) )
            // InternalSTAlgorithmParser.g:5735:1: ( OF )
            {
            // InternalSTAlgorithmParser.g:5735:1: ( OF )
            // InternalSTAlgorithmParser.g:5736:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getOFKeyword_1_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getOFKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1__2__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__0"
    // InternalSTAlgorithmParser.g:5746:1: rule__STTypeDeclaration__Group_1_1_0__0 : rule__STTypeDeclaration__Group_1_1_0__0__Impl rule__STTypeDeclaration__Group_1_1_0__1 ;
    public final void rule__STTypeDeclaration__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5750:1: ( rule__STTypeDeclaration__Group_1_1_0__0__Impl rule__STTypeDeclaration__Group_1_1_0__1 )
            // InternalSTAlgorithmParser.g:5751:2: rule__STTypeDeclaration__Group_1_1_0__0__Impl rule__STTypeDeclaration__Group_1_1_0__1
            {
            pushFollow(FOLLOW_14);
            rule__STTypeDeclaration__Group_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:5758:1: rule__STTypeDeclaration__Group_1_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5762:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:5763:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:5763:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:5764:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_1_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__1"
    // InternalSTAlgorithmParser.g:5773:1: rule__STTypeDeclaration__Group_1_1_0__1 : rule__STTypeDeclaration__Group_1_1_0__1__Impl rule__STTypeDeclaration__Group_1_1_0__2 ;
    public final void rule__STTypeDeclaration__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5777:1: ( rule__STTypeDeclaration__Group_1_1_0__1__Impl rule__STTypeDeclaration__Group_1_1_0__2 )
            // InternalSTAlgorithmParser.g:5778:2: rule__STTypeDeclaration__Group_1_1_0__1__Impl rule__STTypeDeclaration__Group_1_1_0__2
            {
            pushFollow(FOLLOW_27);
            rule__STTypeDeclaration__Group_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:5785:1: rule__STTypeDeclaration__Group_1_1_0__1__Impl : ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5789:1: ( ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:5790:1: ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:5790:1: ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 ) )
            // InternalSTAlgorithmParser.g:5791:2: ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRangesAssignment_1_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:5792:2: ( rule__STTypeDeclaration__RangesAssignment_1_1_0_1 )
            // InternalSTAlgorithmParser.g:5792:3: rule__STTypeDeclaration__RangesAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__RangesAssignment_1_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRangesAssignment_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__2"
    // InternalSTAlgorithmParser.g:5800:1: rule__STTypeDeclaration__Group_1_1_0__2 : rule__STTypeDeclaration__Group_1_1_0__2__Impl rule__STTypeDeclaration__Group_1_1_0__3 ;
    public final void rule__STTypeDeclaration__Group_1_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5804:1: ( rule__STTypeDeclaration__Group_1_1_0__2__Impl rule__STTypeDeclaration__Group_1_1_0__3 )
            // InternalSTAlgorithmParser.g:5805:2: rule__STTypeDeclaration__Group_1_1_0__2__Impl rule__STTypeDeclaration__Group_1_1_0__3
            {
            pushFollow(FOLLOW_27);
            rule__STTypeDeclaration__Group_1_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__2"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__2__Impl"
    // InternalSTAlgorithmParser.g:5812:1: rule__STTypeDeclaration__Group_1_1_0__2__Impl : ( ( rule__STTypeDeclaration__Group_1_1_0_2__0 )* ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5816:1: ( ( ( rule__STTypeDeclaration__Group_1_1_0_2__0 )* ) )
            // InternalSTAlgorithmParser.g:5817:1: ( ( rule__STTypeDeclaration__Group_1_1_0_2__0 )* )
            {
            // InternalSTAlgorithmParser.g:5817:1: ( ( rule__STTypeDeclaration__Group_1_1_0_2__0 )* )
            // InternalSTAlgorithmParser.g:5818:2: ( rule__STTypeDeclaration__Group_1_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_0_2()); 
            }
            // InternalSTAlgorithmParser.g:5819:2: ( rule__STTypeDeclaration__Group_1_1_0_2__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==Comma) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:5819:3: rule__STTypeDeclaration__Group_1_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STTypeDeclaration__Group_1_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__2__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__3"
    // InternalSTAlgorithmParser.g:5827:1: rule__STTypeDeclaration__Group_1_1_0__3 : rule__STTypeDeclaration__Group_1_1_0__3__Impl ;
    public final void rule__STTypeDeclaration__Group_1_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5831:1: ( rule__STTypeDeclaration__Group_1_1_0__3__Impl )
            // InternalSTAlgorithmParser.g:5832:2: rule__STTypeDeclaration__Group_1_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__3"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0__3__Impl"
    // InternalSTAlgorithmParser.g:5838:1: rule__STTypeDeclaration__Group_1_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5842:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:5843:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:5843:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:5844:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_1_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_1_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0__3__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0_2__0"
    // InternalSTAlgorithmParser.g:5854:1: rule__STTypeDeclaration__Group_1_1_0_2__0 : rule__STTypeDeclaration__Group_1_1_0_2__0__Impl rule__STTypeDeclaration__Group_1_1_0_2__1 ;
    public final void rule__STTypeDeclaration__Group_1_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5858:1: ( rule__STTypeDeclaration__Group_1_1_0_2__0__Impl rule__STTypeDeclaration__Group_1_1_0_2__1 )
            // InternalSTAlgorithmParser.g:5859:2: rule__STTypeDeclaration__Group_1_1_0_2__0__Impl rule__STTypeDeclaration__Group_1_1_0_2__1
            {
            pushFollow(FOLLOW_14);
            rule__STTypeDeclaration__Group_1_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0_2__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0_2__0__Impl"
    // InternalSTAlgorithmParser.g:5866:1: rule__STTypeDeclaration__Group_1_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5870:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:5871:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:5871:1: ( Comma )
            // InternalSTAlgorithmParser.g:5872:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCommaKeyword_1_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCommaKeyword_1_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0_2__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0_2__1"
    // InternalSTAlgorithmParser.g:5881:1: rule__STTypeDeclaration__Group_1_1_0_2__1 : rule__STTypeDeclaration__Group_1_1_0_2__1__Impl ;
    public final void rule__STTypeDeclaration__Group_1_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5885:1: ( rule__STTypeDeclaration__Group_1_1_0_2__1__Impl )
            // InternalSTAlgorithmParser.g:5886:2: rule__STTypeDeclaration__Group_1_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0_2__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_0_2__1__Impl"
    // InternalSTAlgorithmParser.g:5892:1: rule__STTypeDeclaration__Group_1_1_0_2__1__Impl : ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5896:1: ( ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 ) ) )
            // InternalSTAlgorithmParser.g:5897:1: ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:5897:1: ( ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 ) )
            // InternalSTAlgorithmParser.g:5898:2: ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRangesAssignment_1_1_0_2_1()); 
            }
            // InternalSTAlgorithmParser.g:5899:2: ( rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 )
            // InternalSTAlgorithmParser.g:5899:3: rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRangesAssignment_1_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_0_2__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__0"
    // InternalSTAlgorithmParser.g:5908:1: rule__STTypeDeclaration__Group_1_1_1__0 : rule__STTypeDeclaration__Group_1_1_1__0__Impl rule__STTypeDeclaration__Group_1_1_1__1 ;
    public final void rule__STTypeDeclaration__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5912:1: ( rule__STTypeDeclaration__Group_1_1_1__0__Impl rule__STTypeDeclaration__Group_1_1_1__1 )
            // InternalSTAlgorithmParser.g:5913:2: rule__STTypeDeclaration__Group_1_1_1__0__Impl rule__STTypeDeclaration__Group_1_1_1__1
            {
            pushFollow(FOLLOW_29);
            rule__STTypeDeclaration__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__0__Impl"
    // InternalSTAlgorithmParser.g:5920:1: rule__STTypeDeclaration__Group_1_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5924:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:5925:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:5925:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:5926:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_1_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__1"
    // InternalSTAlgorithmParser.g:5935:1: rule__STTypeDeclaration__Group_1_1_1__1 : rule__STTypeDeclaration__Group_1_1_1__1__Impl rule__STTypeDeclaration__Group_1_1_1__2 ;
    public final void rule__STTypeDeclaration__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5939:1: ( rule__STTypeDeclaration__Group_1_1_1__1__Impl rule__STTypeDeclaration__Group_1_1_1__2 )
            // InternalSTAlgorithmParser.g:5940:2: rule__STTypeDeclaration__Group_1_1_1__1__Impl rule__STTypeDeclaration__Group_1_1_1__2
            {
            pushFollow(FOLLOW_27);
            rule__STTypeDeclaration__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__1__Impl"
    // InternalSTAlgorithmParser.g:5947:1: rule__STTypeDeclaration__Group_1_1_1__1__Impl : ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5951:1: ( ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 ) ) )
            // InternalSTAlgorithmParser.g:5952:1: ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:5952:1: ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 ) )
            // InternalSTAlgorithmParser.g:5953:2: ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAssignment_1_1_1_1()); 
            }
            // InternalSTAlgorithmParser.g:5954:2: ( rule__STTypeDeclaration__CountAssignment_1_1_1_1 )
            // InternalSTAlgorithmParser.g:5954:3: rule__STTypeDeclaration__CountAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__CountAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAssignment_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__2"
    // InternalSTAlgorithmParser.g:5962:1: rule__STTypeDeclaration__Group_1_1_1__2 : rule__STTypeDeclaration__Group_1_1_1__2__Impl rule__STTypeDeclaration__Group_1_1_1__3 ;
    public final void rule__STTypeDeclaration__Group_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5966:1: ( rule__STTypeDeclaration__Group_1_1_1__2__Impl rule__STTypeDeclaration__Group_1_1_1__3 )
            // InternalSTAlgorithmParser.g:5967:2: rule__STTypeDeclaration__Group_1_1_1__2__Impl rule__STTypeDeclaration__Group_1_1_1__3
            {
            pushFollow(FOLLOW_27);
            rule__STTypeDeclaration__Group_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__2"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__2__Impl"
    // InternalSTAlgorithmParser.g:5974:1: rule__STTypeDeclaration__Group_1_1_1__2__Impl : ( ( rule__STTypeDeclaration__Group_1_1_1_2__0 )* ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5978:1: ( ( ( rule__STTypeDeclaration__Group_1_1_1_2__0 )* ) )
            // InternalSTAlgorithmParser.g:5979:1: ( ( rule__STTypeDeclaration__Group_1_1_1_2__0 )* )
            {
            // InternalSTAlgorithmParser.g:5979:1: ( ( rule__STTypeDeclaration__Group_1_1_1_2__0 )* )
            // InternalSTAlgorithmParser.g:5980:2: ( rule__STTypeDeclaration__Group_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_1_2()); 
            }
            // InternalSTAlgorithmParser.g:5981:2: ( rule__STTypeDeclaration__Group_1_1_1_2__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==Comma) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:5981:3: rule__STTypeDeclaration__Group_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STTypeDeclaration__Group_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getGroup_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__2__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__3"
    // InternalSTAlgorithmParser.g:5989:1: rule__STTypeDeclaration__Group_1_1_1__3 : rule__STTypeDeclaration__Group_1_1_1__3__Impl ;
    public final void rule__STTypeDeclaration__Group_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:5993:1: ( rule__STTypeDeclaration__Group_1_1_1__3__Impl )
            // InternalSTAlgorithmParser.g:5994:2: rule__STTypeDeclaration__Group_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__3"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1__3__Impl"
    // InternalSTAlgorithmParser.g:6000:1: rule__STTypeDeclaration__Group_1_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6004:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:6005:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:6005:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:6006:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1__3__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1_2__0"
    // InternalSTAlgorithmParser.g:6016:1: rule__STTypeDeclaration__Group_1_1_1_2__0 : rule__STTypeDeclaration__Group_1_1_1_2__0__Impl rule__STTypeDeclaration__Group_1_1_1_2__1 ;
    public final void rule__STTypeDeclaration__Group_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6020:1: ( rule__STTypeDeclaration__Group_1_1_1_2__0__Impl rule__STTypeDeclaration__Group_1_1_1_2__1 )
            // InternalSTAlgorithmParser.g:6021:2: rule__STTypeDeclaration__Group_1_1_1_2__0__Impl rule__STTypeDeclaration__Group_1_1_1_2__1
            {
            pushFollow(FOLLOW_29);
            rule__STTypeDeclaration__Group_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1_2__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1_2__0__Impl"
    // InternalSTAlgorithmParser.g:6028:1: rule__STTypeDeclaration__Group_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6032:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:6033:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:6033:1: ( Comma )
            // InternalSTAlgorithmParser.g:6034:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCommaKeyword_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCommaKeyword_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1_2__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1_2__1"
    // InternalSTAlgorithmParser.g:6043:1: rule__STTypeDeclaration__Group_1_1_1_2__1 : rule__STTypeDeclaration__Group_1_1_1_2__1__Impl ;
    public final void rule__STTypeDeclaration__Group_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6047:1: ( rule__STTypeDeclaration__Group_1_1_1_2__1__Impl )
            // InternalSTAlgorithmParser.g:6048:2: rule__STTypeDeclaration__Group_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1_2__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_1_1_1_2__1__Impl"
    // InternalSTAlgorithmParser.g:6054:1: rule__STTypeDeclaration__Group_1_1_1_2__1__Impl : ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6058:1: ( ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 ) ) )
            // InternalSTAlgorithmParser.g:6059:1: ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:6059:1: ( ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 ) )
            // InternalSTAlgorithmParser.g:6060:2: ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAssignment_1_1_1_2_1()); 
            }
            // InternalSTAlgorithmParser.g:6061:2: ( rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 )
            // InternalSTAlgorithmParser.g:6061:3: rule__STTypeDeclaration__CountAssignment_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__CountAssignment_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAssignment_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_1_1_1_2__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__0"
    // InternalSTAlgorithmParser.g:6070:1: rule__STTypeDeclaration__Group_3__0 : rule__STTypeDeclaration__Group_3__0__Impl rule__STTypeDeclaration__Group_3__1 ;
    public final void rule__STTypeDeclaration__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6074:1: ( rule__STTypeDeclaration__Group_3__0__Impl rule__STTypeDeclaration__Group_3__1 )
            // InternalSTAlgorithmParser.g:6075:2: rule__STTypeDeclaration__Group_3__0__Impl rule__STTypeDeclaration__Group_3__1
            {
            pushFollow(FOLLOW_14);
            rule__STTypeDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__0"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__0__Impl"
    // InternalSTAlgorithmParser.g:6082:1: rule__STTypeDeclaration__Group_3__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6086:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:6087:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:6087:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:6088:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_3_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getLeftSquareBracketKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__1"
    // InternalSTAlgorithmParser.g:6097:1: rule__STTypeDeclaration__Group_3__1 : rule__STTypeDeclaration__Group_3__1__Impl rule__STTypeDeclaration__Group_3__2 ;
    public final void rule__STTypeDeclaration__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6101:1: ( rule__STTypeDeclaration__Group_3__1__Impl rule__STTypeDeclaration__Group_3__2 )
            // InternalSTAlgorithmParser.g:6102:2: rule__STTypeDeclaration__Group_3__1__Impl rule__STTypeDeclaration__Group_3__2
            {
            pushFollow(FOLLOW_30);
            rule__STTypeDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__1"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__1__Impl"
    // InternalSTAlgorithmParser.g:6109:1: rule__STTypeDeclaration__Group_3__1__Impl : ( ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 ) ) ;
    public final void rule__STTypeDeclaration__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6113:1: ( ( ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 ) ) )
            // InternalSTAlgorithmParser.g:6114:1: ( ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 ) )
            {
            // InternalSTAlgorithmParser.g:6114:1: ( ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 ) )
            // InternalSTAlgorithmParser.g:6115:2: ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getMaxLengthAssignment_3_1()); 
            }
            // InternalSTAlgorithmParser.g:6116:2: ( rule__STTypeDeclaration__MaxLengthAssignment_3_1 )
            // InternalSTAlgorithmParser.g:6116:3: rule__STTypeDeclaration__MaxLengthAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__MaxLengthAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getMaxLengthAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__2"
    // InternalSTAlgorithmParser.g:6124:1: rule__STTypeDeclaration__Group_3__2 : rule__STTypeDeclaration__Group_3__2__Impl ;
    public final void rule__STTypeDeclaration__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6128:1: ( rule__STTypeDeclaration__Group_3__2__Impl )
            // InternalSTAlgorithmParser.g:6129:2: rule__STTypeDeclaration__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTypeDeclaration__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__2"


    // $ANTLR start "rule__STTypeDeclaration__Group_3__2__Impl"
    // InternalSTAlgorithmParser.g:6135:1: rule__STTypeDeclaration__Group_3__2__Impl : ( RightSquareBracket ) ;
    public final void rule__STTypeDeclaration__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6139:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:6140:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:6140:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:6141:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_3_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRightSquareBracketKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__Group_3__2__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__0"
    // InternalSTAlgorithmParser.g:6151:1: rule__STArrayInitializerExpression__Group__0 : rule__STArrayInitializerExpression__Group__0__Impl rule__STArrayInitializerExpression__Group__1 ;
    public final void rule__STArrayInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6155:1: ( rule__STArrayInitializerExpression__Group__0__Impl rule__STArrayInitializerExpression__Group__1 )
            // InternalSTAlgorithmParser.g:6156:2: rule__STArrayInitializerExpression__Group__0__Impl rule__STArrayInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__STArrayInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__0"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:6163:1: rule__STArrayInitializerExpression__Group__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__STArrayInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6167:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:6168:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:6168:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:6169:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__1"
    // InternalSTAlgorithmParser.g:6178:1: rule__STArrayInitializerExpression__Group__1 : rule__STArrayInitializerExpression__Group__1__Impl rule__STArrayInitializerExpression__Group__2 ;
    public final void rule__STArrayInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6182:1: ( rule__STArrayInitializerExpression__Group__1__Impl rule__STArrayInitializerExpression__Group__2 )
            // InternalSTAlgorithmParser.g:6183:2: rule__STArrayInitializerExpression__Group__1__Impl rule__STArrayInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__STArrayInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__1"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:6190:1: rule__STArrayInitializerExpression__Group__1__Impl : ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__STArrayInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6194:1: ( ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:6195:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:6195:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_1 ) )
            // InternalSTAlgorithmParser.g:6196:2: ( rule__STArrayInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:6197:2: ( rule__STArrayInitializerExpression__ValuesAssignment_1 )
            // InternalSTAlgorithmParser.g:6197:3: rule__STArrayInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__2"
    // InternalSTAlgorithmParser.g:6205:1: rule__STArrayInitializerExpression__Group__2 : rule__STArrayInitializerExpression__Group__2__Impl rule__STArrayInitializerExpression__Group__3 ;
    public final void rule__STArrayInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6209:1: ( rule__STArrayInitializerExpression__Group__2__Impl rule__STArrayInitializerExpression__Group__3 )
            // InternalSTAlgorithmParser.g:6210:2: rule__STArrayInitializerExpression__Group__2__Impl rule__STArrayInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_27);
            rule__STArrayInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__2"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__2__Impl"
    // InternalSTAlgorithmParser.g:6217:1: rule__STArrayInitializerExpression__Group__2__Impl : ( ( rule__STArrayInitializerExpression__Group_2__0 )* ) ;
    public final void rule__STArrayInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6221:1: ( ( ( rule__STArrayInitializerExpression__Group_2__0 )* ) )
            // InternalSTAlgorithmParser.g:6222:1: ( ( rule__STArrayInitializerExpression__Group_2__0 )* )
            {
            // InternalSTAlgorithmParser.g:6222:1: ( ( rule__STArrayInitializerExpression__Group_2__0 )* )
            // InternalSTAlgorithmParser.g:6223:2: ( rule__STArrayInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalSTAlgorithmParser.g:6224:2: ( rule__STArrayInitializerExpression__Group_2__0 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==Comma) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:6224:3: rule__STArrayInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STArrayInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__3"
    // InternalSTAlgorithmParser.g:6232:1: rule__STArrayInitializerExpression__Group__3 : rule__STArrayInitializerExpression__Group__3__Impl ;
    public final void rule__STArrayInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6236:1: ( rule__STArrayInitializerExpression__Group__3__Impl )
            // InternalSTAlgorithmParser.g:6237:2: rule__STArrayInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__3"


    // $ANTLR start "rule__STArrayInitializerExpression__Group__3__Impl"
    // InternalSTAlgorithmParser.g:6243:1: rule__STArrayInitializerExpression__Group__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STArrayInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6247:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:6248:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:6248:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:6249:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__0"
    // InternalSTAlgorithmParser.g:6259:1: rule__STArrayInitializerExpression__Group_2__0 : rule__STArrayInitializerExpression__Group_2__0__Impl rule__STArrayInitializerExpression__Group_2__1 ;
    public final void rule__STArrayInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6263:1: ( rule__STArrayInitializerExpression__Group_2__0__Impl rule__STArrayInitializerExpression__Group_2__1 )
            // InternalSTAlgorithmParser.g:6264:2: rule__STArrayInitializerExpression__Group_2__0__Impl rule__STArrayInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_15);
            rule__STArrayInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__0"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__0__Impl"
    // InternalSTAlgorithmParser.g:6271:1: rule__STArrayInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__STArrayInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6275:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:6276:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:6276:1: ( Comma )
            // InternalSTAlgorithmParser.g:6277:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__1"
    // InternalSTAlgorithmParser.g:6286:1: rule__STArrayInitializerExpression__Group_2__1 : rule__STArrayInitializerExpression__Group_2__1__Impl ;
    public final void rule__STArrayInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6290:1: ( rule__STArrayInitializerExpression__Group_2__1__Impl )
            // InternalSTAlgorithmParser.g:6291:2: rule__STArrayInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__1"


    // $ANTLR start "rule__STArrayInitializerExpression__Group_2__1__Impl"
    // InternalSTAlgorithmParser.g:6297:1: rule__STArrayInitializerExpression__Group_2__1__Impl : ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__STArrayInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6301:1: ( ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalSTAlgorithmParser.g:6302:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:6302:1: ( ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalSTAlgorithmParser.g:6303:2: ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalSTAlgorithmParser.g:6304:2: ( rule__STArrayInitializerExpression__ValuesAssignment_2_1 )
            // InternalSTAlgorithmParser.g:6304:3: rule__STArrayInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group__0"
    // InternalSTAlgorithmParser.g:6313:1: rule__STArrayInitElement__Group__0 : rule__STArrayInitElement__Group__0__Impl rule__STArrayInitElement__Group__1 ;
    public final void rule__STArrayInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6317:1: ( rule__STArrayInitElement__Group__0__Impl rule__STArrayInitElement__Group__1 )
            // InternalSTAlgorithmParser.g:6318:2: rule__STArrayInitElement__Group__0__Impl rule__STArrayInitElement__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__STArrayInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group__0"


    // $ANTLR start "rule__STArrayInitElement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:6325:1: rule__STArrayInitElement__Group__0__Impl : ( ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) ;
    public final void rule__STArrayInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6329:1: ( ( ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:6330:1: ( ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:6330:1: ( ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            // InternalSTAlgorithmParser.g:6331:2: ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:6332:2: ( rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 )
            // InternalSTAlgorithmParser.g:6332:3: rule__STArrayInitElement__IndexOrInitExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__IndexOrInitExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group__0__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group__1"
    // InternalSTAlgorithmParser.g:6340:1: rule__STArrayInitElement__Group__1 : rule__STArrayInitElement__Group__1__Impl ;
    public final void rule__STArrayInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6344:1: ( rule__STArrayInitElement__Group__1__Impl )
            // InternalSTAlgorithmParser.g:6345:2: rule__STArrayInitElement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group__1"


    // $ANTLR start "rule__STArrayInitElement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:6351:1: rule__STArrayInitElement__Group__1__Impl : ( ( rule__STArrayInitElement__Group_1__0 )? ) ;
    public final void rule__STArrayInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6355:1: ( ( ( rule__STArrayInitElement__Group_1__0 )? ) )
            // InternalSTAlgorithmParser.g:6356:1: ( ( rule__STArrayInitElement__Group_1__0 )? )
            {
            // InternalSTAlgorithmParser.g:6356:1: ( ( rule__STArrayInitElement__Group_1__0 )? )
            // InternalSTAlgorithmParser.g:6357:2: ( rule__STArrayInitElement__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:6358:2: ( rule__STArrayInitElement__Group_1__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==LeftParenthesis) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSTAlgorithmParser.g:6358:3: rule__STArrayInitElement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STArrayInitElement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group__1__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1__0"
    // InternalSTAlgorithmParser.g:6367:1: rule__STArrayInitElement__Group_1__0 : rule__STArrayInitElement__Group_1__0__Impl rule__STArrayInitElement__Group_1__1 ;
    public final void rule__STArrayInitElement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6371:1: ( rule__STArrayInitElement__Group_1__0__Impl rule__STArrayInitElement__Group_1__1 )
            // InternalSTAlgorithmParser.g:6372:2: rule__STArrayInitElement__Group_1__0__Impl rule__STArrayInitElement__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__STArrayInitElement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__0"


    // $ANTLR start "rule__STArrayInitElement__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:6379:1: rule__STArrayInitElement__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STArrayInitElement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6383:1: ( ( LeftParenthesis ) )
            // InternalSTAlgorithmParser.g:6384:1: ( LeftParenthesis )
            {
            // InternalSTAlgorithmParser.g:6384:1: ( LeftParenthesis )
            // InternalSTAlgorithmParser.g:6385:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__0__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1__1"
    // InternalSTAlgorithmParser.g:6394:1: rule__STArrayInitElement__Group_1__1 : rule__STArrayInitElement__Group_1__1__Impl rule__STArrayInitElement__Group_1__2 ;
    public final void rule__STArrayInitElement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6398:1: ( rule__STArrayInitElement__Group_1__1__Impl rule__STArrayInitElement__Group_1__2 )
            // InternalSTAlgorithmParser.g:6399:2: rule__STArrayInitElement__Group_1__1__Impl rule__STArrayInitElement__Group_1__2
            {
            pushFollow(FOLLOW_32);
            rule__STArrayInitElement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__1"


    // $ANTLR start "rule__STArrayInitElement__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:6406:1: rule__STArrayInitElement__Group_1__1__Impl : ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 ) ) ;
    public final void rule__STArrayInitElement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6410:1: ( ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:6411:1: ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:6411:1: ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:6412:2: ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:6413:2: ( rule__STArrayInitElement__InitExpressionsAssignment_1_1 )
            // InternalSTAlgorithmParser.g:6413:3: rule__STArrayInitElement__InitExpressionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__InitExpressionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__1__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1__2"
    // InternalSTAlgorithmParser.g:6421:1: rule__STArrayInitElement__Group_1__2 : rule__STArrayInitElement__Group_1__2__Impl rule__STArrayInitElement__Group_1__3 ;
    public final void rule__STArrayInitElement__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6425:1: ( rule__STArrayInitElement__Group_1__2__Impl rule__STArrayInitElement__Group_1__3 )
            // InternalSTAlgorithmParser.g:6426:2: rule__STArrayInitElement__Group_1__2__Impl rule__STArrayInitElement__Group_1__3
            {
            pushFollow(FOLLOW_32);
            rule__STArrayInitElement__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__2"


    // $ANTLR start "rule__STArrayInitElement__Group_1__2__Impl"
    // InternalSTAlgorithmParser.g:6433:1: rule__STArrayInitElement__Group_1__2__Impl : ( ( rule__STArrayInitElement__Group_1_2__0 )* ) ;
    public final void rule__STArrayInitElement__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6437:1: ( ( ( rule__STArrayInitElement__Group_1_2__0 )* ) )
            // InternalSTAlgorithmParser.g:6438:1: ( ( rule__STArrayInitElement__Group_1_2__0 )* )
            {
            // InternalSTAlgorithmParser.g:6438:1: ( ( rule__STArrayInitElement__Group_1_2__0 )* )
            // InternalSTAlgorithmParser.g:6439:2: ( rule__STArrayInitElement__Group_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getGroup_1_2()); 
            }
            // InternalSTAlgorithmParser.g:6440:2: ( rule__STArrayInitElement__Group_1_2__0 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==Comma) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:6440:3: rule__STArrayInitElement__Group_1_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STArrayInitElement__Group_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__2__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1__3"
    // InternalSTAlgorithmParser.g:6448:1: rule__STArrayInitElement__Group_1__3 : rule__STArrayInitElement__Group_1__3__Impl ;
    public final void rule__STArrayInitElement__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6452:1: ( rule__STArrayInitElement__Group_1__3__Impl )
            // InternalSTAlgorithmParser.g:6453:2: rule__STArrayInitElement__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__3"


    // $ANTLR start "rule__STArrayInitElement__Group_1__3__Impl"
    // InternalSTAlgorithmParser.g:6459:1: rule__STArrayInitElement__Group_1__3__Impl : ( RightParenthesis ) ;
    public final void rule__STArrayInitElement__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6463:1: ( ( RightParenthesis ) )
            // InternalSTAlgorithmParser.g:6464:1: ( RightParenthesis )
            {
            // InternalSTAlgorithmParser.g:6464:1: ( RightParenthesis )
            // InternalSTAlgorithmParser.g:6465:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getRightParenthesisKeyword_1_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getRightParenthesisKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1__3__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1_2__0"
    // InternalSTAlgorithmParser.g:6475:1: rule__STArrayInitElement__Group_1_2__0 : rule__STArrayInitElement__Group_1_2__0__Impl rule__STArrayInitElement__Group_1_2__1 ;
    public final void rule__STArrayInitElement__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6479:1: ( rule__STArrayInitElement__Group_1_2__0__Impl rule__STArrayInitElement__Group_1_2__1 )
            // InternalSTAlgorithmParser.g:6480:2: rule__STArrayInitElement__Group_1_2__0__Impl rule__STArrayInitElement__Group_1_2__1
            {
            pushFollow(FOLLOW_15);
            rule__STArrayInitElement__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1_2__0"


    // $ANTLR start "rule__STArrayInitElement__Group_1_2__0__Impl"
    // InternalSTAlgorithmParser.g:6487:1: rule__STArrayInitElement__Group_1_2__0__Impl : ( Comma ) ;
    public final void rule__STArrayInitElement__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6491:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:6492:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:6492:1: ( Comma )
            // InternalSTAlgorithmParser.g:6493:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getCommaKeyword_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getCommaKeyword_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1_2__0__Impl"


    // $ANTLR start "rule__STArrayInitElement__Group_1_2__1"
    // InternalSTAlgorithmParser.g:6502:1: rule__STArrayInitElement__Group_1_2__1 : rule__STArrayInitElement__Group_1_2__1__Impl ;
    public final void rule__STArrayInitElement__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6506:1: ( rule__STArrayInitElement__Group_1_2__1__Impl )
            // InternalSTAlgorithmParser.g:6507:2: rule__STArrayInitElement__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1_2__1"


    // $ANTLR start "rule__STArrayInitElement__Group_1_2__1__Impl"
    // InternalSTAlgorithmParser.g:6513:1: rule__STArrayInitElement__Group_1_2__1__Impl : ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 ) ) ;
    public final void rule__STArrayInitElement__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6517:1: ( ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 ) ) )
            // InternalSTAlgorithmParser.g:6518:1: ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:6518:1: ( ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 ) )
            // InternalSTAlgorithmParser.g:6519:2: ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsAssignment_1_2_1()); 
            }
            // InternalSTAlgorithmParser.g:6520:2: ( rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 )
            // InternalSTAlgorithmParser.g:6520:3: rule__STArrayInitElement__InitExpressionsAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STArrayInitElement__InitExpressionsAssignment_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsAssignment_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__Group_1_2__1__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__0"
    // InternalSTAlgorithmParser.g:6529:1: rule__STStructInitializerExpression__Group__0 : rule__STStructInitializerExpression__Group__0__Impl rule__STStructInitializerExpression__Group__1 ;
    public final void rule__STStructInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6533:1: ( rule__STStructInitializerExpression__Group__0__Impl rule__STStructInitializerExpression__Group__1 )
            // InternalSTAlgorithmParser.g:6534:2: rule__STStructInitializerExpression__Group__0__Impl rule__STStructInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__STStructInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__0"


    // $ANTLR start "rule__STStructInitializerExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:6541:1: rule__STStructInitializerExpression__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STStructInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6545:1: ( ( LeftParenthesis ) )
            // InternalSTAlgorithmParser.g:6546:1: ( LeftParenthesis )
            {
            // InternalSTAlgorithmParser.g:6546:1: ( LeftParenthesis )
            // InternalSTAlgorithmParser.g:6547:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__1"
    // InternalSTAlgorithmParser.g:6556:1: rule__STStructInitializerExpression__Group__1 : rule__STStructInitializerExpression__Group__1__Impl rule__STStructInitializerExpression__Group__2 ;
    public final void rule__STStructInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6560:1: ( rule__STStructInitializerExpression__Group__1__Impl rule__STStructInitializerExpression__Group__2 )
            // InternalSTAlgorithmParser.g:6561:2: rule__STStructInitializerExpression__Group__1__Impl rule__STStructInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_32);
            rule__STStructInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__1"


    // $ANTLR start "rule__STStructInitializerExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:6568:1: rule__STStructInitializerExpression__Group__1__Impl : ( ( rule__STStructInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__STStructInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6572:1: ( ( ( rule__STStructInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:6573:1: ( ( rule__STStructInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:6573:1: ( ( rule__STStructInitializerExpression__ValuesAssignment_1 ) )
            // InternalSTAlgorithmParser.g:6574:2: ( rule__STStructInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:6575:2: ( rule__STStructInitializerExpression__ValuesAssignment_1 )
            // InternalSTAlgorithmParser.g:6575:3: rule__STStructInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__2"
    // InternalSTAlgorithmParser.g:6583:1: rule__STStructInitializerExpression__Group__2 : rule__STStructInitializerExpression__Group__2__Impl rule__STStructInitializerExpression__Group__3 ;
    public final void rule__STStructInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6587:1: ( rule__STStructInitializerExpression__Group__2__Impl rule__STStructInitializerExpression__Group__3 )
            // InternalSTAlgorithmParser.g:6588:2: rule__STStructInitializerExpression__Group__2__Impl rule__STStructInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__STStructInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__2"


    // $ANTLR start "rule__STStructInitializerExpression__Group__2__Impl"
    // InternalSTAlgorithmParser.g:6595:1: rule__STStructInitializerExpression__Group__2__Impl : ( ( rule__STStructInitializerExpression__Group_2__0 )* ) ;
    public final void rule__STStructInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6599:1: ( ( ( rule__STStructInitializerExpression__Group_2__0 )* ) )
            // InternalSTAlgorithmParser.g:6600:1: ( ( rule__STStructInitializerExpression__Group_2__0 )* )
            {
            // InternalSTAlgorithmParser.g:6600:1: ( ( rule__STStructInitializerExpression__Group_2__0 )* )
            // InternalSTAlgorithmParser.g:6601:2: ( rule__STStructInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalSTAlgorithmParser.g:6602:2: ( rule__STStructInitializerExpression__Group_2__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==Comma) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:6602:3: rule__STStructInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STStructInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group__3"
    // InternalSTAlgorithmParser.g:6610:1: rule__STStructInitializerExpression__Group__3 : rule__STStructInitializerExpression__Group__3__Impl ;
    public final void rule__STStructInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6614:1: ( rule__STStructInitializerExpression__Group__3__Impl )
            // InternalSTAlgorithmParser.g:6615:2: rule__STStructInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__3"


    // $ANTLR start "rule__STStructInitializerExpression__Group__3__Impl"
    // InternalSTAlgorithmParser.g:6621:1: rule__STStructInitializerExpression__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__STStructInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6625:1: ( ( RightParenthesis ) )
            // InternalSTAlgorithmParser.g:6626:1: ( RightParenthesis )
            {
            // InternalSTAlgorithmParser.g:6626:1: ( RightParenthesis )
            // InternalSTAlgorithmParser.g:6627:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group_2__0"
    // InternalSTAlgorithmParser.g:6637:1: rule__STStructInitializerExpression__Group_2__0 : rule__STStructInitializerExpression__Group_2__0__Impl rule__STStructInitializerExpression__Group_2__1 ;
    public final void rule__STStructInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6641:1: ( rule__STStructInitializerExpression__Group_2__0__Impl rule__STStructInitializerExpression__Group_2__1 )
            // InternalSTAlgorithmParser.g:6642:2: rule__STStructInitializerExpression__Group_2__0__Impl rule__STStructInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_33);
            rule__STStructInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_2__0"


    // $ANTLR start "rule__STStructInitializerExpression__Group_2__0__Impl"
    // InternalSTAlgorithmParser.g:6649:1: rule__STStructInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__STStructInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6653:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:6654:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:6654:1: ( Comma )
            // InternalSTAlgorithmParser.g:6655:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STStructInitializerExpression__Group_2__1"
    // InternalSTAlgorithmParser.g:6664:1: rule__STStructInitializerExpression__Group_2__1 : rule__STStructInitializerExpression__Group_2__1__Impl ;
    public final void rule__STStructInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6668:1: ( rule__STStructInitializerExpression__Group_2__1__Impl )
            // InternalSTAlgorithmParser.g:6669:2: rule__STStructInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_2__1"


    // $ANTLR start "rule__STStructInitializerExpression__Group_2__1__Impl"
    // InternalSTAlgorithmParser.g:6675:1: rule__STStructInitializerExpression__Group_2__1__Impl : ( ( rule__STStructInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__STStructInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6679:1: ( ( ( rule__STStructInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalSTAlgorithmParser.g:6680:1: ( ( rule__STStructInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:6680:1: ( ( rule__STStructInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalSTAlgorithmParser.g:6681:2: ( rule__STStructInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalSTAlgorithmParser.g:6682:2: ( rule__STStructInitializerExpression__ValuesAssignment_2_1 )
            // InternalSTAlgorithmParser.g:6682:3: rule__STStructInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STStructInitElement__Group__0"
    // InternalSTAlgorithmParser.g:6691:1: rule__STStructInitElement__Group__0 : rule__STStructInitElement__Group__0__Impl rule__STStructInitElement__Group__1 ;
    public final void rule__STStructInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6695:1: ( rule__STStructInitElement__Group__0__Impl rule__STStructInitElement__Group__1 )
            // InternalSTAlgorithmParser.g:6696:2: rule__STStructInitElement__Group__0__Impl rule__STStructInitElement__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__STStructInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__0"


    // $ANTLR start "rule__STStructInitElement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:6703:1: rule__STStructInitElement__Group__0__Impl : ( ( rule__STStructInitElement__VariableAssignment_0 ) ) ;
    public final void rule__STStructInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6707:1: ( ( ( rule__STStructInitElement__VariableAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:6708:1: ( ( rule__STStructInitElement__VariableAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:6708:1: ( ( rule__STStructInitElement__VariableAssignment_0 ) )
            // InternalSTAlgorithmParser.g:6709:2: ( rule__STStructInitElement__VariableAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getVariableAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:6710:2: ( rule__STStructInitElement__VariableAssignment_0 )
            // InternalSTAlgorithmParser.g:6710:3: rule__STStructInitElement__VariableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__VariableAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getVariableAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__0__Impl"


    // $ANTLR start "rule__STStructInitElement__Group__1"
    // InternalSTAlgorithmParser.g:6718:1: rule__STStructInitElement__Group__1 : rule__STStructInitElement__Group__1__Impl rule__STStructInitElement__Group__2 ;
    public final void rule__STStructInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6722:1: ( rule__STStructInitElement__Group__1__Impl rule__STStructInitElement__Group__2 )
            // InternalSTAlgorithmParser.g:6723:2: rule__STStructInitElement__Group__1__Impl rule__STStructInitElement__Group__2
            {
            pushFollow(FOLLOW_15);
            rule__STStructInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__1"


    // $ANTLR start "rule__STStructInitElement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:6730:1: rule__STStructInitElement__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STStructInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6734:1: ( ( ColonEqualsSign ) )
            // InternalSTAlgorithmParser.g:6735:1: ( ColonEqualsSign )
            {
            // InternalSTAlgorithmParser.g:6735:1: ( ColonEqualsSign )
            // InternalSTAlgorithmParser.g:6736:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__1__Impl"


    // $ANTLR start "rule__STStructInitElement__Group__2"
    // InternalSTAlgorithmParser.g:6745:1: rule__STStructInitElement__Group__2 : rule__STStructInitElement__Group__2__Impl ;
    public final void rule__STStructInitElement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6749:1: ( rule__STStructInitElement__Group__2__Impl )
            // InternalSTAlgorithmParser.g:6750:2: rule__STStructInitElement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__2"


    // $ANTLR start "rule__STStructInitElement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:6756:1: rule__STStructInitElement__Group__2__Impl : ( ( rule__STStructInitElement__ValueAssignment_2 ) ) ;
    public final void rule__STStructInitElement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6760:1: ( ( ( rule__STStructInitElement__ValueAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:6761:1: ( ( rule__STStructInitElement__ValueAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:6761:1: ( ( rule__STStructInitElement__ValueAssignment_2 ) )
            // InternalSTAlgorithmParser.g:6762:2: ( rule__STStructInitElement__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getValueAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:6763:2: ( rule__STStructInitElement__ValueAssignment_2 )
            // InternalSTAlgorithmParser.g:6763:3: rule__STStructInitElement__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STStructInitElement__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__Group__2__Impl"


    // $ANTLR start "rule__STStatement__Group_0__0"
    // InternalSTAlgorithmParser.g:6772:1: rule__STStatement__Group_0__0 : rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 ;
    public final void rule__STStatement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6776:1: ( rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 )
            // InternalSTAlgorithmParser.g:6777:2: rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1
            {
            pushFollow(FOLLOW_35);
            rule__STStatement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0"


    // $ANTLR start "rule__STStatement__Group_0__0__Impl"
    // InternalSTAlgorithmParser.g:6784:1: rule__STStatement__Group_0__0__Impl : ( ( rule__STStatement__Alternatives_0_0 ) ) ;
    public final void rule__STStatement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6788:1: ( ( ( rule__STStatement__Alternatives_0_0 ) ) )
            // InternalSTAlgorithmParser.g:6789:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            {
            // InternalSTAlgorithmParser.g:6789:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            // InternalSTAlgorithmParser.g:6790:2: ( rule__STStatement__Alternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }
            // InternalSTAlgorithmParser.g:6791:2: ( rule__STStatement__Alternatives_0_0 )
            // InternalSTAlgorithmParser.g:6791:3: rule__STStatement__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0__1"
    // InternalSTAlgorithmParser.g:6799:1: rule__STStatement__Group_0__1 : rule__STStatement__Group_0__1__Impl ;
    public final void rule__STStatement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6803:1: ( rule__STStatement__Group_0__1__Impl )
            // InternalSTAlgorithmParser.g:6804:2: rule__STStatement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1"


    // $ANTLR start "rule__STStatement__Group_0__1__Impl"
    // InternalSTAlgorithmParser.g:6810:1: rule__STStatement__Group_0__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6814:1: ( ( Semicolon ) )
            // InternalSTAlgorithmParser.g:6815:1: ( Semicolon )
            {
            // InternalSTAlgorithmParser.g:6815:1: ( Semicolon )
            // InternalSTAlgorithmParser.g:6816:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0"
    // InternalSTAlgorithmParser.g:6826:1: rule__STStatement__Group_0_0_7__0 : rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 ;
    public final void rule__STStatement__Group_0_0_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6830:1: ( rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 )
            // InternalSTAlgorithmParser.g:6831:2: rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1
            {
            pushFollow(FOLLOW_36);
            rule__STStatement__Group_0_0_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0__Impl"
    // InternalSTAlgorithmParser.g:6838:1: rule__STStatement__Group_0_0_7__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6842:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:6843:1: ( () )
            {
            // InternalSTAlgorithmParser.g:6843:1: ( () )
            // InternalSTAlgorithmParser.g:6844:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_7_0()); 
            }
            // InternalSTAlgorithmParser.g:6845:2: ()
            // InternalSTAlgorithmParser.g:6845:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_7_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1"
    // InternalSTAlgorithmParser.g:6853:1: rule__STStatement__Group_0_0_7__1 : rule__STStatement__Group_0_0_7__1__Impl ;
    public final void rule__STStatement__Group_0_0_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6857:1: ( rule__STStatement__Group_0_0_7__1__Impl )
            // InternalSTAlgorithmParser.g:6858:2: rule__STStatement__Group_0_0_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1__Impl"
    // InternalSTAlgorithmParser.g:6864:1: rule__STStatement__Group_0_0_7__1__Impl : ( RETURN ) ;
    public final void rule__STStatement__Group_0_0_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6868:1: ( ( RETURN ) )
            // InternalSTAlgorithmParser.g:6869:1: ( RETURN )
            {
            // InternalSTAlgorithmParser.g:6869:1: ( RETURN )
            // InternalSTAlgorithmParser.g:6870:2: RETURN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_7_1()); 
            }
            match(input,RETURN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0"
    // InternalSTAlgorithmParser.g:6880:1: rule__STStatement__Group_0_0_8__0 : rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 ;
    public final void rule__STStatement__Group_0_0_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6884:1: ( rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 )
            // InternalSTAlgorithmParser.g:6885:2: rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1
            {
            pushFollow(FOLLOW_37);
            rule__STStatement__Group_0_0_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0__Impl"
    // InternalSTAlgorithmParser.g:6892:1: rule__STStatement__Group_0_0_8__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6896:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:6897:1: ( () )
            {
            // InternalSTAlgorithmParser.g:6897:1: ( () )
            // InternalSTAlgorithmParser.g:6898:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_8_0()); 
            }
            // InternalSTAlgorithmParser.g:6899:2: ()
            // InternalSTAlgorithmParser.g:6899:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_8_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1"
    // InternalSTAlgorithmParser.g:6907:1: rule__STStatement__Group_0_0_8__1 : rule__STStatement__Group_0_0_8__1__Impl ;
    public final void rule__STStatement__Group_0_0_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6911:1: ( rule__STStatement__Group_0_0_8__1__Impl )
            // InternalSTAlgorithmParser.g:6912:2: rule__STStatement__Group_0_0_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1__Impl"
    // InternalSTAlgorithmParser.g:6918:1: rule__STStatement__Group_0_0_8__1__Impl : ( CONTINUE ) ;
    public final void rule__STStatement__Group_0_0_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6922:1: ( ( CONTINUE ) )
            // InternalSTAlgorithmParser.g:6923:1: ( CONTINUE )
            {
            // InternalSTAlgorithmParser.g:6923:1: ( CONTINUE )
            // InternalSTAlgorithmParser.g:6924:2: CONTINUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_8_1()); 
            }
            match(input,CONTINUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_9__0"
    // InternalSTAlgorithmParser.g:6934:1: rule__STStatement__Group_0_0_9__0 : rule__STStatement__Group_0_0_9__0__Impl rule__STStatement__Group_0_0_9__1 ;
    public final void rule__STStatement__Group_0_0_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6938:1: ( rule__STStatement__Group_0_0_9__0__Impl rule__STStatement__Group_0_0_9__1 )
            // InternalSTAlgorithmParser.g:6939:2: rule__STStatement__Group_0_0_9__0__Impl rule__STStatement__Group_0_0_9__1
            {
            pushFollow(FOLLOW_38);
            rule__STStatement__Group_0_0_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__0"


    // $ANTLR start "rule__STStatement__Group_0_0_9__0__Impl"
    // InternalSTAlgorithmParser.g:6946:1: rule__STStatement__Group_0_0_9__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6950:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:6951:1: ( () )
            {
            // InternalSTAlgorithmParser.g:6951:1: ( () )
            // InternalSTAlgorithmParser.g:6952:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_9_0()); 
            }
            // InternalSTAlgorithmParser.g:6953:2: ()
            // InternalSTAlgorithmParser.g:6953:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_9_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_9__1"
    // InternalSTAlgorithmParser.g:6961:1: rule__STStatement__Group_0_0_9__1 : rule__STStatement__Group_0_0_9__1__Impl ;
    public final void rule__STStatement__Group_0_0_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6965:1: ( rule__STStatement__Group_0_0_9__1__Impl )
            // InternalSTAlgorithmParser.g:6966:2: rule__STStatement__Group_0_0_9__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__1"


    // $ANTLR start "rule__STStatement__Group_0_0_9__1__Impl"
    // InternalSTAlgorithmParser.g:6972:1: rule__STStatement__Group_0_0_9__1__Impl : ( EXIT ) ;
    public final void rule__STStatement__Group_0_0_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6976:1: ( ( EXIT ) )
            // InternalSTAlgorithmParser.g:6977:1: ( EXIT )
            {
            // InternalSTAlgorithmParser.g:6977:1: ( EXIT )
            // InternalSTAlgorithmParser.g:6978:2: EXIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_9_1()); 
            }
            match(input,EXIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__1__Impl"


    // $ANTLR start "rule__STStatement__Group_1__0"
    // InternalSTAlgorithmParser.g:6988:1: rule__STStatement__Group_1__0 : rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 ;
    public final void rule__STStatement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:6992:1: ( rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 )
            // InternalSTAlgorithmParser.g:6993:2: rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1
            {
            pushFollow(FOLLOW_39);
            rule__STStatement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0"


    // $ANTLR start "rule__STStatement__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:7000:1: rule__STStatement__Group_1__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7004:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:7005:1: ( () )
            {
            // InternalSTAlgorithmParser.g:7005:1: ( () )
            // InternalSTAlgorithmParser.g:7006:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }
            // InternalSTAlgorithmParser.g:7007:2: ()
            // InternalSTAlgorithmParser.g:7007:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0__Impl"


    // $ANTLR start "rule__STStatement__Group_1__1"
    // InternalSTAlgorithmParser.g:7015:1: rule__STStatement__Group_1__1 : rule__STStatement__Group_1__1__Impl ;
    public final void rule__STStatement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7019:1: ( rule__STStatement__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:7020:2: rule__STStatement__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1"


    // $ANTLR start "rule__STStatement__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:7026:1: rule__STStatement__Group_1__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7030:1: ( ( Semicolon ) )
            // InternalSTAlgorithmParser.g:7031:1: ( Semicolon )
            {
            // InternalSTAlgorithmParser.g:7031:1: ( Semicolon )
            // InternalSTAlgorithmParser.g:7032:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__0"
    // InternalSTAlgorithmParser.g:7042:1: rule__STAssignmentStatement__Group__0 : rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 ;
    public final void rule__STAssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7046:1: ( rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 )
            // InternalSTAlgorithmParser.g:7047:2: rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__STAssignmentStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0"


    // $ANTLR start "rule__STAssignmentStatement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7054:1: rule__STAssignmentStatement__Group__0__Impl : ( ( rule__STAssignmentStatement__LeftAssignment_0 ) ) ;
    public final void rule__STAssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7058:1: ( ( ( rule__STAssignmentStatement__LeftAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:7059:1: ( ( rule__STAssignmentStatement__LeftAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:7059:1: ( ( rule__STAssignmentStatement__LeftAssignment_0 ) )
            // InternalSTAlgorithmParser.g:7060:2: ( rule__STAssignmentStatement__LeftAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLeftAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:7061:2: ( rule__STAssignmentStatement__LeftAssignment_0 )
            // InternalSTAlgorithmParser.g:7061:3: rule__STAssignmentStatement__LeftAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__LeftAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLeftAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__1"
    // InternalSTAlgorithmParser.g:7069:1: rule__STAssignmentStatement__Group__1 : rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 ;
    public final void rule__STAssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7073:1: ( rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 )
            // InternalSTAlgorithmParser.g:7074:2: rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__STAssignmentStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1"


    // $ANTLR start "rule__STAssignmentStatement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7081:1: rule__STAssignmentStatement__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STAssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7085:1: ( ( ColonEqualsSign ) )
            // InternalSTAlgorithmParser.g:7086:1: ( ColonEqualsSign )
            {
            // InternalSTAlgorithmParser.g:7086:1: ( ColonEqualsSign )
            // InternalSTAlgorithmParser.g:7087:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__2"
    // InternalSTAlgorithmParser.g:7096:1: rule__STAssignmentStatement__Group__2 : rule__STAssignmentStatement__Group__2__Impl ;
    public final void rule__STAssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7100:1: ( rule__STAssignmentStatement__Group__2__Impl )
            // InternalSTAlgorithmParser.g:7101:2: rule__STAssignmentStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2"


    // $ANTLR start "rule__STAssignmentStatement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:7107:1: rule__STAssignmentStatement__Group__2__Impl : ( ( rule__STAssignmentStatement__RightAssignment_2 ) ) ;
    public final void rule__STAssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7111:1: ( ( ( rule__STAssignmentStatement__RightAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:7112:1: ( ( rule__STAssignmentStatement__RightAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:7112:1: ( ( rule__STAssignmentStatement__RightAssignment_2 ) )
            // InternalSTAlgorithmParser.g:7113:2: ( rule__STAssignmentStatement__RightAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRightAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:7114:2: ( rule__STAssignmentStatement__RightAssignment_2 )
            // InternalSTAlgorithmParser.g:7114:3: rule__STAssignmentStatement__RightAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__RightAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRightAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__0"
    // InternalSTAlgorithmParser.g:7123:1: rule__STCallNamedInputArgument__Group__0 : rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1 ;
    public final void rule__STCallNamedInputArgument__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7127:1: ( rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1 )
            // InternalSTAlgorithmParser.g:7128:2: rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__STCallNamedInputArgument__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__0"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7135:1: rule__STCallNamedInputArgument__Group__0__Impl : ( ( rule__STCallNamedInputArgument__ParameterAssignment_0 ) ) ;
    public final void rule__STCallNamedInputArgument__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7139:1: ( ( ( rule__STCallNamedInputArgument__ParameterAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:7140:1: ( ( rule__STCallNamedInputArgument__ParameterAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:7140:1: ( ( rule__STCallNamedInputArgument__ParameterAssignment_0 ) )
            // InternalSTAlgorithmParser.g:7141:2: ( rule__STCallNamedInputArgument__ParameterAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:7142:2: ( rule__STCallNamedInputArgument__ParameterAssignment_0 )
            // InternalSTAlgorithmParser.g:7142:3: rule__STCallNamedInputArgument__ParameterAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__ParameterAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__0__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__1"
    // InternalSTAlgorithmParser.g:7150:1: rule__STCallNamedInputArgument__Group__1 : rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2 ;
    public final void rule__STCallNamedInputArgument__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7154:1: ( rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2 )
            // InternalSTAlgorithmParser.g:7155:2: rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__STCallNamedInputArgument__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__1"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7162:1: rule__STCallNamedInputArgument__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STCallNamedInputArgument__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7166:1: ( ( ColonEqualsSign ) )
            // InternalSTAlgorithmParser.g:7167:1: ( ColonEqualsSign )
            {
            // InternalSTAlgorithmParser.g:7167:1: ( ColonEqualsSign )
            // InternalSTAlgorithmParser.g:7168:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__1__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__2"
    // InternalSTAlgorithmParser.g:7177:1: rule__STCallNamedInputArgument__Group__2 : rule__STCallNamedInputArgument__Group__2__Impl ;
    public final void rule__STCallNamedInputArgument__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7181:1: ( rule__STCallNamedInputArgument__Group__2__Impl )
            // InternalSTAlgorithmParser.g:7182:2: rule__STCallNamedInputArgument__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__2"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__2__Impl"
    // InternalSTAlgorithmParser.g:7188:1: rule__STCallNamedInputArgument__Group__2__Impl : ( ( rule__STCallNamedInputArgument__ArgumentAssignment_2 ) ) ;
    public final void rule__STCallNamedInputArgument__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7192:1: ( ( ( rule__STCallNamedInputArgument__ArgumentAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:7193:1: ( ( rule__STCallNamedInputArgument__ArgumentAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:7193:1: ( ( rule__STCallNamedInputArgument__ArgumentAssignment_2 ) )
            // InternalSTAlgorithmParser.g:7194:2: ( rule__STCallNamedInputArgument__ArgumentAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getArgumentAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:7195:2: ( rule__STCallNamedInputArgument__ArgumentAssignment_2 )
            // InternalSTAlgorithmParser.g:7195:3: rule__STCallNamedInputArgument__ArgumentAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__ArgumentAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getArgumentAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__0"
    // InternalSTAlgorithmParser.g:7204:1: rule__STCallNamedOutputArgument__Group__0 : rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1 ;
    public final void rule__STCallNamedOutputArgument__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7208:1: ( rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1 )
            // InternalSTAlgorithmParser.g:7209:2: rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__STCallNamedOutputArgument__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__0"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7216:1: rule__STCallNamedOutputArgument__Group__0__Impl : ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? ) ;
    public final void rule__STCallNamedOutputArgument__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7220:1: ( ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? ) )
            // InternalSTAlgorithmParser.g:7221:1: ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? )
            {
            // InternalSTAlgorithmParser.g:7221:1: ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? )
            // InternalSTAlgorithmParser.g:7222:2: ( rule__STCallNamedOutputArgument__NotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:7223:2: ( rule__STCallNamedOutputArgument__NotAssignment_0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==NOT) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSTAlgorithmParser.g:7223:3: rule__STCallNamedOutputArgument__NotAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCallNamedOutputArgument__NotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__0__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__1"
    // InternalSTAlgorithmParser.g:7231:1: rule__STCallNamedOutputArgument__Group__1 : rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2 ;
    public final void rule__STCallNamedOutputArgument__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7235:1: ( rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2 )
            // InternalSTAlgorithmParser.g:7236:2: rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2
            {
            pushFollow(FOLLOW_40);
            rule__STCallNamedOutputArgument__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__1"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7243:1: rule__STCallNamedOutputArgument__Group__1__Impl : ( ( rule__STCallNamedOutputArgument__ParameterAssignment_1 ) ) ;
    public final void rule__STCallNamedOutputArgument__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7247:1: ( ( ( rule__STCallNamedOutputArgument__ParameterAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:7248:1: ( ( rule__STCallNamedOutputArgument__ParameterAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:7248:1: ( ( rule__STCallNamedOutputArgument__ParameterAssignment_1 ) )
            // InternalSTAlgorithmParser.g:7249:2: ( rule__STCallNamedOutputArgument__ParameterAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:7250:2: ( rule__STCallNamedOutputArgument__ParameterAssignment_1 )
            // InternalSTAlgorithmParser.g:7250:3: rule__STCallNamedOutputArgument__ParameterAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__ParameterAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__1__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__2"
    // InternalSTAlgorithmParser.g:7258:1: rule__STCallNamedOutputArgument__Group__2 : rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3 ;
    public final void rule__STCallNamedOutputArgument__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7262:1: ( rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3 )
            // InternalSTAlgorithmParser.g:7263:2: rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__STCallNamedOutputArgument__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__2"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__2__Impl"
    // InternalSTAlgorithmParser.g:7270:1: rule__STCallNamedOutputArgument__Group__2__Impl : ( EqualsSignGreaterThanSign ) ;
    public final void rule__STCallNamedOutputArgument__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7274:1: ( ( EqualsSignGreaterThanSign ) )
            // InternalSTAlgorithmParser.g:7275:1: ( EqualsSignGreaterThanSign )
            {
            // InternalSTAlgorithmParser.g:7275:1: ( EqualsSignGreaterThanSign )
            // InternalSTAlgorithmParser.g:7276:2: EqualsSignGreaterThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getEqualsSignGreaterThanSignKeyword_2()); 
            }
            match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getEqualsSignGreaterThanSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__3"
    // InternalSTAlgorithmParser.g:7285:1: rule__STCallNamedOutputArgument__Group__3 : rule__STCallNamedOutputArgument__Group__3__Impl ;
    public final void rule__STCallNamedOutputArgument__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7289:1: ( rule__STCallNamedOutputArgument__Group__3__Impl )
            // InternalSTAlgorithmParser.g:7290:2: rule__STCallNamedOutputArgument__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__3"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__3__Impl"
    // InternalSTAlgorithmParser.g:7296:1: rule__STCallNamedOutputArgument__Group__3__Impl : ( ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 ) ) ;
    public final void rule__STCallNamedOutputArgument__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7300:1: ( ( ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 ) ) )
            // InternalSTAlgorithmParser.g:7301:1: ( ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 ) )
            {
            // InternalSTAlgorithmParser.g:7301:1: ( ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 ) )
            // InternalSTAlgorithmParser.g:7302:2: ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getArgumentAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:7303:2: ( rule__STCallNamedOutputArgument__ArgumentAssignment_3 )
            // InternalSTAlgorithmParser.g:7303:3: rule__STCallNamedOutputArgument__ArgumentAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__ArgumentAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getArgumentAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__3__Impl"


    // $ANTLR start "rule__STIfStatement__Group__0"
    // InternalSTAlgorithmParser.g:7312:1: rule__STIfStatement__Group__0 : rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1 ;
    public final void rule__STIfStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7316:1: ( rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1 )
            // InternalSTAlgorithmParser.g:7317:2: rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__STIfStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__0"


    // $ANTLR start "rule__STIfStatement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7324:1: rule__STIfStatement__Group__0__Impl : ( IF ) ;
    public final void rule__STIfStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7328:1: ( ( IF ) )
            // InternalSTAlgorithmParser.g:7329:1: ( IF )
            {
            // InternalSTAlgorithmParser.g:7329:1: ( IF )
            // InternalSTAlgorithmParser.g:7330:2: IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getIFKeyword_0()); 
            }
            match(input,IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__0__Impl"


    // $ANTLR start "rule__STIfStatement__Group__1"
    // InternalSTAlgorithmParser.g:7339:1: rule__STIfStatement__Group__1 : rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2 ;
    public final void rule__STIfStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7343:1: ( rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2 )
            // InternalSTAlgorithmParser.g:7344:2: rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2
            {
            pushFollow(FOLLOW_41);
            rule__STIfStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__1"


    // $ANTLR start "rule__STIfStatement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7351:1: rule__STIfStatement__Group__1__Impl : ( ( rule__STIfStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STIfStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7355:1: ( ( ( rule__STIfStatement__ConditionAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:7356:1: ( ( rule__STIfStatement__ConditionAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:7356:1: ( ( rule__STIfStatement__ConditionAssignment_1 ) )
            // InternalSTAlgorithmParser.g:7357:2: ( rule__STIfStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:7358:2: ( rule__STIfStatement__ConditionAssignment_1 )
            // InternalSTAlgorithmParser.g:7358:3: rule__STIfStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__1__Impl"


    // $ANTLR start "rule__STIfStatement__Group__2"
    // InternalSTAlgorithmParser.g:7366:1: rule__STIfStatement__Group__2 : rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3 ;
    public final void rule__STIfStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7370:1: ( rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3 )
            // InternalSTAlgorithmParser.g:7371:2: rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3
            {
            pushFollow(FOLLOW_42);
            rule__STIfStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__2"


    // $ANTLR start "rule__STIfStatement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:7378:1: rule__STIfStatement__Group__2__Impl : ( THEN ) ;
    public final void rule__STIfStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7382:1: ( ( THEN ) )
            // InternalSTAlgorithmParser.g:7383:1: ( THEN )
            {
            // InternalSTAlgorithmParser.g:7383:1: ( THEN )
            // InternalSTAlgorithmParser.g:7384:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__2__Impl"


    // $ANTLR start "rule__STIfStatement__Group__3"
    // InternalSTAlgorithmParser.g:7393:1: rule__STIfStatement__Group__3 : rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4 ;
    public final void rule__STIfStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7397:1: ( rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4 )
            // InternalSTAlgorithmParser.g:7398:2: rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4
            {
            pushFollow(FOLLOW_42);
            rule__STIfStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__3"


    // $ANTLR start "rule__STIfStatement__Group__3__Impl"
    // InternalSTAlgorithmParser.g:7405:1: rule__STIfStatement__Group__3__Impl : ( ( rule__STIfStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STIfStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7409:1: ( ( ( rule__STIfStatement__StatementsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:7410:1: ( ( rule__STIfStatement__StatementsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:7410:1: ( ( rule__STIfStatement__StatementsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:7411:2: ( rule__STIfStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:7412:2: ( rule__STIfStatement__StatementsAssignment_3 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==LDATE_AND_TIME||LA72_0==DATE_AND_TIME||LA72_0==LTIME_OF_DAY||LA72_0==TIME_OF_DAY||LA72_0==CONTINUE||LA72_0==WSTRING||LA72_0==REPEAT||LA72_0==RETURN||LA72_0==STRING||LA72_0==DWORD||LA72_0==FALSE||(LA72_0>=LDATE && LA72_0<=LWORD)||(LA72_0>=UDINT && LA72_0<=ULINT)||(LA72_0>=USINT && LA72_0<=DINT)||LA72_0==EXIT||(LA72_0>=LINT && LA72_0<=LTOD)||(LA72_0>=REAL && LA72_0<=SINT)||(LA72_0>=THIS && LA72_0<=TRUE)||LA72_0==UINT||(LA72_0>=WORD && LA72_0<=MOD)||LA72_0==TOD||LA72_0==XOR||(LA72_0>=DT && LA72_0<=LT)||LA72_0==OR||LA72_0==LeftParenthesis||LA72_0==PlusSign||LA72_0==HyphenMinus||LA72_0==Semicolon||(LA72_0>=D && LA72_0<=T)||(LA72_0>=RULE_NON_DECIMAL && LA72_0<=RULE_DECIMAL)||(LA72_0>=RULE_ID && LA72_0<=RULE_STRING)) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:7412:3: rule__STIfStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STIfStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__3__Impl"


    // $ANTLR start "rule__STIfStatement__Group__4"
    // InternalSTAlgorithmParser.g:7420:1: rule__STIfStatement__Group__4 : rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5 ;
    public final void rule__STIfStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7424:1: ( rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5 )
            // InternalSTAlgorithmParser.g:7425:2: rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5
            {
            pushFollow(FOLLOW_42);
            rule__STIfStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__4"


    // $ANTLR start "rule__STIfStatement__Group__4__Impl"
    // InternalSTAlgorithmParser.g:7432:1: rule__STIfStatement__Group__4__Impl : ( ( rule__STIfStatement__ElseifsAssignment_4 )* ) ;
    public final void rule__STIfStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7436:1: ( ( ( rule__STIfStatement__ElseifsAssignment_4 )* ) )
            // InternalSTAlgorithmParser.g:7437:1: ( ( rule__STIfStatement__ElseifsAssignment_4 )* )
            {
            // InternalSTAlgorithmParser.g:7437:1: ( ( rule__STIfStatement__ElseifsAssignment_4 )* )
            // InternalSTAlgorithmParser.g:7438:2: ( rule__STIfStatement__ElseifsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseifsAssignment_4()); 
            }
            // InternalSTAlgorithmParser.g:7439:2: ( rule__STIfStatement__ElseifsAssignment_4 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==ELSIF) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:7439:3: rule__STIfStatement__ElseifsAssignment_4
            	    {
            	    pushFollow(FOLLOW_43);
            	    rule__STIfStatement__ElseifsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseifsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__4__Impl"


    // $ANTLR start "rule__STIfStatement__Group__5"
    // InternalSTAlgorithmParser.g:7447:1: rule__STIfStatement__Group__5 : rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6 ;
    public final void rule__STIfStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7451:1: ( rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6 )
            // InternalSTAlgorithmParser.g:7452:2: rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6
            {
            pushFollow(FOLLOW_42);
            rule__STIfStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__5"


    // $ANTLR start "rule__STIfStatement__Group__5__Impl"
    // InternalSTAlgorithmParser.g:7459:1: rule__STIfStatement__Group__5__Impl : ( ( rule__STIfStatement__ElseAssignment_5 )? ) ;
    public final void rule__STIfStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7463:1: ( ( ( rule__STIfStatement__ElseAssignment_5 )? ) )
            // InternalSTAlgorithmParser.g:7464:1: ( ( rule__STIfStatement__ElseAssignment_5 )? )
            {
            // InternalSTAlgorithmParser.g:7464:1: ( ( rule__STIfStatement__ElseAssignment_5 )? )
            // InternalSTAlgorithmParser.g:7465:2: ( rule__STIfStatement__ElseAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseAssignment_5()); 
            }
            // InternalSTAlgorithmParser.g:7466:2: ( rule__STIfStatement__ElseAssignment_5 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==ELSE) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalSTAlgorithmParser.g:7466:3: rule__STIfStatement__ElseAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__STIfStatement__ElseAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__5__Impl"


    // $ANTLR start "rule__STIfStatement__Group__6"
    // InternalSTAlgorithmParser.g:7474:1: rule__STIfStatement__Group__6 : rule__STIfStatement__Group__6__Impl ;
    public final void rule__STIfStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7478:1: ( rule__STIfStatement__Group__6__Impl )
            // InternalSTAlgorithmParser.g:7479:2: rule__STIfStatement__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__6"


    // $ANTLR start "rule__STIfStatement__Group__6__Impl"
    // InternalSTAlgorithmParser.g:7485:1: rule__STIfStatement__Group__6__Impl : ( END_IF ) ;
    public final void rule__STIfStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7489:1: ( ( END_IF ) )
            // InternalSTAlgorithmParser.g:7490:1: ( END_IF )
            {
            // InternalSTAlgorithmParser.g:7490:1: ( END_IF )
            // InternalSTAlgorithmParser.g:7491:2: END_IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getEND_IFKeyword_6()); 
            }
            match(input,END_IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getEND_IFKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__6__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__0"
    // InternalSTAlgorithmParser.g:7501:1: rule__STElseIfPart__Group__0 : rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 ;
    public final void rule__STElseIfPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7505:1: ( rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 )
            // InternalSTAlgorithmParser.g:7506:2: rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__STElseIfPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0"


    // $ANTLR start "rule__STElseIfPart__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7513:1: rule__STElseIfPart__Group__0__Impl : ( ELSIF ) ;
    public final void rule__STElseIfPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7517:1: ( ( ELSIF ) )
            // InternalSTAlgorithmParser.g:7518:1: ( ELSIF )
            {
            // InternalSTAlgorithmParser.g:7518:1: ( ELSIF )
            // InternalSTAlgorithmParser.g:7519:2: ELSIF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }
            match(input,ELSIF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__1"
    // InternalSTAlgorithmParser.g:7528:1: rule__STElseIfPart__Group__1 : rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 ;
    public final void rule__STElseIfPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7532:1: ( rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 )
            // InternalSTAlgorithmParser.g:7533:2: rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2
            {
            pushFollow(FOLLOW_41);
            rule__STElseIfPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1"


    // $ANTLR start "rule__STElseIfPart__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7540:1: rule__STElseIfPart__Group__1__Impl : ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) ;
    public final void rule__STElseIfPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7544:1: ( ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:7545:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:7545:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            // InternalSTAlgorithmParser.g:7546:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:7547:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            // InternalSTAlgorithmParser.g:7547:3: rule__STElseIfPart__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__2"
    // InternalSTAlgorithmParser.g:7555:1: rule__STElseIfPart__Group__2 : rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 ;
    public final void rule__STElseIfPart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7559:1: ( rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 )
            // InternalSTAlgorithmParser.g:7560:2: rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3
            {
            pushFollow(FOLLOW_39);
            rule__STElseIfPart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2"


    // $ANTLR start "rule__STElseIfPart__Group__2__Impl"
    // InternalSTAlgorithmParser.g:7567:1: rule__STElseIfPart__Group__2__Impl : ( THEN ) ;
    public final void rule__STElseIfPart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7571:1: ( ( THEN ) )
            // InternalSTAlgorithmParser.g:7572:1: ( THEN )
            {
            // InternalSTAlgorithmParser.g:7572:1: ( THEN )
            // InternalSTAlgorithmParser.g:7573:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__3"
    // InternalSTAlgorithmParser.g:7582:1: rule__STElseIfPart__Group__3 : rule__STElseIfPart__Group__3__Impl ;
    public final void rule__STElseIfPart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7586:1: ( rule__STElseIfPart__Group__3__Impl )
            // InternalSTAlgorithmParser.g:7587:2: rule__STElseIfPart__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3"


    // $ANTLR start "rule__STElseIfPart__Group__3__Impl"
    // InternalSTAlgorithmParser.g:7593:1: rule__STElseIfPart__Group__3__Impl : ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) ;
    public final void rule__STElseIfPart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7597:1: ( ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:7598:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:7598:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:7599:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:7600:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==LDATE_AND_TIME||LA75_0==DATE_AND_TIME||LA75_0==LTIME_OF_DAY||LA75_0==TIME_OF_DAY||LA75_0==CONTINUE||LA75_0==WSTRING||LA75_0==REPEAT||LA75_0==RETURN||LA75_0==STRING||LA75_0==DWORD||LA75_0==FALSE||(LA75_0>=LDATE && LA75_0<=LWORD)||(LA75_0>=UDINT && LA75_0<=ULINT)||(LA75_0>=USINT && LA75_0<=DINT)||LA75_0==EXIT||(LA75_0>=LINT && LA75_0<=LTOD)||(LA75_0>=REAL && LA75_0<=SINT)||(LA75_0>=THIS && LA75_0<=TRUE)||LA75_0==UINT||(LA75_0>=WORD && LA75_0<=MOD)||LA75_0==TOD||LA75_0==XOR||(LA75_0>=DT && LA75_0<=LT)||LA75_0==OR||LA75_0==LeftParenthesis||LA75_0==PlusSign||LA75_0==HyphenMinus||LA75_0==Semicolon||(LA75_0>=D && LA75_0<=T)||(LA75_0>=RULE_NON_DECIMAL && LA75_0<=RULE_DECIMAL)||(LA75_0>=RULE_ID && LA75_0<=RULE_STRING)) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:7600:3: rule__STElseIfPart__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STElseIfPart__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__0"
    // InternalSTAlgorithmParser.g:7609:1: rule__STCaseStatement__Group__0 : rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 ;
    public final void rule__STCaseStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7613:1: ( rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 )
            // InternalSTAlgorithmParser.g:7614:2: rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__STCaseStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0"


    // $ANTLR start "rule__STCaseStatement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7621:1: rule__STCaseStatement__Group__0__Impl : ( CASE ) ;
    public final void rule__STCaseStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7625:1: ( ( CASE ) )
            // InternalSTAlgorithmParser.g:7626:1: ( CASE )
            {
            // InternalSTAlgorithmParser.g:7626:1: ( CASE )
            // InternalSTAlgorithmParser.g:7627:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__1"
    // InternalSTAlgorithmParser.g:7636:1: rule__STCaseStatement__Group__1 : rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 ;
    public final void rule__STCaseStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7640:1: ( rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 )
            // InternalSTAlgorithmParser.g:7641:2: rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2
            {
            pushFollow(FOLLOW_26);
            rule__STCaseStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1"


    // $ANTLR start "rule__STCaseStatement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7648:1: rule__STCaseStatement__Group__1__Impl : ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) ;
    public final void rule__STCaseStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7652:1: ( ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:7653:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:7653:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            // InternalSTAlgorithmParser.g:7654:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:7655:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            // InternalSTAlgorithmParser.g:7655:3: rule__STCaseStatement__SelectorAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__SelectorAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__2"
    // InternalSTAlgorithmParser.g:7663:1: rule__STCaseStatement__Group__2 : rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 ;
    public final void rule__STCaseStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7667:1: ( rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 )
            // InternalSTAlgorithmParser.g:7668:2: rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__STCaseStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2"


    // $ANTLR start "rule__STCaseStatement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:7675:1: rule__STCaseStatement__Group__2__Impl : ( OF ) ;
    public final void rule__STCaseStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7679:1: ( ( OF ) )
            // InternalSTAlgorithmParser.g:7680:1: ( OF )
            {
            // InternalSTAlgorithmParser.g:7680:1: ( OF )
            // InternalSTAlgorithmParser.g:7681:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__3"
    // InternalSTAlgorithmParser.g:7690:1: rule__STCaseStatement__Group__3 : rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 ;
    public final void rule__STCaseStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7694:1: ( rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 )
            // InternalSTAlgorithmParser.g:7695:2: rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4
            {
            pushFollow(FOLLOW_44);
            rule__STCaseStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3"


    // $ANTLR start "rule__STCaseStatement__Group__3__Impl"
    // InternalSTAlgorithmParser.g:7702:1: rule__STCaseStatement__Group__3__Impl : ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) ;
    public final void rule__STCaseStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7706:1: ( ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) )
            // InternalSTAlgorithmParser.g:7707:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            {
            // InternalSTAlgorithmParser.g:7707:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:7708:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:7708:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) )
            // InternalSTAlgorithmParser.g:7709:3: ( rule__STCaseStatement__CasesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:7710:3: ( rule__STCaseStatement__CasesAssignment_3 )
            // InternalSTAlgorithmParser.g:7710:4: rule__STCaseStatement__CasesAssignment_3
            {
            pushFollow(FOLLOW_45);
            rule__STCaseStatement__CasesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }

            // InternalSTAlgorithmParser.g:7713:2: ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            // InternalSTAlgorithmParser.g:7714:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:7715:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==LDATE_AND_TIME||LA76_0==DATE_AND_TIME||LA76_0==LTIME_OF_DAY||LA76_0==TIME_OF_DAY||LA76_0==WSTRING||LA76_0==STRING||LA76_0==DWORD||LA76_0==FALSE||(LA76_0>=LDATE && LA76_0<=LWORD)||(LA76_0>=UDINT && LA76_0<=ULINT)||(LA76_0>=USINT && LA76_0<=WCHAR)||(LA76_0>=BOOL && LA76_0<=BYTE)||(LA76_0>=CHAR && LA76_0<=DINT)||(LA76_0>=LINT && LA76_0<=LTOD)||(LA76_0>=REAL && LA76_0<=SINT)||(LA76_0>=THIS && LA76_0<=TRUE)||LA76_0==UINT||(LA76_0>=WORD && LA76_0<=AND)||(LA76_0>=INT && LA76_0<=NOT)||LA76_0==TOD||LA76_0==XOR||LA76_0==DT||(LA76_0>=LD && LA76_0<=LT)||LA76_0==OR||LA76_0==LeftParenthesis||LA76_0==PlusSign||LA76_0==HyphenMinus||(LA76_0>=D && LA76_0<=T)||(LA76_0>=RULE_NON_DECIMAL && LA76_0<=RULE_DECIMAL)||(LA76_0>=RULE_ID && LA76_0<=RULE_STRING)) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:7715:4: rule__STCaseStatement__CasesAssignment_3
            	    {
            	    pushFollow(FOLLOW_45);
            	    rule__STCaseStatement__CasesAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__4"
    // InternalSTAlgorithmParser.g:7724:1: rule__STCaseStatement__Group__4 : rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 ;
    public final void rule__STCaseStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7728:1: ( rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 )
            // InternalSTAlgorithmParser.g:7729:2: rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5
            {
            pushFollow(FOLLOW_44);
            rule__STCaseStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4"


    // $ANTLR start "rule__STCaseStatement__Group__4__Impl"
    // InternalSTAlgorithmParser.g:7736:1: rule__STCaseStatement__Group__4__Impl : ( ( rule__STCaseStatement__ElseAssignment_4 )? ) ;
    public final void rule__STCaseStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7740:1: ( ( ( rule__STCaseStatement__ElseAssignment_4 )? ) )
            // InternalSTAlgorithmParser.g:7741:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            {
            // InternalSTAlgorithmParser.g:7741:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            // InternalSTAlgorithmParser.g:7742:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }
            // InternalSTAlgorithmParser.g:7743:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==ELSE) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalSTAlgorithmParser.g:7743:3: rule__STCaseStatement__ElseAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCaseStatement__ElseAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__5"
    // InternalSTAlgorithmParser.g:7751:1: rule__STCaseStatement__Group__5 : rule__STCaseStatement__Group__5__Impl ;
    public final void rule__STCaseStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7755:1: ( rule__STCaseStatement__Group__5__Impl )
            // InternalSTAlgorithmParser.g:7756:2: rule__STCaseStatement__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5"


    // $ANTLR start "rule__STCaseStatement__Group__5__Impl"
    // InternalSTAlgorithmParser.g:7762:1: rule__STCaseStatement__Group__5__Impl : ( END_CASE ) ;
    public final void rule__STCaseStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7766:1: ( ( END_CASE ) )
            // InternalSTAlgorithmParser.g:7767:1: ( END_CASE )
            {
            // InternalSTAlgorithmParser.g:7767:1: ( END_CASE )
            // InternalSTAlgorithmParser.g:7768:2: END_CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }
            match(input,END_CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5__Impl"


    // $ANTLR start "rule__STCaseCases__Group__0"
    // InternalSTAlgorithmParser.g:7778:1: rule__STCaseCases__Group__0 : rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 ;
    public final void rule__STCaseCases__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7782:1: ( rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 )
            // InternalSTAlgorithmParser.g:7783:2: rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__STCaseCases__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0"


    // $ANTLR start "rule__STCaseCases__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7790:1: rule__STCaseCases__Group__0__Impl : ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) ;
    public final void rule__STCaseCases__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7794:1: ( ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:7795:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:7795:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            // InternalSTAlgorithmParser.g:7796:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:7797:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            // InternalSTAlgorithmParser.g:7797:3: rule__STCaseCases__ConditionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group__1"
    // InternalSTAlgorithmParser.g:7805:1: rule__STCaseCases__Group__1 : rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 ;
    public final void rule__STCaseCases__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7809:1: ( rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 )
            // InternalSTAlgorithmParser.g:7810:2: rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2
            {
            pushFollow(FOLLOW_46);
            rule__STCaseCases__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1"


    // $ANTLR start "rule__STCaseCases__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7817:1: rule__STCaseCases__Group__1__Impl : ( ( rule__STCaseCases__Group_1__0 )* ) ;
    public final void rule__STCaseCases__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7821:1: ( ( ( rule__STCaseCases__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:7822:1: ( ( rule__STCaseCases__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:7822:1: ( ( rule__STCaseCases__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:7823:2: ( rule__STCaseCases__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:7824:2: ( rule__STCaseCases__Group_1__0 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==Comma) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:7824:3: rule__STCaseCases__Group_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STCaseCases__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1__Impl"


    // $ANTLR start "rule__STCaseCases__Group__2"
    // InternalSTAlgorithmParser.g:7832:1: rule__STCaseCases__Group__2 : rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 ;
    public final void rule__STCaseCases__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7836:1: ( rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 )
            // InternalSTAlgorithmParser.g:7837:2: rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3
            {
            pushFollow(FOLLOW_39);
            rule__STCaseCases__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2"


    // $ANTLR start "rule__STCaseCases__Group__2__Impl"
    // InternalSTAlgorithmParser.g:7844:1: rule__STCaseCases__Group__2__Impl : ( Colon ) ;
    public final void rule__STCaseCases__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7848:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:7849:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:7849:1: ( Colon )
            // InternalSTAlgorithmParser.g:7850:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2__Impl"


    // $ANTLR start "rule__STCaseCases__Group__3"
    // InternalSTAlgorithmParser.g:7859:1: rule__STCaseCases__Group__3 : rule__STCaseCases__Group__3__Impl ;
    public final void rule__STCaseCases__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7863:1: ( rule__STCaseCases__Group__3__Impl )
            // InternalSTAlgorithmParser.g:7864:2: rule__STCaseCases__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3"


    // $ANTLR start "rule__STCaseCases__Group__3__Impl"
    // InternalSTAlgorithmParser.g:7870:1: rule__STCaseCases__Group__3__Impl : ( ( rule__STCaseCases__StatementsAssignment_3 )* ) ;
    public final void rule__STCaseCases__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7874:1: ( ( ( rule__STCaseCases__StatementsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:7875:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:7875:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:7876:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:7877:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            loop79:
            do {
                int alt79=2;
                alt79 = dfa79.predict(input);
                switch (alt79) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:7877:3: rule__STCaseCases__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STCaseCases__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__0"
    // InternalSTAlgorithmParser.g:7886:1: rule__STCaseCases__Group_1__0 : rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 ;
    public final void rule__STCaseCases__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7890:1: ( rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 )
            // InternalSTAlgorithmParser.g:7891:2: rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STCaseCases__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0"


    // $ANTLR start "rule__STCaseCases__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:7898:1: rule__STCaseCases__Group_1__0__Impl : ( Comma ) ;
    public final void rule__STCaseCases__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7902:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:7903:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:7903:1: ( Comma )
            // InternalSTAlgorithmParser.g:7904:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__1"
    // InternalSTAlgorithmParser.g:7913:1: rule__STCaseCases__Group_1__1 : rule__STCaseCases__Group_1__1__Impl ;
    public final void rule__STCaseCases__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7917:1: ( rule__STCaseCases__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:7918:2: rule__STCaseCases__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1"


    // $ANTLR start "rule__STCaseCases__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:7924:1: rule__STCaseCases__Group_1__1__Impl : ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) ;
    public final void rule__STCaseCases__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7928:1: ( ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:7929:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:7929:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:7930:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:7931:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            // InternalSTAlgorithmParser.g:7931:3: rule__STCaseCases__ConditionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__0"
    // InternalSTAlgorithmParser.g:7940:1: rule__STElsePart__Group__0 : rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 ;
    public final void rule__STElsePart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7944:1: ( rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 )
            // InternalSTAlgorithmParser.g:7945:2: rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__STElsePart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0"


    // $ANTLR start "rule__STElsePart__Group__0__Impl"
    // InternalSTAlgorithmParser.g:7952:1: rule__STElsePart__Group__0__Impl : ( () ) ;
    public final void rule__STElsePart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7956:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:7957:1: ( () )
            {
            // InternalSTAlgorithmParser.g:7957:1: ( () )
            // InternalSTAlgorithmParser.g:7958:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }
            // InternalSTAlgorithmParser.g:7959:2: ()
            // InternalSTAlgorithmParser.g:7959:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0__Impl"


    // $ANTLR start "rule__STElsePart__Group__1"
    // InternalSTAlgorithmParser.g:7967:1: rule__STElsePart__Group__1 : rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 ;
    public final void rule__STElsePart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7971:1: ( rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 )
            // InternalSTAlgorithmParser.g:7972:2: rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2
            {
            pushFollow(FOLLOW_39);
            rule__STElsePart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1"


    // $ANTLR start "rule__STElsePart__Group__1__Impl"
    // InternalSTAlgorithmParser.g:7979:1: rule__STElsePart__Group__1__Impl : ( ELSE ) ;
    public final void rule__STElsePart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7983:1: ( ( ELSE ) )
            // InternalSTAlgorithmParser.g:7984:1: ( ELSE )
            {
            // InternalSTAlgorithmParser.g:7984:1: ( ELSE )
            // InternalSTAlgorithmParser.g:7985:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__2"
    // InternalSTAlgorithmParser.g:7994:1: rule__STElsePart__Group__2 : rule__STElsePart__Group__2__Impl ;
    public final void rule__STElsePart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:7998:1: ( rule__STElsePart__Group__2__Impl )
            // InternalSTAlgorithmParser.g:7999:2: rule__STElsePart__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2"


    // $ANTLR start "rule__STElsePart__Group__2__Impl"
    // InternalSTAlgorithmParser.g:8005:1: rule__STElsePart__Group__2__Impl : ( ( rule__STElsePart__StatementsAssignment_2 )* ) ;
    public final void rule__STElsePart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8009:1: ( ( ( rule__STElsePart__StatementsAssignment_2 )* ) )
            // InternalSTAlgorithmParser.g:8010:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            {
            // InternalSTAlgorithmParser.g:8010:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            // InternalSTAlgorithmParser.g:8011:2: ( rule__STElsePart__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:8012:2: ( rule__STElsePart__StatementsAssignment_2 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==LDATE_AND_TIME||LA80_0==DATE_AND_TIME||LA80_0==LTIME_OF_DAY||LA80_0==TIME_OF_DAY||LA80_0==CONTINUE||LA80_0==WSTRING||LA80_0==REPEAT||LA80_0==RETURN||LA80_0==STRING||LA80_0==DWORD||LA80_0==FALSE||(LA80_0>=LDATE && LA80_0<=LWORD)||(LA80_0>=UDINT && LA80_0<=ULINT)||(LA80_0>=USINT && LA80_0<=DINT)||LA80_0==EXIT||(LA80_0>=LINT && LA80_0<=LTOD)||(LA80_0>=REAL && LA80_0<=SINT)||(LA80_0>=THIS && LA80_0<=TRUE)||LA80_0==UINT||(LA80_0>=WORD && LA80_0<=MOD)||LA80_0==TOD||LA80_0==XOR||(LA80_0>=DT && LA80_0<=LT)||LA80_0==OR||LA80_0==LeftParenthesis||LA80_0==PlusSign||LA80_0==HyphenMinus||LA80_0==Semicolon||(LA80_0>=D && LA80_0<=T)||(LA80_0>=RULE_NON_DECIMAL && LA80_0<=RULE_DECIMAL)||(LA80_0>=RULE_ID && LA80_0<=RULE_STRING)) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:8012:3: rule__STElsePart__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STElsePart__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__0"
    // InternalSTAlgorithmParser.g:8021:1: rule__STForStatement__Group__0 : rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 ;
    public final void rule__STForStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8025:1: ( rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 )
            // InternalSTAlgorithmParser.g:8026:2: rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__STForStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0"


    // $ANTLR start "rule__STForStatement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:8033:1: rule__STForStatement__Group__0__Impl : ( FOR ) ;
    public final void rule__STForStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8037:1: ( ( FOR ) )
            // InternalSTAlgorithmParser.g:8038:1: ( FOR )
            {
            // InternalSTAlgorithmParser.g:8038:1: ( FOR )
            // InternalSTAlgorithmParser.g:8039:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0__Impl"


    // $ANTLR start "rule__STForStatement__Group__1"
    // InternalSTAlgorithmParser.g:8048:1: rule__STForStatement__Group__1 : rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 ;
    public final void rule__STForStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8052:1: ( rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 )
            // InternalSTAlgorithmParser.g:8053:2: rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__STForStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1"


    // $ANTLR start "rule__STForStatement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:8060:1: rule__STForStatement__Group__1__Impl : ( ( rule__STForStatement__VariableAssignment_1 ) ) ;
    public final void rule__STForStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8064:1: ( ( ( rule__STForStatement__VariableAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:8065:1: ( ( rule__STForStatement__VariableAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:8065:1: ( ( rule__STForStatement__VariableAssignment_1 ) )
            // InternalSTAlgorithmParser.g:8066:2: ( rule__STForStatement__VariableAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:8067:2: ( rule__STForStatement__VariableAssignment_1 )
            // InternalSTAlgorithmParser.g:8067:3: rule__STForStatement__VariableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__VariableAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1__Impl"


    // $ANTLR start "rule__STForStatement__Group__2"
    // InternalSTAlgorithmParser.g:8075:1: rule__STForStatement__Group__2 : rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 ;
    public final void rule__STForStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8079:1: ( rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 )
            // InternalSTAlgorithmParser.g:8080:2: rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__STForStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2"


    // $ANTLR start "rule__STForStatement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:8087:1: rule__STForStatement__Group__2__Impl : ( ColonEqualsSign ) ;
    public final void rule__STForStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8091:1: ( ( ColonEqualsSign ) )
            // InternalSTAlgorithmParser.g:8092:1: ( ColonEqualsSign )
            {
            // InternalSTAlgorithmParser.g:8092:1: ( ColonEqualsSign )
            // InternalSTAlgorithmParser.g:8093:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getColonEqualsSignKeyword_2()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getColonEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__3"
    // InternalSTAlgorithmParser.g:8102:1: rule__STForStatement__Group__3 : rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 ;
    public final void rule__STForStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8106:1: ( rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 )
            // InternalSTAlgorithmParser.g:8107:2: rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4
            {
            pushFollow(FOLLOW_48);
            rule__STForStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3"


    // $ANTLR start "rule__STForStatement__Group__3__Impl"
    // InternalSTAlgorithmParser.g:8114:1: rule__STForStatement__Group__3__Impl : ( ( rule__STForStatement__FromAssignment_3 ) ) ;
    public final void rule__STForStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8118:1: ( ( ( rule__STForStatement__FromAssignment_3 ) ) )
            // InternalSTAlgorithmParser.g:8119:1: ( ( rule__STForStatement__FromAssignment_3 ) )
            {
            // InternalSTAlgorithmParser.g:8119:1: ( ( rule__STForStatement__FromAssignment_3 ) )
            // InternalSTAlgorithmParser.g:8120:2: ( rule__STForStatement__FromAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFromAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:8121:2: ( rule__STForStatement__FromAssignment_3 )
            // InternalSTAlgorithmParser.g:8121:3: rule__STForStatement__FromAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__FromAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFromAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3__Impl"


    // $ANTLR start "rule__STForStatement__Group__4"
    // InternalSTAlgorithmParser.g:8129:1: rule__STForStatement__Group__4 : rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 ;
    public final void rule__STForStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8133:1: ( rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 )
            // InternalSTAlgorithmParser.g:8134:2: rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5
            {
            pushFollow(FOLLOW_14);
            rule__STForStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4"


    // $ANTLR start "rule__STForStatement__Group__4__Impl"
    // InternalSTAlgorithmParser.g:8141:1: rule__STForStatement__Group__4__Impl : ( TO ) ;
    public final void rule__STForStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8145:1: ( ( TO ) )
            // InternalSTAlgorithmParser.g:8146:1: ( TO )
            {
            // InternalSTAlgorithmParser.g:8146:1: ( TO )
            // InternalSTAlgorithmParser.g:8147:2: TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getTOKeyword_4()); 
            }
            match(input,TO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getTOKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4__Impl"


    // $ANTLR start "rule__STForStatement__Group__5"
    // InternalSTAlgorithmParser.g:8156:1: rule__STForStatement__Group__5 : rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 ;
    public final void rule__STForStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8160:1: ( rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 )
            // InternalSTAlgorithmParser.g:8161:2: rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6
            {
            pushFollow(FOLLOW_49);
            rule__STForStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5"


    // $ANTLR start "rule__STForStatement__Group__5__Impl"
    // InternalSTAlgorithmParser.g:8168:1: rule__STForStatement__Group__5__Impl : ( ( rule__STForStatement__ToAssignment_5 ) ) ;
    public final void rule__STForStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8172:1: ( ( ( rule__STForStatement__ToAssignment_5 ) ) )
            // InternalSTAlgorithmParser.g:8173:1: ( ( rule__STForStatement__ToAssignment_5 ) )
            {
            // InternalSTAlgorithmParser.g:8173:1: ( ( rule__STForStatement__ToAssignment_5 ) )
            // InternalSTAlgorithmParser.g:8174:2: ( rule__STForStatement__ToAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToAssignment_5()); 
            }
            // InternalSTAlgorithmParser.g:8175:2: ( rule__STForStatement__ToAssignment_5 )
            // InternalSTAlgorithmParser.g:8175:3: rule__STForStatement__ToAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ToAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5__Impl"


    // $ANTLR start "rule__STForStatement__Group__6"
    // InternalSTAlgorithmParser.g:8183:1: rule__STForStatement__Group__6 : rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 ;
    public final void rule__STForStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8187:1: ( rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 )
            // InternalSTAlgorithmParser.g:8188:2: rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7
            {
            pushFollow(FOLLOW_49);
            rule__STForStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6"


    // $ANTLR start "rule__STForStatement__Group__6__Impl"
    // InternalSTAlgorithmParser.g:8195:1: rule__STForStatement__Group__6__Impl : ( ( rule__STForStatement__Group_6__0 )? ) ;
    public final void rule__STForStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8199:1: ( ( ( rule__STForStatement__Group_6__0 )? ) )
            // InternalSTAlgorithmParser.g:8200:1: ( ( rule__STForStatement__Group_6__0 )? )
            {
            // InternalSTAlgorithmParser.g:8200:1: ( ( rule__STForStatement__Group_6__0 )? )
            // InternalSTAlgorithmParser.g:8201:2: ( rule__STForStatement__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup_6()); 
            }
            // InternalSTAlgorithmParser.g:8202:2: ( rule__STForStatement__Group_6__0 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==BY) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSTAlgorithmParser.g:8202:3: rule__STForStatement__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STForStatement__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6__Impl"


    // $ANTLR start "rule__STForStatement__Group__7"
    // InternalSTAlgorithmParser.g:8210:1: rule__STForStatement__Group__7 : rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8 ;
    public final void rule__STForStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8214:1: ( rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8 )
            // InternalSTAlgorithmParser.g:8215:2: rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8
            {
            pushFollow(FOLLOW_50);
            rule__STForStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7"


    // $ANTLR start "rule__STForStatement__Group__7__Impl"
    // InternalSTAlgorithmParser.g:8222:1: rule__STForStatement__Group__7__Impl : ( DO ) ;
    public final void rule__STForStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8226:1: ( ( DO ) )
            // InternalSTAlgorithmParser.g:8227:1: ( DO )
            {
            // InternalSTAlgorithmParser.g:8227:1: ( DO )
            // InternalSTAlgorithmParser.g:8228:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getDOKeyword_7()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getDOKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7__Impl"


    // $ANTLR start "rule__STForStatement__Group__8"
    // InternalSTAlgorithmParser.g:8237:1: rule__STForStatement__Group__8 : rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9 ;
    public final void rule__STForStatement__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8241:1: ( rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9 )
            // InternalSTAlgorithmParser.g:8242:2: rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9
            {
            pushFollow(FOLLOW_50);
            rule__STForStatement__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__8"


    // $ANTLR start "rule__STForStatement__Group__8__Impl"
    // InternalSTAlgorithmParser.g:8249:1: rule__STForStatement__Group__8__Impl : ( ( rule__STForStatement__StatementsAssignment_8 )* ) ;
    public final void rule__STForStatement__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8253:1: ( ( ( rule__STForStatement__StatementsAssignment_8 )* ) )
            // InternalSTAlgorithmParser.g:8254:1: ( ( rule__STForStatement__StatementsAssignment_8 )* )
            {
            // InternalSTAlgorithmParser.g:8254:1: ( ( rule__STForStatement__StatementsAssignment_8 )* )
            // InternalSTAlgorithmParser.g:8255:2: ( rule__STForStatement__StatementsAssignment_8 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsAssignment_8()); 
            }
            // InternalSTAlgorithmParser.g:8256:2: ( rule__STForStatement__StatementsAssignment_8 )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==LDATE_AND_TIME||LA82_0==DATE_AND_TIME||LA82_0==LTIME_OF_DAY||LA82_0==TIME_OF_DAY||LA82_0==CONTINUE||LA82_0==WSTRING||LA82_0==REPEAT||LA82_0==RETURN||LA82_0==STRING||LA82_0==DWORD||LA82_0==FALSE||(LA82_0>=LDATE && LA82_0<=LWORD)||(LA82_0>=UDINT && LA82_0<=ULINT)||(LA82_0>=USINT && LA82_0<=DINT)||LA82_0==EXIT||(LA82_0>=LINT && LA82_0<=LTOD)||(LA82_0>=REAL && LA82_0<=SINT)||(LA82_0>=THIS && LA82_0<=TRUE)||LA82_0==UINT||(LA82_0>=WORD && LA82_0<=MOD)||LA82_0==TOD||LA82_0==XOR||(LA82_0>=DT && LA82_0<=LT)||LA82_0==OR||LA82_0==LeftParenthesis||LA82_0==PlusSign||LA82_0==HyphenMinus||LA82_0==Semicolon||(LA82_0>=D && LA82_0<=T)||(LA82_0>=RULE_NON_DECIMAL && LA82_0<=RULE_DECIMAL)||(LA82_0>=RULE_ID && LA82_0<=RULE_STRING)) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:8256:3: rule__STForStatement__StatementsAssignment_8
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STForStatement__StatementsAssignment_8();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsAssignment_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__8__Impl"


    // $ANTLR start "rule__STForStatement__Group__9"
    // InternalSTAlgorithmParser.g:8264:1: rule__STForStatement__Group__9 : rule__STForStatement__Group__9__Impl ;
    public final void rule__STForStatement__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8268:1: ( rule__STForStatement__Group__9__Impl )
            // InternalSTAlgorithmParser.g:8269:2: rule__STForStatement__Group__9__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__9"


    // $ANTLR start "rule__STForStatement__Group__9__Impl"
    // InternalSTAlgorithmParser.g:8275:1: rule__STForStatement__Group__9__Impl : ( END_FOR ) ;
    public final void rule__STForStatement__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8279:1: ( ( END_FOR ) )
            // InternalSTAlgorithmParser.g:8280:1: ( END_FOR )
            {
            // InternalSTAlgorithmParser.g:8280:1: ( END_FOR )
            // InternalSTAlgorithmParser.g:8281:2: END_FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_9()); 
            }
            match(input,END_FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__9__Impl"


    // $ANTLR start "rule__STForStatement__Group_6__0"
    // InternalSTAlgorithmParser.g:8291:1: rule__STForStatement__Group_6__0 : rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1 ;
    public final void rule__STForStatement__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8295:1: ( rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1 )
            // InternalSTAlgorithmParser.g:8296:2: rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1
            {
            pushFollow(FOLLOW_14);
            rule__STForStatement__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__0"


    // $ANTLR start "rule__STForStatement__Group_6__0__Impl"
    // InternalSTAlgorithmParser.g:8303:1: rule__STForStatement__Group_6__0__Impl : ( BY ) ;
    public final void rule__STForStatement__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8307:1: ( ( BY ) )
            // InternalSTAlgorithmParser.g:8308:1: ( BY )
            {
            // InternalSTAlgorithmParser.g:8308:1: ( BY )
            // InternalSTAlgorithmParser.g:8309:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBYKeyword_6_0()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBYKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__0__Impl"


    // $ANTLR start "rule__STForStatement__Group_6__1"
    // InternalSTAlgorithmParser.g:8318:1: rule__STForStatement__Group_6__1 : rule__STForStatement__Group_6__1__Impl ;
    public final void rule__STForStatement__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8322:1: ( rule__STForStatement__Group_6__1__Impl )
            // InternalSTAlgorithmParser.g:8323:2: rule__STForStatement__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__1"


    // $ANTLR start "rule__STForStatement__Group_6__1__Impl"
    // InternalSTAlgorithmParser.g:8329:1: rule__STForStatement__Group_6__1__Impl : ( ( rule__STForStatement__ByAssignment_6_1 ) ) ;
    public final void rule__STForStatement__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8333:1: ( ( ( rule__STForStatement__ByAssignment_6_1 ) ) )
            // InternalSTAlgorithmParser.g:8334:1: ( ( rule__STForStatement__ByAssignment_6_1 ) )
            {
            // InternalSTAlgorithmParser.g:8334:1: ( ( rule__STForStatement__ByAssignment_6_1 ) )
            // InternalSTAlgorithmParser.g:8335:2: ( rule__STForStatement__ByAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getByAssignment_6_1()); 
            }
            // InternalSTAlgorithmParser.g:8336:2: ( rule__STForStatement__ByAssignment_6_1 )
            // InternalSTAlgorithmParser.g:8336:3: rule__STForStatement__ByAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ByAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getByAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__0"
    // InternalSTAlgorithmParser.g:8345:1: rule__STWhileStatement__Group__0 : rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 ;
    public final void rule__STWhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8349:1: ( rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 )
            // InternalSTAlgorithmParser.g:8350:2: rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__STWhileStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0"


    // $ANTLR start "rule__STWhileStatement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:8357:1: rule__STWhileStatement__Group__0__Impl : ( WHILE ) ;
    public final void rule__STWhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8361:1: ( ( WHILE ) )
            // InternalSTAlgorithmParser.g:8362:1: ( WHILE )
            {
            // InternalSTAlgorithmParser.g:8362:1: ( WHILE )
            // InternalSTAlgorithmParser.g:8363:2: WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }
            match(input,WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__1"
    // InternalSTAlgorithmParser.g:8372:1: rule__STWhileStatement__Group__1 : rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 ;
    public final void rule__STWhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8376:1: ( rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 )
            // InternalSTAlgorithmParser.g:8377:2: rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2
            {
            pushFollow(FOLLOW_51);
            rule__STWhileStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1"


    // $ANTLR start "rule__STWhileStatement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:8384:1: rule__STWhileStatement__Group__1__Impl : ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STWhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8388:1: ( ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:8389:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:8389:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            // InternalSTAlgorithmParser.g:8390:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:8391:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            // InternalSTAlgorithmParser.g:8391:3: rule__STWhileStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__2"
    // InternalSTAlgorithmParser.g:8399:1: rule__STWhileStatement__Group__2 : rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 ;
    public final void rule__STWhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8403:1: ( rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 )
            // InternalSTAlgorithmParser.g:8404:2: rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3
            {
            pushFollow(FOLLOW_52);
            rule__STWhileStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2"


    // $ANTLR start "rule__STWhileStatement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:8411:1: rule__STWhileStatement__Group__2__Impl : ( DO ) ;
    public final void rule__STWhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8415:1: ( ( DO ) )
            // InternalSTAlgorithmParser.g:8416:1: ( DO )
            {
            // InternalSTAlgorithmParser.g:8416:1: ( DO )
            // InternalSTAlgorithmParser.g:8417:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__3"
    // InternalSTAlgorithmParser.g:8426:1: rule__STWhileStatement__Group__3 : rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 ;
    public final void rule__STWhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8430:1: ( rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 )
            // InternalSTAlgorithmParser.g:8431:2: rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4
            {
            pushFollow(FOLLOW_52);
            rule__STWhileStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3"


    // $ANTLR start "rule__STWhileStatement__Group__3__Impl"
    // InternalSTAlgorithmParser.g:8438:1: rule__STWhileStatement__Group__3__Impl : ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STWhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8442:1: ( ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) )
            // InternalSTAlgorithmParser.g:8443:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            {
            // InternalSTAlgorithmParser.g:8443:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            // InternalSTAlgorithmParser.g:8444:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:8445:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==LDATE_AND_TIME||LA83_0==DATE_AND_TIME||LA83_0==LTIME_OF_DAY||LA83_0==TIME_OF_DAY||LA83_0==CONTINUE||LA83_0==WSTRING||LA83_0==REPEAT||LA83_0==RETURN||LA83_0==STRING||LA83_0==DWORD||LA83_0==FALSE||(LA83_0>=LDATE && LA83_0<=LWORD)||(LA83_0>=UDINT && LA83_0<=ULINT)||(LA83_0>=USINT && LA83_0<=DINT)||LA83_0==EXIT||(LA83_0>=LINT && LA83_0<=LTOD)||(LA83_0>=REAL && LA83_0<=SINT)||(LA83_0>=THIS && LA83_0<=TRUE)||LA83_0==UINT||(LA83_0>=WORD && LA83_0<=MOD)||LA83_0==TOD||LA83_0==XOR||(LA83_0>=DT && LA83_0<=LT)||LA83_0==OR||LA83_0==LeftParenthesis||LA83_0==PlusSign||LA83_0==HyphenMinus||LA83_0==Semicolon||(LA83_0>=D && LA83_0<=T)||(LA83_0>=RULE_NON_DECIMAL && LA83_0<=RULE_DECIMAL)||(LA83_0>=RULE_ID && LA83_0<=RULE_STRING)) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:8445:3: rule__STWhileStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STWhileStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__4"
    // InternalSTAlgorithmParser.g:8453:1: rule__STWhileStatement__Group__4 : rule__STWhileStatement__Group__4__Impl ;
    public final void rule__STWhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8457:1: ( rule__STWhileStatement__Group__4__Impl )
            // InternalSTAlgorithmParser.g:8458:2: rule__STWhileStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4"


    // $ANTLR start "rule__STWhileStatement__Group__4__Impl"
    // InternalSTAlgorithmParser.g:8464:1: rule__STWhileStatement__Group__4__Impl : ( END_WHILE ) ;
    public final void rule__STWhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8468:1: ( ( END_WHILE ) )
            // InternalSTAlgorithmParser.g:8469:1: ( END_WHILE )
            {
            // InternalSTAlgorithmParser.g:8469:1: ( END_WHILE )
            // InternalSTAlgorithmParser.g:8470:2: END_WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }
            match(input,END_WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__0"
    // InternalSTAlgorithmParser.g:8480:1: rule__STRepeatStatement__Group__0 : rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 ;
    public final void rule__STRepeatStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8484:1: ( rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 )
            // InternalSTAlgorithmParser.g:8485:2: rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__STRepeatStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0"


    // $ANTLR start "rule__STRepeatStatement__Group__0__Impl"
    // InternalSTAlgorithmParser.g:8492:1: rule__STRepeatStatement__Group__0__Impl : ( REPEAT ) ;
    public final void rule__STRepeatStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8496:1: ( ( REPEAT ) )
            // InternalSTAlgorithmParser.g:8497:1: ( REPEAT )
            {
            // InternalSTAlgorithmParser.g:8497:1: ( REPEAT )
            // InternalSTAlgorithmParser.g:8498:2: REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }
            match(input,REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__1"
    // InternalSTAlgorithmParser.g:8507:1: rule__STRepeatStatement__Group__1 : rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 ;
    public final void rule__STRepeatStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8511:1: ( rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 )
            // InternalSTAlgorithmParser.g:8512:2: rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2
            {
            pushFollow(FOLLOW_53);
            rule__STRepeatStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1"


    // $ANTLR start "rule__STRepeatStatement__Group__1__Impl"
    // InternalSTAlgorithmParser.g:8519:1: rule__STRepeatStatement__Group__1__Impl : ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) ;
    public final void rule__STRepeatStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8523:1: ( ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) )
            // InternalSTAlgorithmParser.g:8524:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            {
            // InternalSTAlgorithmParser.g:8524:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            // InternalSTAlgorithmParser.g:8525:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:8526:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==LDATE_AND_TIME||LA84_0==DATE_AND_TIME||LA84_0==LTIME_OF_DAY||LA84_0==TIME_OF_DAY||LA84_0==CONTINUE||LA84_0==WSTRING||LA84_0==REPEAT||LA84_0==RETURN||LA84_0==STRING||LA84_0==DWORD||LA84_0==FALSE||(LA84_0>=LDATE && LA84_0<=LWORD)||(LA84_0>=UDINT && LA84_0<=ULINT)||(LA84_0>=USINT && LA84_0<=DINT)||LA84_0==EXIT||(LA84_0>=LINT && LA84_0<=LTOD)||(LA84_0>=REAL && LA84_0<=SINT)||(LA84_0>=THIS && LA84_0<=TRUE)||LA84_0==UINT||(LA84_0>=WORD && LA84_0<=MOD)||LA84_0==TOD||LA84_0==XOR||(LA84_0>=DT && LA84_0<=LT)||LA84_0==OR||LA84_0==LeftParenthesis||LA84_0==PlusSign||LA84_0==HyphenMinus||LA84_0==Semicolon||(LA84_0>=D && LA84_0<=T)||(LA84_0>=RULE_NON_DECIMAL && LA84_0<=RULE_DECIMAL)||(LA84_0>=RULE_ID && LA84_0<=RULE_STRING)) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:8526:3: rule__STRepeatStatement__StatementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STRepeatStatement__StatementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__2"
    // InternalSTAlgorithmParser.g:8534:1: rule__STRepeatStatement__Group__2 : rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 ;
    public final void rule__STRepeatStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8538:1: ( rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 )
            // InternalSTAlgorithmParser.g:8539:2: rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__STRepeatStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2"


    // $ANTLR start "rule__STRepeatStatement__Group__2__Impl"
    // InternalSTAlgorithmParser.g:8546:1: rule__STRepeatStatement__Group__2__Impl : ( UNTIL ) ;
    public final void rule__STRepeatStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8550:1: ( ( UNTIL ) )
            // InternalSTAlgorithmParser.g:8551:1: ( UNTIL )
            {
            // InternalSTAlgorithmParser.g:8551:1: ( UNTIL )
            // InternalSTAlgorithmParser.g:8552:2: UNTIL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }
            match(input,UNTIL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__3"
    // InternalSTAlgorithmParser.g:8561:1: rule__STRepeatStatement__Group__3 : rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 ;
    public final void rule__STRepeatStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8565:1: ( rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 )
            // InternalSTAlgorithmParser.g:8566:2: rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4
            {
            pushFollow(FOLLOW_54);
            rule__STRepeatStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3"


    // $ANTLR start "rule__STRepeatStatement__Group__3__Impl"
    // InternalSTAlgorithmParser.g:8573:1: rule__STRepeatStatement__Group__3__Impl : ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) ;
    public final void rule__STRepeatStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8577:1: ( ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) )
            // InternalSTAlgorithmParser.g:8578:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            {
            // InternalSTAlgorithmParser.g:8578:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            // InternalSTAlgorithmParser.g:8579:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }
            // InternalSTAlgorithmParser.g:8580:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            // InternalSTAlgorithmParser.g:8580:3: rule__STRepeatStatement__ConditionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__ConditionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__4"
    // InternalSTAlgorithmParser.g:8588:1: rule__STRepeatStatement__Group__4 : rule__STRepeatStatement__Group__4__Impl ;
    public final void rule__STRepeatStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8592:1: ( rule__STRepeatStatement__Group__4__Impl )
            // InternalSTAlgorithmParser.g:8593:2: rule__STRepeatStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4"


    // $ANTLR start "rule__STRepeatStatement__Group__4__Impl"
    // InternalSTAlgorithmParser.g:8599:1: rule__STRepeatStatement__Group__4__Impl : ( END_REPEAT ) ;
    public final void rule__STRepeatStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8603:1: ( ( END_REPEAT ) )
            // InternalSTAlgorithmParser.g:8604:1: ( END_REPEAT )
            {
            // InternalSTAlgorithmParser.g:8604:1: ( END_REPEAT )
            // InternalSTAlgorithmParser.g:8605:2: END_REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }
            match(input,END_REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__0"
    // InternalSTAlgorithmParser.g:8615:1: rule__STSubrangeExpression__Group__0 : rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 ;
    public final void rule__STSubrangeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8619:1: ( rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 )
            // InternalSTAlgorithmParser.g:8620:2: rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__STSubrangeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0"


    // $ANTLR start "rule__STSubrangeExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:8627:1: rule__STSubrangeExpression__Group__0__Impl : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8631:1: ( ( ruleSTOrExpression ) )
            // InternalSTAlgorithmParser.g:8632:1: ( ruleSTOrExpression )
            {
            // InternalSTAlgorithmParser.g:8632:1: ( ruleSTOrExpression )
            // InternalSTAlgorithmParser.g:8633:2: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__1"
    // InternalSTAlgorithmParser.g:8642:1: rule__STSubrangeExpression__Group__1 : rule__STSubrangeExpression__Group__1__Impl ;
    public final void rule__STSubrangeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8646:1: ( rule__STSubrangeExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:8647:2: rule__STSubrangeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1"


    // $ANTLR start "rule__STSubrangeExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:8653:1: rule__STSubrangeExpression__Group__1__Impl : ( ( rule__STSubrangeExpression__Group_1__0 )* ) ;
    public final void rule__STSubrangeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8657:1: ( ( ( rule__STSubrangeExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:8658:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:8658:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:8659:2: ( rule__STSubrangeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:8660:2: ( rule__STSubrangeExpression__Group_1__0 )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==FullStopFullStop) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:8660:3: rule__STSubrangeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_56);
            	    rule__STSubrangeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:8669:1: rule__STSubrangeExpression__Group_1__0 : rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 ;
    public final void rule__STSubrangeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8673:1: ( rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:8674:2: rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STSubrangeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:8681:1: rule__STSubrangeExpression__Group_1__0__Impl : ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8685:1: ( ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:8686:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:8686:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:8687:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:8688:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:8688:3: rule__STSubrangeExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:8696:1: rule__STSubrangeExpression__Group_1__1 : rule__STSubrangeExpression__Group_1__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8700:1: ( rule__STSubrangeExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:8701:2: rule__STSubrangeExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:8707:1: rule__STSubrangeExpression__Group_1__1__Impl : ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8711:1: ( ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:8712:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:8712:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:8713:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:8714:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:8714:3: rule__STSubrangeExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:8723:1: rule__STSubrangeExpression__Group_1_0__0 : rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 ;
    public final void rule__STSubrangeExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8727:1: ( rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:8728:2: rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_55);
            rule__STSubrangeExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:8735:1: rule__STSubrangeExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STSubrangeExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8739:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:8740:1: ( () )
            {
            // InternalSTAlgorithmParser.g:8740:1: ( () )
            // InternalSTAlgorithmParser.g:8741:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:8742:2: ()
            // InternalSTAlgorithmParser.g:8742:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:8750:1: rule__STSubrangeExpression__Group_1_0__1 : rule__STSubrangeExpression__Group_1_0__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8754:1: ( rule__STSubrangeExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:8755:2: rule__STSubrangeExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:8761:1: rule__STSubrangeExpression__Group_1_0__1__Impl : ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8765:1: ( ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:8766:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:8766:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:8767:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:8768:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:8768:3: rule__STSubrangeExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group__0"
    // InternalSTAlgorithmParser.g:8777:1: rule__STOrExpression__Group__0 : rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 ;
    public final void rule__STOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8781:1: ( rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 )
            // InternalSTAlgorithmParser.g:8782:2: rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__STOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0"


    // $ANTLR start "rule__STOrExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:8789:1: rule__STOrExpression__Group__0__Impl : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8793:1: ( ( ruleSTXorExpression ) )
            // InternalSTAlgorithmParser.g:8794:1: ( ruleSTXorExpression )
            {
            // InternalSTAlgorithmParser.g:8794:1: ( ruleSTXorExpression )
            // InternalSTAlgorithmParser.g:8795:2: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group__1"
    // InternalSTAlgorithmParser.g:8804:1: rule__STOrExpression__Group__1 : rule__STOrExpression__Group__1__Impl ;
    public final void rule__STOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8808:1: ( rule__STOrExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:8809:2: rule__STOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1"


    // $ANTLR start "rule__STOrExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:8815:1: rule__STOrExpression__Group__1__Impl : ( ( rule__STOrExpression__Group_1__0 )* ) ;
    public final void rule__STOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8819:1: ( ( ( rule__STOrExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:8820:1: ( ( rule__STOrExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:8820:1: ( ( rule__STOrExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:8821:2: ( rule__STOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:8822:2: ( rule__STOrExpression__Group_1__0 )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==OR) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:8822:3: rule__STOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_58);
            	    rule__STOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:8831:1: rule__STOrExpression__Group_1__0 : rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 ;
    public final void rule__STOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8835:1: ( rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:8836:2: rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0"


    // $ANTLR start "rule__STOrExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:8843:1: rule__STOrExpression__Group_1__0__Impl : ( ( rule__STOrExpression__Group_1_0__0 ) ) ;
    public final void rule__STOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8847:1: ( ( ( rule__STOrExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:8848:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:8848:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:8849:2: ( rule__STOrExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:8850:2: ( rule__STOrExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:8850:3: rule__STOrExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:8858:1: rule__STOrExpression__Group_1__1 : rule__STOrExpression__Group_1__1__Impl ;
    public final void rule__STOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8862:1: ( rule__STOrExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:8863:2: rule__STOrExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1"


    // $ANTLR start "rule__STOrExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:8869:1: rule__STOrExpression__Group_1__1__Impl : ( ( rule__STOrExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8873:1: ( ( ( rule__STOrExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:8874:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:8874:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:8875:2: ( rule__STOrExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:8876:2: ( rule__STOrExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:8876:3: rule__STOrExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:8885:1: rule__STOrExpression__Group_1_0__0 : rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 ;
    public final void rule__STOrExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8889:1: ( rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:8890:2: rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_57);
            rule__STOrExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:8897:1: rule__STOrExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STOrExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8901:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:8902:1: ( () )
            {
            // InternalSTAlgorithmParser.g:8902:1: ( () )
            // InternalSTAlgorithmParser.g:8903:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:8904:2: ()
            // InternalSTAlgorithmParser.g:8904:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:8912:1: rule__STOrExpression__Group_1_0__1 : rule__STOrExpression__Group_1_0__1__Impl ;
    public final void rule__STOrExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8916:1: ( rule__STOrExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:8917:2: rule__STOrExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:8923:1: rule__STOrExpression__Group_1_0__1__Impl : ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STOrExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8927:1: ( ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:8928:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:8928:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:8929:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:8930:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:8930:3: rule__STOrExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group__0"
    // InternalSTAlgorithmParser.g:8939:1: rule__STXorExpression__Group__0 : rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 ;
    public final void rule__STXorExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8943:1: ( rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 )
            // InternalSTAlgorithmParser.g:8944:2: rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1
            {
            pushFollow(FOLLOW_59);
            rule__STXorExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0"


    // $ANTLR start "rule__STXorExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:8951:1: rule__STXorExpression__Group__0__Impl : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8955:1: ( ( ruleSTAndExpression ) )
            // InternalSTAlgorithmParser.g:8956:1: ( ruleSTAndExpression )
            {
            // InternalSTAlgorithmParser.g:8956:1: ( ruleSTAndExpression )
            // InternalSTAlgorithmParser.g:8957:2: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group__1"
    // InternalSTAlgorithmParser.g:8966:1: rule__STXorExpression__Group__1 : rule__STXorExpression__Group__1__Impl ;
    public final void rule__STXorExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8970:1: ( rule__STXorExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:8971:2: rule__STXorExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1"


    // $ANTLR start "rule__STXorExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:8977:1: rule__STXorExpression__Group__1__Impl : ( ( rule__STXorExpression__Group_1__0 )* ) ;
    public final void rule__STXorExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8981:1: ( ( ( rule__STXorExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:8982:1: ( ( rule__STXorExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:8982:1: ( ( rule__STXorExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:8983:2: ( rule__STXorExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:8984:2: ( rule__STXorExpression__Group_1__0 )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==XOR) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:8984:3: rule__STXorExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_60);
            	    rule__STXorExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:8993:1: rule__STXorExpression__Group_1__0 : rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 ;
    public final void rule__STXorExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:8997:1: ( rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:8998:2: rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STXorExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0"


    // $ANTLR start "rule__STXorExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:9005:1: rule__STXorExpression__Group_1__0__Impl : ( ( rule__STXorExpression__Group_1_0__0 ) ) ;
    public final void rule__STXorExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9009:1: ( ( ( rule__STXorExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:9010:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:9010:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:9011:2: ( rule__STXorExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:9012:2: ( rule__STXorExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:9012:3: rule__STXorExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:9020:1: rule__STXorExpression__Group_1__1 : rule__STXorExpression__Group_1__1__Impl ;
    public final void rule__STXorExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9024:1: ( rule__STXorExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:9025:2: rule__STXorExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1"


    // $ANTLR start "rule__STXorExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:9031:1: rule__STXorExpression__Group_1__1__Impl : ( ( rule__STXorExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STXorExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9035:1: ( ( ( rule__STXorExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:9036:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:9036:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:9037:2: ( rule__STXorExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:9038:2: ( rule__STXorExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:9038:3: rule__STXorExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:9047:1: rule__STXorExpression__Group_1_0__0 : rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 ;
    public final void rule__STXorExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9051:1: ( rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:9052:2: rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_59);
            rule__STXorExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:9059:1: rule__STXorExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STXorExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9063:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:9064:1: ( () )
            {
            // InternalSTAlgorithmParser.g:9064:1: ( () )
            // InternalSTAlgorithmParser.g:9065:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:9066:2: ()
            // InternalSTAlgorithmParser.g:9066:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:9074:1: rule__STXorExpression__Group_1_0__1 : rule__STXorExpression__Group_1_0__1__Impl ;
    public final void rule__STXorExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9078:1: ( rule__STXorExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:9079:2: rule__STXorExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:9085:1: rule__STXorExpression__Group_1_0__1__Impl : ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STXorExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9089:1: ( ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:9090:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:9090:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:9091:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:9092:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:9092:3: rule__STXorExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group__0"
    // InternalSTAlgorithmParser.g:9101:1: rule__STAndExpression__Group__0 : rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 ;
    public final void rule__STAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9105:1: ( rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 )
            // InternalSTAlgorithmParser.g:9106:2: rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__STAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0"


    // $ANTLR start "rule__STAndExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9113:1: rule__STAndExpression__Group__0__Impl : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9117:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTAlgorithmParser.g:9118:1: ( ruleSTEqualityExpression )
            {
            // InternalSTAlgorithmParser.g:9118:1: ( ruleSTEqualityExpression )
            // InternalSTAlgorithmParser.g:9119:2: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group__1"
    // InternalSTAlgorithmParser.g:9128:1: rule__STAndExpression__Group__1 : rule__STAndExpression__Group__1__Impl ;
    public final void rule__STAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9132:1: ( rule__STAndExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:9133:2: rule__STAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1"


    // $ANTLR start "rule__STAndExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9139:1: rule__STAndExpression__Group__1__Impl : ( ( rule__STAndExpression__Group_1__0 )* ) ;
    public final void rule__STAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9143:1: ( ( ( rule__STAndExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:9144:1: ( ( rule__STAndExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:9144:1: ( ( rule__STAndExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:9145:2: ( rule__STAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:9146:2: ( rule__STAndExpression__Group_1__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==AND||LA88_0==Ampersand) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:9146:3: rule__STAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_62);
            	    rule__STAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:9155:1: rule__STAndExpression__Group_1__0 : rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 ;
    public final void rule__STAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9159:1: ( rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:9160:2: rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0"


    // $ANTLR start "rule__STAndExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:9167:1: rule__STAndExpression__Group_1__0__Impl : ( ( rule__STAndExpression__Group_1_0__0 ) ) ;
    public final void rule__STAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9171:1: ( ( ( rule__STAndExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:9172:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:9172:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:9173:2: ( rule__STAndExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:9174:2: ( rule__STAndExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:9174:3: rule__STAndExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:9182:1: rule__STAndExpression__Group_1__1 : rule__STAndExpression__Group_1__1__Impl ;
    public final void rule__STAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9186:1: ( rule__STAndExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:9187:2: rule__STAndExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1"


    // $ANTLR start "rule__STAndExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:9193:1: rule__STAndExpression__Group_1__1__Impl : ( ( rule__STAndExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9197:1: ( ( ( rule__STAndExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:9198:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:9198:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:9199:2: ( rule__STAndExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:9200:2: ( rule__STAndExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:9200:3: rule__STAndExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:9209:1: rule__STAndExpression__Group_1_0__0 : rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 ;
    public final void rule__STAndExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9213:1: ( rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:9214:2: rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_61);
            rule__STAndExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:9221:1: rule__STAndExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAndExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9225:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:9226:1: ( () )
            {
            // InternalSTAlgorithmParser.g:9226:1: ( () )
            // InternalSTAlgorithmParser.g:9227:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:9228:2: ()
            // InternalSTAlgorithmParser.g:9228:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:9236:1: rule__STAndExpression__Group_1_0__1 : rule__STAndExpression__Group_1_0__1__Impl ;
    public final void rule__STAndExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9240:1: ( rule__STAndExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:9241:2: rule__STAndExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:9247:1: rule__STAndExpression__Group_1_0__1__Impl : ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAndExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9251:1: ( ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:9252:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:9252:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:9253:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:9254:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:9254:3: rule__STAndExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__0"
    // InternalSTAlgorithmParser.g:9263:1: rule__STEqualityExpression__Group__0 : rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 ;
    public final void rule__STEqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9267:1: ( rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 )
            // InternalSTAlgorithmParser.g:9268:2: rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__STEqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0"


    // $ANTLR start "rule__STEqualityExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9275:1: rule__STEqualityExpression__Group__0__Impl : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9279:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTAlgorithmParser.g:9280:1: ( ruleSTComparisonExpression )
            {
            // InternalSTAlgorithmParser.g:9280:1: ( ruleSTComparisonExpression )
            // InternalSTAlgorithmParser.g:9281:2: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__1"
    // InternalSTAlgorithmParser.g:9290:1: rule__STEqualityExpression__Group__1 : rule__STEqualityExpression__Group__1__Impl ;
    public final void rule__STEqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9294:1: ( rule__STEqualityExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:9295:2: rule__STEqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1"


    // $ANTLR start "rule__STEqualityExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9301:1: rule__STEqualityExpression__Group__1__Impl : ( ( rule__STEqualityExpression__Group_1__0 )* ) ;
    public final void rule__STEqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9305:1: ( ( ( rule__STEqualityExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:9306:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:9306:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:9307:2: ( rule__STEqualityExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:9308:2: ( rule__STEqualityExpression__Group_1__0 )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==LessThanSignGreaterThanSign||LA89_0==EqualsSign) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:9308:3: rule__STEqualityExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_64);
            	    rule__STEqualityExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:9317:1: rule__STEqualityExpression__Group_1__0 : rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 ;
    public final void rule__STEqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9321:1: ( rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:9322:2: rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STEqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:9329:1: rule__STEqualityExpression__Group_1__0__Impl : ( ( rule__STEqualityExpression__Group_1_0__0 ) ) ;
    public final void rule__STEqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9333:1: ( ( ( rule__STEqualityExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:9334:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:9334:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:9335:2: ( rule__STEqualityExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:9336:2: ( rule__STEqualityExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:9336:3: rule__STEqualityExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:9344:1: rule__STEqualityExpression__Group_1__1 : rule__STEqualityExpression__Group_1__1__Impl ;
    public final void rule__STEqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9348:1: ( rule__STEqualityExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:9349:2: rule__STEqualityExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:9355:1: rule__STEqualityExpression__Group_1__1__Impl : ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9359:1: ( ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:9360:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:9360:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:9361:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:9362:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:9362:3: rule__STEqualityExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:9371:1: rule__STEqualityExpression__Group_1_0__0 : rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 ;
    public final void rule__STEqualityExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9375:1: ( rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:9376:2: rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_63);
            rule__STEqualityExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:9383:1: rule__STEqualityExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STEqualityExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9387:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:9388:1: ( () )
            {
            // InternalSTAlgorithmParser.g:9388:1: ( () )
            // InternalSTAlgorithmParser.g:9389:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:9390:2: ()
            // InternalSTAlgorithmParser.g:9390:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:9398:1: rule__STEqualityExpression__Group_1_0__1 : rule__STEqualityExpression__Group_1_0__1__Impl ;
    public final void rule__STEqualityExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9402:1: ( rule__STEqualityExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:9403:2: rule__STEqualityExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:9409:1: rule__STEqualityExpression__Group_1_0__1__Impl : ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9413:1: ( ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:9414:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:9414:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:9415:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:9416:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:9416:3: rule__STEqualityExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__0"
    // InternalSTAlgorithmParser.g:9425:1: rule__STComparisonExpression__Group__0 : rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 ;
    public final void rule__STComparisonExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9429:1: ( rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 )
            // InternalSTAlgorithmParser.g:9430:2: rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__STComparisonExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0"


    // $ANTLR start "rule__STComparisonExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9437:1: rule__STComparisonExpression__Group__0__Impl : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9441:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTAlgorithmParser.g:9442:1: ( ruleSTAddSubExpression )
            {
            // InternalSTAlgorithmParser.g:9442:1: ( ruleSTAddSubExpression )
            // InternalSTAlgorithmParser.g:9443:2: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__1"
    // InternalSTAlgorithmParser.g:9452:1: rule__STComparisonExpression__Group__1 : rule__STComparisonExpression__Group__1__Impl ;
    public final void rule__STComparisonExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9456:1: ( rule__STComparisonExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:9457:2: rule__STComparisonExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1"


    // $ANTLR start "rule__STComparisonExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9463:1: rule__STComparisonExpression__Group__1__Impl : ( ( rule__STComparisonExpression__Group_1__0 )* ) ;
    public final void rule__STComparisonExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9467:1: ( ( ( rule__STComparisonExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:9468:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:9468:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:9469:2: ( rule__STComparisonExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:9470:2: ( rule__STComparisonExpression__Group_1__0 )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==LessThanSignEqualsSign||LA90_0==GreaterThanSignEqualsSign||LA90_0==LessThanSign||LA90_0==GreaterThanSign) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:9470:3: rule__STComparisonExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_66);
            	    rule__STComparisonExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:9479:1: rule__STComparisonExpression__Group_1__0 : rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 ;
    public final void rule__STComparisonExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9483:1: ( rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:9484:2: rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STComparisonExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:9491:1: rule__STComparisonExpression__Group_1__0__Impl : ( ( rule__STComparisonExpression__Group_1_0__0 ) ) ;
    public final void rule__STComparisonExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9495:1: ( ( ( rule__STComparisonExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:9496:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:9496:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:9497:2: ( rule__STComparisonExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:9498:2: ( rule__STComparisonExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:9498:3: rule__STComparisonExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:9506:1: rule__STComparisonExpression__Group_1__1 : rule__STComparisonExpression__Group_1__1__Impl ;
    public final void rule__STComparisonExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9510:1: ( rule__STComparisonExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:9511:2: rule__STComparisonExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:9517:1: rule__STComparisonExpression__Group_1__1__Impl : ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9521:1: ( ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:9522:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:9522:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:9523:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:9524:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:9524:3: rule__STComparisonExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:9533:1: rule__STComparisonExpression__Group_1_0__0 : rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 ;
    public final void rule__STComparisonExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9537:1: ( rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:9538:2: rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_65);
            rule__STComparisonExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:9545:1: rule__STComparisonExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STComparisonExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9549:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:9550:1: ( () )
            {
            // InternalSTAlgorithmParser.g:9550:1: ( () )
            // InternalSTAlgorithmParser.g:9551:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:9552:2: ()
            // InternalSTAlgorithmParser.g:9552:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:9560:1: rule__STComparisonExpression__Group_1_0__1 : rule__STComparisonExpression__Group_1_0__1__Impl ;
    public final void rule__STComparisonExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9564:1: ( rule__STComparisonExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:9565:2: rule__STComparisonExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:9571:1: rule__STComparisonExpression__Group_1_0__1__Impl : ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9575:1: ( ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:9576:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:9576:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:9577:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:9578:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:9578:3: rule__STComparisonExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__0"
    // InternalSTAlgorithmParser.g:9587:1: rule__STAddSubExpression__Group__0 : rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 ;
    public final void rule__STAddSubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9591:1: ( rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 )
            // InternalSTAlgorithmParser.g:9592:2: rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1
            {
            pushFollow(FOLLOW_67);
            rule__STAddSubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0"


    // $ANTLR start "rule__STAddSubExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9599:1: rule__STAddSubExpression__Group__0__Impl : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9603:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTAlgorithmParser.g:9604:1: ( ruleSTMulDivModExpression )
            {
            // InternalSTAlgorithmParser.g:9604:1: ( ruleSTMulDivModExpression )
            // InternalSTAlgorithmParser.g:9605:2: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__1"
    // InternalSTAlgorithmParser.g:9614:1: rule__STAddSubExpression__Group__1 : rule__STAddSubExpression__Group__1__Impl ;
    public final void rule__STAddSubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9618:1: ( rule__STAddSubExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:9619:2: rule__STAddSubExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1"


    // $ANTLR start "rule__STAddSubExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9625:1: rule__STAddSubExpression__Group__1__Impl : ( ( rule__STAddSubExpression__Group_1__0 )* ) ;
    public final void rule__STAddSubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9629:1: ( ( ( rule__STAddSubExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:9630:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:9630:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:9631:2: ( rule__STAddSubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:9632:2: ( rule__STAddSubExpression__Group_1__0 )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==PlusSign||LA91_0==HyphenMinus) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:9632:3: rule__STAddSubExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_68);
            	    rule__STAddSubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:9641:1: rule__STAddSubExpression__Group_1__0 : rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 ;
    public final void rule__STAddSubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9645:1: ( rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:9646:2: rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STAddSubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:9653:1: rule__STAddSubExpression__Group_1__0__Impl : ( ( rule__STAddSubExpression__Group_1_0__0 ) ) ;
    public final void rule__STAddSubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9657:1: ( ( ( rule__STAddSubExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:9658:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:9658:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:9659:2: ( rule__STAddSubExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:9660:2: ( rule__STAddSubExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:9660:3: rule__STAddSubExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:9668:1: rule__STAddSubExpression__Group_1__1 : rule__STAddSubExpression__Group_1__1__Impl ;
    public final void rule__STAddSubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9672:1: ( rule__STAddSubExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:9673:2: rule__STAddSubExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:9679:1: rule__STAddSubExpression__Group_1__1__Impl : ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9683:1: ( ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:9684:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:9684:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:9685:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:9686:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:9686:3: rule__STAddSubExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:9695:1: rule__STAddSubExpression__Group_1_0__0 : rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 ;
    public final void rule__STAddSubExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9699:1: ( rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:9700:2: rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_67);
            rule__STAddSubExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:9707:1: rule__STAddSubExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAddSubExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9711:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:9712:1: ( () )
            {
            // InternalSTAlgorithmParser.g:9712:1: ( () )
            // InternalSTAlgorithmParser.g:9713:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:9714:2: ()
            // InternalSTAlgorithmParser.g:9714:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:9722:1: rule__STAddSubExpression__Group_1_0__1 : rule__STAddSubExpression__Group_1_0__1__Impl ;
    public final void rule__STAddSubExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9726:1: ( rule__STAddSubExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:9727:2: rule__STAddSubExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:9733:1: rule__STAddSubExpression__Group_1_0__1__Impl : ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9737:1: ( ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:9738:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:9738:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:9739:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:9740:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:9740:3: rule__STAddSubExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__0"
    // InternalSTAlgorithmParser.g:9749:1: rule__STMulDivModExpression__Group__0 : rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 ;
    public final void rule__STMulDivModExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9753:1: ( rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 )
            // InternalSTAlgorithmParser.g:9754:2: rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__STMulDivModExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0"


    // $ANTLR start "rule__STMulDivModExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9761:1: rule__STMulDivModExpression__Group__0__Impl : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9765:1: ( ( ruleSTPowerExpression ) )
            // InternalSTAlgorithmParser.g:9766:1: ( ruleSTPowerExpression )
            {
            // InternalSTAlgorithmParser.g:9766:1: ( ruleSTPowerExpression )
            // InternalSTAlgorithmParser.g:9767:2: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__1"
    // InternalSTAlgorithmParser.g:9776:1: rule__STMulDivModExpression__Group__1 : rule__STMulDivModExpression__Group__1__Impl ;
    public final void rule__STMulDivModExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9780:1: ( rule__STMulDivModExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:9781:2: rule__STMulDivModExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1"


    // $ANTLR start "rule__STMulDivModExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9787:1: rule__STMulDivModExpression__Group__1__Impl : ( ( rule__STMulDivModExpression__Group_1__0 )* ) ;
    public final void rule__STMulDivModExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9791:1: ( ( ( rule__STMulDivModExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:9792:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:9792:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:9793:2: ( rule__STMulDivModExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:9794:2: ( rule__STMulDivModExpression__Group_1__0 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==MOD||LA92_0==Asterisk||LA92_0==Solidus) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:9794:3: rule__STMulDivModExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_70);
            	    rule__STMulDivModExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:9803:1: rule__STMulDivModExpression__Group_1__0 : rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 ;
    public final void rule__STMulDivModExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9807:1: ( rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:9808:2: rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STMulDivModExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:9815:1: rule__STMulDivModExpression__Group_1__0__Impl : ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9819:1: ( ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:9820:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:9820:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:9821:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:9822:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:9822:3: rule__STMulDivModExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:9830:1: rule__STMulDivModExpression__Group_1__1 : rule__STMulDivModExpression__Group_1__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9834:1: ( rule__STMulDivModExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:9835:2: rule__STMulDivModExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:9841:1: rule__STMulDivModExpression__Group_1__1__Impl : ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9845:1: ( ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:9846:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:9846:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:9847:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:9848:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:9848:3: rule__STMulDivModExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:9857:1: rule__STMulDivModExpression__Group_1_0__0 : rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 ;
    public final void rule__STMulDivModExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9861:1: ( rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:9862:2: rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_69);
            rule__STMulDivModExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:9869:1: rule__STMulDivModExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STMulDivModExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9873:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:9874:1: ( () )
            {
            // InternalSTAlgorithmParser.g:9874:1: ( () )
            // InternalSTAlgorithmParser.g:9875:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:9876:2: ()
            // InternalSTAlgorithmParser.g:9876:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:9884:1: rule__STMulDivModExpression__Group_1_0__1 : rule__STMulDivModExpression__Group_1_0__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9888:1: ( rule__STMulDivModExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:9889:2: rule__STMulDivModExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:9895:1: rule__STMulDivModExpression__Group_1_0__1__Impl : ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9899:1: ( ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:9900:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:9900:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:9901:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:9902:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:9902:3: rule__STMulDivModExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__0"
    // InternalSTAlgorithmParser.g:9911:1: rule__STPowerExpression__Group__0 : rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 ;
    public final void rule__STPowerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9915:1: ( rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 )
            // InternalSTAlgorithmParser.g:9916:2: rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__STPowerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0"


    // $ANTLR start "rule__STPowerExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:9923:1: rule__STPowerExpression__Group__0__Impl : ( ruleSTUnaryExpression ) ;
    public final void rule__STPowerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9927:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTAlgorithmParser.g:9928:1: ( ruleSTUnaryExpression )
            {
            // InternalSTAlgorithmParser.g:9928:1: ( ruleSTUnaryExpression )
            // InternalSTAlgorithmParser.g:9929:2: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTUnaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTUnaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__1"
    // InternalSTAlgorithmParser.g:9938:1: rule__STPowerExpression__Group__1 : rule__STPowerExpression__Group__1__Impl ;
    public final void rule__STPowerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9942:1: ( rule__STPowerExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:9943:2: rule__STPowerExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1"


    // $ANTLR start "rule__STPowerExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:9949:1: rule__STPowerExpression__Group__1__Impl : ( ( rule__STPowerExpression__Group_1__0 )* ) ;
    public final void rule__STPowerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9953:1: ( ( ( rule__STPowerExpression__Group_1__0 )* ) )
            // InternalSTAlgorithmParser.g:9954:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:9954:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            // InternalSTAlgorithmParser.g:9955:2: ( rule__STPowerExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }
            // InternalSTAlgorithmParser.g:9956:2: ( rule__STPowerExpression__Group_1__0 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==AsteriskAsterisk) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:9956:3: rule__STPowerExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_72);
            	    rule__STPowerExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:9965:1: rule__STPowerExpression__Group_1__0 : rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 ;
    public final void rule__STPowerExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9969:1: ( rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:9970:2: rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STPowerExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0"


    // $ANTLR start "rule__STPowerExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:9977:1: rule__STPowerExpression__Group_1__0__Impl : ( ( rule__STPowerExpression__Group_1_0__0 ) ) ;
    public final void rule__STPowerExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9981:1: ( ( ( rule__STPowerExpression__Group_1_0__0 ) ) )
            // InternalSTAlgorithmParser.g:9982:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            {
            // InternalSTAlgorithmParser.g:9982:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            // InternalSTAlgorithmParser.g:9983:2: ( rule__STPowerExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTAlgorithmParser.g:9984:2: ( rule__STPowerExpression__Group_1_0__0 )
            // InternalSTAlgorithmParser.g:9984:3: rule__STPowerExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:9992:1: rule__STPowerExpression__Group_1__1 : rule__STPowerExpression__Group_1__1__Impl ;
    public final void rule__STPowerExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:9996:1: ( rule__STPowerExpression__Group_1__1__Impl )
            // InternalSTAlgorithmParser.g:9997:2: rule__STPowerExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1"


    // $ANTLR start "rule__STPowerExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:10003:1: rule__STPowerExpression__Group_1__1__Impl : ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STPowerExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10007:1: ( ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:10008:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:10008:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:10009:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:10010:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            // InternalSTAlgorithmParser.g:10010:3: rule__STPowerExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:10019:1: rule__STPowerExpression__Group_1_0__0 : rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 ;
    public final void rule__STPowerExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10023:1: ( rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:10024:2: rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_71);
            rule__STPowerExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:10031:1: rule__STPowerExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STPowerExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10035:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:10036:1: ( () )
            {
            // InternalSTAlgorithmParser.g:10036:1: ( () )
            // InternalSTAlgorithmParser.g:10037:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:10038:2: ()
            // InternalSTAlgorithmParser.g:10038:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:10046:1: rule__STPowerExpression__Group_1_0__1 : rule__STPowerExpression__Group_1_0__1__Impl ;
    public final void rule__STPowerExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10050:1: ( rule__STPowerExpression__Group_1_0__1__Impl )
            // InternalSTAlgorithmParser.g:10051:2: rule__STPowerExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:10057:1: rule__STPowerExpression__Group_1_0__1__Impl : ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STPowerExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10061:1: ( ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTAlgorithmParser.g:10062:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTAlgorithmParser.g:10062:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            // InternalSTAlgorithmParser.g:10063:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTAlgorithmParser.g:10064:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            // InternalSTAlgorithmParser.g:10064:3: rule__STPowerExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__0"
    // InternalSTAlgorithmParser.g:10073:1: rule__STUnaryExpression__Group_1__0 : rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1 ;
    public final void rule__STUnaryExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10077:1: ( rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1 )
            // InternalSTAlgorithmParser.g:10078:2: rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STUnaryExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__0"


    // $ANTLR start "rule__STUnaryExpression__Group_1__0__Impl"
    // InternalSTAlgorithmParser.g:10085:1: rule__STUnaryExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STUnaryExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10089:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:10090:1: ( () )
            {
            // InternalSTAlgorithmParser.g:10090:1: ( () )
            // InternalSTAlgorithmParser.g:10091:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getSTUnaryExpressionAction_1_0()); 
            }
            // InternalSTAlgorithmParser.g:10092:2: ()
            // InternalSTAlgorithmParser.g:10092:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getSTUnaryExpressionAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__1"
    // InternalSTAlgorithmParser.g:10100:1: rule__STUnaryExpression__Group_1__1 : rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2 ;
    public final void rule__STUnaryExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10104:1: ( rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2 )
            // InternalSTAlgorithmParser.g:10105:2: rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2
            {
            pushFollow(FOLLOW_14);
            rule__STUnaryExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__1"


    // $ANTLR start "rule__STUnaryExpression__Group_1__1__Impl"
    // InternalSTAlgorithmParser.g:10112:1: rule__STUnaryExpression__Group_1__1__Impl : ( ( rule__STUnaryExpression__OpAssignment_1_1 ) ) ;
    public final void rule__STUnaryExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10116:1: ( ( ( rule__STUnaryExpression__OpAssignment_1_1 ) ) )
            // InternalSTAlgorithmParser.g:10117:1: ( ( rule__STUnaryExpression__OpAssignment_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:10117:1: ( ( rule__STUnaryExpression__OpAssignment_1_1 ) )
            // InternalSTAlgorithmParser.g:10118:2: ( rule__STUnaryExpression__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getOpAssignment_1_1()); 
            }
            // InternalSTAlgorithmParser.g:10119:2: ( rule__STUnaryExpression__OpAssignment_1_1 )
            // InternalSTAlgorithmParser.g:10119:3: rule__STUnaryExpression__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__2"
    // InternalSTAlgorithmParser.g:10127:1: rule__STUnaryExpression__Group_1__2 : rule__STUnaryExpression__Group_1__2__Impl ;
    public final void rule__STUnaryExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10131:1: ( rule__STUnaryExpression__Group_1__2__Impl )
            // InternalSTAlgorithmParser.g:10132:2: rule__STUnaryExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__2"


    // $ANTLR start "rule__STUnaryExpression__Group_1__2__Impl"
    // InternalSTAlgorithmParser.g:10138:1: rule__STUnaryExpression__Group_1__2__Impl : ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) ) ;
    public final void rule__STUnaryExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10142:1: ( ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) ) )
            // InternalSTAlgorithmParser.g:10143:1: ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) )
            {
            // InternalSTAlgorithmParser.g:10143:1: ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) )
            // InternalSTAlgorithmParser.g:10144:2: ( rule__STUnaryExpression__ExpressionAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getExpressionAssignment_1_2()); 
            }
            // InternalSTAlgorithmParser.g:10145:2: ( rule__STUnaryExpression__ExpressionAssignment_1_2 )
            // InternalSTAlgorithmParser.g:10145:3: rule__STUnaryExpression__ExpressionAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__ExpressionAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getExpressionAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group__0"
    // InternalSTAlgorithmParser.g:10154:1: rule__STAccessExpression__Group__0 : rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1 ;
    public final void rule__STAccessExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10158:1: ( rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1 )
            // InternalSTAlgorithmParser.g:10159:2: rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__STAccessExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__0"


    // $ANTLR start "rule__STAccessExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:10166:1: rule__STAccessExpression__Group__0__Impl : ( ruleSTPrimaryExpression ) ;
    public final void rule__STAccessExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10170:1: ( ( ruleSTPrimaryExpression ) )
            // InternalSTAlgorithmParser.g:10171:1: ( ruleSTPrimaryExpression )
            {
            // InternalSTAlgorithmParser.g:10171:1: ( ruleSTPrimaryExpression )
            // InternalSTAlgorithmParser.g:10172:2: ruleSTPrimaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTPrimaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTPrimaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group__1"
    // InternalSTAlgorithmParser.g:10181:1: rule__STAccessExpression__Group__1 : rule__STAccessExpression__Group__1__Impl ;
    public final void rule__STAccessExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10185:1: ( rule__STAccessExpression__Group__1__Impl )
            // InternalSTAlgorithmParser.g:10186:2: rule__STAccessExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__1"


    // $ANTLR start "rule__STAccessExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:10192:1: rule__STAccessExpression__Group__1__Impl : ( ( rule__STAccessExpression__Alternatives_1 )* ) ;
    public final void rule__STAccessExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10196:1: ( ( ( rule__STAccessExpression__Alternatives_1 )* ) )
            // InternalSTAlgorithmParser.g:10197:1: ( ( rule__STAccessExpression__Alternatives_1 )* )
            {
            // InternalSTAlgorithmParser.g:10197:1: ( ( rule__STAccessExpression__Alternatives_1 )* )
            // InternalSTAlgorithmParser.g:10198:2: ( rule__STAccessExpression__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getAlternatives_1()); 
            }
            // InternalSTAlgorithmParser.g:10199:2: ( rule__STAccessExpression__Alternatives_1 )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==FullStop||LA94_0==LeftSquareBracket) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:10199:3: rule__STAccessExpression__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_74);
            	    rule__STAccessExpression__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__0"
    // InternalSTAlgorithmParser.g:10208:1: rule__STAccessExpression__Group_1_0__0 : rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1 ;
    public final void rule__STAccessExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10212:1: ( rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1 )
            // InternalSTAlgorithmParser.g:10213:2: rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_75);
            rule__STAccessExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__0__Impl"
    // InternalSTAlgorithmParser.g:10220:1: rule__STAccessExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAccessExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10224:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:10225:1: ( () )
            {
            // InternalSTAlgorithmParser.g:10225:1: ( () )
            // InternalSTAlgorithmParser.g:10226:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTMemberAccessExpressionReceiverAction_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:10227:2: ()
            // InternalSTAlgorithmParser.g:10227:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTMemberAccessExpressionReceiverAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__1"
    // InternalSTAlgorithmParser.g:10235:1: rule__STAccessExpression__Group_1_0__1 : rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2 ;
    public final void rule__STAccessExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10239:1: ( rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2 )
            // InternalSTAlgorithmParser.g:10240:2: rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2
            {
            pushFollow(FOLLOW_76);
            rule__STAccessExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__1__Impl"
    // InternalSTAlgorithmParser.g:10247:1: rule__STAccessExpression__Group_1_0__1__Impl : ( FullStop ) ;
    public final void rule__STAccessExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10251:1: ( ( FullStop ) )
            // InternalSTAlgorithmParser.g:10252:1: ( FullStop )
            {
            // InternalSTAlgorithmParser.g:10252:1: ( FullStop )
            // InternalSTAlgorithmParser.g:10253:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getFullStopKeyword_1_0_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getFullStopKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__2"
    // InternalSTAlgorithmParser.g:10262:1: rule__STAccessExpression__Group_1_0__2 : rule__STAccessExpression__Group_1_0__2__Impl ;
    public final void rule__STAccessExpression__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10266:1: ( rule__STAccessExpression__Group_1_0__2__Impl )
            // InternalSTAlgorithmParser.g:10267:2: rule__STAccessExpression__Group_1_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__2"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__2__Impl"
    // InternalSTAlgorithmParser.g:10273:1: rule__STAccessExpression__Group_1_0__2__Impl : ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) ) ;
    public final void rule__STAccessExpression__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10277:1: ( ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) ) )
            // InternalSTAlgorithmParser.g:10278:1: ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) )
            {
            // InternalSTAlgorithmParser.g:10278:1: ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) )
            // InternalSTAlgorithmParser.g:10279:2: ( rule__STAccessExpression__MemberAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getMemberAssignment_1_0_2()); 
            }
            // InternalSTAlgorithmParser.g:10280:2: ( rule__STAccessExpression__MemberAssignment_1_0_2 )
            // InternalSTAlgorithmParser.g:10280:3: rule__STAccessExpression__MemberAssignment_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__MemberAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getMemberAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__0"
    // InternalSTAlgorithmParser.g:10289:1: rule__STAccessExpression__Group_1_1__0 : rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1 ;
    public final void rule__STAccessExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10293:1: ( rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1 )
            // InternalSTAlgorithmParser.g:10294:2: rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_73);
            rule__STAccessExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__0__Impl"
    // InternalSTAlgorithmParser.g:10301:1: rule__STAccessExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__STAccessExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10305:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:10306:1: ( () )
            {
            // InternalSTAlgorithmParser.g:10306:1: ( () )
            // InternalSTAlgorithmParser.g:10307:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTArrayAccessExpressionReceiverAction_1_1_0()); 
            }
            // InternalSTAlgorithmParser.g:10308:2: ()
            // InternalSTAlgorithmParser.g:10308:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTArrayAccessExpressionReceiverAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__1"
    // InternalSTAlgorithmParser.g:10316:1: rule__STAccessExpression__Group_1_1__1 : rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2 ;
    public final void rule__STAccessExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10320:1: ( rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2 )
            // InternalSTAlgorithmParser.g:10321:2: rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2
            {
            pushFollow(FOLLOW_14);
            rule__STAccessExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__1__Impl"
    // InternalSTAlgorithmParser.g:10328:1: rule__STAccessExpression__Group_1_1__1__Impl : ( LeftSquareBracket ) ;
    public final void rule__STAccessExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10332:1: ( ( LeftSquareBracket ) )
            // InternalSTAlgorithmParser.g:10333:1: ( LeftSquareBracket )
            {
            // InternalSTAlgorithmParser.g:10333:1: ( LeftSquareBracket )
            // InternalSTAlgorithmParser.g:10334:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__2"
    // InternalSTAlgorithmParser.g:10343:1: rule__STAccessExpression__Group_1_1__2 : rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3 ;
    public final void rule__STAccessExpression__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10347:1: ( rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3 )
            // InternalSTAlgorithmParser.g:10348:2: rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3
            {
            pushFollow(FOLLOW_27);
            rule__STAccessExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__2"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__2__Impl"
    // InternalSTAlgorithmParser.g:10355:1: rule__STAccessExpression__Group_1_1__2__Impl : ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) ) ;
    public final void rule__STAccessExpression__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10359:1: ( ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) ) )
            // InternalSTAlgorithmParser.g:10360:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) )
            {
            // InternalSTAlgorithmParser.g:10360:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) )
            // InternalSTAlgorithmParser.g:10361:2: ( rule__STAccessExpression__IndexAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_2()); 
            }
            // InternalSTAlgorithmParser.g:10362:2: ( rule__STAccessExpression__IndexAssignment_1_1_2 )
            // InternalSTAlgorithmParser.g:10362:3: rule__STAccessExpression__IndexAssignment_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__IndexAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__3"
    // InternalSTAlgorithmParser.g:10370:1: rule__STAccessExpression__Group_1_1__3 : rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4 ;
    public final void rule__STAccessExpression__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10374:1: ( rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4 )
            // InternalSTAlgorithmParser.g:10375:2: rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4
            {
            pushFollow(FOLLOW_27);
            rule__STAccessExpression__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__3"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__3__Impl"
    // InternalSTAlgorithmParser.g:10382:1: rule__STAccessExpression__Group_1_1__3__Impl : ( ( rule__STAccessExpression__Group_1_1_3__0 )* ) ;
    public final void rule__STAccessExpression__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10386:1: ( ( ( rule__STAccessExpression__Group_1_1_3__0 )* ) )
            // InternalSTAlgorithmParser.g:10387:1: ( ( rule__STAccessExpression__Group_1_1_3__0 )* )
            {
            // InternalSTAlgorithmParser.g:10387:1: ( ( rule__STAccessExpression__Group_1_1_3__0 )* )
            // InternalSTAlgorithmParser.g:10388:2: ( rule__STAccessExpression__Group_1_1_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1_3()); 
            }
            // InternalSTAlgorithmParser.g:10389:2: ( rule__STAccessExpression__Group_1_1_3__0 )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==Comma) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:10389:3: rule__STAccessExpression__Group_1_1_3__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STAccessExpression__Group_1_1_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__3__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__4"
    // InternalSTAlgorithmParser.g:10397:1: rule__STAccessExpression__Group_1_1__4 : rule__STAccessExpression__Group_1_1__4__Impl ;
    public final void rule__STAccessExpression__Group_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10401:1: ( rule__STAccessExpression__Group_1_1__4__Impl )
            // InternalSTAlgorithmParser.g:10402:2: rule__STAccessExpression__Group_1_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__4"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__4__Impl"
    // InternalSTAlgorithmParser.g:10408:1: rule__STAccessExpression__Group_1_1__4__Impl : ( RightSquareBracket ) ;
    public final void rule__STAccessExpression__Group_1_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10412:1: ( ( RightSquareBracket ) )
            // InternalSTAlgorithmParser.g:10413:1: ( RightSquareBracket )
            {
            // InternalSTAlgorithmParser.g:10413:1: ( RightSquareBracket )
            // InternalSTAlgorithmParser.g:10414:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getRightSquareBracketKeyword_1_1_4()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getRightSquareBracketKeyword_1_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__4__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__0"
    // InternalSTAlgorithmParser.g:10424:1: rule__STAccessExpression__Group_1_1_3__0 : rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1 ;
    public final void rule__STAccessExpression__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10428:1: ( rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1 )
            // InternalSTAlgorithmParser.g:10429:2: rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1
            {
            pushFollow(FOLLOW_14);
            rule__STAccessExpression__Group_1_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__0__Impl"
    // InternalSTAlgorithmParser.g:10436:1: rule__STAccessExpression__Group_1_1_3__0__Impl : ( Comma ) ;
    public final void rule__STAccessExpression__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10440:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:10441:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:10441:1: ( Comma )
            // InternalSTAlgorithmParser.g:10442:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getCommaKeyword_1_1_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getCommaKeyword_1_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__1"
    // InternalSTAlgorithmParser.g:10451:1: rule__STAccessExpression__Group_1_1_3__1 : rule__STAccessExpression__Group_1_1_3__1__Impl ;
    public final void rule__STAccessExpression__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10455:1: ( rule__STAccessExpression__Group_1_1_3__1__Impl )
            // InternalSTAlgorithmParser.g:10456:2: rule__STAccessExpression__Group_1_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__1__Impl"
    // InternalSTAlgorithmParser.g:10462:1: rule__STAccessExpression__Group_1_1_3__1__Impl : ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) ) ;
    public final void rule__STAccessExpression__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10466:1: ( ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) ) )
            // InternalSTAlgorithmParser.g:10467:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) )
            {
            // InternalSTAlgorithmParser.g:10467:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) )
            // InternalSTAlgorithmParser.g:10468:2: ( rule__STAccessExpression__IndexAssignment_1_1_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_3_1()); 
            }
            // InternalSTAlgorithmParser.g:10469:2: ( rule__STAccessExpression__IndexAssignment_1_1_3_1 )
            // InternalSTAlgorithmParser.g:10469:3: rule__STAccessExpression__IndexAssignment_1_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__IndexAssignment_1_1_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__0"
    // InternalSTAlgorithmParser.g:10478:1: rule__STPrimaryExpression__Group_0__0 : rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1 ;
    public final void rule__STPrimaryExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10482:1: ( rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1 )
            // InternalSTAlgorithmParser.g:10483:2: rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1
            {
            pushFollow(FOLLOW_14);
            rule__STPrimaryExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__0"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__0__Impl"
    // InternalSTAlgorithmParser.g:10490:1: rule__STPrimaryExpression__Group_0__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STPrimaryExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10494:1: ( ( LeftParenthesis ) )
            // InternalSTAlgorithmParser.g:10495:1: ( LeftParenthesis )
            {
            // InternalSTAlgorithmParser.g:10495:1: ( LeftParenthesis )
            // InternalSTAlgorithmParser.g:10496:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__0__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__1"
    // InternalSTAlgorithmParser.g:10505:1: rule__STPrimaryExpression__Group_0__1 : rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2 ;
    public final void rule__STPrimaryExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10509:1: ( rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2 )
            // InternalSTAlgorithmParser.g:10510:2: rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2
            {
            pushFollow(FOLLOW_77);
            rule__STPrimaryExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__1"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__1__Impl"
    // InternalSTAlgorithmParser.g:10517:1: rule__STPrimaryExpression__Group_0__1__Impl : ( ruleSTExpression ) ;
    public final void rule__STPrimaryExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10521:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:10522:1: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:10522:1: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:10523:2: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__1__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__2"
    // InternalSTAlgorithmParser.g:10532:1: rule__STPrimaryExpression__Group_0__2 : rule__STPrimaryExpression__Group_0__2__Impl ;
    public final void rule__STPrimaryExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10536:1: ( rule__STPrimaryExpression__Group_0__2__Impl )
            // InternalSTAlgorithmParser.g:10537:2: rule__STPrimaryExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__2"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__2__Impl"
    // InternalSTAlgorithmParser.g:10543:1: rule__STPrimaryExpression__Group_0__2__Impl : ( RightParenthesis ) ;
    public final void rule__STPrimaryExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10547:1: ( ( RightParenthesis ) )
            // InternalSTAlgorithmParser.g:10548:1: ( RightParenthesis )
            {
            // InternalSTAlgorithmParser.g:10548:1: ( RightParenthesis )
            // InternalSTAlgorithmParser.g:10549:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__0"
    // InternalSTAlgorithmParser.g:10559:1: rule__STFeatureExpression__Group__0 : rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1 ;
    public final void rule__STFeatureExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10563:1: ( rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1 )
            // InternalSTAlgorithmParser.g:10564:2: rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__STFeatureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__0"


    // $ANTLR start "rule__STFeatureExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:10571:1: rule__STFeatureExpression__Group__0__Impl : ( () ) ;
    public final void rule__STFeatureExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10575:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:10576:1: ( () )
            {
            // InternalSTAlgorithmParser.g:10576:1: ( () )
            // InternalSTAlgorithmParser.g:10577:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getSTFeatureExpressionAction_0()); 
            }
            // InternalSTAlgorithmParser.g:10578:2: ()
            // InternalSTAlgorithmParser.g:10578:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getSTFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__1"
    // InternalSTAlgorithmParser.g:10586:1: rule__STFeatureExpression__Group__1 : rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2 ;
    public final void rule__STFeatureExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10590:1: ( rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2 )
            // InternalSTAlgorithmParser.g:10591:2: rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__STFeatureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__1"


    // $ANTLR start "rule__STFeatureExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:10598:1: rule__STFeatureExpression__Group__1__Impl : ( ( rule__STFeatureExpression__FeatureAssignment_1 ) ) ;
    public final void rule__STFeatureExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10602:1: ( ( ( rule__STFeatureExpression__FeatureAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:10603:1: ( ( rule__STFeatureExpression__FeatureAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:10603:1: ( ( rule__STFeatureExpression__FeatureAssignment_1 ) )
            // InternalSTAlgorithmParser.g:10604:2: ( rule__STFeatureExpression__FeatureAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:10605:2: ( rule__STFeatureExpression__FeatureAssignment_1 )
            // InternalSTAlgorithmParser.g:10605:3: rule__STFeatureExpression__FeatureAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__FeatureAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__2"
    // InternalSTAlgorithmParser.g:10613:1: rule__STFeatureExpression__Group__2 : rule__STFeatureExpression__Group__2__Impl ;
    public final void rule__STFeatureExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10617:1: ( rule__STFeatureExpression__Group__2__Impl )
            // InternalSTAlgorithmParser.g:10618:2: rule__STFeatureExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__2"


    // $ANTLR start "rule__STFeatureExpression__Group__2__Impl"
    // InternalSTAlgorithmParser.g:10624:1: rule__STFeatureExpression__Group__2__Impl : ( ( rule__STFeatureExpression__Group_2__0 )? ) ;
    public final void rule__STFeatureExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10628:1: ( ( ( rule__STFeatureExpression__Group_2__0 )? ) )
            // InternalSTAlgorithmParser.g:10629:1: ( ( rule__STFeatureExpression__Group_2__0 )? )
            {
            // InternalSTAlgorithmParser.g:10629:1: ( ( rule__STFeatureExpression__Group_2__0 )? )
            // InternalSTAlgorithmParser.g:10630:2: ( rule__STFeatureExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2()); 
            }
            // InternalSTAlgorithmParser.g:10631:2: ( rule__STFeatureExpression__Group_2__0 )?
            int alt96=2;
            alt96 = dfa96.predict(input);
            switch (alt96) {
                case 1 :
                    // InternalSTAlgorithmParser.g:10631:3: rule__STFeatureExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFeatureExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__0"
    // InternalSTAlgorithmParser.g:10640:1: rule__STFeatureExpression__Group_2__0 : rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1 ;
    public final void rule__STFeatureExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10644:1: ( rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1 )
            // InternalSTAlgorithmParser.g:10645:2: rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1
            {
            pushFollow(FOLLOW_78);
            rule__STFeatureExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2__0__Impl"
    // InternalSTAlgorithmParser.g:10652:1: rule__STFeatureExpression__Group_2__0__Impl : ( ( rule__STFeatureExpression__CallAssignment_2_0 ) ) ;
    public final void rule__STFeatureExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10656:1: ( ( ( rule__STFeatureExpression__CallAssignment_2_0 ) ) )
            // InternalSTAlgorithmParser.g:10657:1: ( ( rule__STFeatureExpression__CallAssignment_2_0 ) )
            {
            // InternalSTAlgorithmParser.g:10657:1: ( ( rule__STFeatureExpression__CallAssignment_2_0 ) )
            // InternalSTAlgorithmParser.g:10658:2: ( rule__STFeatureExpression__CallAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCallAssignment_2_0()); 
            }
            // InternalSTAlgorithmParser.g:10659:2: ( rule__STFeatureExpression__CallAssignment_2_0 )
            // InternalSTAlgorithmParser.g:10659:3: rule__STFeatureExpression__CallAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__CallAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCallAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__1"
    // InternalSTAlgorithmParser.g:10667:1: rule__STFeatureExpression__Group_2__1 : rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2 ;
    public final void rule__STFeatureExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10671:1: ( rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2 )
            // InternalSTAlgorithmParser.g:10672:2: rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2
            {
            pushFollow(FOLLOW_78);
            rule__STFeatureExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2__1__Impl"
    // InternalSTAlgorithmParser.g:10679:1: rule__STFeatureExpression__Group_2__1__Impl : ( ( rule__STFeatureExpression__Group_2_1__0 )? ) ;
    public final void rule__STFeatureExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10683:1: ( ( ( rule__STFeatureExpression__Group_2_1__0 )? ) )
            // InternalSTAlgorithmParser.g:10684:1: ( ( rule__STFeatureExpression__Group_2_1__0 )? )
            {
            // InternalSTAlgorithmParser.g:10684:1: ( ( rule__STFeatureExpression__Group_2_1__0 )? )
            // InternalSTAlgorithmParser.g:10685:2: ( rule__STFeatureExpression__Group_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1()); 
            }
            // InternalSTAlgorithmParser.g:10686:2: ( rule__STFeatureExpression__Group_2_1__0 )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==LDATE_AND_TIME||LA97_0==DATE_AND_TIME||LA97_0==LTIME_OF_DAY||LA97_0==TIME_OF_DAY||LA97_0==WSTRING||LA97_0==STRING||LA97_0==DWORD||LA97_0==FALSE||(LA97_0>=LDATE && LA97_0<=LWORD)||(LA97_0>=UDINT && LA97_0<=ULINT)||(LA97_0>=USINT && LA97_0<=WCHAR)||(LA97_0>=BOOL && LA97_0<=BYTE)||(LA97_0>=CHAR && LA97_0<=DINT)||(LA97_0>=LINT && LA97_0<=LTOD)||(LA97_0>=REAL && LA97_0<=SINT)||(LA97_0>=THIS && LA97_0<=TRUE)||LA97_0==UINT||(LA97_0>=WORD && LA97_0<=AND)||(LA97_0>=INT && LA97_0<=NOT)||LA97_0==TOD||LA97_0==XOR||LA97_0==DT||(LA97_0>=LD && LA97_0<=LT)||LA97_0==OR||LA97_0==LeftParenthesis||LA97_0==PlusSign||LA97_0==HyphenMinus||(LA97_0>=D && LA97_0<=T)||(LA97_0>=RULE_NON_DECIMAL && LA97_0<=RULE_DECIMAL)||(LA97_0>=RULE_ID && LA97_0<=RULE_STRING)) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalSTAlgorithmParser.g:10686:3: rule__STFeatureExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFeatureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__2"
    // InternalSTAlgorithmParser.g:10694:1: rule__STFeatureExpression__Group_2__2 : rule__STFeatureExpression__Group_2__2__Impl ;
    public final void rule__STFeatureExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10698:1: ( rule__STFeatureExpression__Group_2__2__Impl )
            // InternalSTAlgorithmParser.g:10699:2: rule__STFeatureExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__2"


    // $ANTLR start "rule__STFeatureExpression__Group_2__2__Impl"
    // InternalSTAlgorithmParser.g:10705:1: rule__STFeatureExpression__Group_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STFeatureExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10709:1: ( ( RightParenthesis ) )
            // InternalSTAlgorithmParser.g:10710:1: ( RightParenthesis )
            {
            // InternalSTAlgorithmParser.g:10710:1: ( RightParenthesis )
            // InternalSTAlgorithmParser.g:10711:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__0"
    // InternalSTAlgorithmParser.g:10721:1: rule__STFeatureExpression__Group_2_1__0 : rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1 ;
    public final void rule__STFeatureExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10725:1: ( rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1 )
            // InternalSTAlgorithmParser.g:10726:2: rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_79);
            rule__STFeatureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__0__Impl"
    // InternalSTAlgorithmParser.g:10733:1: rule__STFeatureExpression__Group_2_1__0__Impl : ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) ) ;
    public final void rule__STFeatureExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10737:1: ( ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) ) )
            // InternalSTAlgorithmParser.g:10738:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) )
            {
            // InternalSTAlgorithmParser.g:10738:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) )
            // InternalSTAlgorithmParser.g:10739:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }
            // InternalSTAlgorithmParser.g:10740:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_0 )
            // InternalSTAlgorithmParser.g:10740:3: rule__STFeatureExpression__ParametersAssignment_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__ParametersAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__1"
    // InternalSTAlgorithmParser.g:10748:1: rule__STFeatureExpression__Group_2_1__1 : rule__STFeatureExpression__Group_2_1__1__Impl ;
    public final void rule__STFeatureExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10752:1: ( rule__STFeatureExpression__Group_2_1__1__Impl )
            // InternalSTAlgorithmParser.g:10753:2: rule__STFeatureExpression__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__1__Impl"
    // InternalSTAlgorithmParser.g:10759:1: rule__STFeatureExpression__Group_2_1__1__Impl : ( ( rule__STFeatureExpression__Group_2_1_1__0 )* ) ;
    public final void rule__STFeatureExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10763:1: ( ( ( rule__STFeatureExpression__Group_2_1_1__0 )* ) )
            // InternalSTAlgorithmParser.g:10764:1: ( ( rule__STFeatureExpression__Group_2_1_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:10764:1: ( ( rule__STFeatureExpression__Group_2_1_1__0 )* )
            // InternalSTAlgorithmParser.g:10765:2: ( rule__STFeatureExpression__Group_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1_1()); 
            }
            // InternalSTAlgorithmParser.g:10766:2: ( rule__STFeatureExpression__Group_2_1_1__0 )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==Comma) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:10766:3: rule__STFeatureExpression__Group_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STFeatureExpression__Group_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__0"
    // InternalSTAlgorithmParser.g:10775:1: rule__STFeatureExpression__Group_2_1_1__0 : rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1 ;
    public final void rule__STFeatureExpression__Group_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10779:1: ( rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1 )
            // InternalSTAlgorithmParser.g:10780:2: rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STFeatureExpression__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__0__Impl"
    // InternalSTAlgorithmParser.g:10787:1: rule__STFeatureExpression__Group_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STFeatureExpression__Group_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10791:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:10792:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:10792:1: ( Comma )
            // InternalSTAlgorithmParser.g:10793:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__1"
    // InternalSTAlgorithmParser.g:10802:1: rule__STFeatureExpression__Group_2_1_1__1 : rule__STFeatureExpression__Group_2_1_1__1__Impl ;
    public final void rule__STFeatureExpression__Group_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10806:1: ( rule__STFeatureExpression__Group_2_1_1__1__Impl )
            // InternalSTAlgorithmParser.g:10807:2: rule__STFeatureExpression__Group_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__1__Impl"
    // InternalSTAlgorithmParser.g:10813:1: rule__STFeatureExpression__Group_2_1_1__1__Impl : ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) ) ;
    public final void rule__STFeatureExpression__Group_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10817:1: ( ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) ) )
            // InternalSTAlgorithmParser.g:10818:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:10818:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            // InternalSTAlgorithmParser.g:10819:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }
            // InternalSTAlgorithmParser.g:10820:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 )
            // InternalSTAlgorithmParser.g:10820:3: rule__STFeatureExpression__ParametersAssignment_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__ParametersAssignment_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__0"
    // InternalSTAlgorithmParser.g:10829:1: rule__STBuiltinFeatureExpression__Group__0 : rule__STBuiltinFeatureExpression__Group__0__Impl rule__STBuiltinFeatureExpression__Group__1 ;
    public final void rule__STBuiltinFeatureExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10833:1: ( rule__STBuiltinFeatureExpression__Group__0__Impl rule__STBuiltinFeatureExpression__Group__1 )
            // InternalSTAlgorithmParser.g:10834:2: rule__STBuiltinFeatureExpression__Group__0__Impl rule__STBuiltinFeatureExpression__Group__1
            {
            pushFollow(FOLLOW_80);
            rule__STBuiltinFeatureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:10841:1: rule__STBuiltinFeatureExpression__Group__0__Impl : ( () ) ;
    public final void rule__STBuiltinFeatureExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10845:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:10846:1: ( () )
            {
            // InternalSTAlgorithmParser.g:10846:1: ( () )
            // InternalSTAlgorithmParser.g:10847:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getSTBuiltinFeatureExpressionAction_0()); 
            }
            // InternalSTAlgorithmParser.g:10848:2: ()
            // InternalSTAlgorithmParser.g:10848:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getSTBuiltinFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__0__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__1"
    // InternalSTAlgorithmParser.g:10856:1: rule__STBuiltinFeatureExpression__Group__1 : rule__STBuiltinFeatureExpression__Group__1__Impl rule__STBuiltinFeatureExpression__Group__2 ;
    public final void rule__STBuiltinFeatureExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10860:1: ( rule__STBuiltinFeatureExpression__Group__1__Impl rule__STBuiltinFeatureExpression__Group__2 )
            // InternalSTAlgorithmParser.g:10861:2: rule__STBuiltinFeatureExpression__Group__1__Impl rule__STBuiltinFeatureExpression__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__STBuiltinFeatureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:10868:1: rule__STBuiltinFeatureExpression__Group__1__Impl : ( ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 ) ) ;
    public final void rule__STBuiltinFeatureExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10872:1: ( ( ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:10873:1: ( ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:10873:1: ( ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 ) )
            // InternalSTAlgorithmParser.g:10874:2: ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getFeatureAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:10875:2: ( rule__STBuiltinFeatureExpression__FeatureAssignment_1 )
            // InternalSTAlgorithmParser.g:10875:3: rule__STBuiltinFeatureExpression__FeatureAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__FeatureAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getFeatureAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__1__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__2"
    // InternalSTAlgorithmParser.g:10883:1: rule__STBuiltinFeatureExpression__Group__2 : rule__STBuiltinFeatureExpression__Group__2__Impl ;
    public final void rule__STBuiltinFeatureExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10887:1: ( rule__STBuiltinFeatureExpression__Group__2__Impl )
            // InternalSTAlgorithmParser.g:10888:2: rule__STBuiltinFeatureExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__2"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group__2__Impl"
    // InternalSTAlgorithmParser.g:10894:1: rule__STBuiltinFeatureExpression__Group__2__Impl : ( ( rule__STBuiltinFeatureExpression__Group_2__0 )? ) ;
    public final void rule__STBuiltinFeatureExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10898:1: ( ( ( rule__STBuiltinFeatureExpression__Group_2__0 )? ) )
            // InternalSTAlgorithmParser.g:10899:1: ( ( rule__STBuiltinFeatureExpression__Group_2__0 )? )
            {
            // InternalSTAlgorithmParser.g:10899:1: ( ( rule__STBuiltinFeatureExpression__Group_2__0 )? )
            // InternalSTAlgorithmParser.g:10900:2: ( rule__STBuiltinFeatureExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2()); 
            }
            // InternalSTAlgorithmParser.g:10901:2: ( rule__STBuiltinFeatureExpression__Group_2__0 )?
            int alt99=2;
            alt99 = dfa99.predict(input);
            switch (alt99) {
                case 1 :
                    // InternalSTAlgorithmParser.g:10901:3: rule__STBuiltinFeatureExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STBuiltinFeatureExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group__2__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__0"
    // InternalSTAlgorithmParser.g:10910:1: rule__STBuiltinFeatureExpression__Group_2__0 : rule__STBuiltinFeatureExpression__Group_2__0__Impl rule__STBuiltinFeatureExpression__Group_2__1 ;
    public final void rule__STBuiltinFeatureExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10914:1: ( rule__STBuiltinFeatureExpression__Group_2__0__Impl rule__STBuiltinFeatureExpression__Group_2__1 )
            // InternalSTAlgorithmParser.g:10915:2: rule__STBuiltinFeatureExpression__Group_2__0__Impl rule__STBuiltinFeatureExpression__Group_2__1
            {
            pushFollow(FOLLOW_78);
            rule__STBuiltinFeatureExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__0__Impl"
    // InternalSTAlgorithmParser.g:10922:1: rule__STBuiltinFeatureExpression__Group_2__0__Impl : ( ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 ) ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10926:1: ( ( ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 ) ) )
            // InternalSTAlgorithmParser.g:10927:1: ( ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 ) )
            {
            // InternalSTAlgorithmParser.g:10927:1: ( ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 ) )
            // InternalSTAlgorithmParser.g:10928:2: ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallAssignment_2_0()); 
            }
            // InternalSTAlgorithmParser.g:10929:2: ( rule__STBuiltinFeatureExpression__CallAssignment_2_0 )
            // InternalSTAlgorithmParser.g:10929:3: rule__STBuiltinFeatureExpression__CallAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__CallAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__1"
    // InternalSTAlgorithmParser.g:10937:1: rule__STBuiltinFeatureExpression__Group_2__1 : rule__STBuiltinFeatureExpression__Group_2__1__Impl rule__STBuiltinFeatureExpression__Group_2__2 ;
    public final void rule__STBuiltinFeatureExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10941:1: ( rule__STBuiltinFeatureExpression__Group_2__1__Impl rule__STBuiltinFeatureExpression__Group_2__2 )
            // InternalSTAlgorithmParser.g:10942:2: rule__STBuiltinFeatureExpression__Group_2__1__Impl rule__STBuiltinFeatureExpression__Group_2__2
            {
            pushFollow(FOLLOW_78);
            rule__STBuiltinFeatureExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__1__Impl"
    // InternalSTAlgorithmParser.g:10949:1: rule__STBuiltinFeatureExpression__Group_2__1__Impl : ( ( rule__STBuiltinFeatureExpression__Group_2_1__0 )? ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10953:1: ( ( ( rule__STBuiltinFeatureExpression__Group_2_1__0 )? ) )
            // InternalSTAlgorithmParser.g:10954:1: ( ( rule__STBuiltinFeatureExpression__Group_2_1__0 )? )
            {
            // InternalSTAlgorithmParser.g:10954:1: ( ( rule__STBuiltinFeatureExpression__Group_2_1__0 )? )
            // InternalSTAlgorithmParser.g:10955:2: ( rule__STBuiltinFeatureExpression__Group_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2_1()); 
            }
            // InternalSTAlgorithmParser.g:10956:2: ( rule__STBuiltinFeatureExpression__Group_2_1__0 )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==LDATE_AND_TIME||LA100_0==DATE_AND_TIME||LA100_0==LTIME_OF_DAY||LA100_0==TIME_OF_DAY||LA100_0==WSTRING||LA100_0==STRING||LA100_0==DWORD||LA100_0==FALSE||(LA100_0>=LDATE && LA100_0<=LWORD)||(LA100_0>=UDINT && LA100_0<=ULINT)||(LA100_0>=USINT && LA100_0<=WCHAR)||(LA100_0>=BOOL && LA100_0<=BYTE)||(LA100_0>=CHAR && LA100_0<=DINT)||(LA100_0>=LINT && LA100_0<=LTOD)||(LA100_0>=REAL && LA100_0<=SINT)||(LA100_0>=THIS && LA100_0<=TRUE)||LA100_0==UINT||(LA100_0>=WORD && LA100_0<=AND)||(LA100_0>=INT && LA100_0<=NOT)||LA100_0==TOD||LA100_0==XOR||LA100_0==DT||(LA100_0>=LD && LA100_0<=LT)||LA100_0==OR||LA100_0==LeftParenthesis||LA100_0==PlusSign||LA100_0==HyphenMinus||(LA100_0>=D && LA100_0<=T)||(LA100_0>=RULE_NON_DECIMAL && LA100_0<=RULE_DECIMAL)||(LA100_0>=RULE_ID && LA100_0<=RULE_STRING)) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalSTAlgorithmParser.g:10956:3: rule__STBuiltinFeatureExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STBuiltinFeatureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__2"
    // InternalSTAlgorithmParser.g:10964:1: rule__STBuiltinFeatureExpression__Group_2__2 : rule__STBuiltinFeatureExpression__Group_2__2__Impl ;
    public final void rule__STBuiltinFeatureExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10968:1: ( rule__STBuiltinFeatureExpression__Group_2__2__Impl )
            // InternalSTAlgorithmParser.g:10969:2: rule__STBuiltinFeatureExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__2"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2__2__Impl"
    // InternalSTAlgorithmParser.g:10975:1: rule__STBuiltinFeatureExpression__Group_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10979:1: ( ( RightParenthesis ) )
            // InternalSTAlgorithmParser.g:10980:1: ( RightParenthesis )
            {
            // InternalSTAlgorithmParser.g:10980:1: ( RightParenthesis )
            // InternalSTAlgorithmParser.g:10981:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1__0"
    // InternalSTAlgorithmParser.g:10991:1: rule__STBuiltinFeatureExpression__Group_2_1__0 : rule__STBuiltinFeatureExpression__Group_2_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1__1 ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:10995:1: ( rule__STBuiltinFeatureExpression__Group_2_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1__1 )
            // InternalSTAlgorithmParser.g:10996:2: rule__STBuiltinFeatureExpression__Group_2_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_79);
            rule__STBuiltinFeatureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1__0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1__0__Impl"
    // InternalSTAlgorithmParser.g:11003:1: rule__STBuiltinFeatureExpression__Group_2_1__0__Impl : ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 ) ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11007:1: ( ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 ) ) )
            // InternalSTAlgorithmParser.g:11008:1: ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 ) )
            {
            // InternalSTAlgorithmParser.g:11008:1: ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 ) )
            // InternalSTAlgorithmParser.g:11009:2: ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }
            // InternalSTAlgorithmParser.g:11010:2: ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 )
            // InternalSTAlgorithmParser.g:11010:3: rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1__1"
    // InternalSTAlgorithmParser.g:11018:1: rule__STBuiltinFeatureExpression__Group_2_1__1 : rule__STBuiltinFeatureExpression__Group_2_1__1__Impl ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11022:1: ( rule__STBuiltinFeatureExpression__Group_2_1__1__Impl )
            // InternalSTAlgorithmParser.g:11023:2: rule__STBuiltinFeatureExpression__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1__1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1__1__Impl"
    // InternalSTAlgorithmParser.g:11029:1: rule__STBuiltinFeatureExpression__Group_2_1__1__Impl : ( ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )* ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11033:1: ( ( ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )* ) )
            // InternalSTAlgorithmParser.g:11034:1: ( ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )* )
            {
            // InternalSTAlgorithmParser.g:11034:1: ( ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )* )
            // InternalSTAlgorithmParser.g:11035:2: ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2_1_1()); 
            }
            // InternalSTAlgorithmParser.g:11036:2: ( rule__STBuiltinFeatureExpression__Group_2_1_1__0 )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==Comma) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalSTAlgorithmParser.g:11036:3: rule__STBuiltinFeatureExpression__Group_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STBuiltinFeatureExpression__Group_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getGroup_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1_1__0"
    // InternalSTAlgorithmParser.g:11045:1: rule__STBuiltinFeatureExpression__Group_2_1_1__0 : rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1_1__1 ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11049:1: ( rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1_1__1 )
            // InternalSTAlgorithmParser.g:11050:2: rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl rule__STBuiltinFeatureExpression__Group_2_1_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1_1__0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl"
    // InternalSTAlgorithmParser.g:11057:1: rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11061:1: ( ( Comma ) )
            // InternalSTAlgorithmParser.g:11062:1: ( Comma )
            {
            // InternalSTAlgorithmParser.g:11062:1: ( Comma )
            // InternalSTAlgorithmParser.g:11063:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1_1__1"
    // InternalSTAlgorithmParser.g:11072:1: rule__STBuiltinFeatureExpression__Group_2_1_1__1 : rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11076:1: ( rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl )
            // InternalSTAlgorithmParser.g:11077:2: rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1_1__1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl"
    // InternalSTAlgorithmParser.g:11083:1: rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl : ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 ) ) ;
    public final void rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11087:1: ( ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 ) ) )
            // InternalSTAlgorithmParser.g:11088:1: ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:11088:1: ( ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            // InternalSTAlgorithmParser.g:11089:2: ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }
            // InternalSTAlgorithmParser.g:11090:2: ( rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 )
            // InternalSTAlgorithmParser.g:11090:3: rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__0"
    // InternalSTAlgorithmParser.g:11099:1: rule__STMultibitPartialExpression__Group__0 : rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1 ;
    public final void rule__STMultibitPartialExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11103:1: ( rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1 )
            // InternalSTAlgorithmParser.g:11104:2: rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1
            {
            pushFollow(FOLLOW_76);
            rule__STMultibitPartialExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__0"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__0__Impl"
    // InternalSTAlgorithmParser.g:11111:1: rule__STMultibitPartialExpression__Group__0__Impl : ( () ) ;
    public final void rule__STMultibitPartialExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11115:1: ( ( () ) )
            // InternalSTAlgorithmParser.g:11116:1: ( () )
            {
            // InternalSTAlgorithmParser.g:11116:1: ( () )
            // InternalSTAlgorithmParser.g:11117:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSTMultibitPartialExpressionAction_0()); 
            }
            // InternalSTAlgorithmParser.g:11118:2: ()
            // InternalSTAlgorithmParser.g:11118:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSTMultibitPartialExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__0__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__1"
    // InternalSTAlgorithmParser.g:11126:1: rule__STMultibitPartialExpression__Group__1 : rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2 ;
    public final void rule__STMultibitPartialExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11130:1: ( rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2 )
            // InternalSTAlgorithmParser.g:11131:2: rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2
            {
            pushFollow(FOLLOW_76);
            rule__STMultibitPartialExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__1"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__1__Impl"
    // InternalSTAlgorithmParser.g:11138:1: rule__STMultibitPartialExpression__Group__1__Impl : ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? ) ;
    public final void rule__STMultibitPartialExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11142:1: ( ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? ) )
            // InternalSTAlgorithmParser.g:11143:1: ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? )
            {
            // InternalSTAlgorithmParser.g:11143:1: ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? )
            // InternalSTAlgorithmParser.g:11144:2: ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:11145:2: ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( ((LA102_0>=B && LA102_0<=X)) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalSTAlgorithmParser.g:11145:3: rule__STMultibitPartialExpression__SpecifierAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__SpecifierAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__2"
    // InternalSTAlgorithmParser.g:11153:1: rule__STMultibitPartialExpression__Group__2 : rule__STMultibitPartialExpression__Group__2__Impl ;
    public final void rule__STMultibitPartialExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11157:1: ( rule__STMultibitPartialExpression__Group__2__Impl )
            // InternalSTAlgorithmParser.g:11158:2: rule__STMultibitPartialExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__2"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__2__Impl"
    // InternalSTAlgorithmParser.g:11164:1: rule__STMultibitPartialExpression__Group__2__Impl : ( ( rule__STMultibitPartialExpression__Alternatives_2 ) ) ;
    public final void rule__STMultibitPartialExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11168:1: ( ( ( rule__STMultibitPartialExpression__Alternatives_2 ) ) )
            // InternalSTAlgorithmParser.g:11169:1: ( ( rule__STMultibitPartialExpression__Alternatives_2 ) )
            {
            // InternalSTAlgorithmParser.g:11169:1: ( ( rule__STMultibitPartialExpression__Alternatives_2 ) )
            // InternalSTAlgorithmParser.g:11170:2: ( rule__STMultibitPartialExpression__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getAlternatives_2()); 
            }
            // InternalSTAlgorithmParser.g:11171:2: ( rule__STMultibitPartialExpression__Alternatives_2 )
            // InternalSTAlgorithmParser.g:11171:3: rule__STMultibitPartialExpression__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__2__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__0"
    // InternalSTAlgorithmParser.g:11180:1: rule__STMultibitPartialExpression__Group_2_1__0 : rule__STMultibitPartialExpression__Group_2_1__0__Impl rule__STMultibitPartialExpression__Group_2_1__1 ;
    public final void rule__STMultibitPartialExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11184:1: ( rule__STMultibitPartialExpression__Group_2_1__0__Impl rule__STMultibitPartialExpression__Group_2_1__1 )
            // InternalSTAlgorithmParser.g:11185:2: rule__STMultibitPartialExpression__Group_2_1__0__Impl rule__STMultibitPartialExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_14);
            rule__STMultibitPartialExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__0"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__0__Impl"
    // InternalSTAlgorithmParser.g:11192:1: rule__STMultibitPartialExpression__Group_2_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STMultibitPartialExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11196:1: ( ( LeftParenthesis ) )
            // InternalSTAlgorithmParser.g:11197:1: ( LeftParenthesis )
            {
            // InternalSTAlgorithmParser.g:11197:1: ( LeftParenthesis )
            // InternalSTAlgorithmParser.g:11198:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getLeftParenthesisKeyword_2_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getLeftParenthesisKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__1"
    // InternalSTAlgorithmParser.g:11207:1: rule__STMultibitPartialExpression__Group_2_1__1 : rule__STMultibitPartialExpression__Group_2_1__1__Impl rule__STMultibitPartialExpression__Group_2_1__2 ;
    public final void rule__STMultibitPartialExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11211:1: ( rule__STMultibitPartialExpression__Group_2_1__1__Impl rule__STMultibitPartialExpression__Group_2_1__2 )
            // InternalSTAlgorithmParser.g:11212:2: rule__STMultibitPartialExpression__Group_2_1__1__Impl rule__STMultibitPartialExpression__Group_2_1__2
            {
            pushFollow(FOLLOW_77);
            rule__STMultibitPartialExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__1"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__1__Impl"
    // InternalSTAlgorithmParser.g:11219:1: rule__STMultibitPartialExpression__Group_2_1__1__Impl : ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) ) ;
    public final void rule__STMultibitPartialExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11223:1: ( ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) ) )
            // InternalSTAlgorithmParser.g:11224:1: ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) )
            {
            // InternalSTAlgorithmParser.g:11224:1: ( ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 ) )
            // InternalSTAlgorithmParser.g:11225:2: ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionAssignment_2_1_1()); 
            }
            // InternalSTAlgorithmParser.g:11226:2: ( rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 )
            // InternalSTAlgorithmParser.g:11226:3: rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__2"
    // InternalSTAlgorithmParser.g:11234:1: rule__STMultibitPartialExpression__Group_2_1__2 : rule__STMultibitPartialExpression__Group_2_1__2__Impl ;
    public final void rule__STMultibitPartialExpression__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11238:1: ( rule__STMultibitPartialExpression__Group_2_1__2__Impl )
            // InternalSTAlgorithmParser.g:11239:2: rule__STMultibitPartialExpression__Group_2_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__2"


    // $ANTLR start "rule__STMultibitPartialExpression__Group_2_1__2__Impl"
    // InternalSTAlgorithmParser.g:11245:1: rule__STMultibitPartialExpression__Group_2_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__STMultibitPartialExpression__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11249:1: ( ( RightParenthesis ) )
            // InternalSTAlgorithmParser.g:11250:1: ( RightParenthesis )
            {
            // InternalSTAlgorithmParser.g:11250:1: ( RightParenthesis )
            // InternalSTAlgorithmParser.g:11251:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getRightParenthesisKeyword_2_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getRightParenthesisKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group_2_1__2__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group__0"
    // InternalSTAlgorithmParser.g:11261:1: rule__STNumericLiteral__Group__0 : rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1 ;
    public final void rule__STNumericLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11265:1: ( rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1 )
            // InternalSTAlgorithmParser.g:11266:2: rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1
            {
            pushFollow(FOLLOW_81);
            rule__STNumericLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__0"


    // $ANTLR start "rule__STNumericLiteral__Group__0__Impl"
    // InternalSTAlgorithmParser.g:11273:1: rule__STNumericLiteral__Group__0__Impl : ( ( rule__STNumericLiteral__Group_0__0 )? ) ;
    public final void rule__STNumericLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11277:1: ( ( ( rule__STNumericLiteral__Group_0__0 )? ) )
            // InternalSTAlgorithmParser.g:11278:1: ( ( rule__STNumericLiteral__Group_0__0 )? )
            {
            // InternalSTAlgorithmParser.g:11278:1: ( ( rule__STNumericLiteral__Group_0__0 )? )
            // InternalSTAlgorithmParser.g:11279:2: ( rule__STNumericLiteral__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getGroup_0()); 
            }
            // InternalSTAlgorithmParser.g:11280:2: ( rule__STNumericLiteral__Group_0__0 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==DWORD||LA103_0==LREAL||LA103_0==LWORD||(LA103_0>=UDINT && LA103_0<=ULINT)||LA103_0==USINT||(LA103_0>=BOOL && LA103_0<=BYTE)||LA103_0==DINT||LA103_0==LINT||(LA103_0>=REAL && LA103_0<=SINT)||LA103_0==UINT||LA103_0==WORD||LA103_0==INT) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalSTAlgorithmParser.g:11280:3: rule__STNumericLiteral__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STNumericLiteral__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__0__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group__1"
    // InternalSTAlgorithmParser.g:11288:1: rule__STNumericLiteral__Group__1 : rule__STNumericLiteral__Group__1__Impl ;
    public final void rule__STNumericLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11292:1: ( rule__STNumericLiteral__Group__1__Impl )
            // InternalSTAlgorithmParser.g:11293:2: rule__STNumericLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__1"


    // $ANTLR start "rule__STNumericLiteral__Group__1__Impl"
    // InternalSTAlgorithmParser.g:11299:1: rule__STNumericLiteral__Group__1__Impl : ( ( rule__STNumericLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STNumericLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11303:1: ( ( ( rule__STNumericLiteral__ValueAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:11304:1: ( ( rule__STNumericLiteral__ValueAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:11304:1: ( ( rule__STNumericLiteral__ValueAssignment_1 ) )
            // InternalSTAlgorithmParser.g:11305:2: ( rule__STNumericLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:11306:2: ( rule__STNumericLiteral__ValueAssignment_1 )
            // InternalSTAlgorithmParser.g:11306:3: rule__STNumericLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__1__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_0__0"
    // InternalSTAlgorithmParser.g:11315:1: rule__STNumericLiteral__Group_0__0 : rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1 ;
    public final void rule__STNumericLiteral__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11319:1: ( rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1 )
            // InternalSTAlgorithmParser.g:11320:2: rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1
            {
            pushFollow(FOLLOW_82);
            rule__STNumericLiteral__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__0"


    // $ANTLR start "rule__STNumericLiteral__Group_0__0__Impl"
    // InternalSTAlgorithmParser.g:11327:1: rule__STNumericLiteral__Group_0__0__Impl : ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) ) ;
    public final void rule__STNumericLiteral__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11331:1: ( ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) ) )
            // InternalSTAlgorithmParser.g:11332:1: ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) )
            {
            // InternalSTAlgorithmParser.g:11332:1: ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) )
            // InternalSTAlgorithmParser.g:11333:2: ( rule__STNumericLiteral__TypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_0_0()); 
            }
            // InternalSTAlgorithmParser.g:11334:2: ( rule__STNumericLiteral__TypeAssignment_0_0 )
            // InternalSTAlgorithmParser.g:11334:3: rule__STNumericLiteral__TypeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__TypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__0__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_0__1"
    // InternalSTAlgorithmParser.g:11342:1: rule__STNumericLiteral__Group_0__1 : rule__STNumericLiteral__Group_0__1__Impl ;
    public final void rule__STNumericLiteral__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11346:1: ( rule__STNumericLiteral__Group_0__1__Impl )
            // InternalSTAlgorithmParser.g:11347:2: rule__STNumericLiteral__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__1"


    // $ANTLR start "rule__STNumericLiteral__Group_0__1__Impl"
    // InternalSTAlgorithmParser.g:11353:1: rule__STNumericLiteral__Group_0__1__Impl : ( NumberSign ) ;
    public final void rule__STNumericLiteral__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11357:1: ( ( NumberSign ) )
            // InternalSTAlgorithmParser.g:11358:1: ( NumberSign )
            {
            // InternalSTAlgorithmParser.g:11358:1: ( NumberSign )
            // InternalSTAlgorithmParser.g:11359:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getNumberSignKeyword_0_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getNumberSignKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__1__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__0"
    // InternalSTAlgorithmParser.g:11369:1: rule__STDateLiteral__Group__0 : rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1 ;
    public final void rule__STDateLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11373:1: ( rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1 )
            // InternalSTAlgorithmParser.g:11374:2: rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1
            {
            pushFollow(FOLLOW_82);
            rule__STDateLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__0"


    // $ANTLR start "rule__STDateLiteral__Group__0__Impl"
    // InternalSTAlgorithmParser.g:11381:1: rule__STDateLiteral__Group__0__Impl : ( ( rule__STDateLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STDateLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11385:1: ( ( ( rule__STDateLiteral__TypeAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:11386:1: ( ( rule__STDateLiteral__TypeAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:11386:1: ( ( rule__STDateLiteral__TypeAssignment_0 ) )
            // InternalSTAlgorithmParser.g:11387:2: ( rule__STDateLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:11388:2: ( rule__STDateLiteral__TypeAssignment_0 )
            // InternalSTAlgorithmParser.g:11388:3: rule__STDateLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__0__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__1"
    // InternalSTAlgorithmParser.g:11396:1: rule__STDateLiteral__Group__1 : rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2 ;
    public final void rule__STDateLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11400:1: ( rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2 )
            // InternalSTAlgorithmParser.g:11401:2: rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2
            {
            pushFollow(FOLLOW_83);
            rule__STDateLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__1"


    // $ANTLR start "rule__STDateLiteral__Group__1__Impl"
    // InternalSTAlgorithmParser.g:11408:1: rule__STDateLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STDateLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11412:1: ( ( NumberSign ) )
            // InternalSTAlgorithmParser.g:11413:1: ( NumberSign )
            {
            // InternalSTAlgorithmParser.g:11413:1: ( NumberSign )
            // InternalSTAlgorithmParser.g:11414:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__2"
    // InternalSTAlgorithmParser.g:11423:1: rule__STDateLiteral__Group__2 : rule__STDateLiteral__Group__2__Impl ;
    public final void rule__STDateLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11427:1: ( rule__STDateLiteral__Group__2__Impl )
            // InternalSTAlgorithmParser.g:11428:2: rule__STDateLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__2"


    // $ANTLR start "rule__STDateLiteral__Group__2__Impl"
    // InternalSTAlgorithmParser.g:11434:1: rule__STDateLiteral__Group__2__Impl : ( ( rule__STDateLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STDateLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11438:1: ( ( ( rule__STDateLiteral__ValueAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:11439:1: ( ( rule__STDateLiteral__ValueAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:11439:1: ( ( rule__STDateLiteral__ValueAssignment_2 ) )
            // InternalSTAlgorithmParser.g:11440:2: ( rule__STDateLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:11441:2: ( rule__STDateLiteral__ValueAssignment_2 )
            // InternalSTAlgorithmParser.g:11441:3: rule__STDateLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__2__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__0"
    // InternalSTAlgorithmParser.g:11450:1: rule__STTimeLiteral__Group__0 : rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1 ;
    public final void rule__STTimeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11454:1: ( rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1 )
            // InternalSTAlgorithmParser.g:11455:2: rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1
            {
            pushFollow(FOLLOW_82);
            rule__STTimeLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__0"


    // $ANTLR start "rule__STTimeLiteral__Group__0__Impl"
    // InternalSTAlgorithmParser.g:11462:1: rule__STTimeLiteral__Group__0__Impl : ( ( rule__STTimeLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STTimeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11466:1: ( ( ( rule__STTimeLiteral__TypeAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:11467:1: ( ( rule__STTimeLiteral__TypeAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:11467:1: ( ( rule__STTimeLiteral__TypeAssignment_0 ) )
            // InternalSTAlgorithmParser.g:11468:2: ( rule__STTimeLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:11469:2: ( rule__STTimeLiteral__TypeAssignment_0 )
            // InternalSTAlgorithmParser.g:11469:3: rule__STTimeLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__0__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__1"
    // InternalSTAlgorithmParser.g:11477:1: rule__STTimeLiteral__Group__1 : rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2 ;
    public final void rule__STTimeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11481:1: ( rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2 )
            // InternalSTAlgorithmParser.g:11482:2: rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2
            {
            pushFollow(FOLLOW_84);
            rule__STTimeLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__1"


    // $ANTLR start "rule__STTimeLiteral__Group__1__Impl"
    // InternalSTAlgorithmParser.g:11489:1: rule__STTimeLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STTimeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11493:1: ( ( NumberSign ) )
            // InternalSTAlgorithmParser.g:11494:1: ( NumberSign )
            {
            // InternalSTAlgorithmParser.g:11494:1: ( NumberSign )
            // InternalSTAlgorithmParser.g:11495:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__1__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__2"
    // InternalSTAlgorithmParser.g:11504:1: rule__STTimeLiteral__Group__2 : rule__STTimeLiteral__Group__2__Impl ;
    public final void rule__STTimeLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11508:1: ( rule__STTimeLiteral__Group__2__Impl )
            // InternalSTAlgorithmParser.g:11509:2: rule__STTimeLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__2"


    // $ANTLR start "rule__STTimeLiteral__Group__2__Impl"
    // InternalSTAlgorithmParser.g:11515:1: rule__STTimeLiteral__Group__2__Impl : ( ( rule__STTimeLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STTimeLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11519:1: ( ( ( rule__STTimeLiteral__ValueAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:11520:1: ( ( rule__STTimeLiteral__ValueAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:11520:1: ( ( rule__STTimeLiteral__ValueAssignment_2 ) )
            // InternalSTAlgorithmParser.g:11521:2: ( rule__STTimeLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:11522:2: ( rule__STTimeLiteral__ValueAssignment_2 )
            // InternalSTAlgorithmParser.g:11522:3: rule__STTimeLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__2__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__0"
    // InternalSTAlgorithmParser.g:11531:1: rule__STTimeOfDayLiteral__Group__0 : rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1 ;
    public final void rule__STTimeOfDayLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11535:1: ( rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1 )
            // InternalSTAlgorithmParser.g:11536:2: rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1
            {
            pushFollow(FOLLOW_82);
            rule__STTimeOfDayLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__0"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__0__Impl"
    // InternalSTAlgorithmParser.g:11543:1: rule__STTimeOfDayLiteral__Group__0__Impl : ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STTimeOfDayLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11547:1: ( ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:11548:1: ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:11548:1: ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) )
            // InternalSTAlgorithmParser.g:11549:2: ( rule__STTimeOfDayLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:11550:2: ( rule__STTimeOfDayLiteral__TypeAssignment_0 )
            // InternalSTAlgorithmParser.g:11550:3: rule__STTimeOfDayLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__0__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__1"
    // InternalSTAlgorithmParser.g:11558:1: rule__STTimeOfDayLiteral__Group__1 : rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2 ;
    public final void rule__STTimeOfDayLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11562:1: ( rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2 )
            // InternalSTAlgorithmParser.g:11563:2: rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2
            {
            pushFollow(FOLLOW_83);
            rule__STTimeOfDayLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__1"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__1__Impl"
    // InternalSTAlgorithmParser.g:11570:1: rule__STTimeOfDayLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STTimeOfDayLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11574:1: ( ( NumberSign ) )
            // InternalSTAlgorithmParser.g:11575:1: ( NumberSign )
            {
            // InternalSTAlgorithmParser.g:11575:1: ( NumberSign )
            // InternalSTAlgorithmParser.g:11576:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__1__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__2"
    // InternalSTAlgorithmParser.g:11585:1: rule__STTimeOfDayLiteral__Group__2 : rule__STTimeOfDayLiteral__Group__2__Impl ;
    public final void rule__STTimeOfDayLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11589:1: ( rule__STTimeOfDayLiteral__Group__2__Impl )
            // InternalSTAlgorithmParser.g:11590:2: rule__STTimeOfDayLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__2"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__2__Impl"
    // InternalSTAlgorithmParser.g:11596:1: rule__STTimeOfDayLiteral__Group__2__Impl : ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STTimeOfDayLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11600:1: ( ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:11601:1: ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:11601:1: ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) )
            // InternalSTAlgorithmParser.g:11602:2: ( rule__STTimeOfDayLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:11603:2: ( rule__STTimeOfDayLiteral__ValueAssignment_2 )
            // InternalSTAlgorithmParser.g:11603:3: rule__STTimeOfDayLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__2__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__0"
    // InternalSTAlgorithmParser.g:11612:1: rule__STDateAndTimeLiteral__Group__0 : rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1 ;
    public final void rule__STDateAndTimeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11616:1: ( rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1 )
            // InternalSTAlgorithmParser.g:11617:2: rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1
            {
            pushFollow(FOLLOW_82);
            rule__STDateAndTimeLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__0"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__0__Impl"
    // InternalSTAlgorithmParser.g:11624:1: rule__STDateAndTimeLiteral__Group__0__Impl : ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11628:1: ( ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) ) )
            // InternalSTAlgorithmParser.g:11629:1: ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) )
            {
            // InternalSTAlgorithmParser.g:11629:1: ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) )
            // InternalSTAlgorithmParser.g:11630:2: ( rule__STDateAndTimeLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTAlgorithmParser.g:11631:2: ( rule__STDateAndTimeLiteral__TypeAssignment_0 )
            // InternalSTAlgorithmParser.g:11631:3: rule__STDateAndTimeLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__0__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__1"
    // InternalSTAlgorithmParser.g:11639:1: rule__STDateAndTimeLiteral__Group__1 : rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2 ;
    public final void rule__STDateAndTimeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11643:1: ( rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2 )
            // InternalSTAlgorithmParser.g:11644:2: rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2
            {
            pushFollow(FOLLOW_83);
            rule__STDateAndTimeLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__1"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__1__Impl"
    // InternalSTAlgorithmParser.g:11651:1: rule__STDateAndTimeLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STDateAndTimeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11655:1: ( ( NumberSign ) )
            // InternalSTAlgorithmParser.g:11656:1: ( NumberSign )
            {
            // InternalSTAlgorithmParser.g:11656:1: ( NumberSign )
            // InternalSTAlgorithmParser.g:11657:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__2"
    // InternalSTAlgorithmParser.g:11666:1: rule__STDateAndTimeLiteral__Group__2 : rule__STDateAndTimeLiteral__Group__2__Impl ;
    public final void rule__STDateAndTimeLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11670:1: ( rule__STDateAndTimeLiteral__Group__2__Impl )
            // InternalSTAlgorithmParser.g:11671:2: rule__STDateAndTimeLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__2"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__2__Impl"
    // InternalSTAlgorithmParser.g:11677:1: rule__STDateAndTimeLiteral__Group__2__Impl : ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11681:1: ( ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) ) )
            // InternalSTAlgorithmParser.g:11682:1: ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) )
            {
            // InternalSTAlgorithmParser.g:11682:1: ( ( rule__STDateAndTimeLiteral__ValueAssignment_2 ) )
            // InternalSTAlgorithmParser.g:11683:2: ( rule__STDateAndTimeLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTAlgorithmParser.g:11684:2: ( rule__STDateAndTimeLiteral__ValueAssignment_2 )
            // InternalSTAlgorithmParser.g:11684:3: rule__STDateAndTimeLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__2__Impl"


    // $ANTLR start "rule__STStringLiteral__Group__0"
    // InternalSTAlgorithmParser.g:11693:1: rule__STStringLiteral__Group__0 : rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1 ;
    public final void rule__STStringLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11697:1: ( rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1 )
            // InternalSTAlgorithmParser.g:11698:2: rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1
            {
            pushFollow(FOLLOW_85);
            rule__STStringLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__0"


    // $ANTLR start "rule__STStringLiteral__Group__0__Impl"
    // InternalSTAlgorithmParser.g:11705:1: rule__STStringLiteral__Group__0__Impl : ( ( rule__STStringLiteral__Group_0__0 )? ) ;
    public final void rule__STStringLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11709:1: ( ( ( rule__STStringLiteral__Group_0__0 )? ) )
            // InternalSTAlgorithmParser.g:11710:1: ( ( rule__STStringLiteral__Group_0__0 )? )
            {
            // InternalSTAlgorithmParser.g:11710:1: ( ( rule__STStringLiteral__Group_0__0 )? )
            // InternalSTAlgorithmParser.g:11711:2: ( rule__STStringLiteral__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getGroup_0()); 
            }
            // InternalSTAlgorithmParser.g:11712:2: ( rule__STStringLiteral__Group_0__0 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==WSTRING||LA104_0==STRING||LA104_0==WCHAR||LA104_0==CHAR) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalSTAlgorithmParser.g:11712:3: rule__STStringLiteral__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStringLiteral__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__0__Impl"


    // $ANTLR start "rule__STStringLiteral__Group__1"
    // InternalSTAlgorithmParser.g:11720:1: rule__STStringLiteral__Group__1 : rule__STStringLiteral__Group__1__Impl ;
    public final void rule__STStringLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11724:1: ( rule__STStringLiteral__Group__1__Impl )
            // InternalSTAlgorithmParser.g:11725:2: rule__STStringLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__1"


    // $ANTLR start "rule__STStringLiteral__Group__1__Impl"
    // InternalSTAlgorithmParser.g:11731:1: rule__STStringLiteral__Group__1__Impl : ( ( rule__STStringLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STStringLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11735:1: ( ( ( rule__STStringLiteral__ValueAssignment_1 ) ) )
            // InternalSTAlgorithmParser.g:11736:1: ( ( rule__STStringLiteral__ValueAssignment_1 ) )
            {
            // InternalSTAlgorithmParser.g:11736:1: ( ( rule__STStringLiteral__ValueAssignment_1 ) )
            // InternalSTAlgorithmParser.g:11737:2: ( rule__STStringLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getValueAssignment_1()); 
            }
            // InternalSTAlgorithmParser.g:11738:2: ( rule__STStringLiteral__ValueAssignment_1 )
            // InternalSTAlgorithmParser.g:11738:3: rule__STStringLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__1__Impl"


    // $ANTLR start "rule__STStringLiteral__Group_0__0"
    // InternalSTAlgorithmParser.g:11747:1: rule__STStringLiteral__Group_0__0 : rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1 ;
    public final void rule__STStringLiteral__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11751:1: ( rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1 )
            // InternalSTAlgorithmParser.g:11752:2: rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1
            {
            pushFollow(FOLLOW_82);
            rule__STStringLiteral__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__0"


    // $ANTLR start "rule__STStringLiteral__Group_0__0__Impl"
    // InternalSTAlgorithmParser.g:11759:1: rule__STStringLiteral__Group_0__0__Impl : ( ( rule__STStringLiteral__TypeAssignment_0_0 ) ) ;
    public final void rule__STStringLiteral__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11763:1: ( ( ( rule__STStringLiteral__TypeAssignment_0_0 ) ) )
            // InternalSTAlgorithmParser.g:11764:1: ( ( rule__STStringLiteral__TypeAssignment_0_0 ) )
            {
            // InternalSTAlgorithmParser.g:11764:1: ( ( rule__STStringLiteral__TypeAssignment_0_0 ) )
            // InternalSTAlgorithmParser.g:11765:2: ( rule__STStringLiteral__TypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeAssignment_0_0()); 
            }
            // InternalSTAlgorithmParser.g:11766:2: ( rule__STStringLiteral__TypeAssignment_0_0 )
            // InternalSTAlgorithmParser.g:11766:3: rule__STStringLiteral__TypeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__TypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__0__Impl"


    // $ANTLR start "rule__STStringLiteral__Group_0__1"
    // InternalSTAlgorithmParser.g:11774:1: rule__STStringLiteral__Group_0__1 : rule__STStringLiteral__Group_0__1__Impl ;
    public final void rule__STStringLiteral__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11778:1: ( rule__STStringLiteral__Group_0__1__Impl )
            // InternalSTAlgorithmParser.g:11779:2: rule__STStringLiteral__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__1"


    // $ANTLR start "rule__STStringLiteral__Group_0__1__Impl"
    // InternalSTAlgorithmParser.g:11785:1: rule__STStringLiteral__Group_0__1__Impl : ( NumberSign ) ;
    public final void rule__STStringLiteral__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11789:1: ( ( NumberSign ) )
            // InternalSTAlgorithmParser.g:11790:1: ( NumberSign )
            {
            // InternalSTAlgorithmParser.g:11790:1: ( NumberSign )
            // InternalSTAlgorithmParser.g:11791:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getNumberSignKeyword_0_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getNumberSignKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__1__Impl"


    // $ANTLR start "rule__Number__Group__0"
    // InternalSTAlgorithmParser.g:11801:1: rule__Number__Group__0 : rule__Number__Group__0__Impl rule__Number__Group__1 ;
    public final void rule__Number__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11805:1: ( rule__Number__Group__0__Impl rule__Number__Group__1 )
            // InternalSTAlgorithmParser.g:11806:2: rule__Number__Group__0__Impl rule__Number__Group__1
            {
            pushFollow(FOLLOW_86);
            rule__Number__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__0"


    // $ANTLR start "rule__Number__Group__0__Impl"
    // InternalSTAlgorithmParser.g:11813:1: rule__Number__Group__0__Impl : ( ( rule__Number__Alternatives_0 )? ) ;
    public final void rule__Number__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11817:1: ( ( ( rule__Number__Alternatives_0 )? ) )
            // InternalSTAlgorithmParser.g:11818:1: ( ( rule__Number__Alternatives_0 )? )
            {
            // InternalSTAlgorithmParser.g:11818:1: ( ( rule__Number__Alternatives_0 )? )
            // InternalSTAlgorithmParser.g:11819:2: ( rule__Number__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_0()); 
            }
            // InternalSTAlgorithmParser.g:11820:2: ( rule__Number__Alternatives_0 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==PlusSign||LA105_0==HyphenMinus) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalSTAlgorithmParser.g:11820:3: rule__Number__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__0__Impl"


    // $ANTLR start "rule__Number__Group__1"
    // InternalSTAlgorithmParser.g:11828:1: rule__Number__Group__1 : rule__Number__Group__1__Impl rule__Number__Group__2 ;
    public final void rule__Number__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11832:1: ( rule__Number__Group__1__Impl rule__Number__Group__2 )
            // InternalSTAlgorithmParser.g:11833:2: rule__Number__Group__1__Impl rule__Number__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__Number__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__1"


    // $ANTLR start "rule__Number__Group__1__Impl"
    // InternalSTAlgorithmParser.g:11840:1: rule__Number__Group__1__Impl : ( ( rule__Number__Alternatives_1 ) ) ;
    public final void rule__Number__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11844:1: ( ( ( rule__Number__Alternatives_1 ) ) )
            // InternalSTAlgorithmParser.g:11845:1: ( ( rule__Number__Alternatives_1 ) )
            {
            // InternalSTAlgorithmParser.g:11845:1: ( ( rule__Number__Alternatives_1 ) )
            // InternalSTAlgorithmParser.g:11846:2: ( rule__Number__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_1()); 
            }
            // InternalSTAlgorithmParser.g:11847:2: ( rule__Number__Alternatives_1 )
            // InternalSTAlgorithmParser.g:11847:3: rule__Number__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Number__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__1__Impl"


    // $ANTLR start "rule__Number__Group__2"
    // InternalSTAlgorithmParser.g:11855:1: rule__Number__Group__2 : rule__Number__Group__2__Impl ;
    public final void rule__Number__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11859:1: ( rule__Number__Group__2__Impl )
            // InternalSTAlgorithmParser.g:11860:2: rule__Number__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__2"


    // $ANTLR start "rule__Number__Group__2__Impl"
    // InternalSTAlgorithmParser.g:11866:1: rule__Number__Group__2__Impl : ( ( rule__Number__Group_2__0 )? ) ;
    public final void rule__Number__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11870:1: ( ( ( rule__Number__Group_2__0 )? ) )
            // InternalSTAlgorithmParser.g:11871:1: ( ( rule__Number__Group_2__0 )? )
            {
            // InternalSTAlgorithmParser.g:11871:1: ( ( rule__Number__Group_2__0 )? )
            // InternalSTAlgorithmParser.g:11872:2: ( rule__Number__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getGroup_2()); 
            }
            // InternalSTAlgorithmParser.g:11873:2: ( rule__Number__Group_2__0 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==FullStop) ) {
                int LA106_1 = input.LA(2);

                if ( (LA106_1==RULE_INT) ) {
                    int LA106_3 = input.LA(3);

                    if ( (synpred163_InternalSTAlgorithmParser()) ) {
                        alt106=1;
                    }
                }
                else if ( (LA106_1==RULE_DECIMAL) ) {
                    alt106=1;
                }
            }
            switch (alt106) {
                case 1 :
                    // InternalSTAlgorithmParser.g:11873:3: rule__Number__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__2__Impl"


    // $ANTLR start "rule__Number__Group_2__0"
    // InternalSTAlgorithmParser.g:11882:1: rule__Number__Group_2__0 : rule__Number__Group_2__0__Impl rule__Number__Group_2__1 ;
    public final void rule__Number__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11886:1: ( rule__Number__Group_2__0__Impl rule__Number__Group_2__1 )
            // InternalSTAlgorithmParser.g:11887:2: rule__Number__Group_2__0__Impl rule__Number__Group_2__1
            {
            pushFollow(FOLLOW_87);
            rule__Number__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__0"


    // $ANTLR start "rule__Number__Group_2__0__Impl"
    // InternalSTAlgorithmParser.g:11894:1: rule__Number__Group_2__0__Impl : ( ( FullStop ) ) ;
    public final void rule__Number__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11898:1: ( ( ( FullStop ) ) )
            // InternalSTAlgorithmParser.g:11899:1: ( ( FullStop ) )
            {
            // InternalSTAlgorithmParser.g:11899:1: ( ( FullStop ) )
            // InternalSTAlgorithmParser.g:11900:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getFullStopKeyword_2_0()); 
            }
            // InternalSTAlgorithmParser.g:11901:2: ( FullStop )
            // InternalSTAlgorithmParser.g:11901:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__0__Impl"


    // $ANTLR start "rule__Number__Group_2__1"
    // InternalSTAlgorithmParser.g:11909:1: rule__Number__Group_2__1 : rule__Number__Group_2__1__Impl ;
    public final void rule__Number__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11913:1: ( rule__Number__Group_2__1__Impl )
            // InternalSTAlgorithmParser.g:11914:2: rule__Number__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__1"


    // $ANTLR start "rule__Number__Group_2__1__Impl"
    // InternalSTAlgorithmParser.g:11920:1: rule__Number__Group_2__1__Impl : ( ( rule__Number__Alternatives_2_1 ) ) ;
    public final void rule__Number__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11924:1: ( ( ( rule__Number__Alternatives_2_1 ) ) )
            // InternalSTAlgorithmParser.g:11925:1: ( ( rule__Number__Alternatives_2_1 ) )
            {
            // InternalSTAlgorithmParser.g:11925:1: ( ( rule__Number__Alternatives_2_1 ) )
            // InternalSTAlgorithmParser.g:11926:2: ( rule__Number__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_2_1()); 
            }
            // InternalSTAlgorithmParser.g:11927:2: ( rule__Number__Alternatives_2_1 )
            // InternalSTAlgorithmParser.g:11927:3: rule__Number__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Number__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__1__Impl"


    // $ANTLR start "rule__Time__Group__0"
    // InternalSTAlgorithmParser.g:11936:1: rule__Time__Group__0 : rule__Time__Group__0__Impl rule__Time__Group__1 ;
    public final void rule__Time__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11940:1: ( rule__Time__Group__0__Impl rule__Time__Group__1 )
            // InternalSTAlgorithmParser.g:11941:2: rule__Time__Group__0__Impl rule__Time__Group__1
            {
            pushFollow(FOLLOW_84);
            rule__Time__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Time__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__0"


    // $ANTLR start "rule__Time__Group__0__Impl"
    // InternalSTAlgorithmParser.g:11948:1: rule__Time__Group__0__Impl : ( ( rule__Time__Alternatives_0 )? ) ;
    public final void rule__Time__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11952:1: ( ( ( rule__Time__Alternatives_0 )? ) )
            // InternalSTAlgorithmParser.g:11953:1: ( ( rule__Time__Alternatives_0 )? )
            {
            // InternalSTAlgorithmParser.g:11953:1: ( ( rule__Time__Alternatives_0 )? )
            // InternalSTAlgorithmParser.g:11954:2: ( rule__Time__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getAlternatives_0()); 
            }
            // InternalSTAlgorithmParser.g:11955:2: ( rule__Time__Alternatives_0 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==PlusSign||LA107_0==HyphenMinus) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalSTAlgorithmParser.g:11955:3: rule__Time__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Time__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__0__Impl"


    // $ANTLR start "rule__Time__Group__1"
    // InternalSTAlgorithmParser.g:11963:1: rule__Time__Group__1 : rule__Time__Group__1__Impl ;
    public final void rule__Time__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11967:1: ( rule__Time__Group__1__Impl )
            // InternalSTAlgorithmParser.g:11968:2: rule__Time__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Time__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__1"


    // $ANTLR start "rule__Time__Group__1__Impl"
    // InternalSTAlgorithmParser.g:11974:1: rule__Time__Group__1__Impl : ( RULE_TIME_VALUE ) ;
    public final void rule__Time__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11978:1: ( ( RULE_TIME_VALUE ) )
            // InternalSTAlgorithmParser.g:11979:1: ( RULE_TIME_VALUE )
            {
            // InternalSTAlgorithmParser.g:11979:1: ( RULE_TIME_VALUE )
            // InternalSTAlgorithmParser.g:11980:2: RULE_TIME_VALUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getTIME_VALUETerminalRuleCall_1()); 
            }
            match(input,RULE_TIME_VALUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getTIME_VALUETerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__1__Impl"


    // $ANTLR start "rule__Date__Group__0"
    // InternalSTAlgorithmParser.g:11990:1: rule__Date__Group__0 : rule__Date__Group__0__Impl rule__Date__Group__1 ;
    public final void rule__Date__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:11994:1: ( rule__Date__Group__0__Impl rule__Date__Group__1 )
            // InternalSTAlgorithmParser.g:11995:2: rule__Date__Group__0__Impl rule__Date__Group__1
            {
            pushFollow(FOLLOW_88);
            rule__Date__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__0"


    // $ANTLR start "rule__Date__Group__0__Impl"
    // InternalSTAlgorithmParser.g:12002:1: rule__Date__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12006:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12007:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12007:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12008:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__0__Impl"


    // $ANTLR start "rule__Date__Group__1"
    // InternalSTAlgorithmParser.g:12017:1: rule__Date__Group__1 : rule__Date__Group__1__Impl rule__Date__Group__2 ;
    public final void rule__Date__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12021:1: ( rule__Date__Group__1__Impl rule__Date__Group__2 )
            // InternalSTAlgorithmParser.g:12022:2: rule__Date__Group__1__Impl rule__Date__Group__2
            {
            pushFollow(FOLLOW_83);
            rule__Date__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__1"


    // $ANTLR start "rule__Date__Group__1__Impl"
    // InternalSTAlgorithmParser.g:12029:1: rule__Date__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__Date__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12033:1: ( ( HyphenMinus ) )
            // InternalSTAlgorithmParser.g:12034:1: ( HyphenMinus )
            {
            // InternalSTAlgorithmParser.g:12034:1: ( HyphenMinus )
            // InternalSTAlgorithmParser.g:12035:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__1__Impl"


    // $ANTLR start "rule__Date__Group__2"
    // InternalSTAlgorithmParser.g:12044:1: rule__Date__Group__2 : rule__Date__Group__2__Impl rule__Date__Group__3 ;
    public final void rule__Date__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12048:1: ( rule__Date__Group__2__Impl rule__Date__Group__3 )
            // InternalSTAlgorithmParser.g:12049:2: rule__Date__Group__2__Impl rule__Date__Group__3
            {
            pushFollow(FOLLOW_88);
            rule__Date__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__2"


    // $ANTLR start "rule__Date__Group__2__Impl"
    // InternalSTAlgorithmParser.g:12056:1: rule__Date__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12060:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12061:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12061:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12062:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__2__Impl"


    // $ANTLR start "rule__Date__Group__3"
    // InternalSTAlgorithmParser.g:12071:1: rule__Date__Group__3 : rule__Date__Group__3__Impl rule__Date__Group__4 ;
    public final void rule__Date__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12075:1: ( rule__Date__Group__3__Impl rule__Date__Group__4 )
            // InternalSTAlgorithmParser.g:12076:2: rule__Date__Group__3__Impl rule__Date__Group__4
            {
            pushFollow(FOLLOW_83);
            rule__Date__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__3"


    // $ANTLR start "rule__Date__Group__3__Impl"
    // InternalSTAlgorithmParser.g:12083:1: rule__Date__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__Date__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12087:1: ( ( HyphenMinus ) )
            // InternalSTAlgorithmParser.g:12088:1: ( HyphenMinus )
            {
            // InternalSTAlgorithmParser.g:12088:1: ( HyphenMinus )
            // InternalSTAlgorithmParser.g:12089:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__3__Impl"


    // $ANTLR start "rule__Date__Group__4"
    // InternalSTAlgorithmParser.g:12098:1: rule__Date__Group__4 : rule__Date__Group__4__Impl ;
    public final void rule__Date__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12102:1: ( rule__Date__Group__4__Impl )
            // InternalSTAlgorithmParser.g:12103:2: rule__Date__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Date__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__4"


    // $ANTLR start "rule__Date__Group__4__Impl"
    // InternalSTAlgorithmParser.g:12109:1: rule__Date__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12113:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12114:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12114:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12115:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__4__Impl"


    // $ANTLR start "rule__DateAndTime__Group__0"
    // InternalSTAlgorithmParser.g:12125:1: rule__DateAndTime__Group__0 : rule__DateAndTime__Group__0__Impl rule__DateAndTime__Group__1 ;
    public final void rule__DateAndTime__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12129:1: ( rule__DateAndTime__Group__0__Impl rule__DateAndTime__Group__1 )
            // InternalSTAlgorithmParser.g:12130:2: rule__DateAndTime__Group__0__Impl rule__DateAndTime__Group__1
            {
            pushFollow(FOLLOW_88);
            rule__DateAndTime__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__0"


    // $ANTLR start "rule__DateAndTime__Group__0__Impl"
    // InternalSTAlgorithmParser.g:12137:1: rule__DateAndTime__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12141:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12142:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12142:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12143:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__0__Impl"


    // $ANTLR start "rule__DateAndTime__Group__1"
    // InternalSTAlgorithmParser.g:12152:1: rule__DateAndTime__Group__1 : rule__DateAndTime__Group__1__Impl rule__DateAndTime__Group__2 ;
    public final void rule__DateAndTime__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12156:1: ( rule__DateAndTime__Group__1__Impl rule__DateAndTime__Group__2 )
            // InternalSTAlgorithmParser.g:12157:2: rule__DateAndTime__Group__1__Impl rule__DateAndTime__Group__2
            {
            pushFollow(FOLLOW_83);
            rule__DateAndTime__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__1"


    // $ANTLR start "rule__DateAndTime__Group__1__Impl"
    // InternalSTAlgorithmParser.g:12164:1: rule__DateAndTime__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__DateAndTime__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12168:1: ( ( HyphenMinus ) )
            // InternalSTAlgorithmParser.g:12169:1: ( HyphenMinus )
            {
            // InternalSTAlgorithmParser.g:12169:1: ( HyphenMinus )
            // InternalSTAlgorithmParser.g:12170:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__1__Impl"


    // $ANTLR start "rule__DateAndTime__Group__2"
    // InternalSTAlgorithmParser.g:12179:1: rule__DateAndTime__Group__2 : rule__DateAndTime__Group__2__Impl rule__DateAndTime__Group__3 ;
    public final void rule__DateAndTime__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12183:1: ( rule__DateAndTime__Group__2__Impl rule__DateAndTime__Group__3 )
            // InternalSTAlgorithmParser.g:12184:2: rule__DateAndTime__Group__2__Impl rule__DateAndTime__Group__3
            {
            pushFollow(FOLLOW_88);
            rule__DateAndTime__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__2"


    // $ANTLR start "rule__DateAndTime__Group__2__Impl"
    // InternalSTAlgorithmParser.g:12191:1: rule__DateAndTime__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12195:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12196:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12196:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12197:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__2__Impl"


    // $ANTLR start "rule__DateAndTime__Group__3"
    // InternalSTAlgorithmParser.g:12206:1: rule__DateAndTime__Group__3 : rule__DateAndTime__Group__3__Impl rule__DateAndTime__Group__4 ;
    public final void rule__DateAndTime__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12210:1: ( rule__DateAndTime__Group__3__Impl rule__DateAndTime__Group__4 )
            // InternalSTAlgorithmParser.g:12211:2: rule__DateAndTime__Group__3__Impl rule__DateAndTime__Group__4
            {
            pushFollow(FOLLOW_83);
            rule__DateAndTime__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__3"


    // $ANTLR start "rule__DateAndTime__Group__3__Impl"
    // InternalSTAlgorithmParser.g:12218:1: rule__DateAndTime__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__DateAndTime__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12222:1: ( ( HyphenMinus ) )
            // InternalSTAlgorithmParser.g:12223:1: ( HyphenMinus )
            {
            // InternalSTAlgorithmParser.g:12223:1: ( HyphenMinus )
            // InternalSTAlgorithmParser.g:12224:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__3__Impl"


    // $ANTLR start "rule__DateAndTime__Group__4"
    // InternalSTAlgorithmParser.g:12233:1: rule__DateAndTime__Group__4 : rule__DateAndTime__Group__4__Impl rule__DateAndTime__Group__5 ;
    public final void rule__DateAndTime__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12237:1: ( rule__DateAndTime__Group__4__Impl rule__DateAndTime__Group__5 )
            // InternalSTAlgorithmParser.g:12238:2: rule__DateAndTime__Group__4__Impl rule__DateAndTime__Group__5
            {
            pushFollow(FOLLOW_88);
            rule__DateAndTime__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__4"


    // $ANTLR start "rule__DateAndTime__Group__4__Impl"
    // InternalSTAlgorithmParser.g:12245:1: rule__DateAndTime__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12249:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12250:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12250:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12251:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__4__Impl"


    // $ANTLR start "rule__DateAndTime__Group__5"
    // InternalSTAlgorithmParser.g:12260:1: rule__DateAndTime__Group__5 : rule__DateAndTime__Group__5__Impl rule__DateAndTime__Group__6 ;
    public final void rule__DateAndTime__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12264:1: ( rule__DateAndTime__Group__5__Impl rule__DateAndTime__Group__6 )
            // InternalSTAlgorithmParser.g:12265:2: rule__DateAndTime__Group__5__Impl rule__DateAndTime__Group__6
            {
            pushFollow(FOLLOW_83);
            rule__DateAndTime__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__5"


    // $ANTLR start "rule__DateAndTime__Group__5__Impl"
    // InternalSTAlgorithmParser.g:12272:1: rule__DateAndTime__Group__5__Impl : ( HyphenMinus ) ;
    public final void rule__DateAndTime__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12276:1: ( ( HyphenMinus ) )
            // InternalSTAlgorithmParser.g:12277:1: ( HyphenMinus )
            {
            // InternalSTAlgorithmParser.g:12277:1: ( HyphenMinus )
            // InternalSTAlgorithmParser.g:12278:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_5()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getHyphenMinusKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__5__Impl"


    // $ANTLR start "rule__DateAndTime__Group__6"
    // InternalSTAlgorithmParser.g:12287:1: rule__DateAndTime__Group__6 : rule__DateAndTime__Group__6__Impl rule__DateAndTime__Group__7 ;
    public final void rule__DateAndTime__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12291:1: ( rule__DateAndTime__Group__6__Impl rule__DateAndTime__Group__7 )
            // InternalSTAlgorithmParser.g:12292:2: rule__DateAndTime__Group__6__Impl rule__DateAndTime__Group__7
            {
            pushFollow(FOLLOW_89);
            rule__DateAndTime__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__6"


    // $ANTLR start "rule__DateAndTime__Group__6__Impl"
    // InternalSTAlgorithmParser.g:12299:1: rule__DateAndTime__Group__6__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12303:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12304:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12304:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12305:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_6()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__6__Impl"


    // $ANTLR start "rule__DateAndTime__Group__7"
    // InternalSTAlgorithmParser.g:12314:1: rule__DateAndTime__Group__7 : rule__DateAndTime__Group__7__Impl rule__DateAndTime__Group__8 ;
    public final void rule__DateAndTime__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12318:1: ( rule__DateAndTime__Group__7__Impl rule__DateAndTime__Group__8 )
            // InternalSTAlgorithmParser.g:12319:2: rule__DateAndTime__Group__7__Impl rule__DateAndTime__Group__8
            {
            pushFollow(FOLLOW_83);
            rule__DateAndTime__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__7"


    // $ANTLR start "rule__DateAndTime__Group__7__Impl"
    // InternalSTAlgorithmParser.g:12326:1: rule__DateAndTime__Group__7__Impl : ( Colon ) ;
    public final void rule__DateAndTime__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12330:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:12331:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:12331:1: ( Colon )
            // InternalSTAlgorithmParser.g:12332:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getColonKeyword_7()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getColonKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__7__Impl"


    // $ANTLR start "rule__DateAndTime__Group__8"
    // InternalSTAlgorithmParser.g:12341:1: rule__DateAndTime__Group__8 : rule__DateAndTime__Group__8__Impl rule__DateAndTime__Group__9 ;
    public final void rule__DateAndTime__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12345:1: ( rule__DateAndTime__Group__8__Impl rule__DateAndTime__Group__9 )
            // InternalSTAlgorithmParser.g:12346:2: rule__DateAndTime__Group__8__Impl rule__DateAndTime__Group__9
            {
            pushFollow(FOLLOW_89);
            rule__DateAndTime__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__8"


    // $ANTLR start "rule__DateAndTime__Group__8__Impl"
    // InternalSTAlgorithmParser.g:12353:1: rule__DateAndTime__Group__8__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12357:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12358:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12358:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12359:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_8()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__8__Impl"


    // $ANTLR start "rule__DateAndTime__Group__9"
    // InternalSTAlgorithmParser.g:12368:1: rule__DateAndTime__Group__9 : rule__DateAndTime__Group__9__Impl rule__DateAndTime__Group__10 ;
    public final void rule__DateAndTime__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12372:1: ( rule__DateAndTime__Group__9__Impl rule__DateAndTime__Group__10 )
            // InternalSTAlgorithmParser.g:12373:2: rule__DateAndTime__Group__9__Impl rule__DateAndTime__Group__10
            {
            pushFollow(FOLLOW_83);
            rule__DateAndTime__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__10();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__9"


    // $ANTLR start "rule__DateAndTime__Group__9__Impl"
    // InternalSTAlgorithmParser.g:12380:1: rule__DateAndTime__Group__9__Impl : ( Colon ) ;
    public final void rule__DateAndTime__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12384:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:12385:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:12385:1: ( Colon )
            // InternalSTAlgorithmParser.g:12386:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getColonKeyword_9()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getColonKeyword_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__9__Impl"


    // $ANTLR start "rule__DateAndTime__Group__10"
    // InternalSTAlgorithmParser.g:12395:1: rule__DateAndTime__Group__10 : rule__DateAndTime__Group__10__Impl rule__DateAndTime__Group__11 ;
    public final void rule__DateAndTime__Group__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12399:1: ( rule__DateAndTime__Group__10__Impl rule__DateAndTime__Group__11 )
            // InternalSTAlgorithmParser.g:12400:2: rule__DateAndTime__Group__10__Impl rule__DateAndTime__Group__11
            {
            pushFollow(FOLLOW_75);
            rule__DateAndTime__Group__10__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__11();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__10"


    // $ANTLR start "rule__DateAndTime__Group__10__Impl"
    // InternalSTAlgorithmParser.g:12407:1: rule__DateAndTime__Group__10__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12411:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12412:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12412:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12413:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_10()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_10()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__10__Impl"


    // $ANTLR start "rule__DateAndTime__Group__11"
    // InternalSTAlgorithmParser.g:12422:1: rule__DateAndTime__Group__11 : rule__DateAndTime__Group__11__Impl ;
    public final void rule__DateAndTime__Group__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12426:1: ( rule__DateAndTime__Group__11__Impl )
            // InternalSTAlgorithmParser.g:12427:2: rule__DateAndTime__Group__11__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group__11__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__11"


    // $ANTLR start "rule__DateAndTime__Group__11__Impl"
    // InternalSTAlgorithmParser.g:12433:1: rule__DateAndTime__Group__11__Impl : ( ( rule__DateAndTime__Group_11__0 )? ) ;
    public final void rule__DateAndTime__Group__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12437:1: ( ( ( rule__DateAndTime__Group_11__0 )? ) )
            // InternalSTAlgorithmParser.g:12438:1: ( ( rule__DateAndTime__Group_11__0 )? )
            {
            // InternalSTAlgorithmParser.g:12438:1: ( ( rule__DateAndTime__Group_11__0 )? )
            // InternalSTAlgorithmParser.g:12439:2: ( rule__DateAndTime__Group_11__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getGroup_11()); 
            }
            // InternalSTAlgorithmParser.g:12440:2: ( rule__DateAndTime__Group_11__0 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==FullStop) ) {
                int LA108_1 = input.LA(2);

                if ( (LA108_1==RULE_INT) ) {
                    int LA108_3 = input.LA(3);

                    if ( (synpred165_InternalSTAlgorithmParser()) ) {
                        alt108=1;
                    }
                }
            }
            switch (alt108) {
                case 1 :
                    // InternalSTAlgorithmParser.g:12440:3: rule__DateAndTime__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DateAndTime__Group_11__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getGroup_11()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group__11__Impl"


    // $ANTLR start "rule__DateAndTime__Group_11__0"
    // InternalSTAlgorithmParser.g:12449:1: rule__DateAndTime__Group_11__0 : rule__DateAndTime__Group_11__0__Impl rule__DateAndTime__Group_11__1 ;
    public final void rule__DateAndTime__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12453:1: ( rule__DateAndTime__Group_11__0__Impl rule__DateAndTime__Group_11__1 )
            // InternalSTAlgorithmParser.g:12454:2: rule__DateAndTime__Group_11__0__Impl rule__DateAndTime__Group_11__1
            {
            pushFollow(FOLLOW_83);
            rule__DateAndTime__Group_11__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group_11__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__0"


    // $ANTLR start "rule__DateAndTime__Group_11__0__Impl"
    // InternalSTAlgorithmParser.g:12461:1: rule__DateAndTime__Group_11__0__Impl : ( ( FullStop ) ) ;
    public final void rule__DateAndTime__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12465:1: ( ( ( FullStop ) ) )
            // InternalSTAlgorithmParser.g:12466:1: ( ( FullStop ) )
            {
            // InternalSTAlgorithmParser.g:12466:1: ( ( FullStop ) )
            // InternalSTAlgorithmParser.g:12467:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getFullStopKeyword_11_0()); 
            }
            // InternalSTAlgorithmParser.g:12468:2: ( FullStop )
            // InternalSTAlgorithmParser.g:12468:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getFullStopKeyword_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__0__Impl"


    // $ANTLR start "rule__DateAndTime__Group_11__1"
    // InternalSTAlgorithmParser.g:12476:1: rule__DateAndTime__Group_11__1 : rule__DateAndTime__Group_11__1__Impl ;
    public final void rule__DateAndTime__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12480:1: ( rule__DateAndTime__Group_11__1__Impl )
            // InternalSTAlgorithmParser.g:12481:2: rule__DateAndTime__Group_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DateAndTime__Group_11__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__1"


    // $ANTLR start "rule__DateAndTime__Group_11__1__Impl"
    // InternalSTAlgorithmParser.g:12487:1: rule__DateAndTime__Group_11__1__Impl : ( RULE_INT ) ;
    public final void rule__DateAndTime__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12491:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12492:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12492:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12493:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_11_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAndTimeAccess().getINTTerminalRuleCall_11_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DateAndTime__Group_11__1__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__0"
    // InternalSTAlgorithmParser.g:12503:1: rule__TimeOfDay__Group__0 : rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1 ;
    public final void rule__TimeOfDay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12507:1: ( rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1 )
            // InternalSTAlgorithmParser.g:12508:2: rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1
            {
            pushFollow(FOLLOW_89);
            rule__TimeOfDay__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__0"


    // $ANTLR start "rule__TimeOfDay__Group__0__Impl"
    // InternalSTAlgorithmParser.g:12515:1: rule__TimeOfDay__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12519:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12520:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12520:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12521:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__0__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__1"
    // InternalSTAlgorithmParser.g:12530:1: rule__TimeOfDay__Group__1 : rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2 ;
    public final void rule__TimeOfDay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12534:1: ( rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2 )
            // InternalSTAlgorithmParser.g:12535:2: rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2
            {
            pushFollow(FOLLOW_83);
            rule__TimeOfDay__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__1"


    // $ANTLR start "rule__TimeOfDay__Group__1__Impl"
    // InternalSTAlgorithmParser.g:12542:1: rule__TimeOfDay__Group__1__Impl : ( Colon ) ;
    public final void rule__TimeOfDay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12546:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:12547:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:12547:1: ( Colon )
            // InternalSTAlgorithmParser.g:12548:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__1__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__2"
    // InternalSTAlgorithmParser.g:12557:1: rule__TimeOfDay__Group__2 : rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3 ;
    public final void rule__TimeOfDay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12561:1: ( rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3 )
            // InternalSTAlgorithmParser.g:12562:2: rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3
            {
            pushFollow(FOLLOW_89);
            rule__TimeOfDay__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__2"


    // $ANTLR start "rule__TimeOfDay__Group__2__Impl"
    // InternalSTAlgorithmParser.g:12569:1: rule__TimeOfDay__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12573:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12574:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12574:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12575:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__2__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__3"
    // InternalSTAlgorithmParser.g:12584:1: rule__TimeOfDay__Group__3 : rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4 ;
    public final void rule__TimeOfDay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12588:1: ( rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4 )
            // InternalSTAlgorithmParser.g:12589:2: rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4
            {
            pushFollow(FOLLOW_83);
            rule__TimeOfDay__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__3"


    // $ANTLR start "rule__TimeOfDay__Group__3__Impl"
    // InternalSTAlgorithmParser.g:12596:1: rule__TimeOfDay__Group__3__Impl : ( Colon ) ;
    public final void rule__TimeOfDay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12600:1: ( ( Colon ) )
            // InternalSTAlgorithmParser.g:12601:1: ( Colon )
            {
            // InternalSTAlgorithmParser.g:12601:1: ( Colon )
            // InternalSTAlgorithmParser.g:12602:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__3__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__4"
    // InternalSTAlgorithmParser.g:12611:1: rule__TimeOfDay__Group__4 : rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5 ;
    public final void rule__TimeOfDay__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12615:1: ( rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5 )
            // InternalSTAlgorithmParser.g:12616:2: rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5
            {
            pushFollow(FOLLOW_75);
            rule__TimeOfDay__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__4"


    // $ANTLR start "rule__TimeOfDay__Group__4__Impl"
    // InternalSTAlgorithmParser.g:12623:1: rule__TimeOfDay__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12627:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12628:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12628:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12629:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__4__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__5"
    // InternalSTAlgorithmParser.g:12638:1: rule__TimeOfDay__Group__5 : rule__TimeOfDay__Group__5__Impl ;
    public final void rule__TimeOfDay__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12642:1: ( rule__TimeOfDay__Group__5__Impl )
            // InternalSTAlgorithmParser.g:12643:2: rule__TimeOfDay__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__5"


    // $ANTLR start "rule__TimeOfDay__Group__5__Impl"
    // InternalSTAlgorithmParser.g:12649:1: rule__TimeOfDay__Group__5__Impl : ( ( rule__TimeOfDay__Group_5__0 )? ) ;
    public final void rule__TimeOfDay__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12653:1: ( ( ( rule__TimeOfDay__Group_5__0 )? ) )
            // InternalSTAlgorithmParser.g:12654:1: ( ( rule__TimeOfDay__Group_5__0 )? )
            {
            // InternalSTAlgorithmParser.g:12654:1: ( ( rule__TimeOfDay__Group_5__0 )? )
            // InternalSTAlgorithmParser.g:12655:2: ( rule__TimeOfDay__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getGroup_5()); 
            }
            // InternalSTAlgorithmParser.g:12656:2: ( rule__TimeOfDay__Group_5__0 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==FullStop) ) {
                int LA109_1 = input.LA(2);

                if ( (LA109_1==RULE_INT) ) {
                    int LA109_3 = input.LA(3);

                    if ( (synpred166_InternalSTAlgorithmParser()) ) {
                        alt109=1;
                    }
                }
            }
            switch (alt109) {
                case 1 :
                    // InternalSTAlgorithmParser.g:12656:3: rule__TimeOfDay__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeOfDay__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__5__Impl"


    // $ANTLR start "rule__TimeOfDay__Group_5__0"
    // InternalSTAlgorithmParser.g:12665:1: rule__TimeOfDay__Group_5__0 : rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1 ;
    public final void rule__TimeOfDay__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12669:1: ( rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1 )
            // InternalSTAlgorithmParser.g:12670:2: rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1
            {
            pushFollow(FOLLOW_83);
            rule__TimeOfDay__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__0"


    // $ANTLR start "rule__TimeOfDay__Group_5__0__Impl"
    // InternalSTAlgorithmParser.g:12677:1: rule__TimeOfDay__Group_5__0__Impl : ( ( FullStop ) ) ;
    public final void rule__TimeOfDay__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12681:1: ( ( ( FullStop ) ) )
            // InternalSTAlgorithmParser.g:12682:1: ( ( FullStop ) )
            {
            // InternalSTAlgorithmParser.g:12682:1: ( ( FullStop ) )
            // InternalSTAlgorithmParser.g:12683:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getFullStopKeyword_5_0()); 
            }
            // InternalSTAlgorithmParser.g:12684:2: ( FullStop )
            // InternalSTAlgorithmParser.g:12684:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getFullStopKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__0__Impl"


    // $ANTLR start "rule__TimeOfDay__Group_5__1"
    // InternalSTAlgorithmParser.g:12692:1: rule__TimeOfDay__Group_5__1 : rule__TimeOfDay__Group_5__1__Impl ;
    public final void rule__TimeOfDay__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12696:1: ( rule__TimeOfDay__Group_5__1__Impl )
            // InternalSTAlgorithmParser.g:12697:2: rule__TimeOfDay__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__1"


    // $ANTLR start "rule__TimeOfDay__Group_5__1__Impl"
    // InternalSTAlgorithmParser.g:12703:1: rule__TimeOfDay__Group_5__1__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12707:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:12708:1: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:12708:1: ( RULE_INT )
            // InternalSTAlgorithmParser.g:12709:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_5_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__1__Impl"


    // $ANTLR start "rule__STAlgorithmSource__ElementsAssignment_1"
    // InternalSTAlgorithmParser.g:12719:1: rule__STAlgorithmSource__ElementsAssignment_1 : ( ruleSTAlgorithmSourceElement ) ;
    public final void rule__STAlgorithmSource__ElementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12723:1: ( ( ruleSTAlgorithmSourceElement ) )
            // InternalSTAlgorithmParser.g:12724:2: ( ruleSTAlgorithmSourceElement )
            {
            // InternalSTAlgorithmParser.g:12724:2: ( ruleSTAlgorithmSourceElement )
            // InternalSTAlgorithmParser.g:12725:3: ruleSTAlgorithmSourceElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmSourceAccess().getElementsSTAlgorithmSourceElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAlgorithmSourceElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmSourceAccess().getElementsSTAlgorithmSourceElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmSource__ElementsAssignment_1"


    // $ANTLR start "rule__STAlgorithm__NameAssignment_1"
    // InternalSTAlgorithmParser.g:12734:1: rule__STAlgorithm__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__STAlgorithm__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12738:1: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:12739:2: ( RULE_ID )
            {
            // InternalSTAlgorithmParser.g:12739:2: ( RULE_ID )
            // InternalSTAlgorithmParser.g:12740:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__NameAssignment_1"


    // $ANTLR start "rule__STAlgorithm__BodyAssignment_2"
    // InternalSTAlgorithmParser.g:12749:1: rule__STAlgorithm__BodyAssignment_2 : ( ruleSTAlgorithmBody ) ;
    public final void rule__STAlgorithm__BodyAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12753:1: ( ( ruleSTAlgorithmBody ) )
            // InternalSTAlgorithmParser.g:12754:2: ( ruleSTAlgorithmBody )
            {
            // InternalSTAlgorithmParser.g:12754:2: ( ruleSTAlgorithmBody )
            // InternalSTAlgorithmParser.g:12755:3: ruleSTAlgorithmBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmAccess().getBodySTAlgorithmBodyParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAlgorithmBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmAccess().getBodySTAlgorithmBodyParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithm__BodyAssignment_2"


    // $ANTLR start "rule__STAlgorithmBody__VarTempDeclarationsAssignment_1"
    // InternalSTAlgorithmParser.g:12764:1: rule__STAlgorithmBody__VarTempDeclarationsAssignment_1 : ( ruleSTVarTempDeclarationBlock ) ;
    public final void rule__STAlgorithmBody__VarTempDeclarationsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12768:1: ( ( ruleSTVarTempDeclarationBlock ) )
            // InternalSTAlgorithmParser.g:12769:2: ( ruleSTVarTempDeclarationBlock )
            {
            // InternalSTAlgorithmParser.g:12769:2: ( ruleSTVarTempDeclarationBlock )
            // InternalSTAlgorithmParser.g:12770:3: ruleSTVarTempDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyAccess().getVarTempDeclarationsSTVarTempDeclarationBlockParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarTempDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyAccess().getVarTempDeclarationsSTVarTempDeclarationBlockParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__VarTempDeclarationsAssignment_1"


    // $ANTLR start "rule__STAlgorithmBody__StatementsAssignment_2"
    // InternalSTAlgorithmParser.g:12779:1: rule__STAlgorithmBody__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STAlgorithmBody__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12783:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:12784:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:12784:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:12785:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAlgorithmBodyAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAlgorithmBodyAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAlgorithmBody__StatementsAssignment_2"


    // $ANTLR start "rule__STMethod__NameAssignment_1"
    // InternalSTAlgorithmParser.g:12794:1: rule__STMethod__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__STMethod__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12798:1: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:12799:2: ( RULE_ID )
            {
            // InternalSTAlgorithmParser.g:12799:2: ( RULE_ID )
            // InternalSTAlgorithmParser.g:12800:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__NameAssignment_1"


    // $ANTLR start "rule__STMethod__ReturnTypeAssignment_2_1"
    // InternalSTAlgorithmParser.g:12809:1: rule__STMethod__ReturnTypeAssignment_2_1 : ( ( ruleSTAnyType ) ) ;
    public final void rule__STMethod__ReturnTypeAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12813:1: ( ( ( ruleSTAnyType ) ) )
            // InternalSTAlgorithmParser.g:12814:2: ( ( ruleSTAnyType ) )
            {
            // InternalSTAlgorithmParser.g:12814:2: ( ( ruleSTAnyType ) )
            // InternalSTAlgorithmParser.g:12815:3: ( ruleSTAnyType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodAccess().getReturnTypeDataTypeCrossReference_2_1_0()); 
            }
            // InternalSTAlgorithmParser.g:12816:3: ( ruleSTAnyType )
            // InternalSTAlgorithmParser.g:12817:4: ruleSTAnyType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodAccess().getReturnTypeDataTypeSTAnyTypeParserRuleCall_2_1_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodAccess().getReturnTypeDataTypeSTAnyTypeParserRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodAccess().getReturnTypeDataTypeCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__ReturnTypeAssignment_2_1"


    // $ANTLR start "rule__STMethod__BodyAssignment_3"
    // InternalSTAlgorithmParser.g:12828:1: rule__STMethod__BodyAssignment_3 : ( ruleSTMethodBody ) ;
    public final void rule__STMethod__BodyAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12832:1: ( ( ruleSTMethodBody ) )
            // InternalSTAlgorithmParser.g:12833:2: ( ruleSTMethodBody )
            {
            // InternalSTAlgorithmParser.g:12833:2: ( ruleSTMethodBody )
            // InternalSTAlgorithmParser.g:12834:3: ruleSTMethodBody
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodAccess().getBodySTMethodBodyParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMethodBody();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodAccess().getBodySTMethodBodyParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethod__BodyAssignment_3"


    // $ANTLR start "rule__STMethodBody__VarDeclarationsAssignment_1"
    // InternalSTAlgorithmParser.g:12843:1: rule__STMethodBody__VarDeclarationsAssignment_1 : ( ( rule__STMethodBody__VarDeclarationsAlternatives_1_0 ) ) ;
    public final void rule__STMethodBody__VarDeclarationsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12847:1: ( ( ( rule__STMethodBody__VarDeclarationsAlternatives_1_0 ) ) )
            // InternalSTAlgorithmParser.g:12848:2: ( ( rule__STMethodBody__VarDeclarationsAlternatives_1_0 ) )
            {
            // InternalSTAlgorithmParser.g:12848:2: ( ( rule__STMethodBody__VarDeclarationsAlternatives_1_0 ) )
            // InternalSTAlgorithmParser.g:12849:3: ( rule__STMethodBody__VarDeclarationsAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodBodyAccess().getVarDeclarationsAlternatives_1_0()); 
            }
            // InternalSTAlgorithmParser.g:12850:3: ( rule__STMethodBody__VarDeclarationsAlternatives_1_0 )
            // InternalSTAlgorithmParser.g:12850:4: rule__STMethodBody__VarDeclarationsAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STMethodBody__VarDeclarationsAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodBodyAccess().getVarDeclarationsAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethodBody__VarDeclarationsAssignment_1"


    // $ANTLR start "rule__STMethodBody__StatementsAssignment_2"
    // InternalSTAlgorithmParser.g:12858:1: rule__STMethodBody__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STMethodBody__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12862:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:12863:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:12863:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:12864:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMethodBodyAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMethodBodyAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMethodBody__StatementsAssignment_2"


    // $ANTLR start "rule__STExpressionSource__ExpressionAssignment_1"
    // InternalSTAlgorithmParser.g:12873:1: rule__STExpressionSource__ExpressionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STExpressionSource__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12877:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:12878:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:12878:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:12879:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionSourceAccess().getExpressionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionSourceAccess().getExpressionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STExpressionSource__ExpressionAssignment_1"


    // $ANTLR start "rule__STInitializerExpressionSource__InitializerExpressionAssignment_1"
    // InternalSTAlgorithmParser.g:12888:1: rule__STInitializerExpressionSource__InitializerExpressionAssignment_1 : ( ruleSTInitializerExpression ) ;
    public final void rule__STInitializerExpressionSource__InitializerExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12892:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTAlgorithmParser.g:12893:2: ( ruleSTInitializerExpression )
            {
            // InternalSTAlgorithmParser.g:12893:2: ( ruleSTInitializerExpression )
            // InternalSTAlgorithmParser.g:12894:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTInitializerExpressionSourceAccess().getInitializerExpressionSTInitializerExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTInitializerExpressionSourceAccess().getInitializerExpressionSTInitializerExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STInitializerExpressionSource__InitializerExpressionAssignment_1"


    // $ANTLR start "rule__STVarTempDeclarationBlock__ConstantAssignment_2"
    // InternalSTAlgorithmParser.g:12903:1: rule__STVarTempDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__STVarTempDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12907:1: ( ( ( CONSTANT ) ) )
            // InternalSTAlgorithmParser.g:12908:2: ( ( CONSTANT ) )
            {
            // InternalSTAlgorithmParser.g:12908:2: ( ( CONSTANT ) )
            // InternalSTAlgorithmParser.g:12909:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTAlgorithmParser.g:12910:3: ( CONSTANT )
            // InternalSTAlgorithmParser.g:12911:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTAlgorithmParser.g:12922:1: rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleSTVarDeclaration ) ;
    public final void rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12926:1: ( ( ruleSTVarDeclaration ) )
            // InternalSTAlgorithmParser.g:12927:2: ( ruleSTVarDeclaration )
            {
            // InternalSTAlgorithmParser.g:12927:2: ( ruleSTVarDeclaration )
            // InternalSTAlgorithmParser.g:12928:3: ruleSTVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarTempDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarTempDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarTempDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__STVarInputDeclarationBlock__ConstantAssignment_2"
    // InternalSTAlgorithmParser.g:12937:1: rule__STVarInputDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__STVarInputDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12941:1: ( ( ( CONSTANT ) ) )
            // InternalSTAlgorithmParser.g:12942:2: ( ( CONSTANT ) )
            {
            // InternalSTAlgorithmParser.g:12942:2: ( ( CONSTANT ) )
            // InternalSTAlgorithmParser.g:12943:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTAlgorithmParser.g:12944:3: ( CONSTANT )
            // InternalSTAlgorithmParser.g:12945:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTAlgorithmParser.g:12956:1: rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleSTVarDeclaration ) ;
    public final void rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12960:1: ( ( ruleSTVarDeclaration ) )
            // InternalSTAlgorithmParser.g:12961:2: ( ruleSTVarDeclaration )
            {
            // InternalSTAlgorithmParser.g:12961:2: ( ruleSTVarDeclaration )
            // InternalSTAlgorithmParser.g:12962:3: ruleSTVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInputDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInputDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInputDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__ConstantAssignment_2"
    // InternalSTAlgorithmParser.g:12971:1: rule__STVarOutputDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__STVarOutputDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12975:1: ( ( ( CONSTANT ) ) )
            // InternalSTAlgorithmParser.g:12976:2: ( ( CONSTANT ) )
            {
            // InternalSTAlgorithmParser.g:12976:2: ( ( CONSTANT ) )
            // InternalSTAlgorithmParser.g:12977:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTAlgorithmParser.g:12978:3: ( CONSTANT )
            // InternalSTAlgorithmParser.g:12979:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTAlgorithmParser.g:12990:1: rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleSTVarDeclaration ) ;
    public final void rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:12994:1: ( ( ruleSTVarDeclaration ) )
            // InternalSTAlgorithmParser.g:12995:2: ( ruleSTVarDeclaration )
            {
            // InternalSTAlgorithmParser.g:12995:2: ( ruleSTVarDeclaration )
            // InternalSTAlgorithmParser.g:12996:3: ruleSTVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarOutputDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarOutputDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarOutputDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__ConstantAssignment_2"
    // InternalSTAlgorithmParser.g:13005:1: rule__STVarInOutDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__STVarInOutDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13009:1: ( ( ( CONSTANT ) ) )
            // InternalSTAlgorithmParser.g:13010:2: ( ( CONSTANT ) )
            {
            // InternalSTAlgorithmParser.g:13010:2: ( ( CONSTANT ) )
            // InternalSTAlgorithmParser.g:13011:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTAlgorithmParser.g:13012:3: ( CONSTANT )
            // InternalSTAlgorithmParser.g:13013:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTAlgorithmParser.g:13024:1: rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleSTVarDeclaration ) ;
    public final void rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13028:1: ( ( ruleSTVarDeclaration ) )
            // InternalSTAlgorithmParser.g:13029:2: ( ruleSTVarDeclaration )
            {
            // InternalSTAlgorithmParser.g:13029:2: ( ruleSTVarDeclaration )
            // InternalSTAlgorithmParser.g:13030:3: ruleSTVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarInOutDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarInOutDeclarationBlockAccess().getVarDeclarationsSTVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarInOutDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__STVarDeclaration__NameAssignment_1"
    // InternalSTAlgorithmParser.g:13039:1: rule__STVarDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__STVarDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13043:1: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:13044:2: ( RULE_ID )
            {
            // InternalSTAlgorithmParser.g:13044:2: ( RULE_ID )
            // InternalSTAlgorithmParser.g:13045:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__NameAssignment_1"


    // $ANTLR start "rule__STVarDeclaration__LocatedAtAssignment_2_1"
    // InternalSTAlgorithmParser.g:13054:1: rule__STVarDeclaration__LocatedAtAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__STVarDeclaration__LocatedAtAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13058:1: ( ( ( RULE_ID ) ) )
            // InternalSTAlgorithmParser.g:13059:2: ( ( RULE_ID ) )
            {
            // InternalSTAlgorithmParser.g:13059:2: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:13060:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementCrossReference_2_1_0()); 
            }
            // InternalSTAlgorithmParser.g:13061:3: ( RULE_ID )
            // InternalSTAlgorithmParser.g:13062:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getLocatedAtINamedElementCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__LocatedAtAssignment_2_1"


    // $ANTLR start "rule__STVarDeclaration__ArrayAssignment_4_0"
    // InternalSTAlgorithmParser.g:13073:1: rule__STVarDeclaration__ArrayAssignment_4_0 : ( ( ARRAY ) ) ;
    public final void rule__STVarDeclaration__ArrayAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13077:1: ( ( ( ARRAY ) ) )
            // InternalSTAlgorithmParser.g:13078:2: ( ( ARRAY ) )
            {
            // InternalSTAlgorithmParser.g:13078:2: ( ( ARRAY ) )
            // InternalSTAlgorithmParser.g:13079:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }
            // InternalSTAlgorithmParser.g:13080:3: ( ARRAY )
            // InternalSTAlgorithmParser.g:13081:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__ArrayAssignment_4_0"


    // $ANTLR start "rule__STVarDeclaration__RangesAssignment_4_1_0_1"
    // InternalSTAlgorithmParser.g:13092:1: rule__STVarDeclaration__RangesAssignment_4_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__STVarDeclaration__RangesAssignment_4_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13096:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13097:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13097:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13098:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__RangesAssignment_4_1_0_1"


    // $ANTLR start "rule__STVarDeclaration__RangesAssignment_4_1_0_2_1"
    // InternalSTAlgorithmParser.g:13107:1: rule__STVarDeclaration__RangesAssignment_4_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__STVarDeclaration__RangesAssignment_4_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13111:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13112:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13112:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13113:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__RangesAssignment_4_1_0_2_1"


    // $ANTLR start "rule__STVarDeclaration__CountAssignment_4_1_1_1"
    // InternalSTAlgorithmParser.g:13122:1: rule__STVarDeclaration__CountAssignment_4_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__STVarDeclaration__CountAssignment_4_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13126:1: ( ( ( Asterisk ) ) )
            // InternalSTAlgorithmParser.g:13127:2: ( ( Asterisk ) )
            {
            // InternalSTAlgorithmParser.g:13127:2: ( ( Asterisk ) )
            // InternalSTAlgorithmParser.g:13128:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }
            // InternalSTAlgorithmParser.g:13129:3: ( Asterisk )
            // InternalSTAlgorithmParser.g:13130:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__CountAssignment_4_1_1_1"


    // $ANTLR start "rule__STVarDeclaration__CountAssignment_4_1_1_2_1"
    // InternalSTAlgorithmParser.g:13141:1: rule__STVarDeclaration__CountAssignment_4_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__STVarDeclaration__CountAssignment_4_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13145:1: ( ( ( Asterisk ) ) )
            // InternalSTAlgorithmParser.g:13146:2: ( ( Asterisk ) )
            {
            // InternalSTAlgorithmParser.g:13146:2: ( ( Asterisk ) )
            // InternalSTAlgorithmParser.g:13147:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }
            // InternalSTAlgorithmParser.g:13148:3: ( Asterisk )
            // InternalSTAlgorithmParser.g:13149:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__CountAssignment_4_1_1_2_1"


    // $ANTLR start "rule__STVarDeclaration__TypeAssignment_5"
    // InternalSTAlgorithmParser.g:13160:1: rule__STVarDeclaration__TypeAssignment_5 : ( ( ruleSTAnyType ) ) ;
    public final void rule__STVarDeclaration__TypeAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13164:1: ( ( ( ruleSTAnyType ) ) )
            // InternalSTAlgorithmParser.g:13165:2: ( ( ruleSTAnyType ) )
            {
            // InternalSTAlgorithmParser.g:13165:2: ( ( ruleSTAnyType ) )
            // InternalSTAlgorithmParser.g:13166:3: ( ruleSTAnyType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementCrossReference_5_0()); 
            }
            // InternalSTAlgorithmParser.g:13167:3: ( ruleSTAnyType )
            // InternalSTAlgorithmParser.g:13168:4: ruleSTAnyType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_5_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_5_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getTypeINamedElementCrossReference_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__TypeAssignment_5"


    // $ANTLR start "rule__STVarDeclaration__MaxLengthAssignment_6_1"
    // InternalSTAlgorithmParser.g:13179:1: rule__STVarDeclaration__MaxLengthAssignment_6_1 : ( ruleSTExpression ) ;
    public final void rule__STVarDeclaration__MaxLengthAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13183:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13184:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13184:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13185:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__MaxLengthAssignment_6_1"


    // $ANTLR start "rule__STVarDeclaration__DefaultValueAssignment_7_1"
    // InternalSTAlgorithmParser.g:13194:1: rule__STVarDeclaration__DefaultValueAssignment_7_1 : ( ruleSTInitializerExpression ) ;
    public final void rule__STVarDeclaration__DefaultValueAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13198:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTAlgorithmParser.g:13199:2: ( ruleSTInitializerExpression )
            {
            // InternalSTAlgorithmParser.g:13199:2: ( ruleSTInitializerExpression )
            // InternalSTAlgorithmParser.g:13200:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTVarDeclarationAccess().getDefaultValueSTInitializerExpressionParserRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTVarDeclarationAccess().getDefaultValueSTInitializerExpressionParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STVarDeclaration__DefaultValueAssignment_7_1"


    // $ANTLR start "rule__STTypeDeclaration__ArrayAssignment_1_0"
    // InternalSTAlgorithmParser.g:13209:1: rule__STTypeDeclaration__ArrayAssignment_1_0 : ( ( ARRAY ) ) ;
    public final void rule__STTypeDeclaration__ArrayAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13213:1: ( ( ( ARRAY ) ) )
            // InternalSTAlgorithmParser.g:13214:2: ( ( ARRAY ) )
            {
            // InternalSTAlgorithmParser.g:13214:2: ( ( ARRAY ) )
            // InternalSTAlgorithmParser.g:13215:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getArrayARRAYKeyword_1_0_0()); 
            }
            // InternalSTAlgorithmParser.g:13216:3: ( ARRAY )
            // InternalSTAlgorithmParser.g:13217:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getArrayARRAYKeyword_1_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getArrayARRAYKeyword_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getArrayARRAYKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__ArrayAssignment_1_0"


    // $ANTLR start "rule__STTypeDeclaration__RangesAssignment_1_1_0_1"
    // InternalSTAlgorithmParser.g:13228:1: rule__STTypeDeclaration__RangesAssignment_1_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__STTypeDeclaration__RangesAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13232:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13233:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13233:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13234:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRangesSTExpressionParserRuleCall_1_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRangesSTExpressionParserRuleCall_1_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__RangesAssignment_1_1_0_1"


    // $ANTLR start "rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1"
    // InternalSTAlgorithmParser.g:13243:1: rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13247:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13248:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13248:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13249:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getRangesSTExpressionParserRuleCall_1_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getRangesSTExpressionParserRuleCall_1_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__RangesAssignment_1_1_0_2_1"


    // $ANTLR start "rule__STTypeDeclaration__CountAssignment_1_1_1_1"
    // InternalSTAlgorithmParser.g:13258:1: rule__STTypeDeclaration__CountAssignment_1_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__STTypeDeclaration__CountAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13262:1: ( ( ( Asterisk ) ) )
            // InternalSTAlgorithmParser.g:13263:2: ( ( Asterisk ) )
            {
            // InternalSTAlgorithmParser.g:13263:2: ( ( Asterisk ) )
            // InternalSTAlgorithmParser.g:13264:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_1_0()); 
            }
            // InternalSTAlgorithmParser.g:13265:3: ( Asterisk )
            // InternalSTAlgorithmParser.g:13266:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__CountAssignment_1_1_1_1"


    // $ANTLR start "rule__STTypeDeclaration__CountAssignment_1_1_1_2_1"
    // InternalSTAlgorithmParser.g:13277:1: rule__STTypeDeclaration__CountAssignment_1_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__STTypeDeclaration__CountAssignment_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13281:1: ( ( ( Asterisk ) ) )
            // InternalSTAlgorithmParser.g:13282:2: ( ( Asterisk ) )
            {
            // InternalSTAlgorithmParser.g:13282:2: ( ( Asterisk ) )
            // InternalSTAlgorithmParser.g:13283:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_2_1_0()); 
            }
            // InternalSTAlgorithmParser.g:13284:3: ( Asterisk )
            // InternalSTAlgorithmParser.g:13285:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getCountAsteriskKeyword_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__CountAssignment_1_1_1_2_1"


    // $ANTLR start "rule__STTypeDeclaration__TypeAssignment_2"
    // InternalSTAlgorithmParser.g:13296:1: rule__STTypeDeclaration__TypeAssignment_2 : ( ( ruleSTAnyType ) ) ;
    public final void rule__STTypeDeclaration__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13300:1: ( ( ( ruleSTAnyType ) ) )
            // InternalSTAlgorithmParser.g:13301:2: ( ( ruleSTAnyType ) )
            {
            // InternalSTAlgorithmParser.g:13301:2: ( ( ruleSTAnyType ) )
            // InternalSTAlgorithmParser.g:13302:3: ( ruleSTAnyType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getTypeINamedElementCrossReference_2_0()); 
            }
            // InternalSTAlgorithmParser.g:13303:3: ( ruleSTAnyType )
            // InternalSTAlgorithmParser.g:13304:4: ruleSTAnyType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_2_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getTypeINamedElementCrossReference_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__TypeAssignment_2"


    // $ANTLR start "rule__STTypeDeclaration__MaxLengthAssignment_3_1"
    // InternalSTAlgorithmParser.g:13315:1: rule__STTypeDeclaration__MaxLengthAssignment_3_1 : ( ruleSTExpression ) ;
    public final void rule__STTypeDeclaration__MaxLengthAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13319:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13320:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13320:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13321:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTypeDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTypeDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTypeDeclaration__MaxLengthAssignment_3_1"


    // $ANTLR start "rule__STElementaryInitializerExpression__ValueAssignment"
    // InternalSTAlgorithmParser.g:13330:1: rule__STElementaryInitializerExpression__ValueAssignment : ( ruleSTExpression ) ;
    public final void rule__STElementaryInitializerExpression__ValueAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13334:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13335:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13335:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13336:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueSTExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElementaryInitializerExpressionAccess().getValueSTExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElementaryInitializerExpression__ValueAssignment"


    // $ANTLR start "rule__STArrayInitializerExpression__ValuesAssignment_1"
    // InternalSTAlgorithmParser.g:13345:1: rule__STArrayInitializerExpression__ValuesAssignment_1 : ( ruleSTArrayInitElement ) ;
    public final void rule__STArrayInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13349:1: ( ( ruleSTArrayInitElement ) )
            // InternalSTAlgorithmParser.g:13350:2: ( ruleSTArrayInitElement )
            {
            // InternalSTAlgorithmParser.g:13350:2: ( ruleSTArrayInitElement )
            // InternalSTAlgorithmParser.g:13351:3: ruleSTArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__STArrayInitializerExpression__ValuesAssignment_2_1"
    // InternalSTAlgorithmParser.g:13360:1: rule__STArrayInitializerExpression__ValuesAssignment_2_1 : ( ruleSTArrayInitElement ) ;
    public final void rule__STArrayInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13364:1: ( ( ruleSTArrayInitElement ) )
            // InternalSTAlgorithmParser.g:13365:2: ( ruleSTArrayInitElement )
            {
            // InternalSTAlgorithmParser.g:13365:2: ( ruleSTArrayInitElement )
            // InternalSTAlgorithmParser.g:13366:3: ruleSTArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitializerExpressionAccess().getValuesSTArrayInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__STArrayInitElement__IndexOrInitExpressionAssignment_0"
    // InternalSTAlgorithmParser.g:13375:1: rule__STArrayInitElement__IndexOrInitExpressionAssignment_0 : ( ruleSTInitializerExpression ) ;
    public final void rule__STArrayInitElement__IndexOrInitExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13379:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTAlgorithmParser.g:13380:2: ( ruleSTInitializerExpression )
            {
            // InternalSTAlgorithmParser.g:13380:2: ( ruleSTInitializerExpression )
            // InternalSTAlgorithmParser.g:13381:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getIndexOrInitExpressionSTInitializerExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getIndexOrInitExpressionSTInitializerExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__IndexOrInitExpressionAssignment_0"


    // $ANTLR start "rule__STArrayInitElement__InitExpressionsAssignment_1_1"
    // InternalSTAlgorithmParser.g:13390:1: rule__STArrayInitElement__InitExpressionsAssignment_1_1 : ( ruleSTInitializerExpression ) ;
    public final void rule__STArrayInitElement__InitExpressionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13394:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTAlgorithmParser.g:13395:2: ( ruleSTInitializerExpression )
            {
            // InternalSTAlgorithmParser.g:13395:2: ( ruleSTInitializerExpression )
            // InternalSTAlgorithmParser.g:13396:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsSTInitializerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsSTInitializerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__InitExpressionsAssignment_1_1"


    // $ANTLR start "rule__STArrayInitElement__InitExpressionsAssignment_1_2_1"
    // InternalSTAlgorithmParser.g:13405:1: rule__STArrayInitElement__InitExpressionsAssignment_1_2_1 : ( ruleSTInitializerExpression ) ;
    public final void rule__STArrayInitElement__InitExpressionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13409:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTAlgorithmParser.g:13410:2: ( ruleSTInitializerExpression )
            {
            // InternalSTAlgorithmParser.g:13410:2: ( ruleSTInitializerExpression )
            // InternalSTAlgorithmParser.g:13411:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsSTInitializerExpressionParserRuleCall_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTArrayInitElementAccess().getInitExpressionsSTInitializerExpressionParserRuleCall_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STArrayInitElement__InitExpressionsAssignment_1_2_1"


    // $ANTLR start "rule__STStructInitializerExpression__ValuesAssignment_1"
    // InternalSTAlgorithmParser.g:13420:1: rule__STStructInitializerExpression__ValuesAssignment_1 : ( ruleSTStructInitElement ) ;
    public final void rule__STStructInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13424:1: ( ( ruleSTStructInitElement ) )
            // InternalSTAlgorithmParser.g:13425:2: ( ruleSTStructInitElement )
            {
            // InternalSTAlgorithmParser.g:13425:2: ( ruleSTStructInitElement )
            // InternalSTAlgorithmParser.g:13426:3: ruleSTStructInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getValuesSTStructInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStructInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getValuesSTStructInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__STStructInitializerExpression__ValuesAssignment_2_1"
    // InternalSTAlgorithmParser.g:13435:1: rule__STStructInitializerExpression__ValuesAssignment_2_1 : ( ruleSTStructInitElement ) ;
    public final void rule__STStructInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13439:1: ( ( ruleSTStructInitElement ) )
            // InternalSTAlgorithmParser.g:13440:2: ( ruleSTStructInitElement )
            {
            // InternalSTAlgorithmParser.g:13440:2: ( ruleSTStructInitElement )
            // InternalSTAlgorithmParser.g:13441:3: ruleSTStructInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitializerExpressionAccess().getValuesSTStructInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStructInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitializerExpressionAccess().getValuesSTStructInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__STStructInitElement__VariableAssignment_0"
    // InternalSTAlgorithmParser.g:13450:1: rule__STStructInitElement__VariableAssignment_0 : ( ( ruleSTFeatureName ) ) ;
    public final void rule__STStructInitElement__VariableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13454:1: ( ( ( ruleSTFeatureName ) ) )
            // InternalSTAlgorithmParser.g:13455:2: ( ( ruleSTFeatureName ) )
            {
            // InternalSTAlgorithmParser.g:13455:2: ( ( ruleSTFeatureName ) )
            // InternalSTAlgorithmParser.g:13456:3: ( ruleSTFeatureName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getVariableINamedElementCrossReference_0_0()); 
            }
            // InternalSTAlgorithmParser.g:13457:3: ( ruleSTFeatureName )
            // InternalSTAlgorithmParser.g:13458:4: ruleSTFeatureName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getVariableINamedElementSTFeatureNameParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTFeatureName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getVariableINamedElementSTFeatureNameParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getVariableINamedElementCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__VariableAssignment_0"


    // $ANTLR start "rule__STStructInitElement__ValueAssignment_2"
    // InternalSTAlgorithmParser.g:13469:1: rule__STStructInitElement__ValueAssignment_2 : ( ruleSTInitializerExpression ) ;
    public final void rule__STStructInitElement__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13473:1: ( ( ruleSTInitializerExpression ) )
            // InternalSTAlgorithmParser.g:13474:2: ( ruleSTInitializerExpression )
            {
            // InternalSTAlgorithmParser.g:13474:2: ( ruleSTInitializerExpression )
            // InternalSTAlgorithmParser.g:13475:3: ruleSTInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStructInitElementAccess().getValueSTInitializerExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStructInitElementAccess().getValueSTInitializerExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStructInitElement__ValueAssignment_2"


    // $ANTLR start "rule__STAssignmentStatement__LeftAssignment_0"
    // InternalSTAlgorithmParser.g:13484:1: rule__STAssignmentStatement__LeftAssignment_0 : ( ruleSTAccessExpression ) ;
    public final void rule__STAssignmentStatement__LeftAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13488:1: ( ( ruleSTAccessExpression ) )
            // InternalSTAlgorithmParser.g:13489:2: ( ruleSTAccessExpression )
            {
            // InternalSTAlgorithmParser.g:13489:2: ( ruleSTAccessExpression )
            // InternalSTAlgorithmParser.g:13490:3: ruleSTAccessExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLeftSTAccessExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLeftSTAccessExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__LeftAssignment_0"


    // $ANTLR start "rule__STAssignmentStatement__RightAssignment_2"
    // InternalSTAlgorithmParser.g:13499:1: rule__STAssignmentStatement__RightAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STAssignmentStatement__RightAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13503:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13504:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13504:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13505:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRightSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRightSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__RightAssignment_2"


    // $ANTLR start "rule__STCallStatement__CallAssignment"
    // InternalSTAlgorithmParser.g:13514:1: rule__STCallStatement__CallAssignment : ( ruleSTAccessExpression ) ;
    public final void rule__STCallStatement__CallAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13518:1: ( ( ruleSTAccessExpression ) )
            // InternalSTAlgorithmParser.g:13519:2: ( ruleSTAccessExpression )
            {
            // InternalSTAlgorithmParser.g:13519:2: ( ruleSTAccessExpression )
            // InternalSTAlgorithmParser.g:13520:3: ruleSTAccessExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallStatementAccess().getCallSTAccessExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallStatementAccess().getCallSTAccessExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallStatement__CallAssignment"


    // $ANTLR start "rule__STCallUnnamedArgument__ArgumentAssignment"
    // InternalSTAlgorithmParser.g:13529:1: rule__STCallUnnamedArgument__ArgumentAssignment : ( ruleSTExpression ) ;
    public final void rule__STCallUnnamedArgument__ArgumentAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13533:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13534:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13534:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13535:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentAccess().getArgumentSTExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentAccess().getArgumentSTExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallUnnamedArgument__ArgumentAssignment"


    // $ANTLR start "rule__STCallNamedInputArgument__ParameterAssignment_0"
    // InternalSTAlgorithmParser.g:13544:1: rule__STCallNamedInputArgument__ParameterAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__STCallNamedInputArgument__ParameterAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13548:1: ( ( ( RULE_ID ) ) )
            // InternalSTAlgorithmParser.g:13549:2: ( ( RULE_ID ) )
            {
            // InternalSTAlgorithmParser.g:13549:2: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:13550:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterINamedElementCrossReference_0_0()); 
            }
            // InternalSTAlgorithmParser.g:13551:3: ( RULE_ID )
            // InternalSTAlgorithmParser.g:13552:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterINamedElementIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterINamedElementIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getParameterINamedElementCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__ParameterAssignment_0"


    // $ANTLR start "rule__STCallNamedInputArgument__ArgumentAssignment_2"
    // InternalSTAlgorithmParser.g:13563:1: rule__STCallNamedInputArgument__ArgumentAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STCallNamedInputArgument__ArgumentAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13567:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13568:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13568:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13569:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getArgumentSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getArgumentSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__ArgumentAssignment_2"


    // $ANTLR start "rule__STCallNamedOutputArgument__NotAssignment_0"
    // InternalSTAlgorithmParser.g:13578:1: rule__STCallNamedOutputArgument__NotAssignment_0 : ( ( NOT ) ) ;
    public final void rule__STCallNamedOutputArgument__NotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13582:1: ( ( ( NOT ) ) )
            // InternalSTAlgorithmParser.g:13583:2: ( ( NOT ) )
            {
            // InternalSTAlgorithmParser.g:13583:2: ( ( NOT ) )
            // InternalSTAlgorithmParser.g:13584:3: ( NOT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }
            // InternalSTAlgorithmParser.g:13585:3: ( NOT )
            // InternalSTAlgorithmParser.g:13586:4: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__NotAssignment_0"


    // $ANTLR start "rule__STCallNamedOutputArgument__ParameterAssignment_1"
    // InternalSTAlgorithmParser.g:13597:1: rule__STCallNamedOutputArgument__ParameterAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__STCallNamedOutputArgument__ParameterAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13601:1: ( ( ( RULE_ID ) ) )
            // InternalSTAlgorithmParser.g:13602:2: ( ( RULE_ID ) )
            {
            // InternalSTAlgorithmParser.g:13602:2: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:13603:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterINamedElementCrossReference_1_0()); 
            }
            // InternalSTAlgorithmParser.g:13604:3: ( RULE_ID )
            // InternalSTAlgorithmParser.g:13605:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterINamedElementIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterINamedElementIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getParameterINamedElementCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__ParameterAssignment_1"


    // $ANTLR start "rule__STCallNamedOutputArgument__ArgumentAssignment_3"
    // InternalSTAlgorithmParser.g:13616:1: rule__STCallNamedOutputArgument__ArgumentAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STCallNamedOutputArgument__ArgumentAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13620:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13621:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13621:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13622:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getArgumentSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getArgumentSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__ArgumentAssignment_3"


    // $ANTLR start "rule__STIfStatement__ConditionAssignment_1"
    // InternalSTAlgorithmParser.g:13631:1: rule__STIfStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STIfStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13635:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13636:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13636:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13637:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STIfStatement__StatementsAssignment_3"
    // InternalSTAlgorithmParser.g:13646:1: rule__STIfStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STIfStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13650:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:13651:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:13651:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:13652:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STIfStatement__ElseifsAssignment_4"
    // InternalSTAlgorithmParser.g:13661:1: rule__STIfStatement__ElseifsAssignment_4 : ( ruleSTElseIfPart ) ;
    public final void rule__STIfStatement__ElseifsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13665:1: ( ( ruleSTElseIfPart ) )
            // InternalSTAlgorithmParser.g:13666:2: ( ruleSTElseIfPart )
            {
            // InternalSTAlgorithmParser.g:13666:2: ( ruleSTElseIfPart )
            // InternalSTAlgorithmParser.g:13667:3: ruleSTElseIfPart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ElseifsAssignment_4"


    // $ANTLR start "rule__STIfStatement__ElseAssignment_5"
    // InternalSTAlgorithmParser.g:13676:1: rule__STIfStatement__ElseAssignment_5 : ( ruleSTElsePart ) ;
    public final void rule__STIfStatement__ElseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13680:1: ( ( ruleSTElsePart ) )
            // InternalSTAlgorithmParser.g:13681:2: ( ruleSTElsePart )
            {
            // InternalSTAlgorithmParser.g:13681:2: ( ruleSTElsePart )
            // InternalSTAlgorithmParser.g:13682:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ElseAssignment_5"


    // $ANTLR start "rule__STElseIfPart__ConditionAssignment_1"
    // InternalSTAlgorithmParser.g:13691:1: rule__STElseIfPart__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STElseIfPart__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13695:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13696:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13696:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13697:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__ConditionAssignment_1"


    // $ANTLR start "rule__STElseIfPart__StatementsAssignment_3"
    // InternalSTAlgorithmParser.g:13706:1: rule__STElseIfPart__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STElseIfPart__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13710:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:13711:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:13711:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:13712:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__StatementsAssignment_3"


    // $ANTLR start "rule__STCaseStatement__SelectorAssignment_1"
    // InternalSTAlgorithmParser.g:13721:1: rule__STCaseStatement__SelectorAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseStatement__SelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13725:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13726:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13726:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13727:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__SelectorAssignment_1"


    // $ANTLR start "rule__STCaseStatement__CasesAssignment_3"
    // InternalSTAlgorithmParser.g:13736:1: rule__STCaseStatement__CasesAssignment_3 : ( ruleSTCaseCases ) ;
    public final void rule__STCaseStatement__CasesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13740:1: ( ( ruleSTCaseCases ) )
            // InternalSTAlgorithmParser.g:13741:2: ( ruleSTCaseCases )
            {
            // InternalSTAlgorithmParser.g:13741:2: ( ruleSTCaseCases )
            // InternalSTAlgorithmParser.g:13742:3: ruleSTCaseCases
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__CasesAssignment_3"


    // $ANTLR start "rule__STCaseStatement__ElseAssignment_4"
    // InternalSTAlgorithmParser.g:13751:1: rule__STCaseStatement__ElseAssignment_4 : ( ruleSTElsePart ) ;
    public final void rule__STCaseStatement__ElseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13755:1: ( ( ruleSTElsePart ) )
            // InternalSTAlgorithmParser.g:13756:2: ( ruleSTElsePart )
            {
            // InternalSTAlgorithmParser.g:13756:2: ( ruleSTElsePart )
            // InternalSTAlgorithmParser.g:13757:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__ElseAssignment_4"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_0"
    // InternalSTAlgorithmParser.g:13766:1: rule__STCaseCases__ConditionsAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13770:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13771:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13771:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13772:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_0"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_1_1"
    // InternalSTAlgorithmParser.g:13781:1: rule__STCaseCases__ConditionsAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13785:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13786:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13786:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13787:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_1_1"


    // $ANTLR start "rule__STCaseCases__StatementsAssignment_3"
    // InternalSTAlgorithmParser.g:13796:1: rule__STCaseCases__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STCaseCases__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13800:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:13801:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:13801:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:13802:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__StatementsAssignment_3"


    // $ANTLR start "rule__STElsePart__StatementsAssignment_2"
    // InternalSTAlgorithmParser.g:13811:1: rule__STElsePart__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STElsePart__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13815:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:13816:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:13816:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:13817:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__StatementsAssignment_2"


    // $ANTLR start "rule__STForStatement__VariableAssignment_1"
    // InternalSTAlgorithmParser.g:13826:1: rule__STForStatement__VariableAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__STForStatement__VariableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13830:1: ( ( ( RULE_ID ) ) )
            // InternalSTAlgorithmParser.g:13831:2: ( ( RULE_ID ) )
            {
            // InternalSTAlgorithmParser.g:13831:2: ( ( RULE_ID ) )
            // InternalSTAlgorithmParser.g:13832:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationCrossReference_1_0()); 
            }
            // InternalSTAlgorithmParser.g:13833:3: ( RULE_ID )
            // InternalSTAlgorithmParser.g:13834:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__VariableAssignment_1"


    // $ANTLR start "rule__STForStatement__FromAssignment_3"
    // InternalSTAlgorithmParser.g:13845:1: rule__STForStatement__FromAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__FromAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13849:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13850:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13850:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13851:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFromSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFromSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__FromAssignment_3"


    // $ANTLR start "rule__STForStatement__ToAssignment_5"
    // InternalSTAlgorithmParser.g:13860:1: rule__STForStatement__ToAssignment_5 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ToAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13864:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13865:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13865:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13866:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ToAssignment_5"


    // $ANTLR start "rule__STForStatement__ByAssignment_6_1"
    // InternalSTAlgorithmParser.g:13875:1: rule__STForStatement__ByAssignment_6_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ByAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13879:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13880:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13880:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13881:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ByAssignment_6_1"


    // $ANTLR start "rule__STForStatement__StatementsAssignment_8"
    // InternalSTAlgorithmParser.g:13890:1: rule__STForStatement__StatementsAssignment_8 : ( ruleSTStatement ) ;
    public final void rule__STForStatement__StatementsAssignment_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13894:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:13895:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:13895:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:13896:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__StatementsAssignment_8"


    // $ANTLR start "rule__STWhileStatement__ConditionAssignment_1"
    // InternalSTAlgorithmParser.g:13905:1: rule__STWhileStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STWhileStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13909:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13910:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13910:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13911:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STWhileStatement__StatementsAssignment_3"
    // InternalSTAlgorithmParser.g:13920:1: rule__STWhileStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STWhileStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13924:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:13925:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:13925:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:13926:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STRepeatStatement__StatementsAssignment_1"
    // InternalSTAlgorithmParser.g:13935:1: rule__STRepeatStatement__StatementsAssignment_1 : ( ruleSTStatement ) ;
    public final void rule__STRepeatStatement__StatementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13939:1: ( ( ruleSTStatement ) )
            // InternalSTAlgorithmParser.g:13940:2: ( ruleSTStatement )
            {
            // InternalSTAlgorithmParser.g:13940:2: ( ruleSTStatement )
            // InternalSTAlgorithmParser.g:13941:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__StatementsAssignment_1"


    // $ANTLR start "rule__STRepeatStatement__ConditionAssignment_3"
    // InternalSTAlgorithmParser.g:13950:1: rule__STRepeatStatement__ConditionAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STRepeatStatement__ConditionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13954:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:13955:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:13955:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:13956:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__ConditionAssignment_3"


    // $ANTLR start "rule__STSubrangeExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:13965:1: rule__STSubrangeExpression__OpAssignment_1_0_1 : ( ruleSubrangeOperator ) ;
    public final void rule__STSubrangeExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13969:1: ( ( ruleSubrangeOperator ) )
            // InternalSTAlgorithmParser.g:13970:2: ( ruleSubrangeOperator )
            {
            // InternalSTAlgorithmParser.g:13970:2: ( ruleSubrangeOperator )
            // InternalSTAlgorithmParser.g:13971:3: ruleSubrangeOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubrangeOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STSubrangeExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:13980:1: rule__STSubrangeExpression__RightAssignment_1_1 : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13984:1: ( ( ruleSTOrExpression ) )
            // InternalSTAlgorithmParser.g:13985:2: ( ruleSTOrExpression )
            {
            // InternalSTAlgorithmParser.g:13985:2: ( ruleSTOrExpression )
            // InternalSTAlgorithmParser.g:13986:3: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STOrExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:13995:1: rule__STOrExpression__OpAssignment_1_0_1 : ( ruleOrOperator ) ;
    public final void rule__STOrExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:13999:1: ( ( ruleOrOperator ) )
            // InternalSTAlgorithmParser.g:14000:2: ( ruleOrOperator )
            {
            // InternalSTAlgorithmParser.g:14000:2: ( ruleOrOperator )
            // InternalSTAlgorithmParser.g:14001:3: ruleOrOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STOrExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:14010:1: rule__STOrExpression__RightAssignment_1_1 : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14014:1: ( ( ruleSTXorExpression ) )
            // InternalSTAlgorithmParser.g:14015:2: ( ruleSTXorExpression )
            {
            // InternalSTAlgorithmParser.g:14015:2: ( ruleSTXorExpression )
            // InternalSTAlgorithmParser.g:14016:3: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STXorExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:14025:1: rule__STXorExpression__OpAssignment_1_0_1 : ( ruleXorOperator ) ;
    public final void rule__STXorExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14029:1: ( ( ruleXorOperator ) )
            // InternalSTAlgorithmParser.g:14030:2: ( ruleXorOperator )
            {
            // InternalSTAlgorithmParser.g:14030:2: ( ruleXorOperator )
            // InternalSTAlgorithmParser.g:14031:3: ruleXorOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXorOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STXorExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:14040:1: rule__STXorExpression__RightAssignment_1_1 : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14044:1: ( ( ruleSTAndExpression ) )
            // InternalSTAlgorithmParser.g:14045:2: ( ruleSTAndExpression )
            {
            // InternalSTAlgorithmParser.g:14045:2: ( ruleSTAndExpression )
            // InternalSTAlgorithmParser.g:14046:3: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAndExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:14055:1: rule__STAndExpression__OpAssignment_1_0_1 : ( ruleAndOperator ) ;
    public final void rule__STAndExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14059:1: ( ( ruleAndOperator ) )
            // InternalSTAlgorithmParser.g:14060:2: ( ruleAndOperator )
            {
            // InternalSTAlgorithmParser.g:14060:2: ( ruleAndOperator )
            // InternalSTAlgorithmParser.g:14061:3: ruleAndOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAndOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAndExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:14070:1: rule__STAndExpression__RightAssignment_1_1 : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14074:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTAlgorithmParser.g:14075:2: ( ruleSTEqualityExpression )
            {
            // InternalSTAlgorithmParser.g:14075:2: ( ruleSTEqualityExpression )
            // InternalSTAlgorithmParser.g:14076:3: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STEqualityExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:14085:1: rule__STEqualityExpression__OpAssignment_1_0_1 : ( ruleEqualityOperator ) ;
    public final void rule__STEqualityExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14089:1: ( ( ruleEqualityOperator ) )
            // InternalSTAlgorithmParser.g:14090:2: ( ruleEqualityOperator )
            {
            // InternalSTAlgorithmParser.g:14090:2: ( ruleEqualityOperator )
            // InternalSTAlgorithmParser.g:14091:3: ruleEqualityOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STEqualityExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:14100:1: rule__STEqualityExpression__RightAssignment_1_1 : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14104:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTAlgorithmParser.g:14105:2: ( ruleSTComparisonExpression )
            {
            // InternalSTAlgorithmParser.g:14105:2: ( ruleSTComparisonExpression )
            // InternalSTAlgorithmParser.g:14106:3: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STComparisonExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:14115:1: rule__STComparisonExpression__OpAssignment_1_0_1 : ( ruleCompareOperator ) ;
    public final void rule__STComparisonExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14119:1: ( ( ruleCompareOperator ) )
            // InternalSTAlgorithmParser.g:14120:2: ( ruleCompareOperator )
            {
            // InternalSTAlgorithmParser.g:14120:2: ( ruleCompareOperator )
            // InternalSTAlgorithmParser.g:14121:3: ruleCompareOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STComparisonExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:14130:1: rule__STComparisonExpression__RightAssignment_1_1 : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14134:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTAlgorithmParser.g:14135:2: ( ruleSTAddSubExpression )
            {
            // InternalSTAlgorithmParser.g:14135:2: ( ruleSTAddSubExpression )
            // InternalSTAlgorithmParser.g:14136:3: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAddSubExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:14145:1: rule__STAddSubExpression__OpAssignment_1_0_1 : ( ruleAddSubOperator ) ;
    public final void rule__STAddSubExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14149:1: ( ( ruleAddSubOperator ) )
            // InternalSTAlgorithmParser.g:14150:2: ( ruleAddSubOperator )
            {
            // InternalSTAlgorithmParser.g:14150:2: ( ruleAddSubOperator )
            // InternalSTAlgorithmParser.g:14151:3: ruleAddSubOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAddSubOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAddSubExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:14160:1: rule__STAddSubExpression__RightAssignment_1_1 : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14164:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTAlgorithmParser.g:14165:2: ( ruleSTMulDivModExpression )
            {
            // InternalSTAlgorithmParser.g:14165:2: ( ruleSTMulDivModExpression )
            // InternalSTAlgorithmParser.g:14166:3: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STMulDivModExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:14175:1: rule__STMulDivModExpression__OpAssignment_1_0_1 : ( ruleMulDivModOperator ) ;
    public final void rule__STMulDivModExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14179:1: ( ( ruleMulDivModOperator ) )
            // InternalSTAlgorithmParser.g:14180:2: ( ruleMulDivModOperator )
            {
            // InternalSTAlgorithmParser.g:14180:2: ( ruleMulDivModOperator )
            // InternalSTAlgorithmParser.g:14181:3: ruleMulDivModOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulDivModOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STMulDivModExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:14190:1: rule__STMulDivModExpression__RightAssignment_1_1 : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14194:1: ( ( ruleSTPowerExpression ) )
            // InternalSTAlgorithmParser.g:14195:2: ( ruleSTPowerExpression )
            {
            // InternalSTAlgorithmParser.g:14195:2: ( ruleSTPowerExpression )
            // InternalSTAlgorithmParser.g:14196:3: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STPowerExpression__OpAssignment_1_0_1"
    // InternalSTAlgorithmParser.g:14205:1: rule__STPowerExpression__OpAssignment_1_0_1 : ( rulePowerOperator ) ;
    public final void rule__STPowerExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14209:1: ( ( rulePowerOperator ) )
            // InternalSTAlgorithmParser.g:14210:2: ( rulePowerOperator )
            {
            // InternalSTAlgorithmParser.g:14210:2: ( rulePowerOperator )
            // InternalSTAlgorithmParser.g:14211:3: rulePowerOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePowerOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STPowerExpression__RightAssignment_1_1"
    // InternalSTAlgorithmParser.g:14220:1: rule__STPowerExpression__RightAssignment_1_1 : ( ruleSTUnaryExpression ) ;
    public final void rule__STPowerExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14224:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTAlgorithmParser.g:14225:2: ( ruleSTUnaryExpression )
            {
            // InternalSTAlgorithmParser.g:14225:2: ( ruleSTUnaryExpression )
            // InternalSTAlgorithmParser.g:14226:3: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightSTUnaryExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightSTUnaryExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STUnaryExpression__OpAssignment_1_1"
    // InternalSTAlgorithmParser.g:14235:1: rule__STUnaryExpression__OpAssignment_1_1 : ( ruleUnaryOperator ) ;
    public final void rule__STUnaryExpression__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14239:1: ( ( ruleUnaryOperator ) )
            // InternalSTAlgorithmParser.g:14240:2: ( ruleUnaryOperator )
            {
            // InternalSTAlgorithmParser.g:14240:2: ( ruleUnaryOperator )
            // InternalSTAlgorithmParser.g:14241:3: ruleUnaryOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__OpAssignment_1_1"


    // $ANTLR start "rule__STUnaryExpression__ExpressionAssignment_1_2"
    // InternalSTAlgorithmParser.g:14250:1: rule__STUnaryExpression__ExpressionAssignment_1_2 : ( ruleSTUnaryExpression ) ;
    public final void rule__STUnaryExpression__ExpressionAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14254:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTAlgorithmParser.g:14255:2: ( ruleSTUnaryExpression )
            {
            // InternalSTAlgorithmParser.g:14255:2: ( ruleSTUnaryExpression )
            // InternalSTAlgorithmParser.g:14256:3: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getExpressionSTUnaryExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getExpressionSTUnaryExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__ExpressionAssignment_1_2"


    // $ANTLR start "rule__STAccessExpression__MemberAssignment_1_0_2"
    // InternalSTAlgorithmParser.g:14265:1: rule__STAccessExpression__MemberAssignment_1_0_2 : ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) ) ;
    public final void rule__STAccessExpression__MemberAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14269:1: ( ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) ) )
            // InternalSTAlgorithmParser.g:14270:2: ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) )
            {
            // InternalSTAlgorithmParser.g:14270:2: ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) )
            // InternalSTAlgorithmParser.g:14271:3: ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getMemberAlternatives_1_0_2_0()); 
            }
            // InternalSTAlgorithmParser.g:14272:3: ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 )
            // InternalSTAlgorithmParser.g:14272:4: rule__STAccessExpression__MemberAlternatives_1_0_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__MemberAlternatives_1_0_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getMemberAlternatives_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__MemberAssignment_1_0_2"


    // $ANTLR start "rule__STAccessExpression__IndexAssignment_1_1_2"
    // InternalSTAlgorithmParser.g:14280:1: rule__STAccessExpression__IndexAssignment_1_1_2 : ( ruleSTExpression ) ;
    public final void rule__STAccessExpression__IndexAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14284:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:14285:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:14285:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:14286:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__IndexAssignment_1_1_2"


    // $ANTLR start "rule__STAccessExpression__IndexAssignment_1_1_3_1"
    // InternalSTAlgorithmParser.g:14295:1: rule__STAccessExpression__IndexAssignment_1_1_3_1 : ( ruleSTExpression ) ;
    public final void rule__STAccessExpression__IndexAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14299:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:14300:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:14300:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:14301:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__IndexAssignment_1_1_3_1"


    // $ANTLR start "rule__STFeatureExpression__FeatureAssignment_1"
    // InternalSTAlgorithmParser.g:14310:1: rule__STFeatureExpression__FeatureAssignment_1 : ( ( ruleSTFeatureName ) ) ;
    public final void rule__STFeatureExpression__FeatureAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14314:1: ( ( ( ruleSTFeatureName ) ) )
            // InternalSTAlgorithmParser.g:14315:2: ( ( ruleSTFeatureName ) )
            {
            // InternalSTAlgorithmParser.g:14315:2: ( ( ruleSTFeatureName ) )
            // InternalSTAlgorithmParser.g:14316:3: ( ruleSTFeatureName )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementCrossReference_1_0()); 
            }
            // InternalSTAlgorithmParser.g:14317:3: ( ruleSTFeatureName )
            // InternalSTAlgorithmParser.g:14318:4: ruleSTFeatureName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementSTFeatureNameParserRuleCall_1_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTFeatureName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementSTFeatureNameParserRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__FeatureAssignment_1"


    // $ANTLR start "rule__STFeatureExpression__CallAssignment_2_0"
    // InternalSTAlgorithmParser.g:14329:1: rule__STFeatureExpression__CallAssignment_2_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STFeatureExpression__CallAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14333:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTAlgorithmParser.g:14334:2: ( ( LeftParenthesis ) )
            {
            // InternalSTAlgorithmParser.g:14334:2: ( ( LeftParenthesis ) )
            // InternalSTAlgorithmParser.g:14335:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }
            // InternalSTAlgorithmParser.g:14336:3: ( LeftParenthesis )
            // InternalSTAlgorithmParser.g:14337:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__CallAssignment_2_0"


    // $ANTLR start "rule__STFeatureExpression__ParametersAssignment_2_1_0"
    // InternalSTAlgorithmParser.g:14348:1: rule__STFeatureExpression__ParametersAssignment_2_1_0 : ( ruleSTCallArgument ) ;
    public final void rule__STFeatureExpression__ParametersAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14352:1: ( ( ruleSTCallArgument ) )
            // InternalSTAlgorithmParser.g:14353:2: ( ruleSTCallArgument )
            {
            // InternalSTAlgorithmParser.g:14353:2: ( ruleSTCallArgument )
            // InternalSTAlgorithmParser.g:14354:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__ParametersAssignment_2_1_0"


    // $ANTLR start "rule__STFeatureExpression__ParametersAssignment_2_1_1_1"
    // InternalSTAlgorithmParser.g:14363:1: rule__STFeatureExpression__ParametersAssignment_2_1_1_1 : ( ruleSTCallArgument ) ;
    public final void rule__STFeatureExpression__ParametersAssignment_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14367:1: ( ( ruleSTCallArgument ) )
            // InternalSTAlgorithmParser.g:14368:2: ( ruleSTCallArgument )
            {
            // InternalSTAlgorithmParser.g:14368:2: ( ruleSTCallArgument )
            // InternalSTAlgorithmParser.g:14369:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__ParametersAssignment_2_1_1_1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__FeatureAssignment_1"
    // InternalSTAlgorithmParser.g:14378:1: rule__STBuiltinFeatureExpression__FeatureAssignment_1 : ( ruleSTBuiltinFeature ) ;
    public final void rule__STBuiltinFeatureExpression__FeatureAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14382:1: ( ( ruleSTBuiltinFeature ) )
            // InternalSTAlgorithmParser.g:14383:2: ( ruleSTBuiltinFeature )
            {
            // InternalSTAlgorithmParser.g:14383:2: ( ruleSTBuiltinFeature )
            // InternalSTAlgorithmParser.g:14384:3: ruleSTBuiltinFeature
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getFeatureSTBuiltinFeatureEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTBuiltinFeature();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getFeatureSTBuiltinFeatureEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__FeatureAssignment_1"


    // $ANTLR start "rule__STBuiltinFeatureExpression__CallAssignment_2_0"
    // InternalSTAlgorithmParser.g:14393:1: rule__STBuiltinFeatureExpression__CallAssignment_2_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STBuiltinFeatureExpression__CallAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14397:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTAlgorithmParser.g:14398:2: ( ( LeftParenthesis ) )
            {
            // InternalSTAlgorithmParser.g:14398:2: ( ( LeftParenthesis ) )
            // InternalSTAlgorithmParser.g:14399:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }
            // InternalSTAlgorithmParser.g:14400:3: ( LeftParenthesis )
            // InternalSTAlgorithmParser.g:14401:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getCallLeftParenthesisKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__CallAssignment_2_0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0"
    // InternalSTAlgorithmParser.g:14412:1: rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0 : ( ruleSTCallArgument ) ;
    public final void rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14416:1: ( ( ruleSTCallArgument ) )
            // InternalSTAlgorithmParser.g:14417:2: ( ruleSTCallArgument )
            {
            // InternalSTAlgorithmParser.g:14417:2: ( ruleSTCallArgument )
            // InternalSTAlgorithmParser.g:14418:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_0"


    // $ANTLR start "rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1"
    // InternalSTAlgorithmParser.g:14427:1: rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1 : ( ruleSTCallArgument ) ;
    public final void rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14431:1: ( ( ruleSTCallArgument ) )
            // InternalSTAlgorithmParser.g:14432:2: ( ruleSTCallArgument )
            {
            // InternalSTAlgorithmParser.g:14432:2: ( ruleSTCallArgument )
            // InternalSTAlgorithmParser.g:14433:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBuiltinFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBuiltinFeatureExpression__ParametersAssignment_2_1_1_1"


    // $ANTLR start "rule__STMultibitPartialExpression__SpecifierAssignment_1"
    // InternalSTAlgorithmParser.g:14442:1: rule__STMultibitPartialExpression__SpecifierAssignment_1 : ( ruleSTMultiBitAccessSpecifier ) ;
    public final void rule__STMultibitPartialExpression__SpecifierAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14446:1: ( ( ruleSTMultiBitAccessSpecifier ) )
            // InternalSTAlgorithmParser.g:14447:2: ( ruleSTMultiBitAccessSpecifier )
            {
            // InternalSTAlgorithmParser.g:14447:2: ( ruleSTMultiBitAccessSpecifier )
            // InternalSTAlgorithmParser.g:14448:3: ruleSTMultiBitAccessSpecifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierSTMultiBitAccessSpecifierEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMultiBitAccessSpecifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierSTMultiBitAccessSpecifierEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__SpecifierAssignment_1"


    // $ANTLR start "rule__STMultibitPartialExpression__IndexAssignment_2_0"
    // InternalSTAlgorithmParser.g:14457:1: rule__STMultibitPartialExpression__IndexAssignment_2_0 : ( RULE_INT ) ;
    public final void rule__STMultibitPartialExpression__IndexAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14461:1: ( ( RULE_INT ) )
            // InternalSTAlgorithmParser.g:14462:2: ( RULE_INT )
            {
            // InternalSTAlgorithmParser.g:14462:2: ( RULE_INT )
            // InternalSTAlgorithmParser.g:14463:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexINTTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexINTTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__IndexAssignment_2_0"


    // $ANTLR start "rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1"
    // InternalSTAlgorithmParser.g:14472:1: rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1 : ( ruleSTExpression ) ;
    public final void rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14476:1: ( ( ruleSTExpression ) )
            // InternalSTAlgorithmParser.g:14477:2: ( ruleSTExpression )
            {
            // InternalSTAlgorithmParser.g:14477:2: ( ruleSTExpression )
            // InternalSTAlgorithmParser.g:14478:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionSTExpressionParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getExpressionSTExpressionParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__ExpressionAssignment_2_1_1"


    // $ANTLR start "rule__STNumericLiteral__TypeAssignment_0_0"
    // InternalSTAlgorithmParser.g:14487:1: rule__STNumericLiteral__TypeAssignment_0_0 : ( ( ruleSTNumericLiteralType ) ) ;
    public final void rule__STNumericLiteral__TypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14491:1: ( ( ( ruleSTNumericLiteralType ) ) )
            // InternalSTAlgorithmParser.g:14492:2: ( ( ruleSTNumericLiteralType ) )
            {
            // InternalSTAlgorithmParser.g:14492:2: ( ( ruleSTNumericLiteralType ) )
            // InternalSTAlgorithmParser.g:14493:3: ( ruleSTNumericLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }
            // InternalSTAlgorithmParser.g:14494:3: ( ruleSTNumericLiteralType )
            // InternalSTAlgorithmParser.g:14495:4: ruleSTNumericLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeSTNumericLiteralTypeParserRuleCall_0_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeSTNumericLiteralTypeParserRuleCall_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__TypeAssignment_0_0"


    // $ANTLR start "rule__STNumericLiteral__ValueAssignment_1"
    // InternalSTAlgorithmParser.g:14506:1: rule__STNumericLiteral__ValueAssignment_1 : ( ruleNumeric ) ;
    public final void rule__STNumericLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14510:1: ( ( ruleNumeric ) )
            // InternalSTAlgorithmParser.g:14511:2: ( ruleNumeric )
            {
            // InternalSTAlgorithmParser.g:14511:2: ( ruleNumeric )
            // InternalSTAlgorithmParser.g:14512:3: ruleNumeric
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueNumericParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNumeric();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueNumericParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__ValueAssignment_1"


    // $ANTLR start "rule__STDateLiteral__TypeAssignment_0"
    // InternalSTAlgorithmParser.g:14521:1: rule__STDateLiteral__TypeAssignment_0 : ( ( ruleSTDateLiteralType ) ) ;
    public final void rule__STDateLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14525:1: ( ( ( ruleSTDateLiteralType ) ) )
            // InternalSTAlgorithmParser.g:14526:2: ( ( ruleSTDateLiteralType ) )
            {
            // InternalSTAlgorithmParser.g:14526:2: ( ( ruleSTDateLiteralType ) )
            // InternalSTAlgorithmParser.g:14527:3: ( ruleSTDateLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTAlgorithmParser.g:14528:3: ( ruleSTDateLiteralType )
            // InternalSTAlgorithmParser.g:14529:4: ruleSTDateLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeSTDateLiteralTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTDateLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeSTDateLiteralTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STDateLiteral__ValueAssignment_2"
    // InternalSTAlgorithmParser.g:14540:1: rule__STDateLiteral__ValueAssignment_2 : ( ruleDate ) ;
    public final void rule__STDateLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14544:1: ( ( ruleDate ) )
            // InternalSTAlgorithmParser.g:14545:2: ( ruleDate )
            {
            // InternalSTAlgorithmParser.g:14545:2: ( ruleDate )
            // InternalSTAlgorithmParser.g:14546:3: ruleDate
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getValueDateParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getValueDateParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STTimeLiteral__TypeAssignment_0"
    // InternalSTAlgorithmParser.g:14555:1: rule__STTimeLiteral__TypeAssignment_0 : ( ( ruleSTTimeLiteralType ) ) ;
    public final void rule__STTimeLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14559:1: ( ( ( ruleSTTimeLiteralType ) ) )
            // InternalSTAlgorithmParser.g:14560:2: ( ( ruleSTTimeLiteralType ) )
            {
            // InternalSTAlgorithmParser.g:14560:2: ( ( ruleSTTimeLiteralType ) )
            // InternalSTAlgorithmParser.g:14561:3: ( ruleSTTimeLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTAlgorithmParser.g:14562:3: ( ruleSTTimeLiteralType )
            // InternalSTAlgorithmParser.g:14563:4: ruleSTTimeLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeSTTimeLiteralTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeSTTimeLiteralTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STTimeLiteral__ValueAssignment_2"
    // InternalSTAlgorithmParser.g:14574:1: rule__STTimeLiteral__ValueAssignment_2 : ( ruleTime ) ;
    public final void rule__STTimeLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14578:1: ( ( ruleTime ) )
            // InternalSTAlgorithmParser.g:14579:2: ( ruleTime )
            {
            // InternalSTAlgorithmParser.g:14579:2: ( ruleTime )
            // InternalSTAlgorithmParser.g:14580:3: ruleTime
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getValueTimeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getValueTimeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STTimeOfDayLiteral__TypeAssignment_0"
    // InternalSTAlgorithmParser.g:14589:1: rule__STTimeOfDayLiteral__TypeAssignment_0 : ( ( ruleSTTimeOfDayType ) ) ;
    public final void rule__STTimeOfDayLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14593:1: ( ( ( ruleSTTimeOfDayType ) ) )
            // InternalSTAlgorithmParser.g:14594:2: ( ( ruleSTTimeOfDayType ) )
            {
            // InternalSTAlgorithmParser.g:14594:2: ( ( ruleSTTimeOfDayType ) )
            // InternalSTAlgorithmParser.g:14595:3: ( ruleSTTimeOfDayType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTAlgorithmParser.g:14596:3: ( ruleSTTimeOfDayType )
            // InternalSTAlgorithmParser.g:14597:4: ruleSTTimeOfDayType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeSTTimeOfDayTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTTimeOfDayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeSTTimeOfDayTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STTimeOfDayLiteral__ValueAssignment_2"
    // InternalSTAlgorithmParser.g:14608:1: rule__STTimeOfDayLiteral__ValueAssignment_2 : ( ruleTimeOfDay ) ;
    public final void rule__STTimeOfDayLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14612:1: ( ( ruleTimeOfDay ) )
            // InternalSTAlgorithmParser.g:14613:2: ( ruleTimeOfDay )
            {
            // InternalSTAlgorithmParser.g:14613:2: ( ruleTimeOfDay )
            // InternalSTAlgorithmParser.g:14614:3: ruleTimeOfDay
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getValueTimeOfDayParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getValueTimeOfDayParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STDateAndTimeLiteral__TypeAssignment_0"
    // InternalSTAlgorithmParser.g:14623:1: rule__STDateAndTimeLiteral__TypeAssignment_0 : ( ( ruleSTDateAndTimeType ) ) ;
    public final void rule__STDateAndTimeLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14627:1: ( ( ( ruleSTDateAndTimeType ) ) )
            // InternalSTAlgorithmParser.g:14628:2: ( ( ruleSTDateAndTimeType ) )
            {
            // InternalSTAlgorithmParser.g:14628:2: ( ( ruleSTDateAndTimeType ) )
            // InternalSTAlgorithmParser.g:14629:3: ( ruleSTDateAndTimeType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTAlgorithmParser.g:14630:3: ( ruleSTDateAndTimeType )
            // InternalSTAlgorithmParser.g:14631:4: ruleSTDateAndTimeType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeSTDateAndTimeTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTDateAndTimeType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeSTDateAndTimeTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STDateAndTimeLiteral__ValueAssignment_2"
    // InternalSTAlgorithmParser.g:14642:1: rule__STDateAndTimeLiteral__ValueAssignment_2 : ( ruleDateAndTime ) ;
    public final void rule__STDateAndTimeLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14646:1: ( ( ruleDateAndTime ) )
            // InternalSTAlgorithmParser.g:14647:2: ( ruleDateAndTime )
            {
            // InternalSTAlgorithmParser.g:14647:2: ( ruleDateAndTime )
            // InternalSTAlgorithmParser.g:14648:3: ruleDateAndTime
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getValueDateAndTimeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDateAndTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getValueDateAndTimeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STStringLiteral__TypeAssignment_0_0"
    // InternalSTAlgorithmParser.g:14657:1: rule__STStringLiteral__TypeAssignment_0_0 : ( ( ruleSTAnyCharsType ) ) ;
    public final void rule__STStringLiteral__TypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14661:1: ( ( ( ruleSTAnyCharsType ) ) )
            // InternalSTAlgorithmParser.g:14662:2: ( ( ruleSTAnyCharsType ) )
            {
            // InternalSTAlgorithmParser.g:14662:2: ( ( ruleSTAnyCharsType ) )
            // InternalSTAlgorithmParser.g:14663:3: ( ruleSTAnyCharsType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }
            // InternalSTAlgorithmParser.g:14664:3: ( ruleSTAnyCharsType )
            // InternalSTAlgorithmParser.g:14665:4: ruleSTAnyCharsType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeSTAnyCharsTypeParserRuleCall_0_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyCharsType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeSTAnyCharsTypeParserRuleCall_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__TypeAssignment_0_0"


    // $ANTLR start "rule__STStringLiteral__ValueAssignment_1"
    // InternalSTAlgorithmParser.g:14676:1: rule__STStringLiteral__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__STStringLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTAlgorithmParser.g:14680:1: ( ( RULE_STRING ) )
            // InternalSTAlgorithmParser.g:14681:2: ( RULE_STRING )
            {
            // InternalSTAlgorithmParser.g:14681:2: ( RULE_STRING )
            // InternalSTAlgorithmParser.g:14682:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__ValueAssignment_1"

    // $ANTLR start synpred15_InternalSTAlgorithmParser
    public final void synpred15_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:2556:2: ( ( ( ruleSTAssignmentStatement ) ) )
        // InternalSTAlgorithmParser.g:2556:2: ( ( ruleSTAssignmentStatement ) )
        {
        // InternalSTAlgorithmParser.g:2556:2: ( ( ruleSTAssignmentStatement ) )
        // InternalSTAlgorithmParser.g:2557:3: ( ruleSTAssignmentStatement )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
        }
        // InternalSTAlgorithmParser.g:2558:3: ( ruleSTAssignmentStatement )
        // InternalSTAlgorithmParser.g:2558:4: ruleSTAssignmentStatement
        {
        pushFollow(FOLLOW_2);
        ruleSTAssignmentStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred15_InternalSTAlgorithmParser

    // $ANTLR start synpred16_InternalSTAlgorithmParser
    public final void synpred16_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:2562:2: ( ( ruleSTCallStatement ) )
        // InternalSTAlgorithmParser.g:2562:2: ( ruleSTCallStatement )
        {
        // InternalSTAlgorithmParser.g:2562:2: ( ruleSTCallStatement )
        // InternalSTAlgorithmParser.g:2563:3: ruleSTCallStatement
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTStatementAccess().getSTCallStatementParserRuleCall_0_0_6()); 
        }
        pushFollow(FOLLOW_2);
        ruleSTCallStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalSTAlgorithmParser

    // $ANTLR start synpred21_InternalSTAlgorithmParser
    public final void synpred21_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:2622:2: ( ( ( ruleSTAccessExpression ) ) )
        // InternalSTAlgorithmParser.g:2622:2: ( ( ruleSTAccessExpression ) )
        {
        // InternalSTAlgorithmParser.g:2622:2: ( ( ruleSTAccessExpression ) )
        // InternalSTAlgorithmParser.g:2623:3: ( ruleSTAccessExpression )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
        }
        // InternalSTAlgorithmParser.g:2624:3: ( ruleSTAccessExpression )
        // InternalSTAlgorithmParser.g:2624:4: ruleSTAccessExpression
        {
        pushFollow(FOLLOW_2);
        ruleSTAccessExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred21_InternalSTAlgorithmParser

    // $ANTLR start synpred136_InternalSTAlgorithmParser
    public final void synpred136_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:7877:3: ( rule__STCaseCases__StatementsAssignment_3 )
        // InternalSTAlgorithmParser.g:7877:3: rule__STCaseCases__StatementsAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__STCaseCases__StatementsAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred136_InternalSTAlgorithmParser

    // $ANTLR start synpred153_InternalSTAlgorithmParser
    public final void synpred153_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:10631:3: ( rule__STFeatureExpression__Group_2__0 )
        // InternalSTAlgorithmParser.g:10631:3: rule__STFeatureExpression__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__STFeatureExpression__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred153_InternalSTAlgorithmParser

    // $ANTLR start synpred156_InternalSTAlgorithmParser
    public final void synpred156_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:10901:3: ( rule__STBuiltinFeatureExpression__Group_2__0 )
        // InternalSTAlgorithmParser.g:10901:3: rule__STBuiltinFeatureExpression__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__STBuiltinFeatureExpression__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred156_InternalSTAlgorithmParser

    // $ANTLR start synpred163_InternalSTAlgorithmParser
    public final void synpred163_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:11873:3: ( rule__Number__Group_2__0 )
        // InternalSTAlgorithmParser.g:11873:3: rule__Number__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__Number__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred163_InternalSTAlgorithmParser

    // $ANTLR start synpred165_InternalSTAlgorithmParser
    public final void synpred165_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:12440:3: ( rule__DateAndTime__Group_11__0 )
        // InternalSTAlgorithmParser.g:12440:3: rule__DateAndTime__Group_11__0
        {
        pushFollow(FOLLOW_2);
        rule__DateAndTime__Group_11__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred165_InternalSTAlgorithmParser

    // $ANTLR start synpred166_InternalSTAlgorithmParser
    public final void synpred166_InternalSTAlgorithmParser_fragment() throws RecognitionException {   
        // InternalSTAlgorithmParser.g:12656:3: ( rule__TimeOfDay__Group_5__0 )
        // InternalSTAlgorithmParser.g:12656:3: rule__TimeOfDay__Group_5__0
        {
        pushFollow(FOLLOW_2);
        rule__TimeOfDay__Group_5__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred166_InternalSTAlgorithmParser

    // Delegated rules

    public final boolean synpred15_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_InternalSTAlgorithmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_InternalSTAlgorithmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA5 dfa5 = new DFA5(this);
    protected DFA7 dfa7 = new DFA7(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA99 dfa99 = new DFA99(this);
    static final String dfa_1s = "\16\uffff";
    static final String dfa_2s = "\2\10\2\uffff\11\164\1\uffff";
    static final String dfa_3s = "\2\u00b6\2\uffff\11\u00a6\1\uffff";
    static final String dfa_4s = "\2\uffff\1\1\1\2\11\uffff\1\3";
    static final String dfa_5s = "\16\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\1\uffff\1\2\6\uffff\1\2\2\uffff\1\2\51\uffff\1\2\11\uffff\1\2\3\uffff\1\2\1\uffff\1\2\1\uffff\4\2\1\uffff\2\2\2\uffff\2\2\1\uffff\2\2\1\uffff\3\2\3\uffff\2\2\1\uffff\2\2\3\uffff\3\2\1\uffff\1\2\1\uffff\2\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\17\uffff\1\2\1\uffff\2\2\2\uffff\1\2\3\uffff\1\1\2\uffff\1\2\1\uffff\1\2\7\uffff\2\2\1\3\2\uffff\3\2\11\uffff\2\2",
            "\1\2\1\uffff\1\2\6\uffff\1\2\2\uffff\1\2\51\uffff\1\2\11\uffff\1\2\3\uffff\1\2\1\uffff\1\2\1\uffff\4\2\1\uffff\2\2\2\uffff\2\2\1\uffff\2\2\1\uffff\3\2\3\uffff\2\2\1\uffff\2\2\3\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\6\1\uffff\2\2\1\11\1\2\1\uffff\1\2\1\uffff\1\10\17\uffff\1\13\1\uffff\1\14\1\5\2\uffff\1\7\3\uffff\1\2\2\uffff\1\2\1\uffff\1\2\7\uffff\1\12\1\2\3\uffff\3\2\11\uffff\1\4\1\2",
            "",
            "",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\2\uffff\5\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\1\uffff\6\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\2\uffff\5\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\2\uffff\5\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\2\uffff\5\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\2\uffff\5\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\1\uffff\6\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\1\uffff\6\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            "\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\15\2\2\1\uffff\1\2\11\uffff\1\2\1\uffff\6\2\1\uffff\3\2\2\uffff\3\2\2\uffff\1\2",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2473:1: rule__STInitializerExpression__Alternatives : ( ( ruleSTElementaryInitializerExpression ) | ( ruleSTArrayInitializerExpression ) | ( ruleSTStructInitializerExpression ) );";
        }
    }
    static final String dfa_7s = "\75\uffff";
    static final String dfa_8s = "\1\10\5\uffff\62\0\5\uffff";
    static final String dfa_9s = "\1\u00b6\5\uffff\62\0\5\uffff";
    static final String dfa_10s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\62\uffff\1\10\1\11\1\12\1\6\1\7";
    static final String dfa_11s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\5\uffff}>";
    static final String[] dfa_12s = {
            "\1\61\1\uffff\1\60\6\uffff\1\55\2\uffff\1\54\27\uffff\1\71\21\uffff\1\64\5\uffff\1\5\1\uffff\1\70\1\uffff\1\63\3\uffff\1\24\1\uffff\1\41\1\uffff\1\50\1\37\1\52\1\25\1\uffff\1\34\1\35\2\uffff\1\32\1\66\1\4\1\21\1\22\1\2\1\65\1\47\1\30\1\uffff\1\72\1\uffff\1\31\1\57\1\uffff\1\36\1\26\3\uffff\1\20\1\51\1\40\1\uffff\1\33\1\uffff\1\23\1\11\1\3\1\27\1\62\1\14\2\uffff\1\56\1\uffff\1\13\17\uffff\1\16\1\1\1\17\1\10\2\uffff\1\12\3\uffff\1\6\2\uffff\1\42\1\uffff\1\43\7\uffff\1\15\1\53\3\uffff\1\46\1\44\1\45\11\uffff\1\7\1\67",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2521:1: rule__STStatement__Alternatives_0_0 : ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ( ruleSTAssignmentStatement ) ) | ( ruleSTCallStatement ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) | ( ( rule__STStatement__Group_0_0_9__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_6 = input.LA(1);

                         
                        int index7_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_7 = input.LA(1);

                         
                        int index7_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA7_8 = input.LA(1);

                         
                        int index7_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA7_9 = input.LA(1);

                         
                        int index7_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA7_10 = input.LA(1);

                         
                        int index7_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA7_11 = input.LA(1);

                         
                        int index7_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA7_12 = input.LA(1);

                         
                        int index7_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA7_13 = input.LA(1);

                         
                        int index7_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA7_14 = input.LA(1);

                         
                        int index7_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA7_15 = input.LA(1);

                         
                        int index7_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA7_16 = input.LA(1);

                         
                        int index7_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_16);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA7_17 = input.LA(1);

                         
                        int index7_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_17);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA7_18 = input.LA(1);

                         
                        int index7_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_18);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA7_19 = input.LA(1);

                         
                        int index7_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_19);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA7_20 = input.LA(1);

                         
                        int index7_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_20);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA7_21 = input.LA(1);

                         
                        int index7_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_21);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA7_22 = input.LA(1);

                         
                        int index7_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_22);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA7_23 = input.LA(1);

                         
                        int index7_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_23);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA7_24 = input.LA(1);

                         
                        int index7_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_24);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA7_25 = input.LA(1);

                         
                        int index7_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_25);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA7_26 = input.LA(1);

                         
                        int index7_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_26);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA7_27 = input.LA(1);

                         
                        int index7_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_27);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA7_28 = input.LA(1);

                         
                        int index7_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_28);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA7_29 = input.LA(1);

                         
                        int index7_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_29);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA7_30 = input.LA(1);

                         
                        int index7_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_30);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA7_31 = input.LA(1);

                         
                        int index7_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_31);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA7_32 = input.LA(1);

                         
                        int index7_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_32);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA7_33 = input.LA(1);

                         
                        int index7_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_33);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA7_34 = input.LA(1);

                         
                        int index7_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_34);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA7_35 = input.LA(1);

                         
                        int index7_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_35);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA7_36 = input.LA(1);

                         
                        int index7_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_36);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA7_37 = input.LA(1);

                         
                        int index7_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_37);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA7_38 = input.LA(1);

                         
                        int index7_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_38);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA7_39 = input.LA(1);

                         
                        int index7_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_39);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA7_40 = input.LA(1);

                         
                        int index7_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_40);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA7_41 = input.LA(1);

                         
                        int index7_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_41);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA7_42 = input.LA(1);

                         
                        int index7_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_42);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA7_43 = input.LA(1);

                         
                        int index7_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_43);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA7_44 = input.LA(1);

                         
                        int index7_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_44);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA7_45 = input.LA(1);

                         
                        int index7_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_45);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA7_46 = input.LA(1);

                         
                        int index7_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_46);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA7_47 = input.LA(1);

                         
                        int index7_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_47);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA7_48 = input.LA(1);

                         
                        int index7_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_48);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA7_49 = input.LA(1);

                         
                        int index7_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_49);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA7_50 = input.LA(1);

                         
                        int index7_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_50);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA7_51 = input.LA(1);

                         
                        int index7_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_51);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA7_52 = input.LA(1);

                         
                        int index7_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_52);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA7_53 = input.LA(1);

                         
                        int index7_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_53);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA7_54 = input.LA(1);

                         
                        int index7_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_54);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA7_55 = input.LA(1);

                         
                        int index7_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalSTAlgorithmParser()) ) {s = 59;}

                        else if ( (synpred16_InternalSTAlgorithmParser()) ) {s = 60;}

                         
                        input.seek(index7_55);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\100\uffff";
    static final String dfa_14s = "\1\1\77\uffff";
    static final String dfa_15s = "\1\10\1\uffff\62\0\14\uffff";
    static final String dfa_16s = "\1\u00b6\1\uffff\62\0\14\uffff";
    static final String dfa_17s = "\1\uffff\1\2\65\uffff\1\1\10\uffff";
    static final String dfa_18s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\14\uffff}>";
    static final String[] dfa_19s = {
            "\1\55\1\uffff\1\54\6\uffff\1\51\2\uffff\1\50\27\uffff\1\67\1\1\20\uffff\1\60\5\uffff\1\67\1\uffff\1\67\1\uffff\1\57\3\uffff\1\20\1\uffff\1\35\1\uffff\1\44\1\33\1\46\1\21\1\uffff\1\30\1\31\2\uffff\1\26\1\62\1\67\1\15\1\16\1\67\1\61\1\43\1\24\1\1\1\67\1\uffff\1\25\1\53\1\uffff\1\32\1\22\3\uffff\1\14\1\45\1\34\1\uffff\1\27\1\uffff\1\17\1\5\1\67\1\23\1\56\1\10\1\1\1\uffff\1\52\1\uffff\1\7\17\uffff\1\12\1\67\1\13\1\4\2\uffff\1\6\3\uffff\1\2\2\uffff\1\36\1\uffff\1\37\3\uffff\1\67\3\uffff\1\11\1\47\3\uffff\1\42\1\40\1\41\11\uffff\1\3\1\63",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "()* loopback of 7877:2: ( rule__STCaseCases__StatementsAssignment_3 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA79_2 = input.LA(1);

                         
                        int index79_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA79_3 = input.LA(1);

                         
                        int index79_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA79_4 = input.LA(1);

                         
                        int index79_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA79_5 = input.LA(1);

                         
                        int index79_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA79_6 = input.LA(1);

                         
                        int index79_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA79_7 = input.LA(1);

                         
                        int index79_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA79_8 = input.LA(1);

                         
                        int index79_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA79_9 = input.LA(1);

                         
                        int index79_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA79_10 = input.LA(1);

                         
                        int index79_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA79_11 = input.LA(1);

                         
                        int index79_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA79_12 = input.LA(1);

                         
                        int index79_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA79_13 = input.LA(1);

                         
                        int index79_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA79_14 = input.LA(1);

                         
                        int index79_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA79_15 = input.LA(1);

                         
                        int index79_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA79_16 = input.LA(1);

                         
                        int index79_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA79_17 = input.LA(1);

                         
                        int index79_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA79_18 = input.LA(1);

                         
                        int index79_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA79_19 = input.LA(1);

                         
                        int index79_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA79_20 = input.LA(1);

                         
                        int index79_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA79_21 = input.LA(1);

                         
                        int index79_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA79_22 = input.LA(1);

                         
                        int index79_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA79_23 = input.LA(1);

                         
                        int index79_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA79_24 = input.LA(1);

                         
                        int index79_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA79_25 = input.LA(1);

                         
                        int index79_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA79_26 = input.LA(1);

                         
                        int index79_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA79_27 = input.LA(1);

                         
                        int index79_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA79_28 = input.LA(1);

                         
                        int index79_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA79_29 = input.LA(1);

                         
                        int index79_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA79_30 = input.LA(1);

                         
                        int index79_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA79_31 = input.LA(1);

                         
                        int index79_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA79_32 = input.LA(1);

                         
                        int index79_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA79_33 = input.LA(1);

                         
                        int index79_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA79_34 = input.LA(1);

                         
                        int index79_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA79_35 = input.LA(1);

                         
                        int index79_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA79_36 = input.LA(1);

                         
                        int index79_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA79_37 = input.LA(1);

                         
                        int index79_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA79_38 = input.LA(1);

                         
                        int index79_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA79_39 = input.LA(1);

                         
                        int index79_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA79_40 = input.LA(1);

                         
                        int index79_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA79_41 = input.LA(1);

                         
                        int index79_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA79_42 = input.LA(1);

                         
                        int index79_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA79_43 = input.LA(1);

                         
                        int index79_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA79_44 = input.LA(1);

                         
                        int index79_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA79_45 = input.LA(1);

                         
                        int index79_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_45);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA79_46 = input.LA(1);

                         
                        int index79_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_46);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA79_47 = input.LA(1);

                         
                        int index79_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_47);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA79_48 = input.LA(1);

                         
                        int index79_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_48);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA79_49 = input.LA(1);

                         
                        int index79_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_49);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA79_50 = input.LA(1);

                         
                        int index79_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_50);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA79_51 = input.LA(1);

                         
                        int index79_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTAlgorithmParser()) ) {s = 55;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index79_51);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\43\uffff";
    static final String dfa_21s = "\1\2\42\uffff";
    static final String dfa_22s = "\1\27\1\0\41\uffff";
    static final String dfa_23s = "\1\u00a7\1\0\41\uffff";
    static final String dfa_24s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_25s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_26s = {
            "\1\2\124\uffff\1\2\7\uffff\1\2\3\uffff\1\2\4\uffff\1\2\5\uffff\5\2\1\uffff\1\2\1\uffff\2\2\4\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\1\14\2\2\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "10631:2: ( rule__STFeatureExpression__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_1 = input.LA(1);

                         
                        int index96_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalSTAlgorithmParser()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index96_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "10901:2: ( rule__STBuiltinFeatureExpression__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_1 = input.LA(1);

                         
                        int index99_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalSTAlgorithmParser()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index99_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000400000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000400000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x4040100000120500L,0x29FAE36BFE6F5150L,0x00600E311489E000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x4000100000120502L,0x29FAE36BFE6F5150L,0x00600E311489E000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x4040120300120500L,0x29FAE36BFE6F5150L,0x00600E319489E000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x4000000000120500L,0x08CA4363B66F1100L,0x0020000000002000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0040020300000002L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x4000000000120500L,0x2BDAE363B66F5100L,0x00600E301489A000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x4000000000120500L,0x2BDAE363B66F5100L,0x00600E701489A000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0100080000000000L,0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0040020300000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000080000400L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x4000000000120500L,0x08CA4363B66F1500L,0x0020000000002000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004100000020L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000008008000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000009000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x2110000000000000L,0x002000100009A000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x4000100000120500L,0x29FAE36BFE6F5150L,0x00600E301489E000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x4000100000120500L,0x29FAE36BFE6F5150L,0x00600E311489E000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x4000100000120500L,0x29FAE36FFE6F7151L,0x00600E311489E000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000002L,0x0000000000002000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000200000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x4000000000120502L,0x2BDAE363B66F5100L,0x00600E301489A000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000088000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001800L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x4080100000120500L,0x29FAE36BFE6F5150L,0x00600E311489E000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x4000101000120500L,0x29FAE36BFE6F5150L,0x00600E311489E000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x4000100000120500L,0x29FAE36BFEEF5150L,0x00600E311489E000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000002L,0x0010000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000400000080L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000400000080L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000A00000240L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000A00000240L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000014000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000014000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000042000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L,0x0000000042000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004020000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000004020000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0xE110000000000000L,0x002004100089A007L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x4000000000120500L,0x2BDAE363B66F5100L,0x00600E301589A000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x004A8322326A5000L,0x00000E0014000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000200014000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x4000000000120500L,0x29DAE363B66F5100L,0x00600E301489A000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000C0014000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000C0000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});

}