package org.eclipse.fordiac.ide.structuredtextcore.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.fordiac.ide.structuredtextcore.services.STCoreGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSTCoreParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "LDATE_AND_TIME", "DATE_AND_TIME", "TIME_OF_DAY", "END_REPEAT", "VAR_OUTPUT", "END_WHILE", "VAR_INPUT", "CONSTANT", "CONTINUE", "END_CASE", "VAR_TEMP", "WSTRING", "END_FOR", "END_VAR", "STRING", "DWORD", "END_IF", "LDATE", "LREAL", "LTIME", "LWORD", "REPEAT", "RETURN", "UDINT", "ULINT", "USINT", "WCHAR", "ARRAY", "BOOL", "BYTE", "CHAR", "DATE", "DINT", "ELSIF", "LINT", "LTOD", "REAL", "SINT", "TIME", "UINT", "UNTIL", "WHILE", "WORD", "CASE", "ELSE", "EXIT", "INT", "LDT", "THEN", "TOD", "B", "D_1", "L", "W", "X", "AND", "DT", "FOR", "LD", "LT", "MOD", "NOT", "VAR", "XOR", "AsteriskAsterisk", "FullStopFullStop", "ColonEqualsSign", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "GreaterThanSignEqualsSign", "AT", "BY", "D", "DO", "IF", "OF", "OR", "T", "TO", "NumberSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "LeftSquareBracket", "RightSquareBracket", "RULE_BOOL_VALUES", "RULE_HEX_DIGIT", "RULE_NON_DECIMAL", "RULE_INT", "RULE_TIME", "RULE_EXT_INT", "RULE_ID", "RULE_STRING", "RULE_WSTRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LWORD=24;
    public static final int LessThanSignGreaterThanSign=72;
    public static final int VAR=66;
    public static final int END_IF=20;
    public static final int ULINT=28;
    public static final int END_CASE=13;
    public static final int LessThanSign=95;
    public static final int LeftParenthesis=85;
    public static final int BYTE=33;
    public static final int ELSE=48;
    public static final int RULE_TIME=104;
    public static final int IF=78;
    public static final int LINT=38;
    public static final int GreaterThanSign=97;
    public static final int WORD=46;
    public static final int DATE_AND_TIME=5;
    public static final int RULE_ID=106;
    public static final int TOD=53;
    public static final int DINT=36;
    public static final int UDINT=27;
    public static final int CASE=47;
    public static final int GreaterThanSignEqualsSign=73;
    public static final int AT=74;
    public static final int PlusSign=88;
    public static final int RULE_INT=103;
    public static final int END_FOR=16;
    public static final int RULE_ML_COMMENT=109;
    public static final int THEN=52;
    public static final int XOR=67;
    public static final int LeftSquareBracket=98;
    public static final int EXIT=49;
    public static final int TIME_OF_DAY=6;
    public static final int B=54;
    public static final int LDATE_AND_TIME=4;
    public static final int REPEAT=25;
    public static final int D=76;
    public static final int CHAR=34;
    public static final int L=56;
    public static final int LTIME=23;
    public static final int Comma=89;
    public static final int HyphenMinus=90;
    public static final int T=81;
    public static final int W=57;
    public static final int BY=75;
    public static final int X=58;
    public static final int ELSIF=37;
    public static final int END_REPEAT=7;
    public static final int LessThanSignEqualsSign=71;
    public static final int Solidus=92;
    public static final int VAR_INPUT=10;
    public static final int FullStop=91;
    public static final int VAR_TEMP=14;
    public static final int CONSTANT=11;
    public static final int CONTINUE=12;
    public static final int Semicolon=94;
    public static final int LD=62;
    public static final int VAR_OUTPUT=8;
    public static final int STRING=18;
    public static final int RULE_HEX_DIGIT=101;
    public static final int TO=82;
    public static final int RULE_BOOL_VALUES=100;
    public static final int UINT=43;
    public static final int LTOD=39;
    public static final int ARRAY=31;
    public static final int LT=63;
    public static final int DO=77;
    public static final int WSTRING=15;
    public static final int DT=60;
    public static final int END_VAR=17;
    public static final int FullStopFullStop=69;
    public static final int Ampersand=84;
    public static final int RightSquareBracket=99;
    public static final int USINT=29;
    public static final int DWORD=19;
    public static final int FOR=61;
    public static final int RightParenthesis=86;
    public static final int ColonEqualsSign=70;
    public static final int RULE_WSTRING=108;
    public static final int END_WHILE=9;
    public static final int DATE=35;
    public static final int NOT=65;
    public static final int LDATE=21;
    public static final int AND=59;
    public static final int NumberSign=83;
    public static final int REAL=40;
    public static final int AsteriskAsterisk=68;
    public static final int SINT=41;
    public static final int LREAL=22;
    public static final int WCHAR=30;
    public static final int RULE_STRING=107;
    public static final int INT=50;
    public static final int RULE_SL_COMMENT=110;
    public static final int RETURN=26;
    public static final int EqualsSign=96;
    public static final int OF=79;
    public static final int Colon=93;
    public static final int EOF=-1;
    public static final int LDT=51;
    public static final int Asterisk=87;
    public static final int MOD=64;
    public static final int OR=80;
    public static final int RULE_WS=111;
    public static final int RULE_EXT_INT=105;
    public static final int TIME=42;
    public static final int RULE_ANY_OTHER=112;
    public static final int UNTIL=44;
    public static final int BOOL=32;
    public static final int D_1=55;
    public static final int WHILE=45;
    public static final int RULE_NON_DECIMAL=102;

    // delegates
    // delegators


        public InternalSTCoreParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSTCoreParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSTCoreParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSTCoreParser.g"; }


    	private STCoreGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("NumberSign", "'#'");
    		tokenNameToValue.put("Ampersand", "'&'");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("AsteriskAsterisk", "'**'");
    		tokenNameToValue.put("FullStopFullStop", "'..'");
    		tokenNameToValue.put("ColonEqualsSign", "':='");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AT", "'AT'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("D", "'D#'");
    		tokenNameToValue.put("DO", "'DO'");
    		tokenNameToValue.put("IF", "'IF'");
    		tokenNameToValue.put("OF", "'OF'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("T", "'T#'");
    		tokenNameToValue.put("TO", "'TO'");
    		tokenNameToValue.put("B", "'.%B'");
    		tokenNameToValue.put("D_1", "'.%D'");
    		tokenNameToValue.put("L", "'.%L'");
    		tokenNameToValue.put("W", "'.%W'");
    		tokenNameToValue.put("X", "'.%X'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("DT", "'DT#'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("LD", "'LD#'");
    		tokenNameToValue.put("LT", "'LT#'");
    		tokenNameToValue.put("MOD", "'MOD'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("VAR", "'VAR'");
    		tokenNameToValue.put("XOR", "'XOR'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("EXIT", "'EXIT'");
    		tokenNameToValue.put("INT", "'INT#'");
    		tokenNameToValue.put("LDT", "'LDT#'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TOD", "'TOD#'");
    		tokenNameToValue.put("ARRAY", "'ARRAY'");
    		tokenNameToValue.put("BOOL", "'BOOL#'");
    		tokenNameToValue.put("BYTE", "'BYTE#'");
    		tokenNameToValue.put("CHAR", "'CHAR#'");
    		tokenNameToValue.put("DATE", "'DATE#'");
    		tokenNameToValue.put("DINT", "'DINT#'");
    		tokenNameToValue.put("ELSIF", "'ELSIF'");
    		tokenNameToValue.put("LINT", "'LINT#'");
    		tokenNameToValue.put("LTOD", "'LTOD#'");
    		tokenNameToValue.put("REAL", "'REAL#'");
    		tokenNameToValue.put("SINT", "'SINT#'");
    		tokenNameToValue.put("TIME", "'TIME#'");
    		tokenNameToValue.put("UINT", "'UINT#'");
    		tokenNameToValue.put("UNTIL", "'UNTIL'");
    		tokenNameToValue.put("WHILE", "'WHILE'");
    		tokenNameToValue.put("WORD", "'WORD#'");
    		tokenNameToValue.put("DWORD", "'DWORD#'");
    		tokenNameToValue.put("END_IF", "'END_IF'");
    		tokenNameToValue.put("LDATE", "'LDATE#'");
    		tokenNameToValue.put("LREAL", "'LREAL#'");
    		tokenNameToValue.put("LTIME", "'LTIME#'");
    		tokenNameToValue.put("LWORD", "'LWORD#'");
    		tokenNameToValue.put("REPEAT", "'REPEAT'");
    		tokenNameToValue.put("RETURN", "'RETURN'");
    		tokenNameToValue.put("UDINT", "'UDINT#'");
    		tokenNameToValue.put("ULINT", "'ULINT#'");
    		tokenNameToValue.put("USINT", "'USINT#'");
    		tokenNameToValue.put("WCHAR", "'WCHAR#'");
    		tokenNameToValue.put("END_FOR", "'END_FOR'");
    		tokenNameToValue.put("END_VAR", "'END_VAR'");
    		tokenNameToValue.put("STRING", "'STRING#'");
    		tokenNameToValue.put("CONSTANT", "'CONSTANT'");
    		tokenNameToValue.put("CONTINUE", "'CONTINUE'");
    		tokenNameToValue.put("END_CASE", "'END_CASE'");
    		tokenNameToValue.put("VAR_TEMP", "'VAR_TEMP'");
    		tokenNameToValue.put("WSTRING", "'WSTRING#'");
    		tokenNameToValue.put("END_WHILE", "'END_WHILE'");
    		tokenNameToValue.put("VAR_INPUT", "'VAR_INPUT'");
    		tokenNameToValue.put("END_REPEAT", "'END_REPEAT'");
    		tokenNameToValue.put("VAR_OUTPUT", "'VAR_OUTPUT'");
    		tokenNameToValue.put("TIME_OF_DAY", "'TIME_OF_DAY#'");
    		tokenNameToValue.put("DATE_AND_TIME", "'DATE_AND_TIME#'");
    		tokenNameToValue.put("LDATE_AND_TIME", "'LDATE_AND_TIME#'");
    	}

    	public void setGrammarAccess(STCoreGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleCode"
    // InternalSTCoreParser.g:152:1: entryRuleCode : ruleCode EOF ;
    public final void entryRuleCode() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:153:1: ( ruleCode EOF )
            // InternalSTCoreParser.g:154:1: ruleCode EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCodeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCode();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCodeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCode"


    // $ANTLR start "ruleCode"
    // InternalSTCoreParser.g:161:1: ruleCode : ( ( rule__Code__StatementsAssignment )* ) ;
    public final void ruleCode() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:165:2: ( ( ( rule__Code__StatementsAssignment )* ) )
            // InternalSTCoreParser.g:166:2: ( ( rule__Code__StatementsAssignment )* )
            {
            // InternalSTCoreParser.g:166:2: ( ( rule__Code__StatementsAssignment )* )
            // InternalSTCoreParser.g:167:3: ( rule__Code__StatementsAssignment )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCodeAccess().getStatementsAssignment()); 
            }
            // InternalSTCoreParser.g:168:3: ( rule__Code__StatementsAssignment )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==CONTINUE||(LA1_0>=REPEAT && LA1_0<=RETURN)||LA1_0==WHILE||LA1_0==CASE||LA1_0==EXIT||LA1_0==FOR||LA1_0==IF||LA1_0==Semicolon||LA1_0==RULE_ID) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSTCoreParser.g:168:4: rule__Code__StatementsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Code__StatementsAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCodeAccess().getStatementsAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCode"


    // $ANTLR start "entryRuleVarDeclaration"
    // InternalSTCoreParser.g:177:1: entryRuleVarDeclaration : ruleVarDeclaration EOF ;
    public final void entryRuleVarDeclaration() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:178:1: ( ruleVarDeclaration EOF )
            // InternalSTCoreParser.g:179:1: ruleVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclaration"


    // $ANTLR start "ruleVarDeclaration"
    // InternalSTCoreParser.g:186:1: ruleVarDeclaration : ( ( rule__VarDeclaration__Group__0 ) ) ;
    public final void ruleVarDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:190:2: ( ( ( rule__VarDeclaration__Group__0 ) ) )
            // InternalSTCoreParser.g:191:2: ( ( rule__VarDeclaration__Group__0 ) )
            {
            // InternalSTCoreParser.g:191:2: ( ( rule__VarDeclaration__Group__0 ) )
            // InternalSTCoreParser.g:192:3: ( rule__VarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:193:3: ( rule__VarDeclaration__Group__0 )
            // InternalSTCoreParser.g:193:4: rule__VarDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclaration"


    // $ANTLR start "entryRuleInitializerExpression"
    // InternalSTCoreParser.g:202:1: entryRuleInitializerExpression : ruleInitializerExpression EOF ;
    public final void entryRuleInitializerExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:203:1: ( ruleInitializerExpression EOF )
            // InternalSTCoreParser.g:204:1: ruleInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializerExpression"


    // $ANTLR start "ruleInitializerExpression"
    // InternalSTCoreParser.g:211:1: ruleInitializerExpression : ( ( rule__InitializerExpression__Alternatives ) ) ;
    public final void ruleInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:215:2: ( ( ( rule__InitializerExpression__Alternatives ) ) )
            // InternalSTCoreParser.g:216:2: ( ( rule__InitializerExpression__Alternatives ) )
            {
            // InternalSTCoreParser.g:216:2: ( ( rule__InitializerExpression__Alternatives ) )
            // InternalSTCoreParser.g:217:3: ( rule__InitializerExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:218:3: ( rule__InitializerExpression__Alternatives )
            // InternalSTCoreParser.g:218:4: rule__InitializerExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__InitializerExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializerExpression"


    // $ANTLR start "entryRuleArrayInitializerExpression"
    // InternalSTCoreParser.g:227:1: entryRuleArrayInitializerExpression : ruleArrayInitializerExpression EOF ;
    public final void entryRuleArrayInitializerExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:228:1: ( ruleArrayInitializerExpression EOF )
            // InternalSTCoreParser.g:229:1: ruleArrayInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitializerExpression"


    // $ANTLR start "ruleArrayInitializerExpression"
    // InternalSTCoreParser.g:236:1: ruleArrayInitializerExpression : ( ( rule__ArrayInitializerExpression__Group__0 ) ) ;
    public final void ruleArrayInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:240:2: ( ( ( rule__ArrayInitializerExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:241:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:241:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            // InternalSTCoreParser.g:242:3: ( rule__ArrayInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:243:3: ( rule__ArrayInitializerExpression__Group__0 )
            // InternalSTCoreParser.g:243:4: rule__ArrayInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitializerExpression"


    // $ANTLR start "entryRuleArrayInitElement"
    // InternalSTCoreParser.g:252:1: entryRuleArrayInitElement : ruleArrayInitElement EOF ;
    public final void entryRuleArrayInitElement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:253:1: ( ruleArrayInitElement EOF )
            // InternalSTCoreParser.g:254:1: ruleArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitElement"


    // $ANTLR start "ruleArrayInitElement"
    // InternalSTCoreParser.g:261:1: ruleArrayInitElement : ( ( rule__ArrayInitElement__Group__0 ) ) ;
    public final void ruleArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:265:2: ( ( ( rule__ArrayInitElement__Group__0 ) ) )
            // InternalSTCoreParser.g:266:2: ( ( rule__ArrayInitElement__Group__0 ) )
            {
            // InternalSTCoreParser.g:266:2: ( ( rule__ArrayInitElement__Group__0 ) )
            // InternalSTCoreParser.g:267:3: ( rule__ArrayInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:268:3: ( rule__ArrayInitElement__Group__0 )
            // InternalSTCoreParser.g:268:4: rule__ArrayInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitElement"


    // $ANTLR start "entryRuleSTStatement"
    // InternalSTCoreParser.g:277:1: entryRuleSTStatement : ruleSTStatement EOF ;
    public final void entryRuleSTStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:278:1: ( ruleSTStatement EOF )
            // InternalSTCoreParser.g:279:1: ruleSTStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStatement"


    // $ANTLR start "ruleSTStatement"
    // InternalSTCoreParser.g:286:1: ruleSTStatement : ( ( rule__STStatement__Alternatives ) ) ;
    public final void ruleSTStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:290:2: ( ( ( rule__STStatement__Alternatives ) ) )
            // InternalSTCoreParser.g:291:2: ( ( rule__STStatement__Alternatives ) )
            {
            // InternalSTCoreParser.g:291:2: ( ( rule__STStatement__Alternatives ) )
            // InternalSTCoreParser.g:292:3: ( rule__STStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:293:3: ( rule__STStatement__Alternatives )
            // InternalSTCoreParser.g:293:4: rule__STStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStatement"


    // $ANTLR start "entryRuleSTAssignmentStatement"
    // InternalSTCoreParser.g:302:1: entryRuleSTAssignmentStatement : ruleSTAssignmentStatement EOF ;
    public final void entryRuleSTAssignmentStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:303:1: ( ruleSTAssignmentStatement EOF )
            // InternalSTCoreParser.g:304:1: ruleSTAssignmentStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAssignmentStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAssignmentStatement"


    // $ANTLR start "ruleSTAssignmentStatement"
    // InternalSTCoreParser.g:311:1: ruleSTAssignmentStatement : ( ( rule__STAssignmentStatement__Group__0 ) ) ;
    public final void ruleSTAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:315:2: ( ( ( rule__STAssignmentStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:316:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:316:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            // InternalSTCoreParser.g:317:3: ( rule__STAssignmentStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:318:3: ( rule__STAssignmentStatement__Group__0 )
            // InternalSTCoreParser.g:318:4: rule__STAssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAssignmentStatement"


    // $ANTLR start "entryRuleSTIfStatment"
    // InternalSTCoreParser.g:327:1: entryRuleSTIfStatment : ruleSTIfStatment EOF ;
    public final void entryRuleSTIfStatment() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:328:1: ( ruleSTIfStatment EOF )
            // InternalSTCoreParser.g:329:1: ruleSTIfStatment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTIfStatment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTIfStatment"


    // $ANTLR start "ruleSTIfStatment"
    // InternalSTCoreParser.g:336:1: ruleSTIfStatment : ( ( rule__STIfStatment__Group__0 ) ) ;
    public final void ruleSTIfStatment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:340:2: ( ( ( rule__STIfStatment__Group__0 ) ) )
            // InternalSTCoreParser.g:341:2: ( ( rule__STIfStatment__Group__0 ) )
            {
            // InternalSTCoreParser.g:341:2: ( ( rule__STIfStatment__Group__0 ) )
            // InternalSTCoreParser.g:342:3: ( rule__STIfStatment__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:343:3: ( rule__STIfStatment__Group__0 )
            // InternalSTCoreParser.g:343:4: rule__STIfStatment__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTIfStatment"


    // $ANTLR start "entryRuleSTElseIfPart"
    // InternalSTCoreParser.g:352:1: entryRuleSTElseIfPart : ruleSTElseIfPart EOF ;
    public final void entryRuleSTElseIfPart() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:353:1: ( ruleSTElseIfPart EOF )
            // InternalSTCoreParser.g:354:1: ruleSTElseIfPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElseIfPart"


    // $ANTLR start "ruleSTElseIfPart"
    // InternalSTCoreParser.g:361:1: ruleSTElseIfPart : ( ( rule__STElseIfPart__Group__0 ) ) ;
    public final void ruleSTElseIfPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:365:2: ( ( ( rule__STElseIfPart__Group__0 ) ) )
            // InternalSTCoreParser.g:366:2: ( ( rule__STElseIfPart__Group__0 ) )
            {
            // InternalSTCoreParser.g:366:2: ( ( rule__STElseIfPart__Group__0 ) )
            // InternalSTCoreParser.g:367:3: ( rule__STElseIfPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:368:3: ( rule__STElseIfPart__Group__0 )
            // InternalSTCoreParser.g:368:4: rule__STElseIfPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElseIfPart"


    // $ANTLR start "entryRuleSTCaseStatement"
    // InternalSTCoreParser.g:377:1: entryRuleSTCaseStatement : ruleSTCaseStatement EOF ;
    public final void entryRuleSTCaseStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:378:1: ( ruleSTCaseStatement EOF )
            // InternalSTCoreParser.g:379:1: ruleSTCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseStatement"


    // $ANTLR start "ruleSTCaseStatement"
    // InternalSTCoreParser.g:386:1: ruleSTCaseStatement : ( ( rule__STCaseStatement__Group__0 ) ) ;
    public final void ruleSTCaseStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:390:2: ( ( ( rule__STCaseStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:391:2: ( ( rule__STCaseStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:391:2: ( ( rule__STCaseStatement__Group__0 ) )
            // InternalSTCoreParser.g:392:3: ( rule__STCaseStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:393:3: ( rule__STCaseStatement__Group__0 )
            // InternalSTCoreParser.g:393:4: rule__STCaseStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseStatement"


    // $ANTLR start "entryRuleSTCaseCases"
    // InternalSTCoreParser.g:402:1: entryRuleSTCaseCases : ruleSTCaseCases EOF ;
    public final void entryRuleSTCaseCases() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:403:1: ( ruleSTCaseCases EOF )
            // InternalSTCoreParser.g:404:1: ruleSTCaseCases EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseCases"


    // $ANTLR start "ruleSTCaseCases"
    // InternalSTCoreParser.g:411:1: ruleSTCaseCases : ( ( rule__STCaseCases__Group__0 ) ) ;
    public final void ruleSTCaseCases() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:415:2: ( ( ( rule__STCaseCases__Group__0 ) ) )
            // InternalSTCoreParser.g:416:2: ( ( rule__STCaseCases__Group__0 ) )
            {
            // InternalSTCoreParser.g:416:2: ( ( rule__STCaseCases__Group__0 ) )
            // InternalSTCoreParser.g:417:3: ( rule__STCaseCases__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:418:3: ( rule__STCaseCases__Group__0 )
            // InternalSTCoreParser.g:418:4: rule__STCaseCases__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseCases"


    // $ANTLR start "entryRuleSTElsePart"
    // InternalSTCoreParser.g:427:1: entryRuleSTElsePart : ruleSTElsePart EOF ;
    public final void entryRuleSTElsePart() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:428:1: ( ruleSTElsePart EOF )
            // InternalSTCoreParser.g:429:1: ruleSTElsePart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElsePart"


    // $ANTLR start "ruleSTElsePart"
    // InternalSTCoreParser.g:436:1: ruleSTElsePart : ( ( rule__STElsePart__Group__0 ) ) ;
    public final void ruleSTElsePart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:440:2: ( ( ( rule__STElsePart__Group__0 ) ) )
            // InternalSTCoreParser.g:441:2: ( ( rule__STElsePart__Group__0 ) )
            {
            // InternalSTCoreParser.g:441:2: ( ( rule__STElsePart__Group__0 ) )
            // InternalSTCoreParser.g:442:3: ( rule__STElsePart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:443:3: ( rule__STElsePart__Group__0 )
            // InternalSTCoreParser.g:443:4: rule__STElsePart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElsePart"


    // $ANTLR start "entryRuleSTForStatement"
    // InternalSTCoreParser.g:452:1: entryRuleSTForStatement : ruleSTForStatement EOF ;
    public final void entryRuleSTForStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:453:1: ( ruleSTForStatement EOF )
            // InternalSTCoreParser.g:454:1: ruleSTForStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTForStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTForStatement"


    // $ANTLR start "ruleSTForStatement"
    // InternalSTCoreParser.g:461:1: ruleSTForStatement : ( ( rule__STForStatement__Group__0 ) ) ;
    public final void ruleSTForStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:465:2: ( ( ( rule__STForStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:466:2: ( ( rule__STForStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:466:2: ( ( rule__STForStatement__Group__0 ) )
            // InternalSTCoreParser.g:467:3: ( rule__STForStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:468:3: ( rule__STForStatement__Group__0 )
            // InternalSTCoreParser.g:468:4: rule__STForStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTForStatement"


    // $ANTLR start "entryRuleSTWhileStatement"
    // InternalSTCoreParser.g:477:1: entryRuleSTWhileStatement : ruleSTWhileStatement EOF ;
    public final void entryRuleSTWhileStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:478:1: ( ruleSTWhileStatement EOF )
            // InternalSTCoreParser.g:479:1: ruleSTWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTWhileStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTWhileStatement"


    // $ANTLR start "ruleSTWhileStatement"
    // InternalSTCoreParser.g:486:1: ruleSTWhileStatement : ( ( rule__STWhileStatement__Group__0 ) ) ;
    public final void ruleSTWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:490:2: ( ( ( rule__STWhileStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:491:2: ( ( rule__STWhileStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:491:2: ( ( rule__STWhileStatement__Group__0 ) )
            // InternalSTCoreParser.g:492:3: ( rule__STWhileStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:493:3: ( rule__STWhileStatement__Group__0 )
            // InternalSTCoreParser.g:493:4: rule__STWhileStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTWhileStatement"


    // $ANTLR start "entryRuleSTRepeatStatement"
    // InternalSTCoreParser.g:502:1: entryRuleSTRepeatStatement : ruleSTRepeatStatement EOF ;
    public final void entryRuleSTRepeatStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:503:1: ( ruleSTRepeatStatement EOF )
            // InternalSTCoreParser.g:504:1: ruleSTRepeatStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRepeatStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRepeatStatement"


    // $ANTLR start "ruleSTRepeatStatement"
    // InternalSTCoreParser.g:511:1: ruleSTRepeatStatement : ( ( rule__STRepeatStatement__Group__0 ) ) ;
    public final void ruleSTRepeatStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:515:2: ( ( ( rule__STRepeatStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:516:2: ( ( rule__STRepeatStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:516:2: ( ( rule__STRepeatStatement__Group__0 ) )
            // InternalSTCoreParser.g:517:3: ( rule__STRepeatStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:518:3: ( rule__STRepeatStatement__Group__0 )
            // InternalSTCoreParser.g:518:4: rule__STRepeatStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRepeatStatement"


    // $ANTLR start "entryRuleSTExpression"
    // InternalSTCoreParser.g:527:1: entryRuleSTExpression : ruleSTExpression EOF ;
    public final void entryRuleSTExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:528:1: ( ruleSTExpression EOF )
            // InternalSTCoreParser.g:529:1: ruleSTExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpression"


    // $ANTLR start "ruleSTExpression"
    // InternalSTCoreParser.g:536:1: ruleSTExpression : ( ruleSTSubrangeExpression ) ;
    public final void ruleSTExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:540:2: ( ( ruleSTSubrangeExpression ) )
            // InternalSTCoreParser.g:541:2: ( ruleSTSubrangeExpression )
            {
            // InternalSTCoreParser.g:541:2: ( ruleSTSubrangeExpression )
            // InternalSTCoreParser.g:542:3: ruleSTSubrangeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpression"


    // $ANTLR start "entryRuleSTSubrangeExpression"
    // InternalSTCoreParser.g:552:1: entryRuleSTSubrangeExpression : ruleSTSubrangeExpression EOF ;
    public final void entryRuleSTSubrangeExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:553:1: ( ruleSTSubrangeExpression EOF )
            // InternalSTCoreParser.g:554:1: ruleSTSubrangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSubrangeExpression"


    // $ANTLR start "ruleSTSubrangeExpression"
    // InternalSTCoreParser.g:561:1: ruleSTSubrangeExpression : ( ( rule__STSubrangeExpression__Group__0 ) ) ;
    public final void ruleSTSubrangeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:565:2: ( ( ( rule__STSubrangeExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:566:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:566:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            // InternalSTCoreParser.g:567:3: ( rule__STSubrangeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:568:3: ( rule__STSubrangeExpression__Group__0 )
            // InternalSTCoreParser.g:568:4: rule__STSubrangeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSubrangeExpression"


    // $ANTLR start "entryRuleSTOrExpression"
    // InternalSTCoreParser.g:577:1: entryRuleSTOrExpression : ruleSTOrExpression EOF ;
    public final void entryRuleSTOrExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:578:1: ( ruleSTOrExpression EOF )
            // InternalSTCoreParser.g:579:1: ruleSTOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTOrExpression"


    // $ANTLR start "ruleSTOrExpression"
    // InternalSTCoreParser.g:586:1: ruleSTOrExpression : ( ( rule__STOrExpression__Group__0 ) ) ;
    public final void ruleSTOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:590:2: ( ( ( rule__STOrExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:591:2: ( ( rule__STOrExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:591:2: ( ( rule__STOrExpression__Group__0 ) )
            // InternalSTCoreParser.g:592:3: ( rule__STOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:593:3: ( rule__STOrExpression__Group__0 )
            // InternalSTCoreParser.g:593:4: rule__STOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTOrExpression"


    // $ANTLR start "entryRuleSTXorExpression"
    // InternalSTCoreParser.g:602:1: entryRuleSTXorExpression : ruleSTXorExpression EOF ;
    public final void entryRuleSTXorExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:603:1: ( ruleSTXorExpression EOF )
            // InternalSTCoreParser.g:604:1: ruleSTXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTXorExpression"


    // $ANTLR start "ruleSTXorExpression"
    // InternalSTCoreParser.g:611:1: ruleSTXorExpression : ( ( rule__STXorExpression__Group__0 ) ) ;
    public final void ruleSTXorExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:615:2: ( ( ( rule__STXorExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:616:2: ( ( rule__STXorExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:616:2: ( ( rule__STXorExpression__Group__0 ) )
            // InternalSTCoreParser.g:617:3: ( rule__STXorExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:618:3: ( rule__STXorExpression__Group__0 )
            // InternalSTCoreParser.g:618:4: rule__STXorExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTXorExpression"


    // $ANTLR start "entryRuleSTAndExpression"
    // InternalSTCoreParser.g:627:1: entryRuleSTAndExpression : ruleSTAndExpression EOF ;
    public final void entryRuleSTAndExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:628:1: ( ruleSTAndExpression EOF )
            // InternalSTCoreParser.g:629:1: ruleSTAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAndExpression"


    // $ANTLR start "ruleSTAndExpression"
    // InternalSTCoreParser.g:636:1: ruleSTAndExpression : ( ( rule__STAndExpression__Group__0 ) ) ;
    public final void ruleSTAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:640:2: ( ( ( rule__STAndExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:641:2: ( ( rule__STAndExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:641:2: ( ( rule__STAndExpression__Group__0 ) )
            // InternalSTCoreParser.g:642:3: ( rule__STAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:643:3: ( rule__STAndExpression__Group__0 )
            // InternalSTCoreParser.g:643:4: rule__STAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAndExpression"


    // $ANTLR start "entryRuleSTEqualityExpression"
    // InternalSTCoreParser.g:652:1: entryRuleSTEqualityExpression : ruleSTEqualityExpression EOF ;
    public final void entryRuleSTEqualityExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:653:1: ( ruleSTEqualityExpression EOF )
            // InternalSTCoreParser.g:654:1: ruleSTEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTEqualityExpression"


    // $ANTLR start "ruleSTEqualityExpression"
    // InternalSTCoreParser.g:661:1: ruleSTEqualityExpression : ( ( rule__STEqualityExpression__Group__0 ) ) ;
    public final void ruleSTEqualityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:665:2: ( ( ( rule__STEqualityExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:666:2: ( ( rule__STEqualityExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:666:2: ( ( rule__STEqualityExpression__Group__0 ) )
            // InternalSTCoreParser.g:667:3: ( rule__STEqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:668:3: ( rule__STEqualityExpression__Group__0 )
            // InternalSTCoreParser.g:668:4: rule__STEqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTEqualityExpression"


    // $ANTLR start "entryRuleSTComparisonExpression"
    // InternalSTCoreParser.g:677:1: entryRuleSTComparisonExpression : ruleSTComparisonExpression EOF ;
    public final void entryRuleSTComparisonExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:678:1: ( ruleSTComparisonExpression EOF )
            // InternalSTCoreParser.g:679:1: ruleSTComparisonExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTComparisonExpression"


    // $ANTLR start "ruleSTComparisonExpression"
    // InternalSTCoreParser.g:686:1: ruleSTComparisonExpression : ( ( rule__STComparisonExpression__Group__0 ) ) ;
    public final void ruleSTComparisonExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:690:2: ( ( ( rule__STComparisonExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:691:2: ( ( rule__STComparisonExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:691:2: ( ( rule__STComparisonExpression__Group__0 ) )
            // InternalSTCoreParser.g:692:3: ( rule__STComparisonExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:693:3: ( rule__STComparisonExpression__Group__0 )
            // InternalSTCoreParser.g:693:4: rule__STComparisonExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTComparisonExpression"


    // $ANTLR start "entryRuleSTAddSubExpression"
    // InternalSTCoreParser.g:702:1: entryRuleSTAddSubExpression : ruleSTAddSubExpression EOF ;
    public final void entryRuleSTAddSubExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:703:1: ( ruleSTAddSubExpression EOF )
            // InternalSTCoreParser.g:704:1: ruleSTAddSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAddSubExpression"


    // $ANTLR start "ruleSTAddSubExpression"
    // InternalSTCoreParser.g:711:1: ruleSTAddSubExpression : ( ( rule__STAddSubExpression__Group__0 ) ) ;
    public final void ruleSTAddSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:715:2: ( ( ( rule__STAddSubExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:716:2: ( ( rule__STAddSubExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:716:2: ( ( rule__STAddSubExpression__Group__0 ) )
            // InternalSTCoreParser.g:717:3: ( rule__STAddSubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:718:3: ( rule__STAddSubExpression__Group__0 )
            // InternalSTCoreParser.g:718:4: rule__STAddSubExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAddSubExpression"


    // $ANTLR start "entryRuleSTMulDivModExpression"
    // InternalSTCoreParser.g:727:1: entryRuleSTMulDivModExpression : ruleSTMulDivModExpression EOF ;
    public final void entryRuleSTMulDivModExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:728:1: ( ruleSTMulDivModExpression EOF )
            // InternalSTCoreParser.g:729:1: ruleSTMulDivModExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMulDivModExpression"


    // $ANTLR start "ruleSTMulDivModExpression"
    // InternalSTCoreParser.g:736:1: ruleSTMulDivModExpression : ( ( rule__STMulDivModExpression__Group__0 ) ) ;
    public final void ruleSTMulDivModExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:740:2: ( ( ( rule__STMulDivModExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:741:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:741:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            // InternalSTCoreParser.g:742:3: ( rule__STMulDivModExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:743:3: ( rule__STMulDivModExpression__Group__0 )
            // InternalSTCoreParser.g:743:4: rule__STMulDivModExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMulDivModExpression"


    // $ANTLR start "entryRuleSTPowerExpression"
    // InternalSTCoreParser.g:752:1: entryRuleSTPowerExpression : ruleSTPowerExpression EOF ;
    public final void entryRuleSTPowerExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:753:1: ( ruleSTPowerExpression EOF )
            // InternalSTCoreParser.g:754:1: ruleSTPowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPowerExpression"


    // $ANTLR start "ruleSTPowerExpression"
    // InternalSTCoreParser.g:761:1: ruleSTPowerExpression : ( ( rule__STPowerExpression__Group__0 ) ) ;
    public final void ruleSTPowerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:765:2: ( ( ( rule__STPowerExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:766:2: ( ( rule__STPowerExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:766:2: ( ( rule__STPowerExpression__Group__0 ) )
            // InternalSTCoreParser.g:767:3: ( rule__STPowerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:768:3: ( rule__STPowerExpression__Group__0 )
            // InternalSTCoreParser.g:768:4: rule__STPowerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPowerExpression"


    // $ANTLR start "entryRuleSTSignumExpression"
    // InternalSTCoreParser.g:777:1: entryRuleSTSignumExpression : ruleSTSignumExpression EOF ;
    public final void entryRuleSTSignumExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:778:1: ( ruleSTSignumExpression EOF )
            // InternalSTCoreParser.g:779:1: ruleSTSignumExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSignumExpression"


    // $ANTLR start "ruleSTSignumExpression"
    // InternalSTCoreParser.g:786:1: ruleSTSignumExpression : ( ( rule__STSignumExpression__Alternatives ) ) ;
    public final void ruleSTSignumExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:790:2: ( ( ( rule__STSignumExpression__Alternatives ) ) )
            // InternalSTCoreParser.g:791:2: ( ( rule__STSignumExpression__Alternatives ) )
            {
            // InternalSTCoreParser.g:791:2: ( ( rule__STSignumExpression__Alternatives ) )
            // InternalSTCoreParser.g:792:3: ( rule__STSignumExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:793:3: ( rule__STSignumExpression__Alternatives )
            // InternalSTCoreParser.g:793:4: rule__STSignumExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSignumExpression"


    // $ANTLR start "entryRuleSTSelectionExpression"
    // InternalSTCoreParser.g:802:1: entryRuleSTSelectionExpression : ruleSTSelectionExpression EOF ;
    public final void entryRuleSTSelectionExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:803:1: ( ruleSTSelectionExpression EOF )
            // InternalSTCoreParser.g:804:1: ruleSTSelectionExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSelectionExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSelectionExpression"


    // $ANTLR start "ruleSTSelectionExpression"
    // InternalSTCoreParser.g:811:1: ruleSTSelectionExpression : ( ( rule__STSelectionExpression__Group__0 ) ) ;
    public final void ruleSTSelectionExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:815:2: ( ( ( rule__STSelectionExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:816:2: ( ( rule__STSelectionExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:816:2: ( ( rule__STSelectionExpression__Group__0 ) )
            // InternalSTCoreParser.g:817:3: ( rule__STSelectionExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:818:3: ( rule__STSelectionExpression__Group__0 )
            // InternalSTCoreParser.g:818:4: rule__STSelectionExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSelectionExpression"


    // $ANTLR start "entryRuleMultibitPartialAccess"
    // InternalSTCoreParser.g:827:1: entryRuleMultibitPartialAccess : ruleMultibitPartialAccess EOF ;
    public final void entryRuleMultibitPartialAccess() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:828:1: ( ruleMultibitPartialAccess EOF )
            // InternalSTCoreParser.g:829:1: ruleMultibitPartialAccess EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultibitPartialAccess"


    // $ANTLR start "ruleMultibitPartialAccess"
    // InternalSTCoreParser.g:836:1: ruleMultibitPartialAccess : ( ( rule__MultibitPartialAccess__Group__0 ) ) ;
    public final void ruleMultibitPartialAccess() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:840:2: ( ( ( rule__MultibitPartialAccess__Group__0 ) ) )
            // InternalSTCoreParser.g:841:2: ( ( rule__MultibitPartialAccess__Group__0 ) )
            {
            // InternalSTCoreParser.g:841:2: ( ( rule__MultibitPartialAccess__Group__0 ) )
            // InternalSTCoreParser.g:842:3: ( rule__MultibitPartialAccess__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:843:3: ( rule__MultibitPartialAccess__Group__0 )
            // InternalSTCoreParser.g:843:4: rule__MultibitPartialAccess__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultibitPartialAccess"


    // $ANTLR start "entryRuleSTAtomicExpression"
    // InternalSTCoreParser.g:852:1: entryRuleSTAtomicExpression : ruleSTAtomicExpression EOF ;
    public final void entryRuleSTAtomicExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:853:1: ( ruleSTAtomicExpression EOF )
            // InternalSTCoreParser.g:854:1: ruleSTAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAtomicExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAtomicExpression"


    // $ANTLR start "ruleSTAtomicExpression"
    // InternalSTCoreParser.g:861:1: ruleSTAtomicExpression : ( ( rule__STAtomicExpression__Alternatives ) ) ;
    public final void ruleSTAtomicExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:865:2: ( ( ( rule__STAtomicExpression__Alternatives ) ) )
            // InternalSTCoreParser.g:866:2: ( ( rule__STAtomicExpression__Alternatives ) )
            {
            // InternalSTCoreParser.g:866:2: ( ( rule__STAtomicExpression__Alternatives ) )
            // InternalSTCoreParser.g:867:3: ( rule__STAtomicExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:868:3: ( rule__STAtomicExpression__Alternatives )
            // InternalSTCoreParser.g:868:4: rule__STAtomicExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAtomicExpression"


    // $ANTLR start "entryRuleSTLiteralExpressions"
    // InternalSTCoreParser.g:877:1: entryRuleSTLiteralExpressions : ruleSTLiteralExpressions EOF ;
    public final void entryRuleSTLiteralExpressions() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:878:1: ( ruleSTLiteralExpressions EOF )
            // InternalSTCoreParser.g:879:1: ruleSTLiteralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLiteralExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLiteralExpressions"


    // $ANTLR start "ruleSTLiteralExpressions"
    // InternalSTCoreParser.g:886:1: ruleSTLiteralExpressions : ( ( rule__STLiteralExpressions__Alternatives ) ) ;
    public final void ruleSTLiteralExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:890:2: ( ( ( rule__STLiteralExpressions__Alternatives ) ) )
            // InternalSTCoreParser.g:891:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            {
            // InternalSTCoreParser.g:891:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            // InternalSTCoreParser.g:892:3: ( rule__STLiteralExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:893:3: ( rule__STLiteralExpressions__Alternatives )
            // InternalSTCoreParser.g:893:4: rule__STLiteralExpressions__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLiteralExpressions"


    // $ANTLR start "entryRuleBOOL_LITERAL"
    // InternalSTCoreParser.g:902:1: entryRuleBOOL_LITERAL : ruleBOOL_LITERAL EOF ;
    public final void entryRuleBOOL_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:903:1: ( ruleBOOL_LITERAL EOF )
            // InternalSTCoreParser.g:904:1: ruleBOOL_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBOOL_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBOOL_LITERAL"


    // $ANTLR start "ruleBOOL_LITERAL"
    // InternalSTCoreParser.g:911:1: ruleBOOL_LITERAL : ( ( rule__BOOL_LITERAL__Group__0 ) ) ;
    public final void ruleBOOL_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:915:2: ( ( ( rule__BOOL_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:916:2: ( ( rule__BOOL_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:916:2: ( ( rule__BOOL_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:917:3: ( rule__BOOL_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:918:3: ( rule__BOOL_LITERAL__Group__0 )
            // InternalSTCoreParser.g:918:4: rule__BOOL_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBOOL_LITERAL"


    // $ANTLR start "entryRuleNUMERIC_LITERAL"
    // InternalSTCoreParser.g:927:1: entryRuleNUMERIC_LITERAL : ruleNUMERIC_LITERAL EOF ;
    public final void entryRuleNUMERIC_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:928:1: ( ruleNUMERIC_LITERAL EOF )
            // InternalSTCoreParser.g:929:1: ruleNUMERIC_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNUMERIC_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMERIC_LITERAL"


    // $ANTLR start "ruleNUMERIC_LITERAL"
    // InternalSTCoreParser.g:936:1: ruleNUMERIC_LITERAL : ( ( rule__NUMERIC_LITERAL__Group__0 ) ) ;
    public final void ruleNUMERIC_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:940:2: ( ( ( rule__NUMERIC_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:941:2: ( ( rule__NUMERIC_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:941:2: ( ( rule__NUMERIC_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:942:3: ( rule__NUMERIC_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:943:3: ( rule__NUMERIC_LITERAL__Group__0 )
            // InternalSTCoreParser.g:943:4: rule__NUMERIC_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMERIC_LITERAL"


    // $ANTLR start "entryRuleDATE_LITERAL"
    // InternalSTCoreParser.g:952:1: entryRuleDATE_LITERAL : ruleDATE_LITERAL EOF ;
    public final void entryRuleDATE_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:953:1: ( ruleDATE_LITERAL EOF )
            // InternalSTCoreParser.g:954:1: ruleDATE_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE_LITERAL"


    // $ANTLR start "ruleDATE_LITERAL"
    // InternalSTCoreParser.g:961:1: ruleDATE_LITERAL : ( ( rule__DATE_LITERAL__Group__0 ) ) ;
    public final void ruleDATE_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:965:2: ( ( ( rule__DATE_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:966:2: ( ( rule__DATE_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:966:2: ( ( rule__DATE_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:967:3: ( rule__DATE_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:968:3: ( rule__DATE_LITERAL__Group__0 )
            // InternalSTCoreParser.g:968:4: rule__DATE_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE_LITERAL"


    // $ANTLR start "entryRuleTIME_LITERAL"
    // InternalSTCoreParser.g:977:1: entryRuleTIME_LITERAL : ruleTIME_LITERAL EOF ;
    public final void entryRuleTIME_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:978:1: ( ruleTIME_LITERAL EOF )
            // InternalSTCoreParser.g:979:1: ruleTIME_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_LITERAL"


    // $ANTLR start "ruleTIME_LITERAL"
    // InternalSTCoreParser.g:986:1: ruleTIME_LITERAL : ( ( rule__TIME_LITERAL__Group__0 ) ) ;
    public final void ruleTIME_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:990:2: ( ( ( rule__TIME_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:991:2: ( ( rule__TIME_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:991:2: ( ( rule__TIME_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:992:3: ( rule__TIME_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:993:3: ( rule__TIME_LITERAL__Group__0 )
            // InternalSTCoreParser.g:993:4: rule__TIME_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_LITERAL"


    // $ANTLR start "entryRuleTIME_OF_DAY_LITERAL"
    // InternalSTCoreParser.g:1002:1: entryRuleTIME_OF_DAY_LITERAL : ruleTIME_OF_DAY_LITERAL EOF ;
    public final void entryRuleTIME_OF_DAY_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1003:1: ( ruleTIME_OF_DAY_LITERAL EOF )
            // InternalSTCoreParser.g:1004:1: ruleTIME_OF_DAY_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_OF_DAY_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_OF_DAY_LITERAL"


    // $ANTLR start "ruleTIME_OF_DAY_LITERAL"
    // InternalSTCoreParser.g:1011:1: ruleTIME_OF_DAY_LITERAL : ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) ) ;
    public final void ruleTIME_OF_DAY_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1015:2: ( ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1016:2: ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1016:2: ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1017:3: ( rule__TIME_OF_DAY_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1018:3: ( rule__TIME_OF_DAY_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1018:4: rule__TIME_OF_DAY_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_OF_DAY_LITERAL"


    // $ANTLR start "entryRuleDATE_AND_TIME_LITERAL"
    // InternalSTCoreParser.g:1027:1: entryRuleDATE_AND_TIME_LITERAL : ruleDATE_AND_TIME_LITERAL EOF ;
    public final void entryRuleDATE_AND_TIME_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1028:1: ( ruleDATE_AND_TIME_LITERAL EOF )
            // InternalSTCoreParser.g:1029:1: ruleDATE_AND_TIME_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE_AND_TIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE_AND_TIME_LITERAL"


    // $ANTLR start "ruleDATE_AND_TIME_LITERAL"
    // InternalSTCoreParser.g:1036:1: ruleDATE_AND_TIME_LITERAL : ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) ) ;
    public final void ruleDATE_AND_TIME_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1040:2: ( ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1041:2: ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1041:2: ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1042:3: ( rule__DATE_AND_TIME_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1043:3: ( rule__DATE_AND_TIME_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1043:4: rule__DATE_AND_TIME_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE_AND_TIME_LITERAL"


    // $ANTLR start "entryRuleSTRING_LITERAL"
    // InternalSTCoreParser.g:1052:1: entryRuleSTRING_LITERAL : ruleSTRING_LITERAL EOF ;
    public final void entryRuleSTRING_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1053:1: ( ruleSTRING_LITERAL EOF )
            // InternalSTCoreParser.g:1054:1: ruleSTRING_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRING_LITERAL"


    // $ANTLR start "ruleSTRING_LITERAL"
    // InternalSTCoreParser.g:1061:1: ruleSTRING_LITERAL : ( ( rule__STRING_LITERAL__Group__0 ) ) ;
    public final void ruleSTRING_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1065:2: ( ( ( rule__STRING_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1066:2: ( ( rule__STRING_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1066:2: ( ( rule__STRING_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1067:3: ( rule__STRING_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1068:3: ( rule__STRING_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1068:4: rule__STRING_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRING_LITERAL"


    // $ANTLR start "entryRuleINTEGER"
    // InternalSTCoreParser.g:1077:1: entryRuleINTEGER : ruleINTEGER EOF ;
    public final void entryRuleINTEGER() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1078:1: ( ruleINTEGER EOF )
            // InternalSTCoreParser.g:1079:1: ruleINTEGER EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleINTEGER"


    // $ANTLR start "ruleINTEGER"
    // InternalSTCoreParser.g:1086:1: ruleINTEGER : ( ( rule__INTEGER__Group__0 ) ) ;
    public final void ruleINTEGER() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1090:2: ( ( ( rule__INTEGER__Group__0 ) ) )
            // InternalSTCoreParser.g:1091:2: ( ( rule__INTEGER__Group__0 ) )
            {
            // InternalSTCoreParser.g:1091:2: ( ( rule__INTEGER__Group__0 ) )
            // InternalSTCoreParser.g:1092:3: ( rule__INTEGER__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1093:3: ( rule__INTEGER__Group__0 )
            // InternalSTCoreParser.g:1093:4: rule__INTEGER__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleINTEGER"


    // $ANTLR start "entryRuleREAL"
    // InternalSTCoreParser.g:1102:1: entryRuleREAL : ruleREAL EOF ;
    public final void entryRuleREAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1103:1: ( ruleREAL EOF )
            // InternalSTCoreParser.g:1104:1: ruleREAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleREAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleREAL"


    // $ANTLR start "ruleREAL"
    // InternalSTCoreParser.g:1111:1: ruleREAL : ( ( rule__REAL__Group__0 ) ) ;
    public final void ruleREAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1115:2: ( ( ( rule__REAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1116:2: ( ( rule__REAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1116:2: ( ( rule__REAL__Group__0 ) )
            // InternalSTCoreParser.g:1117:3: ( rule__REAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1118:3: ( rule__REAL__Group__0 )
            // InternalSTCoreParser.g:1118:4: rule__REAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleREAL"


    // $ANTLR start "entryRuleDATE"
    // InternalSTCoreParser.g:1127:1: entryRuleDATE : ruleDATE EOF ;
    public final void entryRuleDATE() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1128:1: ( ruleDATE EOF )
            // InternalSTCoreParser.g:1129:1: ruleDATE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE"


    // $ANTLR start "ruleDATE"
    // InternalSTCoreParser.g:1136:1: ruleDATE : ( ( rule__DATE__Group__0 ) ) ;
    public final void ruleDATE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1140:2: ( ( ( rule__DATE__Group__0 ) ) )
            // InternalSTCoreParser.g:1141:2: ( ( rule__DATE__Group__0 ) )
            {
            // InternalSTCoreParser.g:1141:2: ( ( rule__DATE__Group__0 ) )
            // InternalSTCoreParser.g:1142:3: ( rule__DATE__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1143:3: ( rule__DATE__Group__0 )
            // InternalSTCoreParser.g:1143:4: rule__DATE__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE"


    // $ANTLR start "entryRuleTIME_OF_DAY"
    // InternalSTCoreParser.g:1152:1: entryRuleTIME_OF_DAY : ruleTIME_OF_DAY EOF ;
    public final void entryRuleTIME_OF_DAY() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1153:1: ( ruleTIME_OF_DAY EOF )
            // InternalSTCoreParser.g:1154:1: ruleTIME_OF_DAY EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_OF_DAY"


    // $ANTLR start "ruleTIME_OF_DAY"
    // InternalSTCoreParser.g:1161:1: ruleTIME_OF_DAY : ( ( rule__TIME_OF_DAY__Group__0 ) ) ;
    public final void ruleTIME_OF_DAY() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1165:2: ( ( ( rule__TIME_OF_DAY__Group__0 ) ) )
            // InternalSTCoreParser.g:1166:2: ( ( rule__TIME_OF_DAY__Group__0 ) )
            {
            // InternalSTCoreParser.g:1166:2: ( ( rule__TIME_OF_DAY__Group__0 ) )
            // InternalSTCoreParser.g:1167:3: ( rule__TIME_OF_DAY__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1168:3: ( rule__TIME_OF_DAY__Group__0 )
            // InternalSTCoreParser.g:1168:4: rule__TIME_OF_DAY__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_OF_DAY"


    // $ANTLR start "ruleSubrangeOperator"
    // InternalSTCoreParser.g:1177:1: ruleSubrangeOperator : ( ( FullStopFullStop ) ) ;
    public final void ruleSubrangeOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1181:1: ( ( ( FullStopFullStop ) ) )
            // InternalSTCoreParser.g:1182:2: ( ( FullStopFullStop ) )
            {
            // InternalSTCoreParser.g:1182:2: ( ( FullStopFullStop ) )
            // InternalSTCoreParser.g:1183:3: ( FullStopFullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }
            // InternalSTCoreParser.g:1184:3: ( FullStopFullStop )
            // InternalSTCoreParser.g:1184:4: FullStopFullStop
            {
            match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubrangeOperator"


    // $ANTLR start "ruleOrOperator"
    // InternalSTCoreParser.g:1193:1: ruleOrOperator : ( ( OR ) ) ;
    public final void ruleOrOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1197:1: ( ( ( OR ) ) )
            // InternalSTCoreParser.g:1198:2: ( ( OR ) )
            {
            // InternalSTCoreParser.g:1198:2: ( ( OR ) )
            // InternalSTCoreParser.g:1199:3: ( OR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }
            // InternalSTCoreParser.g:1200:3: ( OR )
            // InternalSTCoreParser.g:1200:4: OR
            {
            match(input,OR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalSTCoreParser.g:1209:1: ruleXorOperator : ( ( XOR ) ) ;
    public final void ruleXorOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1213:1: ( ( ( XOR ) ) )
            // InternalSTCoreParser.g:1214:2: ( ( XOR ) )
            {
            // InternalSTCoreParser.g:1214:2: ( ( XOR ) )
            // InternalSTCoreParser.g:1215:3: ( XOR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }
            // InternalSTCoreParser.g:1216:3: ( XOR )
            // InternalSTCoreParser.g:1216:4: XOR
            {
            match(input,XOR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalSTCoreParser.g:1225:1: ruleAndOperator : ( ( rule__AndOperator__Alternatives ) ) ;
    public final void ruleAndOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1229:1: ( ( ( rule__AndOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1230:2: ( ( rule__AndOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1230:2: ( ( rule__AndOperator__Alternatives ) )
            // InternalSTCoreParser.g:1231:3: ( rule__AndOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1232:3: ( rule__AndOperator__Alternatives )
            // InternalSTCoreParser.g:1232:4: rule__AndOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AndOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "ruleEqualityOperator"
    // InternalSTCoreParser.g:1241:1: ruleEqualityOperator : ( ( rule__EqualityOperator__Alternatives ) ) ;
    public final void ruleEqualityOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1245:1: ( ( ( rule__EqualityOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1246:2: ( ( rule__EqualityOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1246:2: ( ( rule__EqualityOperator__Alternatives ) )
            // InternalSTCoreParser.g:1247:3: ( rule__EqualityOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1248:3: ( rule__EqualityOperator__Alternatives )
            // InternalSTCoreParser.g:1248:4: rule__EqualityOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EqualityOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSTCoreParser.g:1257:1: ruleCompareOperator : ( ( rule__CompareOperator__Alternatives ) ) ;
    public final void ruleCompareOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1261:1: ( ( ( rule__CompareOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1262:2: ( ( rule__CompareOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1262:2: ( ( rule__CompareOperator__Alternatives ) )
            // InternalSTCoreParser.g:1263:3: ( rule__CompareOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1264:3: ( rule__CompareOperator__Alternatives )
            // InternalSTCoreParser.g:1264:4: rule__CompareOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CompareOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "ruleAddSubOperator"
    // InternalSTCoreParser.g:1273:1: ruleAddSubOperator : ( ( rule__AddSubOperator__Alternatives ) ) ;
    public final void ruleAddSubOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1277:1: ( ( ( rule__AddSubOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1278:2: ( ( rule__AddSubOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1278:2: ( ( rule__AddSubOperator__Alternatives ) )
            // InternalSTCoreParser.g:1279:3: ( rule__AddSubOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1280:3: ( rule__AddSubOperator__Alternatives )
            // InternalSTCoreParser.g:1280:4: rule__AddSubOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AddSubOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddSubOperator"


    // $ANTLR start "ruleMulDivModOperator"
    // InternalSTCoreParser.g:1289:1: ruleMulDivModOperator : ( ( rule__MulDivModOperator__Alternatives ) ) ;
    public final void ruleMulDivModOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1293:1: ( ( ( rule__MulDivModOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1294:2: ( ( rule__MulDivModOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1294:2: ( ( rule__MulDivModOperator__Alternatives ) )
            // InternalSTCoreParser.g:1295:3: ( rule__MulDivModOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1296:3: ( rule__MulDivModOperator__Alternatives )
            // InternalSTCoreParser.g:1296:4: rule__MulDivModOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MulDivModOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulDivModOperator"


    // $ANTLR start "rulePowerOperator"
    // InternalSTCoreParser.g:1305:1: rulePowerOperator : ( ( AsteriskAsterisk ) ) ;
    public final void rulePowerOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1309:1: ( ( ( AsteriskAsterisk ) ) )
            // InternalSTCoreParser.g:1310:2: ( ( AsteriskAsterisk ) )
            {
            // InternalSTCoreParser.g:1310:2: ( ( AsteriskAsterisk ) )
            // InternalSTCoreParser.g:1311:3: ( AsteriskAsterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }
            // InternalSTCoreParser.g:1312:3: ( AsteriskAsterisk )
            // InternalSTCoreParser.g:1312:4: AsteriskAsterisk
            {
            match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePowerOperator"


    // $ANTLR start "ruleUnaryOperator"
    // InternalSTCoreParser.g:1321:1: ruleUnaryOperator : ( ( rule__UnaryOperator__Alternatives ) ) ;
    public final void ruleUnaryOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1325:1: ( ( ( rule__UnaryOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1326:2: ( ( rule__UnaryOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1326:2: ( ( rule__UnaryOperator__Alternatives ) )
            // InternalSTCoreParser.g:1327:3: ( rule__UnaryOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1328:3: ( rule__UnaryOperator__Alternatives )
            // InternalSTCoreParser.g:1328:4: rule__UnaryOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "ruleMultiBitAccessSpecifier"
    // InternalSTCoreParser.g:1337:1: ruleMultiBitAccessSpecifier : ( ( rule__MultiBitAccessSpecifier__Alternatives ) ) ;
    public final void ruleMultiBitAccessSpecifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1341:1: ( ( ( rule__MultiBitAccessSpecifier__Alternatives ) ) )
            // InternalSTCoreParser.g:1342:2: ( ( rule__MultiBitAccessSpecifier__Alternatives ) )
            {
            // InternalSTCoreParser.g:1342:2: ( ( rule__MultiBitAccessSpecifier__Alternatives ) )
            // InternalSTCoreParser.g:1343:3: ( rule__MultiBitAccessSpecifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiBitAccessSpecifierAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1344:3: ( rule__MultiBitAccessSpecifier__Alternatives )
            // InternalSTCoreParser.g:1344:4: rule__MultiBitAccessSpecifier__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MultiBitAccessSpecifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiBitAccessSpecifierAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiBitAccessSpecifier"


    // $ANTLR start "rule__VarDeclaration__Alternatives_3_1"
    // InternalSTCoreParser.g:1352:1: rule__VarDeclaration__Alternatives_3_1 : ( ( ( rule__VarDeclaration__Group_3_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_3_1_1__0 ) ) );
    public final void rule__VarDeclaration__Alternatives_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1356:1: ( ( ( rule__VarDeclaration__Group_3_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_3_1_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==LeftSquareBracket) ) {
                int LA2_1 = input.LA(2);

                if ( (LA2_1==Asterisk) ) {
                    alt2=2;
                }
                else if ( ((LA2_1>=LDATE_AND_TIME && LA2_1<=TIME_OF_DAY)||LA2_1==WSTRING||(LA2_1>=STRING && LA2_1<=DWORD)||(LA2_1>=LDATE && LA2_1<=LWORD)||(LA2_1>=UDINT && LA2_1<=WCHAR)||(LA2_1>=BOOL && LA2_1<=DINT)||(LA2_1>=LINT && LA2_1<=UINT)||LA2_1==WORD||(LA2_1>=INT && LA2_1<=LDT)||LA2_1==TOD||LA2_1==DT||(LA2_1>=LD && LA2_1<=LT)||LA2_1==NOT||LA2_1==D||LA2_1==T||LA2_1==LeftParenthesis||LA2_1==PlusSign||LA2_1==HyphenMinus||LA2_1==RULE_BOOL_VALUES||(LA2_1>=RULE_NON_DECIMAL && LA2_1<=RULE_INT)||(LA2_1>=RULE_ID && LA2_1<=RULE_STRING)) ) {
                    alt2=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSTCoreParser.g:1357:2: ( ( rule__VarDeclaration__Group_3_1_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1357:2: ( ( rule__VarDeclaration__Group_3_1_0__0 ) )
                    // InternalSTCoreParser.g:1358:3: ( rule__VarDeclaration__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0()); 
                    }
                    // InternalSTCoreParser.g:1359:3: ( rule__VarDeclaration__Group_3_1_0__0 )
                    // InternalSTCoreParser.g:1359:4: rule__VarDeclaration__Group_3_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1363:2: ( ( rule__VarDeclaration__Group_3_1_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1363:2: ( ( rule__VarDeclaration__Group_3_1_1__0 ) )
                    // InternalSTCoreParser.g:1364:3: ( rule__VarDeclaration__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1()); 
                    }
                    // InternalSTCoreParser.g:1365:3: ( rule__VarDeclaration__Group_3_1_1__0 )
                    // InternalSTCoreParser.g:1365:4: rule__VarDeclaration__Group_3_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Alternatives_3_1"


    // $ANTLR start "rule__InitializerExpression__Alternatives"
    // InternalSTCoreParser.g:1373:1: rule__InitializerExpression__Alternatives : ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) );
    public final void rule__InitializerExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1377:1: ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=LDATE_AND_TIME && LA3_0<=TIME_OF_DAY)||LA3_0==WSTRING||(LA3_0>=STRING && LA3_0<=DWORD)||(LA3_0>=LDATE && LA3_0<=LWORD)||(LA3_0>=UDINT && LA3_0<=WCHAR)||(LA3_0>=BOOL && LA3_0<=DINT)||(LA3_0>=LINT && LA3_0<=UINT)||LA3_0==WORD||(LA3_0>=INT && LA3_0<=LDT)||LA3_0==TOD||LA3_0==DT||(LA3_0>=LD && LA3_0<=LT)||LA3_0==NOT||LA3_0==D||LA3_0==T||LA3_0==LeftParenthesis||LA3_0==PlusSign||LA3_0==HyphenMinus||LA3_0==RULE_BOOL_VALUES||(LA3_0>=RULE_NON_DECIMAL && LA3_0<=RULE_INT)||(LA3_0>=RULE_ID && LA3_0<=RULE_STRING)) ) {
                alt3=1;
            }
            else if ( (LA3_0==LeftSquareBracket) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSTCoreParser.g:1378:2: ( ruleSTExpression )
                    {
                    // InternalSTCoreParser.g:1378:2: ( ruleSTExpression )
                    // InternalSTCoreParser.g:1379:3: ruleSTExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1384:2: ( ruleArrayInitializerExpression )
                    {
                    // InternalSTCoreParser.g:1384:2: ( ruleArrayInitializerExpression )
                    // InternalSTCoreParser.g:1385:3: ruleArrayInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArrayInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializerExpression__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives"
    // InternalSTCoreParser.g:1394:1: rule__STStatement__Alternatives : ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) );
    public final void rule__STStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1398:1: ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==CONTINUE||(LA4_0>=REPEAT && LA4_0<=RETURN)||LA4_0==WHILE||LA4_0==CASE||LA4_0==EXIT||LA4_0==FOR||LA4_0==IF||LA4_0==RULE_ID) ) {
                alt4=1;
            }
            else if ( (LA4_0==Semicolon) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSTCoreParser.g:1399:2: ( ( rule__STStatement__Group_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1399:2: ( ( rule__STStatement__Group_0__0 ) )
                    // InternalSTCoreParser.g:1400:3: ( rule__STStatement__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }
                    // InternalSTCoreParser.g:1401:3: ( rule__STStatement__Group_0__0 )
                    // InternalSTCoreParser.g:1401:4: rule__STStatement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1405:2: ( ( rule__STStatement__Group_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1405:2: ( ( rule__STStatement__Group_1__0 ) )
                    // InternalSTCoreParser.g:1406:3: ( rule__STStatement__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }
                    // InternalSTCoreParser.g:1407:3: ( rule__STStatement__Group_1__0 )
                    // InternalSTCoreParser.g:1407:4: rule__STStatement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives_0_0"
    // InternalSTCoreParser.g:1415:1: rule__STStatement__Alternatives_0_0 : ( ( ruleSTIfStatment ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ruleSTAssignmentStatement ) | ( ( rule__STStatement__Group_0_0_6__0 ) ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) );
    public final void rule__STStatement__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1419:1: ( ( ruleSTIfStatment ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ruleSTAssignmentStatement ) | ( ( rule__STStatement__Group_0_0_6__0 ) ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) )
            int alt5=9;
            switch ( input.LA(1) ) {
            case IF:
                {
                alt5=1;
                }
                break;
            case CASE:
                {
                alt5=2;
                }
                break;
            case FOR:
                {
                alt5=3;
                }
                break;
            case WHILE:
                {
                alt5=4;
                }
                break;
            case REPEAT:
                {
                alt5=5;
                }
                break;
            case RULE_ID:
                {
                alt5=6;
                }
                break;
            case RETURN:
                {
                alt5=7;
                }
                break;
            case CONTINUE:
                {
                alt5=8;
                }
                break;
            case EXIT:
                {
                alt5=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalSTCoreParser.g:1420:2: ( ruleSTIfStatment )
                    {
                    // InternalSTCoreParser.g:1420:2: ( ruleSTIfStatment )
                    // InternalSTCoreParser.g:1421:3: ruleSTIfStatment
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTIfStatmentParserRuleCall_0_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTIfStatment();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTIfStatmentParserRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1426:2: ( ruleSTCaseStatement )
                    {
                    // InternalSTCoreParser.g:1426:2: ( ruleSTCaseStatement )
                    // InternalSTCoreParser.g:1427:3: ruleSTCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCaseStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1432:2: ( ruleSTForStatement )
                    {
                    // InternalSTCoreParser.g:1432:2: ( ruleSTForStatement )
                    // InternalSTCoreParser.g:1433:3: ruleSTForStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTForStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1438:2: ( ruleSTWhileStatement )
                    {
                    // InternalSTCoreParser.g:1438:2: ( ruleSTWhileStatement )
                    // InternalSTCoreParser.g:1439:3: ruleSTWhileStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTWhileStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:1444:2: ( ruleSTRepeatStatement )
                    {
                    // InternalSTCoreParser.g:1444:2: ( ruleSTRepeatStatement )
                    // InternalSTCoreParser.g:1445:3: ruleSTRepeatStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTRepeatStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:1450:2: ( ruleSTAssignmentStatement )
                    {
                    // InternalSTCoreParser.g:1450:2: ( ruleSTAssignmentStatement )
                    // InternalSTCoreParser.g:1451:3: ruleSTAssignmentStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAssignmentStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTCoreParser.g:1456:2: ( ( rule__STStatement__Group_0_0_6__0 ) )
                    {
                    // InternalSTCoreParser.g:1456:2: ( ( rule__STStatement__Group_0_0_6__0 ) )
                    // InternalSTCoreParser.g:1457:3: ( rule__STStatement__Group_0_0_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_6()); 
                    }
                    // InternalSTCoreParser.g:1458:3: ( rule__STStatement__Group_0_0_6__0 )
                    // InternalSTCoreParser.g:1458:4: rule__STStatement__Group_0_0_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTCoreParser.g:1462:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    {
                    // InternalSTCoreParser.g:1462:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    // InternalSTCoreParser.g:1463:3: ( rule__STStatement__Group_0_0_7__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }
                    // InternalSTCoreParser.g:1464:3: ( rule__STStatement__Group_0_0_7__0 )
                    // InternalSTCoreParser.g:1464:4: rule__STStatement__Group_0_0_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTCoreParser.g:1468:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    {
                    // InternalSTCoreParser.g:1468:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    // InternalSTCoreParser.g:1469:3: ( rule__STStatement__Group_0_0_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }
                    // InternalSTCoreParser.g:1470:3: ( rule__STStatement__Group_0_0_8__0 )
                    // InternalSTCoreParser.g:1470:4: rule__STStatement__Group_0_0_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives_0_0"


    // $ANTLR start "rule__STSignumExpression__Alternatives"
    // InternalSTCoreParser.g:1478:1: rule__STSignumExpression__Alternatives : ( ( ruleSTLiteralExpressions ) | ( ruleSTSelectionExpression ) | ( ( rule__STSignumExpression__Group_2__0 ) ) );
    public final void rule__STSignumExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1482:1: ( ( ruleSTLiteralExpressions ) | ( ruleSTSelectionExpression ) | ( ( rule__STSignumExpression__Group_2__0 ) ) )
            int alt6=3;
            switch ( input.LA(1) ) {
            case NOT:
                {
                int LA6_1 = input.LA(2);

                if ( (LA6_1==DWORD||LA6_1==LREAL||LA6_1==LWORD||(LA6_1>=UDINT && LA6_1<=USINT)||(LA6_1>=BOOL && LA6_1<=BYTE)||LA6_1==DINT||LA6_1==LINT||(LA6_1>=REAL && LA6_1<=SINT)||LA6_1==UINT||LA6_1==WORD||LA6_1==INT||LA6_1==PlusSign||LA6_1==HyphenMinus||LA6_1==RULE_BOOL_VALUES||(LA6_1>=RULE_NON_DECIMAL && LA6_1<=RULE_INT)) ) {
                    alt6=1;
                }
                else if ( (LA6_1==LeftParenthesis||LA6_1==RULE_ID) ) {
                    alt6=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 1, input);

                    throw nvae;
                }
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case DT:
            case LD:
            case LT:
            case D:
            case T:
            case RULE_BOOL_VALUES:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_STRING:
                {
                alt6=1;
                }
                break;
            case PlusSign:
                {
                int LA6_3 = input.LA(2);

                if ( (LA6_3==RULE_INT) ) {
                    alt6=1;
                }
                else if ( (LA6_3==LeftParenthesis||LA6_3==RULE_ID) ) {
                    alt6=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 3, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA6_4 = input.LA(2);

                if ( (LA6_4==RULE_INT) ) {
                    alt6=1;
                }
                else if ( (LA6_4==LeftParenthesis||LA6_4==RULE_ID) ) {
                    alt6=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 4, input);

                    throw nvae;
                }
                }
                break;
            case LeftParenthesis:
            case RULE_ID:
                {
                alt6=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalSTCoreParser.g:1483:2: ( ruleSTLiteralExpressions )
                    {
                    // InternalSTCoreParser.g:1483:2: ( ruleSTLiteralExpressions )
                    // InternalSTCoreParser.g:1484:3: ruleSTLiteralExpressions
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSTLiteralExpressionsParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTLiteralExpressions();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSTLiteralExpressionsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1489:2: ( ruleSTSelectionExpression )
                    {
                    // InternalSTCoreParser.g:1489:2: ( ruleSTSelectionExpression )
                    // InternalSTCoreParser.g:1490:3: ruleSTSelectionExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSTSelectionExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTSelectionExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSTSelectionExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1495:2: ( ( rule__STSignumExpression__Group_2__0 ) )
                    {
                    // InternalSTCoreParser.g:1495:2: ( ( rule__STSignumExpression__Group_2__0 ) )
                    // InternalSTCoreParser.g:1496:3: ( rule__STSignumExpression__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getGroup_2()); 
                    }
                    // InternalSTCoreParser.g:1497:3: ( rule__STSignumExpression__Group_2__0 )
                    // InternalSTCoreParser.g:1497:4: rule__STSignumExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSignumExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Alternatives"


    // $ANTLR start "rule__STSelectionExpression__Alternatives_1_1"
    // InternalSTCoreParser.g:1505:1: rule__STSelectionExpression__Alternatives_1_1 : ( ( ( rule__STSelectionExpression__Group_1_1_0__0 ) ) | ( ( rule__STSelectionExpression__Group_1_1_1__0 ) ) );
    public final void rule__STSelectionExpression__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1509:1: ( ( ( rule__STSelectionExpression__Group_1_1_0__0 ) ) | ( ( rule__STSelectionExpression__Group_1_1_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==FullStop) ) {
                alt7=1;
            }
            else if ( (LA7_0==LeftSquareBracket) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalSTCoreParser.g:1510:2: ( ( rule__STSelectionExpression__Group_1_1_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1510:2: ( ( rule__STSelectionExpression__Group_1_1_0__0 ) )
                    // InternalSTCoreParser.g:1511:3: ( rule__STSelectionExpression__Group_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_0()); 
                    }
                    // InternalSTCoreParser.g:1512:3: ( rule__STSelectionExpression__Group_1_1_0__0 )
                    // InternalSTCoreParser.g:1512:4: rule__STSelectionExpression__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1516:2: ( ( rule__STSelectionExpression__Group_1_1_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1516:2: ( ( rule__STSelectionExpression__Group_1_1_1__0 ) )
                    // InternalSTCoreParser.g:1517:3: ( rule__STSelectionExpression__Group_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1()); 
                    }
                    // InternalSTCoreParser.g:1518:3: ( rule__STSelectionExpression__Group_1_1_1__0 )
                    // InternalSTCoreParser.g:1518:4: rule__STSelectionExpression__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Alternatives_1_1"


    // $ANTLR start "rule__STAtomicExpression__Alternatives"
    // InternalSTCoreParser.g:1526:1: rule__STAtomicExpression__Alternatives : ( ( ( rule__STAtomicExpression__Group_0__0 ) ) | ( ( rule__STAtomicExpression__Group_1__0 ) ) );
    public final void rule__STAtomicExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1530:1: ( ( ( rule__STAtomicExpression__Group_0__0 ) ) | ( ( rule__STAtomicExpression__Group_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==LeftParenthesis) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_ID) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSTCoreParser.g:1531:2: ( ( rule__STAtomicExpression__Group_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1531:2: ( ( rule__STAtomicExpression__Group_0__0 ) )
                    // InternalSTCoreParser.g:1532:3: ( rule__STAtomicExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_0()); 
                    }
                    // InternalSTCoreParser.g:1533:3: ( rule__STAtomicExpression__Group_0__0 )
                    // InternalSTCoreParser.g:1533:4: rule__STAtomicExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1537:2: ( ( rule__STAtomicExpression__Group_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1537:2: ( ( rule__STAtomicExpression__Group_1__0 ) )
                    // InternalSTCoreParser.g:1538:3: ( rule__STAtomicExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1()); 
                    }
                    // InternalSTCoreParser.g:1539:3: ( rule__STAtomicExpression__Group_1__0 )
                    // InternalSTCoreParser.g:1539:4: rule__STAtomicExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Alternatives"


    // $ANTLR start "rule__STLiteralExpressions__Alternatives"
    // InternalSTCoreParser.g:1547:1: rule__STLiteralExpressions__Alternatives : ( ( ( rule__STLiteralExpressions__Group_0__0 ) ) | ( ( rule__STLiteralExpressions__Group_1__0 ) ) | ( ( rule__STLiteralExpressions__Group_2__0 ) ) | ( ( rule__STLiteralExpressions__Group_3__0 ) ) | ( ( rule__STLiteralExpressions__Group_4__0 ) ) | ( ( rule__STLiteralExpressions__Group_5__0 ) ) | ( ( rule__STLiteralExpressions__Group_6__0 ) ) );
    public final void rule__STLiteralExpressions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1551:1: ( ( ( rule__STLiteralExpressions__Group_0__0 ) ) | ( ( rule__STLiteralExpressions__Group_1__0 ) ) | ( ( rule__STLiteralExpressions__Group_2__0 ) ) | ( ( rule__STLiteralExpressions__Group_3__0 ) ) | ( ( rule__STLiteralExpressions__Group_4__0 ) ) | ( ( rule__STLiteralExpressions__Group_5__0 ) ) | ( ( rule__STLiteralExpressions__Group_6__0 ) ) )
            int alt9=7;
            switch ( input.LA(1) ) {
            case NOT:
                {
                int LA9_1 = input.LA(2);

                if ( (LA9_1==BOOL||LA9_1==RULE_BOOL_VALUES) ) {
                    alt9=1;
                }
                else if ( (LA9_1==DWORD||LA9_1==LREAL||LA9_1==LWORD||(LA9_1>=UDINT && LA9_1<=USINT)||LA9_1==BYTE||LA9_1==DINT||LA9_1==LINT||(LA9_1>=REAL && LA9_1<=SINT)||LA9_1==UINT||LA9_1==WORD||LA9_1==INT||LA9_1==PlusSign||LA9_1==HyphenMinus||(LA9_1>=RULE_NON_DECIMAL && LA9_1<=RULE_INT)) ) {
                    alt9=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 1, input);

                    throw nvae;
                }
                }
                break;
            case BOOL:
            case RULE_BOOL_VALUES:
                {
                alt9=1;
                }
                break;
            case DWORD:
            case LREAL:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case BYTE:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case UINT:
            case WORD:
            case INT:
            case PlusSign:
            case HyphenMinus:
            case RULE_NON_DECIMAL:
            case RULE_INT:
                {
                alt9=2;
                }
                break;
            case LDATE:
            case DATE:
            case LD:
            case D:
                {
                alt9=3;
                }
                break;
            case LTIME:
            case TIME:
            case LT:
            case T:
                {
                alt9=4;
                }
                break;
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt9=5;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt9=6;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
            case RULE_STRING:
                {
                alt9=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalSTCoreParser.g:1552:2: ( ( rule__STLiteralExpressions__Group_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1552:2: ( ( rule__STLiteralExpressions__Group_0__0 ) )
                    // InternalSTCoreParser.g:1553:3: ( rule__STLiteralExpressions__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_0()); 
                    }
                    // InternalSTCoreParser.g:1554:3: ( rule__STLiteralExpressions__Group_0__0 )
                    // InternalSTCoreParser.g:1554:4: rule__STLiteralExpressions__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1558:2: ( ( rule__STLiteralExpressions__Group_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1558:2: ( ( rule__STLiteralExpressions__Group_1__0 ) )
                    // InternalSTCoreParser.g:1559:3: ( rule__STLiteralExpressions__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_1()); 
                    }
                    // InternalSTCoreParser.g:1560:3: ( rule__STLiteralExpressions__Group_1__0 )
                    // InternalSTCoreParser.g:1560:4: rule__STLiteralExpressions__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1564:2: ( ( rule__STLiteralExpressions__Group_2__0 ) )
                    {
                    // InternalSTCoreParser.g:1564:2: ( ( rule__STLiteralExpressions__Group_2__0 ) )
                    // InternalSTCoreParser.g:1565:3: ( rule__STLiteralExpressions__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_2()); 
                    }
                    // InternalSTCoreParser.g:1566:3: ( rule__STLiteralExpressions__Group_2__0 )
                    // InternalSTCoreParser.g:1566:4: rule__STLiteralExpressions__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1570:2: ( ( rule__STLiteralExpressions__Group_3__0 ) )
                    {
                    // InternalSTCoreParser.g:1570:2: ( ( rule__STLiteralExpressions__Group_3__0 ) )
                    // InternalSTCoreParser.g:1571:3: ( rule__STLiteralExpressions__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_3()); 
                    }
                    // InternalSTCoreParser.g:1572:3: ( rule__STLiteralExpressions__Group_3__0 )
                    // InternalSTCoreParser.g:1572:4: rule__STLiteralExpressions__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:1576:2: ( ( rule__STLiteralExpressions__Group_4__0 ) )
                    {
                    // InternalSTCoreParser.g:1576:2: ( ( rule__STLiteralExpressions__Group_4__0 ) )
                    // InternalSTCoreParser.g:1577:3: ( rule__STLiteralExpressions__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_4()); 
                    }
                    // InternalSTCoreParser.g:1578:3: ( rule__STLiteralExpressions__Group_4__0 )
                    // InternalSTCoreParser.g:1578:4: rule__STLiteralExpressions__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:1582:2: ( ( rule__STLiteralExpressions__Group_5__0 ) )
                    {
                    // InternalSTCoreParser.g:1582:2: ( ( rule__STLiteralExpressions__Group_5__0 ) )
                    // InternalSTCoreParser.g:1583:3: ( rule__STLiteralExpressions__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_5()); 
                    }
                    // InternalSTCoreParser.g:1584:3: ( rule__STLiteralExpressions__Group_5__0 )
                    // InternalSTCoreParser.g:1584:4: rule__STLiteralExpressions__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTCoreParser.g:1588:2: ( ( rule__STLiteralExpressions__Group_6__0 ) )
                    {
                    // InternalSTCoreParser.g:1588:2: ( ( rule__STLiteralExpressions__Group_6__0 ) )
                    // InternalSTCoreParser.g:1589:3: ( rule__STLiteralExpressions__Group_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_6()); 
                    }
                    // InternalSTCoreParser.g:1590:3: ( rule__STLiteralExpressions__Group_6__0 )
                    // InternalSTCoreParser.g:1590:4: rule__STLiteralExpressions__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Alternatives"


    // $ANTLR start "rule__NUMERIC_LITERAL__KeywordAlternatives_1_0"
    // InternalSTCoreParser.g:1598:1: rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 : ( ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) | ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) );
    public final void rule__NUMERIC_LITERAL__KeywordAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1602:1: ( ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) | ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) )
            int alt10=14;
            switch ( input.LA(1) ) {
            case BYTE:
                {
                alt10=1;
                }
                break;
            case WORD:
                {
                alt10=2;
                }
                break;
            case DWORD:
                {
                alt10=3;
                }
                break;
            case LWORD:
                {
                alt10=4;
                }
                break;
            case SINT:
                {
                alt10=5;
                }
                break;
            case INT:
                {
                alt10=6;
                }
                break;
            case DINT:
                {
                alt10=7;
                }
                break;
            case LINT:
                {
                alt10=8;
                }
                break;
            case USINT:
                {
                alt10=9;
                }
                break;
            case UINT:
                {
                alt10=10;
                }
                break;
            case UDINT:
                {
                alt10=11;
                }
                break;
            case ULINT:
                {
                alt10=12;
                }
                break;
            case REAL:
                {
                alt10=13;
                }
                break;
            case LREAL:
                {
                alt10=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalSTCoreParser.g:1603:2: ( BYTE )
                    {
                    // InternalSTCoreParser.g:1603:2: ( BYTE )
                    // InternalSTCoreParser.g:1604:3: BYTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBYTEKeyword_1_0_0()); 
                    }
                    match(input,BYTE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBYTEKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1609:2: ( WORD )
                    {
                    // InternalSTCoreParser.g:1609:2: ( WORD )
                    // InternalSTCoreParser.g:1610:3: WORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordWORDKeyword_1_0_1()); 
                    }
                    match(input,WORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordWORDKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1615:2: ( DWORD )
                    {
                    // InternalSTCoreParser.g:1615:2: ( DWORD )
                    // InternalSTCoreParser.g:1616:3: DWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDWORDKeyword_1_0_2()); 
                    }
                    match(input,DWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDWORDKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1621:2: ( LWORD )
                    {
                    // InternalSTCoreParser.g:1621:2: ( LWORD )
                    // InternalSTCoreParser.g:1622:3: LWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLWORDKeyword_1_0_3()); 
                    }
                    match(input,LWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLWORDKeyword_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:1627:2: ( SINT )
                    {
                    // InternalSTCoreParser.g:1627:2: ( SINT )
                    // InternalSTCoreParser.g:1628:3: SINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordSINTKeyword_1_0_4()); 
                    }
                    match(input,SINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordSINTKeyword_1_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:1633:2: ( INT )
                    {
                    // InternalSTCoreParser.g:1633:2: ( INT )
                    // InternalSTCoreParser.g:1634:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordINTKeyword_1_0_5()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordINTKeyword_1_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTCoreParser.g:1639:2: ( DINT )
                    {
                    // InternalSTCoreParser.g:1639:2: ( DINT )
                    // InternalSTCoreParser.g:1640:3: DINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDINTKeyword_1_0_6()); 
                    }
                    match(input,DINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDINTKeyword_1_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTCoreParser.g:1645:2: ( LINT )
                    {
                    // InternalSTCoreParser.g:1645:2: ( LINT )
                    // InternalSTCoreParser.g:1646:3: LINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLINTKeyword_1_0_7()); 
                    }
                    match(input,LINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLINTKeyword_1_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTCoreParser.g:1651:2: ( USINT )
                    {
                    // InternalSTCoreParser.g:1651:2: ( USINT )
                    // InternalSTCoreParser.g:1652:3: USINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUSINTKeyword_1_0_8()); 
                    }
                    match(input,USINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUSINTKeyword_1_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTCoreParser.g:1657:2: ( UINT )
                    {
                    // InternalSTCoreParser.g:1657:2: ( UINT )
                    // InternalSTCoreParser.g:1658:3: UINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUINTKeyword_1_0_9()); 
                    }
                    match(input,UINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUINTKeyword_1_0_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSTCoreParser.g:1663:2: ( UDINT )
                    {
                    // InternalSTCoreParser.g:1663:2: ( UDINT )
                    // InternalSTCoreParser.g:1664:3: UDINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUDINTKeyword_1_0_10()); 
                    }
                    match(input,UDINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUDINTKeyword_1_0_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSTCoreParser.g:1669:2: ( ULINT )
                    {
                    // InternalSTCoreParser.g:1669:2: ( ULINT )
                    // InternalSTCoreParser.g:1670:3: ULINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordULINTKeyword_1_0_11()); 
                    }
                    match(input,ULINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordULINTKeyword_1_0_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSTCoreParser.g:1675:2: ( REAL )
                    {
                    // InternalSTCoreParser.g:1675:2: ( REAL )
                    // InternalSTCoreParser.g:1676:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordREALKeyword_1_0_12()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordREALKeyword_1_0_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSTCoreParser.g:1681:2: ( LREAL )
                    {
                    // InternalSTCoreParser.g:1681:2: ( LREAL )
                    // InternalSTCoreParser.g:1682:3: LREAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLREALKeyword_1_0_13()); 
                    }
                    match(input,LREAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLREALKeyword_1_0_13()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__KeywordAlternatives_1_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__Alternatives_2"
    // InternalSTCoreParser.g:1691:1: rule__NUMERIC_LITERAL__Alternatives_2 : ( ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) ) | ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) ) | ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) ) );
    public final void rule__NUMERIC_LITERAL__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1695:1: ( ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) ) | ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) ) | ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) ) )
            int alt11=3;
            switch ( input.LA(1) ) {
            case PlusSign:
                {
                int LA11_1 = input.LA(2);

                if ( (LA11_1==RULE_INT) ) {
                    int LA11_3 = input.LA(3);

                    if ( (LA11_3==FullStop) ) {
                        alt11=2;
                    }
                    else if ( (LA11_3==EOF||LA11_3==END_REPEAT||LA11_3==THEN||LA11_3==AND||LA11_3==MOD||(LA11_3>=XOR && LA11_3<=FullStopFullStop)||(LA11_3>=LessThanSignEqualsSign && LA11_3<=GreaterThanSignEqualsSign)||LA11_3==BY||LA11_3==DO||(LA11_3>=OF && LA11_3<=OR)||LA11_3==TO||(LA11_3>=Ampersand && LA11_3<=HyphenMinus)||(LA11_3>=Solidus && LA11_3<=GreaterThanSign)||LA11_3==RightSquareBracket) ) {
                        alt11=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 1, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA11_2 = input.LA(2);

                if ( (LA11_2==RULE_INT) ) {
                    int LA11_3 = input.LA(3);

                    if ( (LA11_3==FullStop) ) {
                        alt11=2;
                    }
                    else if ( (LA11_3==EOF||LA11_3==END_REPEAT||LA11_3==THEN||LA11_3==AND||LA11_3==MOD||(LA11_3>=XOR && LA11_3<=FullStopFullStop)||(LA11_3>=LessThanSignEqualsSign && LA11_3<=GreaterThanSignEqualsSign)||LA11_3==BY||LA11_3==DO||(LA11_3>=OF && LA11_3<=OR)||LA11_3==TO||(LA11_3>=Ampersand && LA11_3<=HyphenMinus)||(LA11_3>=Solidus && LA11_3<=GreaterThanSign)||LA11_3==RightSquareBracket) ) {
                        alt11=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                int LA11_3 = input.LA(2);

                if ( (LA11_3==FullStop) ) {
                    alt11=2;
                }
                else if ( (LA11_3==EOF||LA11_3==END_REPEAT||LA11_3==THEN||LA11_3==AND||LA11_3==MOD||(LA11_3>=XOR && LA11_3<=FullStopFullStop)||(LA11_3>=LessThanSignEqualsSign && LA11_3<=GreaterThanSignEqualsSign)||LA11_3==BY||LA11_3==DO||(LA11_3>=OF && LA11_3<=OR)||LA11_3==TO||(LA11_3>=Ampersand && LA11_3<=HyphenMinus)||(LA11_3>=Solidus && LA11_3<=GreaterThanSign)||LA11_3==RightSquareBracket) ) {
                    alt11=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NON_DECIMAL:
                {
                alt11=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalSTCoreParser.g:1696:2: ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) )
                    {
                    // InternalSTCoreParser.g:1696:2: ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) )
                    // InternalSTCoreParser.g:1697:3: ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getIntValueAssignment_2_0()); 
                    }
                    // InternalSTCoreParser.g:1698:3: ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 )
                    // InternalSTCoreParser.g:1698:4: rule__NUMERIC_LITERAL__IntValueAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__IntValueAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getIntValueAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1702:2: ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) )
                    {
                    // InternalSTCoreParser.g:1702:2: ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) )
                    // InternalSTCoreParser.g:1703:3: ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getRealValueAssignment_2_1()); 
                    }
                    // InternalSTCoreParser.g:1704:3: ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 )
                    // InternalSTCoreParser.g:1704:4: rule__NUMERIC_LITERAL__RealValueAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__RealValueAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getRealValueAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1708:2: ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) )
                    {
                    // InternalSTCoreParser.g:1708:2: ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) )
                    // InternalSTCoreParser.g:1709:3: ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getHexValueAssignment_2_2()); 
                    }
                    // InternalSTCoreParser.g:1710:3: ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 )
                    // InternalSTCoreParser.g:1710:4: rule__NUMERIC_LITERAL__HexValueAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__HexValueAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getHexValueAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Alternatives_2"


    // $ANTLR start "rule__DATE_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1718:1: rule__DATE_LITERAL__KeywordAlternatives_0_0 : ( ( DATE ) | ( LDATE ) | ( D ) | ( LD ) );
    public final void rule__DATE_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1722:1: ( ( DATE ) | ( LDATE ) | ( D ) | ( LD ) )
            int alt12=4;
            switch ( input.LA(1) ) {
            case DATE:
                {
                alt12=1;
                }
                break;
            case LDATE:
                {
                alt12=2;
                }
                break;
            case D:
                {
                alt12=3;
                }
                break;
            case LD:
                {
                alt12=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalSTCoreParser.g:1723:2: ( DATE )
                    {
                    // InternalSTCoreParser.g:1723:2: ( DATE )
                    // InternalSTCoreParser.g:1724:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordDATEKeyword_0_0_0()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordDATEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1729:2: ( LDATE )
                    {
                    // InternalSTCoreParser.g:1729:2: ( LDATE )
                    // InternalSTCoreParser.g:1730:3: LDATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordLDATEKeyword_0_0_1()); 
                    }
                    match(input,LDATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordLDATEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1735:2: ( D )
                    {
                    // InternalSTCoreParser.g:1735:2: ( D )
                    // InternalSTCoreParser.g:1736:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordDKeyword_0_0_2()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordDKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1741:2: ( LD )
                    {
                    // InternalSTCoreParser.g:1741:2: ( LD )
                    // InternalSTCoreParser.g:1742:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordLDKeyword_0_0_3()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordLDKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__TIME_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1751:1: rule__TIME_LITERAL__KeywordAlternatives_0_0 : ( ( TIME ) | ( LTIME ) | ( T ) | ( LT ) );
    public final void rule__TIME_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1755:1: ( ( TIME ) | ( LTIME ) | ( T ) | ( LT ) )
            int alt13=4;
            switch ( input.LA(1) ) {
            case TIME:
                {
                alt13=1;
                }
                break;
            case LTIME:
                {
                alt13=2;
                }
                break;
            case T:
                {
                alt13=3;
                }
                break;
            case LT:
                {
                alt13=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSTCoreParser.g:1756:2: ( TIME )
                    {
                    // InternalSTCoreParser.g:1756:2: ( TIME )
                    // InternalSTCoreParser.g:1757:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordTIMEKeyword_0_0_0()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordTIMEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1762:2: ( LTIME )
                    {
                    // InternalSTCoreParser.g:1762:2: ( LTIME )
                    // InternalSTCoreParser.g:1763:3: LTIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordLTIMEKeyword_0_0_1()); 
                    }
                    match(input,LTIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordLTIMEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1768:2: ( T )
                    {
                    // InternalSTCoreParser.g:1768:2: ( T )
                    // InternalSTCoreParser.g:1769:3: T
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordTKeyword_0_0_2()); 
                    }
                    match(input,T,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordTKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1774:2: ( LT )
                    {
                    // InternalSTCoreParser.g:1774:2: ( LT )
                    // InternalSTCoreParser.g:1775:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordLTKeyword_0_0_3()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordLTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1784:1: rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 : ( ( TIME_OF_DAY ) | ( TOD ) | ( LTOD ) );
    public final void rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1788:1: ( ( TIME_OF_DAY ) | ( TOD ) | ( LTOD ) )
            int alt14=3;
            switch ( input.LA(1) ) {
            case TIME_OF_DAY:
                {
                alt14=1;
                }
                break;
            case TOD:
                {
                alt14=2;
                }
                break;
            case LTOD:
                {
                alt14=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalSTCoreParser.g:1789:2: ( TIME_OF_DAY )
                    {
                    // InternalSTCoreParser.g:1789:2: ( TIME_OF_DAY )
                    // InternalSTCoreParser.g:1790:3: TIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTIME_OF_DAYKeyword_0_0_0()); 
                    }
                    match(input,TIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTIME_OF_DAYKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1795:2: ( TOD )
                    {
                    // InternalSTCoreParser.g:1795:2: ( TOD )
                    // InternalSTCoreParser.g:1796:3: TOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTODKeyword_0_0_1()); 
                    }
                    match(input,TOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTODKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1801:2: ( LTOD )
                    {
                    // InternalSTCoreParser.g:1801:2: ( LTOD )
                    // InternalSTCoreParser.g:1802:3: LTOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordLTODKeyword_0_0_2()); 
                    }
                    match(input,LTOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordLTODKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1811:1: rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 : ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) );
    public final void rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1815:1: ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) )
            int alt15=4;
            switch ( input.LA(1) ) {
            case DATE_AND_TIME:
                {
                alt15=1;
                }
                break;
            case LDATE_AND_TIME:
                {
                alt15=2;
                }
                break;
            case DT:
                {
                alt15=3;
                }
                break;
            case LDT:
                {
                alt15=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalSTCoreParser.g:1816:2: ( DATE_AND_TIME )
                    {
                    // InternalSTCoreParser.g:1816:2: ( DATE_AND_TIME )
                    // InternalSTCoreParser.g:1817:3: DATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDATE_AND_TIMEKeyword_0_0_0()); 
                    }
                    match(input,DATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDATE_AND_TIMEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1822:2: ( LDATE_AND_TIME )
                    {
                    // InternalSTCoreParser.g:1822:2: ( LDATE_AND_TIME )
                    // InternalSTCoreParser.g:1823:3: LDATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDATE_AND_TIMEKeyword_0_0_1()); 
                    }
                    match(input,LDATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDATE_AND_TIMEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1828:2: ( DT )
                    {
                    // InternalSTCoreParser.g:1828:2: ( DT )
                    // InternalSTCoreParser.g:1829:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDTKeyword_0_0_2()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDTKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1834:2: ( LDT )
                    {
                    // InternalSTCoreParser.g:1834:2: ( LDT )
                    // InternalSTCoreParser.g:1835:3: LDT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDTKeyword_0_0_3()); 
                    }
                    match(input,LDT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__STRING_LITERAL__Alternatives_0"
    // InternalSTCoreParser.g:1844:1: rule__STRING_LITERAL__Alternatives_0 : ( ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) );
    public final void rule__STRING_LITERAL__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1848:1: ( ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) )
            int alt16=4;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt16=1;
                }
                break;
            case WSTRING:
                {
                alt16=2;
                }
                break;
            case CHAR:
                {
                alt16=3;
                }
                break;
            case WCHAR:
                {
                alt16=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalSTCoreParser.g:1849:2: ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) )
                    {
                    // InternalSTCoreParser.g:1849:2: ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) )
                    // InternalSTCoreParser.g:1850:3: ( rule__STRING_LITERAL__KeywordAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getKeywordAssignment_0_0()); 
                    }
                    // InternalSTCoreParser.g:1851:3: ( rule__STRING_LITERAL__KeywordAssignment_0_0 )
                    // InternalSTCoreParser.g:1851:4: rule__STRING_LITERAL__KeywordAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STRING_LITERAL__KeywordAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getKeywordAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1855:2: ( WSTRING )
                    {
                    // InternalSTCoreParser.g:1855:2: ( WSTRING )
                    // InternalSTCoreParser.g:1856:3: WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getWSTRINGKeyword_0_1()); 
                    }
                    match(input,WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getWSTRINGKeyword_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1861:2: ( CHAR )
                    {
                    // InternalSTCoreParser.g:1861:2: ( CHAR )
                    // InternalSTCoreParser.g:1862:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getCHARKeyword_0_2()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getCHARKeyword_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1867:2: ( WCHAR )
                    {
                    // InternalSTCoreParser.g:1867:2: ( WCHAR )
                    // InternalSTCoreParser.g:1868:3: WCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getWCHARKeyword_0_3()); 
                    }
                    match(input,WCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getWCHARKeyword_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Alternatives_0"


    // $ANTLR start "rule__INTEGER__Alternatives_0"
    // InternalSTCoreParser.g:1877:1: rule__INTEGER__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__INTEGER__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1881:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==PlusSign) ) {
                alt17=1;
            }
            else if ( (LA17_0==HyphenMinus) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalSTCoreParser.g:1882:2: ( PlusSign )
                    {
                    // InternalSTCoreParser.g:1882:2: ( PlusSign )
                    // InternalSTCoreParser.g:1883:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getINTEGERAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getINTEGERAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1888:2: ( HyphenMinus )
                    {
                    // InternalSTCoreParser.g:1888:2: ( HyphenMinus )
                    // InternalSTCoreParser.g:1889:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getINTEGERAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getINTEGERAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Alternatives_0"


    // $ANTLR start "rule__REAL__Alternatives_2"
    // InternalSTCoreParser.g:1898:1: rule__REAL__Alternatives_2 : ( ( RULE_EXT_INT ) | ( RULE_INT ) );
    public final void rule__REAL__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1902:1: ( ( RULE_EXT_INT ) | ( RULE_INT ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_EXT_INT) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_INT) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSTCoreParser.g:1903:2: ( RULE_EXT_INT )
                    {
                    // InternalSTCoreParser.g:1903:2: ( RULE_EXT_INT )
                    // InternalSTCoreParser.g:1904:3: RULE_EXT_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_EXT_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1909:2: ( RULE_INT )
                    {
                    // InternalSTCoreParser.g:1909:2: ( RULE_INT )
                    // InternalSTCoreParser.g:1910:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Alternatives_2"


    // $ANTLR start "rule__AndOperator__Alternatives"
    // InternalSTCoreParser.g:1919:1: rule__AndOperator__Alternatives : ( ( ( AND ) ) | ( ( Ampersand ) ) );
    public final void rule__AndOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1923:1: ( ( ( AND ) ) | ( ( Ampersand ) ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==AND) ) {
                alt19=1;
            }
            else if ( (LA19_0==Ampersand) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalSTCoreParser.g:1924:2: ( ( AND ) )
                    {
                    // InternalSTCoreParser.g:1924:2: ( ( AND ) )
                    // InternalSTCoreParser.g:1925:3: ( AND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:1926:3: ( AND )
                    // InternalSTCoreParser.g:1926:4: AND
                    {
                    match(input,AND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1930:2: ( ( Ampersand ) )
                    {
                    // InternalSTCoreParser.g:1930:2: ( ( Ampersand ) )
                    // InternalSTCoreParser.g:1931:3: ( Ampersand )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:1932:3: ( Ampersand )
                    // InternalSTCoreParser.g:1932:4: Ampersand
                    {
                    match(input,Ampersand,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndOperator__Alternatives"


    // $ANTLR start "rule__EqualityOperator__Alternatives"
    // InternalSTCoreParser.g:1940:1: rule__EqualityOperator__Alternatives : ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) );
    public final void rule__EqualityOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1944:1: ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==EqualsSign) ) {
                alt20=1;
            }
            else if ( (LA20_0==LessThanSignGreaterThanSign) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalSTCoreParser.g:1945:2: ( ( EqualsSign ) )
                    {
                    // InternalSTCoreParser.g:1945:2: ( ( EqualsSign ) )
                    // InternalSTCoreParser.g:1946:3: ( EqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:1947:3: ( EqualsSign )
                    // InternalSTCoreParser.g:1947:4: EqualsSign
                    {
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1951:2: ( ( LessThanSignGreaterThanSign ) )
                    {
                    // InternalSTCoreParser.g:1951:2: ( ( LessThanSignGreaterThanSign ) )
                    // InternalSTCoreParser.g:1952:3: ( LessThanSignGreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:1953:3: ( LessThanSignGreaterThanSign )
                    // InternalSTCoreParser.g:1953:4: LessThanSignGreaterThanSign
                    {
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityOperator__Alternatives"


    // $ANTLR start "rule__CompareOperator__Alternatives"
    // InternalSTCoreParser.g:1961:1: rule__CompareOperator__Alternatives : ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) );
    public final void rule__CompareOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1965:1: ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) )
            int alt21=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt21=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt21=2;
                }
                break;
            case GreaterThanSign:
                {
                alt21=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt21=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalSTCoreParser.g:1966:2: ( ( LessThanSign ) )
                    {
                    // InternalSTCoreParser.g:1966:2: ( ( LessThanSign ) )
                    // InternalSTCoreParser.g:1967:3: ( LessThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:1968:3: ( LessThanSign )
                    // InternalSTCoreParser.g:1968:4: LessThanSign
                    {
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1972:2: ( ( LessThanSignEqualsSign ) )
                    {
                    // InternalSTCoreParser.g:1972:2: ( ( LessThanSignEqualsSign ) )
                    // InternalSTCoreParser.g:1973:3: ( LessThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:1974:3: ( LessThanSignEqualsSign )
                    // InternalSTCoreParser.g:1974:4: LessThanSignEqualsSign
                    {
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1978:2: ( ( GreaterThanSign ) )
                    {
                    // InternalSTCoreParser.g:1978:2: ( ( GreaterThanSign ) )
                    // InternalSTCoreParser.g:1979:3: ( GreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:1980:3: ( GreaterThanSign )
                    // InternalSTCoreParser.g:1980:4: GreaterThanSign
                    {
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1984:2: ( ( GreaterThanSignEqualsSign ) )
                    {
                    // InternalSTCoreParser.g:1984:2: ( ( GreaterThanSignEqualsSign ) )
                    // InternalSTCoreParser.g:1985:3: ( GreaterThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTCoreParser.g:1986:3: ( GreaterThanSignEqualsSign )
                    // InternalSTCoreParser.g:1986:4: GreaterThanSignEqualsSign
                    {
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperator__Alternatives"


    // $ANTLR start "rule__AddSubOperator__Alternatives"
    // InternalSTCoreParser.g:1994:1: rule__AddSubOperator__Alternatives : ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) );
    public final void rule__AddSubOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1998:1: ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==PlusSign) ) {
                alt22=1;
            }
            else if ( (LA22_0==HyphenMinus) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalSTCoreParser.g:1999:2: ( ( PlusSign ) )
                    {
                    // InternalSTCoreParser.g:1999:2: ( ( PlusSign ) )
                    // InternalSTCoreParser.g:2000:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2001:3: ( PlusSign )
                    // InternalSTCoreParser.g:2001:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2005:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTCoreParser.g:2005:2: ( ( HyphenMinus ) )
                    // InternalSTCoreParser.g:2006:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2007:3: ( HyphenMinus )
                    // InternalSTCoreParser.g:2007:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddSubOperator__Alternatives"


    // $ANTLR start "rule__MulDivModOperator__Alternatives"
    // InternalSTCoreParser.g:2015:1: rule__MulDivModOperator__Alternatives : ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) );
    public final void rule__MulDivModOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2019:1: ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) )
            int alt23=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt23=1;
                }
                break;
            case Solidus:
                {
                alt23=2;
                }
                break;
            case MOD:
                {
                alt23=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalSTCoreParser.g:2020:2: ( ( Asterisk ) )
                    {
                    // InternalSTCoreParser.g:2020:2: ( ( Asterisk ) )
                    // InternalSTCoreParser.g:2021:3: ( Asterisk )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2022:3: ( Asterisk )
                    // InternalSTCoreParser.g:2022:4: Asterisk
                    {
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2026:2: ( ( Solidus ) )
                    {
                    // InternalSTCoreParser.g:2026:2: ( ( Solidus ) )
                    // InternalSTCoreParser.g:2027:3: ( Solidus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2028:3: ( Solidus )
                    // InternalSTCoreParser.g:2028:4: Solidus
                    {
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:2032:2: ( ( MOD ) )
                    {
                    // InternalSTCoreParser.g:2032:2: ( ( MOD ) )
                    // InternalSTCoreParser.g:2033:3: ( MOD )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:2034:3: ( MOD )
                    // InternalSTCoreParser.g:2034:4: MOD
                    {
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulDivModOperator__Alternatives"


    // $ANTLR start "rule__UnaryOperator__Alternatives"
    // InternalSTCoreParser.g:2042:1: rule__UnaryOperator__Alternatives : ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) );
    public final void rule__UnaryOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2046:1: ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case HyphenMinus:
                {
                alt24=1;
                }
                break;
            case PlusSign:
                {
                alt24=2;
                }
                break;
            case NOT:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSTCoreParser.g:2047:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTCoreParser.g:2047:2: ( ( HyphenMinus ) )
                    // InternalSTCoreParser.g:2048:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2049:3: ( HyphenMinus )
                    // InternalSTCoreParser.g:2049:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2053:2: ( ( PlusSign ) )
                    {
                    // InternalSTCoreParser.g:2053:2: ( ( PlusSign ) )
                    // InternalSTCoreParser.g:2054:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2055:3: ( PlusSign )
                    // InternalSTCoreParser.g:2055:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:2059:2: ( ( NOT ) )
                    {
                    // InternalSTCoreParser.g:2059:2: ( ( NOT ) )
                    // InternalSTCoreParser.g:2060:3: ( NOT )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:2061:3: ( NOT )
                    // InternalSTCoreParser.g:2061:4: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOperator__Alternatives"


    // $ANTLR start "rule__MultiBitAccessSpecifier__Alternatives"
    // InternalSTCoreParser.g:2069:1: rule__MultiBitAccessSpecifier__Alternatives : ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) | ( ( FullStop ) ) );
    public final void rule__MultiBitAccessSpecifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2073:1: ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) | ( ( FullStop ) ) )
            int alt25=6;
            switch ( input.LA(1) ) {
            case L:
                {
                alt25=1;
                }
                break;
            case D_1:
                {
                alt25=2;
                }
                break;
            case W:
                {
                alt25=3;
                }
                break;
            case B:
                {
                alt25=4;
                }
                break;
            case X:
                {
                alt25=5;
                }
                break;
            case FullStop:
                {
                alt25=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalSTCoreParser.g:2074:2: ( ( L ) )
                    {
                    // InternalSTCoreParser.g:2074:2: ( ( L ) )
                    // InternalSTCoreParser.g:2075:3: ( L )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getLwordAccessEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2076:3: ( L )
                    // InternalSTCoreParser.g:2076:4: L
                    {
                    match(input,L,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getLwordAccessEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2080:2: ( ( D_1 ) )
                    {
                    // InternalSTCoreParser.g:2080:2: ( ( D_1 ) )
                    // InternalSTCoreParser.g:2081:3: ( D_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getDwordAccessEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2082:3: ( D_1 )
                    // InternalSTCoreParser.g:2082:4: D_1
                    {
                    match(input,D_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getDwordAccessEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:2086:2: ( ( W ) )
                    {
                    // InternalSTCoreParser.g:2086:2: ( ( W ) )
                    // InternalSTCoreParser.g:2087:3: ( W )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getWordAccessEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:2088:3: ( W )
                    // InternalSTCoreParser.g:2088:4: W
                    {
                    match(input,W,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getWordAccessEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:2092:2: ( ( B ) )
                    {
                    // InternalSTCoreParser.g:2092:2: ( ( B ) )
                    // InternalSTCoreParser.g:2093:3: ( B )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getByteAccessEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTCoreParser.g:2094:3: ( B )
                    // InternalSTCoreParser.g:2094:4: B
                    {
                    match(input,B,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getByteAccessEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:2098:2: ( ( X ) )
                    {
                    // InternalSTCoreParser.g:2098:2: ( ( X ) )
                    // InternalSTCoreParser.g:2099:3: ( X )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessEnumLiteralDeclaration_4()); 
                    }
                    // InternalSTCoreParser.g:2100:3: ( X )
                    // InternalSTCoreParser.g:2100:4: X
                    {
                    match(input,X,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:2104:2: ( ( FullStop ) )
                    {
                    // InternalSTCoreParser.g:2104:2: ( ( FullStop ) )
                    // InternalSTCoreParser.g:2105:3: ( FullStop )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessShortcutEnumLiteralDeclaration_5()); 
                    }
                    // InternalSTCoreParser.g:2106:3: ( FullStop )
                    // InternalSTCoreParser.g:2106:4: FullStop
                    {
                    match(input,FullStop,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessShortcutEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiBitAccessSpecifier__Alternatives"


    // $ANTLR start "rule__VarDeclaration__Group__0"
    // InternalSTCoreParser.g:2114:1: rule__VarDeclaration__Group__0 : rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 ;
    public final void rule__VarDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2118:1: ( rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 )
            // InternalSTCoreParser.g:2119:2: rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__VarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0"


    // $ANTLR start "rule__VarDeclaration__Group__0__Impl"
    // InternalSTCoreParser.g:2126:1: rule__VarDeclaration__Group__0__Impl : ( ( rule__VarDeclaration__NameAssignment_0 ) ) ;
    public final void rule__VarDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2130:1: ( ( ( rule__VarDeclaration__NameAssignment_0 ) ) )
            // InternalSTCoreParser.g:2131:1: ( ( rule__VarDeclaration__NameAssignment_0 ) )
            {
            // InternalSTCoreParser.g:2131:1: ( ( rule__VarDeclaration__NameAssignment_0 ) )
            // InternalSTCoreParser.g:2132:2: ( rule__VarDeclaration__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameAssignment_0()); 
            }
            // InternalSTCoreParser.g:2133:2: ( rule__VarDeclaration__NameAssignment_0 )
            // InternalSTCoreParser.g:2133:3: rule__VarDeclaration__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__1"
    // InternalSTCoreParser.g:2141:1: rule__VarDeclaration__Group__1 : rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 ;
    public final void rule__VarDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2145:1: ( rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 )
            // InternalSTCoreParser.g:2146:2: rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__VarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1"


    // $ANTLR start "rule__VarDeclaration__Group__1__Impl"
    // InternalSTCoreParser.g:2153:1: rule__VarDeclaration__Group__1__Impl : ( ( rule__VarDeclaration__Group_1__0 )? ) ;
    public final void rule__VarDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2157:1: ( ( ( rule__VarDeclaration__Group_1__0 )? ) )
            // InternalSTCoreParser.g:2158:1: ( ( rule__VarDeclaration__Group_1__0 )? )
            {
            // InternalSTCoreParser.g:2158:1: ( ( rule__VarDeclaration__Group_1__0 )? )
            // InternalSTCoreParser.g:2159:2: ( rule__VarDeclaration__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:2160:2: ( rule__VarDeclaration__Group_1__0 )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==AT) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalSTCoreParser.g:2160:3: rule__VarDeclaration__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__2"
    // InternalSTCoreParser.g:2168:1: rule__VarDeclaration__Group__2 : rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 ;
    public final void rule__VarDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2172:1: ( rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 )
            // InternalSTCoreParser.g:2173:2: rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__VarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2"


    // $ANTLR start "rule__VarDeclaration__Group__2__Impl"
    // InternalSTCoreParser.g:2180:1: rule__VarDeclaration__Group__2__Impl : ( Colon ) ;
    public final void rule__VarDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2184:1: ( ( Colon ) )
            // InternalSTCoreParser.g:2185:1: ( Colon )
            {
            // InternalSTCoreParser.g:2185:1: ( Colon )
            // InternalSTCoreParser.g:2186:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__3"
    // InternalSTCoreParser.g:2195:1: rule__VarDeclaration__Group__3 : rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 ;
    public final void rule__VarDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2199:1: ( rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 )
            // InternalSTCoreParser.g:2200:2: rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__VarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3"


    // $ANTLR start "rule__VarDeclaration__Group__3__Impl"
    // InternalSTCoreParser.g:2207:1: rule__VarDeclaration__Group__3__Impl : ( ( rule__VarDeclaration__Group_3__0 )? ) ;
    public final void rule__VarDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2211:1: ( ( ( rule__VarDeclaration__Group_3__0 )? ) )
            // InternalSTCoreParser.g:2212:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            {
            // InternalSTCoreParser.g:2212:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            // InternalSTCoreParser.g:2213:2: ( rule__VarDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }
            // InternalSTCoreParser.g:2214:2: ( rule__VarDeclaration__Group_3__0 )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==ARRAY) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalSTCoreParser.g:2214:3: rule__VarDeclaration__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__4"
    // InternalSTCoreParser.g:2222:1: rule__VarDeclaration__Group__4 : rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 ;
    public final void rule__VarDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2226:1: ( rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 )
            // InternalSTCoreParser.g:2227:2: rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4"


    // $ANTLR start "rule__VarDeclaration__Group__4__Impl"
    // InternalSTCoreParser.g:2234:1: rule__VarDeclaration__Group__4__Impl : ( ( rule__VarDeclaration__TypeAssignment_4 ) ) ;
    public final void rule__VarDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2238:1: ( ( ( rule__VarDeclaration__TypeAssignment_4 ) ) )
            // InternalSTCoreParser.g:2239:1: ( ( rule__VarDeclaration__TypeAssignment_4 ) )
            {
            // InternalSTCoreParser.g:2239:1: ( ( rule__VarDeclaration__TypeAssignment_4 ) )
            // InternalSTCoreParser.g:2240:2: ( rule__VarDeclaration__TypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_4()); 
            }
            // InternalSTCoreParser.g:2241:2: ( rule__VarDeclaration__TypeAssignment_4 )
            // InternalSTCoreParser.g:2241:3: rule__VarDeclaration__TypeAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__TypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__5"
    // InternalSTCoreParser.g:2249:1: rule__VarDeclaration__Group__5 : rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 ;
    public final void rule__VarDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2253:1: ( rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 )
            // InternalSTCoreParser.g:2254:2: rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5"


    // $ANTLR start "rule__VarDeclaration__Group__5__Impl"
    // InternalSTCoreParser.g:2261:1: rule__VarDeclaration__Group__5__Impl : ( ( rule__VarDeclaration__Group_5__0 )? ) ;
    public final void rule__VarDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2265:1: ( ( ( rule__VarDeclaration__Group_5__0 )? ) )
            // InternalSTCoreParser.g:2266:1: ( ( rule__VarDeclaration__Group_5__0 )? )
            {
            // InternalSTCoreParser.g:2266:1: ( ( rule__VarDeclaration__Group_5__0 )? )
            // InternalSTCoreParser.g:2267:2: ( rule__VarDeclaration__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_5()); 
            }
            // InternalSTCoreParser.g:2268:2: ( rule__VarDeclaration__Group_5__0 )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==LeftSquareBracket) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalSTCoreParser.g:2268:3: rule__VarDeclaration__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__6"
    // InternalSTCoreParser.g:2276:1: rule__VarDeclaration__Group__6 : rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 ;
    public final void rule__VarDeclaration__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2280:1: ( rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 )
            // InternalSTCoreParser.g:2281:2: rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6"


    // $ANTLR start "rule__VarDeclaration__Group__6__Impl"
    // InternalSTCoreParser.g:2288:1: rule__VarDeclaration__Group__6__Impl : ( ( rule__VarDeclaration__Group_6__0 )? ) ;
    public final void rule__VarDeclaration__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2292:1: ( ( ( rule__VarDeclaration__Group_6__0 )? ) )
            // InternalSTCoreParser.g:2293:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            {
            // InternalSTCoreParser.g:2293:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            // InternalSTCoreParser.g:2294:2: ( rule__VarDeclaration__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }
            // InternalSTCoreParser.g:2295:2: ( rule__VarDeclaration__Group_6__0 )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==ColonEqualsSign) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalSTCoreParser.g:2295:3: rule__VarDeclaration__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__7"
    // InternalSTCoreParser.g:2303:1: rule__VarDeclaration__Group__7 : rule__VarDeclaration__Group__7__Impl ;
    public final void rule__VarDeclaration__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2307:1: ( rule__VarDeclaration__Group__7__Impl )
            // InternalSTCoreParser.g:2308:2: rule__VarDeclaration__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7"


    // $ANTLR start "rule__VarDeclaration__Group__7__Impl"
    // InternalSTCoreParser.g:2314:1: rule__VarDeclaration__Group__7__Impl : ( Semicolon ) ;
    public final void rule__VarDeclaration__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2318:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:2319:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:2319:1: ( Semicolon )
            // InternalSTCoreParser.g:2320:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_7()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_1__0"
    // InternalSTCoreParser.g:2330:1: rule__VarDeclaration__Group_1__0 : rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1 ;
    public final void rule__VarDeclaration__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2334:1: ( rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1 )
            // InternalSTCoreParser.g:2335:2: rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__VarDeclaration__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__0"


    // $ANTLR start "rule__VarDeclaration__Group_1__0__Impl"
    // InternalSTCoreParser.g:2342:1: rule__VarDeclaration__Group_1__0__Impl : ( AT ) ;
    public final void rule__VarDeclaration__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2346:1: ( ( AT ) )
            // InternalSTCoreParser.g:2347:1: ( AT )
            {
            // InternalSTCoreParser.g:2347:1: ( AT )
            // InternalSTCoreParser.g:2348:2: AT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getATKeyword_1_0()); 
            }
            match(input,AT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getATKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_1__1"
    // InternalSTCoreParser.g:2357:1: rule__VarDeclaration__Group_1__1 : rule__VarDeclaration__Group_1__1__Impl ;
    public final void rule__VarDeclaration__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2361:1: ( rule__VarDeclaration__Group_1__1__Impl )
            // InternalSTCoreParser.g:2362:2: rule__VarDeclaration__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__1"


    // $ANTLR start "rule__VarDeclaration__Group_1__1__Impl"
    // InternalSTCoreParser.g:2368:1: rule__VarDeclaration__Group_1__1__Impl : ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) ) ;
    public final void rule__VarDeclaration__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2372:1: ( ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:2373:1: ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:2373:1: ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) )
            // InternalSTCoreParser.g:2374:2: ( rule__VarDeclaration__LocatedAtAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:2375:2: ( rule__VarDeclaration__LocatedAtAssignment_1_1 )
            // InternalSTCoreParser.g:2375:3: rule__VarDeclaration__LocatedAtAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__LocatedAtAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__0"
    // InternalSTCoreParser.g:2384:1: rule__VarDeclaration__Group_3__0 : rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 ;
    public final void rule__VarDeclaration__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2388:1: ( rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 )
            // InternalSTCoreParser.g:2389:2: rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1
            {
            pushFollow(FOLLOW_8);
            rule__VarDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0"


    // $ANTLR start "rule__VarDeclaration__Group_3__0__Impl"
    // InternalSTCoreParser.g:2396:1: rule__VarDeclaration__Group_3__0__Impl : ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) ) ;
    public final void rule__VarDeclaration__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2400:1: ( ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) ) )
            // InternalSTCoreParser.g:2401:1: ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) )
            {
            // InternalSTCoreParser.g:2401:1: ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) )
            // InternalSTCoreParser.g:2402:2: ( rule__VarDeclaration__ArrayAssignment_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayAssignment_3_0()); 
            }
            // InternalSTCoreParser.g:2403:2: ( rule__VarDeclaration__ArrayAssignment_3_0 )
            // InternalSTCoreParser.g:2403:3: rule__VarDeclaration__ArrayAssignment_3_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__ArrayAssignment_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayAssignment_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__1"
    // InternalSTCoreParser.g:2411:1: rule__VarDeclaration__Group_3__1 : rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2 ;
    public final void rule__VarDeclaration__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2415:1: ( rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2 )
            // InternalSTCoreParser.g:2416:2: rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2
            {
            pushFollow(FOLLOW_9);
            rule__VarDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1"


    // $ANTLR start "rule__VarDeclaration__Group_3__1__Impl"
    // InternalSTCoreParser.g:2423:1: rule__VarDeclaration__Group_3__1__Impl : ( ( rule__VarDeclaration__Alternatives_3_1 ) ) ;
    public final void rule__VarDeclaration__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2427:1: ( ( ( rule__VarDeclaration__Alternatives_3_1 ) ) )
            // InternalSTCoreParser.g:2428:1: ( ( rule__VarDeclaration__Alternatives_3_1 ) )
            {
            // InternalSTCoreParser.g:2428:1: ( ( rule__VarDeclaration__Alternatives_3_1 ) )
            // InternalSTCoreParser.g:2429:2: ( rule__VarDeclaration__Alternatives_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getAlternatives_3_1()); 
            }
            // InternalSTCoreParser.g:2430:2: ( rule__VarDeclaration__Alternatives_3_1 )
            // InternalSTCoreParser.g:2430:3: rule__VarDeclaration__Alternatives_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Alternatives_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getAlternatives_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__2"
    // InternalSTCoreParser.g:2438:1: rule__VarDeclaration__Group_3__2 : rule__VarDeclaration__Group_3__2__Impl ;
    public final void rule__VarDeclaration__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2442:1: ( rule__VarDeclaration__Group_3__2__Impl )
            // InternalSTCoreParser.g:2443:2: rule__VarDeclaration__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__2"


    // $ANTLR start "rule__VarDeclaration__Group_3__2__Impl"
    // InternalSTCoreParser.g:2449:1: rule__VarDeclaration__Group_3__2__Impl : ( OF ) ;
    public final void rule__VarDeclaration__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2453:1: ( ( OF ) )
            // InternalSTCoreParser.g:2454:1: ( OF )
            {
            // InternalSTCoreParser.g:2454:1: ( OF )
            // InternalSTCoreParser.g:2455:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getOFKeyword_3_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getOFKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__0"
    // InternalSTCoreParser.g:2465:1: rule__VarDeclaration__Group_3_1_0__0 : rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1 ;
    public final void rule__VarDeclaration__Group_3_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2469:1: ( rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1 )
            // InternalSTCoreParser.g:2470:2: rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclaration__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__0__Impl"
    // InternalSTCoreParser.g:2477:1: rule__VarDeclaration__Group_3_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2481:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2482:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2482:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2483:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__1"
    // InternalSTCoreParser.g:2492:1: rule__VarDeclaration__Group_3_1_0__1 : rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2 ;
    public final void rule__VarDeclaration__Group_3_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2496:1: ( rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2 )
            // InternalSTCoreParser.g:2497:2: rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__1__Impl"
    // InternalSTCoreParser.g:2504:1: rule__VarDeclaration__Group_3_1_0__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2508:1: ( ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) ) )
            // InternalSTCoreParser.g:2509:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) )
            {
            // InternalSTCoreParser.g:2509:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) )
            // InternalSTCoreParser.g:2510:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_1()); 
            }
            // InternalSTCoreParser.g:2511:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_1 )
            // InternalSTCoreParser.g:2511:3: rule__VarDeclaration__RangesAssignment_3_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_3_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__2"
    // InternalSTCoreParser.g:2519:1: rule__VarDeclaration__Group_3_1_0__2 : rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3 ;
    public final void rule__VarDeclaration__Group_3_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2523:1: ( rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3 )
            // InternalSTCoreParser.g:2524:2: rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__2"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__2__Impl"
    // InternalSTCoreParser.g:2531:1: rule__VarDeclaration__Group_3_1_0__2__Impl : ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_3_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2535:1: ( ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* ) )
            // InternalSTCoreParser.g:2536:1: ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* )
            {
            // InternalSTCoreParser.g:2536:1: ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* )
            // InternalSTCoreParser.g:2537:2: ( rule__VarDeclaration__Group_3_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0_2()); 
            }
            // InternalSTCoreParser.g:2538:2: ( rule__VarDeclaration__Group_3_1_0_2__0 )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==Comma) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalSTCoreParser.g:2538:3: rule__VarDeclaration__Group_3_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__VarDeclaration__Group_3_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__3"
    // InternalSTCoreParser.g:2546:1: rule__VarDeclaration__Group_3_1_0__3 : rule__VarDeclaration__Group_3_1_0__3__Impl ;
    public final void rule__VarDeclaration__Group_3_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2550:1: ( rule__VarDeclaration__Group_3_1_0__3__Impl )
            // InternalSTCoreParser.g:2551:2: rule__VarDeclaration__Group_3_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__3"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__3__Impl"
    // InternalSTCoreParser.g:2557:1: rule__VarDeclaration__Group_3_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2561:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2562:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2562:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2563:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__0"
    // InternalSTCoreParser.g:2573:1: rule__VarDeclaration__Group_3_1_0_2__0 : rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1 ;
    public final void rule__VarDeclaration__Group_3_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2577:1: ( rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1 )
            // InternalSTCoreParser.g:2578:2: rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclaration__Group_3_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__0__Impl"
    // InternalSTCoreParser.g:2585:1: rule__VarDeclaration__Group_3_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_3_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2589:1: ( ( Comma ) )
            // InternalSTCoreParser.g:2590:1: ( Comma )
            {
            // InternalSTCoreParser.g:2590:1: ( Comma )
            // InternalSTCoreParser.g:2591:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__1"
    // InternalSTCoreParser.g:2600:1: rule__VarDeclaration__Group_3_1_0_2__1 : rule__VarDeclaration__Group_3_1_0_2__1__Impl ;
    public final void rule__VarDeclaration__Group_3_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2604:1: ( rule__VarDeclaration__Group_3_1_0_2__1__Impl )
            // InternalSTCoreParser.g:2605:2: rule__VarDeclaration__Group_3_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__1__Impl"
    // InternalSTCoreParser.g:2611:1: rule__VarDeclaration__Group_3_1_0_2__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2615:1: ( ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) ) )
            // InternalSTCoreParser.g:2616:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) )
            {
            // InternalSTCoreParser.g:2616:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) )
            // InternalSTCoreParser.g:2617:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_2_1()); 
            }
            // InternalSTCoreParser.g:2618:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 )
            // InternalSTCoreParser.g:2618:3: rule__VarDeclaration__RangesAssignment_3_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_3_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__0"
    // InternalSTCoreParser.g:2627:1: rule__VarDeclaration__Group_3_1_1__0 : rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1 ;
    public final void rule__VarDeclaration__Group_3_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2631:1: ( rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1 )
            // InternalSTCoreParser.g:2632:2: rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__VarDeclaration__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__0__Impl"
    // InternalSTCoreParser.g:2639:1: rule__VarDeclaration__Group_3_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2643:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2644:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2644:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2645:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__1"
    // InternalSTCoreParser.g:2654:1: rule__VarDeclaration__Group_3_1_1__1 : rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2 ;
    public final void rule__VarDeclaration__Group_3_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2658:1: ( rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2 )
            // InternalSTCoreParser.g:2659:2: rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__1__Impl"
    // InternalSTCoreParser.g:2666:1: rule__VarDeclaration__Group_3_1_1__1__Impl : ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2670:1: ( ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) ) )
            // InternalSTCoreParser.g:2671:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) )
            {
            // InternalSTCoreParser.g:2671:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) )
            // InternalSTCoreParser.g:2672:2: ( rule__VarDeclaration__CountAssignment_3_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_1()); 
            }
            // InternalSTCoreParser.g:2673:2: ( rule__VarDeclaration__CountAssignment_3_1_1_1 )
            // InternalSTCoreParser.g:2673:3: rule__VarDeclaration__CountAssignment_3_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_3_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__2"
    // InternalSTCoreParser.g:2681:1: rule__VarDeclaration__Group_3_1_1__2 : rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3 ;
    public final void rule__VarDeclaration__Group_3_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2685:1: ( rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3 )
            // InternalSTCoreParser.g:2686:2: rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__2"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__2__Impl"
    // InternalSTCoreParser.g:2693:1: rule__VarDeclaration__Group_3_1_1__2__Impl : ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_3_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2697:1: ( ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* ) )
            // InternalSTCoreParser.g:2698:1: ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* )
            {
            // InternalSTCoreParser.g:2698:1: ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* )
            // InternalSTCoreParser.g:2699:2: ( rule__VarDeclaration__Group_3_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1_2()); 
            }
            // InternalSTCoreParser.g:2700:2: ( rule__VarDeclaration__Group_3_1_1_2__0 )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==Comma) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalSTCoreParser.g:2700:3: rule__VarDeclaration__Group_3_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__VarDeclaration__Group_3_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__3"
    // InternalSTCoreParser.g:2708:1: rule__VarDeclaration__Group_3_1_1__3 : rule__VarDeclaration__Group_3_1_1__3__Impl ;
    public final void rule__VarDeclaration__Group_3_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2712:1: ( rule__VarDeclaration__Group_3_1_1__3__Impl )
            // InternalSTCoreParser.g:2713:2: rule__VarDeclaration__Group_3_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__3"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__3__Impl"
    // InternalSTCoreParser.g:2719:1: rule__VarDeclaration__Group_3_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2723:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2724:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2724:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2725:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__0"
    // InternalSTCoreParser.g:2735:1: rule__VarDeclaration__Group_3_1_1_2__0 : rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1 ;
    public final void rule__VarDeclaration__Group_3_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2739:1: ( rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1 )
            // InternalSTCoreParser.g:2740:2: rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1
            {
            pushFollow(FOLLOW_13);
            rule__VarDeclaration__Group_3_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__0__Impl"
    // InternalSTCoreParser.g:2747:1: rule__VarDeclaration__Group_3_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_3_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2751:1: ( ( Comma ) )
            // InternalSTCoreParser.g:2752:1: ( Comma )
            {
            // InternalSTCoreParser.g:2752:1: ( Comma )
            // InternalSTCoreParser.g:2753:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__1"
    // InternalSTCoreParser.g:2762:1: rule__VarDeclaration__Group_3_1_1_2__1 : rule__VarDeclaration__Group_3_1_1_2__1__Impl ;
    public final void rule__VarDeclaration__Group_3_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2766:1: ( rule__VarDeclaration__Group_3_1_1_2__1__Impl )
            // InternalSTCoreParser.g:2767:2: rule__VarDeclaration__Group_3_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__1__Impl"
    // InternalSTCoreParser.g:2773:1: rule__VarDeclaration__Group_3_1_1_2__1__Impl : ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2777:1: ( ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) ) )
            // InternalSTCoreParser.g:2778:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) )
            {
            // InternalSTCoreParser.g:2778:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) )
            // InternalSTCoreParser.g:2779:2: ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_2_1()); 
            }
            // InternalSTCoreParser.g:2780:2: ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 )
            // InternalSTCoreParser.g:2780:3: rule__VarDeclaration__CountAssignment_3_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_3_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__0"
    // InternalSTCoreParser.g:2789:1: rule__VarDeclaration__Group_5__0 : rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1 ;
    public final void rule__VarDeclaration__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2793:1: ( rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1 )
            // InternalSTCoreParser.g:2794:2: rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclaration__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__0"


    // $ANTLR start "rule__VarDeclaration__Group_5__0__Impl"
    // InternalSTCoreParser.g:2801:1: rule__VarDeclaration__Group_5__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2805:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2806:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2806:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2807:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_5_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__1"
    // InternalSTCoreParser.g:2816:1: rule__VarDeclaration__Group_5__1 : rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2 ;
    public final void rule__VarDeclaration__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2820:1: ( rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2 )
            // InternalSTCoreParser.g:2821:2: rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2
            {
            pushFollow(FOLLOW_14);
            rule__VarDeclaration__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__1"


    // $ANTLR start "rule__VarDeclaration__Group_5__1__Impl"
    // InternalSTCoreParser.g:2828:1: rule__VarDeclaration__Group_5__1__Impl : ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) ) ;
    public final void rule__VarDeclaration__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2832:1: ( ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) ) )
            // InternalSTCoreParser.g:2833:1: ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) )
            {
            // InternalSTCoreParser.g:2833:1: ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) )
            // InternalSTCoreParser.g:2834:2: ( rule__VarDeclaration__MaxLengthAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_5_1()); 
            }
            // InternalSTCoreParser.g:2835:2: ( rule__VarDeclaration__MaxLengthAssignment_5_1 )
            // InternalSTCoreParser.g:2835:3: rule__VarDeclaration__MaxLengthAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__MaxLengthAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__2"
    // InternalSTCoreParser.g:2843:1: rule__VarDeclaration__Group_5__2 : rule__VarDeclaration__Group_5__2__Impl ;
    public final void rule__VarDeclaration__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2847:1: ( rule__VarDeclaration__Group_5__2__Impl )
            // InternalSTCoreParser.g:2848:2: rule__VarDeclaration__Group_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__2"


    // $ANTLR start "rule__VarDeclaration__Group_5__2__Impl"
    // InternalSTCoreParser.g:2854:1: rule__VarDeclaration__Group_5__2__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2858:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2859:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2859:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2860:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_5_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__0"
    // InternalSTCoreParser.g:2870:1: rule__VarDeclaration__Group_6__0 : rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 ;
    public final void rule__VarDeclaration__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2874:1: ( rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 )
            // InternalSTCoreParser.g:2875:2: rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1
            {
            pushFollow(FOLLOW_15);
            rule__VarDeclaration__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0"


    // $ANTLR start "rule__VarDeclaration__Group_6__0__Impl"
    // InternalSTCoreParser.g:2882:1: rule__VarDeclaration__Group_6__0__Impl : ( ColonEqualsSign ) ;
    public final void rule__VarDeclaration__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2886:1: ( ( ColonEqualsSign ) )
            // InternalSTCoreParser.g:2887:1: ( ColonEqualsSign )
            {
            // InternalSTCoreParser.g:2887:1: ( ColonEqualsSign )
            // InternalSTCoreParser.g:2888:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_6_0()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__1"
    // InternalSTCoreParser.g:2897:1: rule__VarDeclaration__Group_6__1 : rule__VarDeclaration__Group_6__1__Impl ;
    public final void rule__VarDeclaration__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2901:1: ( rule__VarDeclaration__Group_6__1__Impl )
            // InternalSTCoreParser.g:2902:2: rule__VarDeclaration__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1"


    // $ANTLR start "rule__VarDeclaration__Group_6__1__Impl"
    // InternalSTCoreParser.g:2908:1: rule__VarDeclaration__Group_6__1__Impl : ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) ) ;
    public final void rule__VarDeclaration__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2912:1: ( ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) ) )
            // InternalSTCoreParser.g:2913:1: ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) )
            {
            // InternalSTCoreParser.g:2913:1: ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) )
            // InternalSTCoreParser.g:2914:2: ( rule__VarDeclaration__DefaultValueAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_6_1()); 
            }
            // InternalSTCoreParser.g:2915:2: ( rule__VarDeclaration__DefaultValueAssignment_6_1 )
            // InternalSTCoreParser.g:2915:3: rule__VarDeclaration__DefaultValueAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__DefaultValueAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0"
    // InternalSTCoreParser.g:2924:1: rule__ArrayInitializerExpression__Group__0 : rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 ;
    public final void rule__ArrayInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2928:1: ( rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 )
            // InternalSTCoreParser.g:2929:2: rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__ArrayInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0__Impl"
    // InternalSTCoreParser.g:2936:1: rule__ArrayInitializerExpression__Group__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2940:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2941:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2941:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2942:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1"
    // InternalSTCoreParser.g:2951:1: rule__ArrayInitializerExpression__Group__1 : rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 ;
    public final void rule__ArrayInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2955:1: ( rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 )
            // InternalSTCoreParser.g:2956:2: rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__ArrayInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1__Impl"
    // InternalSTCoreParser.g:2963:1: rule__ArrayInitializerExpression__Group__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2967:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalSTCoreParser.g:2968:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalSTCoreParser.g:2968:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            // InternalSTCoreParser.g:2969:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalSTCoreParser.g:2970:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            // InternalSTCoreParser.g:2970:3: rule__ArrayInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2"
    // InternalSTCoreParser.g:2978:1: rule__ArrayInitializerExpression__Group__2 : rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 ;
    public final void rule__ArrayInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2982:1: ( rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 )
            // InternalSTCoreParser.g:2983:2: rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__ArrayInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2__Impl"
    // InternalSTCoreParser.g:2990:1: rule__ArrayInitializerExpression__Group__2__Impl : ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) ;
    public final void rule__ArrayInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2994:1: ( ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) )
            // InternalSTCoreParser.g:2995:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            {
            // InternalSTCoreParser.g:2995:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            // InternalSTCoreParser.g:2996:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalSTCoreParser.g:2997:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==Comma) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalSTCoreParser.g:2997:3: rule__ArrayInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__ArrayInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3"
    // InternalSTCoreParser.g:3005:1: rule__ArrayInitializerExpression__Group__3 : rule__ArrayInitializerExpression__Group__3__Impl ;
    public final void rule__ArrayInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3009:1: ( rule__ArrayInitializerExpression__Group__3__Impl )
            // InternalSTCoreParser.g:3010:2: rule__ArrayInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3__Impl"
    // InternalSTCoreParser.g:3016:1: rule__ArrayInitializerExpression__Group__3__Impl : ( RightSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3020:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:3021:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:3021:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:3022:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0"
    // InternalSTCoreParser.g:3032:1: rule__ArrayInitializerExpression__Group_2__0 : rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 ;
    public final void rule__ArrayInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3036:1: ( rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 )
            // InternalSTCoreParser.g:3037:2: rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_10);
            rule__ArrayInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0__Impl"
    // InternalSTCoreParser.g:3044:1: rule__ArrayInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__ArrayInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3048:1: ( ( Comma ) )
            // InternalSTCoreParser.g:3049:1: ( Comma )
            {
            // InternalSTCoreParser.g:3049:1: ( Comma )
            // InternalSTCoreParser.g:3050:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1"
    // InternalSTCoreParser.g:3059:1: rule__ArrayInitializerExpression__Group_2__1 : rule__ArrayInitializerExpression__Group_2__1__Impl ;
    public final void rule__ArrayInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3063:1: ( rule__ArrayInitializerExpression__Group_2__1__Impl )
            // InternalSTCoreParser.g:3064:2: rule__ArrayInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1__Impl"
    // InternalSTCoreParser.g:3070:1: rule__ArrayInitializerExpression__Group_2__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3074:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalSTCoreParser.g:3075:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalSTCoreParser.g:3075:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalSTCoreParser.g:3076:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalSTCoreParser.g:3077:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            // InternalSTCoreParser.g:3077:3: rule__ArrayInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__0"
    // InternalSTCoreParser.g:3086:1: rule__ArrayInitElement__Group__0 : rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 ;
    public final void rule__ArrayInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3090:1: ( rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 )
            // InternalSTCoreParser.g:3091:2: rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__ArrayInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0"


    // $ANTLR start "rule__ArrayInitElement__Group__0__Impl"
    // InternalSTCoreParser.g:3098:1: rule__ArrayInitElement__Group__0__Impl : ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) ;
    public final void rule__ArrayInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3102:1: ( ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) )
            // InternalSTCoreParser.g:3103:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            {
            // InternalSTCoreParser.g:3103:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            // InternalSTCoreParser.g:3104:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }
            // InternalSTCoreParser.g:3105:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            // InternalSTCoreParser.g:3105:3: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__IndexOrInitExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__1"
    // InternalSTCoreParser.g:3113:1: rule__ArrayInitElement__Group__1 : rule__ArrayInitElement__Group__1__Impl ;
    public final void rule__ArrayInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3117:1: ( rule__ArrayInitElement__Group__1__Impl )
            // InternalSTCoreParser.g:3118:2: rule__ArrayInitElement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1"


    // $ANTLR start "rule__ArrayInitElement__Group__1__Impl"
    // InternalSTCoreParser.g:3124:1: rule__ArrayInitElement__Group__1__Impl : ( ( rule__ArrayInitElement__Group_1__0 )? ) ;
    public final void rule__ArrayInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3128:1: ( ( ( rule__ArrayInitElement__Group_1__0 )? ) )
            // InternalSTCoreParser.g:3129:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            {
            // InternalSTCoreParser.g:3129:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            // InternalSTCoreParser.g:3130:2: ( rule__ArrayInitElement__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:3131:2: ( rule__ArrayInitElement__Group_1__0 )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==LeftParenthesis) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalSTCoreParser.g:3131:3: rule__ArrayInitElement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ArrayInitElement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0"
    // InternalSTCoreParser.g:3140:1: rule__ArrayInitElement__Group_1__0 : rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 ;
    public final void rule__ArrayInitElement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3144:1: ( rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 )
            // InternalSTCoreParser.g:3145:2: rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__ArrayInitElement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0__Impl"
    // InternalSTCoreParser.g:3152:1: rule__ArrayInitElement__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3156:1: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:3157:1: ( LeftParenthesis )
            {
            // InternalSTCoreParser.g:3157:1: ( LeftParenthesis )
            // InternalSTCoreParser.g:3158:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1"
    // InternalSTCoreParser.g:3167:1: rule__ArrayInitElement__Group_1__1 : rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 ;
    public final void rule__ArrayInitElement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3171:1: ( rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 )
            // InternalSTCoreParser.g:3172:2: rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2
            {
            pushFollow(FOLLOW_17);
            rule__ArrayInitElement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1__Impl"
    // InternalSTCoreParser.g:3179:1: rule__ArrayInitElement__Group_1__1__Impl : ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) ;
    public final void rule__ArrayInitElement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3183:1: ( ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:3184:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:3184:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            // InternalSTCoreParser.g:3185:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:3186:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            // InternalSTCoreParser.g:3186:3: rule__ArrayInitElement__InitExpressionAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__InitExpressionAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2"
    // InternalSTCoreParser.g:3194:1: rule__ArrayInitElement__Group_1__2 : rule__ArrayInitElement__Group_1__2__Impl ;
    public final void rule__ArrayInitElement__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3198:1: ( rule__ArrayInitElement__Group_1__2__Impl )
            // InternalSTCoreParser.g:3199:2: rule__ArrayInitElement__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2__Impl"
    // InternalSTCoreParser.g:3205:1: rule__ArrayInitElement__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3209:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:3210:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:3210:1: ( RightParenthesis )
            // InternalSTCoreParser.g:3211:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2__Impl"


    // $ANTLR start "rule__STStatement__Group_0__0"
    // InternalSTCoreParser.g:3221:1: rule__STStatement__Group_0__0 : rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 ;
    public final void rule__STStatement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3225:1: ( rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 )
            // InternalSTCoreParser.g:3226:2: rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1
            {
            pushFollow(FOLLOW_18);
            rule__STStatement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0"


    // $ANTLR start "rule__STStatement__Group_0__0__Impl"
    // InternalSTCoreParser.g:3233:1: rule__STStatement__Group_0__0__Impl : ( ( rule__STStatement__Alternatives_0_0 ) ) ;
    public final void rule__STStatement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3237:1: ( ( ( rule__STStatement__Alternatives_0_0 ) ) )
            // InternalSTCoreParser.g:3238:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:3238:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            // InternalSTCoreParser.g:3239:2: ( rule__STStatement__Alternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:3240:2: ( rule__STStatement__Alternatives_0_0 )
            // InternalSTCoreParser.g:3240:3: rule__STStatement__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0__1"
    // InternalSTCoreParser.g:3248:1: rule__STStatement__Group_0__1 : rule__STStatement__Group_0__1__Impl ;
    public final void rule__STStatement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3252:1: ( rule__STStatement__Group_0__1__Impl )
            // InternalSTCoreParser.g:3253:2: rule__STStatement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1"


    // $ANTLR start "rule__STStatement__Group_0__1__Impl"
    // InternalSTCoreParser.g:3259:1: rule__STStatement__Group_0__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3263:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3264:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3264:1: ( Semicolon )
            // InternalSTCoreParser.g:3265:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_6__0"
    // InternalSTCoreParser.g:3275:1: rule__STStatement__Group_0_0_6__0 : rule__STStatement__Group_0_0_6__0__Impl rule__STStatement__Group_0_0_6__1 ;
    public final void rule__STStatement__Group_0_0_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3279:1: ( rule__STStatement__Group_0_0_6__0__Impl rule__STStatement__Group_0_0_6__1 )
            // InternalSTCoreParser.g:3280:2: rule__STStatement__Group_0_0_6__0__Impl rule__STStatement__Group_0_0_6__1
            {
            pushFollow(FOLLOW_19);
            rule__STStatement__Group_0_0_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__0"


    // $ANTLR start "rule__STStatement__Group_0_0_6__0__Impl"
    // InternalSTCoreParser.g:3287:1: rule__STStatement__Group_0_0_6__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3291:1: ( ( () ) )
            // InternalSTCoreParser.g:3292:1: ( () )
            {
            // InternalSTCoreParser.g:3292:1: ( () )
            // InternalSTCoreParser.g:3293:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_6_0()); 
            }
            // InternalSTCoreParser.g:3294:2: ()
            // InternalSTCoreParser.g:3294:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_6__1"
    // InternalSTCoreParser.g:3302:1: rule__STStatement__Group_0_0_6__1 : rule__STStatement__Group_0_0_6__1__Impl ;
    public final void rule__STStatement__Group_0_0_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3306:1: ( rule__STStatement__Group_0_0_6__1__Impl )
            // InternalSTCoreParser.g:3307:2: rule__STStatement__Group_0_0_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__1"


    // $ANTLR start "rule__STStatement__Group_0_0_6__1__Impl"
    // InternalSTCoreParser.g:3313:1: rule__STStatement__Group_0_0_6__1__Impl : ( RETURN ) ;
    public final void rule__STStatement__Group_0_0_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3317:1: ( ( RETURN ) )
            // InternalSTCoreParser.g:3318:1: ( RETURN )
            {
            // InternalSTCoreParser.g:3318:1: ( RETURN )
            // InternalSTCoreParser.g:3319:2: RETURN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_6_1()); 
            }
            match(input,RETURN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0"
    // InternalSTCoreParser.g:3329:1: rule__STStatement__Group_0_0_7__0 : rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 ;
    public final void rule__STStatement__Group_0_0_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3333:1: ( rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 )
            // InternalSTCoreParser.g:3334:2: rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1
            {
            pushFollow(FOLLOW_20);
            rule__STStatement__Group_0_0_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0__Impl"
    // InternalSTCoreParser.g:3341:1: rule__STStatement__Group_0_0_7__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3345:1: ( ( () ) )
            // InternalSTCoreParser.g:3346:1: ( () )
            {
            // InternalSTCoreParser.g:3346:1: ( () )
            // InternalSTCoreParser.g:3347:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_7_0()); 
            }
            // InternalSTCoreParser.g:3348:2: ()
            // InternalSTCoreParser.g:3348:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_7_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1"
    // InternalSTCoreParser.g:3356:1: rule__STStatement__Group_0_0_7__1 : rule__STStatement__Group_0_0_7__1__Impl ;
    public final void rule__STStatement__Group_0_0_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3360:1: ( rule__STStatement__Group_0_0_7__1__Impl )
            // InternalSTCoreParser.g:3361:2: rule__STStatement__Group_0_0_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1__Impl"
    // InternalSTCoreParser.g:3367:1: rule__STStatement__Group_0_0_7__1__Impl : ( CONTINUE ) ;
    public final void rule__STStatement__Group_0_0_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3371:1: ( ( CONTINUE ) )
            // InternalSTCoreParser.g:3372:1: ( CONTINUE )
            {
            // InternalSTCoreParser.g:3372:1: ( CONTINUE )
            // InternalSTCoreParser.g:3373:2: CONTINUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_7_1()); 
            }
            match(input,CONTINUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0"
    // InternalSTCoreParser.g:3383:1: rule__STStatement__Group_0_0_8__0 : rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 ;
    public final void rule__STStatement__Group_0_0_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3387:1: ( rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 )
            // InternalSTCoreParser.g:3388:2: rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1
            {
            pushFollow(FOLLOW_21);
            rule__STStatement__Group_0_0_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0__Impl"
    // InternalSTCoreParser.g:3395:1: rule__STStatement__Group_0_0_8__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3399:1: ( ( () ) )
            // InternalSTCoreParser.g:3400:1: ( () )
            {
            // InternalSTCoreParser.g:3400:1: ( () )
            // InternalSTCoreParser.g:3401:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_8_0()); 
            }
            // InternalSTCoreParser.g:3402:2: ()
            // InternalSTCoreParser.g:3402:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_8_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1"
    // InternalSTCoreParser.g:3410:1: rule__STStatement__Group_0_0_8__1 : rule__STStatement__Group_0_0_8__1__Impl ;
    public final void rule__STStatement__Group_0_0_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3414:1: ( rule__STStatement__Group_0_0_8__1__Impl )
            // InternalSTCoreParser.g:3415:2: rule__STStatement__Group_0_0_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1__Impl"
    // InternalSTCoreParser.g:3421:1: rule__STStatement__Group_0_0_8__1__Impl : ( EXIT ) ;
    public final void rule__STStatement__Group_0_0_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3425:1: ( ( EXIT ) )
            // InternalSTCoreParser.g:3426:1: ( EXIT )
            {
            // InternalSTCoreParser.g:3426:1: ( EXIT )
            // InternalSTCoreParser.g:3427:2: EXIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_8_1()); 
            }
            match(input,EXIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1__Impl"


    // $ANTLR start "rule__STStatement__Group_1__0"
    // InternalSTCoreParser.g:3437:1: rule__STStatement__Group_1__0 : rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 ;
    public final void rule__STStatement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3441:1: ( rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 )
            // InternalSTCoreParser.g:3442:2: rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1
            {
            pushFollow(FOLLOW_22);
            rule__STStatement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0"


    // $ANTLR start "rule__STStatement__Group_1__0__Impl"
    // InternalSTCoreParser.g:3449:1: rule__STStatement__Group_1__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3453:1: ( ( () ) )
            // InternalSTCoreParser.g:3454:1: ( () )
            {
            // InternalSTCoreParser.g:3454:1: ( () )
            // InternalSTCoreParser.g:3455:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }
            // InternalSTCoreParser.g:3456:2: ()
            // InternalSTCoreParser.g:3456:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0__Impl"


    // $ANTLR start "rule__STStatement__Group_1__1"
    // InternalSTCoreParser.g:3464:1: rule__STStatement__Group_1__1 : rule__STStatement__Group_1__1__Impl ;
    public final void rule__STStatement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3468:1: ( rule__STStatement__Group_1__1__Impl )
            // InternalSTCoreParser.g:3469:2: rule__STStatement__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1"


    // $ANTLR start "rule__STStatement__Group_1__1__Impl"
    // InternalSTCoreParser.g:3475:1: rule__STStatement__Group_1__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3479:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3480:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3480:1: ( Semicolon )
            // InternalSTCoreParser.g:3481:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__0"
    // InternalSTCoreParser.g:3491:1: rule__STAssignmentStatement__Group__0 : rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 ;
    public final void rule__STAssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3495:1: ( rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 )
            // InternalSTCoreParser.g:3496:2: rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__STAssignmentStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0"


    // $ANTLR start "rule__STAssignmentStatement__Group__0__Impl"
    // InternalSTCoreParser.g:3503:1: rule__STAssignmentStatement__Group__0__Impl : ( ( rule__STAssignmentStatement__LhsAssignment_0 ) ) ;
    public final void rule__STAssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3507:1: ( ( ( rule__STAssignmentStatement__LhsAssignment_0 ) ) )
            // InternalSTCoreParser.g:3508:1: ( ( rule__STAssignmentStatement__LhsAssignment_0 ) )
            {
            // InternalSTCoreParser.g:3508:1: ( ( rule__STAssignmentStatement__LhsAssignment_0 ) )
            // InternalSTCoreParser.g:3509:2: ( rule__STAssignmentStatement__LhsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsAssignment_0()); 
            }
            // InternalSTCoreParser.g:3510:2: ( rule__STAssignmentStatement__LhsAssignment_0 )
            // InternalSTCoreParser.g:3510:3: rule__STAssignmentStatement__LhsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__LhsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__1"
    // InternalSTCoreParser.g:3518:1: rule__STAssignmentStatement__Group__1 : rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 ;
    public final void rule__STAssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3522:1: ( rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 )
            // InternalSTCoreParser.g:3523:2: rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__STAssignmentStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1"


    // $ANTLR start "rule__STAssignmentStatement__Group__1__Impl"
    // InternalSTCoreParser.g:3530:1: rule__STAssignmentStatement__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STAssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3534:1: ( ( ColonEqualsSign ) )
            // InternalSTCoreParser.g:3535:1: ( ColonEqualsSign )
            {
            // InternalSTCoreParser.g:3535:1: ( ColonEqualsSign )
            // InternalSTCoreParser.g:3536:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__2"
    // InternalSTCoreParser.g:3545:1: rule__STAssignmentStatement__Group__2 : rule__STAssignmentStatement__Group__2__Impl ;
    public final void rule__STAssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3549:1: ( rule__STAssignmentStatement__Group__2__Impl )
            // InternalSTCoreParser.g:3550:2: rule__STAssignmentStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2"


    // $ANTLR start "rule__STAssignmentStatement__Group__2__Impl"
    // InternalSTCoreParser.g:3556:1: rule__STAssignmentStatement__Group__2__Impl : ( ( rule__STAssignmentStatement__RhsAssignment_2 ) ) ;
    public final void rule__STAssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3560:1: ( ( ( rule__STAssignmentStatement__RhsAssignment_2 ) ) )
            // InternalSTCoreParser.g:3561:1: ( ( rule__STAssignmentStatement__RhsAssignment_2 ) )
            {
            // InternalSTCoreParser.g:3561:1: ( ( rule__STAssignmentStatement__RhsAssignment_2 ) )
            // InternalSTCoreParser.g:3562:2: ( rule__STAssignmentStatement__RhsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRhsAssignment_2()); 
            }
            // InternalSTCoreParser.g:3563:2: ( rule__STAssignmentStatement__RhsAssignment_2 )
            // InternalSTCoreParser.g:3563:3: rule__STAssignmentStatement__RhsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__RhsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRhsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__STIfStatment__Group__0"
    // InternalSTCoreParser.g:3572:1: rule__STIfStatment__Group__0 : rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1 ;
    public final void rule__STIfStatment__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3576:1: ( rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1 )
            // InternalSTCoreParser.g:3577:2: rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STIfStatment__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__0"


    // $ANTLR start "rule__STIfStatment__Group__0__Impl"
    // InternalSTCoreParser.g:3584:1: rule__STIfStatment__Group__0__Impl : ( IF ) ;
    public final void rule__STIfStatment__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3588:1: ( ( IF ) )
            // InternalSTCoreParser.g:3589:1: ( IF )
            {
            // InternalSTCoreParser.g:3589:1: ( IF )
            // InternalSTCoreParser.g:3590:2: IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getIFKeyword_0()); 
            }
            match(input,IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__0__Impl"


    // $ANTLR start "rule__STIfStatment__Group__1"
    // InternalSTCoreParser.g:3599:1: rule__STIfStatment__Group__1 : rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2 ;
    public final void rule__STIfStatment__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3603:1: ( rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2 )
            // InternalSTCoreParser.g:3604:2: rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2
            {
            pushFollow(FOLLOW_24);
            rule__STIfStatment__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__1"


    // $ANTLR start "rule__STIfStatment__Group__1__Impl"
    // InternalSTCoreParser.g:3611:1: rule__STIfStatment__Group__1__Impl : ( ( rule__STIfStatment__ConditionAssignment_1 ) ) ;
    public final void rule__STIfStatment__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3615:1: ( ( ( rule__STIfStatment__ConditionAssignment_1 ) ) )
            // InternalSTCoreParser.g:3616:1: ( ( rule__STIfStatment__ConditionAssignment_1 ) )
            {
            // InternalSTCoreParser.g:3616:1: ( ( rule__STIfStatment__ConditionAssignment_1 ) )
            // InternalSTCoreParser.g:3617:2: ( rule__STIfStatment__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getConditionAssignment_1()); 
            }
            // InternalSTCoreParser.g:3618:2: ( rule__STIfStatment__ConditionAssignment_1 )
            // InternalSTCoreParser.g:3618:3: rule__STIfStatment__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__1__Impl"


    // $ANTLR start "rule__STIfStatment__Group__2"
    // InternalSTCoreParser.g:3626:1: rule__STIfStatment__Group__2 : rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3 ;
    public final void rule__STIfStatment__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3630:1: ( rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3 )
            // InternalSTCoreParser.g:3631:2: rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3
            {
            pushFollow(FOLLOW_25);
            rule__STIfStatment__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__2"


    // $ANTLR start "rule__STIfStatment__Group__2__Impl"
    // InternalSTCoreParser.g:3638:1: rule__STIfStatment__Group__2__Impl : ( THEN ) ;
    public final void rule__STIfStatment__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3642:1: ( ( THEN ) )
            // InternalSTCoreParser.g:3643:1: ( THEN )
            {
            // InternalSTCoreParser.g:3643:1: ( THEN )
            // InternalSTCoreParser.g:3644:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__2__Impl"


    // $ANTLR start "rule__STIfStatment__Group__3"
    // InternalSTCoreParser.g:3653:1: rule__STIfStatment__Group__3 : rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4 ;
    public final void rule__STIfStatment__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3657:1: ( rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4 )
            // InternalSTCoreParser.g:3658:2: rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4
            {
            pushFollow(FOLLOW_25);
            rule__STIfStatment__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__3"


    // $ANTLR start "rule__STIfStatment__Group__3__Impl"
    // InternalSTCoreParser.g:3665:1: rule__STIfStatment__Group__3__Impl : ( ( rule__STIfStatment__StatementsAssignment_3 )* ) ;
    public final void rule__STIfStatment__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3669:1: ( ( ( rule__STIfStatment__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:3670:1: ( ( rule__STIfStatment__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:3670:1: ( ( rule__STIfStatment__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:3671:2: ( rule__STIfStatment__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:3672:2: ( rule__STIfStatment__StatementsAssignment_3 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==CONTINUE||(LA34_0>=REPEAT && LA34_0<=RETURN)||LA34_0==WHILE||LA34_0==CASE||LA34_0==EXIT||LA34_0==FOR||LA34_0==IF||LA34_0==Semicolon||LA34_0==RULE_ID) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalSTCoreParser.g:3672:3: rule__STIfStatment__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STIfStatment__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__3__Impl"


    // $ANTLR start "rule__STIfStatment__Group__4"
    // InternalSTCoreParser.g:3680:1: rule__STIfStatment__Group__4 : rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5 ;
    public final void rule__STIfStatment__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3684:1: ( rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5 )
            // InternalSTCoreParser.g:3685:2: rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5
            {
            pushFollow(FOLLOW_25);
            rule__STIfStatment__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__4"


    // $ANTLR start "rule__STIfStatment__Group__4__Impl"
    // InternalSTCoreParser.g:3692:1: rule__STIfStatment__Group__4__Impl : ( ( rule__STIfStatment__ElseifsAssignment_4 )* ) ;
    public final void rule__STIfStatment__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3696:1: ( ( ( rule__STIfStatment__ElseifsAssignment_4 )* ) )
            // InternalSTCoreParser.g:3697:1: ( ( rule__STIfStatment__ElseifsAssignment_4 )* )
            {
            // InternalSTCoreParser.g:3697:1: ( ( rule__STIfStatment__ElseifsAssignment_4 )* )
            // InternalSTCoreParser.g:3698:2: ( rule__STIfStatment__ElseifsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseifsAssignment_4()); 
            }
            // InternalSTCoreParser.g:3699:2: ( rule__STIfStatment__ElseifsAssignment_4 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==ELSIF) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalSTCoreParser.g:3699:3: rule__STIfStatment__ElseifsAssignment_4
            	    {
            	    pushFollow(FOLLOW_26);
            	    rule__STIfStatment__ElseifsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseifsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__4__Impl"


    // $ANTLR start "rule__STIfStatment__Group__5"
    // InternalSTCoreParser.g:3707:1: rule__STIfStatment__Group__5 : rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6 ;
    public final void rule__STIfStatment__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3711:1: ( rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6 )
            // InternalSTCoreParser.g:3712:2: rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6
            {
            pushFollow(FOLLOW_25);
            rule__STIfStatment__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__5"


    // $ANTLR start "rule__STIfStatment__Group__5__Impl"
    // InternalSTCoreParser.g:3719:1: rule__STIfStatment__Group__5__Impl : ( ( rule__STIfStatment__ElseAssignment_5 )? ) ;
    public final void rule__STIfStatment__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3723:1: ( ( ( rule__STIfStatment__ElseAssignment_5 )? ) )
            // InternalSTCoreParser.g:3724:1: ( ( rule__STIfStatment__ElseAssignment_5 )? )
            {
            // InternalSTCoreParser.g:3724:1: ( ( rule__STIfStatment__ElseAssignment_5 )? )
            // InternalSTCoreParser.g:3725:2: ( rule__STIfStatment__ElseAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseAssignment_5()); 
            }
            // InternalSTCoreParser.g:3726:2: ( rule__STIfStatment__ElseAssignment_5 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==ELSE) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalSTCoreParser.g:3726:3: rule__STIfStatment__ElseAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__STIfStatment__ElseAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__5__Impl"


    // $ANTLR start "rule__STIfStatment__Group__6"
    // InternalSTCoreParser.g:3734:1: rule__STIfStatment__Group__6 : rule__STIfStatment__Group__6__Impl ;
    public final void rule__STIfStatment__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3738:1: ( rule__STIfStatment__Group__6__Impl )
            // InternalSTCoreParser.g:3739:2: rule__STIfStatment__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__6"


    // $ANTLR start "rule__STIfStatment__Group__6__Impl"
    // InternalSTCoreParser.g:3745:1: rule__STIfStatment__Group__6__Impl : ( END_IF ) ;
    public final void rule__STIfStatment__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3749:1: ( ( END_IF ) )
            // InternalSTCoreParser.g:3750:1: ( END_IF )
            {
            // InternalSTCoreParser.g:3750:1: ( END_IF )
            // InternalSTCoreParser.g:3751:2: END_IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getEND_IFKeyword_6()); 
            }
            match(input,END_IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getEND_IFKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__6__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__0"
    // InternalSTCoreParser.g:3761:1: rule__STElseIfPart__Group__0 : rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 ;
    public final void rule__STElseIfPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3765:1: ( rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 )
            // InternalSTCoreParser.g:3766:2: rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STElseIfPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0"


    // $ANTLR start "rule__STElseIfPart__Group__0__Impl"
    // InternalSTCoreParser.g:3773:1: rule__STElseIfPart__Group__0__Impl : ( ELSIF ) ;
    public final void rule__STElseIfPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3777:1: ( ( ELSIF ) )
            // InternalSTCoreParser.g:3778:1: ( ELSIF )
            {
            // InternalSTCoreParser.g:3778:1: ( ELSIF )
            // InternalSTCoreParser.g:3779:2: ELSIF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }
            match(input,ELSIF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__1"
    // InternalSTCoreParser.g:3788:1: rule__STElseIfPart__Group__1 : rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 ;
    public final void rule__STElseIfPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3792:1: ( rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 )
            // InternalSTCoreParser.g:3793:2: rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2
            {
            pushFollow(FOLLOW_24);
            rule__STElseIfPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1"


    // $ANTLR start "rule__STElseIfPart__Group__1__Impl"
    // InternalSTCoreParser.g:3800:1: rule__STElseIfPart__Group__1__Impl : ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) ;
    public final void rule__STElseIfPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3804:1: ( ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) )
            // InternalSTCoreParser.g:3805:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            {
            // InternalSTCoreParser.g:3805:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            // InternalSTCoreParser.g:3806:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }
            // InternalSTCoreParser.g:3807:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            // InternalSTCoreParser.g:3807:3: rule__STElseIfPart__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__2"
    // InternalSTCoreParser.g:3815:1: rule__STElseIfPart__Group__2 : rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 ;
    public final void rule__STElseIfPart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3819:1: ( rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 )
            // InternalSTCoreParser.g:3820:2: rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__STElseIfPart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2"


    // $ANTLR start "rule__STElseIfPart__Group__2__Impl"
    // InternalSTCoreParser.g:3827:1: rule__STElseIfPart__Group__2__Impl : ( THEN ) ;
    public final void rule__STElseIfPart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3831:1: ( ( THEN ) )
            // InternalSTCoreParser.g:3832:1: ( THEN )
            {
            // InternalSTCoreParser.g:3832:1: ( THEN )
            // InternalSTCoreParser.g:3833:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__3"
    // InternalSTCoreParser.g:3842:1: rule__STElseIfPart__Group__3 : rule__STElseIfPart__Group__3__Impl ;
    public final void rule__STElseIfPart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3846:1: ( rule__STElseIfPart__Group__3__Impl )
            // InternalSTCoreParser.g:3847:2: rule__STElseIfPart__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3"


    // $ANTLR start "rule__STElseIfPart__Group__3__Impl"
    // InternalSTCoreParser.g:3853:1: rule__STElseIfPart__Group__3__Impl : ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) ;
    public final void rule__STElseIfPart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3857:1: ( ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:3858:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:3858:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:3859:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:3860:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==CONTINUE||(LA37_0>=REPEAT && LA37_0<=RETURN)||LA37_0==WHILE||LA37_0==CASE||LA37_0==EXIT||LA37_0==FOR||LA37_0==IF||LA37_0==Semicolon||LA37_0==RULE_ID) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // InternalSTCoreParser.g:3860:3: rule__STElseIfPart__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STElseIfPart__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__0"
    // InternalSTCoreParser.g:3869:1: rule__STCaseStatement__Group__0 : rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 ;
    public final void rule__STCaseStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3873:1: ( rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 )
            // InternalSTCoreParser.g:3874:2: rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STCaseStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0"


    // $ANTLR start "rule__STCaseStatement__Group__0__Impl"
    // InternalSTCoreParser.g:3881:1: rule__STCaseStatement__Group__0__Impl : ( CASE ) ;
    public final void rule__STCaseStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3885:1: ( ( CASE ) )
            // InternalSTCoreParser.g:3886:1: ( CASE )
            {
            // InternalSTCoreParser.g:3886:1: ( CASE )
            // InternalSTCoreParser.g:3887:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__1"
    // InternalSTCoreParser.g:3896:1: rule__STCaseStatement__Group__1 : rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 ;
    public final void rule__STCaseStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3900:1: ( rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 )
            // InternalSTCoreParser.g:3901:2: rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__STCaseStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1"


    // $ANTLR start "rule__STCaseStatement__Group__1__Impl"
    // InternalSTCoreParser.g:3908:1: rule__STCaseStatement__Group__1__Impl : ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) ;
    public final void rule__STCaseStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3912:1: ( ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) )
            // InternalSTCoreParser.g:3913:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            {
            // InternalSTCoreParser.g:3913:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            // InternalSTCoreParser.g:3914:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }
            // InternalSTCoreParser.g:3915:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            // InternalSTCoreParser.g:3915:3: rule__STCaseStatement__SelectorAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__SelectorAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__2"
    // InternalSTCoreParser.g:3923:1: rule__STCaseStatement__Group__2 : rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 ;
    public final void rule__STCaseStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3927:1: ( rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 )
            // InternalSTCoreParser.g:3928:2: rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STCaseStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2"


    // $ANTLR start "rule__STCaseStatement__Group__2__Impl"
    // InternalSTCoreParser.g:3935:1: rule__STCaseStatement__Group__2__Impl : ( OF ) ;
    public final void rule__STCaseStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3939:1: ( ( OF ) )
            // InternalSTCoreParser.g:3940:1: ( OF )
            {
            // InternalSTCoreParser.g:3940:1: ( OF )
            // InternalSTCoreParser.g:3941:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__3"
    // InternalSTCoreParser.g:3950:1: rule__STCaseStatement__Group__3 : rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 ;
    public final void rule__STCaseStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3954:1: ( rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 )
            // InternalSTCoreParser.g:3955:2: rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4
            {
            pushFollow(FOLLOW_27);
            rule__STCaseStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3"


    // $ANTLR start "rule__STCaseStatement__Group__3__Impl"
    // InternalSTCoreParser.g:3962:1: rule__STCaseStatement__Group__3__Impl : ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) ;
    public final void rule__STCaseStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3966:1: ( ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) )
            // InternalSTCoreParser.g:3967:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            {
            // InternalSTCoreParser.g:3967:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            // InternalSTCoreParser.g:3968:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            {
            // InternalSTCoreParser.g:3968:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) )
            // InternalSTCoreParser.g:3969:3: ( rule__STCaseStatement__CasesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTCoreParser.g:3970:3: ( rule__STCaseStatement__CasesAssignment_3 )
            // InternalSTCoreParser.g:3970:4: rule__STCaseStatement__CasesAssignment_3
            {
            pushFollow(FOLLOW_28);
            rule__STCaseStatement__CasesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }

            // InternalSTCoreParser.g:3973:2: ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            // InternalSTCoreParser.g:3974:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTCoreParser.g:3975:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( ((LA38_0>=LDATE_AND_TIME && LA38_0<=TIME_OF_DAY)||LA38_0==WSTRING||(LA38_0>=STRING && LA38_0<=DWORD)||(LA38_0>=LDATE && LA38_0<=LWORD)||(LA38_0>=UDINT && LA38_0<=WCHAR)||(LA38_0>=BOOL && LA38_0<=DINT)||(LA38_0>=LINT && LA38_0<=UINT)||LA38_0==WORD||(LA38_0>=INT && LA38_0<=LDT)||LA38_0==TOD||LA38_0==DT||(LA38_0>=LD && LA38_0<=LT)||LA38_0==NOT||LA38_0==D||LA38_0==T||LA38_0==LeftParenthesis||LA38_0==PlusSign||LA38_0==HyphenMinus||LA38_0==RULE_BOOL_VALUES||(LA38_0>=RULE_NON_DECIMAL && LA38_0<=RULE_INT)||(LA38_0>=RULE_ID && LA38_0<=RULE_STRING)) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalSTCoreParser.g:3975:4: rule__STCaseStatement__CasesAssignment_3
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STCaseStatement__CasesAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__4"
    // InternalSTCoreParser.g:3984:1: rule__STCaseStatement__Group__4 : rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 ;
    public final void rule__STCaseStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3988:1: ( rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 )
            // InternalSTCoreParser.g:3989:2: rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5
            {
            pushFollow(FOLLOW_27);
            rule__STCaseStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4"


    // $ANTLR start "rule__STCaseStatement__Group__4__Impl"
    // InternalSTCoreParser.g:3996:1: rule__STCaseStatement__Group__4__Impl : ( ( rule__STCaseStatement__ElseAssignment_4 )? ) ;
    public final void rule__STCaseStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4000:1: ( ( ( rule__STCaseStatement__ElseAssignment_4 )? ) )
            // InternalSTCoreParser.g:4001:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            {
            // InternalSTCoreParser.g:4001:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            // InternalSTCoreParser.g:4002:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }
            // InternalSTCoreParser.g:4003:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==ELSE) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalSTCoreParser.g:4003:3: rule__STCaseStatement__ElseAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCaseStatement__ElseAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__5"
    // InternalSTCoreParser.g:4011:1: rule__STCaseStatement__Group__5 : rule__STCaseStatement__Group__5__Impl ;
    public final void rule__STCaseStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4015:1: ( rule__STCaseStatement__Group__5__Impl )
            // InternalSTCoreParser.g:4016:2: rule__STCaseStatement__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5"


    // $ANTLR start "rule__STCaseStatement__Group__5__Impl"
    // InternalSTCoreParser.g:4022:1: rule__STCaseStatement__Group__5__Impl : ( END_CASE ) ;
    public final void rule__STCaseStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4026:1: ( ( END_CASE ) )
            // InternalSTCoreParser.g:4027:1: ( END_CASE )
            {
            // InternalSTCoreParser.g:4027:1: ( END_CASE )
            // InternalSTCoreParser.g:4028:2: END_CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }
            match(input,END_CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5__Impl"


    // $ANTLR start "rule__STCaseCases__Group__0"
    // InternalSTCoreParser.g:4038:1: rule__STCaseCases__Group__0 : rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 ;
    public final void rule__STCaseCases__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4042:1: ( rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 )
            // InternalSTCoreParser.g:4043:2: rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__STCaseCases__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0"


    // $ANTLR start "rule__STCaseCases__Group__0__Impl"
    // InternalSTCoreParser.g:4050:1: rule__STCaseCases__Group__0__Impl : ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) ;
    public final void rule__STCaseCases__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4054:1: ( ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) )
            // InternalSTCoreParser.g:4055:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            {
            // InternalSTCoreParser.g:4055:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            // InternalSTCoreParser.g:4056:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }
            // InternalSTCoreParser.g:4057:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            // InternalSTCoreParser.g:4057:3: rule__STCaseCases__ConditionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group__1"
    // InternalSTCoreParser.g:4065:1: rule__STCaseCases__Group__1 : rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 ;
    public final void rule__STCaseCases__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4069:1: ( rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 )
            // InternalSTCoreParser.g:4070:2: rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2
            {
            pushFollow(FOLLOW_29);
            rule__STCaseCases__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1"


    // $ANTLR start "rule__STCaseCases__Group__1__Impl"
    // InternalSTCoreParser.g:4077:1: rule__STCaseCases__Group__1__Impl : ( ( rule__STCaseCases__Group_1__0 )* ) ;
    public final void rule__STCaseCases__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4081:1: ( ( ( rule__STCaseCases__Group_1__0 )* ) )
            // InternalSTCoreParser.g:4082:1: ( ( rule__STCaseCases__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:4082:1: ( ( rule__STCaseCases__Group_1__0 )* )
            // InternalSTCoreParser.g:4083:2: ( rule__STCaseCases__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:4084:2: ( rule__STCaseCases__Group_1__0 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==Comma) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalSTCoreParser.g:4084:3: rule__STCaseCases__Group_1__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STCaseCases__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1__Impl"


    // $ANTLR start "rule__STCaseCases__Group__2"
    // InternalSTCoreParser.g:4092:1: rule__STCaseCases__Group__2 : rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 ;
    public final void rule__STCaseCases__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4096:1: ( rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 )
            // InternalSTCoreParser.g:4097:2: rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__STCaseCases__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2"


    // $ANTLR start "rule__STCaseCases__Group__2__Impl"
    // InternalSTCoreParser.g:4104:1: rule__STCaseCases__Group__2__Impl : ( Colon ) ;
    public final void rule__STCaseCases__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4108:1: ( ( Colon ) )
            // InternalSTCoreParser.g:4109:1: ( Colon )
            {
            // InternalSTCoreParser.g:4109:1: ( Colon )
            // InternalSTCoreParser.g:4110:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2__Impl"


    // $ANTLR start "rule__STCaseCases__Group__3"
    // InternalSTCoreParser.g:4119:1: rule__STCaseCases__Group__3 : rule__STCaseCases__Group__3__Impl ;
    public final void rule__STCaseCases__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4123:1: ( rule__STCaseCases__Group__3__Impl )
            // InternalSTCoreParser.g:4124:2: rule__STCaseCases__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3"


    // $ANTLR start "rule__STCaseCases__Group__3__Impl"
    // InternalSTCoreParser.g:4130:1: rule__STCaseCases__Group__3__Impl : ( ( rule__STCaseCases__StatementsAssignment_3 )* ) ;
    public final void rule__STCaseCases__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4134:1: ( ( ( rule__STCaseCases__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:4135:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:4135:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:4136:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:4137:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==RULE_ID) ) {
                    int LA41_2 = input.LA(2);

                    if ( (LA41_2==ColonEqualsSign) ) {
                        alt41=1;
                    }


                }
                else if ( (LA41_0==CONTINUE||(LA41_0>=REPEAT && LA41_0<=RETURN)||LA41_0==WHILE||LA41_0==CASE||LA41_0==EXIT||LA41_0==FOR||LA41_0==IF||LA41_0==Semicolon) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalSTCoreParser.g:4137:3: rule__STCaseCases__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STCaseCases__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__0"
    // InternalSTCoreParser.g:4146:1: rule__STCaseCases__Group_1__0 : rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 ;
    public final void rule__STCaseCases__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4150:1: ( rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 )
            // InternalSTCoreParser.g:4151:2: rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STCaseCases__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0"


    // $ANTLR start "rule__STCaseCases__Group_1__0__Impl"
    // InternalSTCoreParser.g:4158:1: rule__STCaseCases__Group_1__0__Impl : ( Comma ) ;
    public final void rule__STCaseCases__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4162:1: ( ( Comma ) )
            // InternalSTCoreParser.g:4163:1: ( Comma )
            {
            // InternalSTCoreParser.g:4163:1: ( Comma )
            // InternalSTCoreParser.g:4164:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__1"
    // InternalSTCoreParser.g:4173:1: rule__STCaseCases__Group_1__1 : rule__STCaseCases__Group_1__1__Impl ;
    public final void rule__STCaseCases__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4177:1: ( rule__STCaseCases__Group_1__1__Impl )
            // InternalSTCoreParser.g:4178:2: rule__STCaseCases__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1"


    // $ANTLR start "rule__STCaseCases__Group_1__1__Impl"
    // InternalSTCoreParser.g:4184:1: rule__STCaseCases__Group_1__1__Impl : ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) ;
    public final void rule__STCaseCases__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4188:1: ( ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:4189:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:4189:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            // InternalSTCoreParser.g:4190:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:4191:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            // InternalSTCoreParser.g:4191:3: rule__STCaseCases__ConditionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__0"
    // InternalSTCoreParser.g:4200:1: rule__STElsePart__Group__0 : rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 ;
    public final void rule__STElsePart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4204:1: ( rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 )
            // InternalSTCoreParser.g:4205:2: rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__STElsePart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0"


    // $ANTLR start "rule__STElsePart__Group__0__Impl"
    // InternalSTCoreParser.g:4212:1: rule__STElsePart__Group__0__Impl : ( () ) ;
    public final void rule__STElsePart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4216:1: ( ( () ) )
            // InternalSTCoreParser.g:4217:1: ( () )
            {
            // InternalSTCoreParser.g:4217:1: ( () )
            // InternalSTCoreParser.g:4218:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }
            // InternalSTCoreParser.g:4219:2: ()
            // InternalSTCoreParser.g:4219:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0__Impl"


    // $ANTLR start "rule__STElsePart__Group__1"
    // InternalSTCoreParser.g:4227:1: rule__STElsePart__Group__1 : rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 ;
    public final void rule__STElsePart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4231:1: ( rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 )
            // InternalSTCoreParser.g:4232:2: rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__STElsePart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1"


    // $ANTLR start "rule__STElsePart__Group__1__Impl"
    // InternalSTCoreParser.g:4239:1: rule__STElsePart__Group__1__Impl : ( ELSE ) ;
    public final void rule__STElsePart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4243:1: ( ( ELSE ) )
            // InternalSTCoreParser.g:4244:1: ( ELSE )
            {
            // InternalSTCoreParser.g:4244:1: ( ELSE )
            // InternalSTCoreParser.g:4245:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__2"
    // InternalSTCoreParser.g:4254:1: rule__STElsePart__Group__2 : rule__STElsePart__Group__2__Impl ;
    public final void rule__STElsePart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4258:1: ( rule__STElsePart__Group__2__Impl )
            // InternalSTCoreParser.g:4259:2: rule__STElsePart__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2"


    // $ANTLR start "rule__STElsePart__Group__2__Impl"
    // InternalSTCoreParser.g:4265:1: rule__STElsePart__Group__2__Impl : ( ( rule__STElsePart__StatementsAssignment_2 )* ) ;
    public final void rule__STElsePart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4269:1: ( ( ( rule__STElsePart__StatementsAssignment_2 )* ) )
            // InternalSTCoreParser.g:4270:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            {
            // InternalSTCoreParser.g:4270:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            // InternalSTCoreParser.g:4271:2: ( rule__STElsePart__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }
            // InternalSTCoreParser.g:4272:2: ( rule__STElsePart__StatementsAssignment_2 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==CONTINUE||(LA42_0>=REPEAT && LA42_0<=RETURN)||LA42_0==WHILE||LA42_0==CASE||LA42_0==EXIT||LA42_0==FOR||LA42_0==IF||LA42_0==Semicolon||LA42_0==RULE_ID) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalSTCoreParser.g:4272:3: rule__STElsePart__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STElsePart__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__0"
    // InternalSTCoreParser.g:4281:1: rule__STForStatement__Group__0 : rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 ;
    public final void rule__STForStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4285:1: ( rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 )
            // InternalSTCoreParser.g:4286:2: rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STForStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0"


    // $ANTLR start "rule__STForStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4293:1: rule__STForStatement__Group__0__Impl : ( FOR ) ;
    public final void rule__STForStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4297:1: ( ( FOR ) )
            // InternalSTCoreParser.g:4298:1: ( FOR )
            {
            // InternalSTCoreParser.g:4298:1: ( FOR )
            // InternalSTCoreParser.g:4299:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0__Impl"


    // $ANTLR start "rule__STForStatement__Group__1"
    // InternalSTCoreParser.g:4308:1: rule__STForStatement__Group__1 : rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 ;
    public final void rule__STForStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4312:1: ( rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 )
            // InternalSTCoreParser.g:4313:2: rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__STForStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1"


    // $ANTLR start "rule__STForStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4320:1: rule__STForStatement__Group__1__Impl : ( ( rule__STForStatement__ForAssignment_1 ) ) ;
    public final void rule__STForStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4324:1: ( ( ( rule__STForStatement__ForAssignment_1 ) ) )
            // InternalSTCoreParser.g:4325:1: ( ( rule__STForStatement__ForAssignment_1 ) )
            {
            // InternalSTCoreParser.g:4325:1: ( ( rule__STForStatement__ForAssignment_1 ) )
            // InternalSTCoreParser.g:4326:2: ( rule__STForStatement__ForAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getForAssignment_1()); 
            }
            // InternalSTCoreParser.g:4327:2: ( rule__STForStatement__ForAssignment_1 )
            // InternalSTCoreParser.g:4327:3: rule__STForStatement__ForAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ForAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getForAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1__Impl"


    // $ANTLR start "rule__STForStatement__Group__2"
    // InternalSTCoreParser.g:4335:1: rule__STForStatement__Group__2 : rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 ;
    public final void rule__STForStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4339:1: ( rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 )
            // InternalSTCoreParser.g:4340:2: rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STForStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2"


    // $ANTLR start "rule__STForStatement__Group__2__Impl"
    // InternalSTCoreParser.g:4347:1: rule__STForStatement__Group__2__Impl : ( TO ) ;
    public final void rule__STForStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4351:1: ( ( TO ) )
            // InternalSTCoreParser.g:4352:1: ( TO )
            {
            // InternalSTCoreParser.g:4352:1: ( TO )
            // InternalSTCoreParser.g:4353:2: TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getTOKeyword_2()); 
            }
            match(input,TO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getTOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__3"
    // InternalSTCoreParser.g:4362:1: rule__STForStatement__Group__3 : rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 ;
    public final void rule__STForStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4366:1: ( rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 )
            // InternalSTCoreParser.g:4367:2: rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4
            {
            pushFollow(FOLLOW_32);
            rule__STForStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3"


    // $ANTLR start "rule__STForStatement__Group__3__Impl"
    // InternalSTCoreParser.g:4374:1: rule__STForStatement__Group__3__Impl : ( ( rule__STForStatement__ToAssignment_3 ) ) ;
    public final void rule__STForStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4378:1: ( ( ( rule__STForStatement__ToAssignment_3 ) ) )
            // InternalSTCoreParser.g:4379:1: ( ( rule__STForStatement__ToAssignment_3 ) )
            {
            // InternalSTCoreParser.g:4379:1: ( ( rule__STForStatement__ToAssignment_3 ) )
            // InternalSTCoreParser.g:4380:2: ( rule__STForStatement__ToAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToAssignment_3()); 
            }
            // InternalSTCoreParser.g:4381:2: ( rule__STForStatement__ToAssignment_3 )
            // InternalSTCoreParser.g:4381:3: rule__STForStatement__ToAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ToAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3__Impl"


    // $ANTLR start "rule__STForStatement__Group__4"
    // InternalSTCoreParser.g:4389:1: rule__STForStatement__Group__4 : rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 ;
    public final void rule__STForStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4393:1: ( rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 )
            // InternalSTCoreParser.g:4394:2: rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5
            {
            pushFollow(FOLLOW_32);
            rule__STForStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4"


    // $ANTLR start "rule__STForStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4401:1: rule__STForStatement__Group__4__Impl : ( ( rule__STForStatement__Group_4__0 )? ) ;
    public final void rule__STForStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4405:1: ( ( ( rule__STForStatement__Group_4__0 )? ) )
            // InternalSTCoreParser.g:4406:1: ( ( rule__STForStatement__Group_4__0 )? )
            {
            // InternalSTCoreParser.g:4406:1: ( ( rule__STForStatement__Group_4__0 )? )
            // InternalSTCoreParser.g:4407:2: ( rule__STForStatement__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup_4()); 
            }
            // InternalSTCoreParser.g:4408:2: ( rule__STForStatement__Group_4__0 )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==BY) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalSTCoreParser.g:4408:3: rule__STForStatement__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STForStatement__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4__Impl"


    // $ANTLR start "rule__STForStatement__Group__5"
    // InternalSTCoreParser.g:4416:1: rule__STForStatement__Group__5 : rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 ;
    public final void rule__STForStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4420:1: ( rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 )
            // InternalSTCoreParser.g:4421:2: rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6
            {
            pushFollow(FOLLOW_33);
            rule__STForStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5"


    // $ANTLR start "rule__STForStatement__Group__5__Impl"
    // InternalSTCoreParser.g:4428:1: rule__STForStatement__Group__5__Impl : ( DO ) ;
    public final void rule__STForStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4432:1: ( ( DO ) )
            // InternalSTCoreParser.g:4433:1: ( DO )
            {
            // InternalSTCoreParser.g:4433:1: ( DO )
            // InternalSTCoreParser.g:4434:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getDOKeyword_5()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getDOKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5__Impl"


    // $ANTLR start "rule__STForStatement__Group__6"
    // InternalSTCoreParser.g:4443:1: rule__STForStatement__Group__6 : rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 ;
    public final void rule__STForStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4447:1: ( rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 )
            // InternalSTCoreParser.g:4448:2: rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7
            {
            pushFollow(FOLLOW_33);
            rule__STForStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6"


    // $ANTLR start "rule__STForStatement__Group__6__Impl"
    // InternalSTCoreParser.g:4455:1: rule__STForStatement__Group__6__Impl : ( ( rule__STForStatement__StatementsAssignment_6 )* ) ;
    public final void rule__STForStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4459:1: ( ( ( rule__STForStatement__StatementsAssignment_6 )* ) )
            // InternalSTCoreParser.g:4460:1: ( ( rule__STForStatement__StatementsAssignment_6 )* )
            {
            // InternalSTCoreParser.g:4460:1: ( ( rule__STForStatement__StatementsAssignment_6 )* )
            // InternalSTCoreParser.g:4461:2: ( rule__STForStatement__StatementsAssignment_6 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsAssignment_6()); 
            }
            // InternalSTCoreParser.g:4462:2: ( rule__STForStatement__StatementsAssignment_6 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==CONTINUE||(LA44_0>=REPEAT && LA44_0<=RETURN)||LA44_0==WHILE||LA44_0==CASE||LA44_0==EXIT||LA44_0==FOR||LA44_0==IF||LA44_0==Semicolon||LA44_0==RULE_ID) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalSTCoreParser.g:4462:3: rule__STForStatement__StatementsAssignment_6
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STForStatement__StatementsAssignment_6();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6__Impl"


    // $ANTLR start "rule__STForStatement__Group__7"
    // InternalSTCoreParser.g:4470:1: rule__STForStatement__Group__7 : rule__STForStatement__Group__7__Impl ;
    public final void rule__STForStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4474:1: ( rule__STForStatement__Group__7__Impl )
            // InternalSTCoreParser.g:4475:2: rule__STForStatement__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7"


    // $ANTLR start "rule__STForStatement__Group__7__Impl"
    // InternalSTCoreParser.g:4481:1: rule__STForStatement__Group__7__Impl : ( END_FOR ) ;
    public final void rule__STForStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4485:1: ( ( END_FOR ) )
            // InternalSTCoreParser.g:4486:1: ( END_FOR )
            {
            // InternalSTCoreParser.g:4486:1: ( END_FOR )
            // InternalSTCoreParser.g:4487:2: END_FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_7()); 
            }
            match(input,END_FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7__Impl"


    // $ANTLR start "rule__STForStatement__Group_4__0"
    // InternalSTCoreParser.g:4497:1: rule__STForStatement__Group_4__0 : rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1 ;
    public final void rule__STForStatement__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4501:1: ( rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1 )
            // InternalSTCoreParser.g:4502:2: rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1
            {
            pushFollow(FOLLOW_10);
            rule__STForStatement__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__0"


    // $ANTLR start "rule__STForStatement__Group_4__0__Impl"
    // InternalSTCoreParser.g:4509:1: rule__STForStatement__Group_4__0__Impl : ( BY ) ;
    public final void rule__STForStatement__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4513:1: ( ( BY ) )
            // InternalSTCoreParser.g:4514:1: ( BY )
            {
            // InternalSTCoreParser.g:4514:1: ( BY )
            // InternalSTCoreParser.g:4515:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBYKeyword_4_0()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBYKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__0__Impl"


    // $ANTLR start "rule__STForStatement__Group_4__1"
    // InternalSTCoreParser.g:4524:1: rule__STForStatement__Group_4__1 : rule__STForStatement__Group_4__1__Impl ;
    public final void rule__STForStatement__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4528:1: ( rule__STForStatement__Group_4__1__Impl )
            // InternalSTCoreParser.g:4529:2: rule__STForStatement__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__1"


    // $ANTLR start "rule__STForStatement__Group_4__1__Impl"
    // InternalSTCoreParser.g:4535:1: rule__STForStatement__Group_4__1__Impl : ( ( rule__STForStatement__ByAssignment_4_1 ) ) ;
    public final void rule__STForStatement__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4539:1: ( ( ( rule__STForStatement__ByAssignment_4_1 ) ) )
            // InternalSTCoreParser.g:4540:1: ( ( rule__STForStatement__ByAssignment_4_1 ) )
            {
            // InternalSTCoreParser.g:4540:1: ( ( rule__STForStatement__ByAssignment_4_1 ) )
            // InternalSTCoreParser.g:4541:2: ( rule__STForStatement__ByAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getByAssignment_4_1()); 
            }
            // InternalSTCoreParser.g:4542:2: ( rule__STForStatement__ByAssignment_4_1 )
            // InternalSTCoreParser.g:4542:3: rule__STForStatement__ByAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ByAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getByAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__0"
    // InternalSTCoreParser.g:4551:1: rule__STWhileStatement__Group__0 : rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 ;
    public final void rule__STWhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4555:1: ( rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 )
            // InternalSTCoreParser.g:4556:2: rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STWhileStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0"


    // $ANTLR start "rule__STWhileStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4563:1: rule__STWhileStatement__Group__0__Impl : ( WHILE ) ;
    public final void rule__STWhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4567:1: ( ( WHILE ) )
            // InternalSTCoreParser.g:4568:1: ( WHILE )
            {
            // InternalSTCoreParser.g:4568:1: ( WHILE )
            // InternalSTCoreParser.g:4569:2: WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }
            match(input,WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__1"
    // InternalSTCoreParser.g:4578:1: rule__STWhileStatement__Group__1 : rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 ;
    public final void rule__STWhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4582:1: ( rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 )
            // InternalSTCoreParser.g:4583:2: rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__STWhileStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1"


    // $ANTLR start "rule__STWhileStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4590:1: rule__STWhileStatement__Group__1__Impl : ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STWhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4594:1: ( ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) )
            // InternalSTCoreParser.g:4595:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            {
            // InternalSTCoreParser.g:4595:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            // InternalSTCoreParser.g:4596:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTCoreParser.g:4597:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            // InternalSTCoreParser.g:4597:3: rule__STWhileStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__2"
    // InternalSTCoreParser.g:4605:1: rule__STWhileStatement__Group__2 : rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 ;
    public final void rule__STWhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4609:1: ( rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 )
            // InternalSTCoreParser.g:4610:2: rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__STWhileStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2"


    // $ANTLR start "rule__STWhileStatement__Group__2__Impl"
    // InternalSTCoreParser.g:4617:1: rule__STWhileStatement__Group__2__Impl : ( DO ) ;
    public final void rule__STWhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4621:1: ( ( DO ) )
            // InternalSTCoreParser.g:4622:1: ( DO )
            {
            // InternalSTCoreParser.g:4622:1: ( DO )
            // InternalSTCoreParser.g:4623:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__3"
    // InternalSTCoreParser.g:4632:1: rule__STWhileStatement__Group__3 : rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 ;
    public final void rule__STWhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4636:1: ( rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 )
            // InternalSTCoreParser.g:4637:2: rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4
            {
            pushFollow(FOLLOW_35);
            rule__STWhileStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3"


    // $ANTLR start "rule__STWhileStatement__Group__3__Impl"
    // InternalSTCoreParser.g:4644:1: rule__STWhileStatement__Group__3__Impl : ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STWhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4648:1: ( ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:4649:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:4649:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:4650:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:4651:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==CONTINUE||(LA45_0>=REPEAT && LA45_0<=RETURN)||LA45_0==WHILE||LA45_0==CASE||LA45_0==EXIT||LA45_0==FOR||LA45_0==IF||LA45_0==Semicolon||LA45_0==RULE_ID) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalSTCoreParser.g:4651:3: rule__STWhileStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STWhileStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__4"
    // InternalSTCoreParser.g:4659:1: rule__STWhileStatement__Group__4 : rule__STWhileStatement__Group__4__Impl ;
    public final void rule__STWhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4663:1: ( rule__STWhileStatement__Group__4__Impl )
            // InternalSTCoreParser.g:4664:2: rule__STWhileStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4"


    // $ANTLR start "rule__STWhileStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4670:1: rule__STWhileStatement__Group__4__Impl : ( END_WHILE ) ;
    public final void rule__STWhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4674:1: ( ( END_WHILE ) )
            // InternalSTCoreParser.g:4675:1: ( END_WHILE )
            {
            // InternalSTCoreParser.g:4675:1: ( END_WHILE )
            // InternalSTCoreParser.g:4676:2: END_WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }
            match(input,END_WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__0"
    // InternalSTCoreParser.g:4686:1: rule__STRepeatStatement__Group__0 : rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 ;
    public final void rule__STRepeatStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4690:1: ( rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 )
            // InternalSTCoreParser.g:4691:2: rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__STRepeatStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0"


    // $ANTLR start "rule__STRepeatStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4698:1: rule__STRepeatStatement__Group__0__Impl : ( REPEAT ) ;
    public final void rule__STRepeatStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4702:1: ( ( REPEAT ) )
            // InternalSTCoreParser.g:4703:1: ( REPEAT )
            {
            // InternalSTCoreParser.g:4703:1: ( REPEAT )
            // InternalSTCoreParser.g:4704:2: REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }
            match(input,REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__1"
    // InternalSTCoreParser.g:4713:1: rule__STRepeatStatement__Group__1 : rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 ;
    public final void rule__STRepeatStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4717:1: ( rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 )
            // InternalSTCoreParser.g:4718:2: rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2
            {
            pushFollow(FOLLOW_36);
            rule__STRepeatStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1"


    // $ANTLR start "rule__STRepeatStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4725:1: rule__STRepeatStatement__Group__1__Impl : ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) ;
    public final void rule__STRepeatStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4729:1: ( ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) )
            // InternalSTCoreParser.g:4730:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            {
            // InternalSTCoreParser.g:4730:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            // InternalSTCoreParser.g:4731:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }
            // InternalSTCoreParser.g:4732:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==CONTINUE||(LA46_0>=REPEAT && LA46_0<=RETURN)||LA46_0==WHILE||LA46_0==CASE||LA46_0==EXIT||LA46_0==FOR||LA46_0==IF||LA46_0==Semicolon||LA46_0==RULE_ID) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalSTCoreParser.g:4732:3: rule__STRepeatStatement__StatementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STRepeatStatement__StatementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__2"
    // InternalSTCoreParser.g:4740:1: rule__STRepeatStatement__Group__2 : rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 ;
    public final void rule__STRepeatStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4744:1: ( rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 )
            // InternalSTCoreParser.g:4745:2: rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STRepeatStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2"


    // $ANTLR start "rule__STRepeatStatement__Group__2__Impl"
    // InternalSTCoreParser.g:4752:1: rule__STRepeatStatement__Group__2__Impl : ( UNTIL ) ;
    public final void rule__STRepeatStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4756:1: ( ( UNTIL ) )
            // InternalSTCoreParser.g:4757:1: ( UNTIL )
            {
            // InternalSTCoreParser.g:4757:1: ( UNTIL )
            // InternalSTCoreParser.g:4758:2: UNTIL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }
            match(input,UNTIL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__3"
    // InternalSTCoreParser.g:4767:1: rule__STRepeatStatement__Group__3 : rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 ;
    public final void rule__STRepeatStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4771:1: ( rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 )
            // InternalSTCoreParser.g:4772:2: rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4
            {
            pushFollow(FOLLOW_37);
            rule__STRepeatStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3"


    // $ANTLR start "rule__STRepeatStatement__Group__3__Impl"
    // InternalSTCoreParser.g:4779:1: rule__STRepeatStatement__Group__3__Impl : ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) ;
    public final void rule__STRepeatStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4783:1: ( ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) )
            // InternalSTCoreParser.g:4784:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            {
            // InternalSTCoreParser.g:4784:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            // InternalSTCoreParser.g:4785:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }
            // InternalSTCoreParser.g:4786:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            // InternalSTCoreParser.g:4786:3: rule__STRepeatStatement__ConditionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__ConditionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__4"
    // InternalSTCoreParser.g:4794:1: rule__STRepeatStatement__Group__4 : rule__STRepeatStatement__Group__4__Impl ;
    public final void rule__STRepeatStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4798:1: ( rule__STRepeatStatement__Group__4__Impl )
            // InternalSTCoreParser.g:4799:2: rule__STRepeatStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4"


    // $ANTLR start "rule__STRepeatStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4805:1: rule__STRepeatStatement__Group__4__Impl : ( END_REPEAT ) ;
    public final void rule__STRepeatStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4809:1: ( ( END_REPEAT ) )
            // InternalSTCoreParser.g:4810:1: ( END_REPEAT )
            {
            // InternalSTCoreParser.g:4810:1: ( END_REPEAT )
            // InternalSTCoreParser.g:4811:2: END_REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }
            match(input,END_REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__0"
    // InternalSTCoreParser.g:4821:1: rule__STSubrangeExpression__Group__0 : rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 ;
    public final void rule__STSubrangeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4825:1: ( rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 )
            // InternalSTCoreParser.g:4826:2: rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__STSubrangeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0"


    // $ANTLR start "rule__STSubrangeExpression__Group__0__Impl"
    // InternalSTCoreParser.g:4833:1: rule__STSubrangeExpression__Group__0__Impl : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4837:1: ( ( ruleSTOrExpression ) )
            // InternalSTCoreParser.g:4838:1: ( ruleSTOrExpression )
            {
            // InternalSTCoreParser.g:4838:1: ( ruleSTOrExpression )
            // InternalSTCoreParser.g:4839:2: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__1"
    // InternalSTCoreParser.g:4848:1: rule__STSubrangeExpression__Group__1 : rule__STSubrangeExpression__Group__1__Impl ;
    public final void rule__STSubrangeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4852:1: ( rule__STSubrangeExpression__Group__1__Impl )
            // InternalSTCoreParser.g:4853:2: rule__STSubrangeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1"


    // $ANTLR start "rule__STSubrangeExpression__Group__1__Impl"
    // InternalSTCoreParser.g:4859:1: rule__STSubrangeExpression__Group__1__Impl : ( ( rule__STSubrangeExpression__Group_1__0 )* ) ;
    public final void rule__STSubrangeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4863:1: ( ( ( rule__STSubrangeExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:4864:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:4864:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:4865:2: ( rule__STSubrangeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:4866:2: ( rule__STSubrangeExpression__Group_1__0 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==FullStopFullStop) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalSTCoreParser.g:4866:3: rule__STSubrangeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_39);
            	    rule__STSubrangeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0"
    // InternalSTCoreParser.g:4875:1: rule__STSubrangeExpression__Group_1__0 : rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 ;
    public final void rule__STSubrangeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4879:1: ( rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 )
            // InternalSTCoreParser.g:4880:2: rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STSubrangeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:4887:1: rule__STSubrangeExpression__Group_1__0__Impl : ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4891:1: ( ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:4892:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:4892:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:4893:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:4894:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:4894:3: rule__STSubrangeExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1"
    // InternalSTCoreParser.g:4902:1: rule__STSubrangeExpression__Group_1__1 : rule__STSubrangeExpression__Group_1__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4906:1: ( rule__STSubrangeExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:4907:2: rule__STSubrangeExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:4913:1: rule__STSubrangeExpression__Group_1__1__Impl : ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4917:1: ( ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:4918:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:4918:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:4919:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:4920:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:4920:3: rule__STSubrangeExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0"
    // InternalSTCoreParser.g:4929:1: rule__STSubrangeExpression__Group_1_0__0 : rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 ;
    public final void rule__STSubrangeExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4933:1: ( rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:4934:2: rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_38);
            rule__STSubrangeExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:4941:1: rule__STSubrangeExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STSubrangeExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4945:1: ( ( () ) )
            // InternalSTCoreParser.g:4946:1: ( () )
            {
            // InternalSTCoreParser.g:4946:1: ( () )
            // InternalSTCoreParser.g:4947:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:4948:2: ()
            // InternalSTCoreParser.g:4948:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1"
    // InternalSTCoreParser.g:4956:1: rule__STSubrangeExpression__Group_1_0__1 : rule__STSubrangeExpression__Group_1_0__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4960:1: ( rule__STSubrangeExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:4961:2: rule__STSubrangeExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:4967:1: rule__STSubrangeExpression__Group_1_0__1__Impl : ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4971:1: ( ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:4972:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:4972:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:4973:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:4974:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:4974:3: rule__STSubrangeExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group__0"
    // InternalSTCoreParser.g:4983:1: rule__STOrExpression__Group__0 : rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 ;
    public final void rule__STOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4987:1: ( rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 )
            // InternalSTCoreParser.g:4988:2: rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__STOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0"


    // $ANTLR start "rule__STOrExpression__Group__0__Impl"
    // InternalSTCoreParser.g:4995:1: rule__STOrExpression__Group__0__Impl : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4999:1: ( ( ruleSTXorExpression ) )
            // InternalSTCoreParser.g:5000:1: ( ruleSTXorExpression )
            {
            // InternalSTCoreParser.g:5000:1: ( ruleSTXorExpression )
            // InternalSTCoreParser.g:5001:2: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group__1"
    // InternalSTCoreParser.g:5010:1: rule__STOrExpression__Group__1 : rule__STOrExpression__Group__1__Impl ;
    public final void rule__STOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5014:1: ( rule__STOrExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5015:2: rule__STOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1"


    // $ANTLR start "rule__STOrExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5021:1: rule__STOrExpression__Group__1__Impl : ( ( rule__STOrExpression__Group_1__0 )* ) ;
    public final void rule__STOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5025:1: ( ( ( rule__STOrExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5026:1: ( ( rule__STOrExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5026:1: ( ( rule__STOrExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5027:2: ( rule__STOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5028:2: ( rule__STOrExpression__Group_1__0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==OR) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalSTCoreParser.g:5028:3: rule__STOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_41);
            	    rule__STOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__0"
    // InternalSTCoreParser.g:5037:1: rule__STOrExpression__Group_1__0 : rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 ;
    public final void rule__STOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5041:1: ( rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 )
            // InternalSTCoreParser.g:5042:2: rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0"


    // $ANTLR start "rule__STOrExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5049:1: rule__STOrExpression__Group_1__0__Impl : ( ( rule__STOrExpression__Group_1_0__0 ) ) ;
    public final void rule__STOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5053:1: ( ( ( rule__STOrExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5054:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5054:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5055:2: ( rule__STOrExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5056:2: ( rule__STOrExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5056:3: rule__STOrExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__1"
    // InternalSTCoreParser.g:5064:1: rule__STOrExpression__Group_1__1 : rule__STOrExpression__Group_1__1__Impl ;
    public final void rule__STOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5068:1: ( rule__STOrExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5069:2: rule__STOrExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1"


    // $ANTLR start "rule__STOrExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5075:1: rule__STOrExpression__Group_1__1__Impl : ( ( rule__STOrExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5079:1: ( ( ( rule__STOrExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5080:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5080:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5081:2: ( rule__STOrExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5082:2: ( rule__STOrExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5082:3: rule__STOrExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5091:1: rule__STOrExpression__Group_1_0__0 : rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 ;
    public final void rule__STOrExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5095:1: ( rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5096:2: rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_40);
            rule__STOrExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5103:1: rule__STOrExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STOrExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5107:1: ( ( () ) )
            // InternalSTCoreParser.g:5108:1: ( () )
            {
            // InternalSTCoreParser.g:5108:1: ( () )
            // InternalSTCoreParser.g:5109:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5110:2: ()
            // InternalSTCoreParser.g:5110:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5118:1: rule__STOrExpression__Group_1_0__1 : rule__STOrExpression__Group_1_0__1__Impl ;
    public final void rule__STOrExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5122:1: ( rule__STOrExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5123:2: rule__STOrExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5129:1: rule__STOrExpression__Group_1_0__1__Impl : ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STOrExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5133:1: ( ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5134:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5134:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5135:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5136:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5136:3: rule__STOrExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group__0"
    // InternalSTCoreParser.g:5145:1: rule__STXorExpression__Group__0 : rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 ;
    public final void rule__STXorExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5149:1: ( rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 )
            // InternalSTCoreParser.g:5150:2: rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__STXorExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0"


    // $ANTLR start "rule__STXorExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5157:1: rule__STXorExpression__Group__0__Impl : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5161:1: ( ( ruleSTAndExpression ) )
            // InternalSTCoreParser.g:5162:1: ( ruleSTAndExpression )
            {
            // InternalSTCoreParser.g:5162:1: ( ruleSTAndExpression )
            // InternalSTCoreParser.g:5163:2: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group__1"
    // InternalSTCoreParser.g:5172:1: rule__STXorExpression__Group__1 : rule__STXorExpression__Group__1__Impl ;
    public final void rule__STXorExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5176:1: ( rule__STXorExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5177:2: rule__STXorExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1"


    // $ANTLR start "rule__STXorExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5183:1: rule__STXorExpression__Group__1__Impl : ( ( rule__STXorExpression__Group_1__0 )* ) ;
    public final void rule__STXorExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5187:1: ( ( ( rule__STXorExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5188:1: ( ( rule__STXorExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5188:1: ( ( rule__STXorExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5189:2: ( rule__STXorExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5190:2: ( rule__STXorExpression__Group_1__0 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==XOR) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalSTCoreParser.g:5190:3: rule__STXorExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_43);
            	    rule__STXorExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__0"
    // InternalSTCoreParser.g:5199:1: rule__STXorExpression__Group_1__0 : rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 ;
    public final void rule__STXorExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5203:1: ( rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 )
            // InternalSTCoreParser.g:5204:2: rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STXorExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0"


    // $ANTLR start "rule__STXorExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5211:1: rule__STXorExpression__Group_1__0__Impl : ( ( rule__STXorExpression__Group_1_0__0 ) ) ;
    public final void rule__STXorExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5215:1: ( ( ( rule__STXorExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5216:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5216:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5217:2: ( rule__STXorExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5218:2: ( rule__STXorExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5218:3: rule__STXorExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__1"
    // InternalSTCoreParser.g:5226:1: rule__STXorExpression__Group_1__1 : rule__STXorExpression__Group_1__1__Impl ;
    public final void rule__STXorExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5230:1: ( rule__STXorExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5231:2: rule__STXorExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1"


    // $ANTLR start "rule__STXorExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5237:1: rule__STXorExpression__Group_1__1__Impl : ( ( rule__STXorExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STXorExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5241:1: ( ( ( rule__STXorExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5242:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5242:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5243:2: ( rule__STXorExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5244:2: ( rule__STXorExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5244:3: rule__STXorExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5253:1: rule__STXorExpression__Group_1_0__0 : rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 ;
    public final void rule__STXorExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5257:1: ( rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5258:2: rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_42);
            rule__STXorExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5265:1: rule__STXorExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STXorExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5269:1: ( ( () ) )
            // InternalSTCoreParser.g:5270:1: ( () )
            {
            // InternalSTCoreParser.g:5270:1: ( () )
            // InternalSTCoreParser.g:5271:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5272:2: ()
            // InternalSTCoreParser.g:5272:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5280:1: rule__STXorExpression__Group_1_0__1 : rule__STXorExpression__Group_1_0__1__Impl ;
    public final void rule__STXorExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5284:1: ( rule__STXorExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5285:2: rule__STXorExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5291:1: rule__STXorExpression__Group_1_0__1__Impl : ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STXorExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5295:1: ( ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5296:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5296:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5297:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5298:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5298:3: rule__STXorExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group__0"
    // InternalSTCoreParser.g:5307:1: rule__STAndExpression__Group__0 : rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 ;
    public final void rule__STAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5311:1: ( rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 )
            // InternalSTCoreParser.g:5312:2: rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1
            {
            pushFollow(FOLLOW_44);
            rule__STAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0"


    // $ANTLR start "rule__STAndExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5319:1: rule__STAndExpression__Group__0__Impl : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5323:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTCoreParser.g:5324:1: ( ruleSTEqualityExpression )
            {
            // InternalSTCoreParser.g:5324:1: ( ruleSTEqualityExpression )
            // InternalSTCoreParser.g:5325:2: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group__1"
    // InternalSTCoreParser.g:5334:1: rule__STAndExpression__Group__1 : rule__STAndExpression__Group__1__Impl ;
    public final void rule__STAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5338:1: ( rule__STAndExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5339:2: rule__STAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1"


    // $ANTLR start "rule__STAndExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5345:1: rule__STAndExpression__Group__1__Impl : ( ( rule__STAndExpression__Group_1__0 )* ) ;
    public final void rule__STAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5349:1: ( ( ( rule__STAndExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5350:1: ( ( rule__STAndExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5350:1: ( ( rule__STAndExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5351:2: ( rule__STAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5352:2: ( rule__STAndExpression__Group_1__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==AND||LA50_0==Ampersand) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalSTCoreParser.g:5352:3: rule__STAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_45);
            	    rule__STAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__0"
    // InternalSTCoreParser.g:5361:1: rule__STAndExpression__Group_1__0 : rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 ;
    public final void rule__STAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5365:1: ( rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 )
            // InternalSTCoreParser.g:5366:2: rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0"


    // $ANTLR start "rule__STAndExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5373:1: rule__STAndExpression__Group_1__0__Impl : ( ( rule__STAndExpression__Group_1_0__0 ) ) ;
    public final void rule__STAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5377:1: ( ( ( rule__STAndExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5378:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5378:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5379:2: ( rule__STAndExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5380:2: ( rule__STAndExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5380:3: rule__STAndExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__1"
    // InternalSTCoreParser.g:5388:1: rule__STAndExpression__Group_1__1 : rule__STAndExpression__Group_1__1__Impl ;
    public final void rule__STAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5392:1: ( rule__STAndExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5393:2: rule__STAndExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1"


    // $ANTLR start "rule__STAndExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5399:1: rule__STAndExpression__Group_1__1__Impl : ( ( rule__STAndExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5403:1: ( ( ( rule__STAndExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5404:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5404:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5405:2: ( rule__STAndExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5406:2: ( rule__STAndExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5406:3: rule__STAndExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5415:1: rule__STAndExpression__Group_1_0__0 : rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 ;
    public final void rule__STAndExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5419:1: ( rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5420:2: rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_44);
            rule__STAndExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5427:1: rule__STAndExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAndExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5431:1: ( ( () ) )
            // InternalSTCoreParser.g:5432:1: ( () )
            {
            // InternalSTCoreParser.g:5432:1: ( () )
            // InternalSTCoreParser.g:5433:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5434:2: ()
            // InternalSTCoreParser.g:5434:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5442:1: rule__STAndExpression__Group_1_0__1 : rule__STAndExpression__Group_1_0__1__Impl ;
    public final void rule__STAndExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5446:1: ( rule__STAndExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5447:2: rule__STAndExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5453:1: rule__STAndExpression__Group_1_0__1__Impl : ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAndExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5457:1: ( ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5458:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5458:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5459:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5460:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5460:3: rule__STAndExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__0"
    // InternalSTCoreParser.g:5469:1: rule__STEqualityExpression__Group__0 : rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 ;
    public final void rule__STEqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5473:1: ( rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 )
            // InternalSTCoreParser.g:5474:2: rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__STEqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0"


    // $ANTLR start "rule__STEqualityExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5481:1: rule__STEqualityExpression__Group__0__Impl : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5485:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTCoreParser.g:5486:1: ( ruleSTComparisonExpression )
            {
            // InternalSTCoreParser.g:5486:1: ( ruleSTComparisonExpression )
            // InternalSTCoreParser.g:5487:2: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__1"
    // InternalSTCoreParser.g:5496:1: rule__STEqualityExpression__Group__1 : rule__STEqualityExpression__Group__1__Impl ;
    public final void rule__STEqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5500:1: ( rule__STEqualityExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5501:2: rule__STEqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1"


    // $ANTLR start "rule__STEqualityExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5507:1: rule__STEqualityExpression__Group__1__Impl : ( ( rule__STEqualityExpression__Group_1__0 )* ) ;
    public final void rule__STEqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5511:1: ( ( ( rule__STEqualityExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5512:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5512:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5513:2: ( rule__STEqualityExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5514:2: ( rule__STEqualityExpression__Group_1__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==LessThanSignGreaterThanSign||LA51_0==EqualsSign) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalSTCoreParser.g:5514:3: rule__STEqualityExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_47);
            	    rule__STEqualityExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0"
    // InternalSTCoreParser.g:5523:1: rule__STEqualityExpression__Group_1__0 : rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 ;
    public final void rule__STEqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5527:1: ( rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 )
            // InternalSTCoreParser.g:5528:2: rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STEqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5535:1: rule__STEqualityExpression__Group_1__0__Impl : ( ( rule__STEqualityExpression__Group_1_0__0 ) ) ;
    public final void rule__STEqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5539:1: ( ( ( rule__STEqualityExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5540:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5540:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5541:2: ( rule__STEqualityExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5542:2: ( rule__STEqualityExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5542:3: rule__STEqualityExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1"
    // InternalSTCoreParser.g:5550:1: rule__STEqualityExpression__Group_1__1 : rule__STEqualityExpression__Group_1__1__Impl ;
    public final void rule__STEqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5554:1: ( rule__STEqualityExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5555:2: rule__STEqualityExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5561:1: rule__STEqualityExpression__Group_1__1__Impl : ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5565:1: ( ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5566:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5566:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5567:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5568:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5568:3: rule__STEqualityExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5577:1: rule__STEqualityExpression__Group_1_0__0 : rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 ;
    public final void rule__STEqualityExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5581:1: ( rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5582:2: rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_46);
            rule__STEqualityExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5589:1: rule__STEqualityExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STEqualityExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5593:1: ( ( () ) )
            // InternalSTCoreParser.g:5594:1: ( () )
            {
            // InternalSTCoreParser.g:5594:1: ( () )
            // InternalSTCoreParser.g:5595:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5596:2: ()
            // InternalSTCoreParser.g:5596:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5604:1: rule__STEqualityExpression__Group_1_0__1 : rule__STEqualityExpression__Group_1_0__1__Impl ;
    public final void rule__STEqualityExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5608:1: ( rule__STEqualityExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5609:2: rule__STEqualityExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5615:1: rule__STEqualityExpression__Group_1_0__1__Impl : ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5619:1: ( ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5620:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5620:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5621:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5622:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5622:3: rule__STEqualityExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__0"
    // InternalSTCoreParser.g:5631:1: rule__STComparisonExpression__Group__0 : rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 ;
    public final void rule__STComparisonExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5635:1: ( rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 )
            // InternalSTCoreParser.g:5636:2: rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__STComparisonExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0"


    // $ANTLR start "rule__STComparisonExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5643:1: rule__STComparisonExpression__Group__0__Impl : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5647:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTCoreParser.g:5648:1: ( ruleSTAddSubExpression )
            {
            // InternalSTCoreParser.g:5648:1: ( ruleSTAddSubExpression )
            // InternalSTCoreParser.g:5649:2: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__1"
    // InternalSTCoreParser.g:5658:1: rule__STComparisonExpression__Group__1 : rule__STComparisonExpression__Group__1__Impl ;
    public final void rule__STComparisonExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5662:1: ( rule__STComparisonExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5663:2: rule__STComparisonExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1"


    // $ANTLR start "rule__STComparisonExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5669:1: rule__STComparisonExpression__Group__1__Impl : ( ( rule__STComparisonExpression__Group_1__0 )* ) ;
    public final void rule__STComparisonExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5673:1: ( ( ( rule__STComparisonExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5674:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5674:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5675:2: ( rule__STComparisonExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5676:2: ( rule__STComparisonExpression__Group_1__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==LessThanSignEqualsSign||LA52_0==GreaterThanSignEqualsSign||LA52_0==LessThanSign||LA52_0==GreaterThanSign) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalSTCoreParser.g:5676:3: rule__STComparisonExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_49);
            	    rule__STComparisonExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0"
    // InternalSTCoreParser.g:5685:1: rule__STComparisonExpression__Group_1__0 : rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 ;
    public final void rule__STComparisonExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5689:1: ( rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 )
            // InternalSTCoreParser.g:5690:2: rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STComparisonExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5697:1: rule__STComparisonExpression__Group_1__0__Impl : ( ( rule__STComparisonExpression__Group_1_0__0 ) ) ;
    public final void rule__STComparisonExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5701:1: ( ( ( rule__STComparisonExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5702:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5702:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5703:2: ( rule__STComparisonExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5704:2: ( rule__STComparisonExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5704:3: rule__STComparisonExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1"
    // InternalSTCoreParser.g:5712:1: rule__STComparisonExpression__Group_1__1 : rule__STComparisonExpression__Group_1__1__Impl ;
    public final void rule__STComparisonExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5716:1: ( rule__STComparisonExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5717:2: rule__STComparisonExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5723:1: rule__STComparisonExpression__Group_1__1__Impl : ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5727:1: ( ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5728:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5728:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5729:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5730:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5730:3: rule__STComparisonExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5739:1: rule__STComparisonExpression__Group_1_0__0 : rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 ;
    public final void rule__STComparisonExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5743:1: ( rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5744:2: rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_48);
            rule__STComparisonExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5751:1: rule__STComparisonExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STComparisonExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5755:1: ( ( () ) )
            // InternalSTCoreParser.g:5756:1: ( () )
            {
            // InternalSTCoreParser.g:5756:1: ( () )
            // InternalSTCoreParser.g:5757:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5758:2: ()
            // InternalSTCoreParser.g:5758:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5766:1: rule__STComparisonExpression__Group_1_0__1 : rule__STComparisonExpression__Group_1_0__1__Impl ;
    public final void rule__STComparisonExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5770:1: ( rule__STComparisonExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5771:2: rule__STComparisonExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5777:1: rule__STComparisonExpression__Group_1_0__1__Impl : ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5781:1: ( ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5782:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5782:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5783:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5784:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5784:3: rule__STComparisonExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__0"
    // InternalSTCoreParser.g:5793:1: rule__STAddSubExpression__Group__0 : rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 ;
    public final void rule__STAddSubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5797:1: ( rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 )
            // InternalSTCoreParser.g:5798:2: rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__STAddSubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0"


    // $ANTLR start "rule__STAddSubExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5805:1: rule__STAddSubExpression__Group__0__Impl : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5809:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTCoreParser.g:5810:1: ( ruleSTMulDivModExpression )
            {
            // InternalSTCoreParser.g:5810:1: ( ruleSTMulDivModExpression )
            // InternalSTCoreParser.g:5811:2: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__1"
    // InternalSTCoreParser.g:5820:1: rule__STAddSubExpression__Group__1 : rule__STAddSubExpression__Group__1__Impl ;
    public final void rule__STAddSubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5824:1: ( rule__STAddSubExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5825:2: rule__STAddSubExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1"


    // $ANTLR start "rule__STAddSubExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5831:1: rule__STAddSubExpression__Group__1__Impl : ( ( rule__STAddSubExpression__Group_1__0 )* ) ;
    public final void rule__STAddSubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5835:1: ( ( ( rule__STAddSubExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5836:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5836:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5837:2: ( rule__STAddSubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5838:2: ( rule__STAddSubExpression__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==PlusSign||LA53_0==HyphenMinus) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalSTCoreParser.g:5838:3: rule__STAddSubExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_51);
            	    rule__STAddSubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0"
    // InternalSTCoreParser.g:5847:1: rule__STAddSubExpression__Group_1__0 : rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 ;
    public final void rule__STAddSubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5851:1: ( rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 )
            // InternalSTCoreParser.g:5852:2: rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STAddSubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5859:1: rule__STAddSubExpression__Group_1__0__Impl : ( ( rule__STAddSubExpression__Group_1_0__0 ) ) ;
    public final void rule__STAddSubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5863:1: ( ( ( rule__STAddSubExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5864:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5864:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5865:2: ( rule__STAddSubExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5866:2: ( rule__STAddSubExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5866:3: rule__STAddSubExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1"
    // InternalSTCoreParser.g:5874:1: rule__STAddSubExpression__Group_1__1 : rule__STAddSubExpression__Group_1__1__Impl ;
    public final void rule__STAddSubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5878:1: ( rule__STAddSubExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5879:2: rule__STAddSubExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5885:1: rule__STAddSubExpression__Group_1__1__Impl : ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5889:1: ( ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5890:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5890:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5891:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5892:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5892:3: rule__STAddSubExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5901:1: rule__STAddSubExpression__Group_1_0__0 : rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 ;
    public final void rule__STAddSubExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5905:1: ( rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5906:2: rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_50);
            rule__STAddSubExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5913:1: rule__STAddSubExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAddSubExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5917:1: ( ( () ) )
            // InternalSTCoreParser.g:5918:1: ( () )
            {
            // InternalSTCoreParser.g:5918:1: ( () )
            // InternalSTCoreParser.g:5919:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5920:2: ()
            // InternalSTCoreParser.g:5920:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5928:1: rule__STAddSubExpression__Group_1_0__1 : rule__STAddSubExpression__Group_1_0__1__Impl ;
    public final void rule__STAddSubExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5932:1: ( rule__STAddSubExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5933:2: rule__STAddSubExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5939:1: rule__STAddSubExpression__Group_1_0__1__Impl : ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5943:1: ( ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5944:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5944:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5945:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5946:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5946:3: rule__STAddSubExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__0"
    // InternalSTCoreParser.g:5955:1: rule__STMulDivModExpression__Group__0 : rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 ;
    public final void rule__STMulDivModExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5959:1: ( rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 )
            // InternalSTCoreParser.g:5960:2: rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__STMulDivModExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0"


    // $ANTLR start "rule__STMulDivModExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5967:1: rule__STMulDivModExpression__Group__0__Impl : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5971:1: ( ( ruleSTPowerExpression ) )
            // InternalSTCoreParser.g:5972:1: ( ruleSTPowerExpression )
            {
            // InternalSTCoreParser.g:5972:1: ( ruleSTPowerExpression )
            // InternalSTCoreParser.g:5973:2: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__1"
    // InternalSTCoreParser.g:5982:1: rule__STMulDivModExpression__Group__1 : rule__STMulDivModExpression__Group__1__Impl ;
    public final void rule__STMulDivModExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5986:1: ( rule__STMulDivModExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5987:2: rule__STMulDivModExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1"


    // $ANTLR start "rule__STMulDivModExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5993:1: rule__STMulDivModExpression__Group__1__Impl : ( ( rule__STMulDivModExpression__Group_1__0 )* ) ;
    public final void rule__STMulDivModExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5997:1: ( ( ( rule__STMulDivModExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5998:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5998:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5999:2: ( rule__STMulDivModExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:6000:2: ( rule__STMulDivModExpression__Group_1__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==MOD||LA54_0==Asterisk||LA54_0==Solidus) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalSTCoreParser.g:6000:3: rule__STMulDivModExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_53);
            	    rule__STMulDivModExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0"
    // InternalSTCoreParser.g:6009:1: rule__STMulDivModExpression__Group_1__0 : rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 ;
    public final void rule__STMulDivModExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6013:1: ( rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 )
            // InternalSTCoreParser.g:6014:2: rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STMulDivModExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:6021:1: rule__STMulDivModExpression__Group_1__0__Impl : ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6025:1: ( ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:6026:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:6026:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:6027:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:6028:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:6028:3: rule__STMulDivModExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1"
    // InternalSTCoreParser.g:6036:1: rule__STMulDivModExpression__Group_1__1 : rule__STMulDivModExpression__Group_1__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6040:1: ( rule__STMulDivModExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:6041:2: rule__STMulDivModExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:6047:1: rule__STMulDivModExpression__Group_1__1__Impl : ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6051:1: ( ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:6052:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:6052:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:6053:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:6054:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:6054:3: rule__STMulDivModExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0"
    // InternalSTCoreParser.g:6063:1: rule__STMulDivModExpression__Group_1_0__0 : rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 ;
    public final void rule__STMulDivModExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6067:1: ( rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:6068:2: rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_52);
            rule__STMulDivModExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:6075:1: rule__STMulDivModExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STMulDivModExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6079:1: ( ( () ) )
            // InternalSTCoreParser.g:6080:1: ( () )
            {
            // InternalSTCoreParser.g:6080:1: ( () )
            // InternalSTCoreParser.g:6081:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:6082:2: ()
            // InternalSTCoreParser.g:6082:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1"
    // InternalSTCoreParser.g:6090:1: rule__STMulDivModExpression__Group_1_0__1 : rule__STMulDivModExpression__Group_1_0__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6094:1: ( rule__STMulDivModExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:6095:2: rule__STMulDivModExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:6101:1: rule__STMulDivModExpression__Group_1_0__1__Impl : ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6105:1: ( ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:6106:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6106:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:6107:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:6108:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:6108:3: rule__STMulDivModExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__0"
    // InternalSTCoreParser.g:6117:1: rule__STPowerExpression__Group__0 : rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 ;
    public final void rule__STPowerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6121:1: ( rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 )
            // InternalSTCoreParser.g:6122:2: rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__STPowerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0"


    // $ANTLR start "rule__STPowerExpression__Group__0__Impl"
    // InternalSTCoreParser.g:6129:1: rule__STPowerExpression__Group__0__Impl : ( ruleSTSignumExpression ) ;
    public final void rule__STPowerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6133:1: ( ( ruleSTSignumExpression ) )
            // InternalSTCoreParser.g:6134:1: ( ruleSTSignumExpression )
            {
            // InternalSTCoreParser.g:6134:1: ( ruleSTSignumExpression )
            // InternalSTCoreParser.g:6135:2: ruleSTSignumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTSignumExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTSignumExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__1"
    // InternalSTCoreParser.g:6144:1: rule__STPowerExpression__Group__1 : rule__STPowerExpression__Group__1__Impl ;
    public final void rule__STPowerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6148:1: ( rule__STPowerExpression__Group__1__Impl )
            // InternalSTCoreParser.g:6149:2: rule__STPowerExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1"


    // $ANTLR start "rule__STPowerExpression__Group__1__Impl"
    // InternalSTCoreParser.g:6155:1: rule__STPowerExpression__Group__1__Impl : ( ( rule__STPowerExpression__Group_1__0 )* ) ;
    public final void rule__STPowerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6159:1: ( ( ( rule__STPowerExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:6160:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:6160:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:6161:2: ( rule__STPowerExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:6162:2: ( rule__STPowerExpression__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==AsteriskAsterisk) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalSTCoreParser.g:6162:3: rule__STPowerExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_55);
            	    rule__STPowerExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__0"
    // InternalSTCoreParser.g:6171:1: rule__STPowerExpression__Group_1__0 : rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 ;
    public final void rule__STPowerExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6175:1: ( rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 )
            // InternalSTCoreParser.g:6176:2: rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STPowerExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0"


    // $ANTLR start "rule__STPowerExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:6183:1: rule__STPowerExpression__Group_1__0__Impl : ( ( rule__STPowerExpression__Group_1_0__0 ) ) ;
    public final void rule__STPowerExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6187:1: ( ( ( rule__STPowerExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:6188:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:6188:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:6189:2: ( rule__STPowerExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:6190:2: ( rule__STPowerExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:6190:3: rule__STPowerExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__1"
    // InternalSTCoreParser.g:6198:1: rule__STPowerExpression__Group_1__1 : rule__STPowerExpression__Group_1__1__Impl ;
    public final void rule__STPowerExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6202:1: ( rule__STPowerExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:6203:2: rule__STPowerExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1"


    // $ANTLR start "rule__STPowerExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:6209:1: rule__STPowerExpression__Group_1__1__Impl : ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STPowerExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6213:1: ( ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:6214:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:6214:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:6215:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:6216:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:6216:3: rule__STPowerExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0"
    // InternalSTCoreParser.g:6225:1: rule__STPowerExpression__Group_1_0__0 : rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 ;
    public final void rule__STPowerExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6229:1: ( rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:6230:2: rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_54);
            rule__STPowerExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:6237:1: rule__STPowerExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STPowerExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6241:1: ( ( () ) )
            // InternalSTCoreParser.g:6242:1: ( () )
            {
            // InternalSTCoreParser.g:6242:1: ( () )
            // InternalSTCoreParser.g:6243:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:6244:2: ()
            // InternalSTCoreParser.g:6244:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1"
    // InternalSTCoreParser.g:6252:1: rule__STPowerExpression__Group_1_0__1 : rule__STPowerExpression__Group_1_0__1__Impl ;
    public final void rule__STPowerExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6256:1: ( rule__STPowerExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:6257:2: rule__STPowerExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:6263:1: rule__STPowerExpression__Group_1_0__1__Impl : ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STPowerExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6267:1: ( ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:6268:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6268:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:6269:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:6270:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:6270:3: rule__STPowerExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__0"
    // InternalSTCoreParser.g:6279:1: rule__STSignumExpression__Group_2__0 : rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1 ;
    public final void rule__STSignumExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6283:1: ( rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1 )
            // InternalSTCoreParser.g:6284:2: rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1
            {
            pushFollow(FOLLOW_10);
            rule__STSignumExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__0"


    // $ANTLR start "rule__STSignumExpression__Group_2__0__Impl"
    // InternalSTCoreParser.g:6291:1: rule__STSignumExpression__Group_2__0__Impl : ( () ) ;
    public final void rule__STSignumExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6295:1: ( ( () ) )
            // InternalSTCoreParser.g:6296:1: ( () )
            {
            // InternalSTCoreParser.g:6296:1: ( () )
            // InternalSTCoreParser.g:6297:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getSTUnaryExpressionAction_2_0()); 
            }
            // InternalSTCoreParser.g:6298:2: ()
            // InternalSTCoreParser.g:6298:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getSTUnaryExpressionAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__1"
    // InternalSTCoreParser.g:6306:1: rule__STSignumExpression__Group_2__1 : rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2 ;
    public final void rule__STSignumExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6310:1: ( rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2 )
            // InternalSTCoreParser.g:6311:2: rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2
            {
            pushFollow(FOLLOW_56);
            rule__STSignumExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__1"


    // $ANTLR start "rule__STSignumExpression__Group_2__1__Impl"
    // InternalSTCoreParser.g:6318:1: rule__STSignumExpression__Group_2__1__Impl : ( ( rule__STSignumExpression__OpAssignment_2_1 ) ) ;
    public final void rule__STSignumExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6322:1: ( ( ( rule__STSignumExpression__OpAssignment_2_1 ) ) )
            // InternalSTCoreParser.g:6323:1: ( ( rule__STSignumExpression__OpAssignment_2_1 ) )
            {
            // InternalSTCoreParser.g:6323:1: ( ( rule__STSignumExpression__OpAssignment_2_1 ) )
            // InternalSTCoreParser.g:6324:2: ( rule__STSignumExpression__OpAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getOpAssignment_2_1()); 
            }
            // InternalSTCoreParser.g:6325:2: ( rule__STSignumExpression__OpAssignment_2_1 )
            // InternalSTCoreParser.g:6325:3: rule__STSignumExpression__OpAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__OpAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getOpAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__2"
    // InternalSTCoreParser.g:6333:1: rule__STSignumExpression__Group_2__2 : rule__STSignumExpression__Group_2__2__Impl ;
    public final void rule__STSignumExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6337:1: ( rule__STSignumExpression__Group_2__2__Impl )
            // InternalSTCoreParser.g:6338:2: rule__STSignumExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__2"


    // $ANTLR start "rule__STSignumExpression__Group_2__2__Impl"
    // InternalSTCoreParser.g:6344:1: rule__STSignumExpression__Group_2__2__Impl : ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) ) ;
    public final void rule__STSignumExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6348:1: ( ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) ) )
            // InternalSTCoreParser.g:6349:1: ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) )
            {
            // InternalSTCoreParser.g:6349:1: ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) )
            // InternalSTCoreParser.g:6350:2: ( rule__STSignumExpression__ExpressionAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getExpressionAssignment_2_2()); 
            }
            // InternalSTCoreParser.g:6351:2: ( rule__STSignumExpression__ExpressionAssignment_2_2 )
            // InternalSTCoreParser.g:6351:3: rule__STSignumExpression__ExpressionAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__ExpressionAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getExpressionAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group__0"
    // InternalSTCoreParser.g:6360:1: rule__STSelectionExpression__Group__0 : rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1 ;
    public final void rule__STSelectionExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6364:1: ( rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1 )
            // InternalSTCoreParser.g:6365:2: rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__STSelectionExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__0"


    // $ANTLR start "rule__STSelectionExpression__Group__0__Impl"
    // InternalSTCoreParser.g:6372:1: rule__STSelectionExpression__Group__0__Impl : ( ruleSTAtomicExpression ) ;
    public final void rule__STSelectionExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6376:1: ( ( ruleSTAtomicExpression ) )
            // InternalSTCoreParser.g:6377:1: ( ruleSTAtomicExpression )
            {
            // InternalSTCoreParser.g:6377:1: ( ruleSTAtomicExpression )
            // InternalSTCoreParser.g:6378:2: ruleSTAtomicExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getSTAtomicExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAtomicExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getSTAtomicExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group__1"
    // InternalSTCoreParser.g:6387:1: rule__STSelectionExpression__Group__1 : rule__STSelectionExpression__Group__1__Impl ;
    public final void rule__STSelectionExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6391:1: ( rule__STSelectionExpression__Group__1__Impl )
            // InternalSTCoreParser.g:6392:2: rule__STSelectionExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__1"


    // $ANTLR start "rule__STSelectionExpression__Group__1__Impl"
    // InternalSTCoreParser.g:6398:1: rule__STSelectionExpression__Group__1__Impl : ( ( rule__STSelectionExpression__Group_1__0 )* ) ;
    public final void rule__STSelectionExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6402:1: ( ( ( rule__STSelectionExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:6403:1: ( ( rule__STSelectionExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:6403:1: ( ( rule__STSelectionExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:6404:2: ( rule__STSelectionExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:6405:2: ( rule__STSelectionExpression__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==FullStop||LA56_0==LeftSquareBracket) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalSTCoreParser.g:6405:3: rule__STSelectionExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_58);
            	    rule__STSelectionExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__0"
    // InternalSTCoreParser.g:6414:1: rule__STSelectionExpression__Group_1__0 : rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1 ;
    public final void rule__STSelectionExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6418:1: ( rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1 )
            // InternalSTCoreParser.g:6419:2: rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1
            {
            pushFollow(FOLLOW_57);
            rule__STSelectionExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:6426:1: rule__STSelectionExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STSelectionExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6430:1: ( ( () ) )
            // InternalSTCoreParser.g:6431:1: ( () )
            {
            // InternalSTCoreParser.g:6431:1: ( () )
            // InternalSTCoreParser.g:6432:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getSTMemberSelectionReceiverAction_1_0()); 
            }
            // InternalSTCoreParser.g:6433:2: ()
            // InternalSTCoreParser.g:6433:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getSTMemberSelectionReceiverAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__1"
    // InternalSTCoreParser.g:6441:1: rule__STSelectionExpression__Group_1__1 : rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2 ;
    public final void rule__STSelectionExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6445:1: ( rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2 )
            // InternalSTCoreParser.g:6446:2: rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2
            {
            pushFollow(FOLLOW_59);
            rule__STSelectionExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:6453:1: rule__STSelectionExpression__Group_1__1__Impl : ( ( rule__STSelectionExpression__Alternatives_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6457:1: ( ( ( rule__STSelectionExpression__Alternatives_1_1 ) ) )
            // InternalSTCoreParser.g:6458:1: ( ( rule__STSelectionExpression__Alternatives_1_1 ) )
            {
            // InternalSTCoreParser.g:6458:1: ( ( rule__STSelectionExpression__Alternatives_1_1 ) )
            // InternalSTCoreParser.g:6459:2: ( rule__STSelectionExpression__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getAlternatives_1_1()); 
            }
            // InternalSTCoreParser.g:6460:2: ( rule__STSelectionExpression__Alternatives_1_1 )
            // InternalSTCoreParser.g:6460:3: rule__STSelectionExpression__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__2"
    // InternalSTCoreParser.g:6468:1: rule__STSelectionExpression__Group_1__2 : rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3 ;
    public final void rule__STSelectionExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6472:1: ( rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3 )
            // InternalSTCoreParser.g:6473:2: rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3
            {
            pushFollow(FOLLOW_59);
            rule__STSelectionExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1__2__Impl"
    // InternalSTCoreParser.g:6480:1: rule__STSelectionExpression__Group_1__2__Impl : ( ( rule__STSelectionExpression__Group_1_2__0 )? ) ;
    public final void rule__STSelectionExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6484:1: ( ( ( rule__STSelectionExpression__Group_1_2__0 )? ) )
            // InternalSTCoreParser.g:6485:1: ( ( rule__STSelectionExpression__Group_1_2__0 )? )
            {
            // InternalSTCoreParser.g:6485:1: ( ( rule__STSelectionExpression__Group_1_2__0 )? )
            // InternalSTCoreParser.g:6486:2: ( rule__STSelectionExpression__Group_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2()); 
            }
            // InternalSTCoreParser.g:6487:2: ( rule__STSelectionExpression__Group_1_2__0 )?
            int alt57=2;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalSTCoreParser.g:6487:3: rule__STSelectionExpression__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__3"
    // InternalSTCoreParser.g:6495:1: rule__STSelectionExpression__Group_1__3 : rule__STSelectionExpression__Group_1__3__Impl ;
    public final void rule__STSelectionExpression__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6499:1: ( rule__STSelectionExpression__Group_1__3__Impl )
            // InternalSTCoreParser.g:6500:2: rule__STSelectionExpression__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__3"


    // $ANTLR start "rule__STSelectionExpression__Group_1__3__Impl"
    // InternalSTCoreParser.g:6506:1: rule__STSelectionExpression__Group_1__3__Impl : ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? ) ;
    public final void rule__STSelectionExpression__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6510:1: ( ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? ) )
            // InternalSTCoreParser.g:6511:1: ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? )
            {
            // InternalSTCoreParser.g:6511:1: ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? )
            // InternalSTCoreParser.g:6512:2: ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorAssignment_1_3()); 
            }
            // InternalSTCoreParser.g:6513:2: ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( ((LA58_0>=B && LA58_0<=X)) ) {
                alt58=1;
            }
            else if ( (LA58_0==FullStop) ) {
                int LA58_2 = input.LA(2);

                if ( (LA58_2==RULE_INT) ) {
                    alt58=1;
                }
            }
            switch (alt58) {
                case 1 :
                    // InternalSTCoreParser.g:6513:3: rule__STSelectionExpression__BitaccessorAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__BitaccessorAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__3__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__0"
    // InternalSTCoreParser.g:6522:1: rule__STSelectionExpression__Group_1_1_0__0 : rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1 ;
    public final void rule__STSelectionExpression__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6526:1: ( rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1 )
            // InternalSTCoreParser.g:6527:2: rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__STSelectionExpression__Group_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__0__Impl"
    // InternalSTCoreParser.g:6534:1: rule__STSelectionExpression__Group_1_1_0__0__Impl : ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6538:1: ( ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) ) )
            // InternalSTCoreParser.g:6539:1: ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) )
            {
            // InternalSTCoreParser.g:6539:1: ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) )
            // InternalSTCoreParser.g:6540:2: ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessAssignment_1_1_0_0()); 
            }
            // InternalSTCoreParser.g:6541:2: ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 )
            // InternalSTCoreParser.g:6541:3: rule__STSelectionExpression__StructAccessAssignment_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__StructAccessAssignment_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessAssignment_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__1"
    // InternalSTCoreParser.g:6549:1: rule__STSelectionExpression__Group_1_1_0__1 : rule__STSelectionExpression__Group_1_1_0__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6553:1: ( rule__STSelectionExpression__Group_1_1_0__1__Impl )
            // InternalSTCoreParser.g:6554:2: rule__STSelectionExpression__Group_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__1__Impl"
    // InternalSTCoreParser.g:6560:1: rule__STSelectionExpression__Group_1_1_0__1__Impl : ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6564:1: ( ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) ) )
            // InternalSTCoreParser.g:6565:1: ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6565:1: ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) )
            // InternalSTCoreParser.g:6566:2: ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberAssignment_1_1_0_1()); 
            }
            // InternalSTCoreParser.g:6567:2: ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 )
            // InternalSTCoreParser.g:6567:3: rule__STSelectionExpression__MemberAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__MemberAssignment_1_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberAssignment_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__0"
    // InternalSTCoreParser.g:6576:1: rule__STSelectionExpression__Group_1_1_1__0 : rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1 ;
    public final void rule__STSelectionExpression__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6580:1: ( rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1 )
            // InternalSTCoreParser.g:6581:2: rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STSelectionExpression__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__0__Impl"
    // InternalSTCoreParser.g:6588:1: rule__STSelectionExpression__Group_1_1_1__0__Impl : ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6592:1: ( ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) ) )
            // InternalSTCoreParser.g:6593:1: ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) )
            {
            // InternalSTCoreParser.g:6593:1: ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) )
            // InternalSTCoreParser.g:6594:2: ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessAssignment_1_1_1_0()); 
            }
            // InternalSTCoreParser.g:6595:2: ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 )
            // InternalSTCoreParser.g:6595:3: rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessAssignment_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__1"
    // InternalSTCoreParser.g:6603:1: rule__STSelectionExpression__Group_1_1_1__1 : rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2 ;
    public final void rule__STSelectionExpression__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6607:1: ( rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2 )
            // InternalSTCoreParser.g:6608:2: rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2
            {
            pushFollow(FOLLOW_11);
            rule__STSelectionExpression__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__1__Impl"
    // InternalSTCoreParser.g:6615:1: rule__STSelectionExpression__Group_1_1_1__1__Impl : ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6619:1: ( ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) ) )
            // InternalSTCoreParser.g:6620:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) )
            {
            // InternalSTCoreParser.g:6620:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) )
            // InternalSTCoreParser.g:6621:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_1()); 
            }
            // InternalSTCoreParser.g:6622:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 )
            // InternalSTCoreParser.g:6622:3: rule__STSelectionExpression__IndexAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__IndexAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__2"
    // InternalSTCoreParser.g:6630:1: rule__STSelectionExpression__Group_1_1_1__2 : rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3 ;
    public final void rule__STSelectionExpression__Group_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6634:1: ( rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3 )
            // InternalSTCoreParser.g:6635:2: rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3
            {
            pushFollow(FOLLOW_11);
            rule__STSelectionExpression__Group_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__2__Impl"
    // InternalSTCoreParser.g:6642:1: rule__STSelectionExpression__Group_1_1_1__2__Impl : ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6646:1: ( ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* ) )
            // InternalSTCoreParser.g:6647:1: ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* )
            {
            // InternalSTCoreParser.g:6647:1: ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* )
            // InternalSTCoreParser.g:6648:2: ( rule__STSelectionExpression__Group_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1_2()); 
            }
            // InternalSTCoreParser.g:6649:2: ( rule__STSelectionExpression__Group_1_1_1_2__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==Comma) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalSTCoreParser.g:6649:3: rule__STSelectionExpression__Group_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STSelectionExpression__Group_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__3"
    // InternalSTCoreParser.g:6657:1: rule__STSelectionExpression__Group_1_1_1__3 : rule__STSelectionExpression__Group_1_1_1__3__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6661:1: ( rule__STSelectionExpression__Group_1_1_1__3__Impl )
            // InternalSTCoreParser.g:6662:2: rule__STSelectionExpression__Group_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__3"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__3__Impl"
    // InternalSTCoreParser.g:6668:1: rule__STSelectionExpression__Group_1_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6672:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:6673:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:6673:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:6674:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__3__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__0"
    // InternalSTCoreParser.g:6684:1: rule__STSelectionExpression__Group_1_1_1_2__0 : rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1 ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6688:1: ( rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1 )
            // InternalSTCoreParser.g:6689:2: rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1
            {
            pushFollow(FOLLOW_10);
            rule__STSelectionExpression__Group_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__0__Impl"
    // InternalSTCoreParser.g:6696:1: rule__STSelectionExpression__Group_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6700:1: ( ( Comma ) )
            // InternalSTCoreParser.g:6701:1: ( Comma )
            {
            // InternalSTCoreParser.g:6701:1: ( Comma )
            // InternalSTCoreParser.g:6702:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__1"
    // InternalSTCoreParser.g:6711:1: rule__STSelectionExpression__Group_1_1_1_2__1 : rule__STSelectionExpression__Group_1_1_1_2__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6715:1: ( rule__STSelectionExpression__Group_1_1_1_2__1__Impl )
            // InternalSTCoreParser.g:6716:2: rule__STSelectionExpression__Group_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__1__Impl"
    // InternalSTCoreParser.g:6722:1: rule__STSelectionExpression__Group_1_1_1_2__1__Impl : ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6726:1: ( ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) ) )
            // InternalSTCoreParser.g:6727:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) )
            {
            // InternalSTCoreParser.g:6727:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) )
            // InternalSTCoreParser.g:6728:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_2_1()); 
            }
            // InternalSTCoreParser.g:6729:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 )
            // InternalSTCoreParser.g:6729:3: rule__STSelectionExpression__IndexAssignment_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__IndexAssignment_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__0"
    // InternalSTCoreParser.g:6738:1: rule__STSelectionExpression__Group_1_2__0 : rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1 ;
    public final void rule__STSelectionExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6742:1: ( rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1 )
            // InternalSTCoreParser.g:6743:2: rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1
            {
            pushFollow(FOLLOW_60);
            rule__STSelectionExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__0__Impl"
    // InternalSTCoreParser.g:6750:1: rule__STSelectionExpression__Group_1_2__0__Impl : ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6754:1: ( ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) ) )
            // InternalSTCoreParser.g:6755:1: ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) )
            {
            // InternalSTCoreParser.g:6755:1: ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) )
            // InternalSTCoreParser.g:6756:2: ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationAssignment_1_2_0()); 
            }
            // InternalSTCoreParser.g:6757:2: ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 )
            // InternalSTCoreParser.g:6757:3: rule__STSelectionExpression__PoeInvocationAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__PoeInvocationAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__1"
    // InternalSTCoreParser.g:6765:1: rule__STSelectionExpression__Group_1_2__1 : rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2 ;
    public final void rule__STSelectionExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6769:1: ( rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2 )
            // InternalSTCoreParser.g:6770:2: rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2
            {
            pushFollow(FOLLOW_60);
            rule__STSelectionExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__1__Impl"
    // InternalSTCoreParser.g:6777:1: rule__STSelectionExpression__Group_1_2__1__Impl : ( ( rule__STSelectionExpression__Group_1_2_1__0 )? ) ;
    public final void rule__STSelectionExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6781:1: ( ( ( rule__STSelectionExpression__Group_1_2_1__0 )? ) )
            // InternalSTCoreParser.g:6782:1: ( ( rule__STSelectionExpression__Group_1_2_1__0 )? )
            {
            // InternalSTCoreParser.g:6782:1: ( ( rule__STSelectionExpression__Group_1_2_1__0 )? )
            // InternalSTCoreParser.g:6783:2: ( rule__STSelectionExpression__Group_1_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1()); 
            }
            // InternalSTCoreParser.g:6784:2: ( rule__STSelectionExpression__Group_1_2_1__0 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( ((LA60_0>=LDATE_AND_TIME && LA60_0<=TIME_OF_DAY)||LA60_0==WSTRING||(LA60_0>=STRING && LA60_0<=DWORD)||(LA60_0>=LDATE && LA60_0<=LWORD)||(LA60_0>=UDINT && LA60_0<=WCHAR)||(LA60_0>=BOOL && LA60_0<=DINT)||(LA60_0>=LINT && LA60_0<=UINT)||LA60_0==WORD||(LA60_0>=INT && LA60_0<=LDT)||LA60_0==TOD||LA60_0==DT||(LA60_0>=LD && LA60_0<=LT)||LA60_0==NOT||LA60_0==D||LA60_0==T||LA60_0==LeftParenthesis||LA60_0==PlusSign||LA60_0==HyphenMinus||LA60_0==RULE_BOOL_VALUES||(LA60_0>=RULE_NON_DECIMAL && LA60_0<=RULE_INT)||(LA60_0>=RULE_ID && LA60_0<=RULE_STRING)) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalSTCoreParser.g:6784:3: rule__STSelectionExpression__Group_1_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__2"
    // InternalSTCoreParser.g:6792:1: rule__STSelectionExpression__Group_1_2__2 : rule__STSelectionExpression__Group_1_2__2__Impl ;
    public final void rule__STSelectionExpression__Group_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6796:1: ( rule__STSelectionExpression__Group_1_2__2__Impl )
            // InternalSTCoreParser.g:6797:2: rule__STSelectionExpression__Group_1_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__2__Impl"
    // InternalSTCoreParser.g:6803:1: rule__STSelectionExpression__Group_1_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STSelectionExpression__Group_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6807:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:6808:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:6808:1: ( RightParenthesis )
            // InternalSTCoreParser.g:6809:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getRightParenthesisKeyword_1_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getRightParenthesisKeyword_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__0"
    // InternalSTCoreParser.g:6819:1: rule__STSelectionExpression__Group_1_2_1__0 : rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1 ;
    public final void rule__STSelectionExpression__Group_1_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6823:1: ( rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1 )
            // InternalSTCoreParser.g:6824:2: rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1
            {
            pushFollow(FOLLOW_61);
            rule__STSelectionExpression__Group_1_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__0__Impl"
    // InternalSTCoreParser.g:6831:1: rule__STSelectionExpression__Group_1_2_1__0__Impl : ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6835:1: ( ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) ) )
            // InternalSTCoreParser.g:6836:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) )
            {
            // InternalSTCoreParser.g:6836:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) )
            // InternalSTCoreParser.g:6837:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_0()); 
            }
            // InternalSTCoreParser.g:6838:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 )
            // InternalSTCoreParser.g:6838:3: rule__STSelectionExpression__ParametersAssignment_1_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ParametersAssignment_1_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__1"
    // InternalSTCoreParser.g:6846:1: rule__STSelectionExpression__Group_1_2_1__1 : rule__STSelectionExpression__Group_1_2_1__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6850:1: ( rule__STSelectionExpression__Group_1_2_1__1__Impl )
            // InternalSTCoreParser.g:6851:2: rule__STSelectionExpression__Group_1_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__1__Impl"
    // InternalSTCoreParser.g:6857:1: rule__STSelectionExpression__Group_1_2_1__1__Impl : ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* ) ;
    public final void rule__STSelectionExpression__Group_1_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6861:1: ( ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* ) )
            // InternalSTCoreParser.g:6862:1: ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* )
            {
            // InternalSTCoreParser.g:6862:1: ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* )
            // InternalSTCoreParser.g:6863:2: ( rule__STSelectionExpression__Group_1_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1_1()); 
            }
            // InternalSTCoreParser.g:6864:2: ( rule__STSelectionExpression__Group_1_2_1_1__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==Comma) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalSTCoreParser.g:6864:3: rule__STSelectionExpression__Group_1_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STSelectionExpression__Group_1_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__0"
    // InternalSTCoreParser.g:6873:1: rule__STSelectionExpression__Group_1_2_1_1__0 : rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1 ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6877:1: ( rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1 )
            // InternalSTCoreParser.g:6878:2: rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STSelectionExpression__Group_1_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__0__Impl"
    // InternalSTCoreParser.g:6885:1: rule__STSelectionExpression__Group_1_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6889:1: ( ( Comma ) )
            // InternalSTCoreParser.g:6890:1: ( Comma )
            {
            // InternalSTCoreParser.g:6890:1: ( Comma )
            // InternalSTCoreParser.g:6891:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__1"
    // InternalSTCoreParser.g:6900:1: rule__STSelectionExpression__Group_1_2_1_1__1 : rule__STSelectionExpression__Group_1_2_1_1__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6904:1: ( rule__STSelectionExpression__Group_1_2_1_1__1__Impl )
            // InternalSTCoreParser.g:6905:2: rule__STSelectionExpression__Group_1_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__1__Impl"
    // InternalSTCoreParser.g:6911:1: rule__STSelectionExpression__Group_1_2_1_1__1__Impl : ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6915:1: ( ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) ) )
            // InternalSTCoreParser.g:6916:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) )
            {
            // InternalSTCoreParser.g:6916:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) )
            // InternalSTCoreParser.g:6917:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_1_1()); 
            }
            // InternalSTCoreParser.g:6918:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 )
            // InternalSTCoreParser.g:6918:3: rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__1__Impl"


    // $ANTLR start "rule__MultibitPartialAccess__Group__0"
    // InternalSTCoreParser.g:6927:1: rule__MultibitPartialAccess__Group__0 : rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1 ;
    public final void rule__MultibitPartialAccess__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6931:1: ( rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1 )
            // InternalSTCoreParser.g:6932:2: rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__MultibitPartialAccess__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__0"


    // $ANTLR start "rule__MultibitPartialAccess__Group__0__Impl"
    // InternalSTCoreParser.g:6939:1: rule__MultibitPartialAccess__Group__0__Impl : ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) ) ;
    public final void rule__MultibitPartialAccess__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6943:1: ( ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) ) )
            // InternalSTCoreParser.g:6944:1: ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) )
            {
            // InternalSTCoreParser.g:6944:1: ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) )
            // InternalSTCoreParser.g:6945:2: ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierAssignment_0()); 
            }
            // InternalSTCoreParser.g:6946:2: ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 )
            // InternalSTCoreParser.g:6946:3: rule__MultibitPartialAccess__AccessSpecifierAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__AccessSpecifierAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__0__Impl"


    // $ANTLR start "rule__MultibitPartialAccess__Group__1"
    // InternalSTCoreParser.g:6954:1: rule__MultibitPartialAccess__Group__1 : rule__MultibitPartialAccess__Group__1__Impl ;
    public final void rule__MultibitPartialAccess__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6958:1: ( rule__MultibitPartialAccess__Group__1__Impl )
            // InternalSTCoreParser.g:6959:2: rule__MultibitPartialAccess__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__1"


    // $ANTLR start "rule__MultibitPartialAccess__Group__1__Impl"
    // InternalSTCoreParser.g:6965:1: rule__MultibitPartialAccess__Group__1__Impl : ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) ) ;
    public final void rule__MultibitPartialAccess__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6969:1: ( ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) ) )
            // InternalSTCoreParser.g:6970:1: ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) )
            {
            // InternalSTCoreParser.g:6970:1: ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) )
            // InternalSTCoreParser.g:6971:2: ( rule__MultibitPartialAccess__IndexAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getIndexAssignment_1()); 
            }
            // InternalSTCoreParser.g:6972:2: ( rule__MultibitPartialAccess__IndexAssignment_1 )
            // InternalSTCoreParser.g:6972:3: rule__MultibitPartialAccess__IndexAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__IndexAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getIndexAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__0"
    // InternalSTCoreParser.g:6981:1: rule__STAtomicExpression__Group_0__0 : rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1 ;
    public final void rule__STAtomicExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6985:1: ( rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1 )
            // InternalSTCoreParser.g:6986:2: rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1
            {
            pushFollow(FOLLOW_10);
            rule__STAtomicExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__0"


    // $ANTLR start "rule__STAtomicExpression__Group_0__0__Impl"
    // InternalSTCoreParser.g:6993:1: rule__STAtomicExpression__Group_0__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STAtomicExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6997:1: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:6998:1: ( LeftParenthesis )
            {
            // InternalSTCoreParser.g:6998:1: ( LeftParenthesis )
            // InternalSTCoreParser.g:6999:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__1"
    // InternalSTCoreParser.g:7008:1: rule__STAtomicExpression__Group_0__1 : rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2 ;
    public final void rule__STAtomicExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7012:1: ( rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2 )
            // InternalSTCoreParser.g:7013:2: rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2
            {
            pushFollow(FOLLOW_17);
            rule__STAtomicExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__1"


    // $ANTLR start "rule__STAtomicExpression__Group_0__1__Impl"
    // InternalSTCoreParser.g:7020:1: rule__STAtomicExpression__Group_0__1__Impl : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7024:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:7025:1: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:7025:1: ( ruleSTExpression )
            // InternalSTCoreParser.g:7026:2: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__2"
    // InternalSTCoreParser.g:7035:1: rule__STAtomicExpression__Group_0__2 : rule__STAtomicExpression__Group_0__2__Impl ;
    public final void rule__STAtomicExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7039:1: ( rule__STAtomicExpression__Group_0__2__Impl )
            // InternalSTCoreParser.g:7040:2: rule__STAtomicExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__2"


    // $ANTLR start "rule__STAtomicExpression__Group_0__2__Impl"
    // InternalSTCoreParser.g:7046:1: rule__STAtomicExpression__Group_0__2__Impl : ( RightParenthesis ) ;
    public final void rule__STAtomicExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7050:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:7051:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:7051:1: ( RightParenthesis )
            // InternalSTCoreParser.g:7052:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__0"
    // InternalSTCoreParser.g:7062:1: rule__STAtomicExpression__Group_1__0 : rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1 ;
    public final void rule__STAtomicExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7066:1: ( rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1 )
            // InternalSTCoreParser.g:7067:2: rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1
            {
            pushFollow(FOLLOW_56);
            rule__STAtomicExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:7074:1: rule__STAtomicExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STAtomicExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7078:1: ( ( () ) )
            // InternalSTCoreParser.g:7079:1: ( () )
            {
            // InternalSTCoreParser.g:7079:1: ( () )
            // InternalSTCoreParser.g:7080:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTSymbolAction_1_0()); 
            }
            // InternalSTCoreParser.g:7081:2: ()
            // InternalSTCoreParser.g:7081:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTSymbolAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__1"
    // InternalSTCoreParser.g:7089:1: rule__STAtomicExpression__Group_1__1 : rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2 ;
    public final void rule__STAtomicExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7093:1: ( rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2 )
            // InternalSTCoreParser.g:7094:2: rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2
            {
            pushFollow(FOLLOW_56);
            rule__STAtomicExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:7101:1: rule__STAtomicExpression__Group_1__1__Impl : ( ( rule__STAtomicExpression__Group_1_1__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7105:1: ( ( ( rule__STAtomicExpression__Group_1_1__0 )? ) )
            // InternalSTCoreParser.g:7106:1: ( ( rule__STAtomicExpression__Group_1_1__0 )? )
            {
            // InternalSTCoreParser.g:7106:1: ( ( rule__STAtomicExpression__Group_1_1__0 )? )
            // InternalSTCoreParser.g:7107:2: ( rule__STAtomicExpression__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_1()); 
            }
            // InternalSTCoreParser.g:7108:2: ( rule__STAtomicExpression__Group_1_1__0 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_ID) ) {
                int LA62_1 = input.LA(2);

                if ( (LA62_1==NumberSign) ) {
                    alt62=1;
                }
            }
            switch (alt62) {
                case 1 :
                    // InternalSTCoreParser.g:7108:3: rule__STAtomicExpression__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__2"
    // InternalSTCoreParser.g:7116:1: rule__STAtomicExpression__Group_1__2 : rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3 ;
    public final void rule__STAtomicExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7120:1: ( rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3 )
            // InternalSTCoreParser.g:7121:2: rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3
            {
            pushFollow(FOLLOW_59);
            rule__STAtomicExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__2"


    // $ANTLR start "rule__STAtomicExpression__Group_1__2__Impl"
    // InternalSTCoreParser.g:7128:1: rule__STAtomicExpression__Group_1__2__Impl : ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) ) ;
    public final void rule__STAtomicExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7132:1: ( ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) ) )
            // InternalSTCoreParser.g:7133:1: ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) )
            {
            // InternalSTCoreParser.g:7133:1: ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) )
            // InternalSTCoreParser.g:7134:2: ( rule__STAtomicExpression__SymbolAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolAssignment_1_2()); 
            }
            // InternalSTCoreParser.g:7135:2: ( rule__STAtomicExpression__SymbolAssignment_1_2 )
            // InternalSTCoreParser.g:7135:3: rule__STAtomicExpression__SymbolAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__SymbolAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__3"
    // InternalSTCoreParser.g:7143:1: rule__STAtomicExpression__Group_1__3 : rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4 ;
    public final void rule__STAtomicExpression__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7147:1: ( rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4 )
            // InternalSTCoreParser.g:7148:2: rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4
            {
            pushFollow(FOLLOW_59);
            rule__STAtomicExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__3"


    // $ANTLR start "rule__STAtomicExpression__Group_1__3__Impl"
    // InternalSTCoreParser.g:7155:1: rule__STAtomicExpression__Group_1__3__Impl : ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? ) ;
    public final void rule__STAtomicExpression__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7159:1: ( ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? ) )
            // InternalSTCoreParser.g:7160:1: ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? )
            {
            // InternalSTCoreParser.g:7160:1: ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? )
            // InternalSTCoreParser.g:7161:2: ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorAssignment_1_3()); 
            }
            // InternalSTCoreParser.g:7162:2: ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( ((LA63_0>=B && LA63_0<=X)) ) {
                alt63=1;
            }
            else if ( (LA63_0==FullStop) ) {
                int LA63_2 = input.LA(2);

                if ( (LA63_2==RULE_INT) ) {
                    alt63=1;
                }
            }
            switch (alt63) {
                case 1 :
                    // InternalSTCoreParser.g:7162:3: rule__STAtomicExpression__BitaccessorAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__BitaccessorAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__3__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__4"
    // InternalSTCoreParser.g:7170:1: rule__STAtomicExpression__Group_1__4 : rule__STAtomicExpression__Group_1__4__Impl ;
    public final void rule__STAtomicExpression__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7174:1: ( rule__STAtomicExpression__Group_1__4__Impl )
            // InternalSTCoreParser.g:7175:2: rule__STAtomicExpression__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__4"


    // $ANTLR start "rule__STAtomicExpression__Group_1__4__Impl"
    // InternalSTCoreParser.g:7181:1: rule__STAtomicExpression__Group_1__4__Impl : ( ( rule__STAtomicExpression__Group_1_4__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7185:1: ( ( ( rule__STAtomicExpression__Group_1_4__0 )? ) )
            // InternalSTCoreParser.g:7186:1: ( ( rule__STAtomicExpression__Group_1_4__0 )? )
            {
            // InternalSTCoreParser.g:7186:1: ( ( rule__STAtomicExpression__Group_1_4__0 )? )
            // InternalSTCoreParser.g:7187:2: ( rule__STAtomicExpression__Group_1_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4()); 
            }
            // InternalSTCoreParser.g:7188:2: ( rule__STAtomicExpression__Group_1_4__0 )?
            int alt64=2;
            alt64 = dfa64.predict(input);
            switch (alt64) {
                case 1 :
                    // InternalSTCoreParser.g:7188:3: rule__STAtomicExpression__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__4__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__0"
    // InternalSTCoreParser.g:7197:1: rule__STAtomicExpression__Group_1_1__0 : rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1 ;
    public final void rule__STAtomicExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7201:1: ( rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1 )
            // InternalSTCoreParser.g:7202:2: rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_63);
            rule__STAtomicExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__0__Impl"
    // InternalSTCoreParser.g:7209:1: rule__STAtomicExpression__Group_1_1__0__Impl : ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7213:1: ( ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) ) )
            // InternalSTCoreParser.g:7214:1: ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) )
            {
            // InternalSTCoreParser.g:7214:1: ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) )
            // InternalSTCoreParser.g:7215:2: ( rule__STAtomicExpression__TypeAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeAssignment_1_1_0()); 
            }
            // InternalSTCoreParser.g:7216:2: ( rule__STAtomicExpression__TypeAssignment_1_1_0 )
            // InternalSTCoreParser.g:7216:3: rule__STAtomicExpression__TypeAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__TypeAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__1"
    // InternalSTCoreParser.g:7224:1: rule__STAtomicExpression__Group_1_1__1 : rule__STAtomicExpression__Group_1_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7228:1: ( rule__STAtomicExpression__Group_1_1__1__Impl )
            // InternalSTCoreParser.g:7229:2: rule__STAtomicExpression__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__1__Impl"
    // InternalSTCoreParser.g:7235:1: rule__STAtomicExpression__Group_1_1__1__Impl : ( NumberSign ) ;
    public final void rule__STAtomicExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7239:1: ( ( NumberSign ) )
            // InternalSTCoreParser.g:7240:1: ( NumberSign )
            {
            // InternalSTCoreParser.g:7240:1: ( NumberSign )
            // InternalSTCoreParser.g:7241:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getNumberSignKeyword_1_1_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getNumberSignKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__0"
    // InternalSTCoreParser.g:7251:1: rule__STAtomicExpression__Group_1_4__0 : rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1 ;
    public final void rule__STAtomicExpression__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7255:1: ( rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1 )
            // InternalSTCoreParser.g:7256:2: rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1
            {
            pushFollow(FOLLOW_60);
            rule__STAtomicExpression__Group_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__0__Impl"
    // InternalSTCoreParser.g:7263:1: rule__STAtomicExpression__Group_1_4__0__Impl : ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7267:1: ( ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) ) )
            // InternalSTCoreParser.g:7268:1: ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) )
            {
            // InternalSTCoreParser.g:7268:1: ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) )
            // InternalSTCoreParser.g:7269:2: ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationAssignment_1_4_0()); 
            }
            // InternalSTCoreParser.g:7270:2: ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 )
            // InternalSTCoreParser.g:7270:3: rule__STAtomicExpression__PoeInvocationAssignment_1_4_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__PoeInvocationAssignment_1_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationAssignment_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__1"
    // InternalSTCoreParser.g:7278:1: rule__STAtomicExpression__Group_1_4__1 : rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2 ;
    public final void rule__STAtomicExpression__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7282:1: ( rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2 )
            // InternalSTCoreParser.g:7283:2: rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2
            {
            pushFollow(FOLLOW_60);
            rule__STAtomicExpression__Group_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__1__Impl"
    // InternalSTCoreParser.g:7290:1: rule__STAtomicExpression__Group_1_4__1__Impl : ( ( rule__STAtomicExpression__Group_1_4_1__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7294:1: ( ( ( rule__STAtomicExpression__Group_1_4_1__0 )? ) )
            // InternalSTCoreParser.g:7295:1: ( ( rule__STAtomicExpression__Group_1_4_1__0 )? )
            {
            // InternalSTCoreParser.g:7295:1: ( ( rule__STAtomicExpression__Group_1_4_1__0 )? )
            // InternalSTCoreParser.g:7296:2: ( rule__STAtomicExpression__Group_1_4_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1()); 
            }
            // InternalSTCoreParser.g:7297:2: ( rule__STAtomicExpression__Group_1_4_1__0 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( ((LA65_0>=LDATE_AND_TIME && LA65_0<=TIME_OF_DAY)||LA65_0==WSTRING||(LA65_0>=STRING && LA65_0<=DWORD)||(LA65_0>=LDATE && LA65_0<=LWORD)||(LA65_0>=UDINT && LA65_0<=WCHAR)||(LA65_0>=BOOL && LA65_0<=DINT)||(LA65_0>=LINT && LA65_0<=UINT)||LA65_0==WORD||(LA65_0>=INT && LA65_0<=LDT)||LA65_0==TOD||LA65_0==DT||(LA65_0>=LD && LA65_0<=LT)||LA65_0==NOT||LA65_0==D||LA65_0==T||LA65_0==LeftParenthesis||LA65_0==PlusSign||LA65_0==HyphenMinus||LA65_0==RULE_BOOL_VALUES||(LA65_0>=RULE_NON_DECIMAL && LA65_0<=RULE_INT)||(LA65_0>=RULE_ID && LA65_0<=RULE_STRING)) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalSTCoreParser.g:7297:3: rule__STAtomicExpression__Group_1_4_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_4_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__2"
    // InternalSTCoreParser.g:7305:1: rule__STAtomicExpression__Group_1_4__2 : rule__STAtomicExpression__Group_1_4__2__Impl ;
    public final void rule__STAtomicExpression__Group_1_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7309:1: ( rule__STAtomicExpression__Group_1_4__2__Impl )
            // InternalSTCoreParser.g:7310:2: rule__STAtomicExpression__Group_1_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__2"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__2__Impl"
    // InternalSTCoreParser.g:7316:1: rule__STAtomicExpression__Group_1_4__2__Impl : ( RightParenthesis ) ;
    public final void rule__STAtomicExpression__Group_1_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7320:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:7321:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:7321:1: ( RightParenthesis )
            // InternalSTCoreParser.g:7322:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_1_4_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__0"
    // InternalSTCoreParser.g:7332:1: rule__STAtomicExpression__Group_1_4_1__0 : rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1 ;
    public final void rule__STAtomicExpression__Group_1_4_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7336:1: ( rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1 )
            // InternalSTCoreParser.g:7337:2: rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1
            {
            pushFollow(FOLLOW_61);
            rule__STAtomicExpression__Group_1_4_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__0__Impl"
    // InternalSTCoreParser.g:7344:1: rule__STAtomicExpression__Group_1_4_1__0__Impl : ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7348:1: ( ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) ) )
            // InternalSTCoreParser.g:7349:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) )
            {
            // InternalSTCoreParser.g:7349:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) )
            // InternalSTCoreParser.g:7350:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_0()); 
            }
            // InternalSTCoreParser.g:7351:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 )
            // InternalSTCoreParser.g:7351:3: rule__STAtomicExpression__ParametersAssignment_1_4_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__ParametersAssignment_1_4_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__1"
    // InternalSTCoreParser.g:7359:1: rule__STAtomicExpression__Group_1_4_1__1 : rule__STAtomicExpression__Group_1_4_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_4_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7363:1: ( rule__STAtomicExpression__Group_1_4_1__1__Impl )
            // InternalSTCoreParser.g:7364:2: rule__STAtomicExpression__Group_1_4_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__1__Impl"
    // InternalSTCoreParser.g:7370:1: rule__STAtomicExpression__Group_1_4_1__1__Impl : ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* ) ;
    public final void rule__STAtomicExpression__Group_1_4_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7374:1: ( ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* ) )
            // InternalSTCoreParser.g:7375:1: ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* )
            {
            // InternalSTCoreParser.g:7375:1: ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* )
            // InternalSTCoreParser.g:7376:2: ( rule__STAtomicExpression__Group_1_4_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1_1()); 
            }
            // InternalSTCoreParser.g:7377:2: ( rule__STAtomicExpression__Group_1_4_1_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==Comma) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalSTCoreParser.g:7377:3: rule__STAtomicExpression__Group_1_4_1_1__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STAtomicExpression__Group_1_4_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__0"
    // InternalSTCoreParser.g:7386:1: rule__STAtomicExpression__Group_1_4_1_1__0 : rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1 ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7390:1: ( rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1 )
            // InternalSTCoreParser.g:7391:2: rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STAtomicExpression__Group_1_4_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__0__Impl"
    // InternalSTCoreParser.g:7398:1: rule__STAtomicExpression__Group_1_4_1_1__0__Impl : ( Comma ) ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7402:1: ( ( Comma ) )
            // InternalSTCoreParser.g:7403:1: ( Comma )
            {
            // InternalSTCoreParser.g:7403:1: ( Comma )
            // InternalSTCoreParser.g:7404:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getCommaKeyword_1_4_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getCommaKeyword_1_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__1"
    // InternalSTCoreParser.g:7413:1: rule__STAtomicExpression__Group_1_4_1_1__1 : rule__STAtomicExpression__Group_1_4_1_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7417:1: ( rule__STAtomicExpression__Group_1_4_1_1__1__Impl )
            // InternalSTCoreParser.g:7418:2: rule__STAtomicExpression__Group_1_4_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__1__Impl"
    // InternalSTCoreParser.g:7424:1: rule__STAtomicExpression__Group_1_4_1_1__1__Impl : ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7428:1: ( ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) ) )
            // InternalSTCoreParser.g:7429:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) )
            {
            // InternalSTCoreParser.g:7429:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) )
            // InternalSTCoreParser.g:7430:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_1_1()); 
            }
            // InternalSTCoreParser.g:7431:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 )
            // InternalSTCoreParser.g:7431:3: rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__0"
    // InternalSTCoreParser.g:7440:1: rule__STLiteralExpressions__Group_0__0 : rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1 ;
    public final void rule__STLiteralExpressions__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7444:1: ( rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1 )
            // InternalSTCoreParser.g:7445:2: rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1
            {
            pushFollow(FOLLOW_64);
            rule__STLiteralExpressions__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__0__Impl"
    // InternalSTCoreParser.g:7452:1: rule__STLiteralExpressions__Group_0__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7456:1: ( ( () ) )
            // InternalSTCoreParser.g:7457:1: ( () )
            {
            // InternalSTCoreParser.g:7457:1: ( () )
            // InternalSTCoreParser.g:7458:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTBoolLiteralAction_0_0()); 
            }
            // InternalSTCoreParser.g:7459:2: ()
            // InternalSTCoreParser.g:7459:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTBoolLiteralAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__1"
    // InternalSTCoreParser.g:7467:1: rule__STLiteralExpressions__Group_0__1 : rule__STLiteralExpressions__Group_0__1__Impl ;
    public final void rule__STLiteralExpressions__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7471:1: ( rule__STLiteralExpressions__Group_0__1__Impl )
            // InternalSTCoreParser.g:7472:2: rule__STLiteralExpressions__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__1__Impl"
    // InternalSTCoreParser.g:7478:1: rule__STLiteralExpressions__Group_0__1__Impl : ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7482:1: ( ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) ) )
            // InternalSTCoreParser.g:7483:1: ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) )
            {
            // InternalSTCoreParser.g:7483:1: ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) )
            // InternalSTCoreParser.g:7484:2: ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralAssignment_0_1()); 
            }
            // InternalSTCoreParser.g:7485:2: ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 )
            // InternalSTCoreParser.g:7485:3: rule__STLiteralExpressions__BoolLiteralAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__BoolLiteralAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__0"
    // InternalSTCoreParser.g:7494:1: rule__STLiteralExpressions__Group_1__0 : rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1 ;
    public final void rule__STLiteralExpressions__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7498:1: ( rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1 )
            // InternalSTCoreParser.g:7499:2: rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1
            {
            pushFollow(FOLLOW_65);
            rule__STLiteralExpressions__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__0__Impl"
    // InternalSTCoreParser.g:7506:1: rule__STLiteralExpressions__Group_1__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7510:1: ( ( () ) )
            // InternalSTCoreParser.g:7511:1: ( () )
            {
            // InternalSTCoreParser.g:7511:1: ( () )
            // InternalSTCoreParser.g:7512:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralAction_1_0()); 
            }
            // InternalSTCoreParser.g:7513:2: ()
            // InternalSTCoreParser.g:7513:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__1"
    // InternalSTCoreParser.g:7521:1: rule__STLiteralExpressions__Group_1__1 : rule__STLiteralExpressions__Group_1__1__Impl ;
    public final void rule__STLiteralExpressions__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7525:1: ( rule__STLiteralExpressions__Group_1__1__Impl )
            // InternalSTCoreParser.g:7526:2: rule__STLiteralExpressions__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__1__Impl"
    // InternalSTCoreParser.g:7532:1: rule__STLiteralExpressions__Group_1__1__Impl : ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7536:1: ( ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:7537:1: ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:7537:1: ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) )
            // InternalSTCoreParser.g:7538:2: ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:7539:2: ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 )
            // InternalSTCoreParser.g:7539:3: rule__STLiteralExpressions__NumericLiteralAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__NumericLiteralAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__0"
    // InternalSTCoreParser.g:7548:1: rule__STLiteralExpressions__Group_2__0 : rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1 ;
    public final void rule__STLiteralExpressions__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7552:1: ( rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1 )
            // InternalSTCoreParser.g:7553:2: rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1
            {
            pushFollow(FOLLOW_66);
            rule__STLiteralExpressions__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__0__Impl"
    // InternalSTCoreParser.g:7560:1: rule__STLiteralExpressions__Group_2__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7564:1: ( ( () ) )
            // InternalSTCoreParser.g:7565:1: ( () )
            {
            // InternalSTCoreParser.g:7565:1: ( () )
            // InternalSTCoreParser.g:7566:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralAction_2_0()); 
            }
            // InternalSTCoreParser.g:7567:2: ()
            // InternalSTCoreParser.g:7567:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__1"
    // InternalSTCoreParser.g:7575:1: rule__STLiteralExpressions__Group_2__1 : rule__STLiteralExpressions__Group_2__1__Impl ;
    public final void rule__STLiteralExpressions__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7579:1: ( rule__STLiteralExpressions__Group_2__1__Impl )
            // InternalSTCoreParser.g:7580:2: rule__STLiteralExpressions__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__1__Impl"
    // InternalSTCoreParser.g:7586:1: rule__STLiteralExpressions__Group_2__1__Impl : ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7590:1: ( ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) ) )
            // InternalSTCoreParser.g:7591:1: ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) )
            {
            // InternalSTCoreParser.g:7591:1: ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) )
            // InternalSTCoreParser.g:7592:2: ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralAssignment_2_1()); 
            }
            // InternalSTCoreParser.g:7593:2: ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 )
            // InternalSTCoreParser.g:7593:3: rule__STLiteralExpressions__DateLiteralAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__DateLiteralAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__0"
    // InternalSTCoreParser.g:7602:1: rule__STLiteralExpressions__Group_3__0 : rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1 ;
    public final void rule__STLiteralExpressions__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7606:1: ( rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1 )
            // InternalSTCoreParser.g:7607:2: rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1
            {
            pushFollow(FOLLOW_67);
            rule__STLiteralExpressions__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__0__Impl"
    // InternalSTCoreParser.g:7614:1: rule__STLiteralExpressions__Group_3__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7618:1: ( ( () ) )
            // InternalSTCoreParser.g:7619:1: ( () )
            {
            // InternalSTCoreParser.g:7619:1: ( () )
            // InternalSTCoreParser.g:7620:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralAction_3_0()); 
            }
            // InternalSTCoreParser.g:7621:2: ()
            // InternalSTCoreParser.g:7621:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__1"
    // InternalSTCoreParser.g:7629:1: rule__STLiteralExpressions__Group_3__1 : rule__STLiteralExpressions__Group_3__1__Impl ;
    public final void rule__STLiteralExpressions__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7633:1: ( rule__STLiteralExpressions__Group_3__1__Impl )
            // InternalSTCoreParser.g:7634:2: rule__STLiteralExpressions__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__1__Impl"
    // InternalSTCoreParser.g:7640:1: rule__STLiteralExpressions__Group_3__1__Impl : ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7644:1: ( ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) ) )
            // InternalSTCoreParser.g:7645:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) )
            {
            // InternalSTCoreParser.g:7645:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) )
            // InternalSTCoreParser.g:7646:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_3_1()); 
            }
            // InternalSTCoreParser.g:7647:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 )
            // InternalSTCoreParser.g:7647:3: rule__STLiteralExpressions__TimeLiteralAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeLiteralAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__0"
    // InternalSTCoreParser.g:7656:1: rule__STLiteralExpressions__Group_4__0 : rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1 ;
    public final void rule__STLiteralExpressions__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7660:1: ( rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1 )
            // InternalSTCoreParser.g:7661:2: rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1
            {
            pushFollow(FOLLOW_68);
            rule__STLiteralExpressions__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__0__Impl"
    // InternalSTCoreParser.g:7668:1: rule__STLiteralExpressions__Group_4__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7672:1: ( ( () ) )
            // InternalSTCoreParser.g:7673:1: ( () )
            {
            // InternalSTCoreParser.g:7673:1: ( () )
            // InternalSTCoreParser.g:7674:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralAction_4_0()); 
            }
            // InternalSTCoreParser.g:7675:2: ()
            // InternalSTCoreParser.g:7675:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__1"
    // InternalSTCoreParser.g:7683:1: rule__STLiteralExpressions__Group_4__1 : rule__STLiteralExpressions__Group_4__1__Impl ;
    public final void rule__STLiteralExpressions__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7687:1: ( rule__STLiteralExpressions__Group_4__1__Impl )
            // InternalSTCoreParser.g:7688:2: rule__STLiteralExpressions__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__1__Impl"
    // InternalSTCoreParser.g:7694:1: rule__STLiteralExpressions__Group_4__1__Impl : ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7698:1: ( ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) ) )
            // InternalSTCoreParser.g:7699:1: ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) )
            {
            // InternalSTCoreParser.g:7699:1: ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) )
            // InternalSTCoreParser.g:7700:2: ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralAssignment_4_1()); 
            }
            // InternalSTCoreParser.g:7701:2: ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 )
            // InternalSTCoreParser.g:7701:3: rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__0"
    // InternalSTCoreParser.g:7710:1: rule__STLiteralExpressions__Group_5__0 : rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1 ;
    public final void rule__STLiteralExpressions__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7714:1: ( rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1 )
            // InternalSTCoreParser.g:7715:2: rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1
            {
            pushFollow(FOLLOW_69);
            rule__STLiteralExpressions__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__0__Impl"
    // InternalSTCoreParser.g:7722:1: rule__STLiteralExpressions__Group_5__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7726:1: ( ( () ) )
            // InternalSTCoreParser.g:7727:1: ( () )
            {
            // InternalSTCoreParser.g:7727:1: ( () )
            // InternalSTCoreParser.g:7728:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralAction_5_0()); 
            }
            // InternalSTCoreParser.g:7729:2: ()
            // InternalSTCoreParser.g:7729:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__1"
    // InternalSTCoreParser.g:7737:1: rule__STLiteralExpressions__Group_5__1 : rule__STLiteralExpressions__Group_5__1__Impl ;
    public final void rule__STLiteralExpressions__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7741:1: ( rule__STLiteralExpressions__Group_5__1__Impl )
            // InternalSTCoreParser.g:7742:2: rule__STLiteralExpressions__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__1__Impl"
    // InternalSTCoreParser.g:7748:1: rule__STLiteralExpressions__Group_5__1__Impl : ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7752:1: ( ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) ) )
            // InternalSTCoreParser.g:7753:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) )
            {
            // InternalSTCoreParser.g:7753:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) )
            // InternalSTCoreParser.g:7754:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_5_1()); 
            }
            // InternalSTCoreParser.g:7755:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 )
            // InternalSTCoreParser.g:7755:3: rule__STLiteralExpressions__TimeLiteralAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeLiteralAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__0"
    // InternalSTCoreParser.g:7764:1: rule__STLiteralExpressions__Group_6__0 : rule__STLiteralExpressions__Group_6__0__Impl rule__STLiteralExpressions__Group_6__1 ;
    public final void rule__STLiteralExpressions__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7768:1: ( rule__STLiteralExpressions__Group_6__0__Impl rule__STLiteralExpressions__Group_6__1 )
            // InternalSTCoreParser.g:7769:2: rule__STLiteralExpressions__Group_6__0__Impl rule__STLiteralExpressions__Group_6__1
            {
            pushFollow(FOLLOW_70);
            rule__STLiteralExpressions__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__0__Impl"
    // InternalSTCoreParser.g:7776:1: rule__STLiteralExpressions__Group_6__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7780:1: ( ( () ) )
            // InternalSTCoreParser.g:7781:1: ( () )
            {
            // InternalSTCoreParser.g:7781:1: ( () )
            // InternalSTCoreParser.g:7782:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralAction_6_0()); 
            }
            // InternalSTCoreParser.g:7783:2: ()
            // InternalSTCoreParser.g:7783:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralAction_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__1"
    // InternalSTCoreParser.g:7791:1: rule__STLiteralExpressions__Group_6__1 : rule__STLiteralExpressions__Group_6__1__Impl ;
    public final void rule__STLiteralExpressions__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7795:1: ( rule__STLiteralExpressions__Group_6__1__Impl )
            // InternalSTCoreParser.g:7796:2: rule__STLiteralExpressions__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__1__Impl"
    // InternalSTCoreParser.g:7802:1: rule__STLiteralExpressions__Group_6__1__Impl : ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7806:1: ( ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) ) )
            // InternalSTCoreParser.g:7807:1: ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) )
            {
            // InternalSTCoreParser.g:7807:1: ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) )
            // InternalSTCoreParser.g:7808:2: ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralAssignment_6_1()); 
            }
            // InternalSTCoreParser.g:7809:2: ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 )
            // InternalSTCoreParser.g:7809:3: rule__STLiteralExpressions__StringLiteralAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__StringLiteralAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__1__Impl"


    // $ANTLR start "rule__BOOL_LITERAL__Group__0"
    // InternalSTCoreParser.g:7818:1: rule__BOOL_LITERAL__Group__0 : rule__BOOL_LITERAL__Group__0__Impl rule__BOOL_LITERAL__Group__1 ;
    public final void rule__BOOL_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7822:1: ( rule__BOOL_LITERAL__Group__0__Impl rule__BOOL_LITERAL__Group__1 )
            // InternalSTCoreParser.g:7823:2: rule__BOOL_LITERAL__Group__0__Impl rule__BOOL_LITERAL__Group__1
            {
            pushFollow(FOLLOW_64);
            rule__BOOL_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__0"


    // $ANTLR start "rule__BOOL_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:7830:1: rule__BOOL_LITERAL__Group__0__Impl : ( ( rule__BOOL_LITERAL__NotAssignment_0 )? ) ;
    public final void rule__BOOL_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7834:1: ( ( ( rule__BOOL_LITERAL__NotAssignment_0 )? ) )
            // InternalSTCoreParser.g:7835:1: ( ( rule__BOOL_LITERAL__NotAssignment_0 )? )
            {
            // InternalSTCoreParser.g:7835:1: ( ( rule__BOOL_LITERAL__NotAssignment_0 )? )
            // InternalSTCoreParser.g:7836:2: ( rule__BOOL_LITERAL__NotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getNotAssignment_0()); 
            }
            // InternalSTCoreParser.g:7837:2: ( rule__BOOL_LITERAL__NotAssignment_0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==NOT) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSTCoreParser.g:7837:3: rule__BOOL_LITERAL__NotAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__BOOL_LITERAL__NotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getNotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__BOOL_LITERAL__Group__1"
    // InternalSTCoreParser.g:7845:1: rule__BOOL_LITERAL__Group__1 : rule__BOOL_LITERAL__Group__1__Impl rule__BOOL_LITERAL__Group__2 ;
    public final void rule__BOOL_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7849:1: ( rule__BOOL_LITERAL__Group__1__Impl rule__BOOL_LITERAL__Group__2 )
            // InternalSTCoreParser.g:7850:2: rule__BOOL_LITERAL__Group__1__Impl rule__BOOL_LITERAL__Group__2
            {
            pushFollow(FOLLOW_64);
            rule__BOOL_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__1"


    // $ANTLR start "rule__BOOL_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:7857:1: rule__BOOL_LITERAL__Group__1__Impl : ( ( BOOL )? ) ;
    public final void rule__BOOL_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7861:1: ( ( ( BOOL )? ) )
            // InternalSTCoreParser.g:7862:1: ( ( BOOL )? )
            {
            // InternalSTCoreParser.g:7862:1: ( ( BOOL )? )
            // InternalSTCoreParser.g:7863:2: ( BOOL )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getBOOLKeyword_1()); 
            }
            // InternalSTCoreParser.g:7864:2: ( BOOL )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==BOOL) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSTCoreParser.g:7864:3: BOOL
                    {
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getBOOLKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__BOOL_LITERAL__Group__2"
    // InternalSTCoreParser.g:7872:1: rule__BOOL_LITERAL__Group__2 : rule__BOOL_LITERAL__Group__2__Impl ;
    public final void rule__BOOL_LITERAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7876:1: ( rule__BOOL_LITERAL__Group__2__Impl )
            // InternalSTCoreParser.g:7877:2: rule__BOOL_LITERAL__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__2"


    // $ANTLR start "rule__BOOL_LITERAL__Group__2__Impl"
    // InternalSTCoreParser.g:7883:1: rule__BOOL_LITERAL__Group__2__Impl : ( ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 ) ) ;
    public final void rule__BOOL_LITERAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7887:1: ( ( ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 ) ) )
            // InternalSTCoreParser.g:7888:1: ( ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 ) )
            {
            // InternalSTCoreParser.g:7888:1: ( ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 ) )
            // InternalSTCoreParser.g:7889:2: ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getKeyWordValueAssignment_2()); 
            }
            // InternalSTCoreParser.g:7890:2: ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 )
            // InternalSTCoreParser.g:7890:3: rule__BOOL_LITERAL__KeyWordValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__KeyWordValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getKeyWordValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__2__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__0"
    // InternalSTCoreParser.g:7899:1: rule__NUMERIC_LITERAL__Group__0 : rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1 ;
    public final void rule__NUMERIC_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7903:1: ( rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1 )
            // InternalSTCoreParser.g:7904:2: rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__NUMERIC_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__0"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:7911:1: rule__NUMERIC_LITERAL__Group__0__Impl : ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? ) ;
    public final void rule__NUMERIC_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7915:1: ( ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? ) )
            // InternalSTCoreParser.g:7916:1: ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? )
            {
            // InternalSTCoreParser.g:7916:1: ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? )
            // InternalSTCoreParser.g:7917:2: ( rule__NUMERIC_LITERAL__NotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getNotAssignment_0()); 
            }
            // InternalSTCoreParser.g:7918:2: ( rule__NUMERIC_LITERAL__NotAssignment_0 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==NOT) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalSTCoreParser.g:7918:3: rule__NUMERIC_LITERAL__NotAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__NotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getNotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__1"
    // InternalSTCoreParser.g:7926:1: rule__NUMERIC_LITERAL__Group__1 : rule__NUMERIC_LITERAL__Group__1__Impl rule__NUMERIC_LITERAL__Group__2 ;
    public final void rule__NUMERIC_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7930:1: ( rule__NUMERIC_LITERAL__Group__1__Impl rule__NUMERIC_LITERAL__Group__2 )
            // InternalSTCoreParser.g:7931:2: rule__NUMERIC_LITERAL__Group__1__Impl rule__NUMERIC_LITERAL__Group__2
            {
            pushFollow(FOLLOW_65);
            rule__NUMERIC_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__1"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:7938:1: rule__NUMERIC_LITERAL__Group__1__Impl : ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? ) ;
    public final void rule__NUMERIC_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7942:1: ( ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? ) )
            // InternalSTCoreParser.g:7943:1: ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? )
            {
            // InternalSTCoreParser.g:7943:1: ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? )
            // InternalSTCoreParser.g:7944:2: ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAssignment_1()); 
            }
            // InternalSTCoreParser.g:7945:2: ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==DWORD||LA70_0==LREAL||LA70_0==LWORD||(LA70_0>=UDINT && LA70_0<=USINT)||LA70_0==BYTE||LA70_0==DINT||LA70_0==LINT||(LA70_0>=REAL && LA70_0<=SINT)||LA70_0==UINT||LA70_0==WORD||LA70_0==INT) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSTCoreParser.g:7945:3: rule__NUMERIC_LITERAL__KeywordAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__KeywordAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__2"
    // InternalSTCoreParser.g:7953:1: rule__NUMERIC_LITERAL__Group__2 : rule__NUMERIC_LITERAL__Group__2__Impl ;
    public final void rule__NUMERIC_LITERAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7957:1: ( rule__NUMERIC_LITERAL__Group__2__Impl )
            // InternalSTCoreParser.g:7958:2: rule__NUMERIC_LITERAL__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__2"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__2__Impl"
    // InternalSTCoreParser.g:7964:1: rule__NUMERIC_LITERAL__Group__2__Impl : ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) ) ;
    public final void rule__NUMERIC_LITERAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7968:1: ( ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) ) )
            // InternalSTCoreParser.g:7969:1: ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) )
            {
            // InternalSTCoreParser.g:7969:1: ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) )
            // InternalSTCoreParser.g:7970:2: ( rule__NUMERIC_LITERAL__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getAlternatives_2()); 
            }
            // InternalSTCoreParser.g:7971:2: ( rule__NUMERIC_LITERAL__Alternatives_2 )
            // InternalSTCoreParser.g:7971:3: rule__NUMERIC_LITERAL__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__2__Impl"


    // $ANTLR start "rule__DATE_LITERAL__Group__0"
    // InternalSTCoreParser.g:7980:1: rule__DATE_LITERAL__Group__0 : rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1 ;
    public final void rule__DATE_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7984:1: ( rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1 )
            // InternalSTCoreParser.g:7985:2: rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__DATE_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__0"


    // $ANTLR start "rule__DATE_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:7992:1: rule__DATE_LITERAL__Group__0__Impl : ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__DATE_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7996:1: ( ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:7997:1: ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:7997:1: ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:7998:2: ( rule__DATE_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:7999:2: ( rule__DATE_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:7999:3: rule__DATE_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__DATE_LITERAL__Group__1"
    // InternalSTCoreParser.g:8007:1: rule__DATE_LITERAL__Group__1 : rule__DATE_LITERAL__Group__1__Impl ;
    public final void rule__DATE_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8011:1: ( rule__DATE_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:8012:2: rule__DATE_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__1"


    // $ANTLR start "rule__DATE_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8018:1: rule__DATE_LITERAL__Group__1__Impl : ( ( rule__DATE_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__DATE_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8022:1: ( ( ( rule__DATE_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8023:1: ( ( rule__DATE_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8023:1: ( ( rule__DATE_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:8024:2: ( rule__DATE_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8025:2: ( rule__DATE_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8025:3: rule__DATE_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__TIME_LITERAL__Group__0"
    // InternalSTCoreParser.g:8034:1: rule__TIME_LITERAL__Group__0 : rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1 ;
    public final void rule__TIME_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8038:1: ( rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8039:2: rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__TIME_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__0"


    // $ANTLR start "rule__TIME_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8046:1: rule__TIME_LITERAL__Group__0__Impl : ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__TIME_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8050:1: ( ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:8051:1: ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:8051:1: ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:8052:2: ( rule__TIME_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:8053:2: ( rule__TIME_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:8053:3: rule__TIME_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__TIME_LITERAL__Group__1"
    // InternalSTCoreParser.g:8061:1: rule__TIME_LITERAL__Group__1 : rule__TIME_LITERAL__Group__1__Impl ;
    public final void rule__TIME_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8065:1: ( rule__TIME_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:8066:2: rule__TIME_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__1"


    // $ANTLR start "rule__TIME_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8072:1: rule__TIME_LITERAL__Group__1__Impl : ( ( rule__TIME_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__TIME_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8076:1: ( ( ( rule__TIME_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8077:1: ( ( rule__TIME_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8077:1: ( ( rule__TIME_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:8078:2: ( rule__TIME_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8079:2: ( rule__TIME_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8079:3: rule__TIME_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__0"
    // InternalSTCoreParser.g:8088:1: rule__TIME_OF_DAY_LITERAL__Group__0 : rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1 ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8092:1: ( rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8093:2: rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__TIME_OF_DAY_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8100:1: rule__TIME_OF_DAY_LITERAL__Group__0__Impl : ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8104:1: ( ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:8105:1: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:8105:1: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:8106:2: ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:8107:2: ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:8107:3: rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__1"
    // InternalSTCoreParser.g:8115:1: rule__TIME_OF_DAY_LITERAL__Group__1 : rule__TIME_OF_DAY_LITERAL__Group__1__Impl ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8119:1: ( rule__TIME_OF_DAY_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:8120:2: rule__TIME_OF_DAY_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__1"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8126:1: rule__TIME_OF_DAY_LITERAL__Group__1__Impl : ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8130:1: ( ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8131:1: ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8131:1: ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:8132:2: ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8133:2: ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8133:3: rule__TIME_OF_DAY_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__0"
    // InternalSTCoreParser.g:8142:1: rule__DATE_AND_TIME_LITERAL__Group__0 : rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8146:1: ( rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8147:2: rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__DATE_AND_TIME_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8154:1: rule__DATE_AND_TIME_LITERAL__Group__0__Impl : ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8158:1: ( ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:8159:1: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:8159:1: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:8160:2: ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:8161:2: ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:8161:3: rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__1"
    // InternalSTCoreParser.g:8169:1: rule__DATE_AND_TIME_LITERAL__Group__1 : rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8173:1: ( rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2 )
            // InternalSTCoreParser.g:8174:2: rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2
            {
            pushFollow(FOLLOW_72);
            rule__DATE_AND_TIME_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8181:1: rule__DATE_AND_TIME_LITERAL__Group__1__Impl : ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8185:1: ( ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8186:1: ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8186:1: ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) )
            // InternalSTCoreParser.g:8187:2: ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8188:2: ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 )
            // InternalSTCoreParser.g:8188:3: rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__2"
    // InternalSTCoreParser.g:8196:1: rule__DATE_AND_TIME_LITERAL__Group__2 : rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8200:1: ( rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3 )
            // InternalSTCoreParser.g:8201:2: rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3
            {
            pushFollow(FOLLOW_62);
            rule__DATE_AND_TIME_LITERAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__2"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__2__Impl"
    // InternalSTCoreParser.g:8208:1: rule__DATE_AND_TIME_LITERAL__Group__2__Impl : ( HyphenMinus ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8212:1: ( ( HyphenMinus ) )
            // InternalSTCoreParser.g:8213:1: ( HyphenMinus )
            {
            // InternalSTCoreParser.g:8213:1: ( HyphenMinus )
            // InternalSTCoreParser.g:8214:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getHyphenMinusKeyword_2()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getHyphenMinusKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__2__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__3"
    // InternalSTCoreParser.g:8223:1: rule__DATE_AND_TIME_LITERAL__Group__3 : rule__DATE_AND_TIME_LITERAL__Group__3__Impl ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8227:1: ( rule__DATE_AND_TIME_LITERAL__Group__3__Impl )
            // InternalSTCoreParser.g:8228:2: rule__DATE_AND_TIME_LITERAL__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__3"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__3__Impl"
    // InternalSTCoreParser.g:8234:1: rule__DATE_AND_TIME_LITERAL__Group__3__Impl : ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8238:1: ( ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) ) )
            // InternalSTCoreParser.g:8239:1: ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) )
            {
            // InternalSTCoreParser.g:8239:1: ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) )
            // InternalSTCoreParser.g:8240:2: ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueAssignment_3()); 
            }
            // InternalSTCoreParser.g:8241:2: ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 )
            // InternalSTCoreParser.g:8241:3: rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__3__Impl"


    // $ANTLR start "rule__STRING_LITERAL__Group__0"
    // InternalSTCoreParser.g:8250:1: rule__STRING_LITERAL__Group__0 : rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1 ;
    public final void rule__STRING_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8254:1: ( rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8255:2: rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__STRING_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__0"


    // $ANTLR start "rule__STRING_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8262:1: rule__STRING_LITERAL__Group__0__Impl : ( ( rule__STRING_LITERAL__Alternatives_0 )? ) ;
    public final void rule__STRING_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8266:1: ( ( ( rule__STRING_LITERAL__Alternatives_0 )? ) )
            // InternalSTCoreParser.g:8267:1: ( ( rule__STRING_LITERAL__Alternatives_0 )? )
            {
            // InternalSTCoreParser.g:8267:1: ( ( rule__STRING_LITERAL__Alternatives_0 )? )
            // InternalSTCoreParser.g:8268:2: ( rule__STRING_LITERAL__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getAlternatives_0()); 
            }
            // InternalSTCoreParser.g:8269:2: ( rule__STRING_LITERAL__Alternatives_0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==WSTRING||LA71_0==STRING||LA71_0==WCHAR||LA71_0==CHAR) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSTCoreParser.g:8269:3: rule__STRING_LITERAL__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STRING_LITERAL__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__STRING_LITERAL__Group__1"
    // InternalSTCoreParser.g:8277:1: rule__STRING_LITERAL__Group__1 : rule__STRING_LITERAL__Group__1__Impl ;
    public final void rule__STRING_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8281:1: ( rule__STRING_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:8282:2: rule__STRING_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__1"


    // $ANTLR start "rule__STRING_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8288:1: rule__STRING_LITERAL__Group__1__Impl : ( ( rule__STRING_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__STRING_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8292:1: ( ( ( rule__STRING_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8293:1: ( ( rule__STRING_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8293:1: ( ( rule__STRING_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:8294:2: ( rule__STRING_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8295:2: ( rule__STRING_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8295:3: rule__STRING_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__INTEGER__Group__0"
    // InternalSTCoreParser.g:8304:1: rule__INTEGER__Group__0 : rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1 ;
    public final void rule__INTEGER__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8308:1: ( rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1 )
            // InternalSTCoreParser.g:8309:2: rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__INTEGER__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__0"


    // $ANTLR start "rule__INTEGER__Group__0__Impl"
    // InternalSTCoreParser.g:8316:1: rule__INTEGER__Group__0__Impl : ( ( rule__INTEGER__Alternatives_0 )? ) ;
    public final void rule__INTEGER__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8320:1: ( ( ( rule__INTEGER__Alternatives_0 )? ) )
            // InternalSTCoreParser.g:8321:1: ( ( rule__INTEGER__Alternatives_0 )? )
            {
            // InternalSTCoreParser.g:8321:1: ( ( rule__INTEGER__Alternatives_0 )? )
            // InternalSTCoreParser.g:8322:2: ( rule__INTEGER__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getAlternatives_0()); 
            }
            // InternalSTCoreParser.g:8323:2: ( rule__INTEGER__Alternatives_0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==PlusSign||LA72_0==HyphenMinus) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSTCoreParser.g:8323:3: rule__INTEGER__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__INTEGER__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__0__Impl"


    // $ANTLR start "rule__INTEGER__Group__1"
    // InternalSTCoreParser.g:8331:1: rule__INTEGER__Group__1 : rule__INTEGER__Group__1__Impl ;
    public final void rule__INTEGER__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8335:1: ( rule__INTEGER__Group__1__Impl )
            // InternalSTCoreParser.g:8336:2: rule__INTEGER__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__1"


    // $ANTLR start "rule__INTEGER__Group__1__Impl"
    // InternalSTCoreParser.g:8342:1: rule__INTEGER__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__INTEGER__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8346:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8347:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8347:1: ( RULE_INT )
            // InternalSTCoreParser.g:8348:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__1__Impl"


    // $ANTLR start "rule__REAL__Group__0"
    // InternalSTCoreParser.g:8358:1: rule__REAL__Group__0 : rule__REAL__Group__0__Impl rule__REAL__Group__1 ;
    public final void rule__REAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8362:1: ( rule__REAL__Group__0__Impl rule__REAL__Group__1 )
            // InternalSTCoreParser.g:8363:2: rule__REAL__Group__0__Impl rule__REAL__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__REAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__REAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__0"


    // $ANTLR start "rule__REAL__Group__0__Impl"
    // InternalSTCoreParser.g:8370:1: rule__REAL__Group__0__Impl : ( ruleINTEGER ) ;
    public final void rule__REAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8374:1: ( ( ruleINTEGER ) )
            // InternalSTCoreParser.g:8375:1: ( ruleINTEGER )
            {
            // InternalSTCoreParser.g:8375:1: ( ruleINTEGER )
            // InternalSTCoreParser.g:8376:2: ruleINTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getINTEGERParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getINTEGERParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__0__Impl"


    // $ANTLR start "rule__REAL__Group__1"
    // InternalSTCoreParser.g:8385:1: rule__REAL__Group__1 : rule__REAL__Group__1__Impl rule__REAL__Group__2 ;
    public final void rule__REAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8389:1: ( rule__REAL__Group__1__Impl rule__REAL__Group__2 )
            // InternalSTCoreParser.g:8390:2: rule__REAL__Group__1__Impl rule__REAL__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__REAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__REAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__1"


    // $ANTLR start "rule__REAL__Group__1__Impl"
    // InternalSTCoreParser.g:8397:1: rule__REAL__Group__1__Impl : ( FullStop ) ;
    public final void rule__REAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8401:1: ( ( FullStop ) )
            // InternalSTCoreParser.g:8402:1: ( FullStop )
            {
            // InternalSTCoreParser.g:8402:1: ( FullStop )
            // InternalSTCoreParser.g:8403:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getFullStopKeyword_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__1__Impl"


    // $ANTLR start "rule__REAL__Group__2"
    // InternalSTCoreParser.g:8412:1: rule__REAL__Group__2 : rule__REAL__Group__2__Impl ;
    public final void rule__REAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8416:1: ( rule__REAL__Group__2__Impl )
            // InternalSTCoreParser.g:8417:2: rule__REAL__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__2"


    // $ANTLR start "rule__REAL__Group__2__Impl"
    // InternalSTCoreParser.g:8423:1: rule__REAL__Group__2__Impl : ( ( rule__REAL__Alternatives_2 ) ) ;
    public final void rule__REAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8427:1: ( ( ( rule__REAL__Alternatives_2 ) ) )
            // InternalSTCoreParser.g:8428:1: ( ( rule__REAL__Alternatives_2 ) )
            {
            // InternalSTCoreParser.g:8428:1: ( ( rule__REAL__Alternatives_2 ) )
            // InternalSTCoreParser.g:8429:2: ( rule__REAL__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getAlternatives_2()); 
            }
            // InternalSTCoreParser.g:8430:2: ( rule__REAL__Alternatives_2 )
            // InternalSTCoreParser.g:8430:3: rule__REAL__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__2__Impl"


    // $ANTLR start "rule__DATE__Group__0"
    // InternalSTCoreParser.g:8439:1: rule__DATE__Group__0 : rule__DATE__Group__0__Impl rule__DATE__Group__1 ;
    public final void rule__DATE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8443:1: ( rule__DATE__Group__0__Impl rule__DATE__Group__1 )
            // InternalSTCoreParser.g:8444:2: rule__DATE__Group__0__Impl rule__DATE__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__DATE__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__0"


    // $ANTLR start "rule__DATE__Group__0__Impl"
    // InternalSTCoreParser.g:8451:1: rule__DATE__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8455:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8456:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8456:1: ( RULE_INT )
            // InternalSTCoreParser.g:8457:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__0__Impl"


    // $ANTLR start "rule__DATE__Group__1"
    // InternalSTCoreParser.g:8466:1: rule__DATE__Group__1 : rule__DATE__Group__1__Impl rule__DATE__Group__2 ;
    public final void rule__DATE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8470:1: ( rule__DATE__Group__1__Impl rule__DATE__Group__2 )
            // InternalSTCoreParser.g:8471:2: rule__DATE__Group__1__Impl rule__DATE__Group__2
            {
            pushFollow(FOLLOW_62);
            rule__DATE__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__1"


    // $ANTLR start "rule__DATE__Group__1__Impl"
    // InternalSTCoreParser.g:8478:1: rule__DATE__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__DATE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8482:1: ( ( HyphenMinus ) )
            // InternalSTCoreParser.g:8483:1: ( HyphenMinus )
            {
            // InternalSTCoreParser.g:8483:1: ( HyphenMinus )
            // InternalSTCoreParser.g:8484:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__1__Impl"


    // $ANTLR start "rule__DATE__Group__2"
    // InternalSTCoreParser.g:8493:1: rule__DATE__Group__2 : rule__DATE__Group__2__Impl rule__DATE__Group__3 ;
    public final void rule__DATE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8497:1: ( rule__DATE__Group__2__Impl rule__DATE__Group__3 )
            // InternalSTCoreParser.g:8498:2: rule__DATE__Group__2__Impl rule__DATE__Group__3
            {
            pushFollow(FOLLOW_72);
            rule__DATE__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__2"


    // $ANTLR start "rule__DATE__Group__2__Impl"
    // InternalSTCoreParser.g:8505:1: rule__DATE__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8509:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8510:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8510:1: ( RULE_INT )
            // InternalSTCoreParser.g:8511:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__2__Impl"


    // $ANTLR start "rule__DATE__Group__3"
    // InternalSTCoreParser.g:8520:1: rule__DATE__Group__3 : rule__DATE__Group__3__Impl rule__DATE__Group__4 ;
    public final void rule__DATE__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8524:1: ( rule__DATE__Group__3__Impl rule__DATE__Group__4 )
            // InternalSTCoreParser.g:8525:2: rule__DATE__Group__3__Impl rule__DATE__Group__4
            {
            pushFollow(FOLLOW_62);
            rule__DATE__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__3"


    // $ANTLR start "rule__DATE__Group__3__Impl"
    // InternalSTCoreParser.g:8532:1: rule__DATE__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__DATE__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8536:1: ( ( HyphenMinus ) )
            // InternalSTCoreParser.g:8537:1: ( HyphenMinus )
            {
            // InternalSTCoreParser.g:8537:1: ( HyphenMinus )
            // InternalSTCoreParser.g:8538:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__3__Impl"


    // $ANTLR start "rule__DATE__Group__4"
    // InternalSTCoreParser.g:8547:1: rule__DATE__Group__4 : rule__DATE__Group__4__Impl ;
    public final void rule__DATE__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8551:1: ( rule__DATE__Group__4__Impl )
            // InternalSTCoreParser.g:8552:2: rule__DATE__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__4"


    // $ANTLR start "rule__DATE__Group__4__Impl"
    // InternalSTCoreParser.g:8558:1: rule__DATE__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8562:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8563:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8563:1: ( RULE_INT )
            // InternalSTCoreParser.g:8564:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__4__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__0"
    // InternalSTCoreParser.g:8574:1: rule__TIME_OF_DAY__Group__0 : rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1 ;
    public final void rule__TIME_OF_DAY__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8578:1: ( rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1 )
            // InternalSTCoreParser.g:8579:2: rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1
            {
            pushFollow(FOLLOW_76);
            rule__TIME_OF_DAY__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__0"


    // $ANTLR start "rule__TIME_OF_DAY__Group__0__Impl"
    // InternalSTCoreParser.g:8586:1: rule__TIME_OF_DAY__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8590:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8591:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8591:1: ( RULE_INT )
            // InternalSTCoreParser.g:8592:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__1"
    // InternalSTCoreParser.g:8601:1: rule__TIME_OF_DAY__Group__1 : rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2 ;
    public final void rule__TIME_OF_DAY__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8605:1: ( rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2 )
            // InternalSTCoreParser.g:8606:2: rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2
            {
            pushFollow(FOLLOW_62);
            rule__TIME_OF_DAY__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__1"


    // $ANTLR start "rule__TIME_OF_DAY__Group__1__Impl"
    // InternalSTCoreParser.g:8613:1: rule__TIME_OF_DAY__Group__1__Impl : ( Colon ) ;
    public final void rule__TIME_OF_DAY__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8617:1: ( ( Colon ) )
            // InternalSTCoreParser.g:8618:1: ( Colon )
            {
            // InternalSTCoreParser.g:8618:1: ( Colon )
            // InternalSTCoreParser.g:8619:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__1__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__2"
    // InternalSTCoreParser.g:8628:1: rule__TIME_OF_DAY__Group__2 : rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3 ;
    public final void rule__TIME_OF_DAY__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8632:1: ( rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3 )
            // InternalSTCoreParser.g:8633:2: rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3
            {
            pushFollow(FOLLOW_76);
            rule__TIME_OF_DAY__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__2"


    // $ANTLR start "rule__TIME_OF_DAY__Group__2__Impl"
    // InternalSTCoreParser.g:8640:1: rule__TIME_OF_DAY__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8644:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8645:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8645:1: ( RULE_INT )
            // InternalSTCoreParser.g:8646:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__2__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__3"
    // InternalSTCoreParser.g:8655:1: rule__TIME_OF_DAY__Group__3 : rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4 ;
    public final void rule__TIME_OF_DAY__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8659:1: ( rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4 )
            // InternalSTCoreParser.g:8660:2: rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4
            {
            pushFollow(FOLLOW_62);
            rule__TIME_OF_DAY__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__3"


    // $ANTLR start "rule__TIME_OF_DAY__Group__3__Impl"
    // InternalSTCoreParser.g:8667:1: rule__TIME_OF_DAY__Group__3__Impl : ( Colon ) ;
    public final void rule__TIME_OF_DAY__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8671:1: ( ( Colon ) )
            // InternalSTCoreParser.g:8672:1: ( Colon )
            {
            // InternalSTCoreParser.g:8672:1: ( Colon )
            // InternalSTCoreParser.g:8673:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__3__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__4"
    // InternalSTCoreParser.g:8682:1: rule__TIME_OF_DAY__Group__4 : rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5 ;
    public final void rule__TIME_OF_DAY__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8686:1: ( rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5 )
            // InternalSTCoreParser.g:8687:2: rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5
            {
            pushFollow(FOLLOW_74);
            rule__TIME_OF_DAY__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__4"


    // $ANTLR start "rule__TIME_OF_DAY__Group__4__Impl"
    // InternalSTCoreParser.g:8694:1: rule__TIME_OF_DAY__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8698:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8699:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8699:1: ( RULE_INT )
            // InternalSTCoreParser.g:8700:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__4__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__5"
    // InternalSTCoreParser.g:8709:1: rule__TIME_OF_DAY__Group__5 : rule__TIME_OF_DAY__Group__5__Impl ;
    public final void rule__TIME_OF_DAY__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8713:1: ( rule__TIME_OF_DAY__Group__5__Impl )
            // InternalSTCoreParser.g:8714:2: rule__TIME_OF_DAY__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__5"


    // $ANTLR start "rule__TIME_OF_DAY__Group__5__Impl"
    // InternalSTCoreParser.g:8720:1: rule__TIME_OF_DAY__Group__5__Impl : ( ( rule__TIME_OF_DAY__Group_5__0 )? ) ;
    public final void rule__TIME_OF_DAY__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8724:1: ( ( ( rule__TIME_OF_DAY__Group_5__0 )? ) )
            // InternalSTCoreParser.g:8725:1: ( ( rule__TIME_OF_DAY__Group_5__0 )? )
            {
            // InternalSTCoreParser.g:8725:1: ( ( rule__TIME_OF_DAY__Group_5__0 )? )
            // InternalSTCoreParser.g:8726:2: ( rule__TIME_OF_DAY__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getGroup_5()); 
            }
            // InternalSTCoreParser.g:8727:2: ( rule__TIME_OF_DAY__Group_5__0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==FullStop) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSTCoreParser.g:8727:3: rule__TIME_OF_DAY__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TIME_OF_DAY__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__5__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__0"
    // InternalSTCoreParser.g:8736:1: rule__TIME_OF_DAY__Group_5__0 : rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1 ;
    public final void rule__TIME_OF_DAY__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8740:1: ( rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1 )
            // InternalSTCoreParser.g:8741:2: rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1
            {
            pushFollow(FOLLOW_62);
            rule__TIME_OF_DAY__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__0"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__0__Impl"
    // InternalSTCoreParser.g:8748:1: rule__TIME_OF_DAY__Group_5__0__Impl : ( FullStop ) ;
    public final void rule__TIME_OF_DAY__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8752:1: ( ( FullStop ) )
            // InternalSTCoreParser.g:8753:1: ( FullStop )
            {
            // InternalSTCoreParser.g:8753:1: ( FullStop )
            // InternalSTCoreParser.g:8754:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getFullStopKeyword_5_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getFullStopKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__1"
    // InternalSTCoreParser.g:8763:1: rule__TIME_OF_DAY__Group_5__1 : rule__TIME_OF_DAY__Group_5__1__Impl ;
    public final void rule__TIME_OF_DAY__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8767:1: ( rule__TIME_OF_DAY__Group_5__1__Impl )
            // InternalSTCoreParser.g:8768:2: rule__TIME_OF_DAY__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__1"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__1__Impl"
    // InternalSTCoreParser.g:8774:1: rule__TIME_OF_DAY__Group_5__1__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8778:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8779:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8779:1: ( RULE_INT )
            // InternalSTCoreParser.g:8780:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_5_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__1__Impl"


    // $ANTLR start "rule__Code__StatementsAssignment"
    // InternalSTCoreParser.g:8790:1: rule__Code__StatementsAssignment : ( ruleSTStatement ) ;
    public final void rule__Code__StatementsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8794:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:8795:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:8795:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:8796:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCodeAccess().getStatementsSTStatementParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCodeAccess().getStatementsSTStatementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Code__StatementsAssignment"


    // $ANTLR start "rule__VarDeclaration__NameAssignment_0"
    // InternalSTCoreParser.g:8805:1: rule__VarDeclaration__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__VarDeclaration__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8809:1: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:8810:2: ( RULE_ID )
            {
            // InternalSTCoreParser.g:8810:2: ( RULE_ID )
            // InternalSTCoreParser.g:8811:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__NameAssignment_0"


    // $ANTLR start "rule__VarDeclaration__LocatedAtAssignment_1_1"
    // InternalSTCoreParser.g:8820:1: rule__VarDeclaration__LocatedAtAssignment_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__LocatedAtAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8824:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:8825:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:8825:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:8826:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationCrossReference_1_1_0()); 
            }
            // InternalSTCoreParser.g:8827:3: ( RULE_ID )
            // InternalSTCoreParser.g:8828:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationIDTerminalRuleCall_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationIDTerminalRuleCall_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationCrossReference_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__LocatedAtAssignment_1_1"


    // $ANTLR start "rule__VarDeclaration__ArrayAssignment_3_0"
    // InternalSTCoreParser.g:8839:1: rule__VarDeclaration__ArrayAssignment_3_0 : ( ( ARRAY ) ) ;
    public final void rule__VarDeclaration__ArrayAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8843:1: ( ( ( ARRAY ) ) )
            // InternalSTCoreParser.g:8844:2: ( ( ARRAY ) )
            {
            // InternalSTCoreParser.g:8844:2: ( ( ARRAY ) )
            // InternalSTCoreParser.g:8845:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }
            // InternalSTCoreParser.g:8846:3: ( ARRAY )
            // InternalSTCoreParser.g:8847:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__ArrayAssignment_3_0"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_3_1_0_1"
    // InternalSTCoreParser.g:8858:1: rule__VarDeclaration__RangesAssignment_3_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_3_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8862:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8863:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8863:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8864:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_3_1_0_1"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_3_1_0_2_1"
    // InternalSTCoreParser.g:8873:1: rule__VarDeclaration__RangesAssignment_3_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_3_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8877:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8878:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8878:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8879:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_3_1_0_2_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_3_1_1_1"
    // InternalSTCoreParser.g:8888:1: rule__VarDeclaration__CountAssignment_3_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_3_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8892:1: ( ( ( Asterisk ) ) )
            // InternalSTCoreParser.g:8893:2: ( ( Asterisk ) )
            {
            // InternalSTCoreParser.g:8893:2: ( ( Asterisk ) )
            // InternalSTCoreParser.g:8894:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }
            // InternalSTCoreParser.g:8895:3: ( Asterisk )
            // InternalSTCoreParser.g:8896:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_3_1_1_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_3_1_1_2_1"
    // InternalSTCoreParser.g:8907:1: rule__VarDeclaration__CountAssignment_3_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_3_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8911:1: ( ( ( Asterisk ) ) )
            // InternalSTCoreParser.g:8912:2: ( ( Asterisk ) )
            {
            // InternalSTCoreParser.g:8912:2: ( ( Asterisk ) )
            // InternalSTCoreParser.g:8913:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }
            // InternalSTCoreParser.g:8914:3: ( Asterisk )
            // InternalSTCoreParser.g:8915:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_3_1_1_2_1"


    // $ANTLR start "rule__VarDeclaration__TypeAssignment_4"
    // InternalSTCoreParser.g:8926:1: rule__VarDeclaration__TypeAssignment_4 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__TypeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8930:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:8931:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:8931:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:8932:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementCrossReference_4_0()); 
            }
            // InternalSTCoreParser.g:8933:3: ( RULE_ID )
            // InternalSTCoreParser.g:8934:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementIDTerminalRuleCall_4_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementIDTerminalRuleCall_4_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementCrossReference_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__TypeAssignment_4"


    // $ANTLR start "rule__VarDeclaration__MaxLengthAssignment_5_1"
    // InternalSTCoreParser.g:8945:1: rule__VarDeclaration__MaxLengthAssignment_5_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__MaxLengthAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8949:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8950:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8950:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8951:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__MaxLengthAssignment_5_1"


    // $ANTLR start "rule__VarDeclaration__DefaultValueAssignment_6_1"
    // InternalSTCoreParser.g:8960:1: rule__VarDeclaration__DefaultValueAssignment_6_1 : ( ruleInitializerExpression ) ;
    public final void rule__VarDeclaration__DefaultValueAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8964:1: ( ( ruleInitializerExpression ) )
            // InternalSTCoreParser.g:8965:2: ( ruleInitializerExpression )
            {
            // InternalSTCoreParser.g:8965:2: ( ruleInitializerExpression )
            // InternalSTCoreParser.g:8966:3: ruleInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__DefaultValueAssignment_6_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_1"
    // InternalSTCoreParser.g:8975:1: rule__ArrayInitializerExpression__ValuesAssignment_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8979:1: ( ( ruleArrayInitElement ) )
            // InternalSTCoreParser.g:8980:2: ( ruleArrayInitElement )
            {
            // InternalSTCoreParser.g:8980:2: ( ruleArrayInitElement )
            // InternalSTCoreParser.g:8981:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_2_1"
    // InternalSTCoreParser.g:8990:1: rule__ArrayInitializerExpression__ValuesAssignment_2_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8994:1: ( ( ruleArrayInitElement ) )
            // InternalSTCoreParser.g:8995:2: ( ruleArrayInitElement )
            {
            // InternalSTCoreParser.g:8995:2: ( ruleArrayInitElement )
            // InternalSTCoreParser.g:8996:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"
    // InternalSTCoreParser.g:9005:1: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__IndexOrInitExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9009:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9010:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9010:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9011:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"


    // $ANTLR start "rule__ArrayInitElement__InitExpressionAssignment_1_1"
    // InternalSTCoreParser.g:9020:1: rule__ArrayInitElement__InitExpressionAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__InitExpressionAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9024:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9025:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9025:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9026:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__InitExpressionAssignment_1_1"


    // $ANTLR start "rule__STAssignmentStatement__LhsAssignment_0"
    // InternalSTCoreParser.g:9035:1: rule__STAssignmentStatement__LhsAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__STAssignmentStatement__LhsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9039:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9040:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9040:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9041:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationCrossReference_0_0()); 
            }
            // InternalSTCoreParser.g:9042:3: ( RULE_ID )
            // InternalSTCoreParser.g:9043:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__LhsAssignment_0"


    // $ANTLR start "rule__STAssignmentStatement__RhsAssignment_2"
    // InternalSTCoreParser.g:9054:1: rule__STAssignmentStatement__RhsAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STAssignmentStatement__RhsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9058:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9059:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9059:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9060:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRhsSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRhsSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__RhsAssignment_2"


    // $ANTLR start "rule__STIfStatment__ConditionAssignment_1"
    // InternalSTCoreParser.g:9069:1: rule__STIfStatment__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STIfStatment__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9073:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9074:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9074:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9075:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ConditionAssignment_1"


    // $ANTLR start "rule__STIfStatment__StatementsAssignment_3"
    // InternalSTCoreParser.g:9084:1: rule__STIfStatment__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STIfStatment__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9088:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9089:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9089:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9090:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__StatementsAssignment_3"


    // $ANTLR start "rule__STIfStatment__ElseifsAssignment_4"
    // InternalSTCoreParser.g:9099:1: rule__STIfStatment__ElseifsAssignment_4 : ( ruleSTElseIfPart ) ;
    public final void rule__STIfStatment__ElseifsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9103:1: ( ( ruleSTElseIfPart ) )
            // InternalSTCoreParser.g:9104:2: ( ruleSTElseIfPart )
            {
            // InternalSTCoreParser.g:9104:2: ( ruleSTElseIfPart )
            // InternalSTCoreParser.g:9105:3: ruleSTElseIfPart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ElseifsAssignment_4"


    // $ANTLR start "rule__STIfStatment__ElseAssignment_5"
    // InternalSTCoreParser.g:9114:1: rule__STIfStatment__ElseAssignment_5 : ( ruleSTElsePart ) ;
    public final void rule__STIfStatment__ElseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9118:1: ( ( ruleSTElsePart ) )
            // InternalSTCoreParser.g:9119:2: ( ruleSTElsePart )
            {
            // InternalSTCoreParser.g:9119:2: ( ruleSTElsePart )
            // InternalSTCoreParser.g:9120:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ElseAssignment_5"


    // $ANTLR start "rule__STElseIfPart__ConditionAssignment_1"
    // InternalSTCoreParser.g:9129:1: rule__STElseIfPart__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STElseIfPart__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9133:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9134:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9134:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9135:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__ConditionAssignment_1"


    // $ANTLR start "rule__STElseIfPart__StatementsAssignment_3"
    // InternalSTCoreParser.g:9144:1: rule__STElseIfPart__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STElseIfPart__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9148:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9149:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9149:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9150:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__StatementsAssignment_3"


    // $ANTLR start "rule__STCaseStatement__SelectorAssignment_1"
    // InternalSTCoreParser.g:9159:1: rule__STCaseStatement__SelectorAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseStatement__SelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9163:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9164:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9164:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9165:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__SelectorAssignment_1"


    // $ANTLR start "rule__STCaseStatement__CasesAssignment_3"
    // InternalSTCoreParser.g:9174:1: rule__STCaseStatement__CasesAssignment_3 : ( ruleSTCaseCases ) ;
    public final void rule__STCaseStatement__CasesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9178:1: ( ( ruleSTCaseCases ) )
            // InternalSTCoreParser.g:9179:2: ( ruleSTCaseCases )
            {
            // InternalSTCoreParser.g:9179:2: ( ruleSTCaseCases )
            // InternalSTCoreParser.g:9180:3: ruleSTCaseCases
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__CasesAssignment_3"


    // $ANTLR start "rule__STCaseStatement__ElseAssignment_4"
    // InternalSTCoreParser.g:9189:1: rule__STCaseStatement__ElseAssignment_4 : ( ruleSTElsePart ) ;
    public final void rule__STCaseStatement__ElseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9193:1: ( ( ruleSTElsePart ) )
            // InternalSTCoreParser.g:9194:2: ( ruleSTElsePart )
            {
            // InternalSTCoreParser.g:9194:2: ( ruleSTElsePart )
            // InternalSTCoreParser.g:9195:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__ElseAssignment_4"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_0"
    // InternalSTCoreParser.g:9204:1: rule__STCaseCases__ConditionsAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9208:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9209:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9209:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9210:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_0"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_1_1"
    // InternalSTCoreParser.g:9219:1: rule__STCaseCases__ConditionsAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9223:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9224:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9224:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9225:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_1_1"


    // $ANTLR start "rule__STCaseCases__StatementsAssignment_3"
    // InternalSTCoreParser.g:9234:1: rule__STCaseCases__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STCaseCases__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9238:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9239:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9239:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9240:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__StatementsAssignment_3"


    // $ANTLR start "rule__STElsePart__StatementsAssignment_2"
    // InternalSTCoreParser.g:9249:1: rule__STElsePart__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STElsePart__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9253:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9254:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9254:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9255:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__StatementsAssignment_2"


    // $ANTLR start "rule__STForStatement__ForAssignment_1"
    // InternalSTCoreParser.g:9264:1: rule__STForStatement__ForAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ForAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9268:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9269:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9269:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9270:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getForSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getForSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ForAssignment_1"


    // $ANTLR start "rule__STForStatement__ToAssignment_3"
    // InternalSTCoreParser.g:9279:1: rule__STForStatement__ToAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ToAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9283:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9284:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9284:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9285:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ToAssignment_3"


    // $ANTLR start "rule__STForStatement__ByAssignment_4_1"
    // InternalSTCoreParser.g:9294:1: rule__STForStatement__ByAssignment_4_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ByAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9298:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9299:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9299:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9300:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ByAssignment_4_1"


    // $ANTLR start "rule__STForStatement__StatementsAssignment_6"
    // InternalSTCoreParser.g:9309:1: rule__STForStatement__StatementsAssignment_6 : ( ruleSTStatement ) ;
    public final void rule__STForStatement__StatementsAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9313:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9314:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9314:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9315:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__StatementsAssignment_6"


    // $ANTLR start "rule__STWhileStatement__ConditionAssignment_1"
    // InternalSTCoreParser.g:9324:1: rule__STWhileStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STWhileStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9328:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9329:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9329:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9330:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STWhileStatement__StatementsAssignment_3"
    // InternalSTCoreParser.g:9339:1: rule__STWhileStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STWhileStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9343:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9344:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9344:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9345:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STRepeatStatement__StatementsAssignment_1"
    // InternalSTCoreParser.g:9354:1: rule__STRepeatStatement__StatementsAssignment_1 : ( ruleSTStatement ) ;
    public final void rule__STRepeatStatement__StatementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9358:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9359:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9359:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9360:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__StatementsAssignment_1"


    // $ANTLR start "rule__STRepeatStatement__ConditionAssignment_3"
    // InternalSTCoreParser.g:9369:1: rule__STRepeatStatement__ConditionAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STRepeatStatement__ConditionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9373:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9374:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9374:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9375:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__ConditionAssignment_3"


    // $ANTLR start "rule__STSubrangeExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9384:1: rule__STSubrangeExpression__OpAssignment_1_0_1 : ( ruleSubrangeOperator ) ;
    public final void rule__STSubrangeExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9388:1: ( ( ruleSubrangeOperator ) )
            // InternalSTCoreParser.g:9389:2: ( ruleSubrangeOperator )
            {
            // InternalSTCoreParser.g:9389:2: ( ruleSubrangeOperator )
            // InternalSTCoreParser.g:9390:3: ruleSubrangeOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubrangeOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STSubrangeExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9399:1: rule__STSubrangeExpression__RightAssignment_1_1 : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9403:1: ( ( ruleSTOrExpression ) )
            // InternalSTCoreParser.g:9404:2: ( ruleSTOrExpression )
            {
            // InternalSTCoreParser.g:9404:2: ( ruleSTOrExpression )
            // InternalSTCoreParser.g:9405:3: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STOrExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9414:1: rule__STOrExpression__OpAssignment_1_0_1 : ( ruleOrOperator ) ;
    public final void rule__STOrExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9418:1: ( ( ruleOrOperator ) )
            // InternalSTCoreParser.g:9419:2: ( ruleOrOperator )
            {
            // InternalSTCoreParser.g:9419:2: ( ruleOrOperator )
            // InternalSTCoreParser.g:9420:3: ruleOrOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STOrExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9429:1: rule__STOrExpression__RightAssignment_1_1 : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9433:1: ( ( ruleSTXorExpression ) )
            // InternalSTCoreParser.g:9434:2: ( ruleSTXorExpression )
            {
            // InternalSTCoreParser.g:9434:2: ( ruleSTXorExpression )
            // InternalSTCoreParser.g:9435:3: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STXorExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9444:1: rule__STXorExpression__OpAssignment_1_0_1 : ( ruleXorOperator ) ;
    public final void rule__STXorExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9448:1: ( ( ruleXorOperator ) )
            // InternalSTCoreParser.g:9449:2: ( ruleXorOperator )
            {
            // InternalSTCoreParser.g:9449:2: ( ruleXorOperator )
            // InternalSTCoreParser.g:9450:3: ruleXorOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXorOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STXorExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9459:1: rule__STXorExpression__RightAssignment_1_1 : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9463:1: ( ( ruleSTAndExpression ) )
            // InternalSTCoreParser.g:9464:2: ( ruleSTAndExpression )
            {
            // InternalSTCoreParser.g:9464:2: ( ruleSTAndExpression )
            // InternalSTCoreParser.g:9465:3: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAndExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9474:1: rule__STAndExpression__OpAssignment_1_0_1 : ( ruleAndOperator ) ;
    public final void rule__STAndExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9478:1: ( ( ruleAndOperator ) )
            // InternalSTCoreParser.g:9479:2: ( ruleAndOperator )
            {
            // InternalSTCoreParser.g:9479:2: ( ruleAndOperator )
            // InternalSTCoreParser.g:9480:3: ruleAndOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAndOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAndExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9489:1: rule__STAndExpression__RightAssignment_1_1 : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9493:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTCoreParser.g:9494:2: ( ruleSTEqualityExpression )
            {
            // InternalSTCoreParser.g:9494:2: ( ruleSTEqualityExpression )
            // InternalSTCoreParser.g:9495:3: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STEqualityExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9504:1: rule__STEqualityExpression__OpAssignment_1_0_1 : ( ruleEqualityOperator ) ;
    public final void rule__STEqualityExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9508:1: ( ( ruleEqualityOperator ) )
            // InternalSTCoreParser.g:9509:2: ( ruleEqualityOperator )
            {
            // InternalSTCoreParser.g:9509:2: ( ruleEqualityOperator )
            // InternalSTCoreParser.g:9510:3: ruleEqualityOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STEqualityExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9519:1: rule__STEqualityExpression__RightAssignment_1_1 : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9523:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTCoreParser.g:9524:2: ( ruleSTComparisonExpression )
            {
            // InternalSTCoreParser.g:9524:2: ( ruleSTComparisonExpression )
            // InternalSTCoreParser.g:9525:3: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STComparisonExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9534:1: rule__STComparisonExpression__OpAssignment_1_0_1 : ( ruleCompareOperator ) ;
    public final void rule__STComparisonExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9538:1: ( ( ruleCompareOperator ) )
            // InternalSTCoreParser.g:9539:2: ( ruleCompareOperator )
            {
            // InternalSTCoreParser.g:9539:2: ( ruleCompareOperator )
            // InternalSTCoreParser.g:9540:3: ruleCompareOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STComparisonExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9549:1: rule__STComparisonExpression__RightAssignment_1_1 : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9553:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTCoreParser.g:9554:2: ( ruleSTAddSubExpression )
            {
            // InternalSTCoreParser.g:9554:2: ( ruleSTAddSubExpression )
            // InternalSTCoreParser.g:9555:3: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAddSubExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9564:1: rule__STAddSubExpression__OpAssignment_1_0_1 : ( ruleAddSubOperator ) ;
    public final void rule__STAddSubExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9568:1: ( ( ruleAddSubOperator ) )
            // InternalSTCoreParser.g:9569:2: ( ruleAddSubOperator )
            {
            // InternalSTCoreParser.g:9569:2: ( ruleAddSubOperator )
            // InternalSTCoreParser.g:9570:3: ruleAddSubOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAddSubOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAddSubExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9579:1: rule__STAddSubExpression__RightAssignment_1_1 : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9583:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTCoreParser.g:9584:2: ( ruleSTMulDivModExpression )
            {
            // InternalSTCoreParser.g:9584:2: ( ruleSTMulDivModExpression )
            // InternalSTCoreParser.g:9585:3: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STMulDivModExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9594:1: rule__STMulDivModExpression__OpAssignment_1_0_1 : ( ruleMulDivModOperator ) ;
    public final void rule__STMulDivModExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9598:1: ( ( ruleMulDivModOperator ) )
            // InternalSTCoreParser.g:9599:2: ( ruleMulDivModOperator )
            {
            // InternalSTCoreParser.g:9599:2: ( ruleMulDivModOperator )
            // InternalSTCoreParser.g:9600:3: ruleMulDivModOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulDivModOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STMulDivModExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9609:1: rule__STMulDivModExpression__RightAssignment_1_1 : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9613:1: ( ( ruleSTPowerExpression ) )
            // InternalSTCoreParser.g:9614:2: ( ruleSTPowerExpression )
            {
            // InternalSTCoreParser.g:9614:2: ( ruleSTPowerExpression )
            // InternalSTCoreParser.g:9615:3: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STPowerExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9624:1: rule__STPowerExpression__OpAssignment_1_0_1 : ( rulePowerOperator ) ;
    public final void rule__STPowerExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9628:1: ( ( rulePowerOperator ) )
            // InternalSTCoreParser.g:9629:2: ( rulePowerOperator )
            {
            // InternalSTCoreParser.g:9629:2: ( rulePowerOperator )
            // InternalSTCoreParser.g:9630:3: rulePowerOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePowerOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STPowerExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9639:1: rule__STPowerExpression__RightAssignment_1_1 : ( ruleSTSignumExpression ) ;
    public final void rule__STPowerExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9643:1: ( ( ruleSTSignumExpression ) )
            // InternalSTCoreParser.g:9644:2: ( ruleSTSignumExpression )
            {
            // InternalSTCoreParser.g:9644:2: ( ruleSTSignumExpression )
            // InternalSTCoreParser.g:9645:3: ruleSTSignumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightSTSignumExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightSTSignumExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STSignumExpression__OpAssignment_2_1"
    // InternalSTCoreParser.g:9654:1: rule__STSignumExpression__OpAssignment_2_1 : ( ruleUnaryOperator ) ;
    public final void rule__STSignumExpression__OpAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9658:1: ( ( ruleUnaryOperator ) )
            // InternalSTCoreParser.g:9659:2: ( ruleUnaryOperator )
            {
            // InternalSTCoreParser.g:9659:2: ( ruleUnaryOperator )
            // InternalSTCoreParser.g:9660:3: ruleUnaryOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getOpUnaryOperatorEnumRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getOpUnaryOperatorEnumRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__OpAssignment_2_1"


    // $ANTLR start "rule__STSignumExpression__ExpressionAssignment_2_2"
    // InternalSTCoreParser.g:9669:1: rule__STSignumExpression__ExpressionAssignment_2_2 : ( ruleSTSelectionExpression ) ;
    public final void rule__STSignumExpression__ExpressionAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9673:1: ( ( ruleSTSelectionExpression ) )
            // InternalSTCoreParser.g:9674:2: ( ruleSTSelectionExpression )
            {
            // InternalSTCoreParser.g:9674:2: ( ruleSTSelectionExpression )
            // InternalSTCoreParser.g:9675:3: ruleSTSelectionExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getExpressionSTSelectionExpressionParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSelectionExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getExpressionSTSelectionExpressionParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__ExpressionAssignment_2_2"


    // $ANTLR start "rule__STSelectionExpression__StructAccessAssignment_1_1_0_0"
    // InternalSTCoreParser.g:9684:1: rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 : ( ( FullStop ) ) ;
    public final void rule__STSelectionExpression__StructAccessAssignment_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9688:1: ( ( ( FullStop ) ) )
            // InternalSTCoreParser.g:9689:2: ( ( FullStop ) )
            {
            // InternalSTCoreParser.g:9689:2: ( ( FullStop ) )
            // InternalSTCoreParser.g:9690:3: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }
            // InternalSTCoreParser.g:9691:3: ( FullStop )
            // InternalSTCoreParser.g:9692:4: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__StructAccessAssignment_1_1_0_0"


    // $ANTLR start "rule__STSelectionExpression__MemberAssignment_1_1_0_1"
    // InternalSTCoreParser.g:9703:1: rule__STSelectionExpression__MemberAssignment_1_1_0_1 : ( ( RULE_ID ) ) ;
    public final void rule__STSelectionExpression__MemberAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9707:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9708:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9708:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9709:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationCrossReference_1_1_0_1_0()); 
            }
            // InternalSTCoreParser.g:9710:3: ( RULE_ID )
            // InternalSTCoreParser.g:9711:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationIDTerminalRuleCall_1_1_0_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationIDTerminalRuleCall_1_1_0_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationCrossReference_1_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__MemberAssignment_1_1_0_1"


    // $ANTLR start "rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0"
    // InternalSTCoreParser.g:9722:1: rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 : ( ( LeftSquareBracket ) ) ;
    public final void rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9726:1: ( ( ( LeftSquareBracket ) ) )
            // InternalSTCoreParser.g:9727:2: ( ( LeftSquareBracket ) )
            {
            // InternalSTCoreParser.g:9727:2: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:9728:3: ( LeftSquareBracket )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }
            // InternalSTCoreParser.g:9729:3: ( LeftSquareBracket )
            // InternalSTCoreParser.g:9730:4: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0"


    // $ANTLR start "rule__STSelectionExpression__IndexAssignment_1_1_1_1"
    // InternalSTCoreParser.g:9741:1: rule__STSelectionExpression__IndexAssignment_1_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__IndexAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9745:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9746:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9746:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9747:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__IndexAssignment_1_1_1_1"


    // $ANTLR start "rule__STSelectionExpression__IndexAssignment_1_1_1_2_1"
    // InternalSTCoreParser.g:9756:1: rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__IndexAssignment_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9760:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9761:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9761:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9762:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__IndexAssignment_1_1_1_2_1"


    // $ANTLR start "rule__STSelectionExpression__PoeInvocationAssignment_1_2_0"
    // InternalSTCoreParser.g:9771:1: rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STSelectionExpression__PoeInvocationAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9775:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTCoreParser.g:9776:2: ( ( LeftParenthesis ) )
            {
            // InternalSTCoreParser.g:9776:2: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:9777:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }
            // InternalSTCoreParser.g:9778:3: ( LeftParenthesis )
            // InternalSTCoreParser.g:9779:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__PoeInvocationAssignment_1_2_0"


    // $ANTLR start "rule__STSelectionExpression__ParametersAssignment_1_2_1_0"
    // InternalSTCoreParser.g:9790:1: rule__STSelectionExpression__ParametersAssignment_1_2_1_0 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__ParametersAssignment_1_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9794:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9795:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9795:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9796:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ParametersAssignment_1_2_1_0"


    // $ANTLR start "rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1"
    // InternalSTCoreParser.g:9805:1: rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9809:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9810:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9810:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9811:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1"


    // $ANTLR start "rule__STSelectionExpression__BitaccessorAssignment_1_3"
    // InternalSTCoreParser.g:9820:1: rule__STSelectionExpression__BitaccessorAssignment_1_3 : ( ruleMultibitPartialAccess ) ;
    public final void rule__STSelectionExpression__BitaccessorAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9824:1: ( ( ruleMultibitPartialAccess ) )
            // InternalSTCoreParser.g:9825:2: ( ruleMultibitPartialAccess )
            {
            // InternalSTCoreParser.g:9825:2: ( ruleMultibitPartialAccess )
            // InternalSTCoreParser.g:9826:3: ruleMultibitPartialAccess
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__BitaccessorAssignment_1_3"


    // $ANTLR start "rule__MultibitPartialAccess__AccessSpecifierAssignment_0"
    // InternalSTCoreParser.g:9835:1: rule__MultibitPartialAccess__AccessSpecifierAssignment_0 : ( ruleMultiBitAccessSpecifier ) ;
    public final void rule__MultibitPartialAccess__AccessSpecifierAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9839:1: ( ( ruleMultiBitAccessSpecifier ) )
            // InternalSTCoreParser.g:9840:2: ( ruleMultiBitAccessSpecifier )
            {
            // InternalSTCoreParser.g:9840:2: ( ruleMultiBitAccessSpecifier )
            // InternalSTCoreParser.g:9841:3: ruleMultiBitAccessSpecifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierMultiBitAccessSpecifierEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultiBitAccessSpecifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierMultiBitAccessSpecifierEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__AccessSpecifierAssignment_0"


    // $ANTLR start "rule__MultibitPartialAccess__IndexAssignment_1"
    // InternalSTCoreParser.g:9850:1: rule__MultibitPartialAccess__IndexAssignment_1 : ( RULE_INT ) ;
    public final void rule__MultibitPartialAccess__IndexAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9854:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:9855:2: ( RULE_INT )
            {
            // InternalSTCoreParser.g:9855:2: ( RULE_INT )
            // InternalSTCoreParser.g:9856:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getIndexINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getIndexINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__IndexAssignment_1"


    // $ANTLR start "rule__STAtomicExpression__TypeAssignment_1_1_0"
    // InternalSTCoreParser.g:9865:1: rule__STAtomicExpression__TypeAssignment_1_1_0 : ( ( RULE_ID ) ) ;
    public final void rule__STAtomicExpression__TypeAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9869:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9870:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9870:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9871:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeCrossReference_1_1_0_0()); 
            }
            // InternalSTCoreParser.g:9872:3: ( RULE_ID )
            // InternalSTCoreParser.g:9873:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeIDTerminalRuleCall_1_1_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeIDTerminalRuleCall_1_1_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeCrossReference_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__TypeAssignment_1_1_0"


    // $ANTLR start "rule__STAtomicExpression__SymbolAssignment_1_2"
    // InternalSTCoreParser.g:9884:1: rule__STAtomicExpression__SymbolAssignment_1_2 : ( ( RULE_ID ) ) ;
    public final void rule__STAtomicExpression__SymbolAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9888:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9889:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9889:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9890:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationCrossReference_1_2_0()); 
            }
            // InternalSTCoreParser.g:9891:3: ( RULE_ID )
            // InternalSTCoreParser.g:9892:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationIDTerminalRuleCall_1_2_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationIDTerminalRuleCall_1_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationCrossReference_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__SymbolAssignment_1_2"


    // $ANTLR start "rule__STAtomicExpression__BitaccessorAssignment_1_3"
    // InternalSTCoreParser.g:9903:1: rule__STAtomicExpression__BitaccessorAssignment_1_3 : ( ruleMultibitPartialAccess ) ;
    public final void rule__STAtomicExpression__BitaccessorAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9907:1: ( ( ruleMultibitPartialAccess ) )
            // InternalSTCoreParser.g:9908:2: ( ruleMultibitPartialAccess )
            {
            // InternalSTCoreParser.g:9908:2: ( ruleMultibitPartialAccess )
            // InternalSTCoreParser.g:9909:3: ruleMultibitPartialAccess
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__BitaccessorAssignment_1_3"


    // $ANTLR start "rule__STAtomicExpression__PoeInvocationAssignment_1_4_0"
    // InternalSTCoreParser.g:9918:1: rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STAtomicExpression__PoeInvocationAssignment_1_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9922:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTCoreParser.g:9923:2: ( ( LeftParenthesis ) )
            {
            // InternalSTCoreParser.g:9923:2: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:9924:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }
            // InternalSTCoreParser.g:9925:3: ( LeftParenthesis )
            // InternalSTCoreParser.g:9926:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__PoeInvocationAssignment_1_4_0"


    // $ANTLR start "rule__STAtomicExpression__ParametersAssignment_1_4_1_0"
    // InternalSTCoreParser.g:9937:1: rule__STAtomicExpression__ParametersAssignment_1_4_1_0 : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__ParametersAssignment_1_4_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9941:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9942:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9942:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9943:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__ParametersAssignment_1_4_1_0"


    // $ANTLR start "rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1"
    // InternalSTCoreParser.g:9952:1: rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9956:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9957:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9957:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9958:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1"


    // $ANTLR start "rule__STLiteralExpressions__BoolLiteralAssignment_0_1"
    // InternalSTCoreParser.g:9967:1: rule__STLiteralExpressions__BoolLiteralAssignment_0_1 : ( ruleBOOL_LITERAL ) ;
    public final void rule__STLiteralExpressions__BoolLiteralAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9971:1: ( ( ruleBOOL_LITERAL ) )
            // InternalSTCoreParser.g:9972:2: ( ruleBOOL_LITERAL )
            {
            // InternalSTCoreParser.g:9972:2: ( ruleBOOL_LITERAL )
            // InternalSTCoreParser.g:9973:3: ruleBOOL_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralBOOL_LITERALParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBOOL_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralBOOL_LITERALParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__BoolLiteralAssignment_0_1"


    // $ANTLR start "rule__STLiteralExpressions__NumericLiteralAssignment_1_1"
    // InternalSTCoreParser.g:9982:1: rule__STLiteralExpressions__NumericLiteralAssignment_1_1 : ( ruleNUMERIC_LITERAL ) ;
    public final void rule__STLiteralExpressions__NumericLiteralAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9986:1: ( ( ruleNUMERIC_LITERAL ) )
            // InternalSTCoreParser.g:9987:2: ( ruleNUMERIC_LITERAL )
            {
            // InternalSTCoreParser.g:9987:2: ( ruleNUMERIC_LITERAL )
            // InternalSTCoreParser.g:9988:3: ruleNUMERIC_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralNUMERIC_LITERALParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNUMERIC_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralNUMERIC_LITERALParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__NumericLiteralAssignment_1_1"


    // $ANTLR start "rule__STLiteralExpressions__DateLiteralAssignment_2_1"
    // InternalSTCoreParser.g:9997:1: rule__STLiteralExpressions__DateLiteralAssignment_2_1 : ( ruleDATE_LITERAL ) ;
    public final void rule__STLiteralExpressions__DateLiteralAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10001:1: ( ( ruleDATE_LITERAL ) )
            // InternalSTCoreParser.g:10002:2: ( ruleDATE_LITERAL )
            {
            // InternalSTCoreParser.g:10002:2: ( ruleDATE_LITERAL )
            // InternalSTCoreParser.g:10003:3: ruleDATE_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralDATE_LITERALParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralDATE_LITERALParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__DateLiteralAssignment_2_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeLiteralAssignment_3_1"
    // InternalSTCoreParser.g:10012:1: rule__STLiteralExpressions__TimeLiteralAssignment_3_1 : ( ruleTIME_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeLiteralAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10016:1: ( ( ruleTIME_LITERAL ) )
            // InternalSTCoreParser.g:10017:2: ( ruleTIME_LITERAL )
            {
            // InternalSTCoreParser.g:10017:2: ( ruleTIME_LITERAL )
            // InternalSTCoreParser.g:10018:3: ruleTIME_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralTIME_LITERALParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralTIME_LITERALParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeLiteralAssignment_3_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1"
    // InternalSTCoreParser.g:10027:1: rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 : ( ruleTIME_OF_DAY_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10031:1: ( ( ruleTIME_OF_DAY_LITERAL ) )
            // InternalSTCoreParser.g:10032:2: ( ruleTIME_OF_DAY_LITERAL )
            {
            // InternalSTCoreParser.g:10032:2: ( ruleTIME_OF_DAY_LITERAL )
            // InternalSTCoreParser.g:10033:3: ruleTIME_OF_DAY_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralTIME_OF_DAY_LITERALParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralTIME_OF_DAY_LITERALParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeLiteralAssignment_5_1"
    // InternalSTCoreParser.g:10042:1: rule__STLiteralExpressions__TimeLiteralAssignment_5_1 : ( ruleDATE_AND_TIME_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeLiteralAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10046:1: ( ( ruleDATE_AND_TIME_LITERAL ) )
            // InternalSTCoreParser.g:10047:2: ( ruleDATE_AND_TIME_LITERAL )
            {
            // InternalSTCoreParser.g:10047:2: ( ruleDATE_AND_TIME_LITERAL )
            // InternalSTCoreParser.g:10048:3: ruleDATE_AND_TIME_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralDATE_AND_TIME_LITERALParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE_AND_TIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralDATE_AND_TIME_LITERALParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeLiteralAssignment_5_1"


    // $ANTLR start "rule__STLiteralExpressions__StringLiteralAssignment_6_1"
    // InternalSTCoreParser.g:10057:1: rule__STLiteralExpressions__StringLiteralAssignment_6_1 : ( ruleSTRING_LITERAL ) ;
    public final void rule__STLiteralExpressions__StringLiteralAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10061:1: ( ( ruleSTRING_LITERAL ) )
            // InternalSTCoreParser.g:10062:2: ( ruleSTRING_LITERAL )
            {
            // InternalSTCoreParser.g:10062:2: ( ruleSTRING_LITERAL )
            // InternalSTCoreParser.g:10063:3: ruleSTRING_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralSTRING_LITERALParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralSTRING_LITERALParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__StringLiteralAssignment_6_1"


    // $ANTLR start "rule__BOOL_LITERAL__NotAssignment_0"
    // InternalSTCoreParser.g:10072:1: rule__BOOL_LITERAL__NotAssignment_0 : ( ( NOT ) ) ;
    public final void rule__BOOL_LITERAL__NotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10076:1: ( ( ( NOT ) ) )
            // InternalSTCoreParser.g:10077:2: ( ( NOT ) )
            {
            // InternalSTCoreParser.g:10077:2: ( ( NOT ) )
            // InternalSTCoreParser.g:10078:3: ( NOT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            // InternalSTCoreParser.g:10079:3: ( NOT )
            // InternalSTCoreParser.g:10080:4: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__NotAssignment_0"


    // $ANTLR start "rule__BOOL_LITERAL__KeyWordValueAssignment_2"
    // InternalSTCoreParser.g:10091:1: rule__BOOL_LITERAL__KeyWordValueAssignment_2 : ( RULE_BOOL_VALUES ) ;
    public final void rule__BOOL_LITERAL__KeyWordValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10095:1: ( ( RULE_BOOL_VALUES ) )
            // InternalSTCoreParser.g:10096:2: ( RULE_BOOL_VALUES )
            {
            // InternalSTCoreParser.g:10096:2: ( RULE_BOOL_VALUES )
            // InternalSTCoreParser.g:10097:3: RULE_BOOL_VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getKeyWordValueBOOL_VALUESTerminalRuleCall_2_0()); 
            }
            match(input,RULE_BOOL_VALUES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getKeyWordValueBOOL_VALUESTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__KeyWordValueAssignment_2"


    // $ANTLR start "rule__NUMERIC_LITERAL__NotAssignment_0"
    // InternalSTCoreParser.g:10106:1: rule__NUMERIC_LITERAL__NotAssignment_0 : ( ( NOT ) ) ;
    public final void rule__NUMERIC_LITERAL__NotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10110:1: ( ( ( NOT ) ) )
            // InternalSTCoreParser.g:10111:2: ( ( NOT ) )
            {
            // InternalSTCoreParser.g:10111:2: ( ( NOT ) )
            // InternalSTCoreParser.g:10112:3: ( NOT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            // InternalSTCoreParser.g:10113:3: ( NOT )
            // InternalSTCoreParser.g:10114:4: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__NotAssignment_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__KeywordAssignment_1"
    // InternalSTCoreParser.g:10125:1: rule__NUMERIC_LITERAL__KeywordAssignment_1 : ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) ) ;
    public final void rule__NUMERIC_LITERAL__KeywordAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10129:1: ( ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) ) )
            // InternalSTCoreParser.g:10130:2: ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) )
            {
            // InternalSTCoreParser.g:10130:2: ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) )
            // InternalSTCoreParser.g:10131:3: ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAlternatives_1_0()); 
            }
            // InternalSTCoreParser.g:10132:3: ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 )
            // InternalSTCoreParser.g:10132:4: rule__NUMERIC_LITERAL__KeywordAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__KeywordAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__KeywordAssignment_1"


    // $ANTLR start "rule__NUMERIC_LITERAL__IntValueAssignment_2_0"
    // InternalSTCoreParser.g:10140:1: rule__NUMERIC_LITERAL__IntValueAssignment_2_0 : ( ruleINTEGER ) ;
    public final void rule__NUMERIC_LITERAL__IntValueAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10144:1: ( ( ruleINTEGER ) )
            // InternalSTCoreParser.g:10145:2: ( ruleINTEGER )
            {
            // InternalSTCoreParser.g:10145:2: ( ruleINTEGER )
            // InternalSTCoreParser.g:10146:3: ruleINTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getIntValueINTEGERParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getIntValueINTEGERParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__IntValueAssignment_2_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__RealValueAssignment_2_1"
    // InternalSTCoreParser.g:10155:1: rule__NUMERIC_LITERAL__RealValueAssignment_2_1 : ( ruleREAL ) ;
    public final void rule__NUMERIC_LITERAL__RealValueAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10159:1: ( ( ruleREAL ) )
            // InternalSTCoreParser.g:10160:2: ( ruleREAL )
            {
            // InternalSTCoreParser.g:10160:2: ( ruleREAL )
            // InternalSTCoreParser.g:10161:3: ruleREAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getRealValueREALParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleREAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getRealValueREALParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__RealValueAssignment_2_1"


    // $ANTLR start "rule__NUMERIC_LITERAL__HexValueAssignment_2_2"
    // InternalSTCoreParser.g:10170:1: rule__NUMERIC_LITERAL__HexValueAssignment_2_2 : ( RULE_NON_DECIMAL ) ;
    public final void rule__NUMERIC_LITERAL__HexValueAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10174:1: ( ( RULE_NON_DECIMAL ) )
            // InternalSTCoreParser.g:10175:2: ( RULE_NON_DECIMAL )
            {
            // InternalSTCoreParser.g:10175:2: ( RULE_NON_DECIMAL )
            // InternalSTCoreParser.g:10176:3: RULE_NON_DECIMAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getHexValueNON_DECIMALTerminalRuleCall_2_2_0()); 
            }
            match(input,RULE_NON_DECIMAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getHexValueNON_DECIMALTerminalRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__HexValueAssignment_2_2"


    // $ANTLR start "rule__DATE_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10185:1: rule__DATE_LITERAL__KeywordAssignment_0 : ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__DATE_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10189:1: ( ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10190:2: ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10190:2: ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10191:3: ( rule__DATE_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10192:3: ( rule__DATE_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10192:4: rule__DATE_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__DATE_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10200:1: rule__DATE_LITERAL__ValueAssignment_1 : ( ruleDATE ) ;
    public final void rule__DATE_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10204:1: ( ( ruleDATE ) )
            // InternalSTCoreParser.g:10205:2: ( ruleDATE )
            {
            // InternalSTCoreParser.g:10205:2: ( ruleDATE )
            // InternalSTCoreParser.g:10206:3: ruleDATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getValueDATEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getValueDATEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__TIME_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10215:1: rule__TIME_LITERAL__KeywordAssignment_0 : ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__TIME_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10219:1: ( ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10220:2: ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10220:2: ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10221:3: ( rule__TIME_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10222:3: ( rule__TIME_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10222:4: rule__TIME_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__TIME_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10230:1: rule__TIME_LITERAL__ValueAssignment_1 : ( RULE_TIME ) ;
    public final void rule__TIME_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10234:1: ( ( RULE_TIME ) )
            // InternalSTCoreParser.g:10235:2: ( RULE_TIME )
            {
            // InternalSTCoreParser.g:10235:2: ( RULE_TIME )
            // InternalSTCoreParser.g:10236:3: RULE_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getValueTIMETerminalRuleCall_1_0()); 
            }
            match(input,RULE_TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getValueTIMETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10245:1: rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 : ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10249:1: ( ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10250:2: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10250:2: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10251:3: ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10252:3: ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10252:4: rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10260:1: rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 : ( ruleTIME_OF_DAY ) ;
    public final void rule__TIME_OF_DAY_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10264:1: ( ( ruleTIME_OF_DAY ) )
            // InternalSTCoreParser.g:10265:2: ( ruleTIME_OF_DAY )
            {
            // InternalSTCoreParser.g:10265:2: ( ruleTIME_OF_DAY )
            // InternalSTCoreParser.g:10266:3: ruleTIME_OF_DAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueTIME_OF_DAYParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueTIME_OF_DAYParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10275:1: rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 : ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10279:1: ( ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10280:2: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10280:2: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10281:3: ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10282:3: ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10282:4: rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1"
    // InternalSTCoreParser.g:10290:1: rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 : ( ruleDATE ) ;
    public final void rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10294:1: ( ( ruleDATE ) )
            // InternalSTCoreParser.g:10295:2: ( ruleDATE )
            {
            // InternalSTCoreParser.g:10295:2: ( ruleDATE )
            // InternalSTCoreParser.g:10296:3: ruleDATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueDATEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueDATEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3"
    // InternalSTCoreParser.g:10305:1: rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 : ( ruleTIME_OF_DAY ) ;
    public final void rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10309:1: ( ( ruleTIME_OF_DAY ) )
            // InternalSTCoreParser.g:10310:2: ( ruleTIME_OF_DAY )
            {
            // InternalSTCoreParser.g:10310:2: ( ruleTIME_OF_DAY )
            // InternalSTCoreParser.g:10311:3: ruleTIME_OF_DAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueTIME_OF_DAYParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueTIME_OF_DAYParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3"


    // $ANTLR start "rule__STRING_LITERAL__KeywordAssignment_0_0"
    // InternalSTCoreParser.g:10320:1: rule__STRING_LITERAL__KeywordAssignment_0_0 : ( ( STRING ) ) ;
    public final void rule__STRING_LITERAL__KeywordAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10324:1: ( ( ( STRING ) ) )
            // InternalSTCoreParser.g:10325:2: ( ( STRING ) )
            {
            // InternalSTCoreParser.g:10325:2: ( ( STRING ) )
            // InternalSTCoreParser.g:10326:3: ( STRING )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }
            // InternalSTCoreParser.g:10327:3: ( STRING )
            // InternalSTCoreParser.g:10328:4: STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }
            match(input,STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__KeywordAssignment_0_0"


    // $ANTLR start "rule__STRING_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10339:1: rule__STRING_LITERAL__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__STRING_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10343:1: ( ( RULE_STRING ) )
            // InternalSTCoreParser.g:10344:2: ( RULE_STRING )
            {
            // InternalSTCoreParser.g:10344:2: ( RULE_STRING )
            // InternalSTCoreParser.g:10345:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__ValueAssignment_1"

    // $ANTLR start synpred100_InternalSTCoreParser
    public final void synpred100_InternalSTCoreParser_fragment() throws RecognitionException {   
        // InternalSTCoreParser.g:6487:3: ( rule__STSelectionExpression__Group_1_2__0 )
        // InternalSTCoreParser.g:6487:3: rule__STSelectionExpression__Group_1_2__0
        {
        pushFollow(FOLLOW_2);
        rule__STSelectionExpression__Group_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred100_InternalSTCoreParser

    // $ANTLR start synpred107_InternalSTCoreParser
    public final void synpred107_InternalSTCoreParser_fragment() throws RecognitionException {   
        // InternalSTCoreParser.g:7188:3: ( rule__STAtomicExpression__Group_1_4__0 )
        // InternalSTCoreParser.g:7188:3: rule__STAtomicExpression__Group_1_4__0
        {
        pushFollow(FOLLOW_2);
        rule__STAtomicExpression__Group_1_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred107_InternalSTCoreParser

    // Delegated rules

    public final boolean synpred107_InternalSTCoreParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalSTCoreParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalSTCoreParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalSTCoreParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA57 dfa57 = new DFA57(this);
    protected DFA64 dfa64 = new DFA64(this);
    static final String dfa_1s = "\47\uffff";
    static final String dfa_2s = "\1\2\46\uffff";
    static final String dfa_3s = "\1\7\1\0\45\uffff";
    static final String dfa_4s = "\1\143\1\0\45\uffff";
    static final String dfa_5s = "\2\uffff\1\2\43\uffff\1\1";
    static final String dfa_6s = "\1\uffff\1\0\45\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\54\uffff\1\2\1\uffff\6\2\4\uffff\1\2\2\uffff\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\1\16\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "6487:2: ( rule__STSelectionExpression__Group_1_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_1 = input.LA(1);

                         
                        int index57_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSTCoreParser()) ) {s = 38;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index57_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\42\uffff";
    static final String dfa_9s = "\1\2\41\uffff";
    static final String dfa_10s = "\1\7\1\0\40\uffff";
    static final String dfa_11s = "\1\143\1\0\40\uffff";
    static final String dfa_12s = "\2\uffff\1\2\36\uffff\1\1";
    static final String dfa_13s = "\1\uffff\1\0\40\uffff}>";
    static final String[] dfa_14s = {
            "\1\2\54\uffff\1\2\6\uffff\1\2\4\uffff\1\2\2\uffff\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\1\16\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "7188:2: ( rule__STAtomicExpression__Group_1_4__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA64_1 = input.LA(1);

                         
                        int index64_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSTCoreParser()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index64_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 64, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x2002A00006001002L,0x0000040040004000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000400L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000080000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000440000040L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0xD02C4FDF79EC8070L,0x00000CD005221002L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000802000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0xD02C4FDF79EC8070L,0x00000CD405221002L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x2002A00006001000L,0x0000040000004000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x2002A00006001000L,0x0000040040004000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x2003A02006101000L,0x0000040040004000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0001000000002000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0xD02C4FDF79EC8072L,0x00000CD005221002L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000022000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002800L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x2002A00006011000L,0x0000040040004000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x2002A00006001200L,0x0000040040004000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x2002B00006001000L,0x0000040040004000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0800000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0800000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000100L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000100L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000280000280L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0000000280000280L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000005000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000002L,0x0000000005000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000010800001L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000010800001L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000040000200000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000408000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x0000000408000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x07C0000000000000L,0x0000000008200000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0xD02C4FDF79EC8070L,0x00000CD005621002L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000100000000L,0x0000001000000002L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x00044B5239480000L,0x000000C005000002L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x4000000800200000L,0x0000000000001000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x8000040000800000L,0x0000000000020000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0020008000000040L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x1008000000000030L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0xD02C4FDF79EC8070L,0x000008D005021002L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000008005000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000028000000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});

}