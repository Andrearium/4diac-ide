package org.eclipse.fordiac.ide.structuredtextcore.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.fordiac.ide.structuredtextcore.services.STCoreGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSTCoreParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "LDATE_AND_TIME", "DATE_AND_TIME", "TIME_OF_DAY", "END_REPEAT", "VAR_OUTPUT", "END_WHILE", "VAR_INPUT", "CONSTANT", "CONTINUE", "END_CASE", "VAR_TEMP", "WSTRING", "END_FOR", "END_VAR", "STRING", "DWORD", "END_IF", "LDATE", "LREAL", "LTIME", "LWORD", "REPEAT", "RETURN", "UDINT", "ULINT", "USINT", "WCHAR", "ARRAY", "BOOL", "BYTE", "CHAR", "DATE", "DINT", "ELSIF", "LINT", "LTOD", "REAL", "SINT", "TIME", "UINT", "UNTIL", "WHILE", "WORD", "CASE", "ELSE", "EXIT", "INT", "LDT", "THEN", "TOD", "B", "D_1", "L", "W", "X", "AND", "DT", "FOR", "LD", "LT", "MOD", "NOT", "VAR", "XOR", "AsteriskAsterisk", "FullStopFullStop", "ColonEqualsSign", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "GreaterThanSignEqualsSign", "AT", "BY", "D", "DO", "IF", "OF", "OR", "T", "TO", "NumberSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "LeftSquareBracket", "RightSquareBracket", "RULE_BOOL_VALUES", "RULE_HEX_DIGIT", "RULE_NON_DECIMAL", "RULE_INT", "RULE_TIME", "RULE_EXT_INT", "RULE_ID", "RULE_STRING", "RULE_WSTRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LWORD=24;
    public static final int LessThanSignGreaterThanSign=72;
    public static final int VAR=66;
    public static final int END_IF=20;
    public static final int ULINT=28;
    public static final int END_CASE=13;
    public static final int LessThanSign=95;
    public static final int LeftParenthesis=85;
    public static final int BYTE=33;
    public static final int ELSE=48;
    public static final int RULE_TIME=104;
    public static final int IF=78;
    public static final int LINT=38;
    public static final int GreaterThanSign=97;
    public static final int WORD=46;
    public static final int DATE_AND_TIME=5;
    public static final int RULE_ID=106;
    public static final int TOD=53;
    public static final int DINT=36;
    public static final int UDINT=27;
    public static final int CASE=47;
    public static final int GreaterThanSignEqualsSign=73;
    public static final int AT=74;
    public static final int PlusSign=88;
    public static final int RULE_INT=103;
    public static final int END_FOR=16;
    public static final int RULE_ML_COMMENT=109;
    public static final int THEN=52;
    public static final int XOR=67;
    public static final int LeftSquareBracket=98;
    public static final int EXIT=49;
    public static final int TIME_OF_DAY=6;
    public static final int B=54;
    public static final int LDATE_AND_TIME=4;
    public static final int REPEAT=25;
    public static final int D=76;
    public static final int CHAR=34;
    public static final int L=56;
    public static final int LTIME=23;
    public static final int Comma=89;
    public static final int HyphenMinus=90;
    public static final int T=81;
    public static final int W=57;
    public static final int BY=75;
    public static final int X=58;
    public static final int ELSIF=37;
    public static final int END_REPEAT=7;
    public static final int LessThanSignEqualsSign=71;
    public static final int Solidus=92;
    public static final int VAR_INPUT=10;
    public static final int FullStop=91;
    public static final int VAR_TEMP=14;
    public static final int CONSTANT=11;
    public static final int CONTINUE=12;
    public static final int Semicolon=94;
    public static final int LD=62;
    public static final int VAR_OUTPUT=8;
    public static final int STRING=18;
    public static final int RULE_HEX_DIGIT=101;
    public static final int TO=82;
    public static final int RULE_BOOL_VALUES=100;
    public static final int UINT=43;
    public static final int LTOD=39;
    public static final int ARRAY=31;
    public static final int LT=63;
    public static final int DO=77;
    public static final int WSTRING=15;
    public static final int DT=60;
    public static final int END_VAR=17;
    public static final int FullStopFullStop=69;
    public static final int Ampersand=84;
    public static final int RightSquareBracket=99;
    public static final int USINT=29;
    public static final int DWORD=19;
    public static final int FOR=61;
    public static final int RightParenthesis=86;
    public static final int ColonEqualsSign=70;
    public static final int RULE_WSTRING=108;
    public static final int END_WHILE=9;
    public static final int DATE=35;
    public static final int NOT=65;
    public static final int LDATE=21;
    public static final int AND=59;
    public static final int NumberSign=83;
    public static final int REAL=40;
    public static final int AsteriskAsterisk=68;
    public static final int SINT=41;
    public static final int LREAL=22;
    public static final int WCHAR=30;
    public static final int RULE_STRING=107;
    public static final int INT=50;
    public static final int RULE_SL_COMMENT=110;
    public static final int RETURN=26;
    public static final int EqualsSign=96;
    public static final int OF=79;
    public static final int Colon=93;
    public static final int EOF=-1;
    public static final int LDT=51;
    public static final int Asterisk=87;
    public static final int MOD=64;
    public static final int OR=80;
    public static final int RULE_WS=111;
    public static final int RULE_EXT_INT=105;
    public static final int TIME=42;
    public static final int RULE_ANY_OTHER=112;
    public static final int UNTIL=44;
    public static final int BOOL=32;
    public static final int D_1=55;
    public static final int WHILE=45;
    public static final int RULE_NON_DECIMAL=102;

    // delegates
    // delegators


        public InternalSTCoreParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSTCoreParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSTCoreParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSTCoreParser.g"; }


    	private STCoreGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("NumberSign", "'#'");
    		tokenNameToValue.put("Ampersand", "'&'");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("AsteriskAsterisk", "'**'");
    		tokenNameToValue.put("FullStopFullStop", "'..'");
    		tokenNameToValue.put("ColonEqualsSign", "':='");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AT", "'AT'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("D", "'D#'");
    		tokenNameToValue.put("DO", "'DO'");
    		tokenNameToValue.put("IF", "'IF'");
    		tokenNameToValue.put("OF", "'OF'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("T", "'T#'");
    		tokenNameToValue.put("TO", "'TO'");
    		tokenNameToValue.put("B", "'.%B'");
    		tokenNameToValue.put("D_1", "'.%D'");
    		tokenNameToValue.put("L", "'.%L'");
    		tokenNameToValue.put("W", "'.%W'");
    		tokenNameToValue.put("X", "'.%X'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("DT", "'DT#'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("LD", "'LD#'");
    		tokenNameToValue.put("LT", "'LT#'");
    		tokenNameToValue.put("MOD", "'MOD'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("VAR", "'VAR'");
    		tokenNameToValue.put("XOR", "'XOR'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("EXIT", "'EXIT'");
    		tokenNameToValue.put("INT", "'INT#'");
    		tokenNameToValue.put("LDT", "'LDT#'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TOD", "'TOD#'");
    		tokenNameToValue.put("ARRAY", "'ARRAY'");
    		tokenNameToValue.put("BOOL", "'BOOL#'");
    		tokenNameToValue.put("BYTE", "'BYTE#'");
    		tokenNameToValue.put("CHAR", "'CHAR#'");
    		tokenNameToValue.put("DATE", "'DATE#'");
    		tokenNameToValue.put("DINT", "'DINT#'");
    		tokenNameToValue.put("ELSIF", "'ELSIF'");
    		tokenNameToValue.put("LINT", "'LINT#'");
    		tokenNameToValue.put("LTOD", "'LTOD#'");
    		tokenNameToValue.put("REAL", "'REAL#'");
    		tokenNameToValue.put("SINT", "'SINT#'");
    		tokenNameToValue.put("TIME", "'TIME#'");
    		tokenNameToValue.put("UINT", "'UINT#'");
    		tokenNameToValue.put("UNTIL", "'UNTIL'");
    		tokenNameToValue.put("WHILE", "'WHILE'");
    		tokenNameToValue.put("WORD", "'WORD#'");
    		tokenNameToValue.put("DWORD", "'DWORD#'");
    		tokenNameToValue.put("END_IF", "'END_IF'");
    		tokenNameToValue.put("LDATE", "'LDATE#'");
    		tokenNameToValue.put("LREAL", "'LREAL#'");
    		tokenNameToValue.put("LTIME", "'LTIME#'");
    		tokenNameToValue.put("LWORD", "'LWORD#'");
    		tokenNameToValue.put("REPEAT", "'REPEAT'");
    		tokenNameToValue.put("RETURN", "'RETURN'");
    		tokenNameToValue.put("UDINT", "'UDINT#'");
    		tokenNameToValue.put("ULINT", "'ULINT#'");
    		tokenNameToValue.put("USINT", "'USINT#'");
    		tokenNameToValue.put("WCHAR", "'WCHAR#'");
    		tokenNameToValue.put("END_FOR", "'END_FOR'");
    		tokenNameToValue.put("END_VAR", "'END_VAR'");
    		tokenNameToValue.put("STRING", "'STRING#'");
    		tokenNameToValue.put("CONSTANT", "'CONSTANT'");
    		tokenNameToValue.put("CONTINUE", "'CONTINUE'");
    		tokenNameToValue.put("END_CASE", "'END_CASE'");
    		tokenNameToValue.put("VAR_TEMP", "'VAR_TEMP'");
    		tokenNameToValue.put("WSTRING", "'WSTRING#'");
    		tokenNameToValue.put("END_WHILE", "'END_WHILE'");
    		tokenNameToValue.put("VAR_INPUT", "'VAR_INPUT'");
    		tokenNameToValue.put("END_REPEAT", "'END_REPEAT'");
    		tokenNameToValue.put("VAR_OUTPUT", "'VAR_OUTPUT'");
    		tokenNameToValue.put("TIME_OF_DAY", "'TIME_OF_DAY#'");
    		tokenNameToValue.put("DATE_AND_TIME", "'DATE_AND_TIME#'");
    		tokenNameToValue.put("LDATE_AND_TIME", "'LDATE_AND_TIME#'");
    	}

    	public void setGrammarAccess(STCoreGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleCode"
    // InternalSTCoreParser.g:152:1: entryRuleCode : ruleCode EOF ;
    public final void entryRuleCode() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:153:1: ( ruleCode EOF )
            // InternalSTCoreParser.g:154:1: ruleCode EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCodeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCode();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCodeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCode"


    // $ANTLR start "ruleCode"
    // InternalSTCoreParser.g:161:1: ruleCode : ( ( rule__Code__StatementsAssignment )* ) ;
    public final void ruleCode() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:165:2: ( ( ( rule__Code__StatementsAssignment )* ) )
            // InternalSTCoreParser.g:166:2: ( ( rule__Code__StatementsAssignment )* )
            {
            // InternalSTCoreParser.g:166:2: ( ( rule__Code__StatementsAssignment )* )
            // InternalSTCoreParser.g:167:3: ( rule__Code__StatementsAssignment )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCodeAccess().getStatementsAssignment()); 
            }
            // InternalSTCoreParser.g:168:3: ( rule__Code__StatementsAssignment )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==CONTINUE||(LA1_0>=REPEAT && LA1_0<=RETURN)||LA1_0==WHILE||LA1_0==CASE||LA1_0==EXIT||LA1_0==FOR||LA1_0==IF||LA1_0==Semicolon||LA1_0==RULE_ID) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSTCoreParser.g:168:4: rule__Code__StatementsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Code__StatementsAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCodeAccess().getStatementsAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCode"


    // $ANTLR start "entryRuleVarDeclaration"
    // InternalSTCoreParser.g:177:1: entryRuleVarDeclaration : ruleVarDeclaration EOF ;
    public final void entryRuleVarDeclaration() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:178:1: ( ruleVarDeclaration EOF )
            // InternalSTCoreParser.g:179:1: ruleVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclaration"


    // $ANTLR start "ruleVarDeclaration"
    // InternalSTCoreParser.g:186:1: ruleVarDeclaration : ( ( rule__VarDeclaration__Group__0 ) ) ;
    public final void ruleVarDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:190:2: ( ( ( rule__VarDeclaration__Group__0 ) ) )
            // InternalSTCoreParser.g:191:2: ( ( rule__VarDeclaration__Group__0 ) )
            {
            // InternalSTCoreParser.g:191:2: ( ( rule__VarDeclaration__Group__0 ) )
            // InternalSTCoreParser.g:192:3: ( rule__VarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:193:3: ( rule__VarDeclaration__Group__0 )
            // InternalSTCoreParser.g:193:4: rule__VarDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclaration"


    // $ANTLR start "entryRuleInitializerExpression"
    // InternalSTCoreParser.g:202:1: entryRuleInitializerExpression : ruleInitializerExpression EOF ;
    public final void entryRuleInitializerExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:203:1: ( ruleInitializerExpression EOF )
            // InternalSTCoreParser.g:204:1: ruleInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializerExpression"


    // $ANTLR start "ruleInitializerExpression"
    // InternalSTCoreParser.g:211:1: ruleInitializerExpression : ( ( rule__InitializerExpression__Alternatives ) ) ;
    public final void ruleInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:215:2: ( ( ( rule__InitializerExpression__Alternatives ) ) )
            // InternalSTCoreParser.g:216:2: ( ( rule__InitializerExpression__Alternatives ) )
            {
            // InternalSTCoreParser.g:216:2: ( ( rule__InitializerExpression__Alternatives ) )
            // InternalSTCoreParser.g:217:3: ( rule__InitializerExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:218:3: ( rule__InitializerExpression__Alternatives )
            // InternalSTCoreParser.g:218:4: rule__InitializerExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__InitializerExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializerExpression"


    // $ANTLR start "entryRuleArrayInitializerExpression"
    // InternalSTCoreParser.g:227:1: entryRuleArrayInitializerExpression : ruleArrayInitializerExpression EOF ;
    public final void entryRuleArrayInitializerExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:228:1: ( ruleArrayInitializerExpression EOF )
            // InternalSTCoreParser.g:229:1: ruleArrayInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitializerExpression"


    // $ANTLR start "ruleArrayInitializerExpression"
    // InternalSTCoreParser.g:236:1: ruleArrayInitializerExpression : ( ( rule__ArrayInitializerExpression__Group__0 ) ) ;
    public final void ruleArrayInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:240:2: ( ( ( rule__ArrayInitializerExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:241:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:241:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            // InternalSTCoreParser.g:242:3: ( rule__ArrayInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:243:3: ( rule__ArrayInitializerExpression__Group__0 )
            // InternalSTCoreParser.g:243:4: rule__ArrayInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitializerExpression"


    // $ANTLR start "entryRuleArrayInitElement"
    // InternalSTCoreParser.g:252:1: entryRuleArrayInitElement : ruleArrayInitElement EOF ;
    public final void entryRuleArrayInitElement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:253:1: ( ruleArrayInitElement EOF )
            // InternalSTCoreParser.g:254:1: ruleArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitElement"


    // $ANTLR start "ruleArrayInitElement"
    // InternalSTCoreParser.g:261:1: ruleArrayInitElement : ( ( rule__ArrayInitElement__Group__0 ) ) ;
    public final void ruleArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:265:2: ( ( ( rule__ArrayInitElement__Group__0 ) ) )
            // InternalSTCoreParser.g:266:2: ( ( rule__ArrayInitElement__Group__0 ) )
            {
            // InternalSTCoreParser.g:266:2: ( ( rule__ArrayInitElement__Group__0 ) )
            // InternalSTCoreParser.g:267:3: ( rule__ArrayInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:268:3: ( rule__ArrayInitElement__Group__0 )
            // InternalSTCoreParser.g:268:4: rule__ArrayInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitElement"


    // $ANTLR start "entryRuleSTStatement"
    // InternalSTCoreParser.g:277:1: entryRuleSTStatement : ruleSTStatement EOF ;
    public final void entryRuleSTStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:278:1: ( ruleSTStatement EOF )
            // InternalSTCoreParser.g:279:1: ruleSTStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStatement"


    // $ANTLR start "ruleSTStatement"
    // InternalSTCoreParser.g:286:1: ruleSTStatement : ( ( rule__STStatement__Alternatives ) ) ;
    public final void ruleSTStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:290:2: ( ( ( rule__STStatement__Alternatives ) ) )
            // InternalSTCoreParser.g:291:2: ( ( rule__STStatement__Alternatives ) )
            {
            // InternalSTCoreParser.g:291:2: ( ( rule__STStatement__Alternatives ) )
            // InternalSTCoreParser.g:292:3: ( rule__STStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:293:3: ( rule__STStatement__Alternatives )
            // InternalSTCoreParser.g:293:4: rule__STStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStatement"


    // $ANTLR start "entryRuleSTAssignmentStatement"
    // InternalSTCoreParser.g:302:1: entryRuleSTAssignmentStatement : ruleSTAssignmentStatement EOF ;
    public final void entryRuleSTAssignmentStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:303:1: ( ruleSTAssignmentStatement EOF )
            // InternalSTCoreParser.g:304:1: ruleSTAssignmentStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAssignmentStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAssignmentStatement"


    // $ANTLR start "ruleSTAssignmentStatement"
    // InternalSTCoreParser.g:311:1: ruleSTAssignmentStatement : ( ( rule__STAssignmentStatement__Group__0 ) ) ;
    public final void ruleSTAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:315:2: ( ( ( rule__STAssignmentStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:316:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:316:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            // InternalSTCoreParser.g:317:3: ( rule__STAssignmentStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:318:3: ( rule__STAssignmentStatement__Group__0 )
            // InternalSTCoreParser.g:318:4: rule__STAssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAssignmentStatement"


    // $ANTLR start "entryRuleSTBranchStatement"
    // InternalSTCoreParser.g:327:1: entryRuleSTBranchStatement : ruleSTBranchStatement EOF ;
    public final void entryRuleSTBranchStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:328:1: ( ruleSTBranchStatement EOF )
            // InternalSTCoreParser.g:329:1: ruleSTBranchStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBranchStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTBranchStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBranchStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTBranchStatement"


    // $ANTLR start "ruleSTBranchStatement"
    // InternalSTCoreParser.g:336:1: ruleSTBranchStatement : ( ( rule__STBranchStatement__Alternatives ) ) ;
    public final void ruleSTBranchStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:340:2: ( ( ( rule__STBranchStatement__Alternatives ) ) )
            // InternalSTCoreParser.g:341:2: ( ( rule__STBranchStatement__Alternatives ) )
            {
            // InternalSTCoreParser.g:341:2: ( ( rule__STBranchStatement__Alternatives ) )
            // InternalSTCoreParser.g:342:3: ( rule__STBranchStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBranchStatementAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:343:3: ( rule__STBranchStatement__Alternatives )
            // InternalSTCoreParser.g:343:4: rule__STBranchStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STBranchStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBranchStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTBranchStatement"


    // $ANTLR start "entryRuleSTIfStatment"
    // InternalSTCoreParser.g:352:1: entryRuleSTIfStatment : ruleSTIfStatment EOF ;
    public final void entryRuleSTIfStatment() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:353:1: ( ruleSTIfStatment EOF )
            // InternalSTCoreParser.g:354:1: ruleSTIfStatment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTIfStatment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTIfStatment"


    // $ANTLR start "ruleSTIfStatment"
    // InternalSTCoreParser.g:361:1: ruleSTIfStatment : ( ( rule__STIfStatment__Group__0 ) ) ;
    public final void ruleSTIfStatment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:365:2: ( ( ( rule__STIfStatment__Group__0 ) ) )
            // InternalSTCoreParser.g:366:2: ( ( rule__STIfStatment__Group__0 ) )
            {
            // InternalSTCoreParser.g:366:2: ( ( rule__STIfStatment__Group__0 ) )
            // InternalSTCoreParser.g:367:3: ( rule__STIfStatment__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:368:3: ( rule__STIfStatment__Group__0 )
            // InternalSTCoreParser.g:368:4: rule__STIfStatment__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTIfStatment"


    // $ANTLR start "entryRuleSTElseIfPart"
    // InternalSTCoreParser.g:377:1: entryRuleSTElseIfPart : ruleSTElseIfPart EOF ;
    public final void entryRuleSTElseIfPart() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:378:1: ( ruleSTElseIfPart EOF )
            // InternalSTCoreParser.g:379:1: ruleSTElseIfPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElseIfPart"


    // $ANTLR start "ruleSTElseIfPart"
    // InternalSTCoreParser.g:386:1: ruleSTElseIfPart : ( ( rule__STElseIfPart__Group__0 ) ) ;
    public final void ruleSTElseIfPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:390:2: ( ( ( rule__STElseIfPart__Group__0 ) ) )
            // InternalSTCoreParser.g:391:2: ( ( rule__STElseIfPart__Group__0 ) )
            {
            // InternalSTCoreParser.g:391:2: ( ( rule__STElseIfPart__Group__0 ) )
            // InternalSTCoreParser.g:392:3: ( rule__STElseIfPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:393:3: ( rule__STElseIfPart__Group__0 )
            // InternalSTCoreParser.g:393:4: rule__STElseIfPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElseIfPart"


    // $ANTLR start "entryRuleSTCaseStatement"
    // InternalSTCoreParser.g:402:1: entryRuleSTCaseStatement : ruleSTCaseStatement EOF ;
    public final void entryRuleSTCaseStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:403:1: ( ruleSTCaseStatement EOF )
            // InternalSTCoreParser.g:404:1: ruleSTCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseStatement"


    // $ANTLR start "ruleSTCaseStatement"
    // InternalSTCoreParser.g:411:1: ruleSTCaseStatement : ( ( rule__STCaseStatement__Group__0 ) ) ;
    public final void ruleSTCaseStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:415:2: ( ( ( rule__STCaseStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:416:2: ( ( rule__STCaseStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:416:2: ( ( rule__STCaseStatement__Group__0 ) )
            // InternalSTCoreParser.g:417:3: ( rule__STCaseStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:418:3: ( rule__STCaseStatement__Group__0 )
            // InternalSTCoreParser.g:418:4: rule__STCaseStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseStatement"


    // $ANTLR start "entryRuleSTCaseCases"
    // InternalSTCoreParser.g:427:1: entryRuleSTCaseCases : ruleSTCaseCases EOF ;
    public final void entryRuleSTCaseCases() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:428:1: ( ruleSTCaseCases EOF )
            // InternalSTCoreParser.g:429:1: ruleSTCaseCases EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseCases"


    // $ANTLR start "ruleSTCaseCases"
    // InternalSTCoreParser.g:436:1: ruleSTCaseCases : ( ( rule__STCaseCases__Group__0 ) ) ;
    public final void ruleSTCaseCases() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:440:2: ( ( ( rule__STCaseCases__Group__0 ) ) )
            // InternalSTCoreParser.g:441:2: ( ( rule__STCaseCases__Group__0 ) )
            {
            // InternalSTCoreParser.g:441:2: ( ( rule__STCaseCases__Group__0 ) )
            // InternalSTCoreParser.g:442:3: ( rule__STCaseCases__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:443:3: ( rule__STCaseCases__Group__0 )
            // InternalSTCoreParser.g:443:4: rule__STCaseCases__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseCases"


    // $ANTLR start "entryRuleSTElsePart"
    // InternalSTCoreParser.g:452:1: entryRuleSTElsePart : ruleSTElsePart EOF ;
    public final void entryRuleSTElsePart() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:453:1: ( ruleSTElsePart EOF )
            // InternalSTCoreParser.g:454:1: ruleSTElsePart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElsePart"


    // $ANTLR start "ruleSTElsePart"
    // InternalSTCoreParser.g:461:1: ruleSTElsePart : ( ( rule__STElsePart__Group__0 ) ) ;
    public final void ruleSTElsePart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:465:2: ( ( ( rule__STElsePart__Group__0 ) ) )
            // InternalSTCoreParser.g:466:2: ( ( rule__STElsePart__Group__0 ) )
            {
            // InternalSTCoreParser.g:466:2: ( ( rule__STElsePart__Group__0 ) )
            // InternalSTCoreParser.g:467:3: ( rule__STElsePart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:468:3: ( rule__STElsePart__Group__0 )
            // InternalSTCoreParser.g:468:4: rule__STElsePart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElsePart"


    // $ANTLR start "entryRuleSTLoopStatement"
    // InternalSTCoreParser.g:477:1: entryRuleSTLoopStatement : ruleSTLoopStatement EOF ;
    public final void entryRuleSTLoopStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:478:1: ( ruleSTLoopStatement EOF )
            // InternalSTCoreParser.g:479:1: ruleSTLoopStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLoopStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLoopStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLoopStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLoopStatement"


    // $ANTLR start "ruleSTLoopStatement"
    // InternalSTCoreParser.g:486:1: ruleSTLoopStatement : ( ( rule__STLoopStatement__Alternatives ) ) ;
    public final void ruleSTLoopStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:490:2: ( ( ( rule__STLoopStatement__Alternatives ) ) )
            // InternalSTCoreParser.g:491:2: ( ( rule__STLoopStatement__Alternatives ) )
            {
            // InternalSTCoreParser.g:491:2: ( ( rule__STLoopStatement__Alternatives ) )
            // InternalSTCoreParser.g:492:3: ( rule__STLoopStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLoopStatementAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:493:3: ( rule__STLoopStatement__Alternatives )
            // InternalSTCoreParser.g:493:4: rule__STLoopStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLoopStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLoopStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLoopStatement"


    // $ANTLR start "entryRuleSTForStatement"
    // InternalSTCoreParser.g:502:1: entryRuleSTForStatement : ruleSTForStatement EOF ;
    public final void entryRuleSTForStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:503:1: ( ruleSTForStatement EOF )
            // InternalSTCoreParser.g:504:1: ruleSTForStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTForStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTForStatement"


    // $ANTLR start "ruleSTForStatement"
    // InternalSTCoreParser.g:511:1: ruleSTForStatement : ( ( rule__STForStatement__Group__0 ) ) ;
    public final void ruleSTForStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:515:2: ( ( ( rule__STForStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:516:2: ( ( rule__STForStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:516:2: ( ( rule__STForStatement__Group__0 ) )
            // InternalSTCoreParser.g:517:3: ( rule__STForStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:518:3: ( rule__STForStatement__Group__0 )
            // InternalSTCoreParser.g:518:4: rule__STForStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTForStatement"


    // $ANTLR start "entryRuleSTWhileStatement"
    // InternalSTCoreParser.g:527:1: entryRuleSTWhileStatement : ruleSTWhileStatement EOF ;
    public final void entryRuleSTWhileStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:528:1: ( ruleSTWhileStatement EOF )
            // InternalSTCoreParser.g:529:1: ruleSTWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTWhileStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTWhileStatement"


    // $ANTLR start "ruleSTWhileStatement"
    // InternalSTCoreParser.g:536:1: ruleSTWhileStatement : ( ( rule__STWhileStatement__Group__0 ) ) ;
    public final void ruleSTWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:540:2: ( ( ( rule__STWhileStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:541:2: ( ( rule__STWhileStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:541:2: ( ( rule__STWhileStatement__Group__0 ) )
            // InternalSTCoreParser.g:542:3: ( rule__STWhileStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:543:3: ( rule__STWhileStatement__Group__0 )
            // InternalSTCoreParser.g:543:4: rule__STWhileStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTWhileStatement"


    // $ANTLR start "entryRuleSTRepeatStatement"
    // InternalSTCoreParser.g:552:1: entryRuleSTRepeatStatement : ruleSTRepeatStatement EOF ;
    public final void entryRuleSTRepeatStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:553:1: ( ruleSTRepeatStatement EOF )
            // InternalSTCoreParser.g:554:1: ruleSTRepeatStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRepeatStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRepeatStatement"


    // $ANTLR start "ruleSTRepeatStatement"
    // InternalSTCoreParser.g:561:1: ruleSTRepeatStatement : ( ( rule__STRepeatStatement__Group__0 ) ) ;
    public final void ruleSTRepeatStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:565:2: ( ( ( rule__STRepeatStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:566:2: ( ( rule__STRepeatStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:566:2: ( ( rule__STRepeatStatement__Group__0 ) )
            // InternalSTCoreParser.g:567:3: ( rule__STRepeatStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:568:3: ( rule__STRepeatStatement__Group__0 )
            // InternalSTCoreParser.g:568:4: rule__STRepeatStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRepeatStatement"


    // $ANTLR start "entryRuleSTExpression"
    // InternalSTCoreParser.g:577:1: entryRuleSTExpression : ruleSTExpression EOF ;
    public final void entryRuleSTExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:578:1: ( ruleSTExpression EOF )
            // InternalSTCoreParser.g:579:1: ruleSTExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpression"


    // $ANTLR start "ruleSTExpression"
    // InternalSTCoreParser.g:586:1: ruleSTExpression : ( ruleSTSubrangeExpression ) ;
    public final void ruleSTExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:590:2: ( ( ruleSTSubrangeExpression ) )
            // InternalSTCoreParser.g:591:2: ( ruleSTSubrangeExpression )
            {
            // InternalSTCoreParser.g:591:2: ( ruleSTSubrangeExpression )
            // InternalSTCoreParser.g:592:3: ruleSTSubrangeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpression"


    // $ANTLR start "entryRuleSTSubrangeExpression"
    // InternalSTCoreParser.g:602:1: entryRuleSTSubrangeExpression : ruleSTSubrangeExpression EOF ;
    public final void entryRuleSTSubrangeExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:603:1: ( ruleSTSubrangeExpression EOF )
            // InternalSTCoreParser.g:604:1: ruleSTSubrangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSubrangeExpression"


    // $ANTLR start "ruleSTSubrangeExpression"
    // InternalSTCoreParser.g:611:1: ruleSTSubrangeExpression : ( ( rule__STSubrangeExpression__Group__0 ) ) ;
    public final void ruleSTSubrangeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:615:2: ( ( ( rule__STSubrangeExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:616:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:616:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            // InternalSTCoreParser.g:617:3: ( rule__STSubrangeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:618:3: ( rule__STSubrangeExpression__Group__0 )
            // InternalSTCoreParser.g:618:4: rule__STSubrangeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSubrangeExpression"


    // $ANTLR start "entryRuleSTOrExpression"
    // InternalSTCoreParser.g:627:1: entryRuleSTOrExpression : ruleSTOrExpression EOF ;
    public final void entryRuleSTOrExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:628:1: ( ruleSTOrExpression EOF )
            // InternalSTCoreParser.g:629:1: ruleSTOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTOrExpression"


    // $ANTLR start "ruleSTOrExpression"
    // InternalSTCoreParser.g:636:1: ruleSTOrExpression : ( ( rule__STOrExpression__Group__0 ) ) ;
    public final void ruleSTOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:640:2: ( ( ( rule__STOrExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:641:2: ( ( rule__STOrExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:641:2: ( ( rule__STOrExpression__Group__0 ) )
            // InternalSTCoreParser.g:642:3: ( rule__STOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:643:3: ( rule__STOrExpression__Group__0 )
            // InternalSTCoreParser.g:643:4: rule__STOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTOrExpression"


    // $ANTLR start "entryRuleSTXorExpression"
    // InternalSTCoreParser.g:652:1: entryRuleSTXorExpression : ruleSTXorExpression EOF ;
    public final void entryRuleSTXorExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:653:1: ( ruleSTXorExpression EOF )
            // InternalSTCoreParser.g:654:1: ruleSTXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTXorExpression"


    // $ANTLR start "ruleSTXorExpression"
    // InternalSTCoreParser.g:661:1: ruleSTXorExpression : ( ( rule__STXorExpression__Group__0 ) ) ;
    public final void ruleSTXorExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:665:2: ( ( ( rule__STXorExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:666:2: ( ( rule__STXorExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:666:2: ( ( rule__STXorExpression__Group__0 ) )
            // InternalSTCoreParser.g:667:3: ( rule__STXorExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:668:3: ( rule__STXorExpression__Group__0 )
            // InternalSTCoreParser.g:668:4: rule__STXorExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTXorExpression"


    // $ANTLR start "entryRuleSTAndExpression"
    // InternalSTCoreParser.g:677:1: entryRuleSTAndExpression : ruleSTAndExpression EOF ;
    public final void entryRuleSTAndExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:678:1: ( ruleSTAndExpression EOF )
            // InternalSTCoreParser.g:679:1: ruleSTAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAndExpression"


    // $ANTLR start "ruleSTAndExpression"
    // InternalSTCoreParser.g:686:1: ruleSTAndExpression : ( ( rule__STAndExpression__Group__0 ) ) ;
    public final void ruleSTAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:690:2: ( ( ( rule__STAndExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:691:2: ( ( rule__STAndExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:691:2: ( ( rule__STAndExpression__Group__0 ) )
            // InternalSTCoreParser.g:692:3: ( rule__STAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:693:3: ( rule__STAndExpression__Group__0 )
            // InternalSTCoreParser.g:693:4: rule__STAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAndExpression"


    // $ANTLR start "entryRuleSTEqualityExpression"
    // InternalSTCoreParser.g:702:1: entryRuleSTEqualityExpression : ruleSTEqualityExpression EOF ;
    public final void entryRuleSTEqualityExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:703:1: ( ruleSTEqualityExpression EOF )
            // InternalSTCoreParser.g:704:1: ruleSTEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTEqualityExpression"


    // $ANTLR start "ruleSTEqualityExpression"
    // InternalSTCoreParser.g:711:1: ruleSTEqualityExpression : ( ( rule__STEqualityExpression__Group__0 ) ) ;
    public final void ruleSTEqualityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:715:2: ( ( ( rule__STEqualityExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:716:2: ( ( rule__STEqualityExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:716:2: ( ( rule__STEqualityExpression__Group__0 ) )
            // InternalSTCoreParser.g:717:3: ( rule__STEqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:718:3: ( rule__STEqualityExpression__Group__0 )
            // InternalSTCoreParser.g:718:4: rule__STEqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTEqualityExpression"


    // $ANTLR start "entryRuleSTComparisonExpression"
    // InternalSTCoreParser.g:727:1: entryRuleSTComparisonExpression : ruleSTComparisonExpression EOF ;
    public final void entryRuleSTComparisonExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:728:1: ( ruleSTComparisonExpression EOF )
            // InternalSTCoreParser.g:729:1: ruleSTComparisonExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTComparisonExpression"


    // $ANTLR start "ruleSTComparisonExpression"
    // InternalSTCoreParser.g:736:1: ruleSTComparisonExpression : ( ( rule__STComparisonExpression__Group__0 ) ) ;
    public final void ruleSTComparisonExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:740:2: ( ( ( rule__STComparisonExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:741:2: ( ( rule__STComparisonExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:741:2: ( ( rule__STComparisonExpression__Group__0 ) )
            // InternalSTCoreParser.g:742:3: ( rule__STComparisonExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:743:3: ( rule__STComparisonExpression__Group__0 )
            // InternalSTCoreParser.g:743:4: rule__STComparisonExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTComparisonExpression"


    // $ANTLR start "entryRuleSTAddSubExpression"
    // InternalSTCoreParser.g:752:1: entryRuleSTAddSubExpression : ruleSTAddSubExpression EOF ;
    public final void entryRuleSTAddSubExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:753:1: ( ruleSTAddSubExpression EOF )
            // InternalSTCoreParser.g:754:1: ruleSTAddSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAddSubExpression"


    // $ANTLR start "ruleSTAddSubExpression"
    // InternalSTCoreParser.g:761:1: ruleSTAddSubExpression : ( ( rule__STAddSubExpression__Group__0 ) ) ;
    public final void ruleSTAddSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:765:2: ( ( ( rule__STAddSubExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:766:2: ( ( rule__STAddSubExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:766:2: ( ( rule__STAddSubExpression__Group__0 ) )
            // InternalSTCoreParser.g:767:3: ( rule__STAddSubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:768:3: ( rule__STAddSubExpression__Group__0 )
            // InternalSTCoreParser.g:768:4: rule__STAddSubExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAddSubExpression"


    // $ANTLR start "entryRuleSTMulDivModExpression"
    // InternalSTCoreParser.g:777:1: entryRuleSTMulDivModExpression : ruleSTMulDivModExpression EOF ;
    public final void entryRuleSTMulDivModExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:778:1: ( ruleSTMulDivModExpression EOF )
            // InternalSTCoreParser.g:779:1: ruleSTMulDivModExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMulDivModExpression"


    // $ANTLR start "ruleSTMulDivModExpression"
    // InternalSTCoreParser.g:786:1: ruleSTMulDivModExpression : ( ( rule__STMulDivModExpression__Group__0 ) ) ;
    public final void ruleSTMulDivModExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:790:2: ( ( ( rule__STMulDivModExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:791:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:791:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            // InternalSTCoreParser.g:792:3: ( rule__STMulDivModExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:793:3: ( rule__STMulDivModExpression__Group__0 )
            // InternalSTCoreParser.g:793:4: rule__STMulDivModExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMulDivModExpression"


    // $ANTLR start "entryRuleSTPowerExpression"
    // InternalSTCoreParser.g:802:1: entryRuleSTPowerExpression : ruleSTPowerExpression EOF ;
    public final void entryRuleSTPowerExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:803:1: ( ruleSTPowerExpression EOF )
            // InternalSTCoreParser.g:804:1: ruleSTPowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPowerExpression"


    // $ANTLR start "ruleSTPowerExpression"
    // InternalSTCoreParser.g:811:1: ruleSTPowerExpression : ( ( rule__STPowerExpression__Group__0 ) ) ;
    public final void ruleSTPowerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:815:2: ( ( ( rule__STPowerExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:816:2: ( ( rule__STPowerExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:816:2: ( ( rule__STPowerExpression__Group__0 ) )
            // InternalSTCoreParser.g:817:3: ( rule__STPowerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:818:3: ( rule__STPowerExpression__Group__0 )
            // InternalSTCoreParser.g:818:4: rule__STPowerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPowerExpression"


    // $ANTLR start "entryRuleSTSignumExpression"
    // InternalSTCoreParser.g:827:1: entryRuleSTSignumExpression : ruleSTSignumExpression EOF ;
    public final void entryRuleSTSignumExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:828:1: ( ruleSTSignumExpression EOF )
            // InternalSTCoreParser.g:829:1: ruleSTSignumExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSignumExpression"


    // $ANTLR start "ruleSTSignumExpression"
    // InternalSTCoreParser.g:836:1: ruleSTSignumExpression : ( ( rule__STSignumExpression__Alternatives ) ) ;
    public final void ruleSTSignumExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:840:2: ( ( ( rule__STSignumExpression__Alternatives ) ) )
            // InternalSTCoreParser.g:841:2: ( ( rule__STSignumExpression__Alternatives ) )
            {
            // InternalSTCoreParser.g:841:2: ( ( rule__STSignumExpression__Alternatives ) )
            // InternalSTCoreParser.g:842:3: ( rule__STSignumExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:843:3: ( rule__STSignumExpression__Alternatives )
            // InternalSTCoreParser.g:843:4: rule__STSignumExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSignumExpression"


    // $ANTLR start "entryRuleSTSelectionExpression"
    // InternalSTCoreParser.g:852:1: entryRuleSTSelectionExpression : ruleSTSelectionExpression EOF ;
    public final void entryRuleSTSelectionExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:853:1: ( ruleSTSelectionExpression EOF )
            // InternalSTCoreParser.g:854:1: ruleSTSelectionExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSelectionExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSelectionExpression"


    // $ANTLR start "ruleSTSelectionExpression"
    // InternalSTCoreParser.g:861:1: ruleSTSelectionExpression : ( ( rule__STSelectionExpression__Group__0 ) ) ;
    public final void ruleSTSelectionExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:865:2: ( ( ( rule__STSelectionExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:866:2: ( ( rule__STSelectionExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:866:2: ( ( rule__STSelectionExpression__Group__0 ) )
            // InternalSTCoreParser.g:867:3: ( rule__STSelectionExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:868:3: ( rule__STSelectionExpression__Group__0 )
            // InternalSTCoreParser.g:868:4: rule__STSelectionExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSelectionExpression"


    // $ANTLR start "entryRuleMultibitPartialAccess"
    // InternalSTCoreParser.g:877:1: entryRuleMultibitPartialAccess : ruleMultibitPartialAccess EOF ;
    public final void entryRuleMultibitPartialAccess() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:878:1: ( ruleMultibitPartialAccess EOF )
            // InternalSTCoreParser.g:879:1: ruleMultibitPartialAccess EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultibitPartialAccess"


    // $ANTLR start "ruleMultibitPartialAccess"
    // InternalSTCoreParser.g:886:1: ruleMultibitPartialAccess : ( ( rule__MultibitPartialAccess__Group__0 ) ) ;
    public final void ruleMultibitPartialAccess() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:890:2: ( ( ( rule__MultibitPartialAccess__Group__0 ) ) )
            // InternalSTCoreParser.g:891:2: ( ( rule__MultibitPartialAccess__Group__0 ) )
            {
            // InternalSTCoreParser.g:891:2: ( ( rule__MultibitPartialAccess__Group__0 ) )
            // InternalSTCoreParser.g:892:3: ( rule__MultibitPartialAccess__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:893:3: ( rule__MultibitPartialAccess__Group__0 )
            // InternalSTCoreParser.g:893:4: rule__MultibitPartialAccess__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultibitPartialAccess"


    // $ANTLR start "entryRuleSTAtomicExpression"
    // InternalSTCoreParser.g:902:1: entryRuleSTAtomicExpression : ruleSTAtomicExpression EOF ;
    public final void entryRuleSTAtomicExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:903:1: ( ruleSTAtomicExpression EOF )
            // InternalSTCoreParser.g:904:1: ruleSTAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAtomicExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAtomicExpression"


    // $ANTLR start "ruleSTAtomicExpression"
    // InternalSTCoreParser.g:911:1: ruleSTAtomicExpression : ( ( rule__STAtomicExpression__Alternatives ) ) ;
    public final void ruleSTAtomicExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:915:2: ( ( ( rule__STAtomicExpression__Alternatives ) ) )
            // InternalSTCoreParser.g:916:2: ( ( rule__STAtomicExpression__Alternatives ) )
            {
            // InternalSTCoreParser.g:916:2: ( ( rule__STAtomicExpression__Alternatives ) )
            // InternalSTCoreParser.g:917:3: ( rule__STAtomicExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:918:3: ( rule__STAtomicExpression__Alternatives )
            // InternalSTCoreParser.g:918:4: rule__STAtomicExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAtomicExpression"


    // $ANTLR start "entryRuleSTLiteralExpressions"
    // InternalSTCoreParser.g:927:1: entryRuleSTLiteralExpressions : ruleSTLiteralExpressions EOF ;
    public final void entryRuleSTLiteralExpressions() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:928:1: ( ruleSTLiteralExpressions EOF )
            // InternalSTCoreParser.g:929:1: ruleSTLiteralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLiteralExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLiteralExpressions"


    // $ANTLR start "ruleSTLiteralExpressions"
    // InternalSTCoreParser.g:936:1: ruleSTLiteralExpressions : ( ( rule__STLiteralExpressions__Alternatives ) ) ;
    public final void ruleSTLiteralExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:940:2: ( ( ( rule__STLiteralExpressions__Alternatives ) ) )
            // InternalSTCoreParser.g:941:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            {
            // InternalSTCoreParser.g:941:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            // InternalSTCoreParser.g:942:3: ( rule__STLiteralExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:943:3: ( rule__STLiteralExpressions__Alternatives )
            // InternalSTCoreParser.g:943:4: rule__STLiteralExpressions__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLiteralExpressions"


    // $ANTLR start "entryRuleBOOL_LITERAL"
    // InternalSTCoreParser.g:952:1: entryRuleBOOL_LITERAL : ruleBOOL_LITERAL EOF ;
    public final void entryRuleBOOL_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:953:1: ( ruleBOOL_LITERAL EOF )
            // InternalSTCoreParser.g:954:1: ruleBOOL_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBOOL_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBOOL_LITERAL"


    // $ANTLR start "ruleBOOL_LITERAL"
    // InternalSTCoreParser.g:961:1: ruleBOOL_LITERAL : ( ( rule__BOOL_LITERAL__Group__0 ) ) ;
    public final void ruleBOOL_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:965:2: ( ( ( rule__BOOL_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:966:2: ( ( rule__BOOL_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:966:2: ( ( rule__BOOL_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:967:3: ( rule__BOOL_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:968:3: ( rule__BOOL_LITERAL__Group__0 )
            // InternalSTCoreParser.g:968:4: rule__BOOL_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBOOL_LITERAL"


    // $ANTLR start "entryRuleNUMERIC_LITERAL"
    // InternalSTCoreParser.g:977:1: entryRuleNUMERIC_LITERAL : ruleNUMERIC_LITERAL EOF ;
    public final void entryRuleNUMERIC_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:978:1: ( ruleNUMERIC_LITERAL EOF )
            // InternalSTCoreParser.g:979:1: ruleNUMERIC_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNUMERIC_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMERIC_LITERAL"


    // $ANTLR start "ruleNUMERIC_LITERAL"
    // InternalSTCoreParser.g:986:1: ruleNUMERIC_LITERAL : ( ( rule__NUMERIC_LITERAL__Group__0 ) ) ;
    public final void ruleNUMERIC_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:990:2: ( ( ( rule__NUMERIC_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:991:2: ( ( rule__NUMERIC_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:991:2: ( ( rule__NUMERIC_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:992:3: ( rule__NUMERIC_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:993:3: ( rule__NUMERIC_LITERAL__Group__0 )
            // InternalSTCoreParser.g:993:4: rule__NUMERIC_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMERIC_LITERAL"


    // $ANTLR start "entryRuleDATE_LITERAL"
    // InternalSTCoreParser.g:1002:1: entryRuleDATE_LITERAL : ruleDATE_LITERAL EOF ;
    public final void entryRuleDATE_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1003:1: ( ruleDATE_LITERAL EOF )
            // InternalSTCoreParser.g:1004:1: ruleDATE_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE_LITERAL"


    // $ANTLR start "ruleDATE_LITERAL"
    // InternalSTCoreParser.g:1011:1: ruleDATE_LITERAL : ( ( rule__DATE_LITERAL__Group__0 ) ) ;
    public final void ruleDATE_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1015:2: ( ( ( rule__DATE_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1016:2: ( ( rule__DATE_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1016:2: ( ( rule__DATE_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1017:3: ( rule__DATE_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1018:3: ( rule__DATE_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1018:4: rule__DATE_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE_LITERAL"


    // $ANTLR start "entryRuleTIME_LITERAL"
    // InternalSTCoreParser.g:1027:1: entryRuleTIME_LITERAL : ruleTIME_LITERAL EOF ;
    public final void entryRuleTIME_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1028:1: ( ruleTIME_LITERAL EOF )
            // InternalSTCoreParser.g:1029:1: ruleTIME_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_LITERAL"


    // $ANTLR start "ruleTIME_LITERAL"
    // InternalSTCoreParser.g:1036:1: ruleTIME_LITERAL : ( ( rule__TIME_LITERAL__Group__0 ) ) ;
    public final void ruleTIME_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1040:2: ( ( ( rule__TIME_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1041:2: ( ( rule__TIME_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1041:2: ( ( rule__TIME_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1042:3: ( rule__TIME_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1043:3: ( rule__TIME_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1043:4: rule__TIME_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_LITERAL"


    // $ANTLR start "entryRuleTIME_OF_DAY_LITERAL"
    // InternalSTCoreParser.g:1052:1: entryRuleTIME_OF_DAY_LITERAL : ruleTIME_OF_DAY_LITERAL EOF ;
    public final void entryRuleTIME_OF_DAY_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1053:1: ( ruleTIME_OF_DAY_LITERAL EOF )
            // InternalSTCoreParser.g:1054:1: ruleTIME_OF_DAY_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_OF_DAY_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_OF_DAY_LITERAL"


    // $ANTLR start "ruleTIME_OF_DAY_LITERAL"
    // InternalSTCoreParser.g:1061:1: ruleTIME_OF_DAY_LITERAL : ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) ) ;
    public final void ruleTIME_OF_DAY_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1065:2: ( ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1066:2: ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1066:2: ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1067:3: ( rule__TIME_OF_DAY_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1068:3: ( rule__TIME_OF_DAY_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1068:4: rule__TIME_OF_DAY_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_OF_DAY_LITERAL"


    // $ANTLR start "entryRuleDATE_AND_TIME_LITERAL"
    // InternalSTCoreParser.g:1077:1: entryRuleDATE_AND_TIME_LITERAL : ruleDATE_AND_TIME_LITERAL EOF ;
    public final void entryRuleDATE_AND_TIME_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1078:1: ( ruleDATE_AND_TIME_LITERAL EOF )
            // InternalSTCoreParser.g:1079:1: ruleDATE_AND_TIME_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE_AND_TIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE_AND_TIME_LITERAL"


    // $ANTLR start "ruleDATE_AND_TIME_LITERAL"
    // InternalSTCoreParser.g:1086:1: ruleDATE_AND_TIME_LITERAL : ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) ) ;
    public final void ruleDATE_AND_TIME_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1090:2: ( ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1091:2: ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1091:2: ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1092:3: ( rule__DATE_AND_TIME_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1093:3: ( rule__DATE_AND_TIME_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1093:4: rule__DATE_AND_TIME_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE_AND_TIME_LITERAL"


    // $ANTLR start "entryRuleSTRING_LITERAL"
    // InternalSTCoreParser.g:1102:1: entryRuleSTRING_LITERAL : ruleSTRING_LITERAL EOF ;
    public final void entryRuleSTRING_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1103:1: ( ruleSTRING_LITERAL EOF )
            // InternalSTCoreParser.g:1104:1: ruleSTRING_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRING_LITERAL"


    // $ANTLR start "ruleSTRING_LITERAL"
    // InternalSTCoreParser.g:1111:1: ruleSTRING_LITERAL : ( ( rule__STRING_LITERAL__Group__0 ) ) ;
    public final void ruleSTRING_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1115:2: ( ( ( rule__STRING_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1116:2: ( ( rule__STRING_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1116:2: ( ( rule__STRING_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1117:3: ( rule__STRING_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1118:3: ( rule__STRING_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1118:4: rule__STRING_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRING_LITERAL"


    // $ANTLR start "entryRuleINTEGER"
    // InternalSTCoreParser.g:1127:1: entryRuleINTEGER : ruleINTEGER EOF ;
    public final void entryRuleINTEGER() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1128:1: ( ruleINTEGER EOF )
            // InternalSTCoreParser.g:1129:1: ruleINTEGER EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleINTEGER"


    // $ANTLR start "ruleINTEGER"
    // InternalSTCoreParser.g:1136:1: ruleINTEGER : ( ( rule__INTEGER__Group__0 ) ) ;
    public final void ruleINTEGER() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1140:2: ( ( ( rule__INTEGER__Group__0 ) ) )
            // InternalSTCoreParser.g:1141:2: ( ( rule__INTEGER__Group__0 ) )
            {
            // InternalSTCoreParser.g:1141:2: ( ( rule__INTEGER__Group__0 ) )
            // InternalSTCoreParser.g:1142:3: ( rule__INTEGER__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1143:3: ( rule__INTEGER__Group__0 )
            // InternalSTCoreParser.g:1143:4: rule__INTEGER__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleINTEGER"


    // $ANTLR start "entryRuleREAL"
    // InternalSTCoreParser.g:1152:1: entryRuleREAL : ruleREAL EOF ;
    public final void entryRuleREAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1153:1: ( ruleREAL EOF )
            // InternalSTCoreParser.g:1154:1: ruleREAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleREAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleREAL"


    // $ANTLR start "ruleREAL"
    // InternalSTCoreParser.g:1161:1: ruleREAL : ( ( rule__REAL__Group__0 ) ) ;
    public final void ruleREAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1165:2: ( ( ( rule__REAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1166:2: ( ( rule__REAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1166:2: ( ( rule__REAL__Group__0 ) )
            // InternalSTCoreParser.g:1167:3: ( rule__REAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1168:3: ( rule__REAL__Group__0 )
            // InternalSTCoreParser.g:1168:4: rule__REAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleREAL"


    // $ANTLR start "entryRuleDATE"
    // InternalSTCoreParser.g:1177:1: entryRuleDATE : ruleDATE EOF ;
    public final void entryRuleDATE() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1178:1: ( ruleDATE EOF )
            // InternalSTCoreParser.g:1179:1: ruleDATE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE"


    // $ANTLR start "ruleDATE"
    // InternalSTCoreParser.g:1186:1: ruleDATE : ( ( rule__DATE__Group__0 ) ) ;
    public final void ruleDATE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1190:2: ( ( ( rule__DATE__Group__0 ) ) )
            // InternalSTCoreParser.g:1191:2: ( ( rule__DATE__Group__0 ) )
            {
            // InternalSTCoreParser.g:1191:2: ( ( rule__DATE__Group__0 ) )
            // InternalSTCoreParser.g:1192:3: ( rule__DATE__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1193:3: ( rule__DATE__Group__0 )
            // InternalSTCoreParser.g:1193:4: rule__DATE__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE"


    // $ANTLR start "entryRuleTIME_OF_DAY"
    // InternalSTCoreParser.g:1202:1: entryRuleTIME_OF_DAY : ruleTIME_OF_DAY EOF ;
    public final void entryRuleTIME_OF_DAY() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1203:1: ( ruleTIME_OF_DAY EOF )
            // InternalSTCoreParser.g:1204:1: ruleTIME_OF_DAY EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_OF_DAY"


    // $ANTLR start "ruleTIME_OF_DAY"
    // InternalSTCoreParser.g:1211:1: ruleTIME_OF_DAY : ( ( rule__TIME_OF_DAY__Group__0 ) ) ;
    public final void ruleTIME_OF_DAY() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1215:2: ( ( ( rule__TIME_OF_DAY__Group__0 ) ) )
            // InternalSTCoreParser.g:1216:2: ( ( rule__TIME_OF_DAY__Group__0 ) )
            {
            // InternalSTCoreParser.g:1216:2: ( ( rule__TIME_OF_DAY__Group__0 ) )
            // InternalSTCoreParser.g:1217:3: ( rule__TIME_OF_DAY__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1218:3: ( rule__TIME_OF_DAY__Group__0 )
            // InternalSTCoreParser.g:1218:4: rule__TIME_OF_DAY__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_OF_DAY"


    // $ANTLR start "ruleSubrangeOperator"
    // InternalSTCoreParser.g:1227:1: ruleSubrangeOperator : ( ( FullStopFullStop ) ) ;
    public final void ruleSubrangeOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1231:1: ( ( ( FullStopFullStop ) ) )
            // InternalSTCoreParser.g:1232:2: ( ( FullStopFullStop ) )
            {
            // InternalSTCoreParser.g:1232:2: ( ( FullStopFullStop ) )
            // InternalSTCoreParser.g:1233:3: ( FullStopFullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }
            // InternalSTCoreParser.g:1234:3: ( FullStopFullStop )
            // InternalSTCoreParser.g:1234:4: FullStopFullStop
            {
            match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubrangeOperator"


    // $ANTLR start "ruleOrOperator"
    // InternalSTCoreParser.g:1243:1: ruleOrOperator : ( ( OR ) ) ;
    public final void ruleOrOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1247:1: ( ( ( OR ) ) )
            // InternalSTCoreParser.g:1248:2: ( ( OR ) )
            {
            // InternalSTCoreParser.g:1248:2: ( ( OR ) )
            // InternalSTCoreParser.g:1249:3: ( OR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }
            // InternalSTCoreParser.g:1250:3: ( OR )
            // InternalSTCoreParser.g:1250:4: OR
            {
            match(input,OR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalSTCoreParser.g:1259:1: ruleXorOperator : ( ( XOR ) ) ;
    public final void ruleXorOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1263:1: ( ( ( XOR ) ) )
            // InternalSTCoreParser.g:1264:2: ( ( XOR ) )
            {
            // InternalSTCoreParser.g:1264:2: ( ( XOR ) )
            // InternalSTCoreParser.g:1265:3: ( XOR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }
            // InternalSTCoreParser.g:1266:3: ( XOR )
            // InternalSTCoreParser.g:1266:4: XOR
            {
            match(input,XOR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalSTCoreParser.g:1275:1: ruleAndOperator : ( ( rule__AndOperator__Alternatives ) ) ;
    public final void ruleAndOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1279:1: ( ( ( rule__AndOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1280:2: ( ( rule__AndOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1280:2: ( ( rule__AndOperator__Alternatives ) )
            // InternalSTCoreParser.g:1281:3: ( rule__AndOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1282:3: ( rule__AndOperator__Alternatives )
            // InternalSTCoreParser.g:1282:4: rule__AndOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AndOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "ruleEqualityOperator"
    // InternalSTCoreParser.g:1291:1: ruleEqualityOperator : ( ( rule__EqualityOperator__Alternatives ) ) ;
    public final void ruleEqualityOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1295:1: ( ( ( rule__EqualityOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1296:2: ( ( rule__EqualityOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1296:2: ( ( rule__EqualityOperator__Alternatives ) )
            // InternalSTCoreParser.g:1297:3: ( rule__EqualityOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1298:3: ( rule__EqualityOperator__Alternatives )
            // InternalSTCoreParser.g:1298:4: rule__EqualityOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EqualityOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSTCoreParser.g:1307:1: ruleCompareOperator : ( ( rule__CompareOperator__Alternatives ) ) ;
    public final void ruleCompareOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1311:1: ( ( ( rule__CompareOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1312:2: ( ( rule__CompareOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1312:2: ( ( rule__CompareOperator__Alternatives ) )
            // InternalSTCoreParser.g:1313:3: ( rule__CompareOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1314:3: ( rule__CompareOperator__Alternatives )
            // InternalSTCoreParser.g:1314:4: rule__CompareOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CompareOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "ruleAddSubOperator"
    // InternalSTCoreParser.g:1323:1: ruleAddSubOperator : ( ( rule__AddSubOperator__Alternatives ) ) ;
    public final void ruleAddSubOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1327:1: ( ( ( rule__AddSubOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1328:2: ( ( rule__AddSubOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1328:2: ( ( rule__AddSubOperator__Alternatives ) )
            // InternalSTCoreParser.g:1329:3: ( rule__AddSubOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1330:3: ( rule__AddSubOperator__Alternatives )
            // InternalSTCoreParser.g:1330:4: rule__AddSubOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AddSubOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddSubOperator"


    // $ANTLR start "ruleMulDivModOperator"
    // InternalSTCoreParser.g:1339:1: ruleMulDivModOperator : ( ( rule__MulDivModOperator__Alternatives ) ) ;
    public final void ruleMulDivModOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1343:1: ( ( ( rule__MulDivModOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1344:2: ( ( rule__MulDivModOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1344:2: ( ( rule__MulDivModOperator__Alternatives ) )
            // InternalSTCoreParser.g:1345:3: ( rule__MulDivModOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1346:3: ( rule__MulDivModOperator__Alternatives )
            // InternalSTCoreParser.g:1346:4: rule__MulDivModOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MulDivModOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulDivModOperator"


    // $ANTLR start "rulePowerOperator"
    // InternalSTCoreParser.g:1355:1: rulePowerOperator : ( ( AsteriskAsterisk ) ) ;
    public final void rulePowerOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1359:1: ( ( ( AsteriskAsterisk ) ) )
            // InternalSTCoreParser.g:1360:2: ( ( AsteriskAsterisk ) )
            {
            // InternalSTCoreParser.g:1360:2: ( ( AsteriskAsterisk ) )
            // InternalSTCoreParser.g:1361:3: ( AsteriskAsterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }
            // InternalSTCoreParser.g:1362:3: ( AsteriskAsterisk )
            // InternalSTCoreParser.g:1362:4: AsteriskAsterisk
            {
            match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePowerOperator"


    // $ANTLR start "ruleUnaryOperator"
    // InternalSTCoreParser.g:1371:1: ruleUnaryOperator : ( ( rule__UnaryOperator__Alternatives ) ) ;
    public final void ruleUnaryOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1375:1: ( ( ( rule__UnaryOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1376:2: ( ( rule__UnaryOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1376:2: ( ( rule__UnaryOperator__Alternatives ) )
            // InternalSTCoreParser.g:1377:3: ( rule__UnaryOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1378:3: ( rule__UnaryOperator__Alternatives )
            // InternalSTCoreParser.g:1378:4: rule__UnaryOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "ruleMultiBitAccessSpecifier"
    // InternalSTCoreParser.g:1387:1: ruleMultiBitAccessSpecifier : ( ( rule__MultiBitAccessSpecifier__Alternatives ) ) ;
    public final void ruleMultiBitAccessSpecifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1391:1: ( ( ( rule__MultiBitAccessSpecifier__Alternatives ) ) )
            // InternalSTCoreParser.g:1392:2: ( ( rule__MultiBitAccessSpecifier__Alternatives ) )
            {
            // InternalSTCoreParser.g:1392:2: ( ( rule__MultiBitAccessSpecifier__Alternatives ) )
            // InternalSTCoreParser.g:1393:3: ( rule__MultiBitAccessSpecifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiBitAccessSpecifierAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1394:3: ( rule__MultiBitAccessSpecifier__Alternatives )
            // InternalSTCoreParser.g:1394:4: rule__MultiBitAccessSpecifier__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MultiBitAccessSpecifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiBitAccessSpecifierAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiBitAccessSpecifier"


    // $ANTLR start "rule__VarDeclaration__Alternatives_3_1"
    // InternalSTCoreParser.g:1402:1: rule__VarDeclaration__Alternatives_3_1 : ( ( ( rule__VarDeclaration__Group_3_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_3_1_1__0 ) ) );
    public final void rule__VarDeclaration__Alternatives_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1406:1: ( ( ( rule__VarDeclaration__Group_3_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_3_1_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==LeftSquareBracket) ) {
                int LA2_1 = input.LA(2);

                if ( ((LA2_1>=LDATE_AND_TIME && LA2_1<=TIME_OF_DAY)||LA2_1==WSTRING||(LA2_1>=STRING && LA2_1<=DWORD)||(LA2_1>=LDATE && LA2_1<=LWORD)||(LA2_1>=UDINT && LA2_1<=WCHAR)||(LA2_1>=BOOL && LA2_1<=DINT)||(LA2_1>=LINT && LA2_1<=UINT)||LA2_1==WORD||(LA2_1>=INT && LA2_1<=LDT)||LA2_1==TOD||LA2_1==DT||(LA2_1>=LD && LA2_1<=LT)||LA2_1==NOT||LA2_1==D||LA2_1==T||LA2_1==LeftParenthesis||LA2_1==PlusSign||LA2_1==HyphenMinus||LA2_1==RULE_BOOL_VALUES||(LA2_1>=RULE_NON_DECIMAL && LA2_1<=RULE_INT)||(LA2_1>=RULE_ID && LA2_1<=RULE_STRING)) ) {
                    alt2=1;
                }
                else if ( (LA2_1==Asterisk) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSTCoreParser.g:1407:2: ( ( rule__VarDeclaration__Group_3_1_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1407:2: ( ( rule__VarDeclaration__Group_3_1_0__0 ) )
                    // InternalSTCoreParser.g:1408:3: ( rule__VarDeclaration__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0()); 
                    }
                    // InternalSTCoreParser.g:1409:3: ( rule__VarDeclaration__Group_3_1_0__0 )
                    // InternalSTCoreParser.g:1409:4: rule__VarDeclaration__Group_3_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1413:2: ( ( rule__VarDeclaration__Group_3_1_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1413:2: ( ( rule__VarDeclaration__Group_3_1_1__0 ) )
                    // InternalSTCoreParser.g:1414:3: ( rule__VarDeclaration__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1()); 
                    }
                    // InternalSTCoreParser.g:1415:3: ( rule__VarDeclaration__Group_3_1_1__0 )
                    // InternalSTCoreParser.g:1415:4: rule__VarDeclaration__Group_3_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Alternatives_3_1"


    // $ANTLR start "rule__InitializerExpression__Alternatives"
    // InternalSTCoreParser.g:1423:1: rule__InitializerExpression__Alternatives : ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) );
    public final void rule__InitializerExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1427:1: ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=LDATE_AND_TIME && LA3_0<=TIME_OF_DAY)||LA3_0==WSTRING||(LA3_0>=STRING && LA3_0<=DWORD)||(LA3_0>=LDATE && LA3_0<=LWORD)||(LA3_0>=UDINT && LA3_0<=WCHAR)||(LA3_0>=BOOL && LA3_0<=DINT)||(LA3_0>=LINT && LA3_0<=UINT)||LA3_0==WORD||(LA3_0>=INT && LA3_0<=LDT)||LA3_0==TOD||LA3_0==DT||(LA3_0>=LD && LA3_0<=LT)||LA3_0==NOT||LA3_0==D||LA3_0==T||LA3_0==LeftParenthesis||LA3_0==PlusSign||LA3_0==HyphenMinus||LA3_0==RULE_BOOL_VALUES||(LA3_0>=RULE_NON_DECIMAL && LA3_0<=RULE_INT)||(LA3_0>=RULE_ID && LA3_0<=RULE_STRING)) ) {
                alt3=1;
            }
            else if ( (LA3_0==LeftSquareBracket) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSTCoreParser.g:1428:2: ( ruleSTExpression )
                    {
                    // InternalSTCoreParser.g:1428:2: ( ruleSTExpression )
                    // InternalSTCoreParser.g:1429:3: ruleSTExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1434:2: ( ruleArrayInitializerExpression )
                    {
                    // InternalSTCoreParser.g:1434:2: ( ruleArrayInitializerExpression )
                    // InternalSTCoreParser.g:1435:3: ruleArrayInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArrayInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializerExpression__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives"
    // InternalSTCoreParser.g:1444:1: rule__STStatement__Alternatives : ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) | ( ( rule__STStatement__Group_2__0 ) ) | ( ( rule__STStatement__Group_3__0 ) ) | ( ( rule__STStatement__Group_4__0 ) ) | ( ( rule__STStatement__Group_5__0 ) ) | ( ( rule__STStatement__Group_6__0 ) ) );
    public final void rule__STStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1448:1: ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) | ( ( rule__STStatement__Group_2__0 ) ) | ( ( rule__STStatement__Group_3__0 ) ) | ( ( rule__STStatement__Group_4__0 ) ) | ( ( rule__STStatement__Group_5__0 ) ) | ( ( rule__STStatement__Group_6__0 ) ) )
            int alt4=7;
            switch ( input.LA(1) ) {
            case CASE:
            case IF:
                {
                alt4=1;
                }
                break;
            case REPEAT:
            case WHILE:
            case FOR:
                {
                alt4=2;
                }
                break;
            case RULE_ID:
                {
                alt4=3;
                }
                break;
            case Semicolon:
                {
                alt4=4;
                }
                break;
            case RETURN:
                {
                alt4=5;
                }
                break;
            case CONTINUE:
                {
                alt4=6;
                }
                break;
            case EXIT:
                {
                alt4=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalSTCoreParser.g:1449:2: ( ( rule__STStatement__Group_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1449:2: ( ( rule__STStatement__Group_0__0 ) )
                    // InternalSTCoreParser.g:1450:3: ( rule__STStatement__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }
                    // InternalSTCoreParser.g:1451:3: ( rule__STStatement__Group_0__0 )
                    // InternalSTCoreParser.g:1451:4: rule__STStatement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1455:2: ( ( rule__STStatement__Group_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1455:2: ( ( rule__STStatement__Group_1__0 ) )
                    // InternalSTCoreParser.g:1456:3: ( rule__STStatement__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }
                    // InternalSTCoreParser.g:1457:3: ( rule__STStatement__Group_1__0 )
                    // InternalSTCoreParser.g:1457:4: rule__STStatement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1461:2: ( ( rule__STStatement__Group_2__0 ) )
                    {
                    // InternalSTCoreParser.g:1461:2: ( ( rule__STStatement__Group_2__0 ) )
                    // InternalSTCoreParser.g:1462:3: ( rule__STStatement__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_2()); 
                    }
                    // InternalSTCoreParser.g:1463:3: ( rule__STStatement__Group_2__0 )
                    // InternalSTCoreParser.g:1463:4: rule__STStatement__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1467:2: ( ( rule__STStatement__Group_3__0 ) )
                    {
                    // InternalSTCoreParser.g:1467:2: ( ( rule__STStatement__Group_3__0 ) )
                    // InternalSTCoreParser.g:1468:3: ( rule__STStatement__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_3()); 
                    }
                    // InternalSTCoreParser.g:1469:3: ( rule__STStatement__Group_3__0 )
                    // InternalSTCoreParser.g:1469:4: rule__STStatement__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:1473:2: ( ( rule__STStatement__Group_4__0 ) )
                    {
                    // InternalSTCoreParser.g:1473:2: ( ( rule__STStatement__Group_4__0 ) )
                    // InternalSTCoreParser.g:1474:3: ( rule__STStatement__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_4()); 
                    }
                    // InternalSTCoreParser.g:1475:3: ( rule__STStatement__Group_4__0 )
                    // InternalSTCoreParser.g:1475:4: rule__STStatement__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:1479:2: ( ( rule__STStatement__Group_5__0 ) )
                    {
                    // InternalSTCoreParser.g:1479:2: ( ( rule__STStatement__Group_5__0 ) )
                    // InternalSTCoreParser.g:1480:3: ( rule__STStatement__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_5()); 
                    }
                    // InternalSTCoreParser.g:1481:3: ( rule__STStatement__Group_5__0 )
                    // InternalSTCoreParser.g:1481:4: rule__STStatement__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTCoreParser.g:1485:2: ( ( rule__STStatement__Group_6__0 ) )
                    {
                    // InternalSTCoreParser.g:1485:2: ( ( rule__STStatement__Group_6__0 ) )
                    // InternalSTCoreParser.g:1486:3: ( rule__STStatement__Group_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_6()); 
                    }
                    // InternalSTCoreParser.g:1487:3: ( rule__STStatement__Group_6__0 )
                    // InternalSTCoreParser.g:1487:4: rule__STStatement__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives"


    // $ANTLR start "rule__STBranchStatement__Alternatives"
    // InternalSTCoreParser.g:1495:1: rule__STBranchStatement__Alternatives : ( ( ruleSTIfStatment ) | ( ruleSTCaseStatement ) );
    public final void rule__STBranchStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1499:1: ( ( ruleSTIfStatment ) | ( ruleSTCaseStatement ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==IF) ) {
                alt5=1;
            }
            else if ( (LA5_0==CASE) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalSTCoreParser.g:1500:2: ( ruleSTIfStatment )
                    {
                    // InternalSTCoreParser.g:1500:2: ( ruleSTIfStatment )
                    // InternalSTCoreParser.g:1501:3: ruleSTIfStatment
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTBranchStatementAccess().getSTIfStatmentParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTIfStatment();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTBranchStatementAccess().getSTIfStatmentParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1506:2: ( ruleSTCaseStatement )
                    {
                    // InternalSTCoreParser.g:1506:2: ( ruleSTCaseStatement )
                    // InternalSTCoreParser.g:1507:3: ruleSTCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTBranchStatementAccess().getSTCaseStatementParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCaseStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTBranchStatementAccess().getSTCaseStatementParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBranchStatement__Alternatives"


    // $ANTLR start "rule__STLoopStatement__Alternatives"
    // InternalSTCoreParser.g:1516:1: rule__STLoopStatement__Alternatives : ( ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) );
    public final void rule__STLoopStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1520:1: ( ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) )
            int alt6=3;
            switch ( input.LA(1) ) {
            case FOR:
                {
                alt6=1;
                }
                break;
            case WHILE:
                {
                alt6=2;
                }
                break;
            case REPEAT:
                {
                alt6=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalSTCoreParser.g:1521:2: ( ruleSTForStatement )
                    {
                    // InternalSTCoreParser.g:1521:2: ( ruleSTForStatement )
                    // InternalSTCoreParser.g:1522:3: ruleSTForStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLoopStatementAccess().getSTForStatementParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTForStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLoopStatementAccess().getSTForStatementParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1527:2: ( ruleSTWhileStatement )
                    {
                    // InternalSTCoreParser.g:1527:2: ( ruleSTWhileStatement )
                    // InternalSTCoreParser.g:1528:3: ruleSTWhileStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLoopStatementAccess().getSTWhileStatementParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTWhileStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLoopStatementAccess().getSTWhileStatementParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1533:2: ( ruleSTRepeatStatement )
                    {
                    // InternalSTCoreParser.g:1533:2: ( ruleSTRepeatStatement )
                    // InternalSTCoreParser.g:1534:3: ruleSTRepeatStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLoopStatementAccess().getSTRepeatStatementParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTRepeatStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLoopStatementAccess().getSTRepeatStatementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLoopStatement__Alternatives"


    // $ANTLR start "rule__STSignumExpression__Alternatives"
    // InternalSTCoreParser.g:1543:1: rule__STSignumExpression__Alternatives : ( ( ruleSTLiteralExpressions ) | ( ruleSTSelectionExpression ) | ( ( rule__STSignumExpression__Group_2__0 ) ) );
    public final void rule__STSignumExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1547:1: ( ( ruleSTLiteralExpressions ) | ( ruleSTSelectionExpression ) | ( ( rule__STSignumExpression__Group_2__0 ) ) )
            int alt7=3;
            switch ( input.LA(1) ) {
            case NOT:
                {
                int LA7_1 = input.LA(2);

                if ( (LA7_1==DWORD||LA7_1==LREAL||LA7_1==LWORD||(LA7_1>=UDINT && LA7_1<=USINT)||(LA7_1>=BOOL && LA7_1<=BYTE)||LA7_1==DINT||LA7_1==LINT||(LA7_1>=REAL && LA7_1<=SINT)||LA7_1==UINT||LA7_1==WORD||LA7_1==INT||LA7_1==PlusSign||LA7_1==HyphenMinus||LA7_1==RULE_BOOL_VALUES||(LA7_1>=RULE_NON_DECIMAL && LA7_1<=RULE_INT)) ) {
                    alt7=1;
                }
                else if ( (LA7_1==LeftParenthesis||LA7_1==RULE_ID) ) {
                    alt7=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 1, input);

                    throw nvae;
                }
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case DT:
            case LD:
            case LT:
            case D:
            case T:
            case RULE_BOOL_VALUES:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_STRING:
                {
                alt7=1;
                }
                break;
            case PlusSign:
                {
                int LA7_3 = input.LA(2);

                if ( (LA7_3==LeftParenthesis||LA7_3==RULE_ID) ) {
                    alt7=3;
                }
                else if ( (LA7_3==RULE_INT) ) {
                    alt7=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 3, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA7_4 = input.LA(2);

                if ( (LA7_4==RULE_INT) ) {
                    alt7=1;
                }
                else if ( (LA7_4==LeftParenthesis||LA7_4==RULE_ID) ) {
                    alt7=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 4, input);

                    throw nvae;
                }
                }
                break;
            case LeftParenthesis:
            case RULE_ID:
                {
                alt7=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalSTCoreParser.g:1548:2: ( ruleSTLiteralExpressions )
                    {
                    // InternalSTCoreParser.g:1548:2: ( ruleSTLiteralExpressions )
                    // InternalSTCoreParser.g:1549:3: ruleSTLiteralExpressions
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSTLiteralExpressionsParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTLiteralExpressions();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSTLiteralExpressionsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1554:2: ( ruleSTSelectionExpression )
                    {
                    // InternalSTCoreParser.g:1554:2: ( ruleSTSelectionExpression )
                    // InternalSTCoreParser.g:1555:3: ruleSTSelectionExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSTSelectionExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTSelectionExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSTSelectionExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1560:2: ( ( rule__STSignumExpression__Group_2__0 ) )
                    {
                    // InternalSTCoreParser.g:1560:2: ( ( rule__STSignumExpression__Group_2__0 ) )
                    // InternalSTCoreParser.g:1561:3: ( rule__STSignumExpression__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getGroup_2()); 
                    }
                    // InternalSTCoreParser.g:1562:3: ( rule__STSignumExpression__Group_2__0 )
                    // InternalSTCoreParser.g:1562:4: rule__STSignumExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSignumExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Alternatives"


    // $ANTLR start "rule__STSelectionExpression__Alternatives_1_1"
    // InternalSTCoreParser.g:1570:1: rule__STSelectionExpression__Alternatives_1_1 : ( ( ( rule__STSelectionExpression__Group_1_1_0__0 ) ) | ( ( rule__STSelectionExpression__Group_1_1_1__0 ) ) );
    public final void rule__STSelectionExpression__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1574:1: ( ( ( rule__STSelectionExpression__Group_1_1_0__0 ) ) | ( ( rule__STSelectionExpression__Group_1_1_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==FullStop) ) {
                alt8=1;
            }
            else if ( (LA8_0==LeftSquareBracket) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSTCoreParser.g:1575:2: ( ( rule__STSelectionExpression__Group_1_1_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1575:2: ( ( rule__STSelectionExpression__Group_1_1_0__0 ) )
                    // InternalSTCoreParser.g:1576:3: ( rule__STSelectionExpression__Group_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_0()); 
                    }
                    // InternalSTCoreParser.g:1577:3: ( rule__STSelectionExpression__Group_1_1_0__0 )
                    // InternalSTCoreParser.g:1577:4: rule__STSelectionExpression__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1581:2: ( ( rule__STSelectionExpression__Group_1_1_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1581:2: ( ( rule__STSelectionExpression__Group_1_1_1__0 ) )
                    // InternalSTCoreParser.g:1582:3: ( rule__STSelectionExpression__Group_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1()); 
                    }
                    // InternalSTCoreParser.g:1583:3: ( rule__STSelectionExpression__Group_1_1_1__0 )
                    // InternalSTCoreParser.g:1583:4: rule__STSelectionExpression__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Alternatives_1_1"


    // $ANTLR start "rule__STAtomicExpression__Alternatives"
    // InternalSTCoreParser.g:1591:1: rule__STAtomicExpression__Alternatives : ( ( ( rule__STAtomicExpression__Group_0__0 ) ) | ( ( rule__STAtomicExpression__Group_1__0 ) ) );
    public final void rule__STAtomicExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1595:1: ( ( ( rule__STAtomicExpression__Group_0__0 ) ) | ( ( rule__STAtomicExpression__Group_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==LeftParenthesis) ) {
                alt9=1;
            }
            else if ( (LA9_0==RULE_ID) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalSTCoreParser.g:1596:2: ( ( rule__STAtomicExpression__Group_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1596:2: ( ( rule__STAtomicExpression__Group_0__0 ) )
                    // InternalSTCoreParser.g:1597:3: ( rule__STAtomicExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_0()); 
                    }
                    // InternalSTCoreParser.g:1598:3: ( rule__STAtomicExpression__Group_0__0 )
                    // InternalSTCoreParser.g:1598:4: rule__STAtomicExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1602:2: ( ( rule__STAtomicExpression__Group_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1602:2: ( ( rule__STAtomicExpression__Group_1__0 ) )
                    // InternalSTCoreParser.g:1603:3: ( rule__STAtomicExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1()); 
                    }
                    // InternalSTCoreParser.g:1604:3: ( rule__STAtomicExpression__Group_1__0 )
                    // InternalSTCoreParser.g:1604:4: rule__STAtomicExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Alternatives"


    // $ANTLR start "rule__STLiteralExpressions__Alternatives"
    // InternalSTCoreParser.g:1612:1: rule__STLiteralExpressions__Alternatives : ( ( ( rule__STLiteralExpressions__Group_0__0 ) ) | ( ( rule__STLiteralExpressions__Group_1__0 ) ) | ( ( rule__STLiteralExpressions__Group_2__0 ) ) | ( ( rule__STLiteralExpressions__Group_3__0 ) ) | ( ( rule__STLiteralExpressions__Group_4__0 ) ) | ( ( rule__STLiteralExpressions__Group_5__0 ) ) | ( ( rule__STLiteralExpressions__Group_6__0 ) ) );
    public final void rule__STLiteralExpressions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1616:1: ( ( ( rule__STLiteralExpressions__Group_0__0 ) ) | ( ( rule__STLiteralExpressions__Group_1__0 ) ) | ( ( rule__STLiteralExpressions__Group_2__0 ) ) | ( ( rule__STLiteralExpressions__Group_3__0 ) ) | ( ( rule__STLiteralExpressions__Group_4__0 ) ) | ( ( rule__STLiteralExpressions__Group_5__0 ) ) | ( ( rule__STLiteralExpressions__Group_6__0 ) ) )
            int alt10=7;
            switch ( input.LA(1) ) {
            case NOT:
                {
                int LA10_1 = input.LA(2);

                if ( (LA10_1==DWORD||LA10_1==LREAL||LA10_1==LWORD||(LA10_1>=UDINT && LA10_1<=USINT)||LA10_1==BYTE||LA10_1==DINT||LA10_1==LINT||(LA10_1>=REAL && LA10_1<=SINT)||LA10_1==UINT||LA10_1==WORD||LA10_1==INT||LA10_1==PlusSign||LA10_1==HyphenMinus||(LA10_1>=RULE_NON_DECIMAL && LA10_1<=RULE_INT)) ) {
                    alt10=2;
                }
                else if ( (LA10_1==BOOL||LA10_1==RULE_BOOL_VALUES) ) {
                    alt10=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
                }
                break;
            case BOOL:
            case RULE_BOOL_VALUES:
                {
                alt10=1;
                }
                break;
            case DWORD:
            case LREAL:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case BYTE:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case UINT:
            case WORD:
            case INT:
            case PlusSign:
            case HyphenMinus:
            case RULE_NON_DECIMAL:
            case RULE_INT:
                {
                alt10=2;
                }
                break;
            case LDATE:
            case DATE:
            case LD:
            case D:
                {
                alt10=3;
                }
                break;
            case LTIME:
            case TIME:
            case LT:
            case T:
                {
                alt10=4;
                }
                break;
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt10=5;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt10=6;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
            case RULE_STRING:
                {
                alt10=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalSTCoreParser.g:1617:2: ( ( rule__STLiteralExpressions__Group_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1617:2: ( ( rule__STLiteralExpressions__Group_0__0 ) )
                    // InternalSTCoreParser.g:1618:3: ( rule__STLiteralExpressions__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_0()); 
                    }
                    // InternalSTCoreParser.g:1619:3: ( rule__STLiteralExpressions__Group_0__0 )
                    // InternalSTCoreParser.g:1619:4: rule__STLiteralExpressions__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1623:2: ( ( rule__STLiteralExpressions__Group_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1623:2: ( ( rule__STLiteralExpressions__Group_1__0 ) )
                    // InternalSTCoreParser.g:1624:3: ( rule__STLiteralExpressions__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_1()); 
                    }
                    // InternalSTCoreParser.g:1625:3: ( rule__STLiteralExpressions__Group_1__0 )
                    // InternalSTCoreParser.g:1625:4: rule__STLiteralExpressions__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1629:2: ( ( rule__STLiteralExpressions__Group_2__0 ) )
                    {
                    // InternalSTCoreParser.g:1629:2: ( ( rule__STLiteralExpressions__Group_2__0 ) )
                    // InternalSTCoreParser.g:1630:3: ( rule__STLiteralExpressions__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_2()); 
                    }
                    // InternalSTCoreParser.g:1631:3: ( rule__STLiteralExpressions__Group_2__0 )
                    // InternalSTCoreParser.g:1631:4: rule__STLiteralExpressions__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1635:2: ( ( rule__STLiteralExpressions__Group_3__0 ) )
                    {
                    // InternalSTCoreParser.g:1635:2: ( ( rule__STLiteralExpressions__Group_3__0 ) )
                    // InternalSTCoreParser.g:1636:3: ( rule__STLiteralExpressions__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_3()); 
                    }
                    // InternalSTCoreParser.g:1637:3: ( rule__STLiteralExpressions__Group_3__0 )
                    // InternalSTCoreParser.g:1637:4: rule__STLiteralExpressions__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:1641:2: ( ( rule__STLiteralExpressions__Group_4__0 ) )
                    {
                    // InternalSTCoreParser.g:1641:2: ( ( rule__STLiteralExpressions__Group_4__0 ) )
                    // InternalSTCoreParser.g:1642:3: ( rule__STLiteralExpressions__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_4()); 
                    }
                    // InternalSTCoreParser.g:1643:3: ( rule__STLiteralExpressions__Group_4__0 )
                    // InternalSTCoreParser.g:1643:4: rule__STLiteralExpressions__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:1647:2: ( ( rule__STLiteralExpressions__Group_5__0 ) )
                    {
                    // InternalSTCoreParser.g:1647:2: ( ( rule__STLiteralExpressions__Group_5__0 ) )
                    // InternalSTCoreParser.g:1648:3: ( rule__STLiteralExpressions__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_5()); 
                    }
                    // InternalSTCoreParser.g:1649:3: ( rule__STLiteralExpressions__Group_5__0 )
                    // InternalSTCoreParser.g:1649:4: rule__STLiteralExpressions__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTCoreParser.g:1653:2: ( ( rule__STLiteralExpressions__Group_6__0 ) )
                    {
                    // InternalSTCoreParser.g:1653:2: ( ( rule__STLiteralExpressions__Group_6__0 ) )
                    // InternalSTCoreParser.g:1654:3: ( rule__STLiteralExpressions__Group_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_6()); 
                    }
                    // InternalSTCoreParser.g:1655:3: ( rule__STLiteralExpressions__Group_6__0 )
                    // InternalSTCoreParser.g:1655:4: rule__STLiteralExpressions__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Alternatives"


    // $ANTLR start "rule__NUMERIC_LITERAL__KeywordAlternatives_1_0"
    // InternalSTCoreParser.g:1663:1: rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 : ( ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) | ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) );
    public final void rule__NUMERIC_LITERAL__KeywordAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1667:1: ( ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) | ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) )
            int alt11=14;
            switch ( input.LA(1) ) {
            case BYTE:
                {
                alt11=1;
                }
                break;
            case WORD:
                {
                alt11=2;
                }
                break;
            case DWORD:
                {
                alt11=3;
                }
                break;
            case LWORD:
                {
                alt11=4;
                }
                break;
            case SINT:
                {
                alt11=5;
                }
                break;
            case INT:
                {
                alt11=6;
                }
                break;
            case DINT:
                {
                alt11=7;
                }
                break;
            case LINT:
                {
                alt11=8;
                }
                break;
            case USINT:
                {
                alt11=9;
                }
                break;
            case UINT:
                {
                alt11=10;
                }
                break;
            case UDINT:
                {
                alt11=11;
                }
                break;
            case ULINT:
                {
                alt11=12;
                }
                break;
            case REAL:
                {
                alt11=13;
                }
                break;
            case LREAL:
                {
                alt11=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalSTCoreParser.g:1668:2: ( BYTE )
                    {
                    // InternalSTCoreParser.g:1668:2: ( BYTE )
                    // InternalSTCoreParser.g:1669:3: BYTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBYTEKeyword_1_0_0()); 
                    }
                    match(input,BYTE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBYTEKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1674:2: ( WORD )
                    {
                    // InternalSTCoreParser.g:1674:2: ( WORD )
                    // InternalSTCoreParser.g:1675:3: WORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordWORDKeyword_1_0_1()); 
                    }
                    match(input,WORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordWORDKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1680:2: ( DWORD )
                    {
                    // InternalSTCoreParser.g:1680:2: ( DWORD )
                    // InternalSTCoreParser.g:1681:3: DWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDWORDKeyword_1_0_2()); 
                    }
                    match(input,DWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDWORDKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1686:2: ( LWORD )
                    {
                    // InternalSTCoreParser.g:1686:2: ( LWORD )
                    // InternalSTCoreParser.g:1687:3: LWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLWORDKeyword_1_0_3()); 
                    }
                    match(input,LWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLWORDKeyword_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:1692:2: ( SINT )
                    {
                    // InternalSTCoreParser.g:1692:2: ( SINT )
                    // InternalSTCoreParser.g:1693:3: SINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordSINTKeyword_1_0_4()); 
                    }
                    match(input,SINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordSINTKeyword_1_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:1698:2: ( INT )
                    {
                    // InternalSTCoreParser.g:1698:2: ( INT )
                    // InternalSTCoreParser.g:1699:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordINTKeyword_1_0_5()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordINTKeyword_1_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTCoreParser.g:1704:2: ( DINT )
                    {
                    // InternalSTCoreParser.g:1704:2: ( DINT )
                    // InternalSTCoreParser.g:1705:3: DINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDINTKeyword_1_0_6()); 
                    }
                    match(input,DINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDINTKeyword_1_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTCoreParser.g:1710:2: ( LINT )
                    {
                    // InternalSTCoreParser.g:1710:2: ( LINT )
                    // InternalSTCoreParser.g:1711:3: LINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLINTKeyword_1_0_7()); 
                    }
                    match(input,LINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLINTKeyword_1_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTCoreParser.g:1716:2: ( USINT )
                    {
                    // InternalSTCoreParser.g:1716:2: ( USINT )
                    // InternalSTCoreParser.g:1717:3: USINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUSINTKeyword_1_0_8()); 
                    }
                    match(input,USINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUSINTKeyword_1_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTCoreParser.g:1722:2: ( UINT )
                    {
                    // InternalSTCoreParser.g:1722:2: ( UINT )
                    // InternalSTCoreParser.g:1723:3: UINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUINTKeyword_1_0_9()); 
                    }
                    match(input,UINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUINTKeyword_1_0_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSTCoreParser.g:1728:2: ( UDINT )
                    {
                    // InternalSTCoreParser.g:1728:2: ( UDINT )
                    // InternalSTCoreParser.g:1729:3: UDINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUDINTKeyword_1_0_10()); 
                    }
                    match(input,UDINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUDINTKeyword_1_0_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSTCoreParser.g:1734:2: ( ULINT )
                    {
                    // InternalSTCoreParser.g:1734:2: ( ULINT )
                    // InternalSTCoreParser.g:1735:3: ULINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordULINTKeyword_1_0_11()); 
                    }
                    match(input,ULINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordULINTKeyword_1_0_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSTCoreParser.g:1740:2: ( REAL )
                    {
                    // InternalSTCoreParser.g:1740:2: ( REAL )
                    // InternalSTCoreParser.g:1741:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordREALKeyword_1_0_12()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordREALKeyword_1_0_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSTCoreParser.g:1746:2: ( LREAL )
                    {
                    // InternalSTCoreParser.g:1746:2: ( LREAL )
                    // InternalSTCoreParser.g:1747:3: LREAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLREALKeyword_1_0_13()); 
                    }
                    match(input,LREAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLREALKeyword_1_0_13()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__KeywordAlternatives_1_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__Alternatives_2"
    // InternalSTCoreParser.g:1756:1: rule__NUMERIC_LITERAL__Alternatives_2 : ( ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) ) | ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) ) | ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) ) );
    public final void rule__NUMERIC_LITERAL__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1760:1: ( ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) ) | ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) ) | ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) ) )
            int alt12=3;
            switch ( input.LA(1) ) {
            case PlusSign:
                {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==RULE_INT) ) {
                    int LA12_3 = input.LA(3);

                    if ( (LA12_3==FullStop) ) {
                        alt12=2;
                    }
                    else if ( (LA12_3==EOF||LA12_3==END_REPEAT||LA12_3==THEN||LA12_3==AND||LA12_3==MOD||(LA12_3>=XOR && LA12_3<=FullStopFullStop)||(LA12_3>=LessThanSignEqualsSign && LA12_3<=GreaterThanSignEqualsSign)||LA12_3==BY||LA12_3==DO||(LA12_3>=OF && LA12_3<=OR)||LA12_3==TO||(LA12_3>=Ampersand && LA12_3<=HyphenMinus)||(LA12_3>=Solidus && LA12_3<=GreaterThanSign)||LA12_3==RightSquareBracket) ) {
                        alt12=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 12, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 1, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA12_2 = input.LA(2);

                if ( (LA12_2==RULE_INT) ) {
                    int LA12_3 = input.LA(3);

                    if ( (LA12_3==FullStop) ) {
                        alt12=2;
                    }
                    else if ( (LA12_3==EOF||LA12_3==END_REPEAT||LA12_3==THEN||LA12_3==AND||LA12_3==MOD||(LA12_3>=XOR && LA12_3<=FullStopFullStop)||(LA12_3>=LessThanSignEqualsSign && LA12_3<=GreaterThanSignEqualsSign)||LA12_3==BY||LA12_3==DO||(LA12_3>=OF && LA12_3<=OR)||LA12_3==TO||(LA12_3>=Ampersand && LA12_3<=HyphenMinus)||(LA12_3>=Solidus && LA12_3<=GreaterThanSign)||LA12_3==RightSquareBracket) ) {
                        alt12=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 12, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                int LA12_3 = input.LA(2);

                if ( (LA12_3==FullStop) ) {
                    alt12=2;
                }
                else if ( (LA12_3==EOF||LA12_3==END_REPEAT||LA12_3==THEN||LA12_3==AND||LA12_3==MOD||(LA12_3>=XOR && LA12_3<=FullStopFullStop)||(LA12_3>=LessThanSignEqualsSign && LA12_3<=GreaterThanSignEqualsSign)||LA12_3==BY||LA12_3==DO||(LA12_3>=OF && LA12_3<=OR)||LA12_3==TO||(LA12_3>=Ampersand && LA12_3<=HyphenMinus)||(LA12_3>=Solidus && LA12_3<=GreaterThanSign)||LA12_3==RightSquareBracket) ) {
                    alt12=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NON_DECIMAL:
                {
                alt12=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalSTCoreParser.g:1761:2: ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) )
                    {
                    // InternalSTCoreParser.g:1761:2: ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) )
                    // InternalSTCoreParser.g:1762:3: ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getIntValueAssignment_2_0()); 
                    }
                    // InternalSTCoreParser.g:1763:3: ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 )
                    // InternalSTCoreParser.g:1763:4: rule__NUMERIC_LITERAL__IntValueAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__IntValueAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getIntValueAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1767:2: ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) )
                    {
                    // InternalSTCoreParser.g:1767:2: ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) )
                    // InternalSTCoreParser.g:1768:3: ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getRealValueAssignment_2_1()); 
                    }
                    // InternalSTCoreParser.g:1769:3: ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 )
                    // InternalSTCoreParser.g:1769:4: rule__NUMERIC_LITERAL__RealValueAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__RealValueAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getRealValueAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1773:2: ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) )
                    {
                    // InternalSTCoreParser.g:1773:2: ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) )
                    // InternalSTCoreParser.g:1774:3: ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getHexValueAssignment_2_2()); 
                    }
                    // InternalSTCoreParser.g:1775:3: ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 )
                    // InternalSTCoreParser.g:1775:4: rule__NUMERIC_LITERAL__HexValueAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__HexValueAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getHexValueAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Alternatives_2"


    // $ANTLR start "rule__DATE_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1783:1: rule__DATE_LITERAL__KeywordAlternatives_0_0 : ( ( DATE ) | ( LDATE ) | ( D ) | ( LD ) );
    public final void rule__DATE_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1787:1: ( ( DATE ) | ( LDATE ) | ( D ) | ( LD ) )
            int alt13=4;
            switch ( input.LA(1) ) {
            case DATE:
                {
                alt13=1;
                }
                break;
            case LDATE:
                {
                alt13=2;
                }
                break;
            case D:
                {
                alt13=3;
                }
                break;
            case LD:
                {
                alt13=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSTCoreParser.g:1788:2: ( DATE )
                    {
                    // InternalSTCoreParser.g:1788:2: ( DATE )
                    // InternalSTCoreParser.g:1789:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordDATEKeyword_0_0_0()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordDATEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1794:2: ( LDATE )
                    {
                    // InternalSTCoreParser.g:1794:2: ( LDATE )
                    // InternalSTCoreParser.g:1795:3: LDATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordLDATEKeyword_0_0_1()); 
                    }
                    match(input,LDATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordLDATEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1800:2: ( D )
                    {
                    // InternalSTCoreParser.g:1800:2: ( D )
                    // InternalSTCoreParser.g:1801:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordDKeyword_0_0_2()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordDKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1806:2: ( LD )
                    {
                    // InternalSTCoreParser.g:1806:2: ( LD )
                    // InternalSTCoreParser.g:1807:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordLDKeyword_0_0_3()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordLDKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__TIME_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1816:1: rule__TIME_LITERAL__KeywordAlternatives_0_0 : ( ( TIME ) | ( LTIME ) | ( T ) | ( LT ) );
    public final void rule__TIME_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1820:1: ( ( TIME ) | ( LTIME ) | ( T ) | ( LT ) )
            int alt14=4;
            switch ( input.LA(1) ) {
            case TIME:
                {
                alt14=1;
                }
                break;
            case LTIME:
                {
                alt14=2;
                }
                break;
            case T:
                {
                alt14=3;
                }
                break;
            case LT:
                {
                alt14=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalSTCoreParser.g:1821:2: ( TIME )
                    {
                    // InternalSTCoreParser.g:1821:2: ( TIME )
                    // InternalSTCoreParser.g:1822:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordTIMEKeyword_0_0_0()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordTIMEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1827:2: ( LTIME )
                    {
                    // InternalSTCoreParser.g:1827:2: ( LTIME )
                    // InternalSTCoreParser.g:1828:3: LTIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordLTIMEKeyword_0_0_1()); 
                    }
                    match(input,LTIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordLTIMEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1833:2: ( T )
                    {
                    // InternalSTCoreParser.g:1833:2: ( T )
                    // InternalSTCoreParser.g:1834:3: T
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordTKeyword_0_0_2()); 
                    }
                    match(input,T,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordTKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1839:2: ( LT )
                    {
                    // InternalSTCoreParser.g:1839:2: ( LT )
                    // InternalSTCoreParser.g:1840:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordLTKeyword_0_0_3()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordLTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1849:1: rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 : ( ( TIME_OF_DAY ) | ( TOD ) | ( LTOD ) );
    public final void rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1853:1: ( ( TIME_OF_DAY ) | ( TOD ) | ( LTOD ) )
            int alt15=3;
            switch ( input.LA(1) ) {
            case TIME_OF_DAY:
                {
                alt15=1;
                }
                break;
            case TOD:
                {
                alt15=2;
                }
                break;
            case LTOD:
                {
                alt15=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalSTCoreParser.g:1854:2: ( TIME_OF_DAY )
                    {
                    // InternalSTCoreParser.g:1854:2: ( TIME_OF_DAY )
                    // InternalSTCoreParser.g:1855:3: TIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTIME_OF_DAYKeyword_0_0_0()); 
                    }
                    match(input,TIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTIME_OF_DAYKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1860:2: ( TOD )
                    {
                    // InternalSTCoreParser.g:1860:2: ( TOD )
                    // InternalSTCoreParser.g:1861:3: TOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTODKeyword_0_0_1()); 
                    }
                    match(input,TOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTODKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1866:2: ( LTOD )
                    {
                    // InternalSTCoreParser.g:1866:2: ( LTOD )
                    // InternalSTCoreParser.g:1867:3: LTOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordLTODKeyword_0_0_2()); 
                    }
                    match(input,LTOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordLTODKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1876:1: rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 : ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) );
    public final void rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1880:1: ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) )
            int alt16=4;
            switch ( input.LA(1) ) {
            case DATE_AND_TIME:
                {
                alt16=1;
                }
                break;
            case LDATE_AND_TIME:
                {
                alt16=2;
                }
                break;
            case DT:
                {
                alt16=3;
                }
                break;
            case LDT:
                {
                alt16=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalSTCoreParser.g:1881:2: ( DATE_AND_TIME )
                    {
                    // InternalSTCoreParser.g:1881:2: ( DATE_AND_TIME )
                    // InternalSTCoreParser.g:1882:3: DATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDATE_AND_TIMEKeyword_0_0_0()); 
                    }
                    match(input,DATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDATE_AND_TIMEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1887:2: ( LDATE_AND_TIME )
                    {
                    // InternalSTCoreParser.g:1887:2: ( LDATE_AND_TIME )
                    // InternalSTCoreParser.g:1888:3: LDATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDATE_AND_TIMEKeyword_0_0_1()); 
                    }
                    match(input,LDATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDATE_AND_TIMEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1893:2: ( DT )
                    {
                    // InternalSTCoreParser.g:1893:2: ( DT )
                    // InternalSTCoreParser.g:1894:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDTKeyword_0_0_2()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDTKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1899:2: ( LDT )
                    {
                    // InternalSTCoreParser.g:1899:2: ( LDT )
                    // InternalSTCoreParser.g:1900:3: LDT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDTKeyword_0_0_3()); 
                    }
                    match(input,LDT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__STRING_LITERAL__Alternatives_0"
    // InternalSTCoreParser.g:1909:1: rule__STRING_LITERAL__Alternatives_0 : ( ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) );
    public final void rule__STRING_LITERAL__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1913:1: ( ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) )
            int alt17=4;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt17=1;
                }
                break;
            case WSTRING:
                {
                alt17=2;
                }
                break;
            case CHAR:
                {
                alt17=3;
                }
                break;
            case WCHAR:
                {
                alt17=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalSTCoreParser.g:1914:2: ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) )
                    {
                    // InternalSTCoreParser.g:1914:2: ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) )
                    // InternalSTCoreParser.g:1915:3: ( rule__STRING_LITERAL__KeywordAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getKeywordAssignment_0_0()); 
                    }
                    // InternalSTCoreParser.g:1916:3: ( rule__STRING_LITERAL__KeywordAssignment_0_0 )
                    // InternalSTCoreParser.g:1916:4: rule__STRING_LITERAL__KeywordAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STRING_LITERAL__KeywordAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getKeywordAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1920:2: ( WSTRING )
                    {
                    // InternalSTCoreParser.g:1920:2: ( WSTRING )
                    // InternalSTCoreParser.g:1921:3: WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getWSTRINGKeyword_0_1()); 
                    }
                    match(input,WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getWSTRINGKeyword_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1926:2: ( CHAR )
                    {
                    // InternalSTCoreParser.g:1926:2: ( CHAR )
                    // InternalSTCoreParser.g:1927:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getCHARKeyword_0_2()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getCHARKeyword_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1932:2: ( WCHAR )
                    {
                    // InternalSTCoreParser.g:1932:2: ( WCHAR )
                    // InternalSTCoreParser.g:1933:3: WCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getWCHARKeyword_0_3()); 
                    }
                    match(input,WCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getWCHARKeyword_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Alternatives_0"


    // $ANTLR start "rule__INTEGER__Alternatives_0"
    // InternalSTCoreParser.g:1942:1: rule__INTEGER__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__INTEGER__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1946:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==PlusSign) ) {
                alt18=1;
            }
            else if ( (LA18_0==HyphenMinus) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSTCoreParser.g:1947:2: ( PlusSign )
                    {
                    // InternalSTCoreParser.g:1947:2: ( PlusSign )
                    // InternalSTCoreParser.g:1948:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getINTEGERAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getINTEGERAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1953:2: ( HyphenMinus )
                    {
                    // InternalSTCoreParser.g:1953:2: ( HyphenMinus )
                    // InternalSTCoreParser.g:1954:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getINTEGERAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getINTEGERAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Alternatives_0"


    // $ANTLR start "rule__REAL__Alternatives_2"
    // InternalSTCoreParser.g:1963:1: rule__REAL__Alternatives_2 : ( ( RULE_EXT_INT ) | ( RULE_INT ) );
    public final void rule__REAL__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1967:1: ( ( RULE_EXT_INT ) | ( RULE_INT ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_EXT_INT) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_INT) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalSTCoreParser.g:1968:2: ( RULE_EXT_INT )
                    {
                    // InternalSTCoreParser.g:1968:2: ( RULE_EXT_INT )
                    // InternalSTCoreParser.g:1969:3: RULE_EXT_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_EXT_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1974:2: ( RULE_INT )
                    {
                    // InternalSTCoreParser.g:1974:2: ( RULE_INT )
                    // InternalSTCoreParser.g:1975:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Alternatives_2"


    // $ANTLR start "rule__AndOperator__Alternatives"
    // InternalSTCoreParser.g:1984:1: rule__AndOperator__Alternatives : ( ( ( AND ) ) | ( ( Ampersand ) ) );
    public final void rule__AndOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1988:1: ( ( ( AND ) ) | ( ( Ampersand ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==AND) ) {
                alt20=1;
            }
            else if ( (LA20_0==Ampersand) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalSTCoreParser.g:1989:2: ( ( AND ) )
                    {
                    // InternalSTCoreParser.g:1989:2: ( ( AND ) )
                    // InternalSTCoreParser.g:1990:3: ( AND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:1991:3: ( AND )
                    // InternalSTCoreParser.g:1991:4: AND
                    {
                    match(input,AND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1995:2: ( ( Ampersand ) )
                    {
                    // InternalSTCoreParser.g:1995:2: ( ( Ampersand ) )
                    // InternalSTCoreParser.g:1996:3: ( Ampersand )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:1997:3: ( Ampersand )
                    // InternalSTCoreParser.g:1997:4: Ampersand
                    {
                    match(input,Ampersand,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndOperator__Alternatives"


    // $ANTLR start "rule__EqualityOperator__Alternatives"
    // InternalSTCoreParser.g:2005:1: rule__EqualityOperator__Alternatives : ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) );
    public final void rule__EqualityOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2009:1: ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==EqualsSign) ) {
                alt21=1;
            }
            else if ( (LA21_0==LessThanSignGreaterThanSign) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalSTCoreParser.g:2010:2: ( ( EqualsSign ) )
                    {
                    // InternalSTCoreParser.g:2010:2: ( ( EqualsSign ) )
                    // InternalSTCoreParser.g:2011:3: ( EqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2012:3: ( EqualsSign )
                    // InternalSTCoreParser.g:2012:4: EqualsSign
                    {
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2016:2: ( ( LessThanSignGreaterThanSign ) )
                    {
                    // InternalSTCoreParser.g:2016:2: ( ( LessThanSignGreaterThanSign ) )
                    // InternalSTCoreParser.g:2017:3: ( LessThanSignGreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2018:3: ( LessThanSignGreaterThanSign )
                    // InternalSTCoreParser.g:2018:4: LessThanSignGreaterThanSign
                    {
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityOperator__Alternatives"


    // $ANTLR start "rule__CompareOperator__Alternatives"
    // InternalSTCoreParser.g:2026:1: rule__CompareOperator__Alternatives : ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) );
    public final void rule__CompareOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2030:1: ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) )
            int alt22=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt22=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt22=2;
                }
                break;
            case GreaterThanSign:
                {
                alt22=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt22=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSTCoreParser.g:2031:2: ( ( LessThanSign ) )
                    {
                    // InternalSTCoreParser.g:2031:2: ( ( LessThanSign ) )
                    // InternalSTCoreParser.g:2032:3: ( LessThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2033:3: ( LessThanSign )
                    // InternalSTCoreParser.g:2033:4: LessThanSign
                    {
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2037:2: ( ( LessThanSignEqualsSign ) )
                    {
                    // InternalSTCoreParser.g:2037:2: ( ( LessThanSignEqualsSign ) )
                    // InternalSTCoreParser.g:2038:3: ( LessThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2039:3: ( LessThanSignEqualsSign )
                    // InternalSTCoreParser.g:2039:4: LessThanSignEqualsSign
                    {
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:2043:2: ( ( GreaterThanSign ) )
                    {
                    // InternalSTCoreParser.g:2043:2: ( ( GreaterThanSign ) )
                    // InternalSTCoreParser.g:2044:3: ( GreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:2045:3: ( GreaterThanSign )
                    // InternalSTCoreParser.g:2045:4: GreaterThanSign
                    {
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:2049:2: ( ( GreaterThanSignEqualsSign ) )
                    {
                    // InternalSTCoreParser.g:2049:2: ( ( GreaterThanSignEqualsSign ) )
                    // InternalSTCoreParser.g:2050:3: ( GreaterThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTCoreParser.g:2051:3: ( GreaterThanSignEqualsSign )
                    // InternalSTCoreParser.g:2051:4: GreaterThanSignEqualsSign
                    {
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperator__Alternatives"


    // $ANTLR start "rule__AddSubOperator__Alternatives"
    // InternalSTCoreParser.g:2059:1: rule__AddSubOperator__Alternatives : ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) );
    public final void rule__AddSubOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2063:1: ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==PlusSign) ) {
                alt23=1;
            }
            else if ( (LA23_0==HyphenMinus) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalSTCoreParser.g:2064:2: ( ( PlusSign ) )
                    {
                    // InternalSTCoreParser.g:2064:2: ( ( PlusSign ) )
                    // InternalSTCoreParser.g:2065:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2066:3: ( PlusSign )
                    // InternalSTCoreParser.g:2066:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2070:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTCoreParser.g:2070:2: ( ( HyphenMinus ) )
                    // InternalSTCoreParser.g:2071:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2072:3: ( HyphenMinus )
                    // InternalSTCoreParser.g:2072:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddSubOperator__Alternatives"


    // $ANTLR start "rule__MulDivModOperator__Alternatives"
    // InternalSTCoreParser.g:2080:1: rule__MulDivModOperator__Alternatives : ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) );
    public final void rule__MulDivModOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2084:1: ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt24=1;
                }
                break;
            case Solidus:
                {
                alt24=2;
                }
                break;
            case MOD:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSTCoreParser.g:2085:2: ( ( Asterisk ) )
                    {
                    // InternalSTCoreParser.g:2085:2: ( ( Asterisk ) )
                    // InternalSTCoreParser.g:2086:3: ( Asterisk )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2087:3: ( Asterisk )
                    // InternalSTCoreParser.g:2087:4: Asterisk
                    {
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2091:2: ( ( Solidus ) )
                    {
                    // InternalSTCoreParser.g:2091:2: ( ( Solidus ) )
                    // InternalSTCoreParser.g:2092:3: ( Solidus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2093:3: ( Solidus )
                    // InternalSTCoreParser.g:2093:4: Solidus
                    {
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:2097:2: ( ( MOD ) )
                    {
                    // InternalSTCoreParser.g:2097:2: ( ( MOD ) )
                    // InternalSTCoreParser.g:2098:3: ( MOD )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:2099:3: ( MOD )
                    // InternalSTCoreParser.g:2099:4: MOD
                    {
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulDivModOperator__Alternatives"


    // $ANTLR start "rule__UnaryOperator__Alternatives"
    // InternalSTCoreParser.g:2107:1: rule__UnaryOperator__Alternatives : ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) );
    public final void rule__UnaryOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2111:1: ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) )
            int alt25=3;
            switch ( input.LA(1) ) {
            case HyphenMinus:
                {
                alt25=1;
                }
                break;
            case PlusSign:
                {
                alt25=2;
                }
                break;
            case NOT:
                {
                alt25=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalSTCoreParser.g:2112:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTCoreParser.g:2112:2: ( ( HyphenMinus ) )
                    // InternalSTCoreParser.g:2113:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2114:3: ( HyphenMinus )
                    // InternalSTCoreParser.g:2114:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2118:2: ( ( PlusSign ) )
                    {
                    // InternalSTCoreParser.g:2118:2: ( ( PlusSign ) )
                    // InternalSTCoreParser.g:2119:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2120:3: ( PlusSign )
                    // InternalSTCoreParser.g:2120:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:2124:2: ( ( NOT ) )
                    {
                    // InternalSTCoreParser.g:2124:2: ( ( NOT ) )
                    // InternalSTCoreParser.g:2125:3: ( NOT )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:2126:3: ( NOT )
                    // InternalSTCoreParser.g:2126:4: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOperator__Alternatives"


    // $ANTLR start "rule__MultiBitAccessSpecifier__Alternatives"
    // InternalSTCoreParser.g:2134:1: rule__MultiBitAccessSpecifier__Alternatives : ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) | ( ( FullStop ) ) );
    public final void rule__MultiBitAccessSpecifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2138:1: ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) | ( ( FullStop ) ) )
            int alt26=6;
            switch ( input.LA(1) ) {
            case L:
                {
                alt26=1;
                }
                break;
            case D_1:
                {
                alt26=2;
                }
                break;
            case W:
                {
                alt26=3;
                }
                break;
            case B:
                {
                alt26=4;
                }
                break;
            case X:
                {
                alt26=5;
                }
                break;
            case FullStop:
                {
                alt26=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalSTCoreParser.g:2139:2: ( ( L ) )
                    {
                    // InternalSTCoreParser.g:2139:2: ( ( L ) )
                    // InternalSTCoreParser.g:2140:3: ( L )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getLwordAccessEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2141:3: ( L )
                    // InternalSTCoreParser.g:2141:4: L
                    {
                    match(input,L,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getLwordAccessEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2145:2: ( ( D_1 ) )
                    {
                    // InternalSTCoreParser.g:2145:2: ( ( D_1 ) )
                    // InternalSTCoreParser.g:2146:3: ( D_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getDwordAccessEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2147:3: ( D_1 )
                    // InternalSTCoreParser.g:2147:4: D_1
                    {
                    match(input,D_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getDwordAccessEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:2151:2: ( ( W ) )
                    {
                    // InternalSTCoreParser.g:2151:2: ( ( W ) )
                    // InternalSTCoreParser.g:2152:3: ( W )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getWordAccessEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:2153:3: ( W )
                    // InternalSTCoreParser.g:2153:4: W
                    {
                    match(input,W,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getWordAccessEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:2157:2: ( ( B ) )
                    {
                    // InternalSTCoreParser.g:2157:2: ( ( B ) )
                    // InternalSTCoreParser.g:2158:3: ( B )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getByteAccessEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTCoreParser.g:2159:3: ( B )
                    // InternalSTCoreParser.g:2159:4: B
                    {
                    match(input,B,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getByteAccessEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:2163:2: ( ( X ) )
                    {
                    // InternalSTCoreParser.g:2163:2: ( ( X ) )
                    // InternalSTCoreParser.g:2164:3: ( X )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessEnumLiteralDeclaration_4()); 
                    }
                    // InternalSTCoreParser.g:2165:3: ( X )
                    // InternalSTCoreParser.g:2165:4: X
                    {
                    match(input,X,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:2169:2: ( ( FullStop ) )
                    {
                    // InternalSTCoreParser.g:2169:2: ( ( FullStop ) )
                    // InternalSTCoreParser.g:2170:3: ( FullStop )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessShortcutEnumLiteralDeclaration_5()); 
                    }
                    // InternalSTCoreParser.g:2171:3: ( FullStop )
                    // InternalSTCoreParser.g:2171:4: FullStop
                    {
                    match(input,FullStop,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessShortcutEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiBitAccessSpecifier__Alternatives"


    // $ANTLR start "rule__VarDeclaration__Group__0"
    // InternalSTCoreParser.g:2179:1: rule__VarDeclaration__Group__0 : rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 ;
    public final void rule__VarDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2183:1: ( rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 )
            // InternalSTCoreParser.g:2184:2: rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__VarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0"


    // $ANTLR start "rule__VarDeclaration__Group__0__Impl"
    // InternalSTCoreParser.g:2191:1: rule__VarDeclaration__Group__0__Impl : ( ( rule__VarDeclaration__NameAssignment_0 ) ) ;
    public final void rule__VarDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2195:1: ( ( ( rule__VarDeclaration__NameAssignment_0 ) ) )
            // InternalSTCoreParser.g:2196:1: ( ( rule__VarDeclaration__NameAssignment_0 ) )
            {
            // InternalSTCoreParser.g:2196:1: ( ( rule__VarDeclaration__NameAssignment_0 ) )
            // InternalSTCoreParser.g:2197:2: ( rule__VarDeclaration__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameAssignment_0()); 
            }
            // InternalSTCoreParser.g:2198:2: ( rule__VarDeclaration__NameAssignment_0 )
            // InternalSTCoreParser.g:2198:3: rule__VarDeclaration__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__1"
    // InternalSTCoreParser.g:2206:1: rule__VarDeclaration__Group__1 : rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 ;
    public final void rule__VarDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2210:1: ( rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 )
            // InternalSTCoreParser.g:2211:2: rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__VarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1"


    // $ANTLR start "rule__VarDeclaration__Group__1__Impl"
    // InternalSTCoreParser.g:2218:1: rule__VarDeclaration__Group__1__Impl : ( ( rule__VarDeclaration__Group_1__0 )? ) ;
    public final void rule__VarDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2222:1: ( ( ( rule__VarDeclaration__Group_1__0 )? ) )
            // InternalSTCoreParser.g:2223:1: ( ( rule__VarDeclaration__Group_1__0 )? )
            {
            // InternalSTCoreParser.g:2223:1: ( ( rule__VarDeclaration__Group_1__0 )? )
            // InternalSTCoreParser.g:2224:2: ( rule__VarDeclaration__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:2225:2: ( rule__VarDeclaration__Group_1__0 )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==AT) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalSTCoreParser.g:2225:3: rule__VarDeclaration__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__2"
    // InternalSTCoreParser.g:2233:1: rule__VarDeclaration__Group__2 : rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 ;
    public final void rule__VarDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2237:1: ( rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 )
            // InternalSTCoreParser.g:2238:2: rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__VarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2"


    // $ANTLR start "rule__VarDeclaration__Group__2__Impl"
    // InternalSTCoreParser.g:2245:1: rule__VarDeclaration__Group__2__Impl : ( Colon ) ;
    public final void rule__VarDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2249:1: ( ( Colon ) )
            // InternalSTCoreParser.g:2250:1: ( Colon )
            {
            // InternalSTCoreParser.g:2250:1: ( Colon )
            // InternalSTCoreParser.g:2251:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__3"
    // InternalSTCoreParser.g:2260:1: rule__VarDeclaration__Group__3 : rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 ;
    public final void rule__VarDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2264:1: ( rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 )
            // InternalSTCoreParser.g:2265:2: rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__VarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3"


    // $ANTLR start "rule__VarDeclaration__Group__3__Impl"
    // InternalSTCoreParser.g:2272:1: rule__VarDeclaration__Group__3__Impl : ( ( rule__VarDeclaration__Group_3__0 )? ) ;
    public final void rule__VarDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2276:1: ( ( ( rule__VarDeclaration__Group_3__0 )? ) )
            // InternalSTCoreParser.g:2277:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            {
            // InternalSTCoreParser.g:2277:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            // InternalSTCoreParser.g:2278:2: ( rule__VarDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }
            // InternalSTCoreParser.g:2279:2: ( rule__VarDeclaration__Group_3__0 )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==ARRAY) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalSTCoreParser.g:2279:3: rule__VarDeclaration__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__4"
    // InternalSTCoreParser.g:2287:1: rule__VarDeclaration__Group__4 : rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 ;
    public final void rule__VarDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2291:1: ( rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 )
            // InternalSTCoreParser.g:2292:2: rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4"


    // $ANTLR start "rule__VarDeclaration__Group__4__Impl"
    // InternalSTCoreParser.g:2299:1: rule__VarDeclaration__Group__4__Impl : ( ( rule__VarDeclaration__TypeAssignment_4 ) ) ;
    public final void rule__VarDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2303:1: ( ( ( rule__VarDeclaration__TypeAssignment_4 ) ) )
            // InternalSTCoreParser.g:2304:1: ( ( rule__VarDeclaration__TypeAssignment_4 ) )
            {
            // InternalSTCoreParser.g:2304:1: ( ( rule__VarDeclaration__TypeAssignment_4 ) )
            // InternalSTCoreParser.g:2305:2: ( rule__VarDeclaration__TypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_4()); 
            }
            // InternalSTCoreParser.g:2306:2: ( rule__VarDeclaration__TypeAssignment_4 )
            // InternalSTCoreParser.g:2306:3: rule__VarDeclaration__TypeAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__TypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__5"
    // InternalSTCoreParser.g:2314:1: rule__VarDeclaration__Group__5 : rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 ;
    public final void rule__VarDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2318:1: ( rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 )
            // InternalSTCoreParser.g:2319:2: rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5"


    // $ANTLR start "rule__VarDeclaration__Group__5__Impl"
    // InternalSTCoreParser.g:2326:1: rule__VarDeclaration__Group__5__Impl : ( ( rule__VarDeclaration__Group_5__0 )? ) ;
    public final void rule__VarDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2330:1: ( ( ( rule__VarDeclaration__Group_5__0 )? ) )
            // InternalSTCoreParser.g:2331:1: ( ( rule__VarDeclaration__Group_5__0 )? )
            {
            // InternalSTCoreParser.g:2331:1: ( ( rule__VarDeclaration__Group_5__0 )? )
            // InternalSTCoreParser.g:2332:2: ( rule__VarDeclaration__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_5()); 
            }
            // InternalSTCoreParser.g:2333:2: ( rule__VarDeclaration__Group_5__0 )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==LeftSquareBracket) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalSTCoreParser.g:2333:3: rule__VarDeclaration__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__6"
    // InternalSTCoreParser.g:2341:1: rule__VarDeclaration__Group__6 : rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 ;
    public final void rule__VarDeclaration__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2345:1: ( rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 )
            // InternalSTCoreParser.g:2346:2: rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6"


    // $ANTLR start "rule__VarDeclaration__Group__6__Impl"
    // InternalSTCoreParser.g:2353:1: rule__VarDeclaration__Group__6__Impl : ( ( rule__VarDeclaration__Group_6__0 )? ) ;
    public final void rule__VarDeclaration__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2357:1: ( ( ( rule__VarDeclaration__Group_6__0 )? ) )
            // InternalSTCoreParser.g:2358:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            {
            // InternalSTCoreParser.g:2358:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            // InternalSTCoreParser.g:2359:2: ( rule__VarDeclaration__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }
            // InternalSTCoreParser.g:2360:2: ( rule__VarDeclaration__Group_6__0 )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==ColonEqualsSign) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalSTCoreParser.g:2360:3: rule__VarDeclaration__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__7"
    // InternalSTCoreParser.g:2368:1: rule__VarDeclaration__Group__7 : rule__VarDeclaration__Group__7__Impl ;
    public final void rule__VarDeclaration__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2372:1: ( rule__VarDeclaration__Group__7__Impl )
            // InternalSTCoreParser.g:2373:2: rule__VarDeclaration__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7"


    // $ANTLR start "rule__VarDeclaration__Group__7__Impl"
    // InternalSTCoreParser.g:2379:1: rule__VarDeclaration__Group__7__Impl : ( Semicolon ) ;
    public final void rule__VarDeclaration__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2383:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:2384:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:2384:1: ( Semicolon )
            // InternalSTCoreParser.g:2385:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_7()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_1__0"
    // InternalSTCoreParser.g:2395:1: rule__VarDeclaration__Group_1__0 : rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1 ;
    public final void rule__VarDeclaration__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2399:1: ( rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1 )
            // InternalSTCoreParser.g:2400:2: rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__VarDeclaration__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__0"


    // $ANTLR start "rule__VarDeclaration__Group_1__0__Impl"
    // InternalSTCoreParser.g:2407:1: rule__VarDeclaration__Group_1__0__Impl : ( AT ) ;
    public final void rule__VarDeclaration__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2411:1: ( ( AT ) )
            // InternalSTCoreParser.g:2412:1: ( AT )
            {
            // InternalSTCoreParser.g:2412:1: ( AT )
            // InternalSTCoreParser.g:2413:2: AT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getATKeyword_1_0()); 
            }
            match(input,AT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getATKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_1__1"
    // InternalSTCoreParser.g:2422:1: rule__VarDeclaration__Group_1__1 : rule__VarDeclaration__Group_1__1__Impl ;
    public final void rule__VarDeclaration__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2426:1: ( rule__VarDeclaration__Group_1__1__Impl )
            // InternalSTCoreParser.g:2427:2: rule__VarDeclaration__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__1"


    // $ANTLR start "rule__VarDeclaration__Group_1__1__Impl"
    // InternalSTCoreParser.g:2433:1: rule__VarDeclaration__Group_1__1__Impl : ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) ) ;
    public final void rule__VarDeclaration__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2437:1: ( ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:2438:1: ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:2438:1: ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) )
            // InternalSTCoreParser.g:2439:2: ( rule__VarDeclaration__LocatedAtAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:2440:2: ( rule__VarDeclaration__LocatedAtAssignment_1_1 )
            // InternalSTCoreParser.g:2440:3: rule__VarDeclaration__LocatedAtAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__LocatedAtAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__0"
    // InternalSTCoreParser.g:2449:1: rule__VarDeclaration__Group_3__0 : rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 ;
    public final void rule__VarDeclaration__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2453:1: ( rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 )
            // InternalSTCoreParser.g:2454:2: rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1
            {
            pushFollow(FOLLOW_8);
            rule__VarDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0"


    // $ANTLR start "rule__VarDeclaration__Group_3__0__Impl"
    // InternalSTCoreParser.g:2461:1: rule__VarDeclaration__Group_3__0__Impl : ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) ) ;
    public final void rule__VarDeclaration__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2465:1: ( ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) ) )
            // InternalSTCoreParser.g:2466:1: ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) )
            {
            // InternalSTCoreParser.g:2466:1: ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) )
            // InternalSTCoreParser.g:2467:2: ( rule__VarDeclaration__ArrayAssignment_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayAssignment_3_0()); 
            }
            // InternalSTCoreParser.g:2468:2: ( rule__VarDeclaration__ArrayAssignment_3_0 )
            // InternalSTCoreParser.g:2468:3: rule__VarDeclaration__ArrayAssignment_3_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__ArrayAssignment_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayAssignment_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__1"
    // InternalSTCoreParser.g:2476:1: rule__VarDeclaration__Group_3__1 : rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2 ;
    public final void rule__VarDeclaration__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2480:1: ( rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2 )
            // InternalSTCoreParser.g:2481:2: rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2
            {
            pushFollow(FOLLOW_9);
            rule__VarDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1"


    // $ANTLR start "rule__VarDeclaration__Group_3__1__Impl"
    // InternalSTCoreParser.g:2488:1: rule__VarDeclaration__Group_3__1__Impl : ( ( rule__VarDeclaration__Alternatives_3_1 ) ) ;
    public final void rule__VarDeclaration__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2492:1: ( ( ( rule__VarDeclaration__Alternatives_3_1 ) ) )
            // InternalSTCoreParser.g:2493:1: ( ( rule__VarDeclaration__Alternatives_3_1 ) )
            {
            // InternalSTCoreParser.g:2493:1: ( ( rule__VarDeclaration__Alternatives_3_1 ) )
            // InternalSTCoreParser.g:2494:2: ( rule__VarDeclaration__Alternatives_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getAlternatives_3_1()); 
            }
            // InternalSTCoreParser.g:2495:2: ( rule__VarDeclaration__Alternatives_3_1 )
            // InternalSTCoreParser.g:2495:3: rule__VarDeclaration__Alternatives_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Alternatives_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getAlternatives_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__2"
    // InternalSTCoreParser.g:2503:1: rule__VarDeclaration__Group_3__2 : rule__VarDeclaration__Group_3__2__Impl ;
    public final void rule__VarDeclaration__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2507:1: ( rule__VarDeclaration__Group_3__2__Impl )
            // InternalSTCoreParser.g:2508:2: rule__VarDeclaration__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__2"


    // $ANTLR start "rule__VarDeclaration__Group_3__2__Impl"
    // InternalSTCoreParser.g:2514:1: rule__VarDeclaration__Group_3__2__Impl : ( OF ) ;
    public final void rule__VarDeclaration__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2518:1: ( ( OF ) )
            // InternalSTCoreParser.g:2519:1: ( OF )
            {
            // InternalSTCoreParser.g:2519:1: ( OF )
            // InternalSTCoreParser.g:2520:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getOFKeyword_3_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getOFKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__0"
    // InternalSTCoreParser.g:2530:1: rule__VarDeclaration__Group_3_1_0__0 : rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1 ;
    public final void rule__VarDeclaration__Group_3_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2534:1: ( rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1 )
            // InternalSTCoreParser.g:2535:2: rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclaration__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__0__Impl"
    // InternalSTCoreParser.g:2542:1: rule__VarDeclaration__Group_3_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2546:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2547:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2547:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2548:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__1"
    // InternalSTCoreParser.g:2557:1: rule__VarDeclaration__Group_3_1_0__1 : rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2 ;
    public final void rule__VarDeclaration__Group_3_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2561:1: ( rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2 )
            // InternalSTCoreParser.g:2562:2: rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__1__Impl"
    // InternalSTCoreParser.g:2569:1: rule__VarDeclaration__Group_3_1_0__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2573:1: ( ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) ) )
            // InternalSTCoreParser.g:2574:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) )
            {
            // InternalSTCoreParser.g:2574:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) )
            // InternalSTCoreParser.g:2575:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_1()); 
            }
            // InternalSTCoreParser.g:2576:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_1 )
            // InternalSTCoreParser.g:2576:3: rule__VarDeclaration__RangesAssignment_3_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_3_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__2"
    // InternalSTCoreParser.g:2584:1: rule__VarDeclaration__Group_3_1_0__2 : rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3 ;
    public final void rule__VarDeclaration__Group_3_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2588:1: ( rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3 )
            // InternalSTCoreParser.g:2589:2: rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__2"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__2__Impl"
    // InternalSTCoreParser.g:2596:1: rule__VarDeclaration__Group_3_1_0__2__Impl : ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_3_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2600:1: ( ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* ) )
            // InternalSTCoreParser.g:2601:1: ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* )
            {
            // InternalSTCoreParser.g:2601:1: ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* )
            // InternalSTCoreParser.g:2602:2: ( rule__VarDeclaration__Group_3_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0_2()); 
            }
            // InternalSTCoreParser.g:2603:2: ( rule__VarDeclaration__Group_3_1_0_2__0 )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==Comma) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalSTCoreParser.g:2603:3: rule__VarDeclaration__Group_3_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__VarDeclaration__Group_3_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__3"
    // InternalSTCoreParser.g:2611:1: rule__VarDeclaration__Group_3_1_0__3 : rule__VarDeclaration__Group_3_1_0__3__Impl ;
    public final void rule__VarDeclaration__Group_3_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2615:1: ( rule__VarDeclaration__Group_3_1_0__3__Impl )
            // InternalSTCoreParser.g:2616:2: rule__VarDeclaration__Group_3_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__3"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__3__Impl"
    // InternalSTCoreParser.g:2622:1: rule__VarDeclaration__Group_3_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2626:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2627:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2627:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2628:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__0"
    // InternalSTCoreParser.g:2638:1: rule__VarDeclaration__Group_3_1_0_2__0 : rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1 ;
    public final void rule__VarDeclaration__Group_3_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2642:1: ( rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1 )
            // InternalSTCoreParser.g:2643:2: rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclaration__Group_3_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__0__Impl"
    // InternalSTCoreParser.g:2650:1: rule__VarDeclaration__Group_3_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_3_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2654:1: ( ( Comma ) )
            // InternalSTCoreParser.g:2655:1: ( Comma )
            {
            // InternalSTCoreParser.g:2655:1: ( Comma )
            // InternalSTCoreParser.g:2656:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__1"
    // InternalSTCoreParser.g:2665:1: rule__VarDeclaration__Group_3_1_0_2__1 : rule__VarDeclaration__Group_3_1_0_2__1__Impl ;
    public final void rule__VarDeclaration__Group_3_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2669:1: ( rule__VarDeclaration__Group_3_1_0_2__1__Impl )
            // InternalSTCoreParser.g:2670:2: rule__VarDeclaration__Group_3_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__1__Impl"
    // InternalSTCoreParser.g:2676:1: rule__VarDeclaration__Group_3_1_0_2__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2680:1: ( ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) ) )
            // InternalSTCoreParser.g:2681:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) )
            {
            // InternalSTCoreParser.g:2681:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) )
            // InternalSTCoreParser.g:2682:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_2_1()); 
            }
            // InternalSTCoreParser.g:2683:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 )
            // InternalSTCoreParser.g:2683:3: rule__VarDeclaration__RangesAssignment_3_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_3_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__0"
    // InternalSTCoreParser.g:2692:1: rule__VarDeclaration__Group_3_1_1__0 : rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1 ;
    public final void rule__VarDeclaration__Group_3_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2696:1: ( rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1 )
            // InternalSTCoreParser.g:2697:2: rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__VarDeclaration__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__0__Impl"
    // InternalSTCoreParser.g:2704:1: rule__VarDeclaration__Group_3_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2708:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2709:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2709:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2710:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__1"
    // InternalSTCoreParser.g:2719:1: rule__VarDeclaration__Group_3_1_1__1 : rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2 ;
    public final void rule__VarDeclaration__Group_3_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2723:1: ( rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2 )
            // InternalSTCoreParser.g:2724:2: rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__1__Impl"
    // InternalSTCoreParser.g:2731:1: rule__VarDeclaration__Group_3_1_1__1__Impl : ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2735:1: ( ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) ) )
            // InternalSTCoreParser.g:2736:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) )
            {
            // InternalSTCoreParser.g:2736:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) )
            // InternalSTCoreParser.g:2737:2: ( rule__VarDeclaration__CountAssignment_3_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_1()); 
            }
            // InternalSTCoreParser.g:2738:2: ( rule__VarDeclaration__CountAssignment_3_1_1_1 )
            // InternalSTCoreParser.g:2738:3: rule__VarDeclaration__CountAssignment_3_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_3_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__2"
    // InternalSTCoreParser.g:2746:1: rule__VarDeclaration__Group_3_1_1__2 : rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3 ;
    public final void rule__VarDeclaration__Group_3_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2750:1: ( rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3 )
            // InternalSTCoreParser.g:2751:2: rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__2"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__2__Impl"
    // InternalSTCoreParser.g:2758:1: rule__VarDeclaration__Group_3_1_1__2__Impl : ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_3_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2762:1: ( ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* ) )
            // InternalSTCoreParser.g:2763:1: ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* )
            {
            // InternalSTCoreParser.g:2763:1: ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* )
            // InternalSTCoreParser.g:2764:2: ( rule__VarDeclaration__Group_3_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1_2()); 
            }
            // InternalSTCoreParser.g:2765:2: ( rule__VarDeclaration__Group_3_1_1_2__0 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==Comma) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalSTCoreParser.g:2765:3: rule__VarDeclaration__Group_3_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__VarDeclaration__Group_3_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__3"
    // InternalSTCoreParser.g:2773:1: rule__VarDeclaration__Group_3_1_1__3 : rule__VarDeclaration__Group_3_1_1__3__Impl ;
    public final void rule__VarDeclaration__Group_3_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2777:1: ( rule__VarDeclaration__Group_3_1_1__3__Impl )
            // InternalSTCoreParser.g:2778:2: rule__VarDeclaration__Group_3_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__3"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__3__Impl"
    // InternalSTCoreParser.g:2784:1: rule__VarDeclaration__Group_3_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2788:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2789:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2789:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2790:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__0"
    // InternalSTCoreParser.g:2800:1: rule__VarDeclaration__Group_3_1_1_2__0 : rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1 ;
    public final void rule__VarDeclaration__Group_3_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2804:1: ( rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1 )
            // InternalSTCoreParser.g:2805:2: rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1
            {
            pushFollow(FOLLOW_13);
            rule__VarDeclaration__Group_3_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__0__Impl"
    // InternalSTCoreParser.g:2812:1: rule__VarDeclaration__Group_3_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_3_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2816:1: ( ( Comma ) )
            // InternalSTCoreParser.g:2817:1: ( Comma )
            {
            // InternalSTCoreParser.g:2817:1: ( Comma )
            // InternalSTCoreParser.g:2818:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__1"
    // InternalSTCoreParser.g:2827:1: rule__VarDeclaration__Group_3_1_1_2__1 : rule__VarDeclaration__Group_3_1_1_2__1__Impl ;
    public final void rule__VarDeclaration__Group_3_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2831:1: ( rule__VarDeclaration__Group_3_1_1_2__1__Impl )
            // InternalSTCoreParser.g:2832:2: rule__VarDeclaration__Group_3_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__1__Impl"
    // InternalSTCoreParser.g:2838:1: rule__VarDeclaration__Group_3_1_1_2__1__Impl : ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2842:1: ( ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) ) )
            // InternalSTCoreParser.g:2843:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) )
            {
            // InternalSTCoreParser.g:2843:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) )
            // InternalSTCoreParser.g:2844:2: ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_2_1()); 
            }
            // InternalSTCoreParser.g:2845:2: ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 )
            // InternalSTCoreParser.g:2845:3: rule__VarDeclaration__CountAssignment_3_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_3_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__0"
    // InternalSTCoreParser.g:2854:1: rule__VarDeclaration__Group_5__0 : rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1 ;
    public final void rule__VarDeclaration__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2858:1: ( rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1 )
            // InternalSTCoreParser.g:2859:2: rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclaration__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__0"


    // $ANTLR start "rule__VarDeclaration__Group_5__0__Impl"
    // InternalSTCoreParser.g:2866:1: rule__VarDeclaration__Group_5__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2870:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2871:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2871:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2872:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_5_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__1"
    // InternalSTCoreParser.g:2881:1: rule__VarDeclaration__Group_5__1 : rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2 ;
    public final void rule__VarDeclaration__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2885:1: ( rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2 )
            // InternalSTCoreParser.g:2886:2: rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2
            {
            pushFollow(FOLLOW_14);
            rule__VarDeclaration__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__1"


    // $ANTLR start "rule__VarDeclaration__Group_5__1__Impl"
    // InternalSTCoreParser.g:2893:1: rule__VarDeclaration__Group_5__1__Impl : ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) ) ;
    public final void rule__VarDeclaration__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2897:1: ( ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) ) )
            // InternalSTCoreParser.g:2898:1: ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) )
            {
            // InternalSTCoreParser.g:2898:1: ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) )
            // InternalSTCoreParser.g:2899:2: ( rule__VarDeclaration__MaxLengthAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_5_1()); 
            }
            // InternalSTCoreParser.g:2900:2: ( rule__VarDeclaration__MaxLengthAssignment_5_1 )
            // InternalSTCoreParser.g:2900:3: rule__VarDeclaration__MaxLengthAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__MaxLengthAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__2"
    // InternalSTCoreParser.g:2908:1: rule__VarDeclaration__Group_5__2 : rule__VarDeclaration__Group_5__2__Impl ;
    public final void rule__VarDeclaration__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2912:1: ( rule__VarDeclaration__Group_5__2__Impl )
            // InternalSTCoreParser.g:2913:2: rule__VarDeclaration__Group_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__2"


    // $ANTLR start "rule__VarDeclaration__Group_5__2__Impl"
    // InternalSTCoreParser.g:2919:1: rule__VarDeclaration__Group_5__2__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2923:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2924:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2924:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2925:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_5_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__0"
    // InternalSTCoreParser.g:2935:1: rule__VarDeclaration__Group_6__0 : rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 ;
    public final void rule__VarDeclaration__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2939:1: ( rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 )
            // InternalSTCoreParser.g:2940:2: rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1
            {
            pushFollow(FOLLOW_15);
            rule__VarDeclaration__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0"


    // $ANTLR start "rule__VarDeclaration__Group_6__0__Impl"
    // InternalSTCoreParser.g:2947:1: rule__VarDeclaration__Group_6__0__Impl : ( ColonEqualsSign ) ;
    public final void rule__VarDeclaration__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2951:1: ( ( ColonEqualsSign ) )
            // InternalSTCoreParser.g:2952:1: ( ColonEqualsSign )
            {
            // InternalSTCoreParser.g:2952:1: ( ColonEqualsSign )
            // InternalSTCoreParser.g:2953:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_6_0()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__1"
    // InternalSTCoreParser.g:2962:1: rule__VarDeclaration__Group_6__1 : rule__VarDeclaration__Group_6__1__Impl ;
    public final void rule__VarDeclaration__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2966:1: ( rule__VarDeclaration__Group_6__1__Impl )
            // InternalSTCoreParser.g:2967:2: rule__VarDeclaration__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1"


    // $ANTLR start "rule__VarDeclaration__Group_6__1__Impl"
    // InternalSTCoreParser.g:2973:1: rule__VarDeclaration__Group_6__1__Impl : ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) ) ;
    public final void rule__VarDeclaration__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2977:1: ( ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) ) )
            // InternalSTCoreParser.g:2978:1: ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) )
            {
            // InternalSTCoreParser.g:2978:1: ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) )
            // InternalSTCoreParser.g:2979:2: ( rule__VarDeclaration__DefaultValueAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_6_1()); 
            }
            // InternalSTCoreParser.g:2980:2: ( rule__VarDeclaration__DefaultValueAssignment_6_1 )
            // InternalSTCoreParser.g:2980:3: rule__VarDeclaration__DefaultValueAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__DefaultValueAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0"
    // InternalSTCoreParser.g:2989:1: rule__ArrayInitializerExpression__Group__0 : rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 ;
    public final void rule__ArrayInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2993:1: ( rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 )
            // InternalSTCoreParser.g:2994:2: rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__ArrayInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0__Impl"
    // InternalSTCoreParser.g:3001:1: rule__ArrayInitializerExpression__Group__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3005:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:3006:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:3006:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:3007:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1"
    // InternalSTCoreParser.g:3016:1: rule__ArrayInitializerExpression__Group__1 : rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 ;
    public final void rule__ArrayInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3020:1: ( rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 )
            // InternalSTCoreParser.g:3021:2: rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__ArrayInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1__Impl"
    // InternalSTCoreParser.g:3028:1: rule__ArrayInitializerExpression__Group__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3032:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalSTCoreParser.g:3033:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalSTCoreParser.g:3033:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            // InternalSTCoreParser.g:3034:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalSTCoreParser.g:3035:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            // InternalSTCoreParser.g:3035:3: rule__ArrayInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2"
    // InternalSTCoreParser.g:3043:1: rule__ArrayInitializerExpression__Group__2 : rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 ;
    public final void rule__ArrayInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3047:1: ( rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 )
            // InternalSTCoreParser.g:3048:2: rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__ArrayInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2__Impl"
    // InternalSTCoreParser.g:3055:1: rule__ArrayInitializerExpression__Group__2__Impl : ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) ;
    public final void rule__ArrayInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3059:1: ( ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) )
            // InternalSTCoreParser.g:3060:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            {
            // InternalSTCoreParser.g:3060:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            // InternalSTCoreParser.g:3061:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalSTCoreParser.g:3062:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==Comma) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalSTCoreParser.g:3062:3: rule__ArrayInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__ArrayInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3"
    // InternalSTCoreParser.g:3070:1: rule__ArrayInitializerExpression__Group__3 : rule__ArrayInitializerExpression__Group__3__Impl ;
    public final void rule__ArrayInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3074:1: ( rule__ArrayInitializerExpression__Group__3__Impl )
            // InternalSTCoreParser.g:3075:2: rule__ArrayInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3__Impl"
    // InternalSTCoreParser.g:3081:1: rule__ArrayInitializerExpression__Group__3__Impl : ( RightSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3085:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:3086:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:3086:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:3087:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0"
    // InternalSTCoreParser.g:3097:1: rule__ArrayInitializerExpression__Group_2__0 : rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 ;
    public final void rule__ArrayInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3101:1: ( rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 )
            // InternalSTCoreParser.g:3102:2: rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_10);
            rule__ArrayInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0__Impl"
    // InternalSTCoreParser.g:3109:1: rule__ArrayInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__ArrayInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3113:1: ( ( Comma ) )
            // InternalSTCoreParser.g:3114:1: ( Comma )
            {
            // InternalSTCoreParser.g:3114:1: ( Comma )
            // InternalSTCoreParser.g:3115:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1"
    // InternalSTCoreParser.g:3124:1: rule__ArrayInitializerExpression__Group_2__1 : rule__ArrayInitializerExpression__Group_2__1__Impl ;
    public final void rule__ArrayInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3128:1: ( rule__ArrayInitializerExpression__Group_2__1__Impl )
            // InternalSTCoreParser.g:3129:2: rule__ArrayInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1__Impl"
    // InternalSTCoreParser.g:3135:1: rule__ArrayInitializerExpression__Group_2__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3139:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalSTCoreParser.g:3140:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalSTCoreParser.g:3140:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalSTCoreParser.g:3141:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalSTCoreParser.g:3142:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            // InternalSTCoreParser.g:3142:3: rule__ArrayInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__0"
    // InternalSTCoreParser.g:3151:1: rule__ArrayInitElement__Group__0 : rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 ;
    public final void rule__ArrayInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3155:1: ( rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 )
            // InternalSTCoreParser.g:3156:2: rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__ArrayInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0"


    // $ANTLR start "rule__ArrayInitElement__Group__0__Impl"
    // InternalSTCoreParser.g:3163:1: rule__ArrayInitElement__Group__0__Impl : ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) ;
    public final void rule__ArrayInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3167:1: ( ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) )
            // InternalSTCoreParser.g:3168:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            {
            // InternalSTCoreParser.g:3168:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            // InternalSTCoreParser.g:3169:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }
            // InternalSTCoreParser.g:3170:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            // InternalSTCoreParser.g:3170:3: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__IndexOrInitExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__1"
    // InternalSTCoreParser.g:3178:1: rule__ArrayInitElement__Group__1 : rule__ArrayInitElement__Group__1__Impl ;
    public final void rule__ArrayInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3182:1: ( rule__ArrayInitElement__Group__1__Impl )
            // InternalSTCoreParser.g:3183:2: rule__ArrayInitElement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1"


    // $ANTLR start "rule__ArrayInitElement__Group__1__Impl"
    // InternalSTCoreParser.g:3189:1: rule__ArrayInitElement__Group__1__Impl : ( ( rule__ArrayInitElement__Group_1__0 )? ) ;
    public final void rule__ArrayInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3193:1: ( ( ( rule__ArrayInitElement__Group_1__0 )? ) )
            // InternalSTCoreParser.g:3194:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            {
            // InternalSTCoreParser.g:3194:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            // InternalSTCoreParser.g:3195:2: ( rule__ArrayInitElement__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:3196:2: ( rule__ArrayInitElement__Group_1__0 )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==LeftParenthesis) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalSTCoreParser.g:3196:3: rule__ArrayInitElement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ArrayInitElement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0"
    // InternalSTCoreParser.g:3205:1: rule__ArrayInitElement__Group_1__0 : rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 ;
    public final void rule__ArrayInitElement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3209:1: ( rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 )
            // InternalSTCoreParser.g:3210:2: rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__ArrayInitElement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0__Impl"
    // InternalSTCoreParser.g:3217:1: rule__ArrayInitElement__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3221:1: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:3222:1: ( LeftParenthesis )
            {
            // InternalSTCoreParser.g:3222:1: ( LeftParenthesis )
            // InternalSTCoreParser.g:3223:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1"
    // InternalSTCoreParser.g:3232:1: rule__ArrayInitElement__Group_1__1 : rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 ;
    public final void rule__ArrayInitElement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3236:1: ( rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 )
            // InternalSTCoreParser.g:3237:2: rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2
            {
            pushFollow(FOLLOW_17);
            rule__ArrayInitElement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1__Impl"
    // InternalSTCoreParser.g:3244:1: rule__ArrayInitElement__Group_1__1__Impl : ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) ;
    public final void rule__ArrayInitElement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3248:1: ( ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:3249:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:3249:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            // InternalSTCoreParser.g:3250:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:3251:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            // InternalSTCoreParser.g:3251:3: rule__ArrayInitElement__InitExpressionAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__InitExpressionAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2"
    // InternalSTCoreParser.g:3259:1: rule__ArrayInitElement__Group_1__2 : rule__ArrayInitElement__Group_1__2__Impl ;
    public final void rule__ArrayInitElement__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3263:1: ( rule__ArrayInitElement__Group_1__2__Impl )
            // InternalSTCoreParser.g:3264:2: rule__ArrayInitElement__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2__Impl"
    // InternalSTCoreParser.g:3270:1: rule__ArrayInitElement__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3274:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:3275:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:3275:1: ( RightParenthesis )
            // InternalSTCoreParser.g:3276:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2__Impl"


    // $ANTLR start "rule__STStatement__Group_0__0"
    // InternalSTCoreParser.g:3286:1: rule__STStatement__Group_0__0 : rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 ;
    public final void rule__STStatement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3290:1: ( rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 )
            // InternalSTCoreParser.g:3291:2: rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1
            {
            pushFollow(FOLLOW_18);
            rule__STStatement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0"


    // $ANTLR start "rule__STStatement__Group_0__0__Impl"
    // InternalSTCoreParser.g:3298:1: rule__STStatement__Group_0__0__Impl : ( ruleSTBranchStatement ) ;
    public final void rule__STStatement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3302:1: ( ( ruleSTBranchStatement ) )
            // InternalSTCoreParser.g:3303:1: ( ruleSTBranchStatement )
            {
            // InternalSTCoreParser.g:3303:1: ( ruleSTBranchStatement )
            // InternalSTCoreParser.g:3304:2: ruleSTBranchStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTBranchStatementParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTBranchStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTBranchStatementParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0__1"
    // InternalSTCoreParser.g:3313:1: rule__STStatement__Group_0__1 : rule__STStatement__Group_0__1__Impl ;
    public final void rule__STStatement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3317:1: ( rule__STStatement__Group_0__1__Impl )
            // InternalSTCoreParser.g:3318:2: rule__STStatement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1"


    // $ANTLR start "rule__STStatement__Group_0__1__Impl"
    // InternalSTCoreParser.g:3324:1: rule__STStatement__Group_0__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3328:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3329:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3329:1: ( Semicolon )
            // InternalSTCoreParser.g:3330:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1__Impl"


    // $ANTLR start "rule__STStatement__Group_1__0"
    // InternalSTCoreParser.g:3340:1: rule__STStatement__Group_1__0 : rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 ;
    public final void rule__STStatement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3344:1: ( rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 )
            // InternalSTCoreParser.g:3345:2: rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STStatement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0"


    // $ANTLR start "rule__STStatement__Group_1__0__Impl"
    // InternalSTCoreParser.g:3352:1: rule__STStatement__Group_1__0__Impl : ( ruleSTLoopStatement ) ;
    public final void rule__STStatement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3356:1: ( ( ruleSTLoopStatement ) )
            // InternalSTCoreParser.g:3357:1: ( ruleSTLoopStatement )
            {
            // InternalSTCoreParser.g:3357:1: ( ruleSTLoopStatement )
            // InternalSTCoreParser.g:3358:2: ruleSTLoopStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTLoopStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTLoopStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTLoopStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0__Impl"


    // $ANTLR start "rule__STStatement__Group_1__1"
    // InternalSTCoreParser.g:3367:1: rule__STStatement__Group_1__1 : rule__STStatement__Group_1__1__Impl ;
    public final void rule__STStatement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3371:1: ( rule__STStatement__Group_1__1__Impl )
            // InternalSTCoreParser.g:3372:2: rule__STStatement__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1"


    // $ANTLR start "rule__STStatement__Group_1__1__Impl"
    // InternalSTCoreParser.g:3378:1: rule__STStatement__Group_1__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3382:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3383:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3383:1: ( Semicolon )
            // InternalSTCoreParser.g:3384:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1__Impl"


    // $ANTLR start "rule__STStatement__Group_2__0"
    // InternalSTCoreParser.g:3394:1: rule__STStatement__Group_2__0 : rule__STStatement__Group_2__0__Impl rule__STStatement__Group_2__1 ;
    public final void rule__STStatement__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3398:1: ( rule__STStatement__Group_2__0__Impl rule__STStatement__Group_2__1 )
            // InternalSTCoreParser.g:3399:2: rule__STStatement__Group_2__0__Impl rule__STStatement__Group_2__1
            {
            pushFollow(FOLLOW_18);
            rule__STStatement__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_2__0"


    // $ANTLR start "rule__STStatement__Group_2__0__Impl"
    // InternalSTCoreParser.g:3406:1: rule__STStatement__Group_2__0__Impl : ( ruleSTAssignmentStatement ) ;
    public final void rule__STStatement__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3410:1: ( ( ruleSTAssignmentStatement ) )
            // InternalSTCoreParser.g:3411:1: ( ruleSTAssignmentStatement )
            {
            // InternalSTCoreParser.g:3411:1: ( ruleSTAssignmentStatement )
            // InternalSTCoreParser.g:3412:2: ruleSTAssignmentStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAssignmentStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_2__0__Impl"


    // $ANTLR start "rule__STStatement__Group_2__1"
    // InternalSTCoreParser.g:3421:1: rule__STStatement__Group_2__1 : rule__STStatement__Group_2__1__Impl ;
    public final void rule__STStatement__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3425:1: ( rule__STStatement__Group_2__1__Impl )
            // InternalSTCoreParser.g:3426:2: rule__STStatement__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_2__1"


    // $ANTLR start "rule__STStatement__Group_2__1__Impl"
    // InternalSTCoreParser.g:3432:1: rule__STStatement__Group_2__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3436:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3437:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3437:1: ( Semicolon )
            // InternalSTCoreParser.g:3438:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_2_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_2__1__Impl"


    // $ANTLR start "rule__STStatement__Group_3__0"
    // InternalSTCoreParser.g:3448:1: rule__STStatement__Group_3__0 : rule__STStatement__Group_3__0__Impl rule__STStatement__Group_3__1 ;
    public final void rule__STStatement__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3452:1: ( rule__STStatement__Group_3__0__Impl rule__STStatement__Group_3__1 )
            // InternalSTCoreParser.g:3453:2: rule__STStatement__Group_3__0__Impl rule__STStatement__Group_3__1
            {
            pushFollow(FOLLOW_18);
            rule__STStatement__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_3__0"


    // $ANTLR start "rule__STStatement__Group_3__0__Impl"
    // InternalSTCoreParser.g:3460:1: rule__STStatement__Group_3__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3464:1: ( ( () ) )
            // InternalSTCoreParser.g:3465:1: ( () )
            {
            // InternalSTCoreParser.g:3465:1: ( () )
            // InternalSTCoreParser.g:3466:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTNopAction_3_0()); 
            }
            // InternalSTCoreParser.g:3467:2: ()
            // InternalSTCoreParser.g:3467:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTNopAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_3__0__Impl"


    // $ANTLR start "rule__STStatement__Group_3__1"
    // InternalSTCoreParser.g:3475:1: rule__STStatement__Group_3__1 : rule__STStatement__Group_3__1__Impl ;
    public final void rule__STStatement__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3479:1: ( rule__STStatement__Group_3__1__Impl )
            // InternalSTCoreParser.g:3480:2: rule__STStatement__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_3__1"


    // $ANTLR start "rule__STStatement__Group_3__1__Impl"
    // InternalSTCoreParser.g:3486:1: rule__STStatement__Group_3__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3490:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3491:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3491:1: ( Semicolon )
            // InternalSTCoreParser.g:3492:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_3_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_3__1__Impl"


    // $ANTLR start "rule__STStatement__Group_4__0"
    // InternalSTCoreParser.g:3502:1: rule__STStatement__Group_4__0 : rule__STStatement__Group_4__0__Impl rule__STStatement__Group_4__1 ;
    public final void rule__STStatement__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3506:1: ( rule__STStatement__Group_4__0__Impl rule__STStatement__Group_4__1 )
            // InternalSTCoreParser.g:3507:2: rule__STStatement__Group_4__0__Impl rule__STStatement__Group_4__1
            {
            pushFollow(FOLLOW_19);
            rule__STStatement__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_4__0"


    // $ANTLR start "rule__STStatement__Group_4__0__Impl"
    // InternalSTCoreParser.g:3514:1: rule__STStatement__Group_4__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3518:1: ( ( () ) )
            // InternalSTCoreParser.g:3519:1: ( () )
            {
            // InternalSTCoreParser.g:3519:1: ( () )
            // InternalSTCoreParser.g:3520:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTReturnAction_4_0()); 
            }
            // InternalSTCoreParser.g:3521:2: ()
            // InternalSTCoreParser.g:3521:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTReturnAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_4__0__Impl"


    // $ANTLR start "rule__STStatement__Group_4__1"
    // InternalSTCoreParser.g:3529:1: rule__STStatement__Group_4__1 : rule__STStatement__Group_4__1__Impl rule__STStatement__Group_4__2 ;
    public final void rule__STStatement__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3533:1: ( rule__STStatement__Group_4__1__Impl rule__STStatement__Group_4__2 )
            // InternalSTCoreParser.g:3534:2: rule__STStatement__Group_4__1__Impl rule__STStatement__Group_4__2
            {
            pushFollow(FOLLOW_18);
            rule__STStatement__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_4__1"


    // $ANTLR start "rule__STStatement__Group_4__1__Impl"
    // InternalSTCoreParser.g:3541:1: rule__STStatement__Group_4__1__Impl : ( RETURN ) ;
    public final void rule__STStatement__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3545:1: ( ( RETURN ) )
            // InternalSTCoreParser.g:3546:1: ( RETURN )
            {
            // InternalSTCoreParser.g:3546:1: ( RETURN )
            // InternalSTCoreParser.g:3547:2: RETURN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getRETURNKeyword_4_1()); 
            }
            match(input,RETURN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getRETURNKeyword_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_4__1__Impl"


    // $ANTLR start "rule__STStatement__Group_4__2"
    // InternalSTCoreParser.g:3556:1: rule__STStatement__Group_4__2 : rule__STStatement__Group_4__2__Impl ;
    public final void rule__STStatement__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3560:1: ( rule__STStatement__Group_4__2__Impl )
            // InternalSTCoreParser.g:3561:2: rule__STStatement__Group_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_4__2"


    // $ANTLR start "rule__STStatement__Group_4__2__Impl"
    // InternalSTCoreParser.g:3567:1: rule__STStatement__Group_4__2__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3571:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3572:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3572:1: ( Semicolon )
            // InternalSTCoreParser.g:3573:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_4_2()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_4__2__Impl"


    // $ANTLR start "rule__STStatement__Group_5__0"
    // InternalSTCoreParser.g:3583:1: rule__STStatement__Group_5__0 : rule__STStatement__Group_5__0__Impl rule__STStatement__Group_5__1 ;
    public final void rule__STStatement__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3587:1: ( rule__STStatement__Group_5__0__Impl rule__STStatement__Group_5__1 )
            // InternalSTCoreParser.g:3588:2: rule__STStatement__Group_5__0__Impl rule__STStatement__Group_5__1
            {
            pushFollow(FOLLOW_20);
            rule__STStatement__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_5__0"


    // $ANTLR start "rule__STStatement__Group_5__0__Impl"
    // InternalSTCoreParser.g:3595:1: rule__STStatement__Group_5__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3599:1: ( ( () ) )
            // InternalSTCoreParser.g:3600:1: ( () )
            {
            // InternalSTCoreParser.g:3600:1: ( () )
            // InternalSTCoreParser.g:3601:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTContinueAction_5_0()); 
            }
            // InternalSTCoreParser.g:3602:2: ()
            // InternalSTCoreParser.g:3602:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTContinueAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_5__0__Impl"


    // $ANTLR start "rule__STStatement__Group_5__1"
    // InternalSTCoreParser.g:3610:1: rule__STStatement__Group_5__1 : rule__STStatement__Group_5__1__Impl rule__STStatement__Group_5__2 ;
    public final void rule__STStatement__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3614:1: ( rule__STStatement__Group_5__1__Impl rule__STStatement__Group_5__2 )
            // InternalSTCoreParser.g:3615:2: rule__STStatement__Group_5__1__Impl rule__STStatement__Group_5__2
            {
            pushFollow(FOLLOW_18);
            rule__STStatement__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_5__1"


    // $ANTLR start "rule__STStatement__Group_5__1__Impl"
    // InternalSTCoreParser.g:3622:1: rule__STStatement__Group_5__1__Impl : ( CONTINUE ) ;
    public final void rule__STStatement__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3626:1: ( ( CONTINUE ) )
            // InternalSTCoreParser.g:3627:1: ( CONTINUE )
            {
            // InternalSTCoreParser.g:3627:1: ( CONTINUE )
            // InternalSTCoreParser.g:3628:2: CONTINUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_5_1()); 
            }
            match(input,CONTINUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_5__1__Impl"


    // $ANTLR start "rule__STStatement__Group_5__2"
    // InternalSTCoreParser.g:3637:1: rule__STStatement__Group_5__2 : rule__STStatement__Group_5__2__Impl ;
    public final void rule__STStatement__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3641:1: ( rule__STStatement__Group_5__2__Impl )
            // InternalSTCoreParser.g:3642:2: rule__STStatement__Group_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_5__2"


    // $ANTLR start "rule__STStatement__Group_5__2__Impl"
    // InternalSTCoreParser.g:3648:1: rule__STStatement__Group_5__2__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3652:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3653:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3653:1: ( Semicolon )
            // InternalSTCoreParser.g:3654:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_5_2()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_5__2__Impl"


    // $ANTLR start "rule__STStatement__Group_6__0"
    // InternalSTCoreParser.g:3664:1: rule__STStatement__Group_6__0 : rule__STStatement__Group_6__0__Impl rule__STStatement__Group_6__1 ;
    public final void rule__STStatement__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3668:1: ( rule__STStatement__Group_6__0__Impl rule__STStatement__Group_6__1 )
            // InternalSTCoreParser.g:3669:2: rule__STStatement__Group_6__0__Impl rule__STStatement__Group_6__1
            {
            pushFollow(FOLLOW_21);
            rule__STStatement__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_6__0"


    // $ANTLR start "rule__STStatement__Group_6__0__Impl"
    // InternalSTCoreParser.g:3676:1: rule__STStatement__Group_6__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3680:1: ( ( () ) )
            // InternalSTCoreParser.g:3681:1: ( () )
            {
            // InternalSTCoreParser.g:3681:1: ( () )
            // InternalSTCoreParser.g:3682:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTExitAction_6_0()); 
            }
            // InternalSTCoreParser.g:3683:2: ()
            // InternalSTCoreParser.g:3683:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTExitAction_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_6__0__Impl"


    // $ANTLR start "rule__STStatement__Group_6__1"
    // InternalSTCoreParser.g:3691:1: rule__STStatement__Group_6__1 : rule__STStatement__Group_6__1__Impl rule__STStatement__Group_6__2 ;
    public final void rule__STStatement__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3695:1: ( rule__STStatement__Group_6__1__Impl rule__STStatement__Group_6__2 )
            // InternalSTCoreParser.g:3696:2: rule__STStatement__Group_6__1__Impl rule__STStatement__Group_6__2
            {
            pushFollow(FOLLOW_18);
            rule__STStatement__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_6__1"


    // $ANTLR start "rule__STStatement__Group_6__1__Impl"
    // InternalSTCoreParser.g:3703:1: rule__STStatement__Group_6__1__Impl : ( EXIT ) ;
    public final void rule__STStatement__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3707:1: ( ( EXIT ) )
            // InternalSTCoreParser.g:3708:1: ( EXIT )
            {
            // InternalSTCoreParser.g:3708:1: ( EXIT )
            // InternalSTCoreParser.g:3709:2: EXIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getEXITKeyword_6_1()); 
            }
            match(input,EXIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getEXITKeyword_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_6__1__Impl"


    // $ANTLR start "rule__STStatement__Group_6__2"
    // InternalSTCoreParser.g:3718:1: rule__STStatement__Group_6__2 : rule__STStatement__Group_6__2__Impl ;
    public final void rule__STStatement__Group_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3722:1: ( rule__STStatement__Group_6__2__Impl )
            // InternalSTCoreParser.g:3723:2: rule__STStatement__Group_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_6__2"


    // $ANTLR start "rule__STStatement__Group_6__2__Impl"
    // InternalSTCoreParser.g:3729:1: rule__STStatement__Group_6__2__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3733:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3734:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3734:1: ( Semicolon )
            // InternalSTCoreParser.g:3735:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_6_2()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_6__2__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__0"
    // InternalSTCoreParser.g:3745:1: rule__STAssignmentStatement__Group__0 : rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 ;
    public final void rule__STAssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3749:1: ( rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 )
            // InternalSTCoreParser.g:3750:2: rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_22);
            rule__STAssignmentStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0"


    // $ANTLR start "rule__STAssignmentStatement__Group__0__Impl"
    // InternalSTCoreParser.g:3757:1: rule__STAssignmentStatement__Group__0__Impl : ( ( rule__STAssignmentStatement__LhsAssignment_0 ) ) ;
    public final void rule__STAssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3761:1: ( ( ( rule__STAssignmentStatement__LhsAssignment_0 ) ) )
            // InternalSTCoreParser.g:3762:1: ( ( rule__STAssignmentStatement__LhsAssignment_0 ) )
            {
            // InternalSTCoreParser.g:3762:1: ( ( rule__STAssignmentStatement__LhsAssignment_0 ) )
            // InternalSTCoreParser.g:3763:2: ( rule__STAssignmentStatement__LhsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsAssignment_0()); 
            }
            // InternalSTCoreParser.g:3764:2: ( rule__STAssignmentStatement__LhsAssignment_0 )
            // InternalSTCoreParser.g:3764:3: rule__STAssignmentStatement__LhsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__LhsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__1"
    // InternalSTCoreParser.g:3772:1: rule__STAssignmentStatement__Group__1 : rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 ;
    public final void rule__STAssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3776:1: ( rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 )
            // InternalSTCoreParser.g:3777:2: rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__STAssignmentStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1"


    // $ANTLR start "rule__STAssignmentStatement__Group__1__Impl"
    // InternalSTCoreParser.g:3784:1: rule__STAssignmentStatement__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STAssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3788:1: ( ( ColonEqualsSign ) )
            // InternalSTCoreParser.g:3789:1: ( ColonEqualsSign )
            {
            // InternalSTCoreParser.g:3789:1: ( ColonEqualsSign )
            // InternalSTCoreParser.g:3790:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__2"
    // InternalSTCoreParser.g:3799:1: rule__STAssignmentStatement__Group__2 : rule__STAssignmentStatement__Group__2__Impl ;
    public final void rule__STAssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3803:1: ( rule__STAssignmentStatement__Group__2__Impl )
            // InternalSTCoreParser.g:3804:2: rule__STAssignmentStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2"


    // $ANTLR start "rule__STAssignmentStatement__Group__2__Impl"
    // InternalSTCoreParser.g:3810:1: rule__STAssignmentStatement__Group__2__Impl : ( ( rule__STAssignmentStatement__RhsAssignment_2 ) ) ;
    public final void rule__STAssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3814:1: ( ( ( rule__STAssignmentStatement__RhsAssignment_2 ) ) )
            // InternalSTCoreParser.g:3815:1: ( ( rule__STAssignmentStatement__RhsAssignment_2 ) )
            {
            // InternalSTCoreParser.g:3815:1: ( ( rule__STAssignmentStatement__RhsAssignment_2 ) )
            // InternalSTCoreParser.g:3816:2: ( rule__STAssignmentStatement__RhsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRhsAssignment_2()); 
            }
            // InternalSTCoreParser.g:3817:2: ( rule__STAssignmentStatement__RhsAssignment_2 )
            // InternalSTCoreParser.g:3817:3: rule__STAssignmentStatement__RhsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__RhsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRhsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__STIfStatment__Group__0"
    // InternalSTCoreParser.g:3826:1: rule__STIfStatment__Group__0 : rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1 ;
    public final void rule__STIfStatment__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3830:1: ( rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1 )
            // InternalSTCoreParser.g:3831:2: rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STIfStatment__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__0"


    // $ANTLR start "rule__STIfStatment__Group__0__Impl"
    // InternalSTCoreParser.g:3838:1: rule__STIfStatment__Group__0__Impl : ( IF ) ;
    public final void rule__STIfStatment__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3842:1: ( ( IF ) )
            // InternalSTCoreParser.g:3843:1: ( IF )
            {
            // InternalSTCoreParser.g:3843:1: ( IF )
            // InternalSTCoreParser.g:3844:2: IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getIFKeyword_0()); 
            }
            match(input,IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__0__Impl"


    // $ANTLR start "rule__STIfStatment__Group__1"
    // InternalSTCoreParser.g:3853:1: rule__STIfStatment__Group__1 : rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2 ;
    public final void rule__STIfStatment__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3857:1: ( rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2 )
            // InternalSTCoreParser.g:3858:2: rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__STIfStatment__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__1"


    // $ANTLR start "rule__STIfStatment__Group__1__Impl"
    // InternalSTCoreParser.g:3865:1: rule__STIfStatment__Group__1__Impl : ( ( rule__STIfStatment__ConditionAssignment_1 ) ) ;
    public final void rule__STIfStatment__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3869:1: ( ( ( rule__STIfStatment__ConditionAssignment_1 ) ) )
            // InternalSTCoreParser.g:3870:1: ( ( rule__STIfStatment__ConditionAssignment_1 ) )
            {
            // InternalSTCoreParser.g:3870:1: ( ( rule__STIfStatment__ConditionAssignment_1 ) )
            // InternalSTCoreParser.g:3871:2: ( rule__STIfStatment__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getConditionAssignment_1()); 
            }
            // InternalSTCoreParser.g:3872:2: ( rule__STIfStatment__ConditionAssignment_1 )
            // InternalSTCoreParser.g:3872:3: rule__STIfStatment__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__1__Impl"


    // $ANTLR start "rule__STIfStatment__Group__2"
    // InternalSTCoreParser.g:3880:1: rule__STIfStatment__Group__2 : rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3 ;
    public final void rule__STIfStatment__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3884:1: ( rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3 )
            // InternalSTCoreParser.g:3885:2: rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3
            {
            pushFollow(FOLLOW_24);
            rule__STIfStatment__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__2"


    // $ANTLR start "rule__STIfStatment__Group__2__Impl"
    // InternalSTCoreParser.g:3892:1: rule__STIfStatment__Group__2__Impl : ( THEN ) ;
    public final void rule__STIfStatment__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3896:1: ( ( THEN ) )
            // InternalSTCoreParser.g:3897:1: ( THEN )
            {
            // InternalSTCoreParser.g:3897:1: ( THEN )
            // InternalSTCoreParser.g:3898:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__2__Impl"


    // $ANTLR start "rule__STIfStatment__Group__3"
    // InternalSTCoreParser.g:3907:1: rule__STIfStatment__Group__3 : rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4 ;
    public final void rule__STIfStatment__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3911:1: ( rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4 )
            // InternalSTCoreParser.g:3912:2: rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4
            {
            pushFollow(FOLLOW_24);
            rule__STIfStatment__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__3"


    // $ANTLR start "rule__STIfStatment__Group__3__Impl"
    // InternalSTCoreParser.g:3919:1: rule__STIfStatment__Group__3__Impl : ( ( rule__STIfStatment__StatementsAssignment_3 )* ) ;
    public final void rule__STIfStatment__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3923:1: ( ( ( rule__STIfStatment__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:3924:1: ( ( rule__STIfStatment__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:3924:1: ( ( rule__STIfStatment__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:3925:2: ( rule__STIfStatment__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:3926:2: ( rule__STIfStatment__StatementsAssignment_3 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==CONTINUE||(LA35_0>=REPEAT && LA35_0<=RETURN)||LA35_0==WHILE||LA35_0==CASE||LA35_0==EXIT||LA35_0==FOR||LA35_0==IF||LA35_0==Semicolon||LA35_0==RULE_ID) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalSTCoreParser.g:3926:3: rule__STIfStatment__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STIfStatment__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__3__Impl"


    // $ANTLR start "rule__STIfStatment__Group__4"
    // InternalSTCoreParser.g:3934:1: rule__STIfStatment__Group__4 : rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5 ;
    public final void rule__STIfStatment__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3938:1: ( rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5 )
            // InternalSTCoreParser.g:3939:2: rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5
            {
            pushFollow(FOLLOW_24);
            rule__STIfStatment__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__4"


    // $ANTLR start "rule__STIfStatment__Group__4__Impl"
    // InternalSTCoreParser.g:3946:1: rule__STIfStatment__Group__4__Impl : ( ( rule__STIfStatment__ElseifsAssignment_4 )* ) ;
    public final void rule__STIfStatment__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3950:1: ( ( ( rule__STIfStatment__ElseifsAssignment_4 )* ) )
            // InternalSTCoreParser.g:3951:1: ( ( rule__STIfStatment__ElseifsAssignment_4 )* )
            {
            // InternalSTCoreParser.g:3951:1: ( ( rule__STIfStatment__ElseifsAssignment_4 )* )
            // InternalSTCoreParser.g:3952:2: ( rule__STIfStatment__ElseifsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseifsAssignment_4()); 
            }
            // InternalSTCoreParser.g:3953:2: ( rule__STIfStatment__ElseifsAssignment_4 )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==ELSIF) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalSTCoreParser.g:3953:3: rule__STIfStatment__ElseifsAssignment_4
            	    {
            	    pushFollow(FOLLOW_25);
            	    rule__STIfStatment__ElseifsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseifsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__4__Impl"


    // $ANTLR start "rule__STIfStatment__Group__5"
    // InternalSTCoreParser.g:3961:1: rule__STIfStatment__Group__5 : rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6 ;
    public final void rule__STIfStatment__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3965:1: ( rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6 )
            // InternalSTCoreParser.g:3966:2: rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6
            {
            pushFollow(FOLLOW_24);
            rule__STIfStatment__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__5"


    // $ANTLR start "rule__STIfStatment__Group__5__Impl"
    // InternalSTCoreParser.g:3973:1: rule__STIfStatment__Group__5__Impl : ( ( rule__STIfStatment__ElseAssignment_5 )? ) ;
    public final void rule__STIfStatment__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3977:1: ( ( ( rule__STIfStatment__ElseAssignment_5 )? ) )
            // InternalSTCoreParser.g:3978:1: ( ( rule__STIfStatment__ElseAssignment_5 )? )
            {
            // InternalSTCoreParser.g:3978:1: ( ( rule__STIfStatment__ElseAssignment_5 )? )
            // InternalSTCoreParser.g:3979:2: ( rule__STIfStatment__ElseAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseAssignment_5()); 
            }
            // InternalSTCoreParser.g:3980:2: ( rule__STIfStatment__ElseAssignment_5 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==ELSE) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalSTCoreParser.g:3980:3: rule__STIfStatment__ElseAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__STIfStatment__ElseAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__5__Impl"


    // $ANTLR start "rule__STIfStatment__Group__6"
    // InternalSTCoreParser.g:3988:1: rule__STIfStatment__Group__6 : rule__STIfStatment__Group__6__Impl ;
    public final void rule__STIfStatment__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3992:1: ( rule__STIfStatment__Group__6__Impl )
            // InternalSTCoreParser.g:3993:2: rule__STIfStatment__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__6"


    // $ANTLR start "rule__STIfStatment__Group__6__Impl"
    // InternalSTCoreParser.g:3999:1: rule__STIfStatment__Group__6__Impl : ( END_IF ) ;
    public final void rule__STIfStatment__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4003:1: ( ( END_IF ) )
            // InternalSTCoreParser.g:4004:1: ( END_IF )
            {
            // InternalSTCoreParser.g:4004:1: ( END_IF )
            // InternalSTCoreParser.g:4005:2: END_IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getEND_IFKeyword_6()); 
            }
            match(input,END_IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getEND_IFKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__6__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__0"
    // InternalSTCoreParser.g:4015:1: rule__STElseIfPart__Group__0 : rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 ;
    public final void rule__STElseIfPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4019:1: ( rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 )
            // InternalSTCoreParser.g:4020:2: rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STElseIfPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0"


    // $ANTLR start "rule__STElseIfPart__Group__0__Impl"
    // InternalSTCoreParser.g:4027:1: rule__STElseIfPart__Group__0__Impl : ( ELSIF ) ;
    public final void rule__STElseIfPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4031:1: ( ( ELSIF ) )
            // InternalSTCoreParser.g:4032:1: ( ELSIF )
            {
            // InternalSTCoreParser.g:4032:1: ( ELSIF )
            // InternalSTCoreParser.g:4033:2: ELSIF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }
            match(input,ELSIF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__1"
    // InternalSTCoreParser.g:4042:1: rule__STElseIfPart__Group__1 : rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 ;
    public final void rule__STElseIfPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4046:1: ( rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 )
            // InternalSTCoreParser.g:4047:2: rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__STElseIfPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1"


    // $ANTLR start "rule__STElseIfPart__Group__1__Impl"
    // InternalSTCoreParser.g:4054:1: rule__STElseIfPart__Group__1__Impl : ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) ;
    public final void rule__STElseIfPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4058:1: ( ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) )
            // InternalSTCoreParser.g:4059:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            {
            // InternalSTCoreParser.g:4059:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            // InternalSTCoreParser.g:4060:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }
            // InternalSTCoreParser.g:4061:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            // InternalSTCoreParser.g:4061:3: rule__STElseIfPart__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__2"
    // InternalSTCoreParser.g:4069:1: rule__STElseIfPart__Group__2 : rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 ;
    public final void rule__STElseIfPart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4073:1: ( rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 )
            // InternalSTCoreParser.g:4074:2: rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3
            {
            pushFollow(FOLLOW_21);
            rule__STElseIfPart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2"


    // $ANTLR start "rule__STElseIfPart__Group__2__Impl"
    // InternalSTCoreParser.g:4081:1: rule__STElseIfPart__Group__2__Impl : ( THEN ) ;
    public final void rule__STElseIfPart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4085:1: ( ( THEN ) )
            // InternalSTCoreParser.g:4086:1: ( THEN )
            {
            // InternalSTCoreParser.g:4086:1: ( THEN )
            // InternalSTCoreParser.g:4087:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__3"
    // InternalSTCoreParser.g:4096:1: rule__STElseIfPart__Group__3 : rule__STElseIfPart__Group__3__Impl ;
    public final void rule__STElseIfPart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4100:1: ( rule__STElseIfPart__Group__3__Impl )
            // InternalSTCoreParser.g:4101:2: rule__STElseIfPart__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3"


    // $ANTLR start "rule__STElseIfPart__Group__3__Impl"
    // InternalSTCoreParser.g:4107:1: rule__STElseIfPart__Group__3__Impl : ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) ;
    public final void rule__STElseIfPart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4111:1: ( ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:4112:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:4112:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:4113:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:4114:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==CONTINUE||(LA38_0>=REPEAT && LA38_0<=RETURN)||LA38_0==WHILE||LA38_0==CASE||LA38_0==EXIT||LA38_0==FOR||LA38_0==IF||LA38_0==Semicolon||LA38_0==RULE_ID) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalSTCoreParser.g:4114:3: rule__STElseIfPart__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STElseIfPart__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__0"
    // InternalSTCoreParser.g:4123:1: rule__STCaseStatement__Group__0 : rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 ;
    public final void rule__STCaseStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4127:1: ( rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 )
            // InternalSTCoreParser.g:4128:2: rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STCaseStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0"


    // $ANTLR start "rule__STCaseStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4135:1: rule__STCaseStatement__Group__0__Impl : ( CASE ) ;
    public final void rule__STCaseStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4139:1: ( ( CASE ) )
            // InternalSTCoreParser.g:4140:1: ( CASE )
            {
            // InternalSTCoreParser.g:4140:1: ( CASE )
            // InternalSTCoreParser.g:4141:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__1"
    // InternalSTCoreParser.g:4150:1: rule__STCaseStatement__Group__1 : rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 ;
    public final void rule__STCaseStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4154:1: ( rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 )
            // InternalSTCoreParser.g:4155:2: rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__STCaseStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1"


    // $ANTLR start "rule__STCaseStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4162:1: rule__STCaseStatement__Group__1__Impl : ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) ;
    public final void rule__STCaseStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4166:1: ( ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) )
            // InternalSTCoreParser.g:4167:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            {
            // InternalSTCoreParser.g:4167:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            // InternalSTCoreParser.g:4168:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }
            // InternalSTCoreParser.g:4169:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            // InternalSTCoreParser.g:4169:3: rule__STCaseStatement__SelectorAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__SelectorAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__2"
    // InternalSTCoreParser.g:4177:1: rule__STCaseStatement__Group__2 : rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 ;
    public final void rule__STCaseStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4181:1: ( rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 )
            // InternalSTCoreParser.g:4182:2: rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STCaseStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2"


    // $ANTLR start "rule__STCaseStatement__Group__2__Impl"
    // InternalSTCoreParser.g:4189:1: rule__STCaseStatement__Group__2__Impl : ( OF ) ;
    public final void rule__STCaseStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4193:1: ( ( OF ) )
            // InternalSTCoreParser.g:4194:1: ( OF )
            {
            // InternalSTCoreParser.g:4194:1: ( OF )
            // InternalSTCoreParser.g:4195:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__3"
    // InternalSTCoreParser.g:4204:1: rule__STCaseStatement__Group__3 : rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 ;
    public final void rule__STCaseStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4208:1: ( rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 )
            // InternalSTCoreParser.g:4209:2: rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4
            {
            pushFollow(FOLLOW_26);
            rule__STCaseStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3"


    // $ANTLR start "rule__STCaseStatement__Group__3__Impl"
    // InternalSTCoreParser.g:4216:1: rule__STCaseStatement__Group__3__Impl : ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) ;
    public final void rule__STCaseStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4220:1: ( ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) )
            // InternalSTCoreParser.g:4221:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            {
            // InternalSTCoreParser.g:4221:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            // InternalSTCoreParser.g:4222:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            {
            // InternalSTCoreParser.g:4222:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) )
            // InternalSTCoreParser.g:4223:3: ( rule__STCaseStatement__CasesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTCoreParser.g:4224:3: ( rule__STCaseStatement__CasesAssignment_3 )
            // InternalSTCoreParser.g:4224:4: rule__STCaseStatement__CasesAssignment_3
            {
            pushFollow(FOLLOW_27);
            rule__STCaseStatement__CasesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }

            // InternalSTCoreParser.g:4227:2: ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            // InternalSTCoreParser.g:4228:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTCoreParser.g:4229:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( ((LA39_0>=LDATE_AND_TIME && LA39_0<=TIME_OF_DAY)||LA39_0==WSTRING||(LA39_0>=STRING && LA39_0<=DWORD)||(LA39_0>=LDATE && LA39_0<=LWORD)||(LA39_0>=UDINT && LA39_0<=WCHAR)||(LA39_0>=BOOL && LA39_0<=DINT)||(LA39_0>=LINT && LA39_0<=UINT)||LA39_0==WORD||(LA39_0>=INT && LA39_0<=LDT)||LA39_0==TOD||LA39_0==DT||(LA39_0>=LD && LA39_0<=LT)||LA39_0==NOT||LA39_0==D||LA39_0==T||LA39_0==LeftParenthesis||LA39_0==PlusSign||LA39_0==HyphenMinus||LA39_0==RULE_BOOL_VALUES||(LA39_0>=RULE_NON_DECIMAL && LA39_0<=RULE_INT)||(LA39_0>=RULE_ID && LA39_0<=RULE_STRING)) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalSTCoreParser.g:4229:4: rule__STCaseStatement__CasesAssignment_3
            	    {
            	    pushFollow(FOLLOW_27);
            	    rule__STCaseStatement__CasesAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__4"
    // InternalSTCoreParser.g:4238:1: rule__STCaseStatement__Group__4 : rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 ;
    public final void rule__STCaseStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4242:1: ( rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 )
            // InternalSTCoreParser.g:4243:2: rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5
            {
            pushFollow(FOLLOW_26);
            rule__STCaseStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4"


    // $ANTLR start "rule__STCaseStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4250:1: rule__STCaseStatement__Group__4__Impl : ( ( rule__STCaseStatement__ElseAssignment_4 )? ) ;
    public final void rule__STCaseStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4254:1: ( ( ( rule__STCaseStatement__ElseAssignment_4 )? ) )
            // InternalSTCoreParser.g:4255:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            {
            // InternalSTCoreParser.g:4255:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            // InternalSTCoreParser.g:4256:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }
            // InternalSTCoreParser.g:4257:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==ELSE) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalSTCoreParser.g:4257:3: rule__STCaseStatement__ElseAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCaseStatement__ElseAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__5"
    // InternalSTCoreParser.g:4265:1: rule__STCaseStatement__Group__5 : rule__STCaseStatement__Group__5__Impl ;
    public final void rule__STCaseStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4269:1: ( rule__STCaseStatement__Group__5__Impl )
            // InternalSTCoreParser.g:4270:2: rule__STCaseStatement__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5"


    // $ANTLR start "rule__STCaseStatement__Group__5__Impl"
    // InternalSTCoreParser.g:4276:1: rule__STCaseStatement__Group__5__Impl : ( END_CASE ) ;
    public final void rule__STCaseStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4280:1: ( ( END_CASE ) )
            // InternalSTCoreParser.g:4281:1: ( END_CASE )
            {
            // InternalSTCoreParser.g:4281:1: ( END_CASE )
            // InternalSTCoreParser.g:4282:2: END_CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }
            match(input,END_CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5__Impl"


    // $ANTLR start "rule__STCaseCases__Group__0"
    // InternalSTCoreParser.g:4292:1: rule__STCaseCases__Group__0 : rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 ;
    public final void rule__STCaseCases__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4296:1: ( rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 )
            // InternalSTCoreParser.g:4297:2: rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1
            {
            pushFollow(FOLLOW_28);
            rule__STCaseCases__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0"


    // $ANTLR start "rule__STCaseCases__Group__0__Impl"
    // InternalSTCoreParser.g:4304:1: rule__STCaseCases__Group__0__Impl : ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) ;
    public final void rule__STCaseCases__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4308:1: ( ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) )
            // InternalSTCoreParser.g:4309:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            {
            // InternalSTCoreParser.g:4309:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            // InternalSTCoreParser.g:4310:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }
            // InternalSTCoreParser.g:4311:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            // InternalSTCoreParser.g:4311:3: rule__STCaseCases__ConditionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group__1"
    // InternalSTCoreParser.g:4319:1: rule__STCaseCases__Group__1 : rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 ;
    public final void rule__STCaseCases__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4323:1: ( rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 )
            // InternalSTCoreParser.g:4324:2: rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2
            {
            pushFollow(FOLLOW_28);
            rule__STCaseCases__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1"


    // $ANTLR start "rule__STCaseCases__Group__1__Impl"
    // InternalSTCoreParser.g:4331:1: rule__STCaseCases__Group__1__Impl : ( ( rule__STCaseCases__Group_1__0 )* ) ;
    public final void rule__STCaseCases__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4335:1: ( ( ( rule__STCaseCases__Group_1__0 )* ) )
            // InternalSTCoreParser.g:4336:1: ( ( rule__STCaseCases__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:4336:1: ( ( rule__STCaseCases__Group_1__0 )* )
            // InternalSTCoreParser.g:4337:2: ( rule__STCaseCases__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:4338:2: ( rule__STCaseCases__Group_1__0 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==Comma) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalSTCoreParser.g:4338:3: rule__STCaseCases__Group_1__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STCaseCases__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1__Impl"


    // $ANTLR start "rule__STCaseCases__Group__2"
    // InternalSTCoreParser.g:4346:1: rule__STCaseCases__Group__2 : rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 ;
    public final void rule__STCaseCases__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4350:1: ( rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 )
            // InternalSTCoreParser.g:4351:2: rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3
            {
            pushFollow(FOLLOW_21);
            rule__STCaseCases__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2"


    // $ANTLR start "rule__STCaseCases__Group__2__Impl"
    // InternalSTCoreParser.g:4358:1: rule__STCaseCases__Group__2__Impl : ( Colon ) ;
    public final void rule__STCaseCases__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4362:1: ( ( Colon ) )
            // InternalSTCoreParser.g:4363:1: ( Colon )
            {
            // InternalSTCoreParser.g:4363:1: ( Colon )
            // InternalSTCoreParser.g:4364:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2__Impl"


    // $ANTLR start "rule__STCaseCases__Group__3"
    // InternalSTCoreParser.g:4373:1: rule__STCaseCases__Group__3 : rule__STCaseCases__Group__3__Impl ;
    public final void rule__STCaseCases__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4377:1: ( rule__STCaseCases__Group__3__Impl )
            // InternalSTCoreParser.g:4378:2: rule__STCaseCases__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3"


    // $ANTLR start "rule__STCaseCases__Group__3__Impl"
    // InternalSTCoreParser.g:4384:1: rule__STCaseCases__Group__3__Impl : ( ( rule__STCaseCases__StatementsAssignment_3 )* ) ;
    public final void rule__STCaseCases__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4388:1: ( ( ( rule__STCaseCases__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:4389:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:4389:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:4390:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:4391:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==RULE_ID) ) {
                    int LA42_2 = input.LA(2);

                    if ( (LA42_2==ColonEqualsSign) ) {
                        alt42=1;
                    }


                }
                else if ( (LA42_0==CONTINUE||(LA42_0>=REPEAT && LA42_0<=RETURN)||LA42_0==WHILE||LA42_0==CASE||LA42_0==EXIT||LA42_0==FOR||LA42_0==IF||LA42_0==Semicolon) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalSTCoreParser.g:4391:3: rule__STCaseCases__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STCaseCases__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__0"
    // InternalSTCoreParser.g:4400:1: rule__STCaseCases__Group_1__0 : rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 ;
    public final void rule__STCaseCases__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4404:1: ( rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 )
            // InternalSTCoreParser.g:4405:2: rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STCaseCases__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0"


    // $ANTLR start "rule__STCaseCases__Group_1__0__Impl"
    // InternalSTCoreParser.g:4412:1: rule__STCaseCases__Group_1__0__Impl : ( Comma ) ;
    public final void rule__STCaseCases__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4416:1: ( ( Comma ) )
            // InternalSTCoreParser.g:4417:1: ( Comma )
            {
            // InternalSTCoreParser.g:4417:1: ( Comma )
            // InternalSTCoreParser.g:4418:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__1"
    // InternalSTCoreParser.g:4427:1: rule__STCaseCases__Group_1__1 : rule__STCaseCases__Group_1__1__Impl ;
    public final void rule__STCaseCases__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4431:1: ( rule__STCaseCases__Group_1__1__Impl )
            // InternalSTCoreParser.g:4432:2: rule__STCaseCases__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1"


    // $ANTLR start "rule__STCaseCases__Group_1__1__Impl"
    // InternalSTCoreParser.g:4438:1: rule__STCaseCases__Group_1__1__Impl : ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) ;
    public final void rule__STCaseCases__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4442:1: ( ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:4443:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:4443:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            // InternalSTCoreParser.g:4444:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:4445:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            // InternalSTCoreParser.g:4445:3: rule__STCaseCases__ConditionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__0"
    // InternalSTCoreParser.g:4454:1: rule__STElsePart__Group__0 : rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 ;
    public final void rule__STElsePart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4458:1: ( rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 )
            // InternalSTCoreParser.g:4459:2: rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__STElsePart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0"


    // $ANTLR start "rule__STElsePart__Group__0__Impl"
    // InternalSTCoreParser.g:4466:1: rule__STElsePart__Group__0__Impl : ( () ) ;
    public final void rule__STElsePart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4470:1: ( ( () ) )
            // InternalSTCoreParser.g:4471:1: ( () )
            {
            // InternalSTCoreParser.g:4471:1: ( () )
            // InternalSTCoreParser.g:4472:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }
            // InternalSTCoreParser.g:4473:2: ()
            // InternalSTCoreParser.g:4473:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0__Impl"


    // $ANTLR start "rule__STElsePart__Group__1"
    // InternalSTCoreParser.g:4481:1: rule__STElsePart__Group__1 : rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 ;
    public final void rule__STElsePart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4485:1: ( rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 )
            // InternalSTCoreParser.g:4486:2: rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2
            {
            pushFollow(FOLLOW_21);
            rule__STElsePart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1"


    // $ANTLR start "rule__STElsePart__Group__1__Impl"
    // InternalSTCoreParser.g:4493:1: rule__STElsePart__Group__1__Impl : ( ELSE ) ;
    public final void rule__STElsePart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4497:1: ( ( ELSE ) )
            // InternalSTCoreParser.g:4498:1: ( ELSE )
            {
            // InternalSTCoreParser.g:4498:1: ( ELSE )
            // InternalSTCoreParser.g:4499:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__2"
    // InternalSTCoreParser.g:4508:1: rule__STElsePart__Group__2 : rule__STElsePart__Group__2__Impl ;
    public final void rule__STElsePart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4512:1: ( rule__STElsePart__Group__2__Impl )
            // InternalSTCoreParser.g:4513:2: rule__STElsePart__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2"


    // $ANTLR start "rule__STElsePart__Group__2__Impl"
    // InternalSTCoreParser.g:4519:1: rule__STElsePart__Group__2__Impl : ( ( rule__STElsePart__StatementsAssignment_2 )* ) ;
    public final void rule__STElsePart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4523:1: ( ( ( rule__STElsePart__StatementsAssignment_2 )* ) )
            // InternalSTCoreParser.g:4524:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            {
            // InternalSTCoreParser.g:4524:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            // InternalSTCoreParser.g:4525:2: ( rule__STElsePart__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }
            // InternalSTCoreParser.g:4526:2: ( rule__STElsePart__StatementsAssignment_2 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==CONTINUE||(LA43_0>=REPEAT && LA43_0<=RETURN)||LA43_0==WHILE||LA43_0==CASE||LA43_0==EXIT||LA43_0==FOR||LA43_0==IF||LA43_0==Semicolon||LA43_0==RULE_ID) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalSTCoreParser.g:4526:3: rule__STElsePart__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STElsePart__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__0"
    // InternalSTCoreParser.g:4535:1: rule__STForStatement__Group__0 : rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 ;
    public final void rule__STForStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4539:1: ( rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 )
            // InternalSTCoreParser.g:4540:2: rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STForStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0"


    // $ANTLR start "rule__STForStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4547:1: rule__STForStatement__Group__0__Impl : ( FOR ) ;
    public final void rule__STForStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4551:1: ( ( FOR ) )
            // InternalSTCoreParser.g:4552:1: ( FOR )
            {
            // InternalSTCoreParser.g:4552:1: ( FOR )
            // InternalSTCoreParser.g:4553:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0__Impl"


    // $ANTLR start "rule__STForStatement__Group__1"
    // InternalSTCoreParser.g:4562:1: rule__STForStatement__Group__1 : rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 ;
    public final void rule__STForStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4566:1: ( rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 )
            // InternalSTCoreParser.g:4567:2: rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__STForStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1"


    // $ANTLR start "rule__STForStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4574:1: rule__STForStatement__Group__1__Impl : ( ( rule__STForStatement__ForAssignment_1 ) ) ;
    public final void rule__STForStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4578:1: ( ( ( rule__STForStatement__ForAssignment_1 ) ) )
            // InternalSTCoreParser.g:4579:1: ( ( rule__STForStatement__ForAssignment_1 ) )
            {
            // InternalSTCoreParser.g:4579:1: ( ( rule__STForStatement__ForAssignment_1 ) )
            // InternalSTCoreParser.g:4580:2: ( rule__STForStatement__ForAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getForAssignment_1()); 
            }
            // InternalSTCoreParser.g:4581:2: ( rule__STForStatement__ForAssignment_1 )
            // InternalSTCoreParser.g:4581:3: rule__STForStatement__ForAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ForAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getForAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1__Impl"


    // $ANTLR start "rule__STForStatement__Group__2"
    // InternalSTCoreParser.g:4589:1: rule__STForStatement__Group__2 : rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 ;
    public final void rule__STForStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4593:1: ( rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 )
            // InternalSTCoreParser.g:4594:2: rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STForStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2"


    // $ANTLR start "rule__STForStatement__Group__2__Impl"
    // InternalSTCoreParser.g:4601:1: rule__STForStatement__Group__2__Impl : ( TO ) ;
    public final void rule__STForStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4605:1: ( ( TO ) )
            // InternalSTCoreParser.g:4606:1: ( TO )
            {
            // InternalSTCoreParser.g:4606:1: ( TO )
            // InternalSTCoreParser.g:4607:2: TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getTOKeyword_2()); 
            }
            match(input,TO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getTOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__3"
    // InternalSTCoreParser.g:4616:1: rule__STForStatement__Group__3 : rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 ;
    public final void rule__STForStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4620:1: ( rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 )
            // InternalSTCoreParser.g:4621:2: rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__STForStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3"


    // $ANTLR start "rule__STForStatement__Group__3__Impl"
    // InternalSTCoreParser.g:4628:1: rule__STForStatement__Group__3__Impl : ( ( rule__STForStatement__ToAssignment_3 ) ) ;
    public final void rule__STForStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4632:1: ( ( ( rule__STForStatement__ToAssignment_3 ) ) )
            // InternalSTCoreParser.g:4633:1: ( ( rule__STForStatement__ToAssignment_3 ) )
            {
            // InternalSTCoreParser.g:4633:1: ( ( rule__STForStatement__ToAssignment_3 ) )
            // InternalSTCoreParser.g:4634:2: ( rule__STForStatement__ToAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToAssignment_3()); 
            }
            // InternalSTCoreParser.g:4635:2: ( rule__STForStatement__ToAssignment_3 )
            // InternalSTCoreParser.g:4635:3: rule__STForStatement__ToAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ToAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3__Impl"


    // $ANTLR start "rule__STForStatement__Group__4"
    // InternalSTCoreParser.g:4643:1: rule__STForStatement__Group__4 : rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 ;
    public final void rule__STForStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4647:1: ( rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 )
            // InternalSTCoreParser.g:4648:2: rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5
            {
            pushFollow(FOLLOW_31);
            rule__STForStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4"


    // $ANTLR start "rule__STForStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4655:1: rule__STForStatement__Group__4__Impl : ( ( rule__STForStatement__Group_4__0 )? ) ;
    public final void rule__STForStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4659:1: ( ( ( rule__STForStatement__Group_4__0 )? ) )
            // InternalSTCoreParser.g:4660:1: ( ( rule__STForStatement__Group_4__0 )? )
            {
            // InternalSTCoreParser.g:4660:1: ( ( rule__STForStatement__Group_4__0 )? )
            // InternalSTCoreParser.g:4661:2: ( rule__STForStatement__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup_4()); 
            }
            // InternalSTCoreParser.g:4662:2: ( rule__STForStatement__Group_4__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==BY) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalSTCoreParser.g:4662:3: rule__STForStatement__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STForStatement__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4__Impl"


    // $ANTLR start "rule__STForStatement__Group__5"
    // InternalSTCoreParser.g:4670:1: rule__STForStatement__Group__5 : rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 ;
    public final void rule__STForStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4674:1: ( rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 )
            // InternalSTCoreParser.g:4675:2: rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6
            {
            pushFollow(FOLLOW_32);
            rule__STForStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5"


    // $ANTLR start "rule__STForStatement__Group__5__Impl"
    // InternalSTCoreParser.g:4682:1: rule__STForStatement__Group__5__Impl : ( DO ) ;
    public final void rule__STForStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4686:1: ( ( DO ) )
            // InternalSTCoreParser.g:4687:1: ( DO )
            {
            // InternalSTCoreParser.g:4687:1: ( DO )
            // InternalSTCoreParser.g:4688:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getDOKeyword_5()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getDOKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5__Impl"


    // $ANTLR start "rule__STForStatement__Group__6"
    // InternalSTCoreParser.g:4697:1: rule__STForStatement__Group__6 : rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 ;
    public final void rule__STForStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4701:1: ( rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 )
            // InternalSTCoreParser.g:4702:2: rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7
            {
            pushFollow(FOLLOW_32);
            rule__STForStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6"


    // $ANTLR start "rule__STForStatement__Group__6__Impl"
    // InternalSTCoreParser.g:4709:1: rule__STForStatement__Group__6__Impl : ( ( rule__STForStatement__StatementsAssignment_6 )* ) ;
    public final void rule__STForStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4713:1: ( ( ( rule__STForStatement__StatementsAssignment_6 )* ) )
            // InternalSTCoreParser.g:4714:1: ( ( rule__STForStatement__StatementsAssignment_6 )* )
            {
            // InternalSTCoreParser.g:4714:1: ( ( rule__STForStatement__StatementsAssignment_6 )* )
            // InternalSTCoreParser.g:4715:2: ( rule__STForStatement__StatementsAssignment_6 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsAssignment_6()); 
            }
            // InternalSTCoreParser.g:4716:2: ( rule__STForStatement__StatementsAssignment_6 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==CONTINUE||(LA45_0>=REPEAT && LA45_0<=RETURN)||LA45_0==WHILE||LA45_0==CASE||LA45_0==EXIT||LA45_0==FOR||LA45_0==IF||LA45_0==Semicolon||LA45_0==RULE_ID) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalSTCoreParser.g:4716:3: rule__STForStatement__StatementsAssignment_6
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STForStatement__StatementsAssignment_6();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6__Impl"


    // $ANTLR start "rule__STForStatement__Group__7"
    // InternalSTCoreParser.g:4724:1: rule__STForStatement__Group__7 : rule__STForStatement__Group__7__Impl ;
    public final void rule__STForStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4728:1: ( rule__STForStatement__Group__7__Impl )
            // InternalSTCoreParser.g:4729:2: rule__STForStatement__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7"


    // $ANTLR start "rule__STForStatement__Group__7__Impl"
    // InternalSTCoreParser.g:4735:1: rule__STForStatement__Group__7__Impl : ( END_FOR ) ;
    public final void rule__STForStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4739:1: ( ( END_FOR ) )
            // InternalSTCoreParser.g:4740:1: ( END_FOR )
            {
            // InternalSTCoreParser.g:4740:1: ( END_FOR )
            // InternalSTCoreParser.g:4741:2: END_FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_7()); 
            }
            match(input,END_FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7__Impl"


    // $ANTLR start "rule__STForStatement__Group_4__0"
    // InternalSTCoreParser.g:4751:1: rule__STForStatement__Group_4__0 : rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1 ;
    public final void rule__STForStatement__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4755:1: ( rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1 )
            // InternalSTCoreParser.g:4756:2: rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1
            {
            pushFollow(FOLLOW_10);
            rule__STForStatement__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__0"


    // $ANTLR start "rule__STForStatement__Group_4__0__Impl"
    // InternalSTCoreParser.g:4763:1: rule__STForStatement__Group_4__0__Impl : ( BY ) ;
    public final void rule__STForStatement__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4767:1: ( ( BY ) )
            // InternalSTCoreParser.g:4768:1: ( BY )
            {
            // InternalSTCoreParser.g:4768:1: ( BY )
            // InternalSTCoreParser.g:4769:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBYKeyword_4_0()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBYKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__0__Impl"


    // $ANTLR start "rule__STForStatement__Group_4__1"
    // InternalSTCoreParser.g:4778:1: rule__STForStatement__Group_4__1 : rule__STForStatement__Group_4__1__Impl ;
    public final void rule__STForStatement__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4782:1: ( rule__STForStatement__Group_4__1__Impl )
            // InternalSTCoreParser.g:4783:2: rule__STForStatement__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__1"


    // $ANTLR start "rule__STForStatement__Group_4__1__Impl"
    // InternalSTCoreParser.g:4789:1: rule__STForStatement__Group_4__1__Impl : ( ( rule__STForStatement__ByAssignment_4_1 ) ) ;
    public final void rule__STForStatement__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4793:1: ( ( ( rule__STForStatement__ByAssignment_4_1 ) ) )
            // InternalSTCoreParser.g:4794:1: ( ( rule__STForStatement__ByAssignment_4_1 ) )
            {
            // InternalSTCoreParser.g:4794:1: ( ( rule__STForStatement__ByAssignment_4_1 ) )
            // InternalSTCoreParser.g:4795:2: ( rule__STForStatement__ByAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getByAssignment_4_1()); 
            }
            // InternalSTCoreParser.g:4796:2: ( rule__STForStatement__ByAssignment_4_1 )
            // InternalSTCoreParser.g:4796:3: rule__STForStatement__ByAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ByAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getByAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__0"
    // InternalSTCoreParser.g:4805:1: rule__STWhileStatement__Group__0 : rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 ;
    public final void rule__STWhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4809:1: ( rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 )
            // InternalSTCoreParser.g:4810:2: rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STWhileStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0"


    // $ANTLR start "rule__STWhileStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4817:1: rule__STWhileStatement__Group__0__Impl : ( WHILE ) ;
    public final void rule__STWhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4821:1: ( ( WHILE ) )
            // InternalSTCoreParser.g:4822:1: ( WHILE )
            {
            // InternalSTCoreParser.g:4822:1: ( WHILE )
            // InternalSTCoreParser.g:4823:2: WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }
            match(input,WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__1"
    // InternalSTCoreParser.g:4832:1: rule__STWhileStatement__Group__1 : rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 ;
    public final void rule__STWhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4836:1: ( rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 )
            // InternalSTCoreParser.g:4837:2: rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__STWhileStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1"


    // $ANTLR start "rule__STWhileStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4844:1: rule__STWhileStatement__Group__1__Impl : ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STWhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4848:1: ( ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) )
            // InternalSTCoreParser.g:4849:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            {
            // InternalSTCoreParser.g:4849:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            // InternalSTCoreParser.g:4850:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTCoreParser.g:4851:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            // InternalSTCoreParser.g:4851:3: rule__STWhileStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__2"
    // InternalSTCoreParser.g:4859:1: rule__STWhileStatement__Group__2 : rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 ;
    public final void rule__STWhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4863:1: ( rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 )
            // InternalSTCoreParser.g:4864:2: rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3
            {
            pushFollow(FOLLOW_34);
            rule__STWhileStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2"


    // $ANTLR start "rule__STWhileStatement__Group__2__Impl"
    // InternalSTCoreParser.g:4871:1: rule__STWhileStatement__Group__2__Impl : ( DO ) ;
    public final void rule__STWhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4875:1: ( ( DO ) )
            // InternalSTCoreParser.g:4876:1: ( DO )
            {
            // InternalSTCoreParser.g:4876:1: ( DO )
            // InternalSTCoreParser.g:4877:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__3"
    // InternalSTCoreParser.g:4886:1: rule__STWhileStatement__Group__3 : rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 ;
    public final void rule__STWhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4890:1: ( rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 )
            // InternalSTCoreParser.g:4891:2: rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4
            {
            pushFollow(FOLLOW_34);
            rule__STWhileStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3"


    // $ANTLR start "rule__STWhileStatement__Group__3__Impl"
    // InternalSTCoreParser.g:4898:1: rule__STWhileStatement__Group__3__Impl : ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STWhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4902:1: ( ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:4903:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:4903:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:4904:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:4905:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==CONTINUE||(LA46_0>=REPEAT && LA46_0<=RETURN)||LA46_0==WHILE||LA46_0==CASE||LA46_0==EXIT||LA46_0==FOR||LA46_0==IF||LA46_0==Semicolon||LA46_0==RULE_ID) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalSTCoreParser.g:4905:3: rule__STWhileStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STWhileStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__4"
    // InternalSTCoreParser.g:4913:1: rule__STWhileStatement__Group__4 : rule__STWhileStatement__Group__4__Impl ;
    public final void rule__STWhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4917:1: ( rule__STWhileStatement__Group__4__Impl )
            // InternalSTCoreParser.g:4918:2: rule__STWhileStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4"


    // $ANTLR start "rule__STWhileStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4924:1: rule__STWhileStatement__Group__4__Impl : ( END_WHILE ) ;
    public final void rule__STWhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4928:1: ( ( END_WHILE ) )
            // InternalSTCoreParser.g:4929:1: ( END_WHILE )
            {
            // InternalSTCoreParser.g:4929:1: ( END_WHILE )
            // InternalSTCoreParser.g:4930:2: END_WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }
            match(input,END_WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__0"
    // InternalSTCoreParser.g:4940:1: rule__STRepeatStatement__Group__0 : rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 ;
    public final void rule__STRepeatStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4944:1: ( rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 )
            // InternalSTCoreParser.g:4945:2: rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__STRepeatStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0"


    // $ANTLR start "rule__STRepeatStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4952:1: rule__STRepeatStatement__Group__0__Impl : ( REPEAT ) ;
    public final void rule__STRepeatStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4956:1: ( ( REPEAT ) )
            // InternalSTCoreParser.g:4957:1: ( REPEAT )
            {
            // InternalSTCoreParser.g:4957:1: ( REPEAT )
            // InternalSTCoreParser.g:4958:2: REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }
            match(input,REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__1"
    // InternalSTCoreParser.g:4967:1: rule__STRepeatStatement__Group__1 : rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 ;
    public final void rule__STRepeatStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4971:1: ( rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 )
            // InternalSTCoreParser.g:4972:2: rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2
            {
            pushFollow(FOLLOW_35);
            rule__STRepeatStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1"


    // $ANTLR start "rule__STRepeatStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4979:1: rule__STRepeatStatement__Group__1__Impl : ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) ;
    public final void rule__STRepeatStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4983:1: ( ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) )
            // InternalSTCoreParser.g:4984:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            {
            // InternalSTCoreParser.g:4984:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            // InternalSTCoreParser.g:4985:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }
            // InternalSTCoreParser.g:4986:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==CONTINUE||(LA47_0>=REPEAT && LA47_0<=RETURN)||LA47_0==WHILE||LA47_0==CASE||LA47_0==EXIT||LA47_0==FOR||LA47_0==IF||LA47_0==Semicolon||LA47_0==RULE_ID) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalSTCoreParser.g:4986:3: rule__STRepeatStatement__StatementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STRepeatStatement__StatementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__2"
    // InternalSTCoreParser.g:4994:1: rule__STRepeatStatement__Group__2 : rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 ;
    public final void rule__STRepeatStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4998:1: ( rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 )
            // InternalSTCoreParser.g:4999:2: rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STRepeatStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2"


    // $ANTLR start "rule__STRepeatStatement__Group__2__Impl"
    // InternalSTCoreParser.g:5006:1: rule__STRepeatStatement__Group__2__Impl : ( UNTIL ) ;
    public final void rule__STRepeatStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5010:1: ( ( UNTIL ) )
            // InternalSTCoreParser.g:5011:1: ( UNTIL )
            {
            // InternalSTCoreParser.g:5011:1: ( UNTIL )
            // InternalSTCoreParser.g:5012:2: UNTIL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }
            match(input,UNTIL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__3"
    // InternalSTCoreParser.g:5021:1: rule__STRepeatStatement__Group__3 : rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 ;
    public final void rule__STRepeatStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5025:1: ( rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 )
            // InternalSTCoreParser.g:5026:2: rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4
            {
            pushFollow(FOLLOW_36);
            rule__STRepeatStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3"


    // $ANTLR start "rule__STRepeatStatement__Group__3__Impl"
    // InternalSTCoreParser.g:5033:1: rule__STRepeatStatement__Group__3__Impl : ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) ;
    public final void rule__STRepeatStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5037:1: ( ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) )
            // InternalSTCoreParser.g:5038:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            {
            // InternalSTCoreParser.g:5038:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            // InternalSTCoreParser.g:5039:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }
            // InternalSTCoreParser.g:5040:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            // InternalSTCoreParser.g:5040:3: rule__STRepeatStatement__ConditionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__ConditionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__4"
    // InternalSTCoreParser.g:5048:1: rule__STRepeatStatement__Group__4 : rule__STRepeatStatement__Group__4__Impl ;
    public final void rule__STRepeatStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5052:1: ( rule__STRepeatStatement__Group__4__Impl )
            // InternalSTCoreParser.g:5053:2: rule__STRepeatStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4"


    // $ANTLR start "rule__STRepeatStatement__Group__4__Impl"
    // InternalSTCoreParser.g:5059:1: rule__STRepeatStatement__Group__4__Impl : ( END_REPEAT ) ;
    public final void rule__STRepeatStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5063:1: ( ( END_REPEAT ) )
            // InternalSTCoreParser.g:5064:1: ( END_REPEAT )
            {
            // InternalSTCoreParser.g:5064:1: ( END_REPEAT )
            // InternalSTCoreParser.g:5065:2: END_REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }
            match(input,END_REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__0"
    // InternalSTCoreParser.g:5075:1: rule__STSubrangeExpression__Group__0 : rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 ;
    public final void rule__STSubrangeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5079:1: ( rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 )
            // InternalSTCoreParser.g:5080:2: rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__STSubrangeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0"


    // $ANTLR start "rule__STSubrangeExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5087:1: rule__STSubrangeExpression__Group__0__Impl : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5091:1: ( ( ruleSTOrExpression ) )
            // InternalSTCoreParser.g:5092:1: ( ruleSTOrExpression )
            {
            // InternalSTCoreParser.g:5092:1: ( ruleSTOrExpression )
            // InternalSTCoreParser.g:5093:2: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__1"
    // InternalSTCoreParser.g:5102:1: rule__STSubrangeExpression__Group__1 : rule__STSubrangeExpression__Group__1__Impl ;
    public final void rule__STSubrangeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5106:1: ( rule__STSubrangeExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5107:2: rule__STSubrangeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1"


    // $ANTLR start "rule__STSubrangeExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5113:1: rule__STSubrangeExpression__Group__1__Impl : ( ( rule__STSubrangeExpression__Group_1__0 )* ) ;
    public final void rule__STSubrangeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5117:1: ( ( ( rule__STSubrangeExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5118:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5118:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5119:2: ( rule__STSubrangeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5120:2: ( rule__STSubrangeExpression__Group_1__0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==FullStopFullStop) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalSTCoreParser.g:5120:3: rule__STSubrangeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_38);
            	    rule__STSubrangeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0"
    // InternalSTCoreParser.g:5129:1: rule__STSubrangeExpression__Group_1__0 : rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 ;
    public final void rule__STSubrangeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5133:1: ( rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 )
            // InternalSTCoreParser.g:5134:2: rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STSubrangeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5141:1: rule__STSubrangeExpression__Group_1__0__Impl : ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5145:1: ( ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5146:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5146:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5147:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5148:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5148:3: rule__STSubrangeExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1"
    // InternalSTCoreParser.g:5156:1: rule__STSubrangeExpression__Group_1__1 : rule__STSubrangeExpression__Group_1__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5160:1: ( rule__STSubrangeExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5161:2: rule__STSubrangeExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5167:1: rule__STSubrangeExpression__Group_1__1__Impl : ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5171:1: ( ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5172:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5172:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5173:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5174:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5174:3: rule__STSubrangeExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5183:1: rule__STSubrangeExpression__Group_1_0__0 : rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 ;
    public final void rule__STSubrangeExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5187:1: ( rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5188:2: rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_37);
            rule__STSubrangeExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5195:1: rule__STSubrangeExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STSubrangeExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5199:1: ( ( () ) )
            // InternalSTCoreParser.g:5200:1: ( () )
            {
            // InternalSTCoreParser.g:5200:1: ( () )
            // InternalSTCoreParser.g:5201:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5202:2: ()
            // InternalSTCoreParser.g:5202:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5210:1: rule__STSubrangeExpression__Group_1_0__1 : rule__STSubrangeExpression__Group_1_0__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5214:1: ( rule__STSubrangeExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5215:2: rule__STSubrangeExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5221:1: rule__STSubrangeExpression__Group_1_0__1__Impl : ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5225:1: ( ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5226:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5226:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5227:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5228:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5228:3: rule__STSubrangeExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group__0"
    // InternalSTCoreParser.g:5237:1: rule__STOrExpression__Group__0 : rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 ;
    public final void rule__STOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5241:1: ( rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 )
            // InternalSTCoreParser.g:5242:2: rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__STOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0"


    // $ANTLR start "rule__STOrExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5249:1: rule__STOrExpression__Group__0__Impl : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5253:1: ( ( ruleSTXorExpression ) )
            // InternalSTCoreParser.g:5254:1: ( ruleSTXorExpression )
            {
            // InternalSTCoreParser.g:5254:1: ( ruleSTXorExpression )
            // InternalSTCoreParser.g:5255:2: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group__1"
    // InternalSTCoreParser.g:5264:1: rule__STOrExpression__Group__1 : rule__STOrExpression__Group__1__Impl ;
    public final void rule__STOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5268:1: ( rule__STOrExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5269:2: rule__STOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1"


    // $ANTLR start "rule__STOrExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5275:1: rule__STOrExpression__Group__1__Impl : ( ( rule__STOrExpression__Group_1__0 )* ) ;
    public final void rule__STOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5279:1: ( ( ( rule__STOrExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5280:1: ( ( rule__STOrExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5280:1: ( ( rule__STOrExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5281:2: ( rule__STOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5282:2: ( rule__STOrExpression__Group_1__0 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==OR) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalSTCoreParser.g:5282:3: rule__STOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__STOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__0"
    // InternalSTCoreParser.g:5291:1: rule__STOrExpression__Group_1__0 : rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 ;
    public final void rule__STOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5295:1: ( rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 )
            // InternalSTCoreParser.g:5296:2: rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0"


    // $ANTLR start "rule__STOrExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5303:1: rule__STOrExpression__Group_1__0__Impl : ( ( rule__STOrExpression__Group_1_0__0 ) ) ;
    public final void rule__STOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5307:1: ( ( ( rule__STOrExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5308:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5308:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5309:2: ( rule__STOrExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5310:2: ( rule__STOrExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5310:3: rule__STOrExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__1"
    // InternalSTCoreParser.g:5318:1: rule__STOrExpression__Group_1__1 : rule__STOrExpression__Group_1__1__Impl ;
    public final void rule__STOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5322:1: ( rule__STOrExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5323:2: rule__STOrExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1"


    // $ANTLR start "rule__STOrExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5329:1: rule__STOrExpression__Group_1__1__Impl : ( ( rule__STOrExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5333:1: ( ( ( rule__STOrExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5334:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5334:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5335:2: ( rule__STOrExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5336:2: ( rule__STOrExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5336:3: rule__STOrExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5345:1: rule__STOrExpression__Group_1_0__0 : rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 ;
    public final void rule__STOrExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5349:1: ( rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5350:2: rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_39);
            rule__STOrExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5357:1: rule__STOrExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STOrExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5361:1: ( ( () ) )
            // InternalSTCoreParser.g:5362:1: ( () )
            {
            // InternalSTCoreParser.g:5362:1: ( () )
            // InternalSTCoreParser.g:5363:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5364:2: ()
            // InternalSTCoreParser.g:5364:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5372:1: rule__STOrExpression__Group_1_0__1 : rule__STOrExpression__Group_1_0__1__Impl ;
    public final void rule__STOrExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5376:1: ( rule__STOrExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5377:2: rule__STOrExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5383:1: rule__STOrExpression__Group_1_0__1__Impl : ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STOrExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5387:1: ( ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5388:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5388:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5389:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5390:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5390:3: rule__STOrExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group__0"
    // InternalSTCoreParser.g:5399:1: rule__STXorExpression__Group__0 : rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 ;
    public final void rule__STXorExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5403:1: ( rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 )
            // InternalSTCoreParser.g:5404:2: rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__STXorExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0"


    // $ANTLR start "rule__STXorExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5411:1: rule__STXorExpression__Group__0__Impl : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5415:1: ( ( ruleSTAndExpression ) )
            // InternalSTCoreParser.g:5416:1: ( ruleSTAndExpression )
            {
            // InternalSTCoreParser.g:5416:1: ( ruleSTAndExpression )
            // InternalSTCoreParser.g:5417:2: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group__1"
    // InternalSTCoreParser.g:5426:1: rule__STXorExpression__Group__1 : rule__STXorExpression__Group__1__Impl ;
    public final void rule__STXorExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5430:1: ( rule__STXorExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5431:2: rule__STXorExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1"


    // $ANTLR start "rule__STXorExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5437:1: rule__STXorExpression__Group__1__Impl : ( ( rule__STXorExpression__Group_1__0 )* ) ;
    public final void rule__STXorExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5441:1: ( ( ( rule__STXorExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5442:1: ( ( rule__STXorExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5442:1: ( ( rule__STXorExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5443:2: ( rule__STXorExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5444:2: ( rule__STXorExpression__Group_1__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==XOR) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalSTCoreParser.g:5444:3: rule__STXorExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_42);
            	    rule__STXorExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__0"
    // InternalSTCoreParser.g:5453:1: rule__STXorExpression__Group_1__0 : rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 ;
    public final void rule__STXorExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5457:1: ( rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 )
            // InternalSTCoreParser.g:5458:2: rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STXorExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0"


    // $ANTLR start "rule__STXorExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5465:1: rule__STXorExpression__Group_1__0__Impl : ( ( rule__STXorExpression__Group_1_0__0 ) ) ;
    public final void rule__STXorExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5469:1: ( ( ( rule__STXorExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5470:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5470:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5471:2: ( rule__STXorExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5472:2: ( rule__STXorExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5472:3: rule__STXorExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__1"
    // InternalSTCoreParser.g:5480:1: rule__STXorExpression__Group_1__1 : rule__STXorExpression__Group_1__1__Impl ;
    public final void rule__STXorExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5484:1: ( rule__STXorExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5485:2: rule__STXorExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1"


    // $ANTLR start "rule__STXorExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5491:1: rule__STXorExpression__Group_1__1__Impl : ( ( rule__STXorExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STXorExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5495:1: ( ( ( rule__STXorExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5496:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5496:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5497:2: ( rule__STXorExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5498:2: ( rule__STXorExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5498:3: rule__STXorExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5507:1: rule__STXorExpression__Group_1_0__0 : rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 ;
    public final void rule__STXorExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5511:1: ( rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5512:2: rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_41);
            rule__STXorExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5519:1: rule__STXorExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STXorExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5523:1: ( ( () ) )
            // InternalSTCoreParser.g:5524:1: ( () )
            {
            // InternalSTCoreParser.g:5524:1: ( () )
            // InternalSTCoreParser.g:5525:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5526:2: ()
            // InternalSTCoreParser.g:5526:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5534:1: rule__STXorExpression__Group_1_0__1 : rule__STXorExpression__Group_1_0__1__Impl ;
    public final void rule__STXorExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5538:1: ( rule__STXorExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5539:2: rule__STXorExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5545:1: rule__STXorExpression__Group_1_0__1__Impl : ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STXorExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5549:1: ( ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5550:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5550:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5551:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5552:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5552:3: rule__STXorExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group__0"
    // InternalSTCoreParser.g:5561:1: rule__STAndExpression__Group__0 : rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 ;
    public final void rule__STAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5565:1: ( rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 )
            // InternalSTCoreParser.g:5566:2: rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1
            {
            pushFollow(FOLLOW_43);
            rule__STAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0"


    // $ANTLR start "rule__STAndExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5573:1: rule__STAndExpression__Group__0__Impl : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5577:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTCoreParser.g:5578:1: ( ruleSTEqualityExpression )
            {
            // InternalSTCoreParser.g:5578:1: ( ruleSTEqualityExpression )
            // InternalSTCoreParser.g:5579:2: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group__1"
    // InternalSTCoreParser.g:5588:1: rule__STAndExpression__Group__1 : rule__STAndExpression__Group__1__Impl ;
    public final void rule__STAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5592:1: ( rule__STAndExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5593:2: rule__STAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1"


    // $ANTLR start "rule__STAndExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5599:1: rule__STAndExpression__Group__1__Impl : ( ( rule__STAndExpression__Group_1__0 )* ) ;
    public final void rule__STAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5603:1: ( ( ( rule__STAndExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5604:1: ( ( rule__STAndExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5604:1: ( ( rule__STAndExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5605:2: ( rule__STAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5606:2: ( rule__STAndExpression__Group_1__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==AND||LA51_0==Ampersand) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalSTCoreParser.g:5606:3: rule__STAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_44);
            	    rule__STAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__0"
    // InternalSTCoreParser.g:5615:1: rule__STAndExpression__Group_1__0 : rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 ;
    public final void rule__STAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5619:1: ( rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 )
            // InternalSTCoreParser.g:5620:2: rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0"


    // $ANTLR start "rule__STAndExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5627:1: rule__STAndExpression__Group_1__0__Impl : ( ( rule__STAndExpression__Group_1_0__0 ) ) ;
    public final void rule__STAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5631:1: ( ( ( rule__STAndExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5632:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5632:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5633:2: ( rule__STAndExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5634:2: ( rule__STAndExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5634:3: rule__STAndExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__1"
    // InternalSTCoreParser.g:5642:1: rule__STAndExpression__Group_1__1 : rule__STAndExpression__Group_1__1__Impl ;
    public final void rule__STAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5646:1: ( rule__STAndExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5647:2: rule__STAndExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1"


    // $ANTLR start "rule__STAndExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5653:1: rule__STAndExpression__Group_1__1__Impl : ( ( rule__STAndExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5657:1: ( ( ( rule__STAndExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5658:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5658:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5659:2: ( rule__STAndExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5660:2: ( rule__STAndExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5660:3: rule__STAndExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5669:1: rule__STAndExpression__Group_1_0__0 : rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 ;
    public final void rule__STAndExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5673:1: ( rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5674:2: rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_43);
            rule__STAndExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5681:1: rule__STAndExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAndExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5685:1: ( ( () ) )
            // InternalSTCoreParser.g:5686:1: ( () )
            {
            // InternalSTCoreParser.g:5686:1: ( () )
            // InternalSTCoreParser.g:5687:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5688:2: ()
            // InternalSTCoreParser.g:5688:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5696:1: rule__STAndExpression__Group_1_0__1 : rule__STAndExpression__Group_1_0__1__Impl ;
    public final void rule__STAndExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5700:1: ( rule__STAndExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5701:2: rule__STAndExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5707:1: rule__STAndExpression__Group_1_0__1__Impl : ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAndExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5711:1: ( ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5712:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5712:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5713:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5714:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5714:3: rule__STAndExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__0"
    // InternalSTCoreParser.g:5723:1: rule__STEqualityExpression__Group__0 : rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 ;
    public final void rule__STEqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5727:1: ( rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 )
            // InternalSTCoreParser.g:5728:2: rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__STEqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0"


    // $ANTLR start "rule__STEqualityExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5735:1: rule__STEqualityExpression__Group__0__Impl : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5739:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTCoreParser.g:5740:1: ( ruleSTComparisonExpression )
            {
            // InternalSTCoreParser.g:5740:1: ( ruleSTComparisonExpression )
            // InternalSTCoreParser.g:5741:2: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__1"
    // InternalSTCoreParser.g:5750:1: rule__STEqualityExpression__Group__1 : rule__STEqualityExpression__Group__1__Impl ;
    public final void rule__STEqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5754:1: ( rule__STEqualityExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5755:2: rule__STEqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1"


    // $ANTLR start "rule__STEqualityExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5761:1: rule__STEqualityExpression__Group__1__Impl : ( ( rule__STEqualityExpression__Group_1__0 )* ) ;
    public final void rule__STEqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5765:1: ( ( ( rule__STEqualityExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5766:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5766:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5767:2: ( rule__STEqualityExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5768:2: ( rule__STEqualityExpression__Group_1__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==LessThanSignGreaterThanSign||LA52_0==EqualsSign) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalSTCoreParser.g:5768:3: rule__STEqualityExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__STEqualityExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0"
    // InternalSTCoreParser.g:5777:1: rule__STEqualityExpression__Group_1__0 : rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 ;
    public final void rule__STEqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5781:1: ( rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 )
            // InternalSTCoreParser.g:5782:2: rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STEqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5789:1: rule__STEqualityExpression__Group_1__0__Impl : ( ( rule__STEqualityExpression__Group_1_0__0 ) ) ;
    public final void rule__STEqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5793:1: ( ( ( rule__STEqualityExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5794:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5794:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5795:2: ( rule__STEqualityExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5796:2: ( rule__STEqualityExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5796:3: rule__STEqualityExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1"
    // InternalSTCoreParser.g:5804:1: rule__STEqualityExpression__Group_1__1 : rule__STEqualityExpression__Group_1__1__Impl ;
    public final void rule__STEqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5808:1: ( rule__STEqualityExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5809:2: rule__STEqualityExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5815:1: rule__STEqualityExpression__Group_1__1__Impl : ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5819:1: ( ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5820:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5820:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5821:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5822:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5822:3: rule__STEqualityExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5831:1: rule__STEqualityExpression__Group_1_0__0 : rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 ;
    public final void rule__STEqualityExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5835:1: ( rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5836:2: rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_45);
            rule__STEqualityExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5843:1: rule__STEqualityExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STEqualityExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5847:1: ( ( () ) )
            // InternalSTCoreParser.g:5848:1: ( () )
            {
            // InternalSTCoreParser.g:5848:1: ( () )
            // InternalSTCoreParser.g:5849:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5850:2: ()
            // InternalSTCoreParser.g:5850:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5858:1: rule__STEqualityExpression__Group_1_0__1 : rule__STEqualityExpression__Group_1_0__1__Impl ;
    public final void rule__STEqualityExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5862:1: ( rule__STEqualityExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5863:2: rule__STEqualityExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5869:1: rule__STEqualityExpression__Group_1_0__1__Impl : ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5873:1: ( ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5874:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5874:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5875:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5876:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5876:3: rule__STEqualityExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__0"
    // InternalSTCoreParser.g:5885:1: rule__STComparisonExpression__Group__0 : rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 ;
    public final void rule__STComparisonExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5889:1: ( rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 )
            // InternalSTCoreParser.g:5890:2: rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__STComparisonExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0"


    // $ANTLR start "rule__STComparisonExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5897:1: rule__STComparisonExpression__Group__0__Impl : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5901:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTCoreParser.g:5902:1: ( ruleSTAddSubExpression )
            {
            // InternalSTCoreParser.g:5902:1: ( ruleSTAddSubExpression )
            // InternalSTCoreParser.g:5903:2: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__1"
    // InternalSTCoreParser.g:5912:1: rule__STComparisonExpression__Group__1 : rule__STComparisonExpression__Group__1__Impl ;
    public final void rule__STComparisonExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5916:1: ( rule__STComparisonExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5917:2: rule__STComparisonExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1"


    // $ANTLR start "rule__STComparisonExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5923:1: rule__STComparisonExpression__Group__1__Impl : ( ( rule__STComparisonExpression__Group_1__0 )* ) ;
    public final void rule__STComparisonExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5927:1: ( ( ( rule__STComparisonExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5928:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5928:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5929:2: ( rule__STComparisonExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5930:2: ( rule__STComparisonExpression__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==LessThanSignEqualsSign||LA53_0==GreaterThanSignEqualsSign||LA53_0==LessThanSign||LA53_0==GreaterThanSign) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalSTCoreParser.g:5930:3: rule__STComparisonExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__STComparisonExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0"
    // InternalSTCoreParser.g:5939:1: rule__STComparisonExpression__Group_1__0 : rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 ;
    public final void rule__STComparisonExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5943:1: ( rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 )
            // InternalSTCoreParser.g:5944:2: rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STComparisonExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5951:1: rule__STComparisonExpression__Group_1__0__Impl : ( ( rule__STComparisonExpression__Group_1_0__0 ) ) ;
    public final void rule__STComparisonExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5955:1: ( ( ( rule__STComparisonExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5956:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5956:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5957:2: ( rule__STComparisonExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5958:2: ( rule__STComparisonExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5958:3: rule__STComparisonExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1"
    // InternalSTCoreParser.g:5966:1: rule__STComparisonExpression__Group_1__1 : rule__STComparisonExpression__Group_1__1__Impl ;
    public final void rule__STComparisonExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5970:1: ( rule__STComparisonExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5971:2: rule__STComparisonExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5977:1: rule__STComparisonExpression__Group_1__1__Impl : ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5981:1: ( ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5982:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5982:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5983:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5984:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5984:3: rule__STComparisonExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5993:1: rule__STComparisonExpression__Group_1_0__0 : rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 ;
    public final void rule__STComparisonExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5997:1: ( rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5998:2: rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_47);
            rule__STComparisonExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:6005:1: rule__STComparisonExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STComparisonExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6009:1: ( ( () ) )
            // InternalSTCoreParser.g:6010:1: ( () )
            {
            // InternalSTCoreParser.g:6010:1: ( () )
            // InternalSTCoreParser.g:6011:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:6012:2: ()
            // InternalSTCoreParser.g:6012:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1"
    // InternalSTCoreParser.g:6020:1: rule__STComparisonExpression__Group_1_0__1 : rule__STComparisonExpression__Group_1_0__1__Impl ;
    public final void rule__STComparisonExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6024:1: ( rule__STComparisonExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:6025:2: rule__STComparisonExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:6031:1: rule__STComparisonExpression__Group_1_0__1__Impl : ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6035:1: ( ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:6036:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6036:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:6037:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:6038:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:6038:3: rule__STComparisonExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__0"
    // InternalSTCoreParser.g:6047:1: rule__STAddSubExpression__Group__0 : rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 ;
    public final void rule__STAddSubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6051:1: ( rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 )
            // InternalSTCoreParser.g:6052:2: rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__STAddSubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0"


    // $ANTLR start "rule__STAddSubExpression__Group__0__Impl"
    // InternalSTCoreParser.g:6059:1: rule__STAddSubExpression__Group__0__Impl : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6063:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTCoreParser.g:6064:1: ( ruleSTMulDivModExpression )
            {
            // InternalSTCoreParser.g:6064:1: ( ruleSTMulDivModExpression )
            // InternalSTCoreParser.g:6065:2: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__1"
    // InternalSTCoreParser.g:6074:1: rule__STAddSubExpression__Group__1 : rule__STAddSubExpression__Group__1__Impl ;
    public final void rule__STAddSubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6078:1: ( rule__STAddSubExpression__Group__1__Impl )
            // InternalSTCoreParser.g:6079:2: rule__STAddSubExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1"


    // $ANTLR start "rule__STAddSubExpression__Group__1__Impl"
    // InternalSTCoreParser.g:6085:1: rule__STAddSubExpression__Group__1__Impl : ( ( rule__STAddSubExpression__Group_1__0 )* ) ;
    public final void rule__STAddSubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6089:1: ( ( ( rule__STAddSubExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:6090:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:6090:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:6091:2: ( rule__STAddSubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:6092:2: ( rule__STAddSubExpression__Group_1__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==PlusSign||LA54_0==HyphenMinus) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalSTCoreParser.g:6092:3: rule__STAddSubExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_50);
            	    rule__STAddSubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0"
    // InternalSTCoreParser.g:6101:1: rule__STAddSubExpression__Group_1__0 : rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 ;
    public final void rule__STAddSubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6105:1: ( rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 )
            // InternalSTCoreParser.g:6106:2: rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STAddSubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:6113:1: rule__STAddSubExpression__Group_1__0__Impl : ( ( rule__STAddSubExpression__Group_1_0__0 ) ) ;
    public final void rule__STAddSubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6117:1: ( ( ( rule__STAddSubExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:6118:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:6118:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:6119:2: ( rule__STAddSubExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:6120:2: ( rule__STAddSubExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:6120:3: rule__STAddSubExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1"
    // InternalSTCoreParser.g:6128:1: rule__STAddSubExpression__Group_1__1 : rule__STAddSubExpression__Group_1__1__Impl ;
    public final void rule__STAddSubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6132:1: ( rule__STAddSubExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:6133:2: rule__STAddSubExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:6139:1: rule__STAddSubExpression__Group_1__1__Impl : ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6143:1: ( ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:6144:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:6144:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:6145:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:6146:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:6146:3: rule__STAddSubExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0"
    // InternalSTCoreParser.g:6155:1: rule__STAddSubExpression__Group_1_0__0 : rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 ;
    public final void rule__STAddSubExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6159:1: ( rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:6160:2: rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_49);
            rule__STAddSubExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:6167:1: rule__STAddSubExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAddSubExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6171:1: ( ( () ) )
            // InternalSTCoreParser.g:6172:1: ( () )
            {
            // InternalSTCoreParser.g:6172:1: ( () )
            // InternalSTCoreParser.g:6173:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:6174:2: ()
            // InternalSTCoreParser.g:6174:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1"
    // InternalSTCoreParser.g:6182:1: rule__STAddSubExpression__Group_1_0__1 : rule__STAddSubExpression__Group_1_0__1__Impl ;
    public final void rule__STAddSubExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6186:1: ( rule__STAddSubExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:6187:2: rule__STAddSubExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:6193:1: rule__STAddSubExpression__Group_1_0__1__Impl : ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6197:1: ( ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:6198:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6198:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:6199:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:6200:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:6200:3: rule__STAddSubExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__0"
    // InternalSTCoreParser.g:6209:1: rule__STMulDivModExpression__Group__0 : rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 ;
    public final void rule__STMulDivModExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6213:1: ( rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 )
            // InternalSTCoreParser.g:6214:2: rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1
            {
            pushFollow(FOLLOW_51);
            rule__STMulDivModExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0"


    // $ANTLR start "rule__STMulDivModExpression__Group__0__Impl"
    // InternalSTCoreParser.g:6221:1: rule__STMulDivModExpression__Group__0__Impl : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6225:1: ( ( ruleSTPowerExpression ) )
            // InternalSTCoreParser.g:6226:1: ( ruleSTPowerExpression )
            {
            // InternalSTCoreParser.g:6226:1: ( ruleSTPowerExpression )
            // InternalSTCoreParser.g:6227:2: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__1"
    // InternalSTCoreParser.g:6236:1: rule__STMulDivModExpression__Group__1 : rule__STMulDivModExpression__Group__1__Impl ;
    public final void rule__STMulDivModExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6240:1: ( rule__STMulDivModExpression__Group__1__Impl )
            // InternalSTCoreParser.g:6241:2: rule__STMulDivModExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1"


    // $ANTLR start "rule__STMulDivModExpression__Group__1__Impl"
    // InternalSTCoreParser.g:6247:1: rule__STMulDivModExpression__Group__1__Impl : ( ( rule__STMulDivModExpression__Group_1__0 )* ) ;
    public final void rule__STMulDivModExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6251:1: ( ( ( rule__STMulDivModExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:6252:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:6252:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:6253:2: ( rule__STMulDivModExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:6254:2: ( rule__STMulDivModExpression__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==MOD||LA55_0==Asterisk||LA55_0==Solidus) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalSTCoreParser.g:6254:3: rule__STMulDivModExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_52);
            	    rule__STMulDivModExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0"
    // InternalSTCoreParser.g:6263:1: rule__STMulDivModExpression__Group_1__0 : rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 ;
    public final void rule__STMulDivModExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6267:1: ( rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 )
            // InternalSTCoreParser.g:6268:2: rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STMulDivModExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:6275:1: rule__STMulDivModExpression__Group_1__0__Impl : ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6279:1: ( ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:6280:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:6280:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:6281:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:6282:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:6282:3: rule__STMulDivModExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1"
    // InternalSTCoreParser.g:6290:1: rule__STMulDivModExpression__Group_1__1 : rule__STMulDivModExpression__Group_1__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6294:1: ( rule__STMulDivModExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:6295:2: rule__STMulDivModExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:6301:1: rule__STMulDivModExpression__Group_1__1__Impl : ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6305:1: ( ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:6306:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:6306:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:6307:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:6308:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:6308:3: rule__STMulDivModExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0"
    // InternalSTCoreParser.g:6317:1: rule__STMulDivModExpression__Group_1_0__0 : rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 ;
    public final void rule__STMulDivModExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6321:1: ( rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:6322:2: rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_51);
            rule__STMulDivModExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:6329:1: rule__STMulDivModExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STMulDivModExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6333:1: ( ( () ) )
            // InternalSTCoreParser.g:6334:1: ( () )
            {
            // InternalSTCoreParser.g:6334:1: ( () )
            // InternalSTCoreParser.g:6335:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:6336:2: ()
            // InternalSTCoreParser.g:6336:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1"
    // InternalSTCoreParser.g:6344:1: rule__STMulDivModExpression__Group_1_0__1 : rule__STMulDivModExpression__Group_1_0__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6348:1: ( rule__STMulDivModExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:6349:2: rule__STMulDivModExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:6355:1: rule__STMulDivModExpression__Group_1_0__1__Impl : ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6359:1: ( ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:6360:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6360:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:6361:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:6362:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:6362:3: rule__STMulDivModExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__0"
    // InternalSTCoreParser.g:6371:1: rule__STPowerExpression__Group__0 : rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 ;
    public final void rule__STPowerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6375:1: ( rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 )
            // InternalSTCoreParser.g:6376:2: rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__STPowerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0"


    // $ANTLR start "rule__STPowerExpression__Group__0__Impl"
    // InternalSTCoreParser.g:6383:1: rule__STPowerExpression__Group__0__Impl : ( ruleSTSignumExpression ) ;
    public final void rule__STPowerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6387:1: ( ( ruleSTSignumExpression ) )
            // InternalSTCoreParser.g:6388:1: ( ruleSTSignumExpression )
            {
            // InternalSTCoreParser.g:6388:1: ( ruleSTSignumExpression )
            // InternalSTCoreParser.g:6389:2: ruleSTSignumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTSignumExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTSignumExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__1"
    // InternalSTCoreParser.g:6398:1: rule__STPowerExpression__Group__1 : rule__STPowerExpression__Group__1__Impl ;
    public final void rule__STPowerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6402:1: ( rule__STPowerExpression__Group__1__Impl )
            // InternalSTCoreParser.g:6403:2: rule__STPowerExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1"


    // $ANTLR start "rule__STPowerExpression__Group__1__Impl"
    // InternalSTCoreParser.g:6409:1: rule__STPowerExpression__Group__1__Impl : ( ( rule__STPowerExpression__Group_1__0 )* ) ;
    public final void rule__STPowerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6413:1: ( ( ( rule__STPowerExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:6414:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:6414:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:6415:2: ( rule__STPowerExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:6416:2: ( rule__STPowerExpression__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==AsteriskAsterisk) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalSTCoreParser.g:6416:3: rule__STPowerExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__STPowerExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__0"
    // InternalSTCoreParser.g:6425:1: rule__STPowerExpression__Group_1__0 : rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 ;
    public final void rule__STPowerExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6429:1: ( rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 )
            // InternalSTCoreParser.g:6430:2: rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STPowerExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0"


    // $ANTLR start "rule__STPowerExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:6437:1: rule__STPowerExpression__Group_1__0__Impl : ( ( rule__STPowerExpression__Group_1_0__0 ) ) ;
    public final void rule__STPowerExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6441:1: ( ( ( rule__STPowerExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:6442:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:6442:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:6443:2: ( rule__STPowerExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:6444:2: ( rule__STPowerExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:6444:3: rule__STPowerExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__1"
    // InternalSTCoreParser.g:6452:1: rule__STPowerExpression__Group_1__1 : rule__STPowerExpression__Group_1__1__Impl ;
    public final void rule__STPowerExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6456:1: ( rule__STPowerExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:6457:2: rule__STPowerExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1"


    // $ANTLR start "rule__STPowerExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:6463:1: rule__STPowerExpression__Group_1__1__Impl : ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STPowerExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6467:1: ( ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:6468:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:6468:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:6469:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:6470:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:6470:3: rule__STPowerExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0"
    // InternalSTCoreParser.g:6479:1: rule__STPowerExpression__Group_1_0__0 : rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 ;
    public final void rule__STPowerExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6483:1: ( rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:6484:2: rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_53);
            rule__STPowerExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:6491:1: rule__STPowerExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STPowerExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6495:1: ( ( () ) )
            // InternalSTCoreParser.g:6496:1: ( () )
            {
            // InternalSTCoreParser.g:6496:1: ( () )
            // InternalSTCoreParser.g:6497:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:6498:2: ()
            // InternalSTCoreParser.g:6498:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1"
    // InternalSTCoreParser.g:6506:1: rule__STPowerExpression__Group_1_0__1 : rule__STPowerExpression__Group_1_0__1__Impl ;
    public final void rule__STPowerExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6510:1: ( rule__STPowerExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:6511:2: rule__STPowerExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:6517:1: rule__STPowerExpression__Group_1_0__1__Impl : ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STPowerExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6521:1: ( ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:6522:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6522:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:6523:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:6524:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:6524:3: rule__STPowerExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__0"
    // InternalSTCoreParser.g:6533:1: rule__STSignumExpression__Group_2__0 : rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1 ;
    public final void rule__STSignumExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6537:1: ( rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1 )
            // InternalSTCoreParser.g:6538:2: rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1
            {
            pushFollow(FOLLOW_10);
            rule__STSignumExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__0"


    // $ANTLR start "rule__STSignumExpression__Group_2__0__Impl"
    // InternalSTCoreParser.g:6545:1: rule__STSignumExpression__Group_2__0__Impl : ( () ) ;
    public final void rule__STSignumExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6549:1: ( ( () ) )
            // InternalSTCoreParser.g:6550:1: ( () )
            {
            // InternalSTCoreParser.g:6550:1: ( () )
            // InternalSTCoreParser.g:6551:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getSTUnaryExpressionAction_2_0()); 
            }
            // InternalSTCoreParser.g:6552:2: ()
            // InternalSTCoreParser.g:6552:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getSTUnaryExpressionAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__1"
    // InternalSTCoreParser.g:6560:1: rule__STSignumExpression__Group_2__1 : rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2 ;
    public final void rule__STSignumExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6564:1: ( rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2 )
            // InternalSTCoreParser.g:6565:2: rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2
            {
            pushFollow(FOLLOW_55);
            rule__STSignumExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__1"


    // $ANTLR start "rule__STSignumExpression__Group_2__1__Impl"
    // InternalSTCoreParser.g:6572:1: rule__STSignumExpression__Group_2__1__Impl : ( ( rule__STSignumExpression__OpAssignment_2_1 ) ) ;
    public final void rule__STSignumExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6576:1: ( ( ( rule__STSignumExpression__OpAssignment_2_1 ) ) )
            // InternalSTCoreParser.g:6577:1: ( ( rule__STSignumExpression__OpAssignment_2_1 ) )
            {
            // InternalSTCoreParser.g:6577:1: ( ( rule__STSignumExpression__OpAssignment_2_1 ) )
            // InternalSTCoreParser.g:6578:2: ( rule__STSignumExpression__OpAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getOpAssignment_2_1()); 
            }
            // InternalSTCoreParser.g:6579:2: ( rule__STSignumExpression__OpAssignment_2_1 )
            // InternalSTCoreParser.g:6579:3: rule__STSignumExpression__OpAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__OpAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getOpAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__2"
    // InternalSTCoreParser.g:6587:1: rule__STSignumExpression__Group_2__2 : rule__STSignumExpression__Group_2__2__Impl ;
    public final void rule__STSignumExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6591:1: ( rule__STSignumExpression__Group_2__2__Impl )
            // InternalSTCoreParser.g:6592:2: rule__STSignumExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__2"


    // $ANTLR start "rule__STSignumExpression__Group_2__2__Impl"
    // InternalSTCoreParser.g:6598:1: rule__STSignumExpression__Group_2__2__Impl : ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) ) ;
    public final void rule__STSignumExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6602:1: ( ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) ) )
            // InternalSTCoreParser.g:6603:1: ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) )
            {
            // InternalSTCoreParser.g:6603:1: ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) )
            // InternalSTCoreParser.g:6604:2: ( rule__STSignumExpression__ExpressionAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getExpressionAssignment_2_2()); 
            }
            // InternalSTCoreParser.g:6605:2: ( rule__STSignumExpression__ExpressionAssignment_2_2 )
            // InternalSTCoreParser.g:6605:3: rule__STSignumExpression__ExpressionAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__ExpressionAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getExpressionAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group__0"
    // InternalSTCoreParser.g:6614:1: rule__STSelectionExpression__Group__0 : rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1 ;
    public final void rule__STSelectionExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6618:1: ( rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1 )
            // InternalSTCoreParser.g:6619:2: rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1
            {
            pushFollow(FOLLOW_56);
            rule__STSelectionExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__0"


    // $ANTLR start "rule__STSelectionExpression__Group__0__Impl"
    // InternalSTCoreParser.g:6626:1: rule__STSelectionExpression__Group__0__Impl : ( ruleSTAtomicExpression ) ;
    public final void rule__STSelectionExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6630:1: ( ( ruleSTAtomicExpression ) )
            // InternalSTCoreParser.g:6631:1: ( ruleSTAtomicExpression )
            {
            // InternalSTCoreParser.g:6631:1: ( ruleSTAtomicExpression )
            // InternalSTCoreParser.g:6632:2: ruleSTAtomicExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getSTAtomicExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAtomicExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getSTAtomicExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group__1"
    // InternalSTCoreParser.g:6641:1: rule__STSelectionExpression__Group__1 : rule__STSelectionExpression__Group__1__Impl ;
    public final void rule__STSelectionExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6645:1: ( rule__STSelectionExpression__Group__1__Impl )
            // InternalSTCoreParser.g:6646:2: rule__STSelectionExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__1"


    // $ANTLR start "rule__STSelectionExpression__Group__1__Impl"
    // InternalSTCoreParser.g:6652:1: rule__STSelectionExpression__Group__1__Impl : ( ( rule__STSelectionExpression__Group_1__0 )* ) ;
    public final void rule__STSelectionExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6656:1: ( ( ( rule__STSelectionExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:6657:1: ( ( rule__STSelectionExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:6657:1: ( ( rule__STSelectionExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:6658:2: ( rule__STSelectionExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:6659:2: ( rule__STSelectionExpression__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==FullStop||LA57_0==LeftSquareBracket) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalSTCoreParser.g:6659:3: rule__STSelectionExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_57);
            	    rule__STSelectionExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__0"
    // InternalSTCoreParser.g:6668:1: rule__STSelectionExpression__Group_1__0 : rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1 ;
    public final void rule__STSelectionExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6672:1: ( rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1 )
            // InternalSTCoreParser.g:6673:2: rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1
            {
            pushFollow(FOLLOW_56);
            rule__STSelectionExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:6680:1: rule__STSelectionExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STSelectionExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6684:1: ( ( () ) )
            // InternalSTCoreParser.g:6685:1: ( () )
            {
            // InternalSTCoreParser.g:6685:1: ( () )
            // InternalSTCoreParser.g:6686:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getSTMemberSelectionReceiverAction_1_0()); 
            }
            // InternalSTCoreParser.g:6687:2: ()
            // InternalSTCoreParser.g:6687:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getSTMemberSelectionReceiverAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__1"
    // InternalSTCoreParser.g:6695:1: rule__STSelectionExpression__Group_1__1 : rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2 ;
    public final void rule__STSelectionExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6699:1: ( rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2 )
            // InternalSTCoreParser.g:6700:2: rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2
            {
            pushFollow(FOLLOW_58);
            rule__STSelectionExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:6707:1: rule__STSelectionExpression__Group_1__1__Impl : ( ( rule__STSelectionExpression__Alternatives_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6711:1: ( ( ( rule__STSelectionExpression__Alternatives_1_1 ) ) )
            // InternalSTCoreParser.g:6712:1: ( ( rule__STSelectionExpression__Alternatives_1_1 ) )
            {
            // InternalSTCoreParser.g:6712:1: ( ( rule__STSelectionExpression__Alternatives_1_1 ) )
            // InternalSTCoreParser.g:6713:2: ( rule__STSelectionExpression__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getAlternatives_1_1()); 
            }
            // InternalSTCoreParser.g:6714:2: ( rule__STSelectionExpression__Alternatives_1_1 )
            // InternalSTCoreParser.g:6714:3: rule__STSelectionExpression__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__2"
    // InternalSTCoreParser.g:6722:1: rule__STSelectionExpression__Group_1__2 : rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3 ;
    public final void rule__STSelectionExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6726:1: ( rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3 )
            // InternalSTCoreParser.g:6727:2: rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3
            {
            pushFollow(FOLLOW_58);
            rule__STSelectionExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1__2__Impl"
    // InternalSTCoreParser.g:6734:1: rule__STSelectionExpression__Group_1__2__Impl : ( ( rule__STSelectionExpression__Group_1_2__0 )? ) ;
    public final void rule__STSelectionExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6738:1: ( ( ( rule__STSelectionExpression__Group_1_2__0 )? ) )
            // InternalSTCoreParser.g:6739:1: ( ( rule__STSelectionExpression__Group_1_2__0 )? )
            {
            // InternalSTCoreParser.g:6739:1: ( ( rule__STSelectionExpression__Group_1_2__0 )? )
            // InternalSTCoreParser.g:6740:2: ( rule__STSelectionExpression__Group_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2()); 
            }
            // InternalSTCoreParser.g:6741:2: ( rule__STSelectionExpression__Group_1_2__0 )?
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalSTCoreParser.g:6741:3: rule__STSelectionExpression__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__3"
    // InternalSTCoreParser.g:6749:1: rule__STSelectionExpression__Group_1__3 : rule__STSelectionExpression__Group_1__3__Impl ;
    public final void rule__STSelectionExpression__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6753:1: ( rule__STSelectionExpression__Group_1__3__Impl )
            // InternalSTCoreParser.g:6754:2: rule__STSelectionExpression__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__3"


    // $ANTLR start "rule__STSelectionExpression__Group_1__3__Impl"
    // InternalSTCoreParser.g:6760:1: rule__STSelectionExpression__Group_1__3__Impl : ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? ) ;
    public final void rule__STSelectionExpression__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6764:1: ( ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? ) )
            // InternalSTCoreParser.g:6765:1: ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? )
            {
            // InternalSTCoreParser.g:6765:1: ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? )
            // InternalSTCoreParser.g:6766:2: ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorAssignment_1_3()); 
            }
            // InternalSTCoreParser.g:6767:2: ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=B && LA59_0<=X)) ) {
                alt59=1;
            }
            else if ( (LA59_0==FullStop) ) {
                int LA59_2 = input.LA(2);

                if ( (LA59_2==RULE_INT) ) {
                    alt59=1;
                }
            }
            switch (alt59) {
                case 1 :
                    // InternalSTCoreParser.g:6767:3: rule__STSelectionExpression__BitaccessorAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__BitaccessorAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__3__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__0"
    // InternalSTCoreParser.g:6776:1: rule__STSelectionExpression__Group_1_1_0__0 : rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1 ;
    public final void rule__STSelectionExpression__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6780:1: ( rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1 )
            // InternalSTCoreParser.g:6781:2: rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__STSelectionExpression__Group_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__0__Impl"
    // InternalSTCoreParser.g:6788:1: rule__STSelectionExpression__Group_1_1_0__0__Impl : ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6792:1: ( ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) ) )
            // InternalSTCoreParser.g:6793:1: ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) )
            {
            // InternalSTCoreParser.g:6793:1: ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) )
            // InternalSTCoreParser.g:6794:2: ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessAssignment_1_1_0_0()); 
            }
            // InternalSTCoreParser.g:6795:2: ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 )
            // InternalSTCoreParser.g:6795:3: rule__STSelectionExpression__StructAccessAssignment_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__StructAccessAssignment_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessAssignment_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__1"
    // InternalSTCoreParser.g:6803:1: rule__STSelectionExpression__Group_1_1_0__1 : rule__STSelectionExpression__Group_1_1_0__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6807:1: ( rule__STSelectionExpression__Group_1_1_0__1__Impl )
            // InternalSTCoreParser.g:6808:2: rule__STSelectionExpression__Group_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__1__Impl"
    // InternalSTCoreParser.g:6814:1: rule__STSelectionExpression__Group_1_1_0__1__Impl : ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6818:1: ( ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) ) )
            // InternalSTCoreParser.g:6819:1: ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6819:1: ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) )
            // InternalSTCoreParser.g:6820:2: ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberAssignment_1_1_0_1()); 
            }
            // InternalSTCoreParser.g:6821:2: ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 )
            // InternalSTCoreParser.g:6821:3: rule__STSelectionExpression__MemberAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__MemberAssignment_1_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberAssignment_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__0"
    // InternalSTCoreParser.g:6830:1: rule__STSelectionExpression__Group_1_1_1__0 : rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1 ;
    public final void rule__STSelectionExpression__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6834:1: ( rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1 )
            // InternalSTCoreParser.g:6835:2: rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STSelectionExpression__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__0__Impl"
    // InternalSTCoreParser.g:6842:1: rule__STSelectionExpression__Group_1_1_1__0__Impl : ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6846:1: ( ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) ) )
            // InternalSTCoreParser.g:6847:1: ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) )
            {
            // InternalSTCoreParser.g:6847:1: ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) )
            // InternalSTCoreParser.g:6848:2: ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessAssignment_1_1_1_0()); 
            }
            // InternalSTCoreParser.g:6849:2: ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 )
            // InternalSTCoreParser.g:6849:3: rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessAssignment_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__1"
    // InternalSTCoreParser.g:6857:1: rule__STSelectionExpression__Group_1_1_1__1 : rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2 ;
    public final void rule__STSelectionExpression__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6861:1: ( rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2 )
            // InternalSTCoreParser.g:6862:2: rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2
            {
            pushFollow(FOLLOW_11);
            rule__STSelectionExpression__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__1__Impl"
    // InternalSTCoreParser.g:6869:1: rule__STSelectionExpression__Group_1_1_1__1__Impl : ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6873:1: ( ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) ) )
            // InternalSTCoreParser.g:6874:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) )
            {
            // InternalSTCoreParser.g:6874:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) )
            // InternalSTCoreParser.g:6875:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_1()); 
            }
            // InternalSTCoreParser.g:6876:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 )
            // InternalSTCoreParser.g:6876:3: rule__STSelectionExpression__IndexAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__IndexAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__2"
    // InternalSTCoreParser.g:6884:1: rule__STSelectionExpression__Group_1_1_1__2 : rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3 ;
    public final void rule__STSelectionExpression__Group_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6888:1: ( rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3 )
            // InternalSTCoreParser.g:6889:2: rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3
            {
            pushFollow(FOLLOW_11);
            rule__STSelectionExpression__Group_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__2__Impl"
    // InternalSTCoreParser.g:6896:1: rule__STSelectionExpression__Group_1_1_1__2__Impl : ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6900:1: ( ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* ) )
            // InternalSTCoreParser.g:6901:1: ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* )
            {
            // InternalSTCoreParser.g:6901:1: ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* )
            // InternalSTCoreParser.g:6902:2: ( rule__STSelectionExpression__Group_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1_2()); 
            }
            // InternalSTCoreParser.g:6903:2: ( rule__STSelectionExpression__Group_1_1_1_2__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==Comma) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalSTCoreParser.g:6903:3: rule__STSelectionExpression__Group_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STSelectionExpression__Group_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__3"
    // InternalSTCoreParser.g:6911:1: rule__STSelectionExpression__Group_1_1_1__3 : rule__STSelectionExpression__Group_1_1_1__3__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6915:1: ( rule__STSelectionExpression__Group_1_1_1__3__Impl )
            // InternalSTCoreParser.g:6916:2: rule__STSelectionExpression__Group_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__3"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__3__Impl"
    // InternalSTCoreParser.g:6922:1: rule__STSelectionExpression__Group_1_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6926:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:6927:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:6927:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:6928:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__3__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__0"
    // InternalSTCoreParser.g:6938:1: rule__STSelectionExpression__Group_1_1_1_2__0 : rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1 ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6942:1: ( rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1 )
            // InternalSTCoreParser.g:6943:2: rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1
            {
            pushFollow(FOLLOW_10);
            rule__STSelectionExpression__Group_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__0__Impl"
    // InternalSTCoreParser.g:6950:1: rule__STSelectionExpression__Group_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6954:1: ( ( Comma ) )
            // InternalSTCoreParser.g:6955:1: ( Comma )
            {
            // InternalSTCoreParser.g:6955:1: ( Comma )
            // InternalSTCoreParser.g:6956:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__1"
    // InternalSTCoreParser.g:6965:1: rule__STSelectionExpression__Group_1_1_1_2__1 : rule__STSelectionExpression__Group_1_1_1_2__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6969:1: ( rule__STSelectionExpression__Group_1_1_1_2__1__Impl )
            // InternalSTCoreParser.g:6970:2: rule__STSelectionExpression__Group_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__1__Impl"
    // InternalSTCoreParser.g:6976:1: rule__STSelectionExpression__Group_1_1_1_2__1__Impl : ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6980:1: ( ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) ) )
            // InternalSTCoreParser.g:6981:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) )
            {
            // InternalSTCoreParser.g:6981:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) )
            // InternalSTCoreParser.g:6982:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_2_1()); 
            }
            // InternalSTCoreParser.g:6983:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 )
            // InternalSTCoreParser.g:6983:3: rule__STSelectionExpression__IndexAssignment_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__IndexAssignment_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__0"
    // InternalSTCoreParser.g:6992:1: rule__STSelectionExpression__Group_1_2__0 : rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1 ;
    public final void rule__STSelectionExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6996:1: ( rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1 )
            // InternalSTCoreParser.g:6997:2: rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1
            {
            pushFollow(FOLLOW_59);
            rule__STSelectionExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__0__Impl"
    // InternalSTCoreParser.g:7004:1: rule__STSelectionExpression__Group_1_2__0__Impl : ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7008:1: ( ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) ) )
            // InternalSTCoreParser.g:7009:1: ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) )
            {
            // InternalSTCoreParser.g:7009:1: ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) )
            // InternalSTCoreParser.g:7010:2: ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationAssignment_1_2_0()); 
            }
            // InternalSTCoreParser.g:7011:2: ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 )
            // InternalSTCoreParser.g:7011:3: rule__STSelectionExpression__PoeInvocationAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__PoeInvocationAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__1"
    // InternalSTCoreParser.g:7019:1: rule__STSelectionExpression__Group_1_2__1 : rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2 ;
    public final void rule__STSelectionExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7023:1: ( rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2 )
            // InternalSTCoreParser.g:7024:2: rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2
            {
            pushFollow(FOLLOW_59);
            rule__STSelectionExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__1__Impl"
    // InternalSTCoreParser.g:7031:1: rule__STSelectionExpression__Group_1_2__1__Impl : ( ( rule__STSelectionExpression__Group_1_2_1__0 )? ) ;
    public final void rule__STSelectionExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7035:1: ( ( ( rule__STSelectionExpression__Group_1_2_1__0 )? ) )
            // InternalSTCoreParser.g:7036:1: ( ( rule__STSelectionExpression__Group_1_2_1__0 )? )
            {
            // InternalSTCoreParser.g:7036:1: ( ( rule__STSelectionExpression__Group_1_2_1__0 )? )
            // InternalSTCoreParser.g:7037:2: ( rule__STSelectionExpression__Group_1_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1()); 
            }
            // InternalSTCoreParser.g:7038:2: ( rule__STSelectionExpression__Group_1_2_1__0 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( ((LA61_0>=LDATE_AND_TIME && LA61_0<=TIME_OF_DAY)||LA61_0==WSTRING||(LA61_0>=STRING && LA61_0<=DWORD)||(LA61_0>=LDATE && LA61_0<=LWORD)||(LA61_0>=UDINT && LA61_0<=WCHAR)||(LA61_0>=BOOL && LA61_0<=DINT)||(LA61_0>=LINT && LA61_0<=UINT)||LA61_0==WORD||(LA61_0>=INT && LA61_0<=LDT)||LA61_0==TOD||LA61_0==DT||(LA61_0>=LD && LA61_0<=LT)||LA61_0==NOT||LA61_0==D||LA61_0==T||LA61_0==LeftParenthesis||LA61_0==PlusSign||LA61_0==HyphenMinus||LA61_0==RULE_BOOL_VALUES||(LA61_0>=RULE_NON_DECIMAL && LA61_0<=RULE_INT)||(LA61_0>=RULE_ID && LA61_0<=RULE_STRING)) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSTCoreParser.g:7038:3: rule__STSelectionExpression__Group_1_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__2"
    // InternalSTCoreParser.g:7046:1: rule__STSelectionExpression__Group_1_2__2 : rule__STSelectionExpression__Group_1_2__2__Impl ;
    public final void rule__STSelectionExpression__Group_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7050:1: ( rule__STSelectionExpression__Group_1_2__2__Impl )
            // InternalSTCoreParser.g:7051:2: rule__STSelectionExpression__Group_1_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__2__Impl"
    // InternalSTCoreParser.g:7057:1: rule__STSelectionExpression__Group_1_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STSelectionExpression__Group_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7061:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:7062:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:7062:1: ( RightParenthesis )
            // InternalSTCoreParser.g:7063:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getRightParenthesisKeyword_1_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getRightParenthesisKeyword_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__0"
    // InternalSTCoreParser.g:7073:1: rule__STSelectionExpression__Group_1_2_1__0 : rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1 ;
    public final void rule__STSelectionExpression__Group_1_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7077:1: ( rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1 )
            // InternalSTCoreParser.g:7078:2: rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1
            {
            pushFollow(FOLLOW_60);
            rule__STSelectionExpression__Group_1_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__0__Impl"
    // InternalSTCoreParser.g:7085:1: rule__STSelectionExpression__Group_1_2_1__0__Impl : ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7089:1: ( ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) ) )
            // InternalSTCoreParser.g:7090:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) )
            {
            // InternalSTCoreParser.g:7090:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) )
            // InternalSTCoreParser.g:7091:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_0()); 
            }
            // InternalSTCoreParser.g:7092:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 )
            // InternalSTCoreParser.g:7092:3: rule__STSelectionExpression__ParametersAssignment_1_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ParametersAssignment_1_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__1"
    // InternalSTCoreParser.g:7100:1: rule__STSelectionExpression__Group_1_2_1__1 : rule__STSelectionExpression__Group_1_2_1__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7104:1: ( rule__STSelectionExpression__Group_1_2_1__1__Impl )
            // InternalSTCoreParser.g:7105:2: rule__STSelectionExpression__Group_1_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__1__Impl"
    // InternalSTCoreParser.g:7111:1: rule__STSelectionExpression__Group_1_2_1__1__Impl : ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* ) ;
    public final void rule__STSelectionExpression__Group_1_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7115:1: ( ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* ) )
            // InternalSTCoreParser.g:7116:1: ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* )
            {
            // InternalSTCoreParser.g:7116:1: ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* )
            // InternalSTCoreParser.g:7117:2: ( rule__STSelectionExpression__Group_1_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1_1()); 
            }
            // InternalSTCoreParser.g:7118:2: ( rule__STSelectionExpression__Group_1_2_1_1__0 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==Comma) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalSTCoreParser.g:7118:3: rule__STSelectionExpression__Group_1_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STSelectionExpression__Group_1_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__0"
    // InternalSTCoreParser.g:7127:1: rule__STSelectionExpression__Group_1_2_1_1__0 : rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1 ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7131:1: ( rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1 )
            // InternalSTCoreParser.g:7132:2: rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STSelectionExpression__Group_1_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__0__Impl"
    // InternalSTCoreParser.g:7139:1: rule__STSelectionExpression__Group_1_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7143:1: ( ( Comma ) )
            // InternalSTCoreParser.g:7144:1: ( Comma )
            {
            // InternalSTCoreParser.g:7144:1: ( Comma )
            // InternalSTCoreParser.g:7145:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__1"
    // InternalSTCoreParser.g:7154:1: rule__STSelectionExpression__Group_1_2_1_1__1 : rule__STSelectionExpression__Group_1_2_1_1__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7158:1: ( rule__STSelectionExpression__Group_1_2_1_1__1__Impl )
            // InternalSTCoreParser.g:7159:2: rule__STSelectionExpression__Group_1_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__1__Impl"
    // InternalSTCoreParser.g:7165:1: rule__STSelectionExpression__Group_1_2_1_1__1__Impl : ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7169:1: ( ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) ) )
            // InternalSTCoreParser.g:7170:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) )
            {
            // InternalSTCoreParser.g:7170:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) )
            // InternalSTCoreParser.g:7171:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_1_1()); 
            }
            // InternalSTCoreParser.g:7172:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 )
            // InternalSTCoreParser.g:7172:3: rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__1__Impl"


    // $ANTLR start "rule__MultibitPartialAccess__Group__0"
    // InternalSTCoreParser.g:7181:1: rule__MultibitPartialAccess__Group__0 : rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1 ;
    public final void rule__MultibitPartialAccess__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7185:1: ( rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1 )
            // InternalSTCoreParser.g:7186:2: rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__MultibitPartialAccess__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__0"


    // $ANTLR start "rule__MultibitPartialAccess__Group__0__Impl"
    // InternalSTCoreParser.g:7193:1: rule__MultibitPartialAccess__Group__0__Impl : ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) ) ;
    public final void rule__MultibitPartialAccess__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7197:1: ( ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) ) )
            // InternalSTCoreParser.g:7198:1: ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) )
            {
            // InternalSTCoreParser.g:7198:1: ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) )
            // InternalSTCoreParser.g:7199:2: ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierAssignment_0()); 
            }
            // InternalSTCoreParser.g:7200:2: ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 )
            // InternalSTCoreParser.g:7200:3: rule__MultibitPartialAccess__AccessSpecifierAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__AccessSpecifierAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__0__Impl"


    // $ANTLR start "rule__MultibitPartialAccess__Group__1"
    // InternalSTCoreParser.g:7208:1: rule__MultibitPartialAccess__Group__1 : rule__MultibitPartialAccess__Group__1__Impl ;
    public final void rule__MultibitPartialAccess__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7212:1: ( rule__MultibitPartialAccess__Group__1__Impl )
            // InternalSTCoreParser.g:7213:2: rule__MultibitPartialAccess__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__1"


    // $ANTLR start "rule__MultibitPartialAccess__Group__1__Impl"
    // InternalSTCoreParser.g:7219:1: rule__MultibitPartialAccess__Group__1__Impl : ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) ) ;
    public final void rule__MultibitPartialAccess__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7223:1: ( ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) ) )
            // InternalSTCoreParser.g:7224:1: ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) )
            {
            // InternalSTCoreParser.g:7224:1: ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) )
            // InternalSTCoreParser.g:7225:2: ( rule__MultibitPartialAccess__IndexAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getIndexAssignment_1()); 
            }
            // InternalSTCoreParser.g:7226:2: ( rule__MultibitPartialAccess__IndexAssignment_1 )
            // InternalSTCoreParser.g:7226:3: rule__MultibitPartialAccess__IndexAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__IndexAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getIndexAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__0"
    // InternalSTCoreParser.g:7235:1: rule__STAtomicExpression__Group_0__0 : rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1 ;
    public final void rule__STAtomicExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7239:1: ( rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1 )
            // InternalSTCoreParser.g:7240:2: rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1
            {
            pushFollow(FOLLOW_10);
            rule__STAtomicExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__0"


    // $ANTLR start "rule__STAtomicExpression__Group_0__0__Impl"
    // InternalSTCoreParser.g:7247:1: rule__STAtomicExpression__Group_0__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STAtomicExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7251:1: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:7252:1: ( LeftParenthesis )
            {
            // InternalSTCoreParser.g:7252:1: ( LeftParenthesis )
            // InternalSTCoreParser.g:7253:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__1"
    // InternalSTCoreParser.g:7262:1: rule__STAtomicExpression__Group_0__1 : rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2 ;
    public final void rule__STAtomicExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7266:1: ( rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2 )
            // InternalSTCoreParser.g:7267:2: rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2
            {
            pushFollow(FOLLOW_17);
            rule__STAtomicExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__1"


    // $ANTLR start "rule__STAtomicExpression__Group_0__1__Impl"
    // InternalSTCoreParser.g:7274:1: rule__STAtomicExpression__Group_0__1__Impl : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7278:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:7279:1: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:7279:1: ( ruleSTExpression )
            // InternalSTCoreParser.g:7280:2: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__2"
    // InternalSTCoreParser.g:7289:1: rule__STAtomicExpression__Group_0__2 : rule__STAtomicExpression__Group_0__2__Impl ;
    public final void rule__STAtomicExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7293:1: ( rule__STAtomicExpression__Group_0__2__Impl )
            // InternalSTCoreParser.g:7294:2: rule__STAtomicExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__2"


    // $ANTLR start "rule__STAtomicExpression__Group_0__2__Impl"
    // InternalSTCoreParser.g:7300:1: rule__STAtomicExpression__Group_0__2__Impl : ( RightParenthesis ) ;
    public final void rule__STAtomicExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7304:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:7305:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:7305:1: ( RightParenthesis )
            // InternalSTCoreParser.g:7306:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__0"
    // InternalSTCoreParser.g:7316:1: rule__STAtomicExpression__Group_1__0 : rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1 ;
    public final void rule__STAtomicExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7320:1: ( rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1 )
            // InternalSTCoreParser.g:7321:2: rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1
            {
            pushFollow(FOLLOW_55);
            rule__STAtomicExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:7328:1: rule__STAtomicExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STAtomicExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7332:1: ( ( () ) )
            // InternalSTCoreParser.g:7333:1: ( () )
            {
            // InternalSTCoreParser.g:7333:1: ( () )
            // InternalSTCoreParser.g:7334:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTSymbolAction_1_0()); 
            }
            // InternalSTCoreParser.g:7335:2: ()
            // InternalSTCoreParser.g:7335:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTSymbolAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__1"
    // InternalSTCoreParser.g:7343:1: rule__STAtomicExpression__Group_1__1 : rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2 ;
    public final void rule__STAtomicExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7347:1: ( rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2 )
            // InternalSTCoreParser.g:7348:2: rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2
            {
            pushFollow(FOLLOW_55);
            rule__STAtomicExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:7355:1: rule__STAtomicExpression__Group_1__1__Impl : ( ( rule__STAtomicExpression__Group_1_1__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7359:1: ( ( ( rule__STAtomicExpression__Group_1_1__0 )? ) )
            // InternalSTCoreParser.g:7360:1: ( ( rule__STAtomicExpression__Group_1_1__0 )? )
            {
            // InternalSTCoreParser.g:7360:1: ( ( rule__STAtomicExpression__Group_1_1__0 )? )
            // InternalSTCoreParser.g:7361:2: ( rule__STAtomicExpression__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_1()); 
            }
            // InternalSTCoreParser.g:7362:2: ( rule__STAtomicExpression__Group_1_1__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_ID) ) {
                int LA63_1 = input.LA(2);

                if ( (LA63_1==NumberSign) ) {
                    alt63=1;
                }
            }
            switch (alt63) {
                case 1 :
                    // InternalSTCoreParser.g:7362:3: rule__STAtomicExpression__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__2"
    // InternalSTCoreParser.g:7370:1: rule__STAtomicExpression__Group_1__2 : rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3 ;
    public final void rule__STAtomicExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7374:1: ( rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3 )
            // InternalSTCoreParser.g:7375:2: rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3
            {
            pushFollow(FOLLOW_58);
            rule__STAtomicExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__2"


    // $ANTLR start "rule__STAtomicExpression__Group_1__2__Impl"
    // InternalSTCoreParser.g:7382:1: rule__STAtomicExpression__Group_1__2__Impl : ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) ) ;
    public final void rule__STAtomicExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7386:1: ( ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) ) )
            // InternalSTCoreParser.g:7387:1: ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) )
            {
            // InternalSTCoreParser.g:7387:1: ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) )
            // InternalSTCoreParser.g:7388:2: ( rule__STAtomicExpression__SymbolAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolAssignment_1_2()); 
            }
            // InternalSTCoreParser.g:7389:2: ( rule__STAtomicExpression__SymbolAssignment_1_2 )
            // InternalSTCoreParser.g:7389:3: rule__STAtomicExpression__SymbolAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__SymbolAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__3"
    // InternalSTCoreParser.g:7397:1: rule__STAtomicExpression__Group_1__3 : rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4 ;
    public final void rule__STAtomicExpression__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7401:1: ( rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4 )
            // InternalSTCoreParser.g:7402:2: rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4
            {
            pushFollow(FOLLOW_58);
            rule__STAtomicExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__3"


    // $ANTLR start "rule__STAtomicExpression__Group_1__3__Impl"
    // InternalSTCoreParser.g:7409:1: rule__STAtomicExpression__Group_1__3__Impl : ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? ) ;
    public final void rule__STAtomicExpression__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7413:1: ( ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? ) )
            // InternalSTCoreParser.g:7414:1: ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? )
            {
            // InternalSTCoreParser.g:7414:1: ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? )
            // InternalSTCoreParser.g:7415:2: ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorAssignment_1_3()); 
            }
            // InternalSTCoreParser.g:7416:2: ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( ((LA64_0>=B && LA64_0<=X)) ) {
                alt64=1;
            }
            else if ( (LA64_0==FullStop) ) {
                int LA64_2 = input.LA(2);

                if ( (LA64_2==RULE_INT) ) {
                    alt64=1;
                }
            }
            switch (alt64) {
                case 1 :
                    // InternalSTCoreParser.g:7416:3: rule__STAtomicExpression__BitaccessorAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__BitaccessorAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__3__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__4"
    // InternalSTCoreParser.g:7424:1: rule__STAtomicExpression__Group_1__4 : rule__STAtomicExpression__Group_1__4__Impl ;
    public final void rule__STAtomicExpression__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7428:1: ( rule__STAtomicExpression__Group_1__4__Impl )
            // InternalSTCoreParser.g:7429:2: rule__STAtomicExpression__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__4"


    // $ANTLR start "rule__STAtomicExpression__Group_1__4__Impl"
    // InternalSTCoreParser.g:7435:1: rule__STAtomicExpression__Group_1__4__Impl : ( ( rule__STAtomicExpression__Group_1_4__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7439:1: ( ( ( rule__STAtomicExpression__Group_1_4__0 )? ) )
            // InternalSTCoreParser.g:7440:1: ( ( rule__STAtomicExpression__Group_1_4__0 )? )
            {
            // InternalSTCoreParser.g:7440:1: ( ( rule__STAtomicExpression__Group_1_4__0 )? )
            // InternalSTCoreParser.g:7441:2: ( rule__STAtomicExpression__Group_1_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4()); 
            }
            // InternalSTCoreParser.g:7442:2: ( rule__STAtomicExpression__Group_1_4__0 )?
            int alt65=2;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalSTCoreParser.g:7442:3: rule__STAtomicExpression__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__4__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__0"
    // InternalSTCoreParser.g:7451:1: rule__STAtomicExpression__Group_1_1__0 : rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1 ;
    public final void rule__STAtomicExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7455:1: ( rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1 )
            // InternalSTCoreParser.g:7456:2: rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_62);
            rule__STAtomicExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__0__Impl"
    // InternalSTCoreParser.g:7463:1: rule__STAtomicExpression__Group_1_1__0__Impl : ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7467:1: ( ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) ) )
            // InternalSTCoreParser.g:7468:1: ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) )
            {
            // InternalSTCoreParser.g:7468:1: ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) )
            // InternalSTCoreParser.g:7469:2: ( rule__STAtomicExpression__TypeAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeAssignment_1_1_0()); 
            }
            // InternalSTCoreParser.g:7470:2: ( rule__STAtomicExpression__TypeAssignment_1_1_0 )
            // InternalSTCoreParser.g:7470:3: rule__STAtomicExpression__TypeAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__TypeAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__1"
    // InternalSTCoreParser.g:7478:1: rule__STAtomicExpression__Group_1_1__1 : rule__STAtomicExpression__Group_1_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7482:1: ( rule__STAtomicExpression__Group_1_1__1__Impl )
            // InternalSTCoreParser.g:7483:2: rule__STAtomicExpression__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__1__Impl"
    // InternalSTCoreParser.g:7489:1: rule__STAtomicExpression__Group_1_1__1__Impl : ( NumberSign ) ;
    public final void rule__STAtomicExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7493:1: ( ( NumberSign ) )
            // InternalSTCoreParser.g:7494:1: ( NumberSign )
            {
            // InternalSTCoreParser.g:7494:1: ( NumberSign )
            // InternalSTCoreParser.g:7495:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getNumberSignKeyword_1_1_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getNumberSignKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__0"
    // InternalSTCoreParser.g:7505:1: rule__STAtomicExpression__Group_1_4__0 : rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1 ;
    public final void rule__STAtomicExpression__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7509:1: ( rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1 )
            // InternalSTCoreParser.g:7510:2: rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1
            {
            pushFollow(FOLLOW_59);
            rule__STAtomicExpression__Group_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__0__Impl"
    // InternalSTCoreParser.g:7517:1: rule__STAtomicExpression__Group_1_4__0__Impl : ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7521:1: ( ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) ) )
            // InternalSTCoreParser.g:7522:1: ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) )
            {
            // InternalSTCoreParser.g:7522:1: ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) )
            // InternalSTCoreParser.g:7523:2: ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationAssignment_1_4_0()); 
            }
            // InternalSTCoreParser.g:7524:2: ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 )
            // InternalSTCoreParser.g:7524:3: rule__STAtomicExpression__PoeInvocationAssignment_1_4_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__PoeInvocationAssignment_1_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationAssignment_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__1"
    // InternalSTCoreParser.g:7532:1: rule__STAtomicExpression__Group_1_4__1 : rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2 ;
    public final void rule__STAtomicExpression__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7536:1: ( rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2 )
            // InternalSTCoreParser.g:7537:2: rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2
            {
            pushFollow(FOLLOW_59);
            rule__STAtomicExpression__Group_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__1__Impl"
    // InternalSTCoreParser.g:7544:1: rule__STAtomicExpression__Group_1_4__1__Impl : ( ( rule__STAtomicExpression__Group_1_4_1__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7548:1: ( ( ( rule__STAtomicExpression__Group_1_4_1__0 )? ) )
            // InternalSTCoreParser.g:7549:1: ( ( rule__STAtomicExpression__Group_1_4_1__0 )? )
            {
            // InternalSTCoreParser.g:7549:1: ( ( rule__STAtomicExpression__Group_1_4_1__0 )? )
            // InternalSTCoreParser.g:7550:2: ( rule__STAtomicExpression__Group_1_4_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1()); 
            }
            // InternalSTCoreParser.g:7551:2: ( rule__STAtomicExpression__Group_1_4_1__0 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0>=LDATE_AND_TIME && LA66_0<=TIME_OF_DAY)||LA66_0==WSTRING||(LA66_0>=STRING && LA66_0<=DWORD)||(LA66_0>=LDATE && LA66_0<=LWORD)||(LA66_0>=UDINT && LA66_0<=WCHAR)||(LA66_0>=BOOL && LA66_0<=DINT)||(LA66_0>=LINT && LA66_0<=UINT)||LA66_0==WORD||(LA66_0>=INT && LA66_0<=LDT)||LA66_0==TOD||LA66_0==DT||(LA66_0>=LD && LA66_0<=LT)||LA66_0==NOT||LA66_0==D||LA66_0==T||LA66_0==LeftParenthesis||LA66_0==PlusSign||LA66_0==HyphenMinus||LA66_0==RULE_BOOL_VALUES||(LA66_0>=RULE_NON_DECIMAL && LA66_0<=RULE_INT)||(LA66_0>=RULE_ID && LA66_0<=RULE_STRING)) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSTCoreParser.g:7551:3: rule__STAtomicExpression__Group_1_4_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_4_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__2"
    // InternalSTCoreParser.g:7559:1: rule__STAtomicExpression__Group_1_4__2 : rule__STAtomicExpression__Group_1_4__2__Impl ;
    public final void rule__STAtomicExpression__Group_1_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7563:1: ( rule__STAtomicExpression__Group_1_4__2__Impl )
            // InternalSTCoreParser.g:7564:2: rule__STAtomicExpression__Group_1_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__2"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__2__Impl"
    // InternalSTCoreParser.g:7570:1: rule__STAtomicExpression__Group_1_4__2__Impl : ( RightParenthesis ) ;
    public final void rule__STAtomicExpression__Group_1_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7574:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:7575:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:7575:1: ( RightParenthesis )
            // InternalSTCoreParser.g:7576:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_1_4_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__0"
    // InternalSTCoreParser.g:7586:1: rule__STAtomicExpression__Group_1_4_1__0 : rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1 ;
    public final void rule__STAtomicExpression__Group_1_4_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7590:1: ( rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1 )
            // InternalSTCoreParser.g:7591:2: rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1
            {
            pushFollow(FOLLOW_60);
            rule__STAtomicExpression__Group_1_4_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__0__Impl"
    // InternalSTCoreParser.g:7598:1: rule__STAtomicExpression__Group_1_4_1__0__Impl : ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7602:1: ( ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) ) )
            // InternalSTCoreParser.g:7603:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) )
            {
            // InternalSTCoreParser.g:7603:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) )
            // InternalSTCoreParser.g:7604:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_0()); 
            }
            // InternalSTCoreParser.g:7605:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 )
            // InternalSTCoreParser.g:7605:3: rule__STAtomicExpression__ParametersAssignment_1_4_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__ParametersAssignment_1_4_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__1"
    // InternalSTCoreParser.g:7613:1: rule__STAtomicExpression__Group_1_4_1__1 : rule__STAtomicExpression__Group_1_4_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_4_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7617:1: ( rule__STAtomicExpression__Group_1_4_1__1__Impl )
            // InternalSTCoreParser.g:7618:2: rule__STAtomicExpression__Group_1_4_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__1__Impl"
    // InternalSTCoreParser.g:7624:1: rule__STAtomicExpression__Group_1_4_1__1__Impl : ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* ) ;
    public final void rule__STAtomicExpression__Group_1_4_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7628:1: ( ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* ) )
            // InternalSTCoreParser.g:7629:1: ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* )
            {
            // InternalSTCoreParser.g:7629:1: ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* )
            // InternalSTCoreParser.g:7630:2: ( rule__STAtomicExpression__Group_1_4_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1_1()); 
            }
            // InternalSTCoreParser.g:7631:2: ( rule__STAtomicExpression__Group_1_4_1_1__0 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==Comma) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalSTCoreParser.g:7631:3: rule__STAtomicExpression__Group_1_4_1_1__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STAtomicExpression__Group_1_4_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__0"
    // InternalSTCoreParser.g:7640:1: rule__STAtomicExpression__Group_1_4_1_1__0 : rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1 ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7644:1: ( rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1 )
            // InternalSTCoreParser.g:7645:2: rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STAtomicExpression__Group_1_4_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__0__Impl"
    // InternalSTCoreParser.g:7652:1: rule__STAtomicExpression__Group_1_4_1_1__0__Impl : ( Comma ) ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7656:1: ( ( Comma ) )
            // InternalSTCoreParser.g:7657:1: ( Comma )
            {
            // InternalSTCoreParser.g:7657:1: ( Comma )
            // InternalSTCoreParser.g:7658:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getCommaKeyword_1_4_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getCommaKeyword_1_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__1"
    // InternalSTCoreParser.g:7667:1: rule__STAtomicExpression__Group_1_4_1_1__1 : rule__STAtomicExpression__Group_1_4_1_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7671:1: ( rule__STAtomicExpression__Group_1_4_1_1__1__Impl )
            // InternalSTCoreParser.g:7672:2: rule__STAtomicExpression__Group_1_4_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__1__Impl"
    // InternalSTCoreParser.g:7678:1: rule__STAtomicExpression__Group_1_4_1_1__1__Impl : ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7682:1: ( ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) ) )
            // InternalSTCoreParser.g:7683:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) )
            {
            // InternalSTCoreParser.g:7683:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) )
            // InternalSTCoreParser.g:7684:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_1_1()); 
            }
            // InternalSTCoreParser.g:7685:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 )
            // InternalSTCoreParser.g:7685:3: rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__0"
    // InternalSTCoreParser.g:7694:1: rule__STLiteralExpressions__Group_0__0 : rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1 ;
    public final void rule__STLiteralExpressions__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7698:1: ( rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1 )
            // InternalSTCoreParser.g:7699:2: rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1
            {
            pushFollow(FOLLOW_63);
            rule__STLiteralExpressions__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__0__Impl"
    // InternalSTCoreParser.g:7706:1: rule__STLiteralExpressions__Group_0__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7710:1: ( ( () ) )
            // InternalSTCoreParser.g:7711:1: ( () )
            {
            // InternalSTCoreParser.g:7711:1: ( () )
            // InternalSTCoreParser.g:7712:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTBoolLiteralAction_0_0()); 
            }
            // InternalSTCoreParser.g:7713:2: ()
            // InternalSTCoreParser.g:7713:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTBoolLiteralAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__1"
    // InternalSTCoreParser.g:7721:1: rule__STLiteralExpressions__Group_0__1 : rule__STLiteralExpressions__Group_0__1__Impl ;
    public final void rule__STLiteralExpressions__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7725:1: ( rule__STLiteralExpressions__Group_0__1__Impl )
            // InternalSTCoreParser.g:7726:2: rule__STLiteralExpressions__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__1__Impl"
    // InternalSTCoreParser.g:7732:1: rule__STLiteralExpressions__Group_0__1__Impl : ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7736:1: ( ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) ) )
            // InternalSTCoreParser.g:7737:1: ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) )
            {
            // InternalSTCoreParser.g:7737:1: ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) )
            // InternalSTCoreParser.g:7738:2: ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralAssignment_0_1()); 
            }
            // InternalSTCoreParser.g:7739:2: ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 )
            // InternalSTCoreParser.g:7739:3: rule__STLiteralExpressions__BoolLiteralAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__BoolLiteralAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__0"
    // InternalSTCoreParser.g:7748:1: rule__STLiteralExpressions__Group_1__0 : rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1 ;
    public final void rule__STLiteralExpressions__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7752:1: ( rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1 )
            // InternalSTCoreParser.g:7753:2: rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1
            {
            pushFollow(FOLLOW_64);
            rule__STLiteralExpressions__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__0__Impl"
    // InternalSTCoreParser.g:7760:1: rule__STLiteralExpressions__Group_1__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7764:1: ( ( () ) )
            // InternalSTCoreParser.g:7765:1: ( () )
            {
            // InternalSTCoreParser.g:7765:1: ( () )
            // InternalSTCoreParser.g:7766:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralAction_1_0()); 
            }
            // InternalSTCoreParser.g:7767:2: ()
            // InternalSTCoreParser.g:7767:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__1"
    // InternalSTCoreParser.g:7775:1: rule__STLiteralExpressions__Group_1__1 : rule__STLiteralExpressions__Group_1__1__Impl ;
    public final void rule__STLiteralExpressions__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7779:1: ( rule__STLiteralExpressions__Group_1__1__Impl )
            // InternalSTCoreParser.g:7780:2: rule__STLiteralExpressions__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__1__Impl"
    // InternalSTCoreParser.g:7786:1: rule__STLiteralExpressions__Group_1__1__Impl : ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7790:1: ( ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:7791:1: ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:7791:1: ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) )
            // InternalSTCoreParser.g:7792:2: ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:7793:2: ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 )
            // InternalSTCoreParser.g:7793:3: rule__STLiteralExpressions__NumericLiteralAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__NumericLiteralAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__0"
    // InternalSTCoreParser.g:7802:1: rule__STLiteralExpressions__Group_2__0 : rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1 ;
    public final void rule__STLiteralExpressions__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7806:1: ( rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1 )
            // InternalSTCoreParser.g:7807:2: rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1
            {
            pushFollow(FOLLOW_65);
            rule__STLiteralExpressions__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__0__Impl"
    // InternalSTCoreParser.g:7814:1: rule__STLiteralExpressions__Group_2__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7818:1: ( ( () ) )
            // InternalSTCoreParser.g:7819:1: ( () )
            {
            // InternalSTCoreParser.g:7819:1: ( () )
            // InternalSTCoreParser.g:7820:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralAction_2_0()); 
            }
            // InternalSTCoreParser.g:7821:2: ()
            // InternalSTCoreParser.g:7821:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__1"
    // InternalSTCoreParser.g:7829:1: rule__STLiteralExpressions__Group_2__1 : rule__STLiteralExpressions__Group_2__1__Impl ;
    public final void rule__STLiteralExpressions__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7833:1: ( rule__STLiteralExpressions__Group_2__1__Impl )
            // InternalSTCoreParser.g:7834:2: rule__STLiteralExpressions__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__1__Impl"
    // InternalSTCoreParser.g:7840:1: rule__STLiteralExpressions__Group_2__1__Impl : ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7844:1: ( ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) ) )
            // InternalSTCoreParser.g:7845:1: ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) )
            {
            // InternalSTCoreParser.g:7845:1: ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) )
            // InternalSTCoreParser.g:7846:2: ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralAssignment_2_1()); 
            }
            // InternalSTCoreParser.g:7847:2: ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 )
            // InternalSTCoreParser.g:7847:3: rule__STLiteralExpressions__DateLiteralAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__DateLiteralAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__0"
    // InternalSTCoreParser.g:7856:1: rule__STLiteralExpressions__Group_3__0 : rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1 ;
    public final void rule__STLiteralExpressions__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7860:1: ( rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1 )
            // InternalSTCoreParser.g:7861:2: rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1
            {
            pushFollow(FOLLOW_66);
            rule__STLiteralExpressions__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__0__Impl"
    // InternalSTCoreParser.g:7868:1: rule__STLiteralExpressions__Group_3__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7872:1: ( ( () ) )
            // InternalSTCoreParser.g:7873:1: ( () )
            {
            // InternalSTCoreParser.g:7873:1: ( () )
            // InternalSTCoreParser.g:7874:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralAction_3_0()); 
            }
            // InternalSTCoreParser.g:7875:2: ()
            // InternalSTCoreParser.g:7875:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__1"
    // InternalSTCoreParser.g:7883:1: rule__STLiteralExpressions__Group_3__1 : rule__STLiteralExpressions__Group_3__1__Impl ;
    public final void rule__STLiteralExpressions__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7887:1: ( rule__STLiteralExpressions__Group_3__1__Impl )
            // InternalSTCoreParser.g:7888:2: rule__STLiteralExpressions__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__1__Impl"
    // InternalSTCoreParser.g:7894:1: rule__STLiteralExpressions__Group_3__1__Impl : ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7898:1: ( ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) ) )
            // InternalSTCoreParser.g:7899:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) )
            {
            // InternalSTCoreParser.g:7899:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) )
            // InternalSTCoreParser.g:7900:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_3_1()); 
            }
            // InternalSTCoreParser.g:7901:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 )
            // InternalSTCoreParser.g:7901:3: rule__STLiteralExpressions__TimeLiteralAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeLiteralAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__0"
    // InternalSTCoreParser.g:7910:1: rule__STLiteralExpressions__Group_4__0 : rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1 ;
    public final void rule__STLiteralExpressions__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7914:1: ( rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1 )
            // InternalSTCoreParser.g:7915:2: rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1
            {
            pushFollow(FOLLOW_67);
            rule__STLiteralExpressions__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__0__Impl"
    // InternalSTCoreParser.g:7922:1: rule__STLiteralExpressions__Group_4__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7926:1: ( ( () ) )
            // InternalSTCoreParser.g:7927:1: ( () )
            {
            // InternalSTCoreParser.g:7927:1: ( () )
            // InternalSTCoreParser.g:7928:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralAction_4_0()); 
            }
            // InternalSTCoreParser.g:7929:2: ()
            // InternalSTCoreParser.g:7929:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__1"
    // InternalSTCoreParser.g:7937:1: rule__STLiteralExpressions__Group_4__1 : rule__STLiteralExpressions__Group_4__1__Impl ;
    public final void rule__STLiteralExpressions__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7941:1: ( rule__STLiteralExpressions__Group_4__1__Impl )
            // InternalSTCoreParser.g:7942:2: rule__STLiteralExpressions__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__1__Impl"
    // InternalSTCoreParser.g:7948:1: rule__STLiteralExpressions__Group_4__1__Impl : ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7952:1: ( ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) ) )
            // InternalSTCoreParser.g:7953:1: ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) )
            {
            // InternalSTCoreParser.g:7953:1: ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) )
            // InternalSTCoreParser.g:7954:2: ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralAssignment_4_1()); 
            }
            // InternalSTCoreParser.g:7955:2: ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 )
            // InternalSTCoreParser.g:7955:3: rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__0"
    // InternalSTCoreParser.g:7964:1: rule__STLiteralExpressions__Group_5__0 : rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1 ;
    public final void rule__STLiteralExpressions__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7968:1: ( rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1 )
            // InternalSTCoreParser.g:7969:2: rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1
            {
            pushFollow(FOLLOW_68);
            rule__STLiteralExpressions__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__0__Impl"
    // InternalSTCoreParser.g:7976:1: rule__STLiteralExpressions__Group_5__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7980:1: ( ( () ) )
            // InternalSTCoreParser.g:7981:1: ( () )
            {
            // InternalSTCoreParser.g:7981:1: ( () )
            // InternalSTCoreParser.g:7982:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralAction_5_0()); 
            }
            // InternalSTCoreParser.g:7983:2: ()
            // InternalSTCoreParser.g:7983:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__1"
    // InternalSTCoreParser.g:7991:1: rule__STLiteralExpressions__Group_5__1 : rule__STLiteralExpressions__Group_5__1__Impl ;
    public final void rule__STLiteralExpressions__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7995:1: ( rule__STLiteralExpressions__Group_5__1__Impl )
            // InternalSTCoreParser.g:7996:2: rule__STLiteralExpressions__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__1__Impl"
    // InternalSTCoreParser.g:8002:1: rule__STLiteralExpressions__Group_5__1__Impl : ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8006:1: ( ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) ) )
            // InternalSTCoreParser.g:8007:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) )
            {
            // InternalSTCoreParser.g:8007:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) )
            // InternalSTCoreParser.g:8008:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_5_1()); 
            }
            // InternalSTCoreParser.g:8009:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 )
            // InternalSTCoreParser.g:8009:3: rule__STLiteralExpressions__TimeLiteralAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeLiteralAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__0"
    // InternalSTCoreParser.g:8018:1: rule__STLiteralExpressions__Group_6__0 : rule__STLiteralExpressions__Group_6__0__Impl rule__STLiteralExpressions__Group_6__1 ;
    public final void rule__STLiteralExpressions__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8022:1: ( rule__STLiteralExpressions__Group_6__0__Impl rule__STLiteralExpressions__Group_6__1 )
            // InternalSTCoreParser.g:8023:2: rule__STLiteralExpressions__Group_6__0__Impl rule__STLiteralExpressions__Group_6__1
            {
            pushFollow(FOLLOW_69);
            rule__STLiteralExpressions__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__0__Impl"
    // InternalSTCoreParser.g:8030:1: rule__STLiteralExpressions__Group_6__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8034:1: ( ( () ) )
            // InternalSTCoreParser.g:8035:1: ( () )
            {
            // InternalSTCoreParser.g:8035:1: ( () )
            // InternalSTCoreParser.g:8036:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralAction_6_0()); 
            }
            // InternalSTCoreParser.g:8037:2: ()
            // InternalSTCoreParser.g:8037:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralAction_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__1"
    // InternalSTCoreParser.g:8045:1: rule__STLiteralExpressions__Group_6__1 : rule__STLiteralExpressions__Group_6__1__Impl ;
    public final void rule__STLiteralExpressions__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8049:1: ( rule__STLiteralExpressions__Group_6__1__Impl )
            // InternalSTCoreParser.g:8050:2: rule__STLiteralExpressions__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__1__Impl"
    // InternalSTCoreParser.g:8056:1: rule__STLiteralExpressions__Group_6__1__Impl : ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8060:1: ( ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) ) )
            // InternalSTCoreParser.g:8061:1: ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) )
            {
            // InternalSTCoreParser.g:8061:1: ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) )
            // InternalSTCoreParser.g:8062:2: ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralAssignment_6_1()); 
            }
            // InternalSTCoreParser.g:8063:2: ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 )
            // InternalSTCoreParser.g:8063:3: rule__STLiteralExpressions__StringLiteralAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__StringLiteralAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__1__Impl"


    // $ANTLR start "rule__BOOL_LITERAL__Group__0"
    // InternalSTCoreParser.g:8072:1: rule__BOOL_LITERAL__Group__0 : rule__BOOL_LITERAL__Group__0__Impl rule__BOOL_LITERAL__Group__1 ;
    public final void rule__BOOL_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8076:1: ( rule__BOOL_LITERAL__Group__0__Impl rule__BOOL_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8077:2: rule__BOOL_LITERAL__Group__0__Impl rule__BOOL_LITERAL__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__BOOL_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__0"


    // $ANTLR start "rule__BOOL_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8084:1: rule__BOOL_LITERAL__Group__0__Impl : ( ( rule__BOOL_LITERAL__NotAssignment_0 )? ) ;
    public final void rule__BOOL_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8088:1: ( ( ( rule__BOOL_LITERAL__NotAssignment_0 )? ) )
            // InternalSTCoreParser.g:8089:1: ( ( rule__BOOL_LITERAL__NotAssignment_0 )? )
            {
            // InternalSTCoreParser.g:8089:1: ( ( rule__BOOL_LITERAL__NotAssignment_0 )? )
            // InternalSTCoreParser.g:8090:2: ( rule__BOOL_LITERAL__NotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getNotAssignment_0()); 
            }
            // InternalSTCoreParser.g:8091:2: ( rule__BOOL_LITERAL__NotAssignment_0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==NOT) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSTCoreParser.g:8091:3: rule__BOOL_LITERAL__NotAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__BOOL_LITERAL__NotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getNotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__BOOL_LITERAL__Group__1"
    // InternalSTCoreParser.g:8099:1: rule__BOOL_LITERAL__Group__1 : rule__BOOL_LITERAL__Group__1__Impl rule__BOOL_LITERAL__Group__2 ;
    public final void rule__BOOL_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8103:1: ( rule__BOOL_LITERAL__Group__1__Impl rule__BOOL_LITERAL__Group__2 )
            // InternalSTCoreParser.g:8104:2: rule__BOOL_LITERAL__Group__1__Impl rule__BOOL_LITERAL__Group__2
            {
            pushFollow(FOLLOW_63);
            rule__BOOL_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__1"


    // $ANTLR start "rule__BOOL_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8111:1: rule__BOOL_LITERAL__Group__1__Impl : ( ( BOOL )? ) ;
    public final void rule__BOOL_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8115:1: ( ( ( BOOL )? ) )
            // InternalSTCoreParser.g:8116:1: ( ( BOOL )? )
            {
            // InternalSTCoreParser.g:8116:1: ( ( BOOL )? )
            // InternalSTCoreParser.g:8117:2: ( BOOL )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getBOOLKeyword_1()); 
            }
            // InternalSTCoreParser.g:8118:2: ( BOOL )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==BOOL) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalSTCoreParser.g:8118:3: BOOL
                    {
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getBOOLKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__BOOL_LITERAL__Group__2"
    // InternalSTCoreParser.g:8126:1: rule__BOOL_LITERAL__Group__2 : rule__BOOL_LITERAL__Group__2__Impl ;
    public final void rule__BOOL_LITERAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8130:1: ( rule__BOOL_LITERAL__Group__2__Impl )
            // InternalSTCoreParser.g:8131:2: rule__BOOL_LITERAL__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__2"


    // $ANTLR start "rule__BOOL_LITERAL__Group__2__Impl"
    // InternalSTCoreParser.g:8137:1: rule__BOOL_LITERAL__Group__2__Impl : ( ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 ) ) ;
    public final void rule__BOOL_LITERAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8141:1: ( ( ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 ) ) )
            // InternalSTCoreParser.g:8142:1: ( ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 ) )
            {
            // InternalSTCoreParser.g:8142:1: ( ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 ) )
            // InternalSTCoreParser.g:8143:2: ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getKeyWordValueAssignment_2()); 
            }
            // InternalSTCoreParser.g:8144:2: ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 )
            // InternalSTCoreParser.g:8144:3: rule__BOOL_LITERAL__KeyWordValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__KeyWordValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getKeyWordValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__2__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__0"
    // InternalSTCoreParser.g:8153:1: rule__NUMERIC_LITERAL__Group__0 : rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1 ;
    public final void rule__NUMERIC_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8157:1: ( rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8158:2: rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1
            {
            pushFollow(FOLLOW_64);
            rule__NUMERIC_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__0"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8165:1: rule__NUMERIC_LITERAL__Group__0__Impl : ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? ) ;
    public final void rule__NUMERIC_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8169:1: ( ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? ) )
            // InternalSTCoreParser.g:8170:1: ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? )
            {
            // InternalSTCoreParser.g:8170:1: ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? )
            // InternalSTCoreParser.g:8171:2: ( rule__NUMERIC_LITERAL__NotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getNotAssignment_0()); 
            }
            // InternalSTCoreParser.g:8172:2: ( rule__NUMERIC_LITERAL__NotAssignment_0 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==NOT) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSTCoreParser.g:8172:3: rule__NUMERIC_LITERAL__NotAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__NotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getNotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__1"
    // InternalSTCoreParser.g:8180:1: rule__NUMERIC_LITERAL__Group__1 : rule__NUMERIC_LITERAL__Group__1__Impl rule__NUMERIC_LITERAL__Group__2 ;
    public final void rule__NUMERIC_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8184:1: ( rule__NUMERIC_LITERAL__Group__1__Impl rule__NUMERIC_LITERAL__Group__2 )
            // InternalSTCoreParser.g:8185:2: rule__NUMERIC_LITERAL__Group__1__Impl rule__NUMERIC_LITERAL__Group__2
            {
            pushFollow(FOLLOW_64);
            rule__NUMERIC_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__1"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8192:1: rule__NUMERIC_LITERAL__Group__1__Impl : ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? ) ;
    public final void rule__NUMERIC_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8196:1: ( ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? ) )
            // InternalSTCoreParser.g:8197:1: ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? )
            {
            // InternalSTCoreParser.g:8197:1: ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? )
            // InternalSTCoreParser.g:8198:2: ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAssignment_1()); 
            }
            // InternalSTCoreParser.g:8199:2: ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==DWORD||LA71_0==LREAL||LA71_0==LWORD||(LA71_0>=UDINT && LA71_0<=USINT)||LA71_0==BYTE||LA71_0==DINT||LA71_0==LINT||(LA71_0>=REAL && LA71_0<=SINT)||LA71_0==UINT||LA71_0==WORD||LA71_0==INT) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSTCoreParser.g:8199:3: rule__NUMERIC_LITERAL__KeywordAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__KeywordAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__2"
    // InternalSTCoreParser.g:8207:1: rule__NUMERIC_LITERAL__Group__2 : rule__NUMERIC_LITERAL__Group__2__Impl ;
    public final void rule__NUMERIC_LITERAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8211:1: ( rule__NUMERIC_LITERAL__Group__2__Impl )
            // InternalSTCoreParser.g:8212:2: rule__NUMERIC_LITERAL__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__2"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__2__Impl"
    // InternalSTCoreParser.g:8218:1: rule__NUMERIC_LITERAL__Group__2__Impl : ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) ) ;
    public final void rule__NUMERIC_LITERAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8222:1: ( ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) ) )
            // InternalSTCoreParser.g:8223:1: ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) )
            {
            // InternalSTCoreParser.g:8223:1: ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) )
            // InternalSTCoreParser.g:8224:2: ( rule__NUMERIC_LITERAL__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getAlternatives_2()); 
            }
            // InternalSTCoreParser.g:8225:2: ( rule__NUMERIC_LITERAL__Alternatives_2 )
            // InternalSTCoreParser.g:8225:3: rule__NUMERIC_LITERAL__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__2__Impl"


    // $ANTLR start "rule__DATE_LITERAL__Group__0"
    // InternalSTCoreParser.g:8234:1: rule__DATE_LITERAL__Group__0 : rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1 ;
    public final void rule__DATE_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8238:1: ( rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8239:2: rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__DATE_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__0"


    // $ANTLR start "rule__DATE_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8246:1: rule__DATE_LITERAL__Group__0__Impl : ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__DATE_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8250:1: ( ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:8251:1: ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:8251:1: ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:8252:2: ( rule__DATE_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:8253:2: ( rule__DATE_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:8253:3: rule__DATE_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__DATE_LITERAL__Group__1"
    // InternalSTCoreParser.g:8261:1: rule__DATE_LITERAL__Group__1 : rule__DATE_LITERAL__Group__1__Impl ;
    public final void rule__DATE_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8265:1: ( rule__DATE_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:8266:2: rule__DATE_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__1"


    // $ANTLR start "rule__DATE_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8272:1: rule__DATE_LITERAL__Group__1__Impl : ( ( rule__DATE_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__DATE_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8276:1: ( ( ( rule__DATE_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8277:1: ( ( rule__DATE_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8277:1: ( ( rule__DATE_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:8278:2: ( rule__DATE_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8279:2: ( rule__DATE_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8279:3: rule__DATE_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__TIME_LITERAL__Group__0"
    // InternalSTCoreParser.g:8288:1: rule__TIME_LITERAL__Group__0 : rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1 ;
    public final void rule__TIME_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8292:1: ( rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8293:2: rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__TIME_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__0"


    // $ANTLR start "rule__TIME_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8300:1: rule__TIME_LITERAL__Group__0__Impl : ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__TIME_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8304:1: ( ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:8305:1: ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:8305:1: ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:8306:2: ( rule__TIME_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:8307:2: ( rule__TIME_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:8307:3: rule__TIME_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__TIME_LITERAL__Group__1"
    // InternalSTCoreParser.g:8315:1: rule__TIME_LITERAL__Group__1 : rule__TIME_LITERAL__Group__1__Impl ;
    public final void rule__TIME_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8319:1: ( rule__TIME_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:8320:2: rule__TIME_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__1"


    // $ANTLR start "rule__TIME_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8326:1: rule__TIME_LITERAL__Group__1__Impl : ( ( rule__TIME_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__TIME_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8330:1: ( ( ( rule__TIME_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8331:1: ( ( rule__TIME_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8331:1: ( ( rule__TIME_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:8332:2: ( rule__TIME_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8333:2: ( rule__TIME_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8333:3: rule__TIME_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__0"
    // InternalSTCoreParser.g:8342:1: rule__TIME_OF_DAY_LITERAL__Group__0 : rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1 ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8346:1: ( rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8347:2: rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__TIME_OF_DAY_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8354:1: rule__TIME_OF_DAY_LITERAL__Group__0__Impl : ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8358:1: ( ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:8359:1: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:8359:1: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:8360:2: ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:8361:2: ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:8361:3: rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__1"
    // InternalSTCoreParser.g:8369:1: rule__TIME_OF_DAY_LITERAL__Group__1 : rule__TIME_OF_DAY_LITERAL__Group__1__Impl ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8373:1: ( rule__TIME_OF_DAY_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:8374:2: rule__TIME_OF_DAY_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__1"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8380:1: rule__TIME_OF_DAY_LITERAL__Group__1__Impl : ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8384:1: ( ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8385:1: ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8385:1: ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:8386:2: ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8387:2: ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8387:3: rule__TIME_OF_DAY_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__0"
    // InternalSTCoreParser.g:8396:1: rule__DATE_AND_TIME_LITERAL__Group__0 : rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8400:1: ( rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8401:2: rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__DATE_AND_TIME_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8408:1: rule__DATE_AND_TIME_LITERAL__Group__0__Impl : ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8412:1: ( ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:8413:1: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:8413:1: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:8414:2: ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:8415:2: ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:8415:3: rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__1"
    // InternalSTCoreParser.g:8423:1: rule__DATE_AND_TIME_LITERAL__Group__1 : rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8427:1: ( rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2 )
            // InternalSTCoreParser.g:8428:2: rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2
            {
            pushFollow(FOLLOW_71);
            rule__DATE_AND_TIME_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8435:1: rule__DATE_AND_TIME_LITERAL__Group__1__Impl : ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8439:1: ( ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8440:1: ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8440:1: ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) )
            // InternalSTCoreParser.g:8441:2: ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8442:2: ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 )
            // InternalSTCoreParser.g:8442:3: rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__2"
    // InternalSTCoreParser.g:8450:1: rule__DATE_AND_TIME_LITERAL__Group__2 : rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8454:1: ( rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3 )
            // InternalSTCoreParser.g:8455:2: rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3
            {
            pushFollow(FOLLOW_61);
            rule__DATE_AND_TIME_LITERAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__2"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__2__Impl"
    // InternalSTCoreParser.g:8462:1: rule__DATE_AND_TIME_LITERAL__Group__2__Impl : ( HyphenMinus ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8466:1: ( ( HyphenMinus ) )
            // InternalSTCoreParser.g:8467:1: ( HyphenMinus )
            {
            // InternalSTCoreParser.g:8467:1: ( HyphenMinus )
            // InternalSTCoreParser.g:8468:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getHyphenMinusKeyword_2()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getHyphenMinusKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__2__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__3"
    // InternalSTCoreParser.g:8477:1: rule__DATE_AND_TIME_LITERAL__Group__3 : rule__DATE_AND_TIME_LITERAL__Group__3__Impl ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8481:1: ( rule__DATE_AND_TIME_LITERAL__Group__3__Impl )
            // InternalSTCoreParser.g:8482:2: rule__DATE_AND_TIME_LITERAL__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__3"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__3__Impl"
    // InternalSTCoreParser.g:8488:1: rule__DATE_AND_TIME_LITERAL__Group__3__Impl : ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8492:1: ( ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) ) )
            // InternalSTCoreParser.g:8493:1: ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) )
            {
            // InternalSTCoreParser.g:8493:1: ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) )
            // InternalSTCoreParser.g:8494:2: ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueAssignment_3()); 
            }
            // InternalSTCoreParser.g:8495:2: ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 )
            // InternalSTCoreParser.g:8495:3: rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__3__Impl"


    // $ANTLR start "rule__STRING_LITERAL__Group__0"
    // InternalSTCoreParser.g:8504:1: rule__STRING_LITERAL__Group__0 : rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1 ;
    public final void rule__STRING_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8508:1: ( rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8509:2: rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__STRING_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__0"


    // $ANTLR start "rule__STRING_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8516:1: rule__STRING_LITERAL__Group__0__Impl : ( ( rule__STRING_LITERAL__Alternatives_0 )? ) ;
    public final void rule__STRING_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8520:1: ( ( ( rule__STRING_LITERAL__Alternatives_0 )? ) )
            // InternalSTCoreParser.g:8521:1: ( ( rule__STRING_LITERAL__Alternatives_0 )? )
            {
            // InternalSTCoreParser.g:8521:1: ( ( rule__STRING_LITERAL__Alternatives_0 )? )
            // InternalSTCoreParser.g:8522:2: ( rule__STRING_LITERAL__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getAlternatives_0()); 
            }
            // InternalSTCoreParser.g:8523:2: ( rule__STRING_LITERAL__Alternatives_0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==WSTRING||LA72_0==STRING||LA72_0==WCHAR||LA72_0==CHAR) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSTCoreParser.g:8523:3: rule__STRING_LITERAL__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STRING_LITERAL__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__STRING_LITERAL__Group__1"
    // InternalSTCoreParser.g:8531:1: rule__STRING_LITERAL__Group__1 : rule__STRING_LITERAL__Group__1__Impl ;
    public final void rule__STRING_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8535:1: ( rule__STRING_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:8536:2: rule__STRING_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__1"


    // $ANTLR start "rule__STRING_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8542:1: rule__STRING_LITERAL__Group__1__Impl : ( ( rule__STRING_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__STRING_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8546:1: ( ( ( rule__STRING_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8547:1: ( ( rule__STRING_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8547:1: ( ( rule__STRING_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:8548:2: ( rule__STRING_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8549:2: ( rule__STRING_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8549:3: rule__STRING_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__INTEGER__Group__0"
    // InternalSTCoreParser.g:8558:1: rule__INTEGER__Group__0 : rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1 ;
    public final void rule__INTEGER__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8562:1: ( rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1 )
            // InternalSTCoreParser.g:8563:2: rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__INTEGER__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__0"


    // $ANTLR start "rule__INTEGER__Group__0__Impl"
    // InternalSTCoreParser.g:8570:1: rule__INTEGER__Group__0__Impl : ( ( rule__INTEGER__Alternatives_0 )? ) ;
    public final void rule__INTEGER__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8574:1: ( ( ( rule__INTEGER__Alternatives_0 )? ) )
            // InternalSTCoreParser.g:8575:1: ( ( rule__INTEGER__Alternatives_0 )? )
            {
            // InternalSTCoreParser.g:8575:1: ( ( rule__INTEGER__Alternatives_0 )? )
            // InternalSTCoreParser.g:8576:2: ( rule__INTEGER__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getAlternatives_0()); 
            }
            // InternalSTCoreParser.g:8577:2: ( rule__INTEGER__Alternatives_0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==PlusSign||LA73_0==HyphenMinus) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSTCoreParser.g:8577:3: rule__INTEGER__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__INTEGER__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__0__Impl"


    // $ANTLR start "rule__INTEGER__Group__1"
    // InternalSTCoreParser.g:8585:1: rule__INTEGER__Group__1 : rule__INTEGER__Group__1__Impl ;
    public final void rule__INTEGER__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8589:1: ( rule__INTEGER__Group__1__Impl )
            // InternalSTCoreParser.g:8590:2: rule__INTEGER__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__1"


    // $ANTLR start "rule__INTEGER__Group__1__Impl"
    // InternalSTCoreParser.g:8596:1: rule__INTEGER__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__INTEGER__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8600:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8601:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8601:1: ( RULE_INT )
            // InternalSTCoreParser.g:8602:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__1__Impl"


    // $ANTLR start "rule__REAL__Group__0"
    // InternalSTCoreParser.g:8612:1: rule__REAL__Group__0 : rule__REAL__Group__0__Impl rule__REAL__Group__1 ;
    public final void rule__REAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8616:1: ( rule__REAL__Group__0__Impl rule__REAL__Group__1 )
            // InternalSTCoreParser.g:8617:2: rule__REAL__Group__0__Impl rule__REAL__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__REAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__REAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__0"


    // $ANTLR start "rule__REAL__Group__0__Impl"
    // InternalSTCoreParser.g:8624:1: rule__REAL__Group__0__Impl : ( ruleINTEGER ) ;
    public final void rule__REAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8628:1: ( ( ruleINTEGER ) )
            // InternalSTCoreParser.g:8629:1: ( ruleINTEGER )
            {
            // InternalSTCoreParser.g:8629:1: ( ruleINTEGER )
            // InternalSTCoreParser.g:8630:2: ruleINTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getINTEGERParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getINTEGERParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__0__Impl"


    // $ANTLR start "rule__REAL__Group__1"
    // InternalSTCoreParser.g:8639:1: rule__REAL__Group__1 : rule__REAL__Group__1__Impl rule__REAL__Group__2 ;
    public final void rule__REAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8643:1: ( rule__REAL__Group__1__Impl rule__REAL__Group__2 )
            // InternalSTCoreParser.g:8644:2: rule__REAL__Group__1__Impl rule__REAL__Group__2
            {
            pushFollow(FOLLOW_74);
            rule__REAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__REAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__1"


    // $ANTLR start "rule__REAL__Group__1__Impl"
    // InternalSTCoreParser.g:8651:1: rule__REAL__Group__1__Impl : ( FullStop ) ;
    public final void rule__REAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8655:1: ( ( FullStop ) )
            // InternalSTCoreParser.g:8656:1: ( FullStop )
            {
            // InternalSTCoreParser.g:8656:1: ( FullStop )
            // InternalSTCoreParser.g:8657:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getFullStopKeyword_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__1__Impl"


    // $ANTLR start "rule__REAL__Group__2"
    // InternalSTCoreParser.g:8666:1: rule__REAL__Group__2 : rule__REAL__Group__2__Impl ;
    public final void rule__REAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8670:1: ( rule__REAL__Group__2__Impl )
            // InternalSTCoreParser.g:8671:2: rule__REAL__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__2"


    // $ANTLR start "rule__REAL__Group__2__Impl"
    // InternalSTCoreParser.g:8677:1: rule__REAL__Group__2__Impl : ( ( rule__REAL__Alternatives_2 ) ) ;
    public final void rule__REAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8681:1: ( ( ( rule__REAL__Alternatives_2 ) ) )
            // InternalSTCoreParser.g:8682:1: ( ( rule__REAL__Alternatives_2 ) )
            {
            // InternalSTCoreParser.g:8682:1: ( ( rule__REAL__Alternatives_2 ) )
            // InternalSTCoreParser.g:8683:2: ( rule__REAL__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getAlternatives_2()); 
            }
            // InternalSTCoreParser.g:8684:2: ( rule__REAL__Alternatives_2 )
            // InternalSTCoreParser.g:8684:3: rule__REAL__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__2__Impl"


    // $ANTLR start "rule__DATE__Group__0"
    // InternalSTCoreParser.g:8693:1: rule__DATE__Group__0 : rule__DATE__Group__0__Impl rule__DATE__Group__1 ;
    public final void rule__DATE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8697:1: ( rule__DATE__Group__0__Impl rule__DATE__Group__1 )
            // InternalSTCoreParser.g:8698:2: rule__DATE__Group__0__Impl rule__DATE__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__DATE__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__0"


    // $ANTLR start "rule__DATE__Group__0__Impl"
    // InternalSTCoreParser.g:8705:1: rule__DATE__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8709:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8710:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8710:1: ( RULE_INT )
            // InternalSTCoreParser.g:8711:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__0__Impl"


    // $ANTLR start "rule__DATE__Group__1"
    // InternalSTCoreParser.g:8720:1: rule__DATE__Group__1 : rule__DATE__Group__1__Impl rule__DATE__Group__2 ;
    public final void rule__DATE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8724:1: ( rule__DATE__Group__1__Impl rule__DATE__Group__2 )
            // InternalSTCoreParser.g:8725:2: rule__DATE__Group__1__Impl rule__DATE__Group__2
            {
            pushFollow(FOLLOW_61);
            rule__DATE__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__1"


    // $ANTLR start "rule__DATE__Group__1__Impl"
    // InternalSTCoreParser.g:8732:1: rule__DATE__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__DATE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8736:1: ( ( HyphenMinus ) )
            // InternalSTCoreParser.g:8737:1: ( HyphenMinus )
            {
            // InternalSTCoreParser.g:8737:1: ( HyphenMinus )
            // InternalSTCoreParser.g:8738:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__1__Impl"


    // $ANTLR start "rule__DATE__Group__2"
    // InternalSTCoreParser.g:8747:1: rule__DATE__Group__2 : rule__DATE__Group__2__Impl rule__DATE__Group__3 ;
    public final void rule__DATE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8751:1: ( rule__DATE__Group__2__Impl rule__DATE__Group__3 )
            // InternalSTCoreParser.g:8752:2: rule__DATE__Group__2__Impl rule__DATE__Group__3
            {
            pushFollow(FOLLOW_71);
            rule__DATE__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__2"


    // $ANTLR start "rule__DATE__Group__2__Impl"
    // InternalSTCoreParser.g:8759:1: rule__DATE__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8763:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8764:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8764:1: ( RULE_INT )
            // InternalSTCoreParser.g:8765:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__2__Impl"


    // $ANTLR start "rule__DATE__Group__3"
    // InternalSTCoreParser.g:8774:1: rule__DATE__Group__3 : rule__DATE__Group__3__Impl rule__DATE__Group__4 ;
    public final void rule__DATE__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8778:1: ( rule__DATE__Group__3__Impl rule__DATE__Group__4 )
            // InternalSTCoreParser.g:8779:2: rule__DATE__Group__3__Impl rule__DATE__Group__4
            {
            pushFollow(FOLLOW_61);
            rule__DATE__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__3"


    // $ANTLR start "rule__DATE__Group__3__Impl"
    // InternalSTCoreParser.g:8786:1: rule__DATE__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__DATE__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8790:1: ( ( HyphenMinus ) )
            // InternalSTCoreParser.g:8791:1: ( HyphenMinus )
            {
            // InternalSTCoreParser.g:8791:1: ( HyphenMinus )
            // InternalSTCoreParser.g:8792:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__3__Impl"


    // $ANTLR start "rule__DATE__Group__4"
    // InternalSTCoreParser.g:8801:1: rule__DATE__Group__4 : rule__DATE__Group__4__Impl ;
    public final void rule__DATE__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8805:1: ( rule__DATE__Group__4__Impl )
            // InternalSTCoreParser.g:8806:2: rule__DATE__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__4"


    // $ANTLR start "rule__DATE__Group__4__Impl"
    // InternalSTCoreParser.g:8812:1: rule__DATE__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8816:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8817:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8817:1: ( RULE_INT )
            // InternalSTCoreParser.g:8818:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__4__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__0"
    // InternalSTCoreParser.g:8828:1: rule__TIME_OF_DAY__Group__0 : rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1 ;
    public final void rule__TIME_OF_DAY__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8832:1: ( rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1 )
            // InternalSTCoreParser.g:8833:2: rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__TIME_OF_DAY__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__0"


    // $ANTLR start "rule__TIME_OF_DAY__Group__0__Impl"
    // InternalSTCoreParser.g:8840:1: rule__TIME_OF_DAY__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8844:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8845:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8845:1: ( RULE_INT )
            // InternalSTCoreParser.g:8846:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__1"
    // InternalSTCoreParser.g:8855:1: rule__TIME_OF_DAY__Group__1 : rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2 ;
    public final void rule__TIME_OF_DAY__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8859:1: ( rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2 )
            // InternalSTCoreParser.g:8860:2: rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2
            {
            pushFollow(FOLLOW_61);
            rule__TIME_OF_DAY__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__1"


    // $ANTLR start "rule__TIME_OF_DAY__Group__1__Impl"
    // InternalSTCoreParser.g:8867:1: rule__TIME_OF_DAY__Group__1__Impl : ( Colon ) ;
    public final void rule__TIME_OF_DAY__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8871:1: ( ( Colon ) )
            // InternalSTCoreParser.g:8872:1: ( Colon )
            {
            // InternalSTCoreParser.g:8872:1: ( Colon )
            // InternalSTCoreParser.g:8873:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__1__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__2"
    // InternalSTCoreParser.g:8882:1: rule__TIME_OF_DAY__Group__2 : rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3 ;
    public final void rule__TIME_OF_DAY__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8886:1: ( rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3 )
            // InternalSTCoreParser.g:8887:2: rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3
            {
            pushFollow(FOLLOW_75);
            rule__TIME_OF_DAY__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__2"


    // $ANTLR start "rule__TIME_OF_DAY__Group__2__Impl"
    // InternalSTCoreParser.g:8894:1: rule__TIME_OF_DAY__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8898:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8899:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8899:1: ( RULE_INT )
            // InternalSTCoreParser.g:8900:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__2__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__3"
    // InternalSTCoreParser.g:8909:1: rule__TIME_OF_DAY__Group__3 : rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4 ;
    public final void rule__TIME_OF_DAY__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8913:1: ( rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4 )
            // InternalSTCoreParser.g:8914:2: rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4
            {
            pushFollow(FOLLOW_61);
            rule__TIME_OF_DAY__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__3"


    // $ANTLR start "rule__TIME_OF_DAY__Group__3__Impl"
    // InternalSTCoreParser.g:8921:1: rule__TIME_OF_DAY__Group__3__Impl : ( Colon ) ;
    public final void rule__TIME_OF_DAY__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8925:1: ( ( Colon ) )
            // InternalSTCoreParser.g:8926:1: ( Colon )
            {
            // InternalSTCoreParser.g:8926:1: ( Colon )
            // InternalSTCoreParser.g:8927:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__3__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__4"
    // InternalSTCoreParser.g:8936:1: rule__TIME_OF_DAY__Group__4 : rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5 ;
    public final void rule__TIME_OF_DAY__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8940:1: ( rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5 )
            // InternalSTCoreParser.g:8941:2: rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5
            {
            pushFollow(FOLLOW_73);
            rule__TIME_OF_DAY__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__4"


    // $ANTLR start "rule__TIME_OF_DAY__Group__4__Impl"
    // InternalSTCoreParser.g:8948:1: rule__TIME_OF_DAY__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8952:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8953:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8953:1: ( RULE_INT )
            // InternalSTCoreParser.g:8954:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__4__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__5"
    // InternalSTCoreParser.g:8963:1: rule__TIME_OF_DAY__Group__5 : rule__TIME_OF_DAY__Group__5__Impl ;
    public final void rule__TIME_OF_DAY__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8967:1: ( rule__TIME_OF_DAY__Group__5__Impl )
            // InternalSTCoreParser.g:8968:2: rule__TIME_OF_DAY__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__5"


    // $ANTLR start "rule__TIME_OF_DAY__Group__5__Impl"
    // InternalSTCoreParser.g:8974:1: rule__TIME_OF_DAY__Group__5__Impl : ( ( rule__TIME_OF_DAY__Group_5__0 )? ) ;
    public final void rule__TIME_OF_DAY__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8978:1: ( ( ( rule__TIME_OF_DAY__Group_5__0 )? ) )
            // InternalSTCoreParser.g:8979:1: ( ( rule__TIME_OF_DAY__Group_5__0 )? )
            {
            // InternalSTCoreParser.g:8979:1: ( ( rule__TIME_OF_DAY__Group_5__0 )? )
            // InternalSTCoreParser.g:8980:2: ( rule__TIME_OF_DAY__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getGroup_5()); 
            }
            // InternalSTCoreParser.g:8981:2: ( rule__TIME_OF_DAY__Group_5__0 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==FullStop) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalSTCoreParser.g:8981:3: rule__TIME_OF_DAY__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TIME_OF_DAY__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__5__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__0"
    // InternalSTCoreParser.g:8990:1: rule__TIME_OF_DAY__Group_5__0 : rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1 ;
    public final void rule__TIME_OF_DAY__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8994:1: ( rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1 )
            // InternalSTCoreParser.g:8995:2: rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1
            {
            pushFollow(FOLLOW_61);
            rule__TIME_OF_DAY__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__0"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__0__Impl"
    // InternalSTCoreParser.g:9002:1: rule__TIME_OF_DAY__Group_5__0__Impl : ( FullStop ) ;
    public final void rule__TIME_OF_DAY__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9006:1: ( ( FullStop ) )
            // InternalSTCoreParser.g:9007:1: ( FullStop )
            {
            // InternalSTCoreParser.g:9007:1: ( FullStop )
            // InternalSTCoreParser.g:9008:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getFullStopKeyword_5_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getFullStopKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__1"
    // InternalSTCoreParser.g:9017:1: rule__TIME_OF_DAY__Group_5__1 : rule__TIME_OF_DAY__Group_5__1__Impl ;
    public final void rule__TIME_OF_DAY__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9021:1: ( rule__TIME_OF_DAY__Group_5__1__Impl )
            // InternalSTCoreParser.g:9022:2: rule__TIME_OF_DAY__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__1"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__1__Impl"
    // InternalSTCoreParser.g:9028:1: rule__TIME_OF_DAY__Group_5__1__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9032:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:9033:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:9033:1: ( RULE_INT )
            // InternalSTCoreParser.g:9034:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_5_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__1__Impl"


    // $ANTLR start "rule__Code__StatementsAssignment"
    // InternalSTCoreParser.g:9044:1: rule__Code__StatementsAssignment : ( ruleSTStatement ) ;
    public final void rule__Code__StatementsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9048:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9049:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9049:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9050:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCodeAccess().getStatementsSTStatementParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCodeAccess().getStatementsSTStatementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Code__StatementsAssignment"


    // $ANTLR start "rule__VarDeclaration__NameAssignment_0"
    // InternalSTCoreParser.g:9059:1: rule__VarDeclaration__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__VarDeclaration__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9063:1: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9064:2: ( RULE_ID )
            {
            // InternalSTCoreParser.g:9064:2: ( RULE_ID )
            // InternalSTCoreParser.g:9065:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__NameAssignment_0"


    // $ANTLR start "rule__VarDeclaration__LocatedAtAssignment_1_1"
    // InternalSTCoreParser.g:9074:1: rule__VarDeclaration__LocatedAtAssignment_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__LocatedAtAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9078:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9079:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9079:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9080:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationCrossReference_1_1_0()); 
            }
            // InternalSTCoreParser.g:9081:3: ( RULE_ID )
            // InternalSTCoreParser.g:9082:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationIDTerminalRuleCall_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationIDTerminalRuleCall_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationCrossReference_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__LocatedAtAssignment_1_1"


    // $ANTLR start "rule__VarDeclaration__ArrayAssignment_3_0"
    // InternalSTCoreParser.g:9093:1: rule__VarDeclaration__ArrayAssignment_3_0 : ( ( ARRAY ) ) ;
    public final void rule__VarDeclaration__ArrayAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9097:1: ( ( ( ARRAY ) ) )
            // InternalSTCoreParser.g:9098:2: ( ( ARRAY ) )
            {
            // InternalSTCoreParser.g:9098:2: ( ( ARRAY ) )
            // InternalSTCoreParser.g:9099:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }
            // InternalSTCoreParser.g:9100:3: ( ARRAY )
            // InternalSTCoreParser.g:9101:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__ArrayAssignment_3_0"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_3_1_0_1"
    // InternalSTCoreParser.g:9112:1: rule__VarDeclaration__RangesAssignment_3_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_3_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9116:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9117:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9117:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9118:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_3_1_0_1"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_3_1_0_2_1"
    // InternalSTCoreParser.g:9127:1: rule__VarDeclaration__RangesAssignment_3_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_3_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9131:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9132:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9132:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9133:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_3_1_0_2_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_3_1_1_1"
    // InternalSTCoreParser.g:9142:1: rule__VarDeclaration__CountAssignment_3_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_3_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9146:1: ( ( ( Asterisk ) ) )
            // InternalSTCoreParser.g:9147:2: ( ( Asterisk ) )
            {
            // InternalSTCoreParser.g:9147:2: ( ( Asterisk ) )
            // InternalSTCoreParser.g:9148:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }
            // InternalSTCoreParser.g:9149:3: ( Asterisk )
            // InternalSTCoreParser.g:9150:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_3_1_1_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_3_1_1_2_1"
    // InternalSTCoreParser.g:9161:1: rule__VarDeclaration__CountAssignment_3_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_3_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9165:1: ( ( ( Asterisk ) ) )
            // InternalSTCoreParser.g:9166:2: ( ( Asterisk ) )
            {
            // InternalSTCoreParser.g:9166:2: ( ( Asterisk ) )
            // InternalSTCoreParser.g:9167:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }
            // InternalSTCoreParser.g:9168:3: ( Asterisk )
            // InternalSTCoreParser.g:9169:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_3_1_1_2_1"


    // $ANTLR start "rule__VarDeclaration__TypeAssignment_4"
    // InternalSTCoreParser.g:9180:1: rule__VarDeclaration__TypeAssignment_4 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__TypeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9184:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9185:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9185:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9186:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementCrossReference_4_0()); 
            }
            // InternalSTCoreParser.g:9187:3: ( RULE_ID )
            // InternalSTCoreParser.g:9188:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementIDTerminalRuleCall_4_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementIDTerminalRuleCall_4_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementCrossReference_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__TypeAssignment_4"


    // $ANTLR start "rule__VarDeclaration__MaxLengthAssignment_5_1"
    // InternalSTCoreParser.g:9199:1: rule__VarDeclaration__MaxLengthAssignment_5_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__MaxLengthAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9203:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9204:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9204:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9205:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__MaxLengthAssignment_5_1"


    // $ANTLR start "rule__VarDeclaration__DefaultValueAssignment_6_1"
    // InternalSTCoreParser.g:9214:1: rule__VarDeclaration__DefaultValueAssignment_6_1 : ( ruleInitializerExpression ) ;
    public final void rule__VarDeclaration__DefaultValueAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9218:1: ( ( ruleInitializerExpression ) )
            // InternalSTCoreParser.g:9219:2: ( ruleInitializerExpression )
            {
            // InternalSTCoreParser.g:9219:2: ( ruleInitializerExpression )
            // InternalSTCoreParser.g:9220:3: ruleInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__DefaultValueAssignment_6_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_1"
    // InternalSTCoreParser.g:9229:1: rule__ArrayInitializerExpression__ValuesAssignment_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9233:1: ( ( ruleArrayInitElement ) )
            // InternalSTCoreParser.g:9234:2: ( ruleArrayInitElement )
            {
            // InternalSTCoreParser.g:9234:2: ( ruleArrayInitElement )
            // InternalSTCoreParser.g:9235:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_2_1"
    // InternalSTCoreParser.g:9244:1: rule__ArrayInitializerExpression__ValuesAssignment_2_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9248:1: ( ( ruleArrayInitElement ) )
            // InternalSTCoreParser.g:9249:2: ( ruleArrayInitElement )
            {
            // InternalSTCoreParser.g:9249:2: ( ruleArrayInitElement )
            // InternalSTCoreParser.g:9250:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"
    // InternalSTCoreParser.g:9259:1: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__IndexOrInitExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9263:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9264:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9264:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9265:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"


    // $ANTLR start "rule__ArrayInitElement__InitExpressionAssignment_1_1"
    // InternalSTCoreParser.g:9274:1: rule__ArrayInitElement__InitExpressionAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__InitExpressionAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9278:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9279:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9279:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9280:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__InitExpressionAssignment_1_1"


    // $ANTLR start "rule__STAssignmentStatement__LhsAssignment_0"
    // InternalSTCoreParser.g:9289:1: rule__STAssignmentStatement__LhsAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__STAssignmentStatement__LhsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9293:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9294:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9294:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9295:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationCrossReference_0_0()); 
            }
            // InternalSTCoreParser.g:9296:3: ( RULE_ID )
            // InternalSTCoreParser.g:9297:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__LhsAssignment_0"


    // $ANTLR start "rule__STAssignmentStatement__RhsAssignment_2"
    // InternalSTCoreParser.g:9308:1: rule__STAssignmentStatement__RhsAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STAssignmentStatement__RhsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9312:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9313:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9313:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9314:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRhsSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRhsSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__RhsAssignment_2"


    // $ANTLR start "rule__STIfStatment__ConditionAssignment_1"
    // InternalSTCoreParser.g:9323:1: rule__STIfStatment__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STIfStatment__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9327:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9328:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9328:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9329:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ConditionAssignment_1"


    // $ANTLR start "rule__STIfStatment__StatementsAssignment_3"
    // InternalSTCoreParser.g:9338:1: rule__STIfStatment__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STIfStatment__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9342:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9343:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9343:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9344:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__StatementsAssignment_3"


    // $ANTLR start "rule__STIfStatment__ElseifsAssignment_4"
    // InternalSTCoreParser.g:9353:1: rule__STIfStatment__ElseifsAssignment_4 : ( ruleSTElseIfPart ) ;
    public final void rule__STIfStatment__ElseifsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9357:1: ( ( ruleSTElseIfPart ) )
            // InternalSTCoreParser.g:9358:2: ( ruleSTElseIfPart )
            {
            // InternalSTCoreParser.g:9358:2: ( ruleSTElseIfPart )
            // InternalSTCoreParser.g:9359:3: ruleSTElseIfPart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ElseifsAssignment_4"


    // $ANTLR start "rule__STIfStatment__ElseAssignment_5"
    // InternalSTCoreParser.g:9368:1: rule__STIfStatment__ElseAssignment_5 : ( ruleSTElsePart ) ;
    public final void rule__STIfStatment__ElseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9372:1: ( ( ruleSTElsePart ) )
            // InternalSTCoreParser.g:9373:2: ( ruleSTElsePart )
            {
            // InternalSTCoreParser.g:9373:2: ( ruleSTElsePart )
            // InternalSTCoreParser.g:9374:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ElseAssignment_5"


    // $ANTLR start "rule__STElseIfPart__ConditionAssignment_1"
    // InternalSTCoreParser.g:9383:1: rule__STElseIfPart__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STElseIfPart__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9387:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9388:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9388:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9389:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__ConditionAssignment_1"


    // $ANTLR start "rule__STElseIfPart__StatementsAssignment_3"
    // InternalSTCoreParser.g:9398:1: rule__STElseIfPart__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STElseIfPart__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9402:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9403:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9403:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9404:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__StatementsAssignment_3"


    // $ANTLR start "rule__STCaseStatement__SelectorAssignment_1"
    // InternalSTCoreParser.g:9413:1: rule__STCaseStatement__SelectorAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseStatement__SelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9417:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9418:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9418:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9419:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__SelectorAssignment_1"


    // $ANTLR start "rule__STCaseStatement__CasesAssignment_3"
    // InternalSTCoreParser.g:9428:1: rule__STCaseStatement__CasesAssignment_3 : ( ruleSTCaseCases ) ;
    public final void rule__STCaseStatement__CasesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9432:1: ( ( ruleSTCaseCases ) )
            // InternalSTCoreParser.g:9433:2: ( ruleSTCaseCases )
            {
            // InternalSTCoreParser.g:9433:2: ( ruleSTCaseCases )
            // InternalSTCoreParser.g:9434:3: ruleSTCaseCases
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__CasesAssignment_3"


    // $ANTLR start "rule__STCaseStatement__ElseAssignment_4"
    // InternalSTCoreParser.g:9443:1: rule__STCaseStatement__ElseAssignment_4 : ( ruleSTElsePart ) ;
    public final void rule__STCaseStatement__ElseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9447:1: ( ( ruleSTElsePart ) )
            // InternalSTCoreParser.g:9448:2: ( ruleSTElsePart )
            {
            // InternalSTCoreParser.g:9448:2: ( ruleSTElsePart )
            // InternalSTCoreParser.g:9449:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__ElseAssignment_4"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_0"
    // InternalSTCoreParser.g:9458:1: rule__STCaseCases__ConditionsAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9462:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9463:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9463:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9464:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_0"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_1_1"
    // InternalSTCoreParser.g:9473:1: rule__STCaseCases__ConditionsAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9477:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9478:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9478:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9479:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_1_1"


    // $ANTLR start "rule__STCaseCases__StatementsAssignment_3"
    // InternalSTCoreParser.g:9488:1: rule__STCaseCases__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STCaseCases__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9492:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9493:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9493:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9494:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__StatementsAssignment_3"


    // $ANTLR start "rule__STElsePart__StatementsAssignment_2"
    // InternalSTCoreParser.g:9503:1: rule__STElsePart__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STElsePart__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9507:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9508:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9508:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9509:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__StatementsAssignment_2"


    // $ANTLR start "rule__STForStatement__ForAssignment_1"
    // InternalSTCoreParser.g:9518:1: rule__STForStatement__ForAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ForAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9522:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9523:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9523:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9524:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getForSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getForSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ForAssignment_1"


    // $ANTLR start "rule__STForStatement__ToAssignment_3"
    // InternalSTCoreParser.g:9533:1: rule__STForStatement__ToAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ToAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9537:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9538:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9538:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9539:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ToAssignment_3"


    // $ANTLR start "rule__STForStatement__ByAssignment_4_1"
    // InternalSTCoreParser.g:9548:1: rule__STForStatement__ByAssignment_4_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ByAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9552:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9553:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9553:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9554:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ByAssignment_4_1"


    // $ANTLR start "rule__STForStatement__StatementsAssignment_6"
    // InternalSTCoreParser.g:9563:1: rule__STForStatement__StatementsAssignment_6 : ( ruleSTStatement ) ;
    public final void rule__STForStatement__StatementsAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9567:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9568:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9568:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9569:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__StatementsAssignment_6"


    // $ANTLR start "rule__STWhileStatement__ConditionAssignment_1"
    // InternalSTCoreParser.g:9578:1: rule__STWhileStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STWhileStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9582:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9583:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9583:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9584:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STWhileStatement__StatementsAssignment_3"
    // InternalSTCoreParser.g:9593:1: rule__STWhileStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STWhileStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9597:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9598:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9598:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9599:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STRepeatStatement__StatementsAssignment_1"
    // InternalSTCoreParser.g:9608:1: rule__STRepeatStatement__StatementsAssignment_1 : ( ruleSTStatement ) ;
    public final void rule__STRepeatStatement__StatementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9612:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9613:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9613:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9614:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__StatementsAssignment_1"


    // $ANTLR start "rule__STRepeatStatement__ConditionAssignment_3"
    // InternalSTCoreParser.g:9623:1: rule__STRepeatStatement__ConditionAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STRepeatStatement__ConditionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9627:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9628:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9628:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9629:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__ConditionAssignment_3"


    // $ANTLR start "rule__STSubrangeExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9638:1: rule__STSubrangeExpression__OpAssignment_1_0_1 : ( ruleSubrangeOperator ) ;
    public final void rule__STSubrangeExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9642:1: ( ( ruleSubrangeOperator ) )
            // InternalSTCoreParser.g:9643:2: ( ruleSubrangeOperator )
            {
            // InternalSTCoreParser.g:9643:2: ( ruleSubrangeOperator )
            // InternalSTCoreParser.g:9644:3: ruleSubrangeOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubrangeOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STSubrangeExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9653:1: rule__STSubrangeExpression__RightAssignment_1_1 : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9657:1: ( ( ruleSTOrExpression ) )
            // InternalSTCoreParser.g:9658:2: ( ruleSTOrExpression )
            {
            // InternalSTCoreParser.g:9658:2: ( ruleSTOrExpression )
            // InternalSTCoreParser.g:9659:3: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STOrExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9668:1: rule__STOrExpression__OpAssignment_1_0_1 : ( ruleOrOperator ) ;
    public final void rule__STOrExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9672:1: ( ( ruleOrOperator ) )
            // InternalSTCoreParser.g:9673:2: ( ruleOrOperator )
            {
            // InternalSTCoreParser.g:9673:2: ( ruleOrOperator )
            // InternalSTCoreParser.g:9674:3: ruleOrOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STOrExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9683:1: rule__STOrExpression__RightAssignment_1_1 : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9687:1: ( ( ruleSTXorExpression ) )
            // InternalSTCoreParser.g:9688:2: ( ruleSTXorExpression )
            {
            // InternalSTCoreParser.g:9688:2: ( ruleSTXorExpression )
            // InternalSTCoreParser.g:9689:3: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STXorExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9698:1: rule__STXorExpression__OpAssignment_1_0_1 : ( ruleXorOperator ) ;
    public final void rule__STXorExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9702:1: ( ( ruleXorOperator ) )
            // InternalSTCoreParser.g:9703:2: ( ruleXorOperator )
            {
            // InternalSTCoreParser.g:9703:2: ( ruleXorOperator )
            // InternalSTCoreParser.g:9704:3: ruleXorOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXorOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STXorExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9713:1: rule__STXorExpression__RightAssignment_1_1 : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9717:1: ( ( ruleSTAndExpression ) )
            // InternalSTCoreParser.g:9718:2: ( ruleSTAndExpression )
            {
            // InternalSTCoreParser.g:9718:2: ( ruleSTAndExpression )
            // InternalSTCoreParser.g:9719:3: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAndExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9728:1: rule__STAndExpression__OpAssignment_1_0_1 : ( ruleAndOperator ) ;
    public final void rule__STAndExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9732:1: ( ( ruleAndOperator ) )
            // InternalSTCoreParser.g:9733:2: ( ruleAndOperator )
            {
            // InternalSTCoreParser.g:9733:2: ( ruleAndOperator )
            // InternalSTCoreParser.g:9734:3: ruleAndOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAndOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAndExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9743:1: rule__STAndExpression__RightAssignment_1_1 : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9747:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTCoreParser.g:9748:2: ( ruleSTEqualityExpression )
            {
            // InternalSTCoreParser.g:9748:2: ( ruleSTEqualityExpression )
            // InternalSTCoreParser.g:9749:3: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STEqualityExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9758:1: rule__STEqualityExpression__OpAssignment_1_0_1 : ( ruleEqualityOperator ) ;
    public final void rule__STEqualityExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9762:1: ( ( ruleEqualityOperator ) )
            // InternalSTCoreParser.g:9763:2: ( ruleEqualityOperator )
            {
            // InternalSTCoreParser.g:9763:2: ( ruleEqualityOperator )
            // InternalSTCoreParser.g:9764:3: ruleEqualityOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STEqualityExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9773:1: rule__STEqualityExpression__RightAssignment_1_1 : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9777:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTCoreParser.g:9778:2: ( ruleSTComparisonExpression )
            {
            // InternalSTCoreParser.g:9778:2: ( ruleSTComparisonExpression )
            // InternalSTCoreParser.g:9779:3: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STComparisonExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9788:1: rule__STComparisonExpression__OpAssignment_1_0_1 : ( ruleCompareOperator ) ;
    public final void rule__STComparisonExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9792:1: ( ( ruleCompareOperator ) )
            // InternalSTCoreParser.g:9793:2: ( ruleCompareOperator )
            {
            // InternalSTCoreParser.g:9793:2: ( ruleCompareOperator )
            // InternalSTCoreParser.g:9794:3: ruleCompareOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STComparisonExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9803:1: rule__STComparisonExpression__RightAssignment_1_1 : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9807:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTCoreParser.g:9808:2: ( ruleSTAddSubExpression )
            {
            // InternalSTCoreParser.g:9808:2: ( ruleSTAddSubExpression )
            // InternalSTCoreParser.g:9809:3: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAddSubExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9818:1: rule__STAddSubExpression__OpAssignment_1_0_1 : ( ruleAddSubOperator ) ;
    public final void rule__STAddSubExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9822:1: ( ( ruleAddSubOperator ) )
            // InternalSTCoreParser.g:9823:2: ( ruleAddSubOperator )
            {
            // InternalSTCoreParser.g:9823:2: ( ruleAddSubOperator )
            // InternalSTCoreParser.g:9824:3: ruleAddSubOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAddSubOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAddSubExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9833:1: rule__STAddSubExpression__RightAssignment_1_1 : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9837:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTCoreParser.g:9838:2: ( ruleSTMulDivModExpression )
            {
            // InternalSTCoreParser.g:9838:2: ( ruleSTMulDivModExpression )
            // InternalSTCoreParser.g:9839:3: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STMulDivModExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9848:1: rule__STMulDivModExpression__OpAssignment_1_0_1 : ( ruleMulDivModOperator ) ;
    public final void rule__STMulDivModExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9852:1: ( ( ruleMulDivModOperator ) )
            // InternalSTCoreParser.g:9853:2: ( ruleMulDivModOperator )
            {
            // InternalSTCoreParser.g:9853:2: ( ruleMulDivModOperator )
            // InternalSTCoreParser.g:9854:3: ruleMulDivModOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulDivModOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STMulDivModExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9863:1: rule__STMulDivModExpression__RightAssignment_1_1 : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9867:1: ( ( ruleSTPowerExpression ) )
            // InternalSTCoreParser.g:9868:2: ( ruleSTPowerExpression )
            {
            // InternalSTCoreParser.g:9868:2: ( ruleSTPowerExpression )
            // InternalSTCoreParser.g:9869:3: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STPowerExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9878:1: rule__STPowerExpression__OpAssignment_1_0_1 : ( rulePowerOperator ) ;
    public final void rule__STPowerExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9882:1: ( ( rulePowerOperator ) )
            // InternalSTCoreParser.g:9883:2: ( rulePowerOperator )
            {
            // InternalSTCoreParser.g:9883:2: ( rulePowerOperator )
            // InternalSTCoreParser.g:9884:3: rulePowerOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePowerOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STPowerExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9893:1: rule__STPowerExpression__RightAssignment_1_1 : ( ruleSTSignumExpression ) ;
    public final void rule__STPowerExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9897:1: ( ( ruleSTSignumExpression ) )
            // InternalSTCoreParser.g:9898:2: ( ruleSTSignumExpression )
            {
            // InternalSTCoreParser.g:9898:2: ( ruleSTSignumExpression )
            // InternalSTCoreParser.g:9899:3: ruleSTSignumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightSTSignumExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightSTSignumExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STSignumExpression__OpAssignment_2_1"
    // InternalSTCoreParser.g:9908:1: rule__STSignumExpression__OpAssignment_2_1 : ( ruleUnaryOperator ) ;
    public final void rule__STSignumExpression__OpAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9912:1: ( ( ruleUnaryOperator ) )
            // InternalSTCoreParser.g:9913:2: ( ruleUnaryOperator )
            {
            // InternalSTCoreParser.g:9913:2: ( ruleUnaryOperator )
            // InternalSTCoreParser.g:9914:3: ruleUnaryOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getOpUnaryOperatorEnumRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getOpUnaryOperatorEnumRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__OpAssignment_2_1"


    // $ANTLR start "rule__STSignumExpression__ExpressionAssignment_2_2"
    // InternalSTCoreParser.g:9923:1: rule__STSignumExpression__ExpressionAssignment_2_2 : ( ruleSTSelectionExpression ) ;
    public final void rule__STSignumExpression__ExpressionAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9927:1: ( ( ruleSTSelectionExpression ) )
            // InternalSTCoreParser.g:9928:2: ( ruleSTSelectionExpression )
            {
            // InternalSTCoreParser.g:9928:2: ( ruleSTSelectionExpression )
            // InternalSTCoreParser.g:9929:3: ruleSTSelectionExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getExpressionSTSelectionExpressionParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSelectionExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getExpressionSTSelectionExpressionParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__ExpressionAssignment_2_2"


    // $ANTLR start "rule__STSelectionExpression__StructAccessAssignment_1_1_0_0"
    // InternalSTCoreParser.g:9938:1: rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 : ( ( FullStop ) ) ;
    public final void rule__STSelectionExpression__StructAccessAssignment_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9942:1: ( ( ( FullStop ) ) )
            // InternalSTCoreParser.g:9943:2: ( ( FullStop ) )
            {
            // InternalSTCoreParser.g:9943:2: ( ( FullStop ) )
            // InternalSTCoreParser.g:9944:3: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }
            // InternalSTCoreParser.g:9945:3: ( FullStop )
            // InternalSTCoreParser.g:9946:4: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__StructAccessAssignment_1_1_0_0"


    // $ANTLR start "rule__STSelectionExpression__MemberAssignment_1_1_0_1"
    // InternalSTCoreParser.g:9957:1: rule__STSelectionExpression__MemberAssignment_1_1_0_1 : ( ( RULE_ID ) ) ;
    public final void rule__STSelectionExpression__MemberAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9961:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9962:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9962:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9963:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationCrossReference_1_1_0_1_0()); 
            }
            // InternalSTCoreParser.g:9964:3: ( RULE_ID )
            // InternalSTCoreParser.g:9965:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationIDTerminalRuleCall_1_1_0_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationIDTerminalRuleCall_1_1_0_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationCrossReference_1_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__MemberAssignment_1_1_0_1"


    // $ANTLR start "rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0"
    // InternalSTCoreParser.g:9976:1: rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 : ( ( LeftSquareBracket ) ) ;
    public final void rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9980:1: ( ( ( LeftSquareBracket ) ) )
            // InternalSTCoreParser.g:9981:2: ( ( LeftSquareBracket ) )
            {
            // InternalSTCoreParser.g:9981:2: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:9982:3: ( LeftSquareBracket )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }
            // InternalSTCoreParser.g:9983:3: ( LeftSquareBracket )
            // InternalSTCoreParser.g:9984:4: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0"


    // $ANTLR start "rule__STSelectionExpression__IndexAssignment_1_1_1_1"
    // InternalSTCoreParser.g:9995:1: rule__STSelectionExpression__IndexAssignment_1_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__IndexAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9999:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:10000:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:10000:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:10001:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__IndexAssignment_1_1_1_1"


    // $ANTLR start "rule__STSelectionExpression__IndexAssignment_1_1_1_2_1"
    // InternalSTCoreParser.g:10010:1: rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__IndexAssignment_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10014:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:10015:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:10015:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:10016:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__IndexAssignment_1_1_1_2_1"


    // $ANTLR start "rule__STSelectionExpression__PoeInvocationAssignment_1_2_0"
    // InternalSTCoreParser.g:10025:1: rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STSelectionExpression__PoeInvocationAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10029:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTCoreParser.g:10030:2: ( ( LeftParenthesis ) )
            {
            // InternalSTCoreParser.g:10030:2: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:10031:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }
            // InternalSTCoreParser.g:10032:3: ( LeftParenthesis )
            // InternalSTCoreParser.g:10033:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__PoeInvocationAssignment_1_2_0"


    // $ANTLR start "rule__STSelectionExpression__ParametersAssignment_1_2_1_0"
    // InternalSTCoreParser.g:10044:1: rule__STSelectionExpression__ParametersAssignment_1_2_1_0 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__ParametersAssignment_1_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10048:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:10049:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:10049:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:10050:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ParametersAssignment_1_2_1_0"


    // $ANTLR start "rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1"
    // InternalSTCoreParser.g:10059:1: rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10063:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:10064:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:10064:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:10065:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1"


    // $ANTLR start "rule__STSelectionExpression__BitaccessorAssignment_1_3"
    // InternalSTCoreParser.g:10074:1: rule__STSelectionExpression__BitaccessorAssignment_1_3 : ( ruleMultibitPartialAccess ) ;
    public final void rule__STSelectionExpression__BitaccessorAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10078:1: ( ( ruleMultibitPartialAccess ) )
            // InternalSTCoreParser.g:10079:2: ( ruleMultibitPartialAccess )
            {
            // InternalSTCoreParser.g:10079:2: ( ruleMultibitPartialAccess )
            // InternalSTCoreParser.g:10080:3: ruleMultibitPartialAccess
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__BitaccessorAssignment_1_3"


    // $ANTLR start "rule__MultibitPartialAccess__AccessSpecifierAssignment_0"
    // InternalSTCoreParser.g:10089:1: rule__MultibitPartialAccess__AccessSpecifierAssignment_0 : ( ruleMultiBitAccessSpecifier ) ;
    public final void rule__MultibitPartialAccess__AccessSpecifierAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10093:1: ( ( ruleMultiBitAccessSpecifier ) )
            // InternalSTCoreParser.g:10094:2: ( ruleMultiBitAccessSpecifier )
            {
            // InternalSTCoreParser.g:10094:2: ( ruleMultiBitAccessSpecifier )
            // InternalSTCoreParser.g:10095:3: ruleMultiBitAccessSpecifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierMultiBitAccessSpecifierEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultiBitAccessSpecifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierMultiBitAccessSpecifierEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__AccessSpecifierAssignment_0"


    // $ANTLR start "rule__MultibitPartialAccess__IndexAssignment_1"
    // InternalSTCoreParser.g:10104:1: rule__MultibitPartialAccess__IndexAssignment_1 : ( RULE_INT ) ;
    public final void rule__MultibitPartialAccess__IndexAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10108:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:10109:2: ( RULE_INT )
            {
            // InternalSTCoreParser.g:10109:2: ( RULE_INT )
            // InternalSTCoreParser.g:10110:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getIndexINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getIndexINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__IndexAssignment_1"


    // $ANTLR start "rule__STAtomicExpression__TypeAssignment_1_1_0"
    // InternalSTCoreParser.g:10119:1: rule__STAtomicExpression__TypeAssignment_1_1_0 : ( ( RULE_ID ) ) ;
    public final void rule__STAtomicExpression__TypeAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10123:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:10124:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:10124:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:10125:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeCrossReference_1_1_0_0()); 
            }
            // InternalSTCoreParser.g:10126:3: ( RULE_ID )
            // InternalSTCoreParser.g:10127:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeIDTerminalRuleCall_1_1_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeIDTerminalRuleCall_1_1_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeCrossReference_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__TypeAssignment_1_1_0"


    // $ANTLR start "rule__STAtomicExpression__SymbolAssignment_1_2"
    // InternalSTCoreParser.g:10138:1: rule__STAtomicExpression__SymbolAssignment_1_2 : ( ( RULE_ID ) ) ;
    public final void rule__STAtomicExpression__SymbolAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10142:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:10143:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:10143:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:10144:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationCrossReference_1_2_0()); 
            }
            // InternalSTCoreParser.g:10145:3: ( RULE_ID )
            // InternalSTCoreParser.g:10146:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationIDTerminalRuleCall_1_2_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationIDTerminalRuleCall_1_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationCrossReference_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__SymbolAssignment_1_2"


    // $ANTLR start "rule__STAtomicExpression__BitaccessorAssignment_1_3"
    // InternalSTCoreParser.g:10157:1: rule__STAtomicExpression__BitaccessorAssignment_1_3 : ( ruleMultibitPartialAccess ) ;
    public final void rule__STAtomicExpression__BitaccessorAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10161:1: ( ( ruleMultibitPartialAccess ) )
            // InternalSTCoreParser.g:10162:2: ( ruleMultibitPartialAccess )
            {
            // InternalSTCoreParser.g:10162:2: ( ruleMultibitPartialAccess )
            // InternalSTCoreParser.g:10163:3: ruleMultibitPartialAccess
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__BitaccessorAssignment_1_3"


    // $ANTLR start "rule__STAtomicExpression__PoeInvocationAssignment_1_4_0"
    // InternalSTCoreParser.g:10172:1: rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STAtomicExpression__PoeInvocationAssignment_1_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10176:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTCoreParser.g:10177:2: ( ( LeftParenthesis ) )
            {
            // InternalSTCoreParser.g:10177:2: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:10178:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }
            // InternalSTCoreParser.g:10179:3: ( LeftParenthesis )
            // InternalSTCoreParser.g:10180:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__PoeInvocationAssignment_1_4_0"


    // $ANTLR start "rule__STAtomicExpression__ParametersAssignment_1_4_1_0"
    // InternalSTCoreParser.g:10191:1: rule__STAtomicExpression__ParametersAssignment_1_4_1_0 : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__ParametersAssignment_1_4_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10195:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:10196:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:10196:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:10197:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__ParametersAssignment_1_4_1_0"


    // $ANTLR start "rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1"
    // InternalSTCoreParser.g:10206:1: rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10210:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:10211:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:10211:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:10212:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1"


    // $ANTLR start "rule__STLiteralExpressions__BoolLiteralAssignment_0_1"
    // InternalSTCoreParser.g:10221:1: rule__STLiteralExpressions__BoolLiteralAssignment_0_1 : ( ruleBOOL_LITERAL ) ;
    public final void rule__STLiteralExpressions__BoolLiteralAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10225:1: ( ( ruleBOOL_LITERAL ) )
            // InternalSTCoreParser.g:10226:2: ( ruleBOOL_LITERAL )
            {
            // InternalSTCoreParser.g:10226:2: ( ruleBOOL_LITERAL )
            // InternalSTCoreParser.g:10227:3: ruleBOOL_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralBOOL_LITERALParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBOOL_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralBOOL_LITERALParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__BoolLiteralAssignment_0_1"


    // $ANTLR start "rule__STLiteralExpressions__NumericLiteralAssignment_1_1"
    // InternalSTCoreParser.g:10236:1: rule__STLiteralExpressions__NumericLiteralAssignment_1_1 : ( ruleNUMERIC_LITERAL ) ;
    public final void rule__STLiteralExpressions__NumericLiteralAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10240:1: ( ( ruleNUMERIC_LITERAL ) )
            // InternalSTCoreParser.g:10241:2: ( ruleNUMERIC_LITERAL )
            {
            // InternalSTCoreParser.g:10241:2: ( ruleNUMERIC_LITERAL )
            // InternalSTCoreParser.g:10242:3: ruleNUMERIC_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralNUMERIC_LITERALParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNUMERIC_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralNUMERIC_LITERALParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__NumericLiteralAssignment_1_1"


    // $ANTLR start "rule__STLiteralExpressions__DateLiteralAssignment_2_1"
    // InternalSTCoreParser.g:10251:1: rule__STLiteralExpressions__DateLiteralAssignment_2_1 : ( ruleDATE_LITERAL ) ;
    public final void rule__STLiteralExpressions__DateLiteralAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10255:1: ( ( ruleDATE_LITERAL ) )
            // InternalSTCoreParser.g:10256:2: ( ruleDATE_LITERAL )
            {
            // InternalSTCoreParser.g:10256:2: ( ruleDATE_LITERAL )
            // InternalSTCoreParser.g:10257:3: ruleDATE_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralDATE_LITERALParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralDATE_LITERALParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__DateLiteralAssignment_2_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeLiteralAssignment_3_1"
    // InternalSTCoreParser.g:10266:1: rule__STLiteralExpressions__TimeLiteralAssignment_3_1 : ( ruleTIME_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeLiteralAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10270:1: ( ( ruleTIME_LITERAL ) )
            // InternalSTCoreParser.g:10271:2: ( ruleTIME_LITERAL )
            {
            // InternalSTCoreParser.g:10271:2: ( ruleTIME_LITERAL )
            // InternalSTCoreParser.g:10272:3: ruleTIME_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralTIME_LITERALParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralTIME_LITERALParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeLiteralAssignment_3_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1"
    // InternalSTCoreParser.g:10281:1: rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 : ( ruleTIME_OF_DAY_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10285:1: ( ( ruleTIME_OF_DAY_LITERAL ) )
            // InternalSTCoreParser.g:10286:2: ( ruleTIME_OF_DAY_LITERAL )
            {
            // InternalSTCoreParser.g:10286:2: ( ruleTIME_OF_DAY_LITERAL )
            // InternalSTCoreParser.g:10287:3: ruleTIME_OF_DAY_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralTIME_OF_DAY_LITERALParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralTIME_OF_DAY_LITERALParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeLiteralAssignment_5_1"
    // InternalSTCoreParser.g:10296:1: rule__STLiteralExpressions__TimeLiteralAssignment_5_1 : ( ruleDATE_AND_TIME_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeLiteralAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10300:1: ( ( ruleDATE_AND_TIME_LITERAL ) )
            // InternalSTCoreParser.g:10301:2: ( ruleDATE_AND_TIME_LITERAL )
            {
            // InternalSTCoreParser.g:10301:2: ( ruleDATE_AND_TIME_LITERAL )
            // InternalSTCoreParser.g:10302:3: ruleDATE_AND_TIME_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralDATE_AND_TIME_LITERALParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE_AND_TIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralDATE_AND_TIME_LITERALParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeLiteralAssignment_5_1"


    // $ANTLR start "rule__STLiteralExpressions__StringLiteralAssignment_6_1"
    // InternalSTCoreParser.g:10311:1: rule__STLiteralExpressions__StringLiteralAssignment_6_1 : ( ruleSTRING_LITERAL ) ;
    public final void rule__STLiteralExpressions__StringLiteralAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10315:1: ( ( ruleSTRING_LITERAL ) )
            // InternalSTCoreParser.g:10316:2: ( ruleSTRING_LITERAL )
            {
            // InternalSTCoreParser.g:10316:2: ( ruleSTRING_LITERAL )
            // InternalSTCoreParser.g:10317:3: ruleSTRING_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralSTRING_LITERALParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralSTRING_LITERALParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__StringLiteralAssignment_6_1"


    // $ANTLR start "rule__BOOL_LITERAL__NotAssignment_0"
    // InternalSTCoreParser.g:10326:1: rule__BOOL_LITERAL__NotAssignment_0 : ( ( NOT ) ) ;
    public final void rule__BOOL_LITERAL__NotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10330:1: ( ( ( NOT ) ) )
            // InternalSTCoreParser.g:10331:2: ( ( NOT ) )
            {
            // InternalSTCoreParser.g:10331:2: ( ( NOT ) )
            // InternalSTCoreParser.g:10332:3: ( NOT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            // InternalSTCoreParser.g:10333:3: ( NOT )
            // InternalSTCoreParser.g:10334:4: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__NotAssignment_0"


    // $ANTLR start "rule__BOOL_LITERAL__KeyWordValueAssignment_2"
    // InternalSTCoreParser.g:10345:1: rule__BOOL_LITERAL__KeyWordValueAssignment_2 : ( RULE_BOOL_VALUES ) ;
    public final void rule__BOOL_LITERAL__KeyWordValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10349:1: ( ( RULE_BOOL_VALUES ) )
            // InternalSTCoreParser.g:10350:2: ( RULE_BOOL_VALUES )
            {
            // InternalSTCoreParser.g:10350:2: ( RULE_BOOL_VALUES )
            // InternalSTCoreParser.g:10351:3: RULE_BOOL_VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getKeyWordValueBOOL_VALUESTerminalRuleCall_2_0()); 
            }
            match(input,RULE_BOOL_VALUES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getKeyWordValueBOOL_VALUESTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__KeyWordValueAssignment_2"


    // $ANTLR start "rule__NUMERIC_LITERAL__NotAssignment_0"
    // InternalSTCoreParser.g:10360:1: rule__NUMERIC_LITERAL__NotAssignment_0 : ( ( NOT ) ) ;
    public final void rule__NUMERIC_LITERAL__NotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10364:1: ( ( ( NOT ) ) )
            // InternalSTCoreParser.g:10365:2: ( ( NOT ) )
            {
            // InternalSTCoreParser.g:10365:2: ( ( NOT ) )
            // InternalSTCoreParser.g:10366:3: ( NOT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            // InternalSTCoreParser.g:10367:3: ( NOT )
            // InternalSTCoreParser.g:10368:4: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__NotAssignment_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__KeywordAssignment_1"
    // InternalSTCoreParser.g:10379:1: rule__NUMERIC_LITERAL__KeywordAssignment_1 : ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) ) ;
    public final void rule__NUMERIC_LITERAL__KeywordAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10383:1: ( ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) ) )
            // InternalSTCoreParser.g:10384:2: ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) )
            {
            // InternalSTCoreParser.g:10384:2: ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) )
            // InternalSTCoreParser.g:10385:3: ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAlternatives_1_0()); 
            }
            // InternalSTCoreParser.g:10386:3: ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 )
            // InternalSTCoreParser.g:10386:4: rule__NUMERIC_LITERAL__KeywordAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__KeywordAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__KeywordAssignment_1"


    // $ANTLR start "rule__NUMERIC_LITERAL__IntValueAssignment_2_0"
    // InternalSTCoreParser.g:10394:1: rule__NUMERIC_LITERAL__IntValueAssignment_2_0 : ( ruleINTEGER ) ;
    public final void rule__NUMERIC_LITERAL__IntValueAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10398:1: ( ( ruleINTEGER ) )
            // InternalSTCoreParser.g:10399:2: ( ruleINTEGER )
            {
            // InternalSTCoreParser.g:10399:2: ( ruleINTEGER )
            // InternalSTCoreParser.g:10400:3: ruleINTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getIntValueINTEGERParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getIntValueINTEGERParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__IntValueAssignment_2_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__RealValueAssignment_2_1"
    // InternalSTCoreParser.g:10409:1: rule__NUMERIC_LITERAL__RealValueAssignment_2_1 : ( ruleREAL ) ;
    public final void rule__NUMERIC_LITERAL__RealValueAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10413:1: ( ( ruleREAL ) )
            // InternalSTCoreParser.g:10414:2: ( ruleREAL )
            {
            // InternalSTCoreParser.g:10414:2: ( ruleREAL )
            // InternalSTCoreParser.g:10415:3: ruleREAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getRealValueREALParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleREAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getRealValueREALParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__RealValueAssignment_2_1"


    // $ANTLR start "rule__NUMERIC_LITERAL__HexValueAssignment_2_2"
    // InternalSTCoreParser.g:10424:1: rule__NUMERIC_LITERAL__HexValueAssignment_2_2 : ( RULE_NON_DECIMAL ) ;
    public final void rule__NUMERIC_LITERAL__HexValueAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10428:1: ( ( RULE_NON_DECIMAL ) )
            // InternalSTCoreParser.g:10429:2: ( RULE_NON_DECIMAL )
            {
            // InternalSTCoreParser.g:10429:2: ( RULE_NON_DECIMAL )
            // InternalSTCoreParser.g:10430:3: RULE_NON_DECIMAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getHexValueNON_DECIMALTerminalRuleCall_2_2_0()); 
            }
            match(input,RULE_NON_DECIMAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getHexValueNON_DECIMALTerminalRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__HexValueAssignment_2_2"


    // $ANTLR start "rule__DATE_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10439:1: rule__DATE_LITERAL__KeywordAssignment_0 : ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__DATE_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10443:1: ( ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10444:2: ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10444:2: ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10445:3: ( rule__DATE_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10446:3: ( rule__DATE_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10446:4: rule__DATE_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__DATE_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10454:1: rule__DATE_LITERAL__ValueAssignment_1 : ( ruleDATE ) ;
    public final void rule__DATE_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10458:1: ( ( ruleDATE ) )
            // InternalSTCoreParser.g:10459:2: ( ruleDATE )
            {
            // InternalSTCoreParser.g:10459:2: ( ruleDATE )
            // InternalSTCoreParser.g:10460:3: ruleDATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getValueDATEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getValueDATEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__TIME_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10469:1: rule__TIME_LITERAL__KeywordAssignment_0 : ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__TIME_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10473:1: ( ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10474:2: ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10474:2: ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10475:3: ( rule__TIME_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10476:3: ( rule__TIME_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10476:4: rule__TIME_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__TIME_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10484:1: rule__TIME_LITERAL__ValueAssignment_1 : ( RULE_TIME ) ;
    public final void rule__TIME_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10488:1: ( ( RULE_TIME ) )
            // InternalSTCoreParser.g:10489:2: ( RULE_TIME )
            {
            // InternalSTCoreParser.g:10489:2: ( RULE_TIME )
            // InternalSTCoreParser.g:10490:3: RULE_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getValueTIMETerminalRuleCall_1_0()); 
            }
            match(input,RULE_TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getValueTIMETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10499:1: rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 : ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10503:1: ( ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10504:2: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10504:2: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10505:3: ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10506:3: ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10506:4: rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10514:1: rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 : ( ruleTIME_OF_DAY ) ;
    public final void rule__TIME_OF_DAY_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10518:1: ( ( ruleTIME_OF_DAY ) )
            // InternalSTCoreParser.g:10519:2: ( ruleTIME_OF_DAY )
            {
            // InternalSTCoreParser.g:10519:2: ( ruleTIME_OF_DAY )
            // InternalSTCoreParser.g:10520:3: ruleTIME_OF_DAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueTIME_OF_DAYParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueTIME_OF_DAYParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10529:1: rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 : ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10533:1: ( ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10534:2: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10534:2: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10535:3: ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10536:3: ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10536:4: rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1"
    // InternalSTCoreParser.g:10544:1: rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 : ( ruleDATE ) ;
    public final void rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10548:1: ( ( ruleDATE ) )
            // InternalSTCoreParser.g:10549:2: ( ruleDATE )
            {
            // InternalSTCoreParser.g:10549:2: ( ruleDATE )
            // InternalSTCoreParser.g:10550:3: ruleDATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueDATEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueDATEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3"
    // InternalSTCoreParser.g:10559:1: rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 : ( ruleTIME_OF_DAY ) ;
    public final void rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10563:1: ( ( ruleTIME_OF_DAY ) )
            // InternalSTCoreParser.g:10564:2: ( ruleTIME_OF_DAY )
            {
            // InternalSTCoreParser.g:10564:2: ( ruleTIME_OF_DAY )
            // InternalSTCoreParser.g:10565:3: ruleTIME_OF_DAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueTIME_OF_DAYParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueTIME_OF_DAYParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3"


    // $ANTLR start "rule__STRING_LITERAL__KeywordAssignment_0_0"
    // InternalSTCoreParser.g:10574:1: rule__STRING_LITERAL__KeywordAssignment_0_0 : ( ( STRING ) ) ;
    public final void rule__STRING_LITERAL__KeywordAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10578:1: ( ( ( STRING ) ) )
            // InternalSTCoreParser.g:10579:2: ( ( STRING ) )
            {
            // InternalSTCoreParser.g:10579:2: ( ( STRING ) )
            // InternalSTCoreParser.g:10580:3: ( STRING )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }
            // InternalSTCoreParser.g:10581:3: ( STRING )
            // InternalSTCoreParser.g:10582:4: STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }
            match(input,STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__KeywordAssignment_0_0"


    // $ANTLR start "rule__STRING_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10593:1: rule__STRING_LITERAL__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__STRING_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10597:1: ( ( RULE_STRING ) )
            // InternalSTCoreParser.g:10598:2: ( RULE_STRING )
            {
            // InternalSTCoreParser.g:10598:2: ( RULE_STRING )
            // InternalSTCoreParser.g:10599:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__ValueAssignment_1"

    // $ANTLR start synpred100_InternalSTCoreParser
    public final void synpred100_InternalSTCoreParser_fragment() throws RecognitionException {   
        // InternalSTCoreParser.g:6741:3: ( rule__STSelectionExpression__Group_1_2__0 )
        // InternalSTCoreParser.g:6741:3: rule__STSelectionExpression__Group_1_2__0
        {
        pushFollow(FOLLOW_2);
        rule__STSelectionExpression__Group_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred100_InternalSTCoreParser

    // $ANTLR start synpred107_InternalSTCoreParser
    public final void synpred107_InternalSTCoreParser_fragment() throws RecognitionException {   
        // InternalSTCoreParser.g:7442:3: ( rule__STAtomicExpression__Group_1_4__0 )
        // InternalSTCoreParser.g:7442:3: rule__STAtomicExpression__Group_1_4__0
        {
        pushFollow(FOLLOW_2);
        rule__STAtomicExpression__Group_1_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred107_InternalSTCoreParser

    // Delegated rules

    public final boolean synpred107_InternalSTCoreParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalSTCoreParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalSTCoreParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalSTCoreParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA58 dfa58 = new DFA58(this);
    protected DFA65 dfa65 = new DFA65(this);
    static final String dfa_1s = "\47\uffff";
    static final String dfa_2s = "\1\2\46\uffff";
    static final String dfa_3s = "\1\7\1\0\45\uffff";
    static final String dfa_4s = "\1\143\1\0\45\uffff";
    static final String dfa_5s = "\2\uffff\1\2\43\uffff\1\1";
    static final String dfa_6s = "\1\uffff\1\0\45\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\54\uffff\1\2\1\uffff\6\2\4\uffff\1\2\2\uffff\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\1\16\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "6741:2: ( rule__STSelectionExpression__Group_1_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA58_1 = input.LA(1);

                         
                        int index58_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSTCoreParser()) ) {s = 38;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index58_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 58, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\42\uffff";
    static final String dfa_9s = "\1\2\41\uffff";
    static final String dfa_10s = "\1\7\1\0\40\uffff";
    static final String dfa_11s = "\1\143\1\0\40\uffff";
    static final String dfa_12s = "\2\uffff\1\2\36\uffff\1\1";
    static final String dfa_13s = "\1\uffff\1\0\40\uffff}>";
    static final String[] dfa_14s = {
            "\1\2\54\uffff\1\2\6\uffff\1\2\4\uffff\1\2\2\uffff\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\1\16\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "7442:2: ( rule__STAtomicExpression__Group_1_4__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_1 = input.LA(1);

                         
                        int index65_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalSTCoreParser()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index65_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x2002A00006001002L,0x0000040040004000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000400L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000080000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000440000040L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0xD02C4FDF79EC8070L,0x00000CD005221002L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000802000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0xD02C4FDF79EC8070L,0x00000CD405221002L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x2002A00006001000L,0x0000040040004000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x2003A02006101000L,0x0000040040004000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0001000000002000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0xD02C4FDF79EC8072L,0x00000CD005221002L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000022000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002800L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x2002A00006011000L,0x0000040040004000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x2002A00006001200L,0x0000040040004000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x2002B00006001000L,0x0000040040004000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0800000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0800000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000100L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000100L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000280000280L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x0000000280000280L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000005000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000002L,0x0000000005000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000010800001L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000002L,0x0000000010800001L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000040000200000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000000408000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000002L,0x0000000408000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x07C0000000000000L,0x0000000008200000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0xD02C4FDF79EC8070L,0x00000CD005621002L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000100000000L,0x0000001000000002L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x00044B5239480000L,0x000000C005000002L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x4000000800200000L,0x0000000000001000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x8000040000800000L,0x0000000000020000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0020008000000040L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x1008000000000030L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0xD02C4FDF79EC8070L,0x000008D005021002L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000008005000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000028000000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});

}