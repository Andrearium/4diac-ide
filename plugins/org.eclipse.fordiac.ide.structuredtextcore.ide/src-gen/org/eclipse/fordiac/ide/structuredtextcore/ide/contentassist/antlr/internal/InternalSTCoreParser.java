package org.eclipse.fordiac.ide.structuredtextcore.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.fordiac.ide.structuredtextcore.services.STCoreGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSTCoreParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "LDATE_AND_TIME", "DATE_AND_TIME", "TIME_OF_DAY", "END_REPEAT", "VAR_OUTPUT", "END_WHILE", "VAR_INPUT", "CONSTANT", "CONTINUE", "END_CASE", "VAR_TEMP", "WSTRING", "END_FOR", "END_VAR", "STRING", "DWORD", "END_IF", "LDATE", "LREAL", "LTIME", "LWORD", "REPEAT", "RETURN", "UDINT", "ULINT", "USINT", "WCHAR", "ARRAY", "BOOL", "BYTE", "CHAR", "DATE", "DINT", "ELSIF", "LINT", "LTOD", "REAL", "SINT", "TIME", "UINT", "UNTIL", "WHILE", "WORD", "CASE", "ELSE", "EXIT", "INT", "LDT", "THEN", "TOD", "B", "D_1", "L", "W", "X", "AND", "DT", "FOR", "LD", "LT", "MOD", "NOT", "VAR", "XOR", "AsteriskAsterisk", "FullStopFullStop", "ColonEqualsSign", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "AT", "BY", "D", "DO", "IF", "OF", "OR", "T", "TO", "NumberSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "LeftSquareBracket", "RightSquareBracket", "RULE_BOOL_VALUES", "RULE_HEX_DIGIT", "RULE_NON_DECIMAL", "RULE_INT", "RULE_TIME", "RULE_EXT_INT", "RULE_ID", "RULE_STRING", "RULE_WSTRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LWORD=24;
    public static final int LessThanSignGreaterThanSign=72;
    public static final int EqualsSignGreaterThanSign=73;
    public static final int VAR=66;
    public static final int END_IF=20;
    public static final int ULINT=28;
    public static final int END_CASE=13;
    public static final int LessThanSign=96;
    public static final int LeftParenthesis=86;
    public static final int BYTE=33;
    public static final int ELSE=48;
    public static final int RULE_TIME=105;
    public static final int IF=79;
    public static final int LINT=38;
    public static final int GreaterThanSign=98;
    public static final int WORD=46;
    public static final int DATE_AND_TIME=5;
    public static final int RULE_ID=107;
    public static final int TOD=53;
    public static final int DINT=36;
    public static final int UDINT=27;
    public static final int CASE=47;
    public static final int GreaterThanSignEqualsSign=74;
    public static final int AT=75;
    public static final int PlusSign=89;
    public static final int RULE_INT=104;
    public static final int END_FOR=16;
    public static final int RULE_ML_COMMENT=110;
    public static final int THEN=52;
    public static final int XOR=67;
    public static final int LeftSquareBracket=99;
    public static final int EXIT=49;
    public static final int TIME_OF_DAY=6;
    public static final int B=54;
    public static final int LDATE_AND_TIME=4;
    public static final int REPEAT=25;
    public static final int D=77;
    public static final int CHAR=34;
    public static final int L=56;
    public static final int LTIME=23;
    public static final int Comma=90;
    public static final int HyphenMinus=91;
    public static final int T=82;
    public static final int W=57;
    public static final int BY=76;
    public static final int X=58;
    public static final int ELSIF=37;
    public static final int END_REPEAT=7;
    public static final int LessThanSignEqualsSign=71;
    public static final int Solidus=93;
    public static final int VAR_INPUT=10;
    public static final int FullStop=92;
    public static final int VAR_TEMP=14;
    public static final int CONSTANT=11;
    public static final int CONTINUE=12;
    public static final int Semicolon=95;
    public static final int LD=62;
    public static final int VAR_OUTPUT=8;
    public static final int STRING=18;
    public static final int RULE_HEX_DIGIT=102;
    public static final int TO=83;
    public static final int RULE_BOOL_VALUES=101;
    public static final int UINT=43;
    public static final int LTOD=39;
    public static final int ARRAY=31;
    public static final int LT=63;
    public static final int DO=78;
    public static final int WSTRING=15;
    public static final int DT=60;
    public static final int END_VAR=17;
    public static final int FullStopFullStop=69;
    public static final int Ampersand=85;
    public static final int RightSquareBracket=100;
    public static final int USINT=29;
    public static final int DWORD=19;
    public static final int FOR=61;
    public static final int RightParenthesis=87;
    public static final int ColonEqualsSign=70;
    public static final int RULE_WSTRING=109;
    public static final int END_WHILE=9;
    public static final int DATE=35;
    public static final int NOT=65;
    public static final int LDATE=21;
    public static final int AND=59;
    public static final int NumberSign=84;
    public static final int REAL=40;
    public static final int AsteriskAsterisk=68;
    public static final int SINT=41;
    public static final int LREAL=22;
    public static final int WCHAR=30;
    public static final int RULE_STRING=108;
    public static final int INT=50;
    public static final int RULE_SL_COMMENT=111;
    public static final int RETURN=26;
    public static final int EqualsSign=97;
    public static final int OF=80;
    public static final int Colon=94;
    public static final int EOF=-1;
    public static final int LDT=51;
    public static final int Asterisk=88;
    public static final int MOD=64;
    public static final int OR=81;
    public static final int RULE_WS=112;
    public static final int RULE_EXT_INT=106;
    public static final int TIME=42;
    public static final int RULE_ANY_OTHER=113;
    public static final int UNTIL=44;
    public static final int BOOL=32;
    public static final int D_1=55;
    public static final int WHILE=45;
    public static final int RULE_NON_DECIMAL=103;

    // delegates
    // delegators


        public InternalSTCoreParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSTCoreParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSTCoreParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSTCoreParser.g"; }


    	private STCoreGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("NumberSign", "'#'");
    		tokenNameToValue.put("Ampersand", "'&'");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("AsteriskAsterisk", "'**'");
    		tokenNameToValue.put("FullStopFullStop", "'..'");
    		tokenNameToValue.put("ColonEqualsSign", "':='");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AT", "'AT'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("D", "'D#'");
    		tokenNameToValue.put("DO", "'DO'");
    		tokenNameToValue.put("IF", "'IF'");
    		tokenNameToValue.put("OF", "'OF'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("T", "'T#'");
    		tokenNameToValue.put("TO", "'TO'");
    		tokenNameToValue.put("B", "'.%B'");
    		tokenNameToValue.put("D_1", "'.%D'");
    		tokenNameToValue.put("L", "'.%L'");
    		tokenNameToValue.put("W", "'.%W'");
    		tokenNameToValue.put("X", "'.%X'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("DT", "'DT#'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("LD", "'LD#'");
    		tokenNameToValue.put("LT", "'LT#'");
    		tokenNameToValue.put("MOD", "'MOD'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("VAR", "'VAR'");
    		tokenNameToValue.put("XOR", "'XOR'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("EXIT", "'EXIT'");
    		tokenNameToValue.put("INT", "'INT#'");
    		tokenNameToValue.put("LDT", "'LDT#'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TOD", "'TOD#'");
    		tokenNameToValue.put("ARRAY", "'ARRAY'");
    		tokenNameToValue.put("BOOL", "'BOOL#'");
    		tokenNameToValue.put("BYTE", "'BYTE#'");
    		tokenNameToValue.put("CHAR", "'CHAR#'");
    		tokenNameToValue.put("DATE", "'DATE#'");
    		tokenNameToValue.put("DINT", "'DINT#'");
    		tokenNameToValue.put("ELSIF", "'ELSIF'");
    		tokenNameToValue.put("LINT", "'LINT#'");
    		tokenNameToValue.put("LTOD", "'LTOD#'");
    		tokenNameToValue.put("REAL", "'REAL#'");
    		tokenNameToValue.put("SINT", "'SINT#'");
    		tokenNameToValue.put("TIME", "'TIME#'");
    		tokenNameToValue.put("UINT", "'UINT#'");
    		tokenNameToValue.put("UNTIL", "'UNTIL'");
    		tokenNameToValue.put("WHILE", "'WHILE'");
    		tokenNameToValue.put("WORD", "'WORD#'");
    		tokenNameToValue.put("DWORD", "'DWORD#'");
    		tokenNameToValue.put("END_IF", "'END_IF'");
    		tokenNameToValue.put("LDATE", "'LDATE#'");
    		tokenNameToValue.put("LREAL", "'LREAL#'");
    		tokenNameToValue.put("LTIME", "'LTIME#'");
    		tokenNameToValue.put("LWORD", "'LWORD#'");
    		tokenNameToValue.put("REPEAT", "'REPEAT'");
    		tokenNameToValue.put("RETURN", "'RETURN'");
    		tokenNameToValue.put("UDINT", "'UDINT#'");
    		tokenNameToValue.put("ULINT", "'ULINT#'");
    		tokenNameToValue.put("USINT", "'USINT#'");
    		tokenNameToValue.put("WCHAR", "'WCHAR#'");
    		tokenNameToValue.put("END_FOR", "'END_FOR'");
    		tokenNameToValue.put("END_VAR", "'END_VAR'");
    		tokenNameToValue.put("STRING", "'STRING#'");
    		tokenNameToValue.put("CONSTANT", "'CONSTANT'");
    		tokenNameToValue.put("CONTINUE", "'CONTINUE'");
    		tokenNameToValue.put("END_CASE", "'END_CASE'");
    		tokenNameToValue.put("VAR_TEMP", "'VAR_TEMP'");
    		tokenNameToValue.put("WSTRING", "'WSTRING#'");
    		tokenNameToValue.put("END_WHILE", "'END_WHILE'");
    		tokenNameToValue.put("VAR_INPUT", "'VAR_INPUT'");
    		tokenNameToValue.put("END_REPEAT", "'END_REPEAT'");
    		tokenNameToValue.put("VAR_OUTPUT", "'VAR_OUTPUT'");
    		tokenNameToValue.put("TIME_OF_DAY", "'TIME_OF_DAY#'");
    		tokenNameToValue.put("DATE_AND_TIME", "'DATE_AND_TIME#'");
    		tokenNameToValue.put("LDATE_AND_TIME", "'LDATE_AND_TIME#'");
    	}

    	public void setGrammarAccess(STCoreGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleCode"
    // InternalSTCoreParser.g:153:1: entryRuleCode : ruleCode EOF ;
    public final void entryRuleCode() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:154:1: ( ruleCode EOF )
            // InternalSTCoreParser.g:155:1: ruleCode EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCodeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCode();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCodeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCode"


    // $ANTLR start "ruleCode"
    // InternalSTCoreParser.g:162:1: ruleCode : ( ( rule__Code__GreetingsAssignment )* ) ;
    public final void ruleCode() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:166:2: ( ( ( rule__Code__GreetingsAssignment )* ) )
            // InternalSTCoreParser.g:167:2: ( ( rule__Code__GreetingsAssignment )* )
            {
            // InternalSTCoreParser.g:167:2: ( ( rule__Code__GreetingsAssignment )* )
            // InternalSTCoreParser.g:168:3: ( rule__Code__GreetingsAssignment )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCodeAccess().getGreetingsAssignment()); 
            }
            // InternalSTCoreParser.g:169:3: ( rule__Code__GreetingsAssignment )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==REPEAT||LA1_0==WHILE||LA1_0==CASE||LA1_0==FOR||LA1_0==IF||LA1_0==Semicolon||LA1_0==RULE_ID) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSTCoreParser.g:169:4: rule__Code__GreetingsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Code__GreetingsAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCodeAccess().getGreetingsAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCode"


    // $ANTLR start "entryRuleVarDeclaration"
    // InternalSTCoreParser.g:178:1: entryRuleVarDeclaration : ruleVarDeclaration EOF ;
    public final void entryRuleVarDeclaration() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:179:1: ( ruleVarDeclaration EOF )
            // InternalSTCoreParser.g:180:1: ruleVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclaration"


    // $ANTLR start "ruleVarDeclaration"
    // InternalSTCoreParser.g:187:1: ruleVarDeclaration : ( ( rule__VarDeclaration__Group__0 ) ) ;
    public final void ruleVarDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:191:2: ( ( ( rule__VarDeclaration__Group__0 ) ) )
            // InternalSTCoreParser.g:192:2: ( ( rule__VarDeclaration__Group__0 ) )
            {
            // InternalSTCoreParser.g:192:2: ( ( rule__VarDeclaration__Group__0 ) )
            // InternalSTCoreParser.g:193:3: ( rule__VarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:194:3: ( rule__VarDeclaration__Group__0 )
            // InternalSTCoreParser.g:194:4: rule__VarDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclaration"


    // $ANTLR start "entryRuleInitializerExpression"
    // InternalSTCoreParser.g:203:1: entryRuleInitializerExpression : ruleInitializerExpression EOF ;
    public final void entryRuleInitializerExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:204:1: ( ruleInitializerExpression EOF )
            // InternalSTCoreParser.g:205:1: ruleInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializerExpression"


    // $ANTLR start "ruleInitializerExpression"
    // InternalSTCoreParser.g:212:1: ruleInitializerExpression : ( ( rule__InitializerExpression__Alternatives ) ) ;
    public final void ruleInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:216:2: ( ( ( rule__InitializerExpression__Alternatives ) ) )
            // InternalSTCoreParser.g:217:2: ( ( rule__InitializerExpression__Alternatives ) )
            {
            // InternalSTCoreParser.g:217:2: ( ( rule__InitializerExpression__Alternatives ) )
            // InternalSTCoreParser.g:218:3: ( rule__InitializerExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:219:3: ( rule__InitializerExpression__Alternatives )
            // InternalSTCoreParser.g:219:4: rule__InitializerExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__InitializerExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializerExpression"


    // $ANTLR start "entryRuleArrayInitializerExpression"
    // InternalSTCoreParser.g:228:1: entryRuleArrayInitializerExpression : ruleArrayInitializerExpression EOF ;
    public final void entryRuleArrayInitializerExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:229:1: ( ruleArrayInitializerExpression EOF )
            // InternalSTCoreParser.g:230:1: ruleArrayInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitializerExpression"


    // $ANTLR start "ruleArrayInitializerExpression"
    // InternalSTCoreParser.g:237:1: ruleArrayInitializerExpression : ( ( rule__ArrayInitializerExpression__Group__0 ) ) ;
    public final void ruleArrayInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:241:2: ( ( ( rule__ArrayInitializerExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:242:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:242:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            // InternalSTCoreParser.g:243:3: ( rule__ArrayInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:244:3: ( rule__ArrayInitializerExpression__Group__0 )
            // InternalSTCoreParser.g:244:4: rule__ArrayInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitializerExpression"


    // $ANTLR start "entryRuleArrayInitElement"
    // InternalSTCoreParser.g:253:1: entryRuleArrayInitElement : ruleArrayInitElement EOF ;
    public final void entryRuleArrayInitElement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:254:1: ( ruleArrayInitElement EOF )
            // InternalSTCoreParser.g:255:1: ruleArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitElement"


    // $ANTLR start "ruleArrayInitElement"
    // InternalSTCoreParser.g:262:1: ruleArrayInitElement : ( ( rule__ArrayInitElement__Group__0 ) ) ;
    public final void ruleArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:266:2: ( ( ( rule__ArrayInitElement__Group__0 ) ) )
            // InternalSTCoreParser.g:267:2: ( ( rule__ArrayInitElement__Group__0 ) )
            {
            // InternalSTCoreParser.g:267:2: ( ( rule__ArrayInitElement__Group__0 ) )
            // InternalSTCoreParser.g:268:3: ( rule__ArrayInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:269:3: ( rule__ArrayInitElement__Group__0 )
            // InternalSTCoreParser.g:269:4: rule__ArrayInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitElement"


    // $ANTLR start "entryRuleSTStatements"
    // InternalSTCoreParser.g:278:1: entryRuleSTStatements : ruleSTStatements EOF ;
    public final void entryRuleSTStatements() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:279:1: ( ruleSTStatements EOF )
            // InternalSTCoreParser.g:280:1: ruleSTStatements EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStatements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStatements"


    // $ANTLR start "ruleSTStatements"
    // InternalSTCoreParser.g:287:1: ruleSTStatements : ( ( rule__STStatements__Alternatives ) ) ;
    public final void ruleSTStatements() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:291:2: ( ( ( rule__STStatements__Alternatives ) ) )
            // InternalSTCoreParser.g:292:2: ( ( rule__STStatements__Alternatives ) )
            {
            // InternalSTCoreParser.g:292:2: ( ( rule__STStatements__Alternatives ) )
            // InternalSTCoreParser.g:293:3: ( rule__STStatements__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementsAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:294:3: ( rule__STStatements__Alternatives )
            // InternalSTCoreParser.g:294:4: rule__STStatements__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STStatements__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStatements"


    // $ANTLR start "entryRuleSTAssignmentStatement"
    // InternalSTCoreParser.g:303:1: entryRuleSTAssignmentStatement : ruleSTAssignmentStatement EOF ;
    public final void entryRuleSTAssignmentStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:304:1: ( ruleSTAssignmentStatement EOF )
            // InternalSTCoreParser.g:305:1: ruleSTAssignmentStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAssignmentStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAssignmentStatement"


    // $ANTLR start "ruleSTAssignmentStatement"
    // InternalSTCoreParser.g:312:1: ruleSTAssignmentStatement : ( ( rule__STAssignmentStatement__Group__0 ) ) ;
    public final void ruleSTAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:316:2: ( ( ( rule__STAssignmentStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:317:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:317:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            // InternalSTCoreParser.g:318:3: ( rule__STAssignmentStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:319:3: ( rule__STAssignmentStatement__Group__0 )
            // InternalSTCoreParser.g:319:4: rule__STAssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAssignmentStatement"


    // $ANTLR start "entryRuleSTBranchStatements"
    // InternalSTCoreParser.g:328:1: entryRuleSTBranchStatements : ruleSTBranchStatements EOF ;
    public final void entryRuleSTBranchStatements() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:329:1: ( ruleSTBranchStatements EOF )
            // InternalSTCoreParser.g:330:1: ruleSTBranchStatements EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBranchStatementsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTBranchStatements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBranchStatementsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTBranchStatements"


    // $ANTLR start "ruleSTBranchStatements"
    // InternalSTCoreParser.g:337:1: ruleSTBranchStatements : ( ( rule__STBranchStatements__Alternatives ) ) ;
    public final void ruleSTBranchStatements() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:341:2: ( ( ( rule__STBranchStatements__Alternatives ) ) )
            // InternalSTCoreParser.g:342:2: ( ( rule__STBranchStatements__Alternatives ) )
            {
            // InternalSTCoreParser.g:342:2: ( ( rule__STBranchStatements__Alternatives ) )
            // InternalSTCoreParser.g:343:3: ( rule__STBranchStatements__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBranchStatementsAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:344:3: ( rule__STBranchStatements__Alternatives )
            // InternalSTCoreParser.g:344:4: rule__STBranchStatements__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STBranchStatements__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBranchStatementsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTBranchStatements"


    // $ANTLR start "entryRuleSTIfStatment"
    // InternalSTCoreParser.g:353:1: entryRuleSTIfStatment : ruleSTIfStatment EOF ;
    public final void entryRuleSTIfStatment() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:354:1: ( ruleSTIfStatment EOF )
            // InternalSTCoreParser.g:355:1: ruleSTIfStatment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTIfStatment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTIfStatment"


    // $ANTLR start "ruleSTIfStatment"
    // InternalSTCoreParser.g:362:1: ruleSTIfStatment : ( ( rule__STIfStatment__Group__0 ) ) ;
    public final void ruleSTIfStatment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:366:2: ( ( ( rule__STIfStatment__Group__0 ) ) )
            // InternalSTCoreParser.g:367:2: ( ( rule__STIfStatment__Group__0 ) )
            {
            // InternalSTCoreParser.g:367:2: ( ( rule__STIfStatment__Group__0 ) )
            // InternalSTCoreParser.g:368:3: ( rule__STIfStatment__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:369:3: ( rule__STIfStatment__Group__0 )
            // InternalSTCoreParser.g:369:4: rule__STIfStatment__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTIfStatment"


    // $ANTLR start "entryRuleSTElseIfPart"
    // InternalSTCoreParser.g:378:1: entryRuleSTElseIfPart : ruleSTElseIfPart EOF ;
    public final void entryRuleSTElseIfPart() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:379:1: ( ruleSTElseIfPart EOF )
            // InternalSTCoreParser.g:380:1: ruleSTElseIfPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElseIfPart"


    // $ANTLR start "ruleSTElseIfPart"
    // InternalSTCoreParser.g:387:1: ruleSTElseIfPart : ( ( rule__STElseIfPart__Group__0 ) ) ;
    public final void ruleSTElseIfPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:391:2: ( ( ( rule__STElseIfPart__Group__0 ) ) )
            // InternalSTCoreParser.g:392:2: ( ( rule__STElseIfPart__Group__0 ) )
            {
            // InternalSTCoreParser.g:392:2: ( ( rule__STElseIfPart__Group__0 ) )
            // InternalSTCoreParser.g:393:3: ( rule__STElseIfPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:394:3: ( rule__STElseIfPart__Group__0 )
            // InternalSTCoreParser.g:394:4: rule__STElseIfPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElseIfPart"


    // $ANTLR start "entryRuleSTCaseStatement"
    // InternalSTCoreParser.g:403:1: entryRuleSTCaseStatement : ruleSTCaseStatement EOF ;
    public final void entryRuleSTCaseStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:404:1: ( ruleSTCaseStatement EOF )
            // InternalSTCoreParser.g:405:1: ruleSTCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseStatement"


    // $ANTLR start "ruleSTCaseStatement"
    // InternalSTCoreParser.g:412:1: ruleSTCaseStatement : ( ( rule__STCaseStatement__Group__0 ) ) ;
    public final void ruleSTCaseStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:416:2: ( ( ( rule__STCaseStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:417:2: ( ( rule__STCaseStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:417:2: ( ( rule__STCaseStatement__Group__0 ) )
            // InternalSTCoreParser.g:418:3: ( rule__STCaseStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:419:3: ( rule__STCaseStatement__Group__0 )
            // InternalSTCoreParser.g:419:4: rule__STCaseStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseStatement"


    // $ANTLR start "entryRuleSTCaseCases"
    // InternalSTCoreParser.g:428:1: entryRuleSTCaseCases : ruleSTCaseCases EOF ;
    public final void entryRuleSTCaseCases() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:429:1: ( ruleSTCaseCases EOF )
            // InternalSTCoreParser.g:430:1: ruleSTCaseCases EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseCases"


    // $ANTLR start "ruleSTCaseCases"
    // InternalSTCoreParser.g:437:1: ruleSTCaseCases : ( ( rule__STCaseCases__Group__0 ) ) ;
    public final void ruleSTCaseCases() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:441:2: ( ( ( rule__STCaseCases__Group__0 ) ) )
            // InternalSTCoreParser.g:442:2: ( ( rule__STCaseCases__Group__0 ) )
            {
            // InternalSTCoreParser.g:442:2: ( ( rule__STCaseCases__Group__0 ) )
            // InternalSTCoreParser.g:443:3: ( rule__STCaseCases__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:444:3: ( rule__STCaseCases__Group__0 )
            // InternalSTCoreParser.g:444:4: rule__STCaseCases__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseCases"


    // $ANTLR start "entryRuleSTElsePart"
    // InternalSTCoreParser.g:453:1: entryRuleSTElsePart : ruleSTElsePart EOF ;
    public final void entryRuleSTElsePart() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:454:1: ( ruleSTElsePart EOF )
            // InternalSTCoreParser.g:455:1: ruleSTElsePart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElsePart"


    // $ANTLR start "ruleSTElsePart"
    // InternalSTCoreParser.g:462:1: ruleSTElsePart : ( ( rule__STElsePart__Group__0 ) ) ;
    public final void ruleSTElsePart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:466:2: ( ( ( rule__STElsePart__Group__0 ) ) )
            // InternalSTCoreParser.g:467:2: ( ( rule__STElsePart__Group__0 ) )
            {
            // InternalSTCoreParser.g:467:2: ( ( rule__STElsePart__Group__0 ) )
            // InternalSTCoreParser.g:468:3: ( rule__STElsePart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:469:3: ( rule__STElsePart__Group__0 )
            // InternalSTCoreParser.g:469:4: rule__STElsePart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElsePart"


    // $ANTLR start "entryRuleSTLoopStatements"
    // InternalSTCoreParser.g:478:1: entryRuleSTLoopStatements : ruleSTLoopStatements EOF ;
    public final void entryRuleSTLoopStatements() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:479:1: ( ruleSTLoopStatements EOF )
            // InternalSTCoreParser.g:480:1: ruleSTLoopStatements EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLoopStatementsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLoopStatements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLoopStatementsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLoopStatements"


    // $ANTLR start "ruleSTLoopStatements"
    // InternalSTCoreParser.g:487:1: ruleSTLoopStatements : ( ( rule__STLoopStatements__Alternatives ) ) ;
    public final void ruleSTLoopStatements() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:491:2: ( ( ( rule__STLoopStatements__Alternatives ) ) )
            // InternalSTCoreParser.g:492:2: ( ( rule__STLoopStatements__Alternatives ) )
            {
            // InternalSTCoreParser.g:492:2: ( ( rule__STLoopStatements__Alternatives ) )
            // InternalSTCoreParser.g:493:3: ( rule__STLoopStatements__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLoopStatementsAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:494:3: ( rule__STLoopStatements__Alternatives )
            // InternalSTCoreParser.g:494:4: rule__STLoopStatements__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLoopStatements__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLoopStatementsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLoopStatements"


    // $ANTLR start "entryRuleSTForStatement"
    // InternalSTCoreParser.g:503:1: entryRuleSTForStatement : ruleSTForStatement EOF ;
    public final void entryRuleSTForStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:504:1: ( ruleSTForStatement EOF )
            // InternalSTCoreParser.g:505:1: ruleSTForStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTForStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTForStatement"


    // $ANTLR start "ruleSTForStatement"
    // InternalSTCoreParser.g:512:1: ruleSTForStatement : ( ( rule__STForStatement__Group__0 ) ) ;
    public final void ruleSTForStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:516:2: ( ( ( rule__STForStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:517:2: ( ( rule__STForStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:517:2: ( ( rule__STForStatement__Group__0 ) )
            // InternalSTCoreParser.g:518:3: ( rule__STForStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:519:3: ( rule__STForStatement__Group__0 )
            // InternalSTCoreParser.g:519:4: rule__STForStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTForStatement"


    // $ANTLR start "entryRuleSTWhileStatement"
    // InternalSTCoreParser.g:528:1: entryRuleSTWhileStatement : ruleSTWhileStatement EOF ;
    public final void entryRuleSTWhileStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:529:1: ( ruleSTWhileStatement EOF )
            // InternalSTCoreParser.g:530:1: ruleSTWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTWhileStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTWhileStatement"


    // $ANTLR start "ruleSTWhileStatement"
    // InternalSTCoreParser.g:537:1: ruleSTWhileStatement : ( ( rule__STWhileStatement__Group__0 ) ) ;
    public final void ruleSTWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:541:2: ( ( ( rule__STWhileStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:542:2: ( ( rule__STWhileStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:542:2: ( ( rule__STWhileStatement__Group__0 ) )
            // InternalSTCoreParser.g:543:3: ( rule__STWhileStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:544:3: ( rule__STWhileStatement__Group__0 )
            // InternalSTCoreParser.g:544:4: rule__STWhileStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTWhileStatement"


    // $ANTLR start "entryRuleSTRepeatStatement"
    // InternalSTCoreParser.g:553:1: entryRuleSTRepeatStatement : ruleSTRepeatStatement EOF ;
    public final void entryRuleSTRepeatStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:554:1: ( ruleSTRepeatStatement EOF )
            // InternalSTCoreParser.g:555:1: ruleSTRepeatStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRepeatStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRepeatStatement"


    // $ANTLR start "ruleSTRepeatStatement"
    // InternalSTCoreParser.g:562:1: ruleSTRepeatStatement : ( ( rule__STRepeatStatement__Group__0 ) ) ;
    public final void ruleSTRepeatStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:566:2: ( ( ( rule__STRepeatStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:567:2: ( ( rule__STRepeatStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:567:2: ( ( rule__STRepeatStatement__Group__0 ) )
            // InternalSTCoreParser.g:568:3: ( rule__STRepeatStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:569:3: ( rule__STRepeatStatement__Group__0 )
            // InternalSTCoreParser.g:569:4: rule__STRepeatStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRepeatStatement"


    // $ANTLR start "entryRuleSTExpression"
    // InternalSTCoreParser.g:578:1: entryRuleSTExpression : ruleSTExpression EOF ;
    public final void entryRuleSTExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:579:1: ( ruleSTExpression EOF )
            // InternalSTCoreParser.g:580:1: ruleSTExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpression"


    // $ANTLR start "ruleSTExpression"
    // InternalSTCoreParser.g:587:1: ruleSTExpression : ( ruleSTSubrangeExpression ) ;
    public final void ruleSTExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:591:2: ( ( ruleSTSubrangeExpression ) )
            // InternalSTCoreParser.g:592:2: ( ruleSTSubrangeExpression )
            {
            // InternalSTCoreParser.g:592:2: ( ruleSTSubrangeExpression )
            // InternalSTCoreParser.g:593:3: ruleSTSubrangeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpression"


    // $ANTLR start "entryRuleSTSubrangeExpression"
    // InternalSTCoreParser.g:603:1: entryRuleSTSubrangeExpression : ruleSTSubrangeExpression EOF ;
    public final void entryRuleSTSubrangeExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:604:1: ( ruleSTSubrangeExpression EOF )
            // InternalSTCoreParser.g:605:1: ruleSTSubrangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSubrangeExpression"


    // $ANTLR start "ruleSTSubrangeExpression"
    // InternalSTCoreParser.g:612:1: ruleSTSubrangeExpression : ( ( rule__STSubrangeExpression__Group__0 ) ) ;
    public final void ruleSTSubrangeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:616:2: ( ( ( rule__STSubrangeExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:617:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:617:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            // InternalSTCoreParser.g:618:3: ( rule__STSubrangeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:619:3: ( rule__STSubrangeExpression__Group__0 )
            // InternalSTCoreParser.g:619:4: rule__STSubrangeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSubrangeExpression"


    // $ANTLR start "entryRuleSTOrExpression"
    // InternalSTCoreParser.g:628:1: entryRuleSTOrExpression : ruleSTOrExpression EOF ;
    public final void entryRuleSTOrExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:629:1: ( ruleSTOrExpression EOF )
            // InternalSTCoreParser.g:630:1: ruleSTOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTOrExpression"


    // $ANTLR start "ruleSTOrExpression"
    // InternalSTCoreParser.g:637:1: ruleSTOrExpression : ( ( rule__STOrExpression__Group__0 ) ) ;
    public final void ruleSTOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:641:2: ( ( ( rule__STOrExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:642:2: ( ( rule__STOrExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:642:2: ( ( rule__STOrExpression__Group__0 ) )
            // InternalSTCoreParser.g:643:3: ( rule__STOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:644:3: ( rule__STOrExpression__Group__0 )
            // InternalSTCoreParser.g:644:4: rule__STOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTOrExpression"


    // $ANTLR start "entryRuleSTXorExpression"
    // InternalSTCoreParser.g:653:1: entryRuleSTXorExpression : ruleSTXorExpression EOF ;
    public final void entryRuleSTXorExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:654:1: ( ruleSTXorExpression EOF )
            // InternalSTCoreParser.g:655:1: ruleSTXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTXorExpression"


    // $ANTLR start "ruleSTXorExpression"
    // InternalSTCoreParser.g:662:1: ruleSTXorExpression : ( ( rule__STXorExpression__Group__0 ) ) ;
    public final void ruleSTXorExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:666:2: ( ( ( rule__STXorExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:667:2: ( ( rule__STXorExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:667:2: ( ( rule__STXorExpression__Group__0 ) )
            // InternalSTCoreParser.g:668:3: ( rule__STXorExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:669:3: ( rule__STXorExpression__Group__0 )
            // InternalSTCoreParser.g:669:4: rule__STXorExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTXorExpression"


    // $ANTLR start "entryRuleSTAndExpression"
    // InternalSTCoreParser.g:678:1: entryRuleSTAndExpression : ruleSTAndExpression EOF ;
    public final void entryRuleSTAndExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:679:1: ( ruleSTAndExpression EOF )
            // InternalSTCoreParser.g:680:1: ruleSTAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAndExpression"


    // $ANTLR start "ruleSTAndExpression"
    // InternalSTCoreParser.g:687:1: ruleSTAndExpression : ( ( rule__STAndExpression__Group__0 ) ) ;
    public final void ruleSTAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:691:2: ( ( ( rule__STAndExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:692:2: ( ( rule__STAndExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:692:2: ( ( rule__STAndExpression__Group__0 ) )
            // InternalSTCoreParser.g:693:3: ( rule__STAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:694:3: ( rule__STAndExpression__Group__0 )
            // InternalSTCoreParser.g:694:4: rule__STAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAndExpression"


    // $ANTLR start "entryRuleSTEqualityExpression"
    // InternalSTCoreParser.g:703:1: entryRuleSTEqualityExpression : ruleSTEqualityExpression EOF ;
    public final void entryRuleSTEqualityExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:704:1: ( ruleSTEqualityExpression EOF )
            // InternalSTCoreParser.g:705:1: ruleSTEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTEqualityExpression"


    // $ANTLR start "ruleSTEqualityExpression"
    // InternalSTCoreParser.g:712:1: ruleSTEqualityExpression : ( ( rule__STEqualityExpression__Group__0 ) ) ;
    public final void ruleSTEqualityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:716:2: ( ( ( rule__STEqualityExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:717:2: ( ( rule__STEqualityExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:717:2: ( ( rule__STEqualityExpression__Group__0 ) )
            // InternalSTCoreParser.g:718:3: ( rule__STEqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:719:3: ( rule__STEqualityExpression__Group__0 )
            // InternalSTCoreParser.g:719:4: rule__STEqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTEqualityExpression"


    // $ANTLR start "entryRuleSTComparisonExpression"
    // InternalSTCoreParser.g:728:1: entryRuleSTComparisonExpression : ruleSTComparisonExpression EOF ;
    public final void entryRuleSTComparisonExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:729:1: ( ruleSTComparisonExpression EOF )
            // InternalSTCoreParser.g:730:1: ruleSTComparisonExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTComparisonExpression"


    // $ANTLR start "ruleSTComparisonExpression"
    // InternalSTCoreParser.g:737:1: ruleSTComparisonExpression : ( ( rule__STComparisonExpression__Group__0 ) ) ;
    public final void ruleSTComparisonExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:741:2: ( ( ( rule__STComparisonExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:742:2: ( ( rule__STComparisonExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:742:2: ( ( rule__STComparisonExpression__Group__0 ) )
            // InternalSTCoreParser.g:743:3: ( rule__STComparisonExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:744:3: ( rule__STComparisonExpression__Group__0 )
            // InternalSTCoreParser.g:744:4: rule__STComparisonExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTComparisonExpression"


    // $ANTLR start "entryRuleSTAddSubExpression"
    // InternalSTCoreParser.g:753:1: entryRuleSTAddSubExpression : ruleSTAddSubExpression EOF ;
    public final void entryRuleSTAddSubExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:754:1: ( ruleSTAddSubExpression EOF )
            // InternalSTCoreParser.g:755:1: ruleSTAddSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAddSubExpression"


    // $ANTLR start "ruleSTAddSubExpression"
    // InternalSTCoreParser.g:762:1: ruleSTAddSubExpression : ( ( rule__STAddSubExpression__Group__0 ) ) ;
    public final void ruleSTAddSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:766:2: ( ( ( rule__STAddSubExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:767:2: ( ( rule__STAddSubExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:767:2: ( ( rule__STAddSubExpression__Group__0 ) )
            // InternalSTCoreParser.g:768:3: ( rule__STAddSubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:769:3: ( rule__STAddSubExpression__Group__0 )
            // InternalSTCoreParser.g:769:4: rule__STAddSubExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAddSubExpression"


    // $ANTLR start "entryRuleSTMulDivModExpression"
    // InternalSTCoreParser.g:778:1: entryRuleSTMulDivModExpression : ruleSTMulDivModExpression EOF ;
    public final void entryRuleSTMulDivModExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:779:1: ( ruleSTMulDivModExpression EOF )
            // InternalSTCoreParser.g:780:1: ruleSTMulDivModExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMulDivModExpression"


    // $ANTLR start "ruleSTMulDivModExpression"
    // InternalSTCoreParser.g:787:1: ruleSTMulDivModExpression : ( ( rule__STMulDivModExpression__Group__0 ) ) ;
    public final void ruleSTMulDivModExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:791:2: ( ( ( rule__STMulDivModExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:792:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:792:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            // InternalSTCoreParser.g:793:3: ( rule__STMulDivModExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:794:3: ( rule__STMulDivModExpression__Group__0 )
            // InternalSTCoreParser.g:794:4: rule__STMulDivModExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMulDivModExpression"


    // $ANTLR start "entryRuleSTPowerExpression"
    // InternalSTCoreParser.g:803:1: entryRuleSTPowerExpression : ruleSTPowerExpression EOF ;
    public final void entryRuleSTPowerExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:804:1: ( ruleSTPowerExpression EOF )
            // InternalSTCoreParser.g:805:1: ruleSTPowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPowerExpression"


    // $ANTLR start "ruleSTPowerExpression"
    // InternalSTCoreParser.g:812:1: ruleSTPowerExpression : ( ( rule__STPowerExpression__Group__0 ) ) ;
    public final void ruleSTPowerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:816:2: ( ( ( rule__STPowerExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:817:2: ( ( rule__STPowerExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:817:2: ( ( rule__STPowerExpression__Group__0 ) )
            // InternalSTCoreParser.g:818:3: ( rule__STPowerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:819:3: ( rule__STPowerExpression__Group__0 )
            // InternalSTCoreParser.g:819:4: rule__STPowerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPowerExpression"


    // $ANTLR start "entryRuleSTSignumExpression"
    // InternalSTCoreParser.g:828:1: entryRuleSTSignumExpression : ruleSTSignumExpression EOF ;
    public final void entryRuleSTSignumExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:829:1: ( ruleSTSignumExpression EOF )
            // InternalSTCoreParser.g:830:1: ruleSTSignumExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSignumExpression"


    // $ANTLR start "ruleSTSignumExpression"
    // InternalSTCoreParser.g:837:1: ruleSTSignumExpression : ( ( rule__STSignumExpression__Alternatives ) ) ;
    public final void ruleSTSignumExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:841:2: ( ( ( rule__STSignumExpression__Alternatives ) ) )
            // InternalSTCoreParser.g:842:2: ( ( rule__STSignumExpression__Alternatives ) )
            {
            // InternalSTCoreParser.g:842:2: ( ( rule__STSignumExpression__Alternatives ) )
            // InternalSTCoreParser.g:843:3: ( rule__STSignumExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:844:3: ( rule__STSignumExpression__Alternatives )
            // InternalSTCoreParser.g:844:4: rule__STSignumExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSignumExpression"


    // $ANTLR start "entryRuleSTSelectionExpression"
    // InternalSTCoreParser.g:853:1: entryRuleSTSelectionExpression : ruleSTSelectionExpression EOF ;
    public final void entryRuleSTSelectionExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:854:1: ( ruleSTSelectionExpression EOF )
            // InternalSTCoreParser.g:855:1: ruleSTSelectionExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSelectionExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSelectionExpression"


    // $ANTLR start "ruleSTSelectionExpression"
    // InternalSTCoreParser.g:862:1: ruleSTSelectionExpression : ( ( rule__STSelectionExpression__Group__0 ) ) ;
    public final void ruleSTSelectionExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:866:2: ( ( ( rule__STSelectionExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:867:2: ( ( rule__STSelectionExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:867:2: ( ( rule__STSelectionExpression__Group__0 ) )
            // InternalSTCoreParser.g:868:3: ( rule__STSelectionExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:869:3: ( rule__STSelectionExpression__Group__0 )
            // InternalSTCoreParser.g:869:4: rule__STSelectionExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSelectionExpression"


    // $ANTLR start "entryRuleMultibitPartialAccess"
    // InternalSTCoreParser.g:878:1: entryRuleMultibitPartialAccess : ruleMultibitPartialAccess EOF ;
    public final void entryRuleMultibitPartialAccess() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:879:1: ( ruleMultibitPartialAccess EOF )
            // InternalSTCoreParser.g:880:1: ruleMultibitPartialAccess EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultibitPartialAccess"


    // $ANTLR start "ruleMultibitPartialAccess"
    // InternalSTCoreParser.g:887:1: ruleMultibitPartialAccess : ( ( rule__MultibitPartialAccess__Group__0 ) ) ;
    public final void ruleMultibitPartialAccess() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:891:2: ( ( ( rule__MultibitPartialAccess__Group__0 ) ) )
            // InternalSTCoreParser.g:892:2: ( ( rule__MultibitPartialAccess__Group__0 ) )
            {
            // InternalSTCoreParser.g:892:2: ( ( rule__MultibitPartialAccess__Group__0 ) )
            // InternalSTCoreParser.g:893:3: ( rule__MultibitPartialAccess__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:894:3: ( rule__MultibitPartialAccess__Group__0 )
            // InternalSTCoreParser.g:894:4: rule__MultibitPartialAccess__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultibitPartialAccess"


    // $ANTLR start "entryRuleSTAtomicExpression"
    // InternalSTCoreParser.g:903:1: entryRuleSTAtomicExpression : ruleSTAtomicExpression EOF ;
    public final void entryRuleSTAtomicExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:904:1: ( ruleSTAtomicExpression EOF )
            // InternalSTCoreParser.g:905:1: ruleSTAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAtomicExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAtomicExpression"


    // $ANTLR start "ruleSTAtomicExpression"
    // InternalSTCoreParser.g:912:1: ruleSTAtomicExpression : ( ( rule__STAtomicExpression__Alternatives ) ) ;
    public final void ruleSTAtomicExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:916:2: ( ( ( rule__STAtomicExpression__Alternatives ) ) )
            // InternalSTCoreParser.g:917:2: ( ( rule__STAtomicExpression__Alternatives ) )
            {
            // InternalSTCoreParser.g:917:2: ( ( rule__STAtomicExpression__Alternatives ) )
            // InternalSTCoreParser.g:918:3: ( rule__STAtomicExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:919:3: ( rule__STAtomicExpression__Alternatives )
            // InternalSTCoreParser.g:919:4: rule__STAtomicExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAtomicExpression"


    // $ANTLR start "entryRuleSTLiteralExpressions"
    // InternalSTCoreParser.g:928:1: entryRuleSTLiteralExpressions : ruleSTLiteralExpressions EOF ;
    public final void entryRuleSTLiteralExpressions() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:929:1: ( ruleSTLiteralExpressions EOF )
            // InternalSTCoreParser.g:930:1: ruleSTLiteralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLiteralExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLiteralExpressions"


    // $ANTLR start "ruleSTLiteralExpressions"
    // InternalSTCoreParser.g:937:1: ruleSTLiteralExpressions : ( ( rule__STLiteralExpressions__Alternatives ) ) ;
    public final void ruleSTLiteralExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:941:2: ( ( ( rule__STLiteralExpressions__Alternatives ) ) )
            // InternalSTCoreParser.g:942:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            {
            // InternalSTCoreParser.g:942:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            // InternalSTCoreParser.g:943:3: ( rule__STLiteralExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:944:3: ( rule__STLiteralExpressions__Alternatives )
            // InternalSTCoreParser.g:944:4: rule__STLiteralExpressions__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLiteralExpressions"


    // $ANTLR start "entryRuleNUMERIC_LITERAL"
    // InternalSTCoreParser.g:953:1: entryRuleNUMERIC_LITERAL : ruleNUMERIC_LITERAL EOF ;
    public final void entryRuleNUMERIC_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:954:1: ( ruleNUMERIC_LITERAL EOF )
            // InternalSTCoreParser.g:955:1: ruleNUMERIC_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNUMERIC_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMERIC_LITERAL"


    // $ANTLR start "ruleNUMERIC_LITERAL"
    // InternalSTCoreParser.g:962:1: ruleNUMERIC_LITERAL : ( ( rule__NUMERIC_LITERAL__Group__0 ) ) ;
    public final void ruleNUMERIC_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:966:2: ( ( ( rule__NUMERIC_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:967:2: ( ( rule__NUMERIC_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:967:2: ( ( rule__NUMERIC_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:968:3: ( rule__NUMERIC_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:969:3: ( rule__NUMERIC_LITERAL__Group__0 )
            // InternalSTCoreParser.g:969:4: rule__NUMERIC_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMERIC_LITERAL"


    // $ANTLR start "entryRuleDATE_LITERAL"
    // InternalSTCoreParser.g:978:1: entryRuleDATE_LITERAL : ruleDATE_LITERAL EOF ;
    public final void entryRuleDATE_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:979:1: ( ruleDATE_LITERAL EOF )
            // InternalSTCoreParser.g:980:1: ruleDATE_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE_LITERAL"


    // $ANTLR start "ruleDATE_LITERAL"
    // InternalSTCoreParser.g:987:1: ruleDATE_LITERAL : ( ( rule__DATE_LITERAL__Group__0 ) ) ;
    public final void ruleDATE_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:991:2: ( ( ( rule__DATE_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:992:2: ( ( rule__DATE_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:992:2: ( ( rule__DATE_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:993:3: ( rule__DATE_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:994:3: ( rule__DATE_LITERAL__Group__0 )
            // InternalSTCoreParser.g:994:4: rule__DATE_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE_LITERAL"


    // $ANTLR start "entryRuleTIME_LITERAL"
    // InternalSTCoreParser.g:1003:1: entryRuleTIME_LITERAL : ruleTIME_LITERAL EOF ;
    public final void entryRuleTIME_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1004:1: ( ruleTIME_LITERAL EOF )
            // InternalSTCoreParser.g:1005:1: ruleTIME_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_LITERAL"


    // $ANTLR start "ruleTIME_LITERAL"
    // InternalSTCoreParser.g:1012:1: ruleTIME_LITERAL : ( ( rule__TIME_LITERAL__Group__0 ) ) ;
    public final void ruleTIME_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1016:2: ( ( ( rule__TIME_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1017:2: ( ( rule__TIME_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1017:2: ( ( rule__TIME_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1018:3: ( rule__TIME_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1019:3: ( rule__TIME_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1019:4: rule__TIME_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_LITERAL"


    // $ANTLR start "entryRuleTIME_OF_DAY_LITERAL"
    // InternalSTCoreParser.g:1028:1: entryRuleTIME_OF_DAY_LITERAL : ruleTIME_OF_DAY_LITERAL EOF ;
    public final void entryRuleTIME_OF_DAY_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1029:1: ( ruleTIME_OF_DAY_LITERAL EOF )
            // InternalSTCoreParser.g:1030:1: ruleTIME_OF_DAY_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_OF_DAY_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_OF_DAY_LITERAL"


    // $ANTLR start "ruleTIME_OF_DAY_LITERAL"
    // InternalSTCoreParser.g:1037:1: ruleTIME_OF_DAY_LITERAL : ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) ) ;
    public final void ruleTIME_OF_DAY_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1041:2: ( ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1042:2: ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1042:2: ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1043:3: ( rule__TIME_OF_DAY_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1044:3: ( rule__TIME_OF_DAY_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1044:4: rule__TIME_OF_DAY_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_OF_DAY_LITERAL"


    // $ANTLR start "entryRuleDATE_AND_TIME_LITERAL"
    // InternalSTCoreParser.g:1053:1: entryRuleDATE_AND_TIME_LITERAL : ruleDATE_AND_TIME_LITERAL EOF ;
    public final void entryRuleDATE_AND_TIME_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1054:1: ( ruleDATE_AND_TIME_LITERAL EOF )
            // InternalSTCoreParser.g:1055:1: ruleDATE_AND_TIME_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE_AND_TIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE_AND_TIME_LITERAL"


    // $ANTLR start "ruleDATE_AND_TIME_LITERAL"
    // InternalSTCoreParser.g:1062:1: ruleDATE_AND_TIME_LITERAL : ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) ) ;
    public final void ruleDATE_AND_TIME_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1066:2: ( ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1067:2: ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1067:2: ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1068:3: ( rule__DATE_AND_TIME_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1069:3: ( rule__DATE_AND_TIME_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1069:4: rule__DATE_AND_TIME_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE_AND_TIME_LITERAL"


    // $ANTLR start "entryRuleSTRING_LITERAL"
    // InternalSTCoreParser.g:1078:1: entryRuleSTRING_LITERAL : ruleSTRING_LITERAL EOF ;
    public final void entryRuleSTRING_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1079:1: ( ruleSTRING_LITERAL EOF )
            // InternalSTCoreParser.g:1080:1: ruleSTRING_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRING_LITERAL"


    // $ANTLR start "ruleSTRING_LITERAL"
    // InternalSTCoreParser.g:1087:1: ruleSTRING_LITERAL : ( ( rule__STRING_LITERAL__Group__0 ) ) ;
    public final void ruleSTRING_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1091:2: ( ( ( rule__STRING_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1092:2: ( ( rule__STRING_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1092:2: ( ( rule__STRING_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1093:3: ( rule__STRING_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1094:3: ( rule__STRING_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1094:4: rule__STRING_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRING_LITERAL"


    // $ANTLR start "entryRuleINTEGER"
    // InternalSTCoreParser.g:1103:1: entryRuleINTEGER : ruleINTEGER EOF ;
    public final void entryRuleINTEGER() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1104:1: ( ruleINTEGER EOF )
            // InternalSTCoreParser.g:1105:1: ruleINTEGER EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleINTEGER"


    // $ANTLR start "ruleINTEGER"
    // InternalSTCoreParser.g:1112:1: ruleINTEGER : ( ( rule__INTEGER__Group__0 ) ) ;
    public final void ruleINTEGER() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1116:2: ( ( ( rule__INTEGER__Group__0 ) ) )
            // InternalSTCoreParser.g:1117:2: ( ( rule__INTEGER__Group__0 ) )
            {
            // InternalSTCoreParser.g:1117:2: ( ( rule__INTEGER__Group__0 ) )
            // InternalSTCoreParser.g:1118:3: ( rule__INTEGER__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1119:3: ( rule__INTEGER__Group__0 )
            // InternalSTCoreParser.g:1119:4: rule__INTEGER__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleINTEGER"


    // $ANTLR start "entryRuleREAL"
    // InternalSTCoreParser.g:1128:1: entryRuleREAL : ruleREAL EOF ;
    public final void entryRuleREAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1129:1: ( ruleREAL EOF )
            // InternalSTCoreParser.g:1130:1: ruleREAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleREAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleREAL"


    // $ANTLR start "ruleREAL"
    // InternalSTCoreParser.g:1137:1: ruleREAL : ( ( rule__REAL__Group__0 ) ) ;
    public final void ruleREAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1141:2: ( ( ( rule__REAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1142:2: ( ( rule__REAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1142:2: ( ( rule__REAL__Group__0 ) )
            // InternalSTCoreParser.g:1143:3: ( rule__REAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1144:3: ( rule__REAL__Group__0 )
            // InternalSTCoreParser.g:1144:4: rule__REAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleREAL"


    // $ANTLR start "entryRuleDATE"
    // InternalSTCoreParser.g:1153:1: entryRuleDATE : ruleDATE EOF ;
    public final void entryRuleDATE() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1154:1: ( ruleDATE EOF )
            // InternalSTCoreParser.g:1155:1: ruleDATE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE"


    // $ANTLR start "ruleDATE"
    // InternalSTCoreParser.g:1162:1: ruleDATE : ( ( rule__DATE__Group__0 ) ) ;
    public final void ruleDATE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1166:2: ( ( ( rule__DATE__Group__0 ) ) )
            // InternalSTCoreParser.g:1167:2: ( ( rule__DATE__Group__0 ) )
            {
            // InternalSTCoreParser.g:1167:2: ( ( rule__DATE__Group__0 ) )
            // InternalSTCoreParser.g:1168:3: ( rule__DATE__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1169:3: ( rule__DATE__Group__0 )
            // InternalSTCoreParser.g:1169:4: rule__DATE__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE"


    // $ANTLR start "entryRuleTIME_OF_DAY"
    // InternalSTCoreParser.g:1178:1: entryRuleTIME_OF_DAY : ruleTIME_OF_DAY EOF ;
    public final void entryRuleTIME_OF_DAY() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1179:1: ( ruleTIME_OF_DAY EOF )
            // InternalSTCoreParser.g:1180:1: ruleTIME_OF_DAY EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_OF_DAY"


    // $ANTLR start "ruleTIME_OF_DAY"
    // InternalSTCoreParser.g:1187:1: ruleTIME_OF_DAY : ( ( rule__TIME_OF_DAY__Group__0 ) ) ;
    public final void ruleTIME_OF_DAY() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1191:2: ( ( ( rule__TIME_OF_DAY__Group__0 ) ) )
            // InternalSTCoreParser.g:1192:2: ( ( rule__TIME_OF_DAY__Group__0 ) )
            {
            // InternalSTCoreParser.g:1192:2: ( ( rule__TIME_OF_DAY__Group__0 ) )
            // InternalSTCoreParser.g:1193:3: ( rule__TIME_OF_DAY__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1194:3: ( rule__TIME_OF_DAY__Group__0 )
            // InternalSTCoreParser.g:1194:4: rule__TIME_OF_DAY__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_OF_DAY"


    // $ANTLR start "ruleMultiBitAccessSpecifier"
    // InternalSTCoreParser.g:1203:1: ruleMultiBitAccessSpecifier : ( ( rule__MultiBitAccessSpecifier__Alternatives ) ) ;
    public final void ruleMultiBitAccessSpecifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1207:1: ( ( ( rule__MultiBitAccessSpecifier__Alternatives ) ) )
            // InternalSTCoreParser.g:1208:2: ( ( rule__MultiBitAccessSpecifier__Alternatives ) )
            {
            // InternalSTCoreParser.g:1208:2: ( ( rule__MultiBitAccessSpecifier__Alternatives ) )
            // InternalSTCoreParser.g:1209:3: ( rule__MultiBitAccessSpecifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiBitAccessSpecifierAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1210:3: ( rule__MultiBitAccessSpecifier__Alternatives )
            // InternalSTCoreParser.g:1210:4: rule__MultiBitAccessSpecifier__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MultiBitAccessSpecifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiBitAccessSpecifierAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiBitAccessSpecifier"


    // $ANTLR start "rule__VarDeclaration__Alternatives_3_1"
    // InternalSTCoreParser.g:1218:1: rule__VarDeclaration__Alternatives_3_1 : ( ( ( rule__VarDeclaration__Group_3_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_3_1_1__0 ) ) );
    public final void rule__VarDeclaration__Alternatives_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1222:1: ( ( ( rule__VarDeclaration__Group_3_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_3_1_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==LeftSquareBracket) ) {
                int LA2_1 = input.LA(2);

                if ( ((LA2_1>=LDATE_AND_TIME && LA2_1<=TIME_OF_DAY)||LA2_1==CONTINUE||LA2_1==WSTRING||(LA2_1>=STRING && LA2_1<=DWORD)||(LA2_1>=LDATE && LA2_1<=LWORD)||(LA2_1>=RETURN && LA2_1<=WCHAR)||(LA2_1>=BOOL && LA2_1<=DINT)||(LA2_1>=LINT && LA2_1<=UINT)||LA2_1==WORD||(LA2_1>=EXIT && LA2_1<=LDT)||LA2_1==TOD||LA2_1==DT||(LA2_1>=LD && LA2_1<=LT)||LA2_1==NOT||LA2_1==D||LA2_1==T||LA2_1==LeftParenthesis||LA2_1==PlusSign||LA2_1==HyphenMinus||LA2_1==RULE_BOOL_VALUES||(LA2_1>=RULE_NON_DECIMAL && LA2_1<=RULE_INT)||(LA2_1>=RULE_ID && LA2_1<=RULE_STRING)) ) {
                    alt2=1;
                }
                else if ( (LA2_1==Asterisk) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSTCoreParser.g:1223:2: ( ( rule__VarDeclaration__Group_3_1_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1223:2: ( ( rule__VarDeclaration__Group_3_1_0__0 ) )
                    // InternalSTCoreParser.g:1224:3: ( rule__VarDeclaration__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0()); 
                    }
                    // InternalSTCoreParser.g:1225:3: ( rule__VarDeclaration__Group_3_1_0__0 )
                    // InternalSTCoreParser.g:1225:4: rule__VarDeclaration__Group_3_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1229:2: ( ( rule__VarDeclaration__Group_3_1_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1229:2: ( ( rule__VarDeclaration__Group_3_1_1__0 ) )
                    // InternalSTCoreParser.g:1230:3: ( rule__VarDeclaration__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1()); 
                    }
                    // InternalSTCoreParser.g:1231:3: ( rule__VarDeclaration__Group_3_1_1__0 )
                    // InternalSTCoreParser.g:1231:4: rule__VarDeclaration__Group_3_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Alternatives_3_1"


    // $ANTLR start "rule__InitializerExpression__Alternatives"
    // InternalSTCoreParser.g:1239:1: rule__InitializerExpression__Alternatives : ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) );
    public final void rule__InitializerExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1243:1: ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=LDATE_AND_TIME && LA3_0<=TIME_OF_DAY)||LA3_0==CONTINUE||LA3_0==WSTRING||(LA3_0>=STRING && LA3_0<=DWORD)||(LA3_0>=LDATE && LA3_0<=LWORD)||(LA3_0>=RETURN && LA3_0<=WCHAR)||(LA3_0>=BOOL && LA3_0<=DINT)||(LA3_0>=LINT && LA3_0<=UINT)||LA3_0==WORD||(LA3_0>=EXIT && LA3_0<=LDT)||LA3_0==TOD||LA3_0==DT||(LA3_0>=LD && LA3_0<=LT)||LA3_0==NOT||LA3_0==D||LA3_0==T||LA3_0==LeftParenthesis||LA3_0==PlusSign||LA3_0==HyphenMinus||LA3_0==RULE_BOOL_VALUES||(LA3_0>=RULE_NON_DECIMAL && LA3_0<=RULE_INT)||(LA3_0>=RULE_ID && LA3_0<=RULE_STRING)) ) {
                alt3=1;
            }
            else if ( (LA3_0==LeftSquareBracket) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSTCoreParser.g:1244:2: ( ruleSTExpression )
                    {
                    // InternalSTCoreParser.g:1244:2: ( ruleSTExpression )
                    // InternalSTCoreParser.g:1245:3: ruleSTExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1250:2: ( ruleArrayInitializerExpression )
                    {
                    // InternalSTCoreParser.g:1250:2: ( ruleArrayInitializerExpression )
                    // InternalSTCoreParser.g:1251:3: ruleArrayInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArrayInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializerExpression__Alternatives"


    // $ANTLR start "rule__STStatements__Alternatives"
    // InternalSTCoreParser.g:1260:1: rule__STStatements__Alternatives : ( ( ( rule__STStatements__Group_0__0 ) ) | ( ( rule__STStatements__Group_1__0 ) ) );
    public final void rule__STStatements__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1264:1: ( ( ( rule__STStatements__Group_0__0 ) ) | ( ( rule__STStatements__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==REPEAT||LA4_0==WHILE||LA4_0==CASE||LA4_0==FOR||LA4_0==IF||LA4_0==RULE_ID) ) {
                alt4=1;
            }
            else if ( (LA4_0==Semicolon) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSTCoreParser.g:1265:2: ( ( rule__STStatements__Group_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1265:2: ( ( rule__STStatements__Group_0__0 ) )
                    // InternalSTCoreParser.g:1266:3: ( rule__STStatements__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementsAccess().getGroup_0()); 
                    }
                    // InternalSTCoreParser.g:1267:3: ( rule__STStatements__Group_0__0 )
                    // InternalSTCoreParser.g:1267:4: rule__STStatements__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatements__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementsAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1271:2: ( ( rule__STStatements__Group_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1271:2: ( ( rule__STStatements__Group_1__0 ) )
                    // InternalSTCoreParser.g:1272:3: ( rule__STStatements__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementsAccess().getGroup_1()); 
                    }
                    // InternalSTCoreParser.g:1273:3: ( rule__STStatements__Group_1__0 )
                    // InternalSTCoreParser.g:1273:4: rule__STStatements__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatements__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementsAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatements__Alternatives"


    // $ANTLR start "rule__STStatements__Alternatives_0_0"
    // InternalSTCoreParser.g:1281:1: rule__STStatements__Alternatives_0_0 : ( ( ruleSTBranchStatements ) | ( ruleSTLoopStatements ) | ( ruleSTAssignmentStatement ) );
    public final void rule__STStatements__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1285:1: ( ( ruleSTBranchStatements ) | ( ruleSTLoopStatements ) | ( ruleSTAssignmentStatement ) )
            int alt5=3;
            switch ( input.LA(1) ) {
            case CASE:
            case IF:
                {
                alt5=1;
                }
                break;
            case REPEAT:
            case WHILE:
            case FOR:
                {
                alt5=2;
                }
                break;
            case RULE_ID:
                {
                alt5=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalSTCoreParser.g:1286:2: ( ruleSTBranchStatements )
                    {
                    // InternalSTCoreParser.g:1286:2: ( ruleSTBranchStatements )
                    // InternalSTCoreParser.g:1287:3: ruleSTBranchStatements
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementsAccess().getSTBranchStatementsParserRuleCall_0_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTBranchStatements();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementsAccess().getSTBranchStatementsParserRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1292:2: ( ruleSTLoopStatements )
                    {
                    // InternalSTCoreParser.g:1292:2: ( ruleSTLoopStatements )
                    // InternalSTCoreParser.g:1293:3: ruleSTLoopStatements
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementsAccess().getSTLoopStatementsParserRuleCall_0_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTLoopStatements();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementsAccess().getSTLoopStatementsParserRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1298:2: ( ruleSTAssignmentStatement )
                    {
                    // InternalSTCoreParser.g:1298:2: ( ruleSTAssignmentStatement )
                    // InternalSTCoreParser.g:1299:3: ruleSTAssignmentStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementsAccess().getSTAssignmentStatementParserRuleCall_0_0_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAssignmentStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementsAccess().getSTAssignmentStatementParserRuleCall_0_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatements__Alternatives_0_0"


    // $ANTLR start "rule__STAssignmentStatement__OpAlternatives_1_0"
    // InternalSTCoreParser.g:1308:1: rule__STAssignmentStatement__OpAlternatives_1_0 : ( ( ColonEqualsSign ) | ( EqualsSignGreaterThanSign ) );
    public final void rule__STAssignmentStatement__OpAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1312:1: ( ( ColonEqualsSign ) | ( EqualsSignGreaterThanSign ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==ColonEqualsSign) ) {
                alt6=1;
            }
            else if ( (LA6_0==EqualsSignGreaterThanSign) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSTCoreParser.g:1313:2: ( ColonEqualsSign )
                    {
                    // InternalSTCoreParser.g:1313:2: ( ColonEqualsSign )
                    // InternalSTCoreParser.g:1314:3: ColonEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAssignmentStatementAccess().getOpColonEqualsSignKeyword_1_0_0()); 
                    }
                    match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAssignmentStatementAccess().getOpColonEqualsSignKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1319:2: ( EqualsSignGreaterThanSign )
                    {
                    // InternalSTCoreParser.g:1319:2: ( EqualsSignGreaterThanSign )
                    // InternalSTCoreParser.g:1320:3: EqualsSignGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAssignmentStatementAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_1()); 
                    }
                    match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAssignmentStatementAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__OpAlternatives_1_0"


    // $ANTLR start "rule__STBranchStatements__Alternatives"
    // InternalSTCoreParser.g:1329:1: rule__STBranchStatements__Alternatives : ( ( ruleSTIfStatment ) | ( ruleSTCaseStatement ) );
    public final void rule__STBranchStatements__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1333:1: ( ( ruleSTIfStatment ) | ( ruleSTCaseStatement ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==IF) ) {
                alt7=1;
            }
            else if ( (LA7_0==CASE) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalSTCoreParser.g:1334:2: ( ruleSTIfStatment )
                    {
                    // InternalSTCoreParser.g:1334:2: ( ruleSTIfStatment )
                    // InternalSTCoreParser.g:1335:3: ruleSTIfStatment
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTBranchStatementsAccess().getSTIfStatmentParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTIfStatment();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTBranchStatementsAccess().getSTIfStatmentParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1340:2: ( ruleSTCaseStatement )
                    {
                    // InternalSTCoreParser.g:1340:2: ( ruleSTCaseStatement )
                    // InternalSTCoreParser.g:1341:3: ruleSTCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTBranchStatementsAccess().getSTCaseStatementParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCaseStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTBranchStatementsAccess().getSTCaseStatementParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBranchStatements__Alternatives"


    // $ANTLR start "rule__STLoopStatements__Alternatives"
    // InternalSTCoreParser.g:1350:1: rule__STLoopStatements__Alternatives : ( ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) );
    public final void rule__STLoopStatements__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1354:1: ( ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) )
            int alt8=3;
            switch ( input.LA(1) ) {
            case FOR:
                {
                alt8=1;
                }
                break;
            case WHILE:
                {
                alt8=2;
                }
                break;
            case REPEAT:
                {
                alt8=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalSTCoreParser.g:1355:2: ( ruleSTForStatement )
                    {
                    // InternalSTCoreParser.g:1355:2: ( ruleSTForStatement )
                    // InternalSTCoreParser.g:1356:3: ruleSTForStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLoopStatementsAccess().getSTForStatementParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTForStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLoopStatementsAccess().getSTForStatementParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1361:2: ( ruleSTWhileStatement )
                    {
                    // InternalSTCoreParser.g:1361:2: ( ruleSTWhileStatement )
                    // InternalSTCoreParser.g:1362:3: ruleSTWhileStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLoopStatementsAccess().getSTWhileStatementParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTWhileStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLoopStatementsAccess().getSTWhileStatementParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1367:2: ( ruleSTRepeatStatement )
                    {
                    // InternalSTCoreParser.g:1367:2: ( ruleSTRepeatStatement )
                    // InternalSTCoreParser.g:1368:3: ruleSTRepeatStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLoopStatementsAccess().getSTRepeatStatementParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTRepeatStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLoopStatementsAccess().getSTRepeatStatementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLoopStatements__Alternatives"


    // $ANTLR start "rule__STAndExpression__OpAlternatives_1_0_1_0"
    // InternalSTCoreParser.g:1377:1: rule__STAndExpression__OpAlternatives_1_0_1_0 : ( ( Ampersand ) | ( AND ) );
    public final void rule__STAndExpression__OpAlternatives_1_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1381:1: ( ( Ampersand ) | ( AND ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==Ampersand) ) {
                alt9=1;
            }
            else if ( (LA9_0==AND) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalSTCoreParser.g:1382:2: ( Ampersand )
                    {
                    // InternalSTCoreParser.g:1382:2: ( Ampersand )
                    // InternalSTCoreParser.g:1383:3: Ampersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAndExpressionAccess().getOpAmpersandKeyword_1_0_1_0_0()); 
                    }
                    match(input,Ampersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAndExpressionAccess().getOpAmpersandKeyword_1_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1388:2: ( AND )
                    {
                    // InternalSTCoreParser.g:1388:2: ( AND )
                    // InternalSTCoreParser.g:1389:3: AND
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAndExpressionAccess().getOpANDKeyword_1_0_1_0_1()); 
                    }
                    match(input,AND,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAndExpressionAccess().getOpANDKeyword_1_0_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAlternatives_1_0_1_0"


    // $ANTLR start "rule__STEqualityExpression__OpAlternatives_1_0_1_0"
    // InternalSTCoreParser.g:1398:1: rule__STEqualityExpression__OpAlternatives_1_0_1_0 : ( ( EqualsSign ) | ( LessThanSignGreaterThanSign ) );
    public final void rule__STEqualityExpression__OpAlternatives_1_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1402:1: ( ( EqualsSign ) | ( LessThanSignGreaterThanSign ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==EqualsSign) ) {
                alt10=1;
            }
            else if ( (LA10_0==LessThanSignGreaterThanSign) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalSTCoreParser.g:1403:2: ( EqualsSign )
                    {
                    // InternalSTCoreParser.g:1403:2: ( EqualsSign )
                    // InternalSTCoreParser.g:1404:3: EqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTEqualityExpressionAccess().getOpEqualsSignKeyword_1_0_1_0_0()); 
                    }
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTEqualityExpressionAccess().getOpEqualsSignKeyword_1_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1409:2: ( LessThanSignGreaterThanSign )
                    {
                    // InternalSTCoreParser.g:1409:2: ( LessThanSignGreaterThanSign )
                    // InternalSTCoreParser.g:1410:3: LessThanSignGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTEqualityExpressionAccess().getOpLessThanSignGreaterThanSignKeyword_1_0_1_0_1()); 
                    }
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTEqualityExpressionAccess().getOpLessThanSignGreaterThanSignKeyword_1_0_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAlternatives_1_0_1_0"


    // $ANTLR start "rule__STComparisonExpression__OpAlternatives_1_0_1_0"
    // InternalSTCoreParser.g:1419:1: rule__STComparisonExpression__OpAlternatives_1_0_1_0 : ( ( LessThanSign ) | ( GreaterThanSign ) | ( LessThanSignEqualsSign ) | ( GreaterThanSignEqualsSign ) );
    public final void rule__STComparisonExpression__OpAlternatives_1_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1423:1: ( ( LessThanSign ) | ( GreaterThanSign ) | ( LessThanSignEqualsSign ) | ( GreaterThanSignEqualsSign ) )
            int alt11=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt11=1;
                }
                break;
            case GreaterThanSign:
                {
                alt11=2;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt11=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt11=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalSTCoreParser.g:1424:2: ( LessThanSign )
                    {
                    // InternalSTCoreParser.g:1424:2: ( LessThanSign )
                    // InternalSTCoreParser.g:1425:3: LessThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTComparisonExpressionAccess().getOpLessThanSignKeyword_1_0_1_0_0()); 
                    }
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTComparisonExpressionAccess().getOpLessThanSignKeyword_1_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1430:2: ( GreaterThanSign )
                    {
                    // InternalSTCoreParser.g:1430:2: ( GreaterThanSign )
                    // InternalSTCoreParser.g:1431:3: GreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTComparisonExpressionAccess().getOpGreaterThanSignKeyword_1_0_1_0_1()); 
                    }
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTComparisonExpressionAccess().getOpGreaterThanSignKeyword_1_0_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1436:2: ( LessThanSignEqualsSign )
                    {
                    // InternalSTCoreParser.g:1436:2: ( LessThanSignEqualsSign )
                    // InternalSTCoreParser.g:1437:3: LessThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTComparisonExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_2()); 
                    }
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTComparisonExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1442:2: ( GreaterThanSignEqualsSign )
                    {
                    // InternalSTCoreParser.g:1442:2: ( GreaterThanSignEqualsSign )
                    // InternalSTCoreParser.g:1443:3: GreaterThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTComparisonExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_3()); 
                    }
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTComparisonExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAlternatives_1_0_1_0"


    // $ANTLR start "rule__STAddSubExpression__OpAlternatives_1_0_1_0"
    // InternalSTCoreParser.g:1452:1: rule__STAddSubExpression__OpAlternatives_1_0_1_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__STAddSubExpression__OpAlternatives_1_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1456:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==PlusSign) ) {
                alt12=1;
            }
            else if ( (LA12_0==HyphenMinus) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalSTCoreParser.g:1457:2: ( PlusSign )
                    {
                    // InternalSTCoreParser.g:1457:2: ( PlusSign )
                    // InternalSTCoreParser.g:1458:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAddSubExpressionAccess().getOpPlusSignKeyword_1_0_1_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAddSubExpressionAccess().getOpPlusSignKeyword_1_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1463:2: ( HyphenMinus )
                    {
                    // InternalSTCoreParser.g:1463:2: ( HyphenMinus )
                    // InternalSTCoreParser.g:1464:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAddSubExpressionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAddSubExpressionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAlternatives_1_0_1_0"


    // $ANTLR start "rule__STMulDivModExpression__OpAlternatives_1_0_1_0"
    // InternalSTCoreParser.g:1473:1: rule__STMulDivModExpression__OpAlternatives_1_0_1_0 : ( ( Asterisk ) | ( Solidus ) | ( MOD ) );
    public final void rule__STMulDivModExpression__OpAlternatives_1_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1477:1: ( ( Asterisk ) | ( Solidus ) | ( MOD ) )
            int alt13=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt13=1;
                }
                break;
            case Solidus:
                {
                alt13=2;
                }
                break;
            case MOD:
                {
                alt13=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSTCoreParser.g:1478:2: ( Asterisk )
                    {
                    // InternalSTCoreParser.g:1478:2: ( Asterisk )
                    // InternalSTCoreParser.g:1479:3: Asterisk
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMulDivModExpressionAccess().getOpAsteriskKeyword_1_0_1_0_0()); 
                    }
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMulDivModExpressionAccess().getOpAsteriskKeyword_1_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1484:2: ( Solidus )
                    {
                    // InternalSTCoreParser.g:1484:2: ( Solidus )
                    // InternalSTCoreParser.g:1485:3: Solidus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMulDivModExpressionAccess().getOpSolidusKeyword_1_0_1_0_1()); 
                    }
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMulDivModExpressionAccess().getOpSolidusKeyword_1_0_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1490:2: ( MOD )
                    {
                    // InternalSTCoreParser.g:1490:2: ( MOD )
                    // InternalSTCoreParser.g:1491:3: MOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMulDivModExpressionAccess().getOpMODKeyword_1_0_1_0_2()); 
                    }
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMulDivModExpressionAccess().getOpMODKeyword_1_0_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAlternatives_1_0_1_0"


    // $ANTLR start "rule__STSignumExpression__Alternatives"
    // InternalSTCoreParser.g:1500:1: rule__STSignumExpression__Alternatives : ( ( ruleSTLiteralExpressions ) | ( ruleSTSelectionExpression ) | ( ( rule__STSignumExpression__Group_2__0 ) ) );
    public final void rule__STSignumExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1504:1: ( ( ruleSTLiteralExpressions ) | ( ruleSTSelectionExpression ) | ( ( rule__STSignumExpression__Group_2__0 ) ) )
            int alt14=3;
            switch ( input.LA(1) ) {
            case NOT:
                {
                int LA14_1 = input.LA(2);

                if ( (LA14_1==CONTINUE||LA14_1==RETURN||LA14_1==EXIT||LA14_1==LeftParenthesis||LA14_1==RULE_ID) ) {
                    alt14=3;
                }
                else if ( (LA14_1==DWORD||LA14_1==LREAL||LA14_1==LWORD||(LA14_1>=UDINT && LA14_1<=USINT)||(LA14_1>=BOOL && LA14_1<=BYTE)||LA14_1==DINT||LA14_1==LINT||(LA14_1>=REAL && LA14_1<=SINT)||LA14_1==UINT||LA14_1==WORD||LA14_1==INT||LA14_1==PlusSign||LA14_1==HyphenMinus||LA14_1==RULE_BOOL_VALUES||(LA14_1>=RULE_NON_DECIMAL && LA14_1<=RULE_INT)) ) {
                    alt14=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 1, input);

                    throw nvae;
                }
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case DT:
            case LD:
            case LT:
            case D:
            case T:
            case RULE_BOOL_VALUES:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_STRING:
                {
                alt14=1;
                }
                break;
            case PlusSign:
                {
                int LA14_3 = input.LA(2);

                if ( (LA14_3==RULE_INT) ) {
                    alt14=1;
                }
                else if ( (LA14_3==CONTINUE||LA14_3==RETURN||LA14_3==EXIT||LA14_3==LeftParenthesis||LA14_3==RULE_ID) ) {
                    alt14=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 3, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA14_4 = input.LA(2);

                if ( (LA14_4==CONTINUE||LA14_4==RETURN||LA14_4==EXIT||LA14_4==LeftParenthesis||LA14_4==RULE_ID) ) {
                    alt14=3;
                }
                else if ( (LA14_4==RULE_INT) ) {
                    alt14=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 4, input);

                    throw nvae;
                }
                }
                break;
            case CONTINUE:
            case RETURN:
            case EXIT:
            case LeftParenthesis:
            case RULE_ID:
                {
                alt14=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalSTCoreParser.g:1505:2: ( ruleSTLiteralExpressions )
                    {
                    // InternalSTCoreParser.g:1505:2: ( ruleSTLiteralExpressions )
                    // InternalSTCoreParser.g:1506:3: ruleSTLiteralExpressions
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSTLiteralExpressionsParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTLiteralExpressions();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSTLiteralExpressionsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1511:2: ( ruleSTSelectionExpression )
                    {
                    // InternalSTCoreParser.g:1511:2: ( ruleSTSelectionExpression )
                    // InternalSTCoreParser.g:1512:3: ruleSTSelectionExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSTSelectionExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTSelectionExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSTSelectionExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1517:2: ( ( rule__STSignumExpression__Group_2__0 ) )
                    {
                    // InternalSTCoreParser.g:1517:2: ( ( rule__STSignumExpression__Group_2__0 ) )
                    // InternalSTCoreParser.g:1518:3: ( rule__STSignumExpression__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getGroup_2()); 
                    }
                    // InternalSTCoreParser.g:1519:3: ( rule__STSignumExpression__Group_2__0 )
                    // InternalSTCoreParser.g:1519:4: rule__STSignumExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSignumExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Alternatives"


    // $ANTLR start "rule__STSignumExpression__SignumAlternatives_2_1_0"
    // InternalSTCoreParser.g:1527:1: rule__STSignumExpression__SignumAlternatives_2_1_0 : ( ( HyphenMinus ) | ( PlusSign ) | ( NOT ) );
    public final void rule__STSignumExpression__SignumAlternatives_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1531:1: ( ( HyphenMinus ) | ( PlusSign ) | ( NOT ) )
            int alt15=3;
            switch ( input.LA(1) ) {
            case HyphenMinus:
                {
                alt15=1;
                }
                break;
            case PlusSign:
                {
                alt15=2;
                }
                break;
            case NOT:
                {
                alt15=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalSTCoreParser.g:1532:2: ( HyphenMinus )
                    {
                    // InternalSTCoreParser.g:1532:2: ( HyphenMinus )
                    // InternalSTCoreParser.g:1533:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSignumHyphenMinusKeyword_2_1_0_0()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSignumHyphenMinusKeyword_2_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1538:2: ( PlusSign )
                    {
                    // InternalSTCoreParser.g:1538:2: ( PlusSign )
                    // InternalSTCoreParser.g:1539:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSignumPlusSignKeyword_2_1_0_1()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSignumPlusSignKeyword_2_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1544:2: ( NOT )
                    {
                    // InternalSTCoreParser.g:1544:2: ( NOT )
                    // InternalSTCoreParser.g:1545:3: NOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSignumNOTKeyword_2_1_0_2()); 
                    }
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSignumNOTKeyword_2_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__SignumAlternatives_2_1_0"


    // $ANTLR start "rule__STSelectionExpression__Alternatives_1_1"
    // InternalSTCoreParser.g:1554:1: rule__STSelectionExpression__Alternatives_1_1 : ( ( ( rule__STSelectionExpression__Group_1_1_0__0 ) ) | ( ( rule__STSelectionExpression__Group_1_1_1__0 ) ) );
    public final void rule__STSelectionExpression__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1558:1: ( ( ( rule__STSelectionExpression__Group_1_1_0__0 ) ) | ( ( rule__STSelectionExpression__Group_1_1_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==FullStop) ) {
                alt16=1;
            }
            else if ( (LA16_0==LeftSquareBracket) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSTCoreParser.g:1559:2: ( ( rule__STSelectionExpression__Group_1_1_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1559:2: ( ( rule__STSelectionExpression__Group_1_1_0__0 ) )
                    // InternalSTCoreParser.g:1560:3: ( rule__STSelectionExpression__Group_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_0()); 
                    }
                    // InternalSTCoreParser.g:1561:3: ( rule__STSelectionExpression__Group_1_1_0__0 )
                    // InternalSTCoreParser.g:1561:4: rule__STSelectionExpression__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1565:2: ( ( rule__STSelectionExpression__Group_1_1_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1565:2: ( ( rule__STSelectionExpression__Group_1_1_1__0 ) )
                    // InternalSTCoreParser.g:1566:3: ( rule__STSelectionExpression__Group_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1()); 
                    }
                    // InternalSTCoreParser.g:1567:3: ( rule__STSelectionExpression__Group_1_1_1__0 )
                    // InternalSTCoreParser.g:1567:4: rule__STSelectionExpression__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Alternatives_1_1"


    // $ANTLR start "rule__STAtomicExpression__Alternatives"
    // InternalSTCoreParser.g:1575:1: rule__STAtomicExpression__Alternatives : ( ( ( rule__STAtomicExpression__Group_0__0 ) ) | ( ( rule__STAtomicExpression__Group_1__0 ) ) | ( ( rule__STAtomicExpression__Group_2__0 ) ) | ( ( rule__STAtomicExpression__Group_3__0 ) ) | ( ( rule__STAtomicExpression__Group_4__0 ) ) );
    public final void rule__STAtomicExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1579:1: ( ( ( rule__STAtomicExpression__Group_0__0 ) ) | ( ( rule__STAtomicExpression__Group_1__0 ) ) | ( ( rule__STAtomicExpression__Group_2__0 ) ) | ( ( rule__STAtomicExpression__Group_3__0 ) ) | ( ( rule__STAtomicExpression__Group_4__0 ) ) )
            int alt17=5;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                alt17=1;
                }
                break;
            case RULE_ID:
                {
                alt17=2;
                }
                break;
            case RETURN:
                {
                alt17=3;
                }
                break;
            case CONTINUE:
                {
                alt17=4;
                }
                break;
            case EXIT:
                {
                alt17=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalSTCoreParser.g:1580:2: ( ( rule__STAtomicExpression__Group_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1580:2: ( ( rule__STAtomicExpression__Group_0__0 ) )
                    // InternalSTCoreParser.g:1581:3: ( rule__STAtomicExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_0()); 
                    }
                    // InternalSTCoreParser.g:1582:3: ( rule__STAtomicExpression__Group_0__0 )
                    // InternalSTCoreParser.g:1582:4: rule__STAtomicExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1586:2: ( ( rule__STAtomicExpression__Group_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1586:2: ( ( rule__STAtomicExpression__Group_1__0 ) )
                    // InternalSTCoreParser.g:1587:3: ( rule__STAtomicExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1()); 
                    }
                    // InternalSTCoreParser.g:1588:3: ( rule__STAtomicExpression__Group_1__0 )
                    // InternalSTCoreParser.g:1588:4: rule__STAtomicExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1592:2: ( ( rule__STAtomicExpression__Group_2__0 ) )
                    {
                    // InternalSTCoreParser.g:1592:2: ( ( rule__STAtomicExpression__Group_2__0 ) )
                    // InternalSTCoreParser.g:1593:3: ( rule__STAtomicExpression__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_2()); 
                    }
                    // InternalSTCoreParser.g:1594:3: ( rule__STAtomicExpression__Group_2__0 )
                    // InternalSTCoreParser.g:1594:4: rule__STAtomicExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1598:2: ( ( rule__STAtomicExpression__Group_3__0 ) )
                    {
                    // InternalSTCoreParser.g:1598:2: ( ( rule__STAtomicExpression__Group_3__0 ) )
                    // InternalSTCoreParser.g:1599:3: ( rule__STAtomicExpression__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_3()); 
                    }
                    // InternalSTCoreParser.g:1600:3: ( rule__STAtomicExpression__Group_3__0 )
                    // InternalSTCoreParser.g:1600:4: rule__STAtomicExpression__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:1604:2: ( ( rule__STAtomicExpression__Group_4__0 ) )
                    {
                    // InternalSTCoreParser.g:1604:2: ( ( rule__STAtomicExpression__Group_4__0 ) )
                    // InternalSTCoreParser.g:1605:3: ( rule__STAtomicExpression__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_4()); 
                    }
                    // InternalSTCoreParser.g:1606:3: ( rule__STAtomicExpression__Group_4__0 )
                    // InternalSTCoreParser.g:1606:4: rule__STAtomicExpression__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Alternatives"


    // $ANTLR start "rule__STLiteralExpressions__Alternatives"
    // InternalSTCoreParser.g:1614:1: rule__STLiteralExpressions__Alternatives : ( ( ( rule__STLiteralExpressions__Group_0__0 ) ) | ( ( rule__STLiteralExpressions__Group_1__0 ) ) | ( ( rule__STLiteralExpressions__Group_2__0 ) ) | ( ( rule__STLiteralExpressions__Group_3__0 ) ) | ( ( rule__STLiteralExpressions__Group_4__0 ) ) | ( ( rule__STLiteralExpressions__Group_5__0 ) ) );
    public final void rule__STLiteralExpressions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1618:1: ( ( ( rule__STLiteralExpressions__Group_0__0 ) ) | ( ( rule__STLiteralExpressions__Group_1__0 ) ) | ( ( rule__STLiteralExpressions__Group_2__0 ) ) | ( ( rule__STLiteralExpressions__Group_3__0 ) ) | ( ( rule__STLiteralExpressions__Group_4__0 ) ) | ( ( rule__STLiteralExpressions__Group_5__0 ) ) )
            int alt18=6;
            switch ( input.LA(1) ) {
            case DWORD:
            case LREAL:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case BOOL:
            case BYTE:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case UINT:
            case WORD:
            case INT:
            case NOT:
            case PlusSign:
            case HyphenMinus:
            case RULE_BOOL_VALUES:
            case RULE_NON_DECIMAL:
            case RULE_INT:
                {
                alt18=1;
                }
                break;
            case LDATE:
            case DATE:
            case LD:
            case D:
                {
                alt18=2;
                }
                break;
            case LTIME:
            case TIME:
            case LT:
            case T:
                {
                alt18=3;
                }
                break;
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt18=4;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt18=5;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
            case RULE_STRING:
                {
                alt18=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalSTCoreParser.g:1619:2: ( ( rule__STLiteralExpressions__Group_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1619:2: ( ( rule__STLiteralExpressions__Group_0__0 ) )
                    // InternalSTCoreParser.g:1620:3: ( rule__STLiteralExpressions__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_0()); 
                    }
                    // InternalSTCoreParser.g:1621:3: ( rule__STLiteralExpressions__Group_0__0 )
                    // InternalSTCoreParser.g:1621:4: rule__STLiteralExpressions__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1625:2: ( ( rule__STLiteralExpressions__Group_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1625:2: ( ( rule__STLiteralExpressions__Group_1__0 ) )
                    // InternalSTCoreParser.g:1626:3: ( rule__STLiteralExpressions__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_1()); 
                    }
                    // InternalSTCoreParser.g:1627:3: ( rule__STLiteralExpressions__Group_1__0 )
                    // InternalSTCoreParser.g:1627:4: rule__STLiteralExpressions__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1631:2: ( ( rule__STLiteralExpressions__Group_2__0 ) )
                    {
                    // InternalSTCoreParser.g:1631:2: ( ( rule__STLiteralExpressions__Group_2__0 ) )
                    // InternalSTCoreParser.g:1632:3: ( rule__STLiteralExpressions__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_2()); 
                    }
                    // InternalSTCoreParser.g:1633:3: ( rule__STLiteralExpressions__Group_2__0 )
                    // InternalSTCoreParser.g:1633:4: rule__STLiteralExpressions__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1637:2: ( ( rule__STLiteralExpressions__Group_3__0 ) )
                    {
                    // InternalSTCoreParser.g:1637:2: ( ( rule__STLiteralExpressions__Group_3__0 ) )
                    // InternalSTCoreParser.g:1638:3: ( rule__STLiteralExpressions__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_3()); 
                    }
                    // InternalSTCoreParser.g:1639:3: ( rule__STLiteralExpressions__Group_3__0 )
                    // InternalSTCoreParser.g:1639:4: rule__STLiteralExpressions__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:1643:2: ( ( rule__STLiteralExpressions__Group_4__0 ) )
                    {
                    // InternalSTCoreParser.g:1643:2: ( ( rule__STLiteralExpressions__Group_4__0 ) )
                    // InternalSTCoreParser.g:1644:3: ( rule__STLiteralExpressions__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_4()); 
                    }
                    // InternalSTCoreParser.g:1645:3: ( rule__STLiteralExpressions__Group_4__0 )
                    // InternalSTCoreParser.g:1645:4: rule__STLiteralExpressions__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:1649:2: ( ( rule__STLiteralExpressions__Group_5__0 ) )
                    {
                    // InternalSTCoreParser.g:1649:2: ( ( rule__STLiteralExpressions__Group_5__0 ) )
                    // InternalSTCoreParser.g:1650:3: ( rule__STLiteralExpressions__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_5()); 
                    }
                    // InternalSTCoreParser.g:1651:3: ( rule__STLiteralExpressions__Group_5__0 )
                    // InternalSTCoreParser.g:1651:4: rule__STLiteralExpressions__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Alternatives"


    // $ANTLR start "rule__NUMERIC_LITERAL__KeywordAlternatives_1_0"
    // InternalSTCoreParser.g:1659:1: rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 : ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) | ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) );
    public final void rule__NUMERIC_LITERAL__KeywordAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1663:1: ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) | ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) )
            int alt19=15;
            switch ( input.LA(1) ) {
            case BOOL:
                {
                alt19=1;
                }
                break;
            case BYTE:
                {
                alt19=2;
                }
                break;
            case WORD:
                {
                alt19=3;
                }
                break;
            case DWORD:
                {
                alt19=4;
                }
                break;
            case LWORD:
                {
                alt19=5;
                }
                break;
            case SINT:
                {
                alt19=6;
                }
                break;
            case INT:
                {
                alt19=7;
                }
                break;
            case DINT:
                {
                alt19=8;
                }
                break;
            case LINT:
                {
                alt19=9;
                }
                break;
            case USINT:
                {
                alt19=10;
                }
                break;
            case UINT:
                {
                alt19=11;
                }
                break;
            case UDINT:
                {
                alt19=12;
                }
                break;
            case ULINT:
                {
                alt19=13;
                }
                break;
            case REAL:
                {
                alt19=14;
                }
                break;
            case LREAL:
                {
                alt19=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalSTCoreParser.g:1664:2: ( BOOL )
                    {
                    // InternalSTCoreParser.g:1664:2: ( BOOL )
                    // InternalSTCoreParser.g:1665:3: BOOL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBOOLKeyword_1_0_0()); 
                    }
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBOOLKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1670:2: ( BYTE )
                    {
                    // InternalSTCoreParser.g:1670:2: ( BYTE )
                    // InternalSTCoreParser.g:1671:3: BYTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBYTEKeyword_1_0_1()); 
                    }
                    match(input,BYTE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBYTEKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1676:2: ( WORD )
                    {
                    // InternalSTCoreParser.g:1676:2: ( WORD )
                    // InternalSTCoreParser.g:1677:3: WORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordWORDKeyword_1_0_2()); 
                    }
                    match(input,WORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordWORDKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1682:2: ( DWORD )
                    {
                    // InternalSTCoreParser.g:1682:2: ( DWORD )
                    // InternalSTCoreParser.g:1683:3: DWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDWORDKeyword_1_0_3()); 
                    }
                    match(input,DWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDWORDKeyword_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:1688:2: ( LWORD )
                    {
                    // InternalSTCoreParser.g:1688:2: ( LWORD )
                    // InternalSTCoreParser.g:1689:3: LWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLWORDKeyword_1_0_4()); 
                    }
                    match(input,LWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLWORDKeyword_1_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:1694:2: ( SINT )
                    {
                    // InternalSTCoreParser.g:1694:2: ( SINT )
                    // InternalSTCoreParser.g:1695:3: SINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordSINTKeyword_1_0_5()); 
                    }
                    match(input,SINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordSINTKeyword_1_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTCoreParser.g:1700:2: ( INT )
                    {
                    // InternalSTCoreParser.g:1700:2: ( INT )
                    // InternalSTCoreParser.g:1701:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordINTKeyword_1_0_6()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordINTKeyword_1_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTCoreParser.g:1706:2: ( DINT )
                    {
                    // InternalSTCoreParser.g:1706:2: ( DINT )
                    // InternalSTCoreParser.g:1707:3: DINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDINTKeyword_1_0_7()); 
                    }
                    match(input,DINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDINTKeyword_1_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTCoreParser.g:1712:2: ( LINT )
                    {
                    // InternalSTCoreParser.g:1712:2: ( LINT )
                    // InternalSTCoreParser.g:1713:3: LINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLINTKeyword_1_0_8()); 
                    }
                    match(input,LINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLINTKeyword_1_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTCoreParser.g:1718:2: ( USINT )
                    {
                    // InternalSTCoreParser.g:1718:2: ( USINT )
                    // InternalSTCoreParser.g:1719:3: USINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUSINTKeyword_1_0_9()); 
                    }
                    match(input,USINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUSINTKeyword_1_0_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSTCoreParser.g:1724:2: ( UINT )
                    {
                    // InternalSTCoreParser.g:1724:2: ( UINT )
                    // InternalSTCoreParser.g:1725:3: UINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUINTKeyword_1_0_10()); 
                    }
                    match(input,UINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUINTKeyword_1_0_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSTCoreParser.g:1730:2: ( UDINT )
                    {
                    // InternalSTCoreParser.g:1730:2: ( UDINT )
                    // InternalSTCoreParser.g:1731:3: UDINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUDINTKeyword_1_0_11()); 
                    }
                    match(input,UDINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUDINTKeyword_1_0_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSTCoreParser.g:1736:2: ( ULINT )
                    {
                    // InternalSTCoreParser.g:1736:2: ( ULINT )
                    // InternalSTCoreParser.g:1737:3: ULINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordULINTKeyword_1_0_12()); 
                    }
                    match(input,ULINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordULINTKeyword_1_0_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSTCoreParser.g:1742:2: ( REAL )
                    {
                    // InternalSTCoreParser.g:1742:2: ( REAL )
                    // InternalSTCoreParser.g:1743:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordREALKeyword_1_0_13()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordREALKeyword_1_0_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalSTCoreParser.g:1748:2: ( LREAL )
                    {
                    // InternalSTCoreParser.g:1748:2: ( LREAL )
                    // InternalSTCoreParser.g:1749:3: LREAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLREALKeyword_1_0_14()); 
                    }
                    match(input,LREAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLREALKeyword_1_0_14()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__KeywordAlternatives_1_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__Alternatives_2"
    // InternalSTCoreParser.g:1758:1: rule__NUMERIC_LITERAL__Alternatives_2 : ( ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) ) | ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) ) | ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) ) | ( ( rule__NUMERIC_LITERAL__KeyWordValueAssignment_2_3 ) ) );
    public final void rule__NUMERIC_LITERAL__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1762:1: ( ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) ) | ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) ) | ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) ) | ( ( rule__NUMERIC_LITERAL__KeyWordValueAssignment_2_3 ) ) )
            int alt20=4;
            switch ( input.LA(1) ) {
            case PlusSign:
                {
                int LA20_1 = input.LA(2);

                if ( (LA20_1==RULE_INT) ) {
                    int LA20_3 = input.LA(3);

                    if ( (LA20_3==FullStop) ) {
                        alt20=2;
                    }
                    else if ( (LA20_3==EOF||LA20_3==END_REPEAT||LA20_3==THEN||LA20_3==AND||LA20_3==MOD||(LA20_3>=XOR && LA20_3<=FullStopFullStop)||(LA20_3>=LessThanSignEqualsSign && LA20_3<=LessThanSignGreaterThanSign)||LA20_3==GreaterThanSignEqualsSign||LA20_3==BY||LA20_3==DO||(LA20_3>=OF && LA20_3<=OR)||LA20_3==TO||(LA20_3>=Ampersand && LA20_3<=HyphenMinus)||(LA20_3>=Solidus && LA20_3<=GreaterThanSign)||LA20_3==RightSquareBracket) ) {
                        alt20=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 20, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 1, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA20_2 = input.LA(2);

                if ( (LA20_2==RULE_INT) ) {
                    int LA20_3 = input.LA(3);

                    if ( (LA20_3==FullStop) ) {
                        alt20=2;
                    }
                    else if ( (LA20_3==EOF||LA20_3==END_REPEAT||LA20_3==THEN||LA20_3==AND||LA20_3==MOD||(LA20_3>=XOR && LA20_3<=FullStopFullStop)||(LA20_3>=LessThanSignEqualsSign && LA20_3<=LessThanSignGreaterThanSign)||LA20_3==GreaterThanSignEqualsSign||LA20_3==BY||LA20_3==DO||(LA20_3>=OF && LA20_3<=OR)||LA20_3==TO||(LA20_3>=Ampersand && LA20_3<=HyphenMinus)||(LA20_3>=Solidus && LA20_3<=GreaterThanSign)||LA20_3==RightSquareBracket) ) {
                        alt20=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 20, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                int LA20_3 = input.LA(2);

                if ( (LA20_3==FullStop) ) {
                    alt20=2;
                }
                else if ( (LA20_3==EOF||LA20_3==END_REPEAT||LA20_3==THEN||LA20_3==AND||LA20_3==MOD||(LA20_3>=XOR && LA20_3<=FullStopFullStop)||(LA20_3>=LessThanSignEqualsSign && LA20_3<=LessThanSignGreaterThanSign)||LA20_3==GreaterThanSignEqualsSign||LA20_3==BY||LA20_3==DO||(LA20_3>=OF && LA20_3<=OR)||LA20_3==TO||(LA20_3>=Ampersand && LA20_3<=HyphenMinus)||(LA20_3>=Solidus && LA20_3<=GreaterThanSign)||LA20_3==RightSquareBracket) ) {
                    alt20=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NON_DECIMAL:
                {
                alt20=3;
                }
                break;
            case RULE_BOOL_VALUES:
                {
                alt20=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalSTCoreParser.g:1763:2: ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) )
                    {
                    // InternalSTCoreParser.g:1763:2: ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) )
                    // InternalSTCoreParser.g:1764:3: ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getIntValueAssignment_2_0()); 
                    }
                    // InternalSTCoreParser.g:1765:3: ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 )
                    // InternalSTCoreParser.g:1765:4: rule__NUMERIC_LITERAL__IntValueAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__IntValueAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getIntValueAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1769:2: ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) )
                    {
                    // InternalSTCoreParser.g:1769:2: ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) )
                    // InternalSTCoreParser.g:1770:3: ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getRealValueAssignment_2_1()); 
                    }
                    // InternalSTCoreParser.g:1771:3: ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 )
                    // InternalSTCoreParser.g:1771:4: rule__NUMERIC_LITERAL__RealValueAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__RealValueAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getRealValueAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1775:2: ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) )
                    {
                    // InternalSTCoreParser.g:1775:2: ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) )
                    // InternalSTCoreParser.g:1776:3: ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getHexValueAssignment_2_2()); 
                    }
                    // InternalSTCoreParser.g:1777:3: ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 )
                    // InternalSTCoreParser.g:1777:4: rule__NUMERIC_LITERAL__HexValueAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__HexValueAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getHexValueAssignment_2_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1781:2: ( ( rule__NUMERIC_LITERAL__KeyWordValueAssignment_2_3 ) )
                    {
                    // InternalSTCoreParser.g:1781:2: ( ( rule__NUMERIC_LITERAL__KeyWordValueAssignment_2_3 ) )
                    // InternalSTCoreParser.g:1782:3: ( rule__NUMERIC_LITERAL__KeyWordValueAssignment_2_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeyWordValueAssignment_2_3()); 
                    }
                    // InternalSTCoreParser.g:1783:3: ( rule__NUMERIC_LITERAL__KeyWordValueAssignment_2_3 )
                    // InternalSTCoreParser.g:1783:4: rule__NUMERIC_LITERAL__KeyWordValueAssignment_2_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__KeyWordValueAssignment_2_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeyWordValueAssignment_2_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Alternatives_2"


    // $ANTLR start "rule__DATE_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1791:1: rule__DATE_LITERAL__KeywordAlternatives_0_0 : ( ( DATE ) | ( LDATE ) | ( D ) | ( LD ) );
    public final void rule__DATE_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1795:1: ( ( DATE ) | ( LDATE ) | ( D ) | ( LD ) )
            int alt21=4;
            switch ( input.LA(1) ) {
            case DATE:
                {
                alt21=1;
                }
                break;
            case LDATE:
                {
                alt21=2;
                }
                break;
            case D:
                {
                alt21=3;
                }
                break;
            case LD:
                {
                alt21=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalSTCoreParser.g:1796:2: ( DATE )
                    {
                    // InternalSTCoreParser.g:1796:2: ( DATE )
                    // InternalSTCoreParser.g:1797:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordDATEKeyword_0_0_0()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordDATEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1802:2: ( LDATE )
                    {
                    // InternalSTCoreParser.g:1802:2: ( LDATE )
                    // InternalSTCoreParser.g:1803:3: LDATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordLDATEKeyword_0_0_1()); 
                    }
                    match(input,LDATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordLDATEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1808:2: ( D )
                    {
                    // InternalSTCoreParser.g:1808:2: ( D )
                    // InternalSTCoreParser.g:1809:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordDKeyword_0_0_2()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordDKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1814:2: ( LD )
                    {
                    // InternalSTCoreParser.g:1814:2: ( LD )
                    // InternalSTCoreParser.g:1815:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordLDKeyword_0_0_3()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordLDKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__TIME_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1824:1: rule__TIME_LITERAL__KeywordAlternatives_0_0 : ( ( TIME ) | ( LTIME ) | ( T ) | ( LT ) );
    public final void rule__TIME_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1828:1: ( ( TIME ) | ( LTIME ) | ( T ) | ( LT ) )
            int alt22=4;
            switch ( input.LA(1) ) {
            case TIME:
                {
                alt22=1;
                }
                break;
            case LTIME:
                {
                alt22=2;
                }
                break;
            case T:
                {
                alt22=3;
                }
                break;
            case LT:
                {
                alt22=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSTCoreParser.g:1829:2: ( TIME )
                    {
                    // InternalSTCoreParser.g:1829:2: ( TIME )
                    // InternalSTCoreParser.g:1830:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordTIMEKeyword_0_0_0()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordTIMEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1835:2: ( LTIME )
                    {
                    // InternalSTCoreParser.g:1835:2: ( LTIME )
                    // InternalSTCoreParser.g:1836:3: LTIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordLTIMEKeyword_0_0_1()); 
                    }
                    match(input,LTIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordLTIMEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1841:2: ( T )
                    {
                    // InternalSTCoreParser.g:1841:2: ( T )
                    // InternalSTCoreParser.g:1842:3: T
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordTKeyword_0_0_2()); 
                    }
                    match(input,T,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordTKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1847:2: ( LT )
                    {
                    // InternalSTCoreParser.g:1847:2: ( LT )
                    // InternalSTCoreParser.g:1848:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordLTKeyword_0_0_3()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordLTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1857:1: rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 : ( ( TIME_OF_DAY ) | ( TOD ) | ( LTOD ) );
    public final void rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1861:1: ( ( TIME_OF_DAY ) | ( TOD ) | ( LTOD ) )
            int alt23=3;
            switch ( input.LA(1) ) {
            case TIME_OF_DAY:
                {
                alt23=1;
                }
                break;
            case TOD:
                {
                alt23=2;
                }
                break;
            case LTOD:
                {
                alt23=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalSTCoreParser.g:1862:2: ( TIME_OF_DAY )
                    {
                    // InternalSTCoreParser.g:1862:2: ( TIME_OF_DAY )
                    // InternalSTCoreParser.g:1863:3: TIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTIME_OF_DAYKeyword_0_0_0()); 
                    }
                    match(input,TIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTIME_OF_DAYKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1868:2: ( TOD )
                    {
                    // InternalSTCoreParser.g:1868:2: ( TOD )
                    // InternalSTCoreParser.g:1869:3: TOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTODKeyword_0_0_1()); 
                    }
                    match(input,TOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTODKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1874:2: ( LTOD )
                    {
                    // InternalSTCoreParser.g:1874:2: ( LTOD )
                    // InternalSTCoreParser.g:1875:3: LTOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordLTODKeyword_0_0_2()); 
                    }
                    match(input,LTOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordLTODKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1884:1: rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 : ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) );
    public final void rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1888:1: ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) )
            int alt24=4;
            switch ( input.LA(1) ) {
            case DATE_AND_TIME:
                {
                alt24=1;
                }
                break;
            case LDATE_AND_TIME:
                {
                alt24=2;
                }
                break;
            case DT:
                {
                alt24=3;
                }
                break;
            case LDT:
                {
                alt24=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSTCoreParser.g:1889:2: ( DATE_AND_TIME )
                    {
                    // InternalSTCoreParser.g:1889:2: ( DATE_AND_TIME )
                    // InternalSTCoreParser.g:1890:3: DATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDATE_AND_TIMEKeyword_0_0_0()); 
                    }
                    match(input,DATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDATE_AND_TIMEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1895:2: ( LDATE_AND_TIME )
                    {
                    // InternalSTCoreParser.g:1895:2: ( LDATE_AND_TIME )
                    // InternalSTCoreParser.g:1896:3: LDATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDATE_AND_TIMEKeyword_0_0_1()); 
                    }
                    match(input,LDATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDATE_AND_TIMEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1901:2: ( DT )
                    {
                    // InternalSTCoreParser.g:1901:2: ( DT )
                    // InternalSTCoreParser.g:1902:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDTKeyword_0_0_2()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDTKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1907:2: ( LDT )
                    {
                    // InternalSTCoreParser.g:1907:2: ( LDT )
                    // InternalSTCoreParser.g:1908:3: LDT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDTKeyword_0_0_3()); 
                    }
                    match(input,LDT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__STRING_LITERAL__Alternatives_0"
    // InternalSTCoreParser.g:1917:1: rule__STRING_LITERAL__Alternatives_0 : ( ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) );
    public final void rule__STRING_LITERAL__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1921:1: ( ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) )
            int alt25=4;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt25=1;
                }
                break;
            case WSTRING:
                {
                alt25=2;
                }
                break;
            case CHAR:
                {
                alt25=3;
                }
                break;
            case WCHAR:
                {
                alt25=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalSTCoreParser.g:1922:2: ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) )
                    {
                    // InternalSTCoreParser.g:1922:2: ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) )
                    // InternalSTCoreParser.g:1923:3: ( rule__STRING_LITERAL__KeywordAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getKeywordAssignment_0_0()); 
                    }
                    // InternalSTCoreParser.g:1924:3: ( rule__STRING_LITERAL__KeywordAssignment_0_0 )
                    // InternalSTCoreParser.g:1924:4: rule__STRING_LITERAL__KeywordAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STRING_LITERAL__KeywordAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getKeywordAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1928:2: ( WSTRING )
                    {
                    // InternalSTCoreParser.g:1928:2: ( WSTRING )
                    // InternalSTCoreParser.g:1929:3: WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getWSTRINGKeyword_0_1()); 
                    }
                    match(input,WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getWSTRINGKeyword_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1934:2: ( CHAR )
                    {
                    // InternalSTCoreParser.g:1934:2: ( CHAR )
                    // InternalSTCoreParser.g:1935:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getCHARKeyword_0_2()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getCHARKeyword_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1940:2: ( WCHAR )
                    {
                    // InternalSTCoreParser.g:1940:2: ( WCHAR )
                    // InternalSTCoreParser.g:1941:3: WCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getWCHARKeyword_0_3()); 
                    }
                    match(input,WCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getWCHARKeyword_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Alternatives_0"


    // $ANTLR start "rule__INTEGER__Alternatives_0"
    // InternalSTCoreParser.g:1950:1: rule__INTEGER__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__INTEGER__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1954:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==PlusSign) ) {
                alt26=1;
            }
            else if ( (LA26_0==HyphenMinus) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalSTCoreParser.g:1955:2: ( PlusSign )
                    {
                    // InternalSTCoreParser.g:1955:2: ( PlusSign )
                    // InternalSTCoreParser.g:1956:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getINTEGERAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getINTEGERAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1961:2: ( HyphenMinus )
                    {
                    // InternalSTCoreParser.g:1961:2: ( HyphenMinus )
                    // InternalSTCoreParser.g:1962:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getINTEGERAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getINTEGERAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Alternatives_0"


    // $ANTLR start "rule__REAL__Alternatives_2"
    // InternalSTCoreParser.g:1971:1: rule__REAL__Alternatives_2 : ( ( RULE_EXT_INT ) | ( RULE_INT ) );
    public final void rule__REAL__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1975:1: ( ( RULE_EXT_INT ) | ( RULE_INT ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==RULE_EXT_INT) ) {
                alt27=1;
            }
            else if ( (LA27_0==RULE_INT) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalSTCoreParser.g:1976:2: ( RULE_EXT_INT )
                    {
                    // InternalSTCoreParser.g:1976:2: ( RULE_EXT_INT )
                    // InternalSTCoreParser.g:1977:3: RULE_EXT_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_EXT_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1982:2: ( RULE_INT )
                    {
                    // InternalSTCoreParser.g:1982:2: ( RULE_INT )
                    // InternalSTCoreParser.g:1983:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Alternatives_2"


    // $ANTLR start "rule__MultiBitAccessSpecifier__Alternatives"
    // InternalSTCoreParser.g:1992:1: rule__MultiBitAccessSpecifier__Alternatives : ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) | ( ( FullStop ) ) );
    public final void rule__MultiBitAccessSpecifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1996:1: ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) | ( ( FullStop ) ) )
            int alt28=6;
            switch ( input.LA(1) ) {
            case L:
                {
                alt28=1;
                }
                break;
            case D_1:
                {
                alt28=2;
                }
                break;
            case W:
                {
                alt28=3;
                }
                break;
            case B:
                {
                alt28=4;
                }
                break;
            case X:
                {
                alt28=5;
                }
                break;
            case FullStop:
                {
                alt28=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalSTCoreParser.g:1997:2: ( ( L ) )
                    {
                    // InternalSTCoreParser.g:1997:2: ( ( L ) )
                    // InternalSTCoreParser.g:1998:3: ( L )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getLwordAccessEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:1999:3: ( L )
                    // InternalSTCoreParser.g:1999:4: L
                    {
                    match(input,L,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getLwordAccessEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2003:2: ( ( D_1 ) )
                    {
                    // InternalSTCoreParser.g:2003:2: ( ( D_1 ) )
                    // InternalSTCoreParser.g:2004:3: ( D_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getDwordAccessEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2005:3: ( D_1 )
                    // InternalSTCoreParser.g:2005:4: D_1
                    {
                    match(input,D_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getDwordAccessEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:2009:2: ( ( W ) )
                    {
                    // InternalSTCoreParser.g:2009:2: ( ( W ) )
                    // InternalSTCoreParser.g:2010:3: ( W )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getWordAccessEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:2011:3: ( W )
                    // InternalSTCoreParser.g:2011:4: W
                    {
                    match(input,W,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getWordAccessEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:2015:2: ( ( B ) )
                    {
                    // InternalSTCoreParser.g:2015:2: ( ( B ) )
                    // InternalSTCoreParser.g:2016:3: ( B )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getByteAccessEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTCoreParser.g:2017:3: ( B )
                    // InternalSTCoreParser.g:2017:4: B
                    {
                    match(input,B,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getByteAccessEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:2021:2: ( ( X ) )
                    {
                    // InternalSTCoreParser.g:2021:2: ( ( X ) )
                    // InternalSTCoreParser.g:2022:3: ( X )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessEnumLiteralDeclaration_4()); 
                    }
                    // InternalSTCoreParser.g:2023:3: ( X )
                    // InternalSTCoreParser.g:2023:4: X
                    {
                    match(input,X,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:2027:2: ( ( FullStop ) )
                    {
                    // InternalSTCoreParser.g:2027:2: ( ( FullStop ) )
                    // InternalSTCoreParser.g:2028:3: ( FullStop )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessShortcutEnumLiteralDeclaration_5()); 
                    }
                    // InternalSTCoreParser.g:2029:3: ( FullStop )
                    // InternalSTCoreParser.g:2029:4: FullStop
                    {
                    match(input,FullStop,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessShortcutEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiBitAccessSpecifier__Alternatives"


    // $ANTLR start "rule__VarDeclaration__Group__0"
    // InternalSTCoreParser.g:2037:1: rule__VarDeclaration__Group__0 : rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 ;
    public final void rule__VarDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2041:1: ( rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 )
            // InternalSTCoreParser.g:2042:2: rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__VarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0"


    // $ANTLR start "rule__VarDeclaration__Group__0__Impl"
    // InternalSTCoreParser.g:2049:1: rule__VarDeclaration__Group__0__Impl : ( ( rule__VarDeclaration__NameAssignment_0 ) ) ;
    public final void rule__VarDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2053:1: ( ( ( rule__VarDeclaration__NameAssignment_0 ) ) )
            // InternalSTCoreParser.g:2054:1: ( ( rule__VarDeclaration__NameAssignment_0 ) )
            {
            // InternalSTCoreParser.g:2054:1: ( ( rule__VarDeclaration__NameAssignment_0 ) )
            // InternalSTCoreParser.g:2055:2: ( rule__VarDeclaration__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameAssignment_0()); 
            }
            // InternalSTCoreParser.g:2056:2: ( rule__VarDeclaration__NameAssignment_0 )
            // InternalSTCoreParser.g:2056:3: rule__VarDeclaration__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__1"
    // InternalSTCoreParser.g:2064:1: rule__VarDeclaration__Group__1 : rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 ;
    public final void rule__VarDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2068:1: ( rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 )
            // InternalSTCoreParser.g:2069:2: rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__VarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1"


    // $ANTLR start "rule__VarDeclaration__Group__1__Impl"
    // InternalSTCoreParser.g:2076:1: rule__VarDeclaration__Group__1__Impl : ( ( rule__VarDeclaration__Group_1__0 )? ) ;
    public final void rule__VarDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2080:1: ( ( ( rule__VarDeclaration__Group_1__0 )? ) )
            // InternalSTCoreParser.g:2081:1: ( ( rule__VarDeclaration__Group_1__0 )? )
            {
            // InternalSTCoreParser.g:2081:1: ( ( rule__VarDeclaration__Group_1__0 )? )
            // InternalSTCoreParser.g:2082:2: ( rule__VarDeclaration__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:2083:2: ( rule__VarDeclaration__Group_1__0 )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==AT) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalSTCoreParser.g:2083:3: rule__VarDeclaration__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__2"
    // InternalSTCoreParser.g:2091:1: rule__VarDeclaration__Group__2 : rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 ;
    public final void rule__VarDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2095:1: ( rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 )
            // InternalSTCoreParser.g:2096:2: rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__VarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2"


    // $ANTLR start "rule__VarDeclaration__Group__2__Impl"
    // InternalSTCoreParser.g:2103:1: rule__VarDeclaration__Group__2__Impl : ( Colon ) ;
    public final void rule__VarDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2107:1: ( ( Colon ) )
            // InternalSTCoreParser.g:2108:1: ( Colon )
            {
            // InternalSTCoreParser.g:2108:1: ( Colon )
            // InternalSTCoreParser.g:2109:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__3"
    // InternalSTCoreParser.g:2118:1: rule__VarDeclaration__Group__3 : rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 ;
    public final void rule__VarDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2122:1: ( rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 )
            // InternalSTCoreParser.g:2123:2: rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__VarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3"


    // $ANTLR start "rule__VarDeclaration__Group__3__Impl"
    // InternalSTCoreParser.g:2130:1: rule__VarDeclaration__Group__3__Impl : ( ( rule__VarDeclaration__Group_3__0 )? ) ;
    public final void rule__VarDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2134:1: ( ( ( rule__VarDeclaration__Group_3__0 )? ) )
            // InternalSTCoreParser.g:2135:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            {
            // InternalSTCoreParser.g:2135:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            // InternalSTCoreParser.g:2136:2: ( rule__VarDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }
            // InternalSTCoreParser.g:2137:2: ( rule__VarDeclaration__Group_3__0 )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==ARRAY) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalSTCoreParser.g:2137:3: rule__VarDeclaration__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__4"
    // InternalSTCoreParser.g:2145:1: rule__VarDeclaration__Group__4 : rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 ;
    public final void rule__VarDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2149:1: ( rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 )
            // InternalSTCoreParser.g:2150:2: rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4"


    // $ANTLR start "rule__VarDeclaration__Group__4__Impl"
    // InternalSTCoreParser.g:2157:1: rule__VarDeclaration__Group__4__Impl : ( ( rule__VarDeclaration__TypeAssignment_4 ) ) ;
    public final void rule__VarDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2161:1: ( ( ( rule__VarDeclaration__TypeAssignment_4 ) ) )
            // InternalSTCoreParser.g:2162:1: ( ( rule__VarDeclaration__TypeAssignment_4 ) )
            {
            // InternalSTCoreParser.g:2162:1: ( ( rule__VarDeclaration__TypeAssignment_4 ) )
            // InternalSTCoreParser.g:2163:2: ( rule__VarDeclaration__TypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_4()); 
            }
            // InternalSTCoreParser.g:2164:2: ( rule__VarDeclaration__TypeAssignment_4 )
            // InternalSTCoreParser.g:2164:3: rule__VarDeclaration__TypeAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__TypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__5"
    // InternalSTCoreParser.g:2172:1: rule__VarDeclaration__Group__5 : rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 ;
    public final void rule__VarDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2176:1: ( rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 )
            // InternalSTCoreParser.g:2177:2: rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5"


    // $ANTLR start "rule__VarDeclaration__Group__5__Impl"
    // InternalSTCoreParser.g:2184:1: rule__VarDeclaration__Group__5__Impl : ( ( rule__VarDeclaration__Group_5__0 )? ) ;
    public final void rule__VarDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2188:1: ( ( ( rule__VarDeclaration__Group_5__0 )? ) )
            // InternalSTCoreParser.g:2189:1: ( ( rule__VarDeclaration__Group_5__0 )? )
            {
            // InternalSTCoreParser.g:2189:1: ( ( rule__VarDeclaration__Group_5__0 )? )
            // InternalSTCoreParser.g:2190:2: ( rule__VarDeclaration__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_5()); 
            }
            // InternalSTCoreParser.g:2191:2: ( rule__VarDeclaration__Group_5__0 )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==LeftSquareBracket) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalSTCoreParser.g:2191:3: rule__VarDeclaration__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__6"
    // InternalSTCoreParser.g:2199:1: rule__VarDeclaration__Group__6 : rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 ;
    public final void rule__VarDeclaration__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2203:1: ( rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 )
            // InternalSTCoreParser.g:2204:2: rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6"


    // $ANTLR start "rule__VarDeclaration__Group__6__Impl"
    // InternalSTCoreParser.g:2211:1: rule__VarDeclaration__Group__6__Impl : ( ( rule__VarDeclaration__Group_6__0 )? ) ;
    public final void rule__VarDeclaration__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2215:1: ( ( ( rule__VarDeclaration__Group_6__0 )? ) )
            // InternalSTCoreParser.g:2216:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            {
            // InternalSTCoreParser.g:2216:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            // InternalSTCoreParser.g:2217:2: ( rule__VarDeclaration__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }
            // InternalSTCoreParser.g:2218:2: ( rule__VarDeclaration__Group_6__0 )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==ColonEqualsSign) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalSTCoreParser.g:2218:3: rule__VarDeclaration__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__7"
    // InternalSTCoreParser.g:2226:1: rule__VarDeclaration__Group__7 : rule__VarDeclaration__Group__7__Impl ;
    public final void rule__VarDeclaration__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2230:1: ( rule__VarDeclaration__Group__7__Impl )
            // InternalSTCoreParser.g:2231:2: rule__VarDeclaration__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7"


    // $ANTLR start "rule__VarDeclaration__Group__7__Impl"
    // InternalSTCoreParser.g:2237:1: rule__VarDeclaration__Group__7__Impl : ( Semicolon ) ;
    public final void rule__VarDeclaration__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2241:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:2242:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:2242:1: ( Semicolon )
            // InternalSTCoreParser.g:2243:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_7()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_1__0"
    // InternalSTCoreParser.g:2253:1: rule__VarDeclaration__Group_1__0 : rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1 ;
    public final void rule__VarDeclaration__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2257:1: ( rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1 )
            // InternalSTCoreParser.g:2258:2: rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__VarDeclaration__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__0"


    // $ANTLR start "rule__VarDeclaration__Group_1__0__Impl"
    // InternalSTCoreParser.g:2265:1: rule__VarDeclaration__Group_1__0__Impl : ( AT ) ;
    public final void rule__VarDeclaration__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2269:1: ( ( AT ) )
            // InternalSTCoreParser.g:2270:1: ( AT )
            {
            // InternalSTCoreParser.g:2270:1: ( AT )
            // InternalSTCoreParser.g:2271:2: AT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getATKeyword_1_0()); 
            }
            match(input,AT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getATKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_1__1"
    // InternalSTCoreParser.g:2280:1: rule__VarDeclaration__Group_1__1 : rule__VarDeclaration__Group_1__1__Impl ;
    public final void rule__VarDeclaration__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2284:1: ( rule__VarDeclaration__Group_1__1__Impl )
            // InternalSTCoreParser.g:2285:2: rule__VarDeclaration__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__1"


    // $ANTLR start "rule__VarDeclaration__Group_1__1__Impl"
    // InternalSTCoreParser.g:2291:1: rule__VarDeclaration__Group_1__1__Impl : ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) ) ;
    public final void rule__VarDeclaration__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2295:1: ( ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:2296:1: ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:2296:1: ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) )
            // InternalSTCoreParser.g:2297:2: ( rule__VarDeclaration__LocatedAtAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:2298:2: ( rule__VarDeclaration__LocatedAtAssignment_1_1 )
            // InternalSTCoreParser.g:2298:3: rule__VarDeclaration__LocatedAtAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__LocatedAtAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__0"
    // InternalSTCoreParser.g:2307:1: rule__VarDeclaration__Group_3__0 : rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 ;
    public final void rule__VarDeclaration__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2311:1: ( rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 )
            // InternalSTCoreParser.g:2312:2: rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1
            {
            pushFollow(FOLLOW_8);
            rule__VarDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0"


    // $ANTLR start "rule__VarDeclaration__Group_3__0__Impl"
    // InternalSTCoreParser.g:2319:1: rule__VarDeclaration__Group_3__0__Impl : ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) ) ;
    public final void rule__VarDeclaration__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2323:1: ( ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) ) )
            // InternalSTCoreParser.g:2324:1: ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) )
            {
            // InternalSTCoreParser.g:2324:1: ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) )
            // InternalSTCoreParser.g:2325:2: ( rule__VarDeclaration__ArrayAssignment_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayAssignment_3_0()); 
            }
            // InternalSTCoreParser.g:2326:2: ( rule__VarDeclaration__ArrayAssignment_3_0 )
            // InternalSTCoreParser.g:2326:3: rule__VarDeclaration__ArrayAssignment_3_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__ArrayAssignment_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayAssignment_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__1"
    // InternalSTCoreParser.g:2334:1: rule__VarDeclaration__Group_3__1 : rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2 ;
    public final void rule__VarDeclaration__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2338:1: ( rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2 )
            // InternalSTCoreParser.g:2339:2: rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2
            {
            pushFollow(FOLLOW_9);
            rule__VarDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1"


    // $ANTLR start "rule__VarDeclaration__Group_3__1__Impl"
    // InternalSTCoreParser.g:2346:1: rule__VarDeclaration__Group_3__1__Impl : ( ( rule__VarDeclaration__Alternatives_3_1 ) ) ;
    public final void rule__VarDeclaration__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2350:1: ( ( ( rule__VarDeclaration__Alternatives_3_1 ) ) )
            // InternalSTCoreParser.g:2351:1: ( ( rule__VarDeclaration__Alternatives_3_1 ) )
            {
            // InternalSTCoreParser.g:2351:1: ( ( rule__VarDeclaration__Alternatives_3_1 ) )
            // InternalSTCoreParser.g:2352:2: ( rule__VarDeclaration__Alternatives_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getAlternatives_3_1()); 
            }
            // InternalSTCoreParser.g:2353:2: ( rule__VarDeclaration__Alternatives_3_1 )
            // InternalSTCoreParser.g:2353:3: rule__VarDeclaration__Alternatives_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Alternatives_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getAlternatives_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__2"
    // InternalSTCoreParser.g:2361:1: rule__VarDeclaration__Group_3__2 : rule__VarDeclaration__Group_3__2__Impl ;
    public final void rule__VarDeclaration__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2365:1: ( rule__VarDeclaration__Group_3__2__Impl )
            // InternalSTCoreParser.g:2366:2: rule__VarDeclaration__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__2"


    // $ANTLR start "rule__VarDeclaration__Group_3__2__Impl"
    // InternalSTCoreParser.g:2372:1: rule__VarDeclaration__Group_3__2__Impl : ( OF ) ;
    public final void rule__VarDeclaration__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2376:1: ( ( OF ) )
            // InternalSTCoreParser.g:2377:1: ( OF )
            {
            // InternalSTCoreParser.g:2377:1: ( OF )
            // InternalSTCoreParser.g:2378:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getOFKeyword_3_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getOFKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__0"
    // InternalSTCoreParser.g:2388:1: rule__VarDeclaration__Group_3_1_0__0 : rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1 ;
    public final void rule__VarDeclaration__Group_3_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2392:1: ( rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1 )
            // InternalSTCoreParser.g:2393:2: rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclaration__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__0__Impl"
    // InternalSTCoreParser.g:2400:1: rule__VarDeclaration__Group_3_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2404:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2405:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2405:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2406:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__1"
    // InternalSTCoreParser.g:2415:1: rule__VarDeclaration__Group_3_1_0__1 : rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2 ;
    public final void rule__VarDeclaration__Group_3_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2419:1: ( rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2 )
            // InternalSTCoreParser.g:2420:2: rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__1__Impl"
    // InternalSTCoreParser.g:2427:1: rule__VarDeclaration__Group_3_1_0__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2431:1: ( ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) ) )
            // InternalSTCoreParser.g:2432:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) )
            {
            // InternalSTCoreParser.g:2432:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) )
            // InternalSTCoreParser.g:2433:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_1()); 
            }
            // InternalSTCoreParser.g:2434:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_1 )
            // InternalSTCoreParser.g:2434:3: rule__VarDeclaration__RangesAssignment_3_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_3_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__2"
    // InternalSTCoreParser.g:2442:1: rule__VarDeclaration__Group_3_1_0__2 : rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3 ;
    public final void rule__VarDeclaration__Group_3_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2446:1: ( rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3 )
            // InternalSTCoreParser.g:2447:2: rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__2"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__2__Impl"
    // InternalSTCoreParser.g:2454:1: rule__VarDeclaration__Group_3_1_0__2__Impl : ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_3_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2458:1: ( ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* ) )
            // InternalSTCoreParser.g:2459:1: ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* )
            {
            // InternalSTCoreParser.g:2459:1: ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* )
            // InternalSTCoreParser.g:2460:2: ( rule__VarDeclaration__Group_3_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0_2()); 
            }
            // InternalSTCoreParser.g:2461:2: ( rule__VarDeclaration__Group_3_1_0_2__0 )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==Comma) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalSTCoreParser.g:2461:3: rule__VarDeclaration__Group_3_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__VarDeclaration__Group_3_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__3"
    // InternalSTCoreParser.g:2469:1: rule__VarDeclaration__Group_3_1_0__3 : rule__VarDeclaration__Group_3_1_0__3__Impl ;
    public final void rule__VarDeclaration__Group_3_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2473:1: ( rule__VarDeclaration__Group_3_1_0__3__Impl )
            // InternalSTCoreParser.g:2474:2: rule__VarDeclaration__Group_3_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__3"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__3__Impl"
    // InternalSTCoreParser.g:2480:1: rule__VarDeclaration__Group_3_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2484:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2485:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2485:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2486:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__0"
    // InternalSTCoreParser.g:2496:1: rule__VarDeclaration__Group_3_1_0_2__0 : rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1 ;
    public final void rule__VarDeclaration__Group_3_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2500:1: ( rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1 )
            // InternalSTCoreParser.g:2501:2: rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclaration__Group_3_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__0__Impl"
    // InternalSTCoreParser.g:2508:1: rule__VarDeclaration__Group_3_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_3_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2512:1: ( ( Comma ) )
            // InternalSTCoreParser.g:2513:1: ( Comma )
            {
            // InternalSTCoreParser.g:2513:1: ( Comma )
            // InternalSTCoreParser.g:2514:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__1"
    // InternalSTCoreParser.g:2523:1: rule__VarDeclaration__Group_3_1_0_2__1 : rule__VarDeclaration__Group_3_1_0_2__1__Impl ;
    public final void rule__VarDeclaration__Group_3_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2527:1: ( rule__VarDeclaration__Group_3_1_0_2__1__Impl )
            // InternalSTCoreParser.g:2528:2: rule__VarDeclaration__Group_3_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__1__Impl"
    // InternalSTCoreParser.g:2534:1: rule__VarDeclaration__Group_3_1_0_2__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2538:1: ( ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) ) )
            // InternalSTCoreParser.g:2539:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) )
            {
            // InternalSTCoreParser.g:2539:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) )
            // InternalSTCoreParser.g:2540:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_2_1()); 
            }
            // InternalSTCoreParser.g:2541:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 )
            // InternalSTCoreParser.g:2541:3: rule__VarDeclaration__RangesAssignment_3_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_3_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__0"
    // InternalSTCoreParser.g:2550:1: rule__VarDeclaration__Group_3_1_1__0 : rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1 ;
    public final void rule__VarDeclaration__Group_3_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2554:1: ( rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1 )
            // InternalSTCoreParser.g:2555:2: rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__VarDeclaration__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__0__Impl"
    // InternalSTCoreParser.g:2562:1: rule__VarDeclaration__Group_3_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2566:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2567:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2567:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2568:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__1"
    // InternalSTCoreParser.g:2577:1: rule__VarDeclaration__Group_3_1_1__1 : rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2 ;
    public final void rule__VarDeclaration__Group_3_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2581:1: ( rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2 )
            // InternalSTCoreParser.g:2582:2: rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__1__Impl"
    // InternalSTCoreParser.g:2589:1: rule__VarDeclaration__Group_3_1_1__1__Impl : ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2593:1: ( ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) ) )
            // InternalSTCoreParser.g:2594:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) )
            {
            // InternalSTCoreParser.g:2594:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) )
            // InternalSTCoreParser.g:2595:2: ( rule__VarDeclaration__CountAssignment_3_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_1()); 
            }
            // InternalSTCoreParser.g:2596:2: ( rule__VarDeclaration__CountAssignment_3_1_1_1 )
            // InternalSTCoreParser.g:2596:3: rule__VarDeclaration__CountAssignment_3_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_3_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__2"
    // InternalSTCoreParser.g:2604:1: rule__VarDeclaration__Group_3_1_1__2 : rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3 ;
    public final void rule__VarDeclaration__Group_3_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2608:1: ( rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3 )
            // InternalSTCoreParser.g:2609:2: rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__2"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__2__Impl"
    // InternalSTCoreParser.g:2616:1: rule__VarDeclaration__Group_3_1_1__2__Impl : ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_3_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2620:1: ( ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* ) )
            // InternalSTCoreParser.g:2621:1: ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* )
            {
            // InternalSTCoreParser.g:2621:1: ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* )
            // InternalSTCoreParser.g:2622:2: ( rule__VarDeclaration__Group_3_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1_2()); 
            }
            // InternalSTCoreParser.g:2623:2: ( rule__VarDeclaration__Group_3_1_1_2__0 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==Comma) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalSTCoreParser.g:2623:3: rule__VarDeclaration__Group_3_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__VarDeclaration__Group_3_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__3"
    // InternalSTCoreParser.g:2631:1: rule__VarDeclaration__Group_3_1_1__3 : rule__VarDeclaration__Group_3_1_1__3__Impl ;
    public final void rule__VarDeclaration__Group_3_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2635:1: ( rule__VarDeclaration__Group_3_1_1__3__Impl )
            // InternalSTCoreParser.g:2636:2: rule__VarDeclaration__Group_3_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__3"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__3__Impl"
    // InternalSTCoreParser.g:2642:1: rule__VarDeclaration__Group_3_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2646:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2647:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2647:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2648:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__0"
    // InternalSTCoreParser.g:2658:1: rule__VarDeclaration__Group_3_1_1_2__0 : rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1 ;
    public final void rule__VarDeclaration__Group_3_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2662:1: ( rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1 )
            // InternalSTCoreParser.g:2663:2: rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1
            {
            pushFollow(FOLLOW_13);
            rule__VarDeclaration__Group_3_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__0__Impl"
    // InternalSTCoreParser.g:2670:1: rule__VarDeclaration__Group_3_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_3_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2674:1: ( ( Comma ) )
            // InternalSTCoreParser.g:2675:1: ( Comma )
            {
            // InternalSTCoreParser.g:2675:1: ( Comma )
            // InternalSTCoreParser.g:2676:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__1"
    // InternalSTCoreParser.g:2685:1: rule__VarDeclaration__Group_3_1_1_2__1 : rule__VarDeclaration__Group_3_1_1_2__1__Impl ;
    public final void rule__VarDeclaration__Group_3_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2689:1: ( rule__VarDeclaration__Group_3_1_1_2__1__Impl )
            // InternalSTCoreParser.g:2690:2: rule__VarDeclaration__Group_3_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__1__Impl"
    // InternalSTCoreParser.g:2696:1: rule__VarDeclaration__Group_3_1_1_2__1__Impl : ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2700:1: ( ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) ) )
            // InternalSTCoreParser.g:2701:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) )
            {
            // InternalSTCoreParser.g:2701:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) )
            // InternalSTCoreParser.g:2702:2: ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_2_1()); 
            }
            // InternalSTCoreParser.g:2703:2: ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 )
            // InternalSTCoreParser.g:2703:3: rule__VarDeclaration__CountAssignment_3_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_3_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__0"
    // InternalSTCoreParser.g:2712:1: rule__VarDeclaration__Group_5__0 : rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1 ;
    public final void rule__VarDeclaration__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2716:1: ( rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1 )
            // InternalSTCoreParser.g:2717:2: rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclaration__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__0"


    // $ANTLR start "rule__VarDeclaration__Group_5__0__Impl"
    // InternalSTCoreParser.g:2724:1: rule__VarDeclaration__Group_5__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2728:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2729:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2729:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2730:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_5_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__1"
    // InternalSTCoreParser.g:2739:1: rule__VarDeclaration__Group_5__1 : rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2 ;
    public final void rule__VarDeclaration__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2743:1: ( rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2 )
            // InternalSTCoreParser.g:2744:2: rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2
            {
            pushFollow(FOLLOW_14);
            rule__VarDeclaration__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__1"


    // $ANTLR start "rule__VarDeclaration__Group_5__1__Impl"
    // InternalSTCoreParser.g:2751:1: rule__VarDeclaration__Group_5__1__Impl : ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) ) ;
    public final void rule__VarDeclaration__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2755:1: ( ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) ) )
            // InternalSTCoreParser.g:2756:1: ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) )
            {
            // InternalSTCoreParser.g:2756:1: ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) )
            // InternalSTCoreParser.g:2757:2: ( rule__VarDeclaration__MaxLengthAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_5_1()); 
            }
            // InternalSTCoreParser.g:2758:2: ( rule__VarDeclaration__MaxLengthAssignment_5_1 )
            // InternalSTCoreParser.g:2758:3: rule__VarDeclaration__MaxLengthAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__MaxLengthAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__2"
    // InternalSTCoreParser.g:2766:1: rule__VarDeclaration__Group_5__2 : rule__VarDeclaration__Group_5__2__Impl ;
    public final void rule__VarDeclaration__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2770:1: ( rule__VarDeclaration__Group_5__2__Impl )
            // InternalSTCoreParser.g:2771:2: rule__VarDeclaration__Group_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__2"


    // $ANTLR start "rule__VarDeclaration__Group_5__2__Impl"
    // InternalSTCoreParser.g:2777:1: rule__VarDeclaration__Group_5__2__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2781:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2782:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2782:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2783:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_5_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__0"
    // InternalSTCoreParser.g:2793:1: rule__VarDeclaration__Group_6__0 : rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 ;
    public final void rule__VarDeclaration__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2797:1: ( rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 )
            // InternalSTCoreParser.g:2798:2: rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1
            {
            pushFollow(FOLLOW_15);
            rule__VarDeclaration__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0"


    // $ANTLR start "rule__VarDeclaration__Group_6__0__Impl"
    // InternalSTCoreParser.g:2805:1: rule__VarDeclaration__Group_6__0__Impl : ( ColonEqualsSign ) ;
    public final void rule__VarDeclaration__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2809:1: ( ( ColonEqualsSign ) )
            // InternalSTCoreParser.g:2810:1: ( ColonEqualsSign )
            {
            // InternalSTCoreParser.g:2810:1: ( ColonEqualsSign )
            // InternalSTCoreParser.g:2811:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_6_0()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__1"
    // InternalSTCoreParser.g:2820:1: rule__VarDeclaration__Group_6__1 : rule__VarDeclaration__Group_6__1__Impl ;
    public final void rule__VarDeclaration__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2824:1: ( rule__VarDeclaration__Group_6__1__Impl )
            // InternalSTCoreParser.g:2825:2: rule__VarDeclaration__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1"


    // $ANTLR start "rule__VarDeclaration__Group_6__1__Impl"
    // InternalSTCoreParser.g:2831:1: rule__VarDeclaration__Group_6__1__Impl : ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) ) ;
    public final void rule__VarDeclaration__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2835:1: ( ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) ) )
            // InternalSTCoreParser.g:2836:1: ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) )
            {
            // InternalSTCoreParser.g:2836:1: ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) )
            // InternalSTCoreParser.g:2837:2: ( rule__VarDeclaration__DefaultValueAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_6_1()); 
            }
            // InternalSTCoreParser.g:2838:2: ( rule__VarDeclaration__DefaultValueAssignment_6_1 )
            // InternalSTCoreParser.g:2838:3: rule__VarDeclaration__DefaultValueAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__DefaultValueAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0"
    // InternalSTCoreParser.g:2847:1: rule__ArrayInitializerExpression__Group__0 : rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 ;
    public final void rule__ArrayInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2851:1: ( rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 )
            // InternalSTCoreParser.g:2852:2: rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__ArrayInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0__Impl"
    // InternalSTCoreParser.g:2859:1: rule__ArrayInitializerExpression__Group__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2863:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2864:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2864:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2865:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1"
    // InternalSTCoreParser.g:2874:1: rule__ArrayInitializerExpression__Group__1 : rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 ;
    public final void rule__ArrayInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2878:1: ( rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 )
            // InternalSTCoreParser.g:2879:2: rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__ArrayInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1__Impl"
    // InternalSTCoreParser.g:2886:1: rule__ArrayInitializerExpression__Group__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2890:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalSTCoreParser.g:2891:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalSTCoreParser.g:2891:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            // InternalSTCoreParser.g:2892:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalSTCoreParser.g:2893:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            // InternalSTCoreParser.g:2893:3: rule__ArrayInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2"
    // InternalSTCoreParser.g:2901:1: rule__ArrayInitializerExpression__Group__2 : rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 ;
    public final void rule__ArrayInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2905:1: ( rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 )
            // InternalSTCoreParser.g:2906:2: rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__ArrayInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2__Impl"
    // InternalSTCoreParser.g:2913:1: rule__ArrayInitializerExpression__Group__2__Impl : ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) ;
    public final void rule__ArrayInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2917:1: ( ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) )
            // InternalSTCoreParser.g:2918:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            {
            // InternalSTCoreParser.g:2918:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            // InternalSTCoreParser.g:2919:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalSTCoreParser.g:2920:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==Comma) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalSTCoreParser.g:2920:3: rule__ArrayInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__ArrayInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3"
    // InternalSTCoreParser.g:2928:1: rule__ArrayInitializerExpression__Group__3 : rule__ArrayInitializerExpression__Group__3__Impl ;
    public final void rule__ArrayInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2932:1: ( rule__ArrayInitializerExpression__Group__3__Impl )
            // InternalSTCoreParser.g:2933:2: rule__ArrayInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3__Impl"
    // InternalSTCoreParser.g:2939:1: rule__ArrayInitializerExpression__Group__3__Impl : ( RightSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2943:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2944:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2944:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2945:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0"
    // InternalSTCoreParser.g:2955:1: rule__ArrayInitializerExpression__Group_2__0 : rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 ;
    public final void rule__ArrayInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2959:1: ( rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 )
            // InternalSTCoreParser.g:2960:2: rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_10);
            rule__ArrayInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0__Impl"
    // InternalSTCoreParser.g:2967:1: rule__ArrayInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__ArrayInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2971:1: ( ( Comma ) )
            // InternalSTCoreParser.g:2972:1: ( Comma )
            {
            // InternalSTCoreParser.g:2972:1: ( Comma )
            // InternalSTCoreParser.g:2973:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1"
    // InternalSTCoreParser.g:2982:1: rule__ArrayInitializerExpression__Group_2__1 : rule__ArrayInitializerExpression__Group_2__1__Impl ;
    public final void rule__ArrayInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2986:1: ( rule__ArrayInitializerExpression__Group_2__1__Impl )
            // InternalSTCoreParser.g:2987:2: rule__ArrayInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1__Impl"
    // InternalSTCoreParser.g:2993:1: rule__ArrayInitializerExpression__Group_2__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2997:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalSTCoreParser.g:2998:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalSTCoreParser.g:2998:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalSTCoreParser.g:2999:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalSTCoreParser.g:3000:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            // InternalSTCoreParser.g:3000:3: rule__ArrayInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__0"
    // InternalSTCoreParser.g:3009:1: rule__ArrayInitElement__Group__0 : rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 ;
    public final void rule__ArrayInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3013:1: ( rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 )
            // InternalSTCoreParser.g:3014:2: rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__ArrayInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0"


    // $ANTLR start "rule__ArrayInitElement__Group__0__Impl"
    // InternalSTCoreParser.g:3021:1: rule__ArrayInitElement__Group__0__Impl : ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) ;
    public final void rule__ArrayInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3025:1: ( ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) )
            // InternalSTCoreParser.g:3026:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            {
            // InternalSTCoreParser.g:3026:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            // InternalSTCoreParser.g:3027:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }
            // InternalSTCoreParser.g:3028:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            // InternalSTCoreParser.g:3028:3: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__IndexOrInitExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__1"
    // InternalSTCoreParser.g:3036:1: rule__ArrayInitElement__Group__1 : rule__ArrayInitElement__Group__1__Impl ;
    public final void rule__ArrayInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3040:1: ( rule__ArrayInitElement__Group__1__Impl )
            // InternalSTCoreParser.g:3041:2: rule__ArrayInitElement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1"


    // $ANTLR start "rule__ArrayInitElement__Group__1__Impl"
    // InternalSTCoreParser.g:3047:1: rule__ArrayInitElement__Group__1__Impl : ( ( rule__ArrayInitElement__Group_1__0 )? ) ;
    public final void rule__ArrayInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3051:1: ( ( ( rule__ArrayInitElement__Group_1__0 )? ) )
            // InternalSTCoreParser.g:3052:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            {
            // InternalSTCoreParser.g:3052:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            // InternalSTCoreParser.g:3053:2: ( rule__ArrayInitElement__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:3054:2: ( rule__ArrayInitElement__Group_1__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==LeftParenthesis) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalSTCoreParser.g:3054:3: rule__ArrayInitElement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ArrayInitElement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0"
    // InternalSTCoreParser.g:3063:1: rule__ArrayInitElement__Group_1__0 : rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 ;
    public final void rule__ArrayInitElement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3067:1: ( rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 )
            // InternalSTCoreParser.g:3068:2: rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__ArrayInitElement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0__Impl"
    // InternalSTCoreParser.g:3075:1: rule__ArrayInitElement__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3079:1: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:3080:1: ( LeftParenthesis )
            {
            // InternalSTCoreParser.g:3080:1: ( LeftParenthesis )
            // InternalSTCoreParser.g:3081:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1"
    // InternalSTCoreParser.g:3090:1: rule__ArrayInitElement__Group_1__1 : rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 ;
    public final void rule__ArrayInitElement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3094:1: ( rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 )
            // InternalSTCoreParser.g:3095:2: rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2
            {
            pushFollow(FOLLOW_17);
            rule__ArrayInitElement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1__Impl"
    // InternalSTCoreParser.g:3102:1: rule__ArrayInitElement__Group_1__1__Impl : ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) ;
    public final void rule__ArrayInitElement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3106:1: ( ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:3107:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:3107:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            // InternalSTCoreParser.g:3108:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:3109:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            // InternalSTCoreParser.g:3109:3: rule__ArrayInitElement__InitExpressionAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__InitExpressionAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2"
    // InternalSTCoreParser.g:3117:1: rule__ArrayInitElement__Group_1__2 : rule__ArrayInitElement__Group_1__2__Impl ;
    public final void rule__ArrayInitElement__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3121:1: ( rule__ArrayInitElement__Group_1__2__Impl )
            // InternalSTCoreParser.g:3122:2: rule__ArrayInitElement__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2__Impl"
    // InternalSTCoreParser.g:3128:1: rule__ArrayInitElement__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3132:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:3133:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:3133:1: ( RightParenthesis )
            // InternalSTCoreParser.g:3134:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2__Impl"


    // $ANTLR start "rule__STStatements__Group_0__0"
    // InternalSTCoreParser.g:3144:1: rule__STStatements__Group_0__0 : rule__STStatements__Group_0__0__Impl rule__STStatements__Group_0__1 ;
    public final void rule__STStatements__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3148:1: ( rule__STStatements__Group_0__0__Impl rule__STStatements__Group_0__1 )
            // InternalSTCoreParser.g:3149:2: rule__STStatements__Group_0__0__Impl rule__STStatements__Group_0__1
            {
            pushFollow(FOLLOW_18);
            rule__STStatements__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatements__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatements__Group_0__0"


    // $ANTLR start "rule__STStatements__Group_0__0__Impl"
    // InternalSTCoreParser.g:3156:1: rule__STStatements__Group_0__0__Impl : ( ( rule__STStatements__Alternatives_0_0 ) ) ;
    public final void rule__STStatements__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3160:1: ( ( ( rule__STStatements__Alternatives_0_0 ) ) )
            // InternalSTCoreParser.g:3161:1: ( ( rule__STStatements__Alternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:3161:1: ( ( rule__STStatements__Alternatives_0_0 ) )
            // InternalSTCoreParser.g:3162:2: ( rule__STStatements__Alternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementsAccess().getAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:3163:2: ( rule__STStatements__Alternatives_0_0 )
            // InternalSTCoreParser.g:3163:3: rule__STStatements__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStatements__Alternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementsAccess().getAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatements__Group_0__0__Impl"


    // $ANTLR start "rule__STStatements__Group_0__1"
    // InternalSTCoreParser.g:3171:1: rule__STStatements__Group_0__1 : rule__STStatements__Group_0__1__Impl ;
    public final void rule__STStatements__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3175:1: ( rule__STStatements__Group_0__1__Impl )
            // InternalSTCoreParser.g:3176:2: rule__STStatements__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatements__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatements__Group_0__1"


    // $ANTLR start "rule__STStatements__Group_0__1__Impl"
    // InternalSTCoreParser.g:3182:1: rule__STStatements__Group_0__1__Impl : ( Semicolon ) ;
    public final void rule__STStatements__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3186:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3187:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3187:1: ( Semicolon )
            // InternalSTCoreParser.g:3188:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementsAccess().getSemicolonKeyword_0_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementsAccess().getSemicolonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatements__Group_0__1__Impl"


    // $ANTLR start "rule__STStatements__Group_1__0"
    // InternalSTCoreParser.g:3198:1: rule__STStatements__Group_1__0 : rule__STStatements__Group_1__0__Impl rule__STStatements__Group_1__1 ;
    public final void rule__STStatements__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3202:1: ( rule__STStatements__Group_1__0__Impl rule__STStatements__Group_1__1 )
            // InternalSTCoreParser.g:3203:2: rule__STStatements__Group_1__0__Impl rule__STStatements__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STStatements__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatements__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatements__Group_1__0"


    // $ANTLR start "rule__STStatements__Group_1__0__Impl"
    // InternalSTCoreParser.g:3210:1: rule__STStatements__Group_1__0__Impl : ( () ) ;
    public final void rule__STStatements__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3214:1: ( ( () ) )
            // InternalSTCoreParser.g:3215:1: ( () )
            {
            // InternalSTCoreParser.g:3215:1: ( () )
            // InternalSTCoreParser.g:3216:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementsAccess().getSTStatementsAction_1_0()); 
            }
            // InternalSTCoreParser.g:3217:2: ()
            // InternalSTCoreParser.g:3217:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementsAccess().getSTStatementsAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatements__Group_1__0__Impl"


    // $ANTLR start "rule__STStatements__Group_1__1"
    // InternalSTCoreParser.g:3225:1: rule__STStatements__Group_1__1 : rule__STStatements__Group_1__1__Impl ;
    public final void rule__STStatements__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3229:1: ( rule__STStatements__Group_1__1__Impl )
            // InternalSTCoreParser.g:3230:2: rule__STStatements__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatements__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatements__Group_1__1"


    // $ANTLR start "rule__STStatements__Group_1__1__Impl"
    // InternalSTCoreParser.g:3236:1: rule__STStatements__Group_1__1__Impl : ( Semicolon ) ;
    public final void rule__STStatements__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3240:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3241:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3241:1: ( Semicolon )
            // InternalSTCoreParser.g:3242:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementsAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementsAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatements__Group_1__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__0"
    // InternalSTCoreParser.g:3252:1: rule__STAssignmentStatement__Group__0 : rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 ;
    public final void rule__STAssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3256:1: ( rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 )
            // InternalSTCoreParser.g:3257:2: rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__STAssignmentStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0"


    // $ANTLR start "rule__STAssignmentStatement__Group__0__Impl"
    // InternalSTCoreParser.g:3264:1: rule__STAssignmentStatement__Group__0__Impl : ( ( rule__STAssignmentStatement__LhsAssignment_0 ) ) ;
    public final void rule__STAssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3268:1: ( ( ( rule__STAssignmentStatement__LhsAssignment_0 ) ) )
            // InternalSTCoreParser.g:3269:1: ( ( rule__STAssignmentStatement__LhsAssignment_0 ) )
            {
            // InternalSTCoreParser.g:3269:1: ( ( rule__STAssignmentStatement__LhsAssignment_0 ) )
            // InternalSTCoreParser.g:3270:2: ( rule__STAssignmentStatement__LhsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsAssignment_0()); 
            }
            // InternalSTCoreParser.g:3271:2: ( rule__STAssignmentStatement__LhsAssignment_0 )
            // InternalSTCoreParser.g:3271:3: rule__STAssignmentStatement__LhsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__LhsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__1"
    // InternalSTCoreParser.g:3279:1: rule__STAssignmentStatement__Group__1 : rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 ;
    public final void rule__STAssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3283:1: ( rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 )
            // InternalSTCoreParser.g:3284:2: rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__STAssignmentStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1"


    // $ANTLR start "rule__STAssignmentStatement__Group__1__Impl"
    // InternalSTCoreParser.g:3291:1: rule__STAssignmentStatement__Group__1__Impl : ( ( rule__STAssignmentStatement__OpAssignment_1 ) ) ;
    public final void rule__STAssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3295:1: ( ( ( rule__STAssignmentStatement__OpAssignment_1 ) ) )
            // InternalSTCoreParser.g:3296:1: ( ( rule__STAssignmentStatement__OpAssignment_1 ) )
            {
            // InternalSTCoreParser.g:3296:1: ( ( rule__STAssignmentStatement__OpAssignment_1 ) )
            // InternalSTCoreParser.g:3297:2: ( rule__STAssignmentStatement__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getOpAssignment_1()); 
            }
            // InternalSTCoreParser.g:3298:2: ( rule__STAssignmentStatement__OpAssignment_1 )
            // InternalSTCoreParser.g:3298:3: rule__STAssignmentStatement__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__2"
    // InternalSTCoreParser.g:3306:1: rule__STAssignmentStatement__Group__2 : rule__STAssignmentStatement__Group__2__Impl ;
    public final void rule__STAssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3310:1: ( rule__STAssignmentStatement__Group__2__Impl )
            // InternalSTCoreParser.g:3311:2: rule__STAssignmentStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2"


    // $ANTLR start "rule__STAssignmentStatement__Group__2__Impl"
    // InternalSTCoreParser.g:3317:1: rule__STAssignmentStatement__Group__2__Impl : ( ( rule__STAssignmentStatement__RhsAssignment_2 ) ) ;
    public final void rule__STAssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3321:1: ( ( ( rule__STAssignmentStatement__RhsAssignment_2 ) ) )
            // InternalSTCoreParser.g:3322:1: ( ( rule__STAssignmentStatement__RhsAssignment_2 ) )
            {
            // InternalSTCoreParser.g:3322:1: ( ( rule__STAssignmentStatement__RhsAssignment_2 ) )
            // InternalSTCoreParser.g:3323:2: ( rule__STAssignmentStatement__RhsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRhsAssignment_2()); 
            }
            // InternalSTCoreParser.g:3324:2: ( rule__STAssignmentStatement__RhsAssignment_2 )
            // InternalSTCoreParser.g:3324:3: rule__STAssignmentStatement__RhsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__RhsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRhsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__STIfStatment__Group__0"
    // InternalSTCoreParser.g:3333:1: rule__STIfStatment__Group__0 : rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1 ;
    public final void rule__STIfStatment__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3337:1: ( rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1 )
            // InternalSTCoreParser.g:3338:2: rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STIfStatment__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__0"


    // $ANTLR start "rule__STIfStatment__Group__0__Impl"
    // InternalSTCoreParser.g:3345:1: rule__STIfStatment__Group__0__Impl : ( IF ) ;
    public final void rule__STIfStatment__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3349:1: ( ( IF ) )
            // InternalSTCoreParser.g:3350:1: ( IF )
            {
            // InternalSTCoreParser.g:3350:1: ( IF )
            // InternalSTCoreParser.g:3351:2: IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getIFKeyword_0()); 
            }
            match(input,IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__0__Impl"


    // $ANTLR start "rule__STIfStatment__Group__1"
    // InternalSTCoreParser.g:3360:1: rule__STIfStatment__Group__1 : rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2 ;
    public final void rule__STIfStatment__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3364:1: ( rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2 )
            // InternalSTCoreParser.g:3365:2: rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2
            {
            pushFollow(FOLLOW_21);
            rule__STIfStatment__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__1"


    // $ANTLR start "rule__STIfStatment__Group__1__Impl"
    // InternalSTCoreParser.g:3372:1: rule__STIfStatment__Group__1__Impl : ( ( rule__STIfStatment__ConditionAssignment_1 ) ) ;
    public final void rule__STIfStatment__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3376:1: ( ( ( rule__STIfStatment__ConditionAssignment_1 ) ) )
            // InternalSTCoreParser.g:3377:1: ( ( rule__STIfStatment__ConditionAssignment_1 ) )
            {
            // InternalSTCoreParser.g:3377:1: ( ( rule__STIfStatment__ConditionAssignment_1 ) )
            // InternalSTCoreParser.g:3378:2: ( rule__STIfStatment__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getConditionAssignment_1()); 
            }
            // InternalSTCoreParser.g:3379:2: ( rule__STIfStatment__ConditionAssignment_1 )
            // InternalSTCoreParser.g:3379:3: rule__STIfStatment__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__1__Impl"


    // $ANTLR start "rule__STIfStatment__Group__2"
    // InternalSTCoreParser.g:3387:1: rule__STIfStatment__Group__2 : rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3 ;
    public final void rule__STIfStatment__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3391:1: ( rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3 )
            // InternalSTCoreParser.g:3392:2: rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__STIfStatment__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__2"


    // $ANTLR start "rule__STIfStatment__Group__2__Impl"
    // InternalSTCoreParser.g:3399:1: rule__STIfStatment__Group__2__Impl : ( THEN ) ;
    public final void rule__STIfStatment__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3403:1: ( ( THEN ) )
            // InternalSTCoreParser.g:3404:1: ( THEN )
            {
            // InternalSTCoreParser.g:3404:1: ( THEN )
            // InternalSTCoreParser.g:3405:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__2__Impl"


    // $ANTLR start "rule__STIfStatment__Group__3"
    // InternalSTCoreParser.g:3414:1: rule__STIfStatment__Group__3 : rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4 ;
    public final void rule__STIfStatment__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3418:1: ( rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4 )
            // InternalSTCoreParser.g:3419:2: rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4
            {
            pushFollow(FOLLOW_22);
            rule__STIfStatment__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__3"


    // $ANTLR start "rule__STIfStatment__Group__3__Impl"
    // InternalSTCoreParser.g:3426:1: rule__STIfStatment__Group__3__Impl : ( ( rule__STIfStatment__StatementsAssignment_3 )* ) ;
    public final void rule__STIfStatment__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3430:1: ( ( ( rule__STIfStatment__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:3431:1: ( ( rule__STIfStatment__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:3431:1: ( ( rule__STIfStatment__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:3432:2: ( rule__STIfStatment__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:3433:2: ( rule__STIfStatment__StatementsAssignment_3 )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==REPEAT||LA37_0==WHILE||LA37_0==CASE||LA37_0==FOR||LA37_0==IF||LA37_0==Semicolon||LA37_0==RULE_ID) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // InternalSTCoreParser.g:3433:3: rule__STIfStatment__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STIfStatment__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__3__Impl"


    // $ANTLR start "rule__STIfStatment__Group__4"
    // InternalSTCoreParser.g:3441:1: rule__STIfStatment__Group__4 : rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5 ;
    public final void rule__STIfStatment__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3445:1: ( rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5 )
            // InternalSTCoreParser.g:3446:2: rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5
            {
            pushFollow(FOLLOW_22);
            rule__STIfStatment__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__4"


    // $ANTLR start "rule__STIfStatment__Group__4__Impl"
    // InternalSTCoreParser.g:3453:1: rule__STIfStatment__Group__4__Impl : ( ( rule__STIfStatment__ElseifsAssignment_4 )* ) ;
    public final void rule__STIfStatment__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3457:1: ( ( ( rule__STIfStatment__ElseifsAssignment_4 )* ) )
            // InternalSTCoreParser.g:3458:1: ( ( rule__STIfStatment__ElseifsAssignment_4 )* )
            {
            // InternalSTCoreParser.g:3458:1: ( ( rule__STIfStatment__ElseifsAssignment_4 )* )
            // InternalSTCoreParser.g:3459:2: ( rule__STIfStatment__ElseifsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseifsAssignment_4()); 
            }
            // InternalSTCoreParser.g:3460:2: ( rule__STIfStatment__ElseifsAssignment_4 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==ELSIF) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalSTCoreParser.g:3460:3: rule__STIfStatment__ElseifsAssignment_4
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__STIfStatment__ElseifsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseifsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__4__Impl"


    // $ANTLR start "rule__STIfStatment__Group__5"
    // InternalSTCoreParser.g:3468:1: rule__STIfStatment__Group__5 : rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6 ;
    public final void rule__STIfStatment__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3472:1: ( rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6 )
            // InternalSTCoreParser.g:3473:2: rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6
            {
            pushFollow(FOLLOW_22);
            rule__STIfStatment__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__5"


    // $ANTLR start "rule__STIfStatment__Group__5__Impl"
    // InternalSTCoreParser.g:3480:1: rule__STIfStatment__Group__5__Impl : ( ( rule__STIfStatment__ElseAssignment_5 )? ) ;
    public final void rule__STIfStatment__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3484:1: ( ( ( rule__STIfStatment__ElseAssignment_5 )? ) )
            // InternalSTCoreParser.g:3485:1: ( ( rule__STIfStatment__ElseAssignment_5 )? )
            {
            // InternalSTCoreParser.g:3485:1: ( ( rule__STIfStatment__ElseAssignment_5 )? )
            // InternalSTCoreParser.g:3486:2: ( rule__STIfStatment__ElseAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseAssignment_5()); 
            }
            // InternalSTCoreParser.g:3487:2: ( rule__STIfStatment__ElseAssignment_5 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==ELSE) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalSTCoreParser.g:3487:3: rule__STIfStatment__ElseAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__STIfStatment__ElseAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__5__Impl"


    // $ANTLR start "rule__STIfStatment__Group__6"
    // InternalSTCoreParser.g:3495:1: rule__STIfStatment__Group__6 : rule__STIfStatment__Group__6__Impl ;
    public final void rule__STIfStatment__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3499:1: ( rule__STIfStatment__Group__6__Impl )
            // InternalSTCoreParser.g:3500:2: rule__STIfStatment__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__6"


    // $ANTLR start "rule__STIfStatment__Group__6__Impl"
    // InternalSTCoreParser.g:3506:1: rule__STIfStatment__Group__6__Impl : ( END_IF ) ;
    public final void rule__STIfStatment__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3510:1: ( ( END_IF ) )
            // InternalSTCoreParser.g:3511:1: ( END_IF )
            {
            // InternalSTCoreParser.g:3511:1: ( END_IF )
            // InternalSTCoreParser.g:3512:2: END_IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getEND_IFKeyword_6()); 
            }
            match(input,END_IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getEND_IFKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__6__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__0"
    // InternalSTCoreParser.g:3522:1: rule__STElseIfPart__Group__0 : rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 ;
    public final void rule__STElseIfPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3526:1: ( rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 )
            // InternalSTCoreParser.g:3527:2: rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STElseIfPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0"


    // $ANTLR start "rule__STElseIfPart__Group__0__Impl"
    // InternalSTCoreParser.g:3534:1: rule__STElseIfPart__Group__0__Impl : ( ELSIF ) ;
    public final void rule__STElseIfPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3538:1: ( ( ELSIF ) )
            // InternalSTCoreParser.g:3539:1: ( ELSIF )
            {
            // InternalSTCoreParser.g:3539:1: ( ELSIF )
            // InternalSTCoreParser.g:3540:2: ELSIF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }
            match(input,ELSIF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__1"
    // InternalSTCoreParser.g:3549:1: rule__STElseIfPart__Group__1 : rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 ;
    public final void rule__STElseIfPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3553:1: ( rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 )
            // InternalSTCoreParser.g:3554:2: rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2
            {
            pushFollow(FOLLOW_21);
            rule__STElseIfPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1"


    // $ANTLR start "rule__STElseIfPart__Group__1__Impl"
    // InternalSTCoreParser.g:3561:1: rule__STElseIfPart__Group__1__Impl : ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) ;
    public final void rule__STElseIfPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3565:1: ( ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) )
            // InternalSTCoreParser.g:3566:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            {
            // InternalSTCoreParser.g:3566:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            // InternalSTCoreParser.g:3567:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }
            // InternalSTCoreParser.g:3568:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            // InternalSTCoreParser.g:3568:3: rule__STElseIfPart__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__2"
    // InternalSTCoreParser.g:3576:1: rule__STElseIfPart__Group__2 : rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 ;
    public final void rule__STElseIfPart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3580:1: ( rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 )
            // InternalSTCoreParser.g:3581:2: rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__STElseIfPart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2"


    // $ANTLR start "rule__STElseIfPart__Group__2__Impl"
    // InternalSTCoreParser.g:3588:1: rule__STElseIfPart__Group__2__Impl : ( THEN ) ;
    public final void rule__STElseIfPart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3592:1: ( ( THEN ) )
            // InternalSTCoreParser.g:3593:1: ( THEN )
            {
            // InternalSTCoreParser.g:3593:1: ( THEN )
            // InternalSTCoreParser.g:3594:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__3"
    // InternalSTCoreParser.g:3603:1: rule__STElseIfPart__Group__3 : rule__STElseIfPart__Group__3__Impl ;
    public final void rule__STElseIfPart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3607:1: ( rule__STElseIfPart__Group__3__Impl )
            // InternalSTCoreParser.g:3608:2: rule__STElseIfPart__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3"


    // $ANTLR start "rule__STElseIfPart__Group__3__Impl"
    // InternalSTCoreParser.g:3614:1: rule__STElseIfPart__Group__3__Impl : ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) ;
    public final void rule__STElseIfPart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3618:1: ( ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:3619:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:3619:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:3620:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:3621:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==REPEAT||LA40_0==WHILE||LA40_0==CASE||LA40_0==FOR||LA40_0==IF||LA40_0==Semicolon||LA40_0==RULE_ID) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalSTCoreParser.g:3621:3: rule__STElseIfPart__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STElseIfPart__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__0"
    // InternalSTCoreParser.g:3630:1: rule__STCaseStatement__Group__0 : rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 ;
    public final void rule__STCaseStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3634:1: ( rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 )
            // InternalSTCoreParser.g:3635:2: rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STCaseStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0"


    // $ANTLR start "rule__STCaseStatement__Group__0__Impl"
    // InternalSTCoreParser.g:3642:1: rule__STCaseStatement__Group__0__Impl : ( CASE ) ;
    public final void rule__STCaseStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3646:1: ( ( CASE ) )
            // InternalSTCoreParser.g:3647:1: ( CASE )
            {
            // InternalSTCoreParser.g:3647:1: ( CASE )
            // InternalSTCoreParser.g:3648:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__1"
    // InternalSTCoreParser.g:3657:1: rule__STCaseStatement__Group__1 : rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 ;
    public final void rule__STCaseStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3661:1: ( rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 )
            // InternalSTCoreParser.g:3662:2: rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__STCaseStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1"


    // $ANTLR start "rule__STCaseStatement__Group__1__Impl"
    // InternalSTCoreParser.g:3669:1: rule__STCaseStatement__Group__1__Impl : ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) ;
    public final void rule__STCaseStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3673:1: ( ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) )
            // InternalSTCoreParser.g:3674:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            {
            // InternalSTCoreParser.g:3674:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            // InternalSTCoreParser.g:3675:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }
            // InternalSTCoreParser.g:3676:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            // InternalSTCoreParser.g:3676:3: rule__STCaseStatement__SelectorAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__SelectorAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__2"
    // InternalSTCoreParser.g:3684:1: rule__STCaseStatement__Group__2 : rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 ;
    public final void rule__STCaseStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3688:1: ( rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 )
            // InternalSTCoreParser.g:3689:2: rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STCaseStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2"


    // $ANTLR start "rule__STCaseStatement__Group__2__Impl"
    // InternalSTCoreParser.g:3696:1: rule__STCaseStatement__Group__2__Impl : ( OF ) ;
    public final void rule__STCaseStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3700:1: ( ( OF ) )
            // InternalSTCoreParser.g:3701:1: ( OF )
            {
            // InternalSTCoreParser.g:3701:1: ( OF )
            // InternalSTCoreParser.g:3702:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__3"
    // InternalSTCoreParser.g:3711:1: rule__STCaseStatement__Group__3 : rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 ;
    public final void rule__STCaseStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3715:1: ( rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 )
            // InternalSTCoreParser.g:3716:2: rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4
            {
            pushFollow(FOLLOW_24);
            rule__STCaseStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3"


    // $ANTLR start "rule__STCaseStatement__Group__3__Impl"
    // InternalSTCoreParser.g:3723:1: rule__STCaseStatement__Group__3__Impl : ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) ;
    public final void rule__STCaseStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3727:1: ( ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) )
            // InternalSTCoreParser.g:3728:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            {
            // InternalSTCoreParser.g:3728:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            // InternalSTCoreParser.g:3729:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            {
            // InternalSTCoreParser.g:3729:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) )
            // InternalSTCoreParser.g:3730:3: ( rule__STCaseStatement__CasesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTCoreParser.g:3731:3: ( rule__STCaseStatement__CasesAssignment_3 )
            // InternalSTCoreParser.g:3731:4: rule__STCaseStatement__CasesAssignment_3
            {
            pushFollow(FOLLOW_25);
            rule__STCaseStatement__CasesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }

            // InternalSTCoreParser.g:3734:2: ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            // InternalSTCoreParser.g:3735:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTCoreParser.g:3736:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( ((LA41_0>=LDATE_AND_TIME && LA41_0<=TIME_OF_DAY)||LA41_0==CONTINUE||LA41_0==WSTRING||(LA41_0>=STRING && LA41_0<=DWORD)||(LA41_0>=LDATE && LA41_0<=LWORD)||(LA41_0>=RETURN && LA41_0<=WCHAR)||(LA41_0>=BOOL && LA41_0<=DINT)||(LA41_0>=LINT && LA41_0<=UINT)||LA41_0==WORD||(LA41_0>=EXIT && LA41_0<=LDT)||LA41_0==TOD||LA41_0==DT||(LA41_0>=LD && LA41_0<=LT)||LA41_0==NOT||LA41_0==D||LA41_0==T||LA41_0==LeftParenthesis||LA41_0==PlusSign||LA41_0==HyphenMinus||LA41_0==RULE_BOOL_VALUES||(LA41_0>=RULE_NON_DECIMAL && LA41_0<=RULE_INT)||(LA41_0>=RULE_ID && LA41_0<=RULE_STRING)) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalSTCoreParser.g:3736:4: rule__STCaseStatement__CasesAssignment_3
            	    {
            	    pushFollow(FOLLOW_25);
            	    rule__STCaseStatement__CasesAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__4"
    // InternalSTCoreParser.g:3745:1: rule__STCaseStatement__Group__4 : rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 ;
    public final void rule__STCaseStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3749:1: ( rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 )
            // InternalSTCoreParser.g:3750:2: rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5
            {
            pushFollow(FOLLOW_24);
            rule__STCaseStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4"


    // $ANTLR start "rule__STCaseStatement__Group__4__Impl"
    // InternalSTCoreParser.g:3757:1: rule__STCaseStatement__Group__4__Impl : ( ( rule__STCaseStatement__ElseAssignment_4 )? ) ;
    public final void rule__STCaseStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3761:1: ( ( ( rule__STCaseStatement__ElseAssignment_4 )? ) )
            // InternalSTCoreParser.g:3762:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            {
            // InternalSTCoreParser.g:3762:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            // InternalSTCoreParser.g:3763:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }
            // InternalSTCoreParser.g:3764:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==ELSE) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalSTCoreParser.g:3764:3: rule__STCaseStatement__ElseAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCaseStatement__ElseAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__5"
    // InternalSTCoreParser.g:3772:1: rule__STCaseStatement__Group__5 : rule__STCaseStatement__Group__5__Impl ;
    public final void rule__STCaseStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3776:1: ( rule__STCaseStatement__Group__5__Impl )
            // InternalSTCoreParser.g:3777:2: rule__STCaseStatement__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5"


    // $ANTLR start "rule__STCaseStatement__Group__5__Impl"
    // InternalSTCoreParser.g:3783:1: rule__STCaseStatement__Group__5__Impl : ( END_CASE ) ;
    public final void rule__STCaseStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3787:1: ( ( END_CASE ) )
            // InternalSTCoreParser.g:3788:1: ( END_CASE )
            {
            // InternalSTCoreParser.g:3788:1: ( END_CASE )
            // InternalSTCoreParser.g:3789:2: END_CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }
            match(input,END_CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5__Impl"


    // $ANTLR start "rule__STCaseCases__Group__0"
    // InternalSTCoreParser.g:3799:1: rule__STCaseCases__Group__0 : rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 ;
    public final void rule__STCaseCases__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3803:1: ( rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 )
            // InternalSTCoreParser.g:3804:2: rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__STCaseCases__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0"


    // $ANTLR start "rule__STCaseCases__Group__0__Impl"
    // InternalSTCoreParser.g:3811:1: rule__STCaseCases__Group__0__Impl : ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) ;
    public final void rule__STCaseCases__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3815:1: ( ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) )
            // InternalSTCoreParser.g:3816:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            {
            // InternalSTCoreParser.g:3816:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            // InternalSTCoreParser.g:3817:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }
            // InternalSTCoreParser.g:3818:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            // InternalSTCoreParser.g:3818:3: rule__STCaseCases__ConditionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group__1"
    // InternalSTCoreParser.g:3826:1: rule__STCaseCases__Group__1 : rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 ;
    public final void rule__STCaseCases__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3830:1: ( rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 )
            // InternalSTCoreParser.g:3831:2: rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2
            {
            pushFollow(FOLLOW_26);
            rule__STCaseCases__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1"


    // $ANTLR start "rule__STCaseCases__Group__1__Impl"
    // InternalSTCoreParser.g:3838:1: rule__STCaseCases__Group__1__Impl : ( ( rule__STCaseCases__Group_1__0 )* ) ;
    public final void rule__STCaseCases__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3842:1: ( ( ( rule__STCaseCases__Group_1__0 )* ) )
            // InternalSTCoreParser.g:3843:1: ( ( rule__STCaseCases__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:3843:1: ( ( rule__STCaseCases__Group_1__0 )* )
            // InternalSTCoreParser.g:3844:2: ( rule__STCaseCases__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:3845:2: ( rule__STCaseCases__Group_1__0 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==Comma) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalSTCoreParser.g:3845:3: rule__STCaseCases__Group_1__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STCaseCases__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1__Impl"


    // $ANTLR start "rule__STCaseCases__Group__2"
    // InternalSTCoreParser.g:3853:1: rule__STCaseCases__Group__2 : rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 ;
    public final void rule__STCaseCases__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3857:1: ( rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 )
            // InternalSTCoreParser.g:3858:2: rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__STCaseCases__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2"


    // $ANTLR start "rule__STCaseCases__Group__2__Impl"
    // InternalSTCoreParser.g:3865:1: rule__STCaseCases__Group__2__Impl : ( Colon ) ;
    public final void rule__STCaseCases__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3869:1: ( ( Colon ) )
            // InternalSTCoreParser.g:3870:1: ( Colon )
            {
            // InternalSTCoreParser.g:3870:1: ( Colon )
            // InternalSTCoreParser.g:3871:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2__Impl"


    // $ANTLR start "rule__STCaseCases__Group__3"
    // InternalSTCoreParser.g:3880:1: rule__STCaseCases__Group__3 : rule__STCaseCases__Group__3__Impl ;
    public final void rule__STCaseCases__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3884:1: ( rule__STCaseCases__Group__3__Impl )
            // InternalSTCoreParser.g:3885:2: rule__STCaseCases__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3"


    // $ANTLR start "rule__STCaseCases__Group__3__Impl"
    // InternalSTCoreParser.g:3891:1: rule__STCaseCases__Group__3__Impl : ( ( rule__STCaseCases__StatementsAssignment_3 )* ) ;
    public final void rule__STCaseCases__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3895:1: ( ( ( rule__STCaseCases__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:3896:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:3896:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:3897:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:3898:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==RULE_ID) ) {
                    int LA44_2 = input.LA(2);

                    if ( (LA44_2==ColonEqualsSign||LA44_2==EqualsSignGreaterThanSign) ) {
                        alt44=1;
                    }


                }
                else if ( (LA44_0==REPEAT||LA44_0==WHILE||LA44_0==CASE||LA44_0==FOR||LA44_0==IF||LA44_0==Semicolon) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalSTCoreParser.g:3898:3: rule__STCaseCases__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STCaseCases__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__0"
    // InternalSTCoreParser.g:3907:1: rule__STCaseCases__Group_1__0 : rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 ;
    public final void rule__STCaseCases__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3911:1: ( rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 )
            // InternalSTCoreParser.g:3912:2: rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STCaseCases__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0"


    // $ANTLR start "rule__STCaseCases__Group_1__0__Impl"
    // InternalSTCoreParser.g:3919:1: rule__STCaseCases__Group_1__0__Impl : ( Comma ) ;
    public final void rule__STCaseCases__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3923:1: ( ( Comma ) )
            // InternalSTCoreParser.g:3924:1: ( Comma )
            {
            // InternalSTCoreParser.g:3924:1: ( Comma )
            // InternalSTCoreParser.g:3925:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__1"
    // InternalSTCoreParser.g:3934:1: rule__STCaseCases__Group_1__1 : rule__STCaseCases__Group_1__1__Impl ;
    public final void rule__STCaseCases__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3938:1: ( rule__STCaseCases__Group_1__1__Impl )
            // InternalSTCoreParser.g:3939:2: rule__STCaseCases__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1"


    // $ANTLR start "rule__STCaseCases__Group_1__1__Impl"
    // InternalSTCoreParser.g:3945:1: rule__STCaseCases__Group_1__1__Impl : ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) ;
    public final void rule__STCaseCases__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3949:1: ( ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:3950:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:3950:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            // InternalSTCoreParser.g:3951:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:3952:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            // InternalSTCoreParser.g:3952:3: rule__STCaseCases__ConditionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__0"
    // InternalSTCoreParser.g:3961:1: rule__STElsePart__Group__0 : rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 ;
    public final void rule__STElsePart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3965:1: ( rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 )
            // InternalSTCoreParser.g:3966:2: rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__STElsePart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0"


    // $ANTLR start "rule__STElsePart__Group__0__Impl"
    // InternalSTCoreParser.g:3973:1: rule__STElsePart__Group__0__Impl : ( () ) ;
    public final void rule__STElsePart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3977:1: ( ( () ) )
            // InternalSTCoreParser.g:3978:1: ( () )
            {
            // InternalSTCoreParser.g:3978:1: ( () )
            // InternalSTCoreParser.g:3979:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }
            // InternalSTCoreParser.g:3980:2: ()
            // InternalSTCoreParser.g:3980:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0__Impl"


    // $ANTLR start "rule__STElsePart__Group__1"
    // InternalSTCoreParser.g:3988:1: rule__STElsePart__Group__1 : rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 ;
    public final void rule__STElsePart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3992:1: ( rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 )
            // InternalSTCoreParser.g:3993:2: rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__STElsePart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1"


    // $ANTLR start "rule__STElsePart__Group__1__Impl"
    // InternalSTCoreParser.g:4000:1: rule__STElsePart__Group__1__Impl : ( ELSE ) ;
    public final void rule__STElsePart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4004:1: ( ( ELSE ) )
            // InternalSTCoreParser.g:4005:1: ( ELSE )
            {
            // InternalSTCoreParser.g:4005:1: ( ELSE )
            // InternalSTCoreParser.g:4006:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__2"
    // InternalSTCoreParser.g:4015:1: rule__STElsePart__Group__2 : rule__STElsePart__Group__2__Impl ;
    public final void rule__STElsePart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4019:1: ( rule__STElsePart__Group__2__Impl )
            // InternalSTCoreParser.g:4020:2: rule__STElsePart__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2"


    // $ANTLR start "rule__STElsePart__Group__2__Impl"
    // InternalSTCoreParser.g:4026:1: rule__STElsePart__Group__2__Impl : ( ( rule__STElsePart__StatementsAssignment_2 )* ) ;
    public final void rule__STElsePart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4030:1: ( ( ( rule__STElsePart__StatementsAssignment_2 )* ) )
            // InternalSTCoreParser.g:4031:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            {
            // InternalSTCoreParser.g:4031:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            // InternalSTCoreParser.g:4032:2: ( rule__STElsePart__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }
            // InternalSTCoreParser.g:4033:2: ( rule__STElsePart__StatementsAssignment_2 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==REPEAT||LA45_0==WHILE||LA45_0==CASE||LA45_0==FOR||LA45_0==IF||LA45_0==Semicolon||LA45_0==RULE_ID) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalSTCoreParser.g:4033:3: rule__STElsePart__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STElsePart__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__0"
    // InternalSTCoreParser.g:4042:1: rule__STForStatement__Group__0 : rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 ;
    public final void rule__STForStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4046:1: ( rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 )
            // InternalSTCoreParser.g:4047:2: rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STForStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0"


    // $ANTLR start "rule__STForStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4054:1: rule__STForStatement__Group__0__Impl : ( FOR ) ;
    public final void rule__STForStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4058:1: ( ( FOR ) )
            // InternalSTCoreParser.g:4059:1: ( FOR )
            {
            // InternalSTCoreParser.g:4059:1: ( FOR )
            // InternalSTCoreParser.g:4060:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0__Impl"


    // $ANTLR start "rule__STForStatement__Group__1"
    // InternalSTCoreParser.g:4069:1: rule__STForStatement__Group__1 : rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 ;
    public final void rule__STForStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4073:1: ( rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 )
            // InternalSTCoreParser.g:4074:2: rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2
            {
            pushFollow(FOLLOW_28);
            rule__STForStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1"


    // $ANTLR start "rule__STForStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4081:1: rule__STForStatement__Group__1__Impl : ( ( rule__STForStatement__ForAssignment_1 ) ) ;
    public final void rule__STForStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4085:1: ( ( ( rule__STForStatement__ForAssignment_1 ) ) )
            // InternalSTCoreParser.g:4086:1: ( ( rule__STForStatement__ForAssignment_1 ) )
            {
            // InternalSTCoreParser.g:4086:1: ( ( rule__STForStatement__ForAssignment_1 ) )
            // InternalSTCoreParser.g:4087:2: ( rule__STForStatement__ForAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getForAssignment_1()); 
            }
            // InternalSTCoreParser.g:4088:2: ( rule__STForStatement__ForAssignment_1 )
            // InternalSTCoreParser.g:4088:3: rule__STForStatement__ForAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ForAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getForAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1__Impl"


    // $ANTLR start "rule__STForStatement__Group__2"
    // InternalSTCoreParser.g:4096:1: rule__STForStatement__Group__2 : rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 ;
    public final void rule__STForStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4100:1: ( rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 )
            // InternalSTCoreParser.g:4101:2: rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STForStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2"


    // $ANTLR start "rule__STForStatement__Group__2__Impl"
    // InternalSTCoreParser.g:4108:1: rule__STForStatement__Group__2__Impl : ( TO ) ;
    public final void rule__STForStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4112:1: ( ( TO ) )
            // InternalSTCoreParser.g:4113:1: ( TO )
            {
            // InternalSTCoreParser.g:4113:1: ( TO )
            // InternalSTCoreParser.g:4114:2: TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getTOKeyword_2()); 
            }
            match(input,TO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getTOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__3"
    // InternalSTCoreParser.g:4123:1: rule__STForStatement__Group__3 : rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 ;
    public final void rule__STForStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4127:1: ( rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 )
            // InternalSTCoreParser.g:4128:2: rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4
            {
            pushFollow(FOLLOW_29);
            rule__STForStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3"


    // $ANTLR start "rule__STForStatement__Group__3__Impl"
    // InternalSTCoreParser.g:4135:1: rule__STForStatement__Group__3__Impl : ( ( rule__STForStatement__ToAssignment_3 ) ) ;
    public final void rule__STForStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4139:1: ( ( ( rule__STForStatement__ToAssignment_3 ) ) )
            // InternalSTCoreParser.g:4140:1: ( ( rule__STForStatement__ToAssignment_3 ) )
            {
            // InternalSTCoreParser.g:4140:1: ( ( rule__STForStatement__ToAssignment_3 ) )
            // InternalSTCoreParser.g:4141:2: ( rule__STForStatement__ToAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToAssignment_3()); 
            }
            // InternalSTCoreParser.g:4142:2: ( rule__STForStatement__ToAssignment_3 )
            // InternalSTCoreParser.g:4142:3: rule__STForStatement__ToAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ToAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3__Impl"


    // $ANTLR start "rule__STForStatement__Group__4"
    // InternalSTCoreParser.g:4150:1: rule__STForStatement__Group__4 : rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 ;
    public final void rule__STForStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4154:1: ( rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 )
            // InternalSTCoreParser.g:4155:2: rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5
            {
            pushFollow(FOLLOW_29);
            rule__STForStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4"


    // $ANTLR start "rule__STForStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4162:1: rule__STForStatement__Group__4__Impl : ( ( rule__STForStatement__Group_4__0 )? ) ;
    public final void rule__STForStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4166:1: ( ( ( rule__STForStatement__Group_4__0 )? ) )
            // InternalSTCoreParser.g:4167:1: ( ( rule__STForStatement__Group_4__0 )? )
            {
            // InternalSTCoreParser.g:4167:1: ( ( rule__STForStatement__Group_4__0 )? )
            // InternalSTCoreParser.g:4168:2: ( rule__STForStatement__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup_4()); 
            }
            // InternalSTCoreParser.g:4169:2: ( rule__STForStatement__Group_4__0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==BY) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalSTCoreParser.g:4169:3: rule__STForStatement__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STForStatement__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4__Impl"


    // $ANTLR start "rule__STForStatement__Group__5"
    // InternalSTCoreParser.g:4177:1: rule__STForStatement__Group__5 : rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 ;
    public final void rule__STForStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4181:1: ( rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 )
            // InternalSTCoreParser.g:4182:2: rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6
            {
            pushFollow(FOLLOW_30);
            rule__STForStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5"


    // $ANTLR start "rule__STForStatement__Group__5__Impl"
    // InternalSTCoreParser.g:4189:1: rule__STForStatement__Group__5__Impl : ( DO ) ;
    public final void rule__STForStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4193:1: ( ( DO ) )
            // InternalSTCoreParser.g:4194:1: ( DO )
            {
            // InternalSTCoreParser.g:4194:1: ( DO )
            // InternalSTCoreParser.g:4195:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getDOKeyword_5()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getDOKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5__Impl"


    // $ANTLR start "rule__STForStatement__Group__6"
    // InternalSTCoreParser.g:4204:1: rule__STForStatement__Group__6 : rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 ;
    public final void rule__STForStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4208:1: ( rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 )
            // InternalSTCoreParser.g:4209:2: rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7
            {
            pushFollow(FOLLOW_30);
            rule__STForStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6"


    // $ANTLR start "rule__STForStatement__Group__6__Impl"
    // InternalSTCoreParser.g:4216:1: rule__STForStatement__Group__6__Impl : ( ( rule__STForStatement__StatementsAssignment_6 )* ) ;
    public final void rule__STForStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4220:1: ( ( ( rule__STForStatement__StatementsAssignment_6 )* ) )
            // InternalSTCoreParser.g:4221:1: ( ( rule__STForStatement__StatementsAssignment_6 )* )
            {
            // InternalSTCoreParser.g:4221:1: ( ( rule__STForStatement__StatementsAssignment_6 )* )
            // InternalSTCoreParser.g:4222:2: ( rule__STForStatement__StatementsAssignment_6 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsAssignment_6()); 
            }
            // InternalSTCoreParser.g:4223:2: ( rule__STForStatement__StatementsAssignment_6 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==REPEAT||LA47_0==WHILE||LA47_0==CASE||LA47_0==FOR||LA47_0==IF||LA47_0==Semicolon||LA47_0==RULE_ID) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalSTCoreParser.g:4223:3: rule__STForStatement__StatementsAssignment_6
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STForStatement__StatementsAssignment_6();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6__Impl"


    // $ANTLR start "rule__STForStatement__Group__7"
    // InternalSTCoreParser.g:4231:1: rule__STForStatement__Group__7 : rule__STForStatement__Group__7__Impl ;
    public final void rule__STForStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4235:1: ( rule__STForStatement__Group__7__Impl )
            // InternalSTCoreParser.g:4236:2: rule__STForStatement__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7"


    // $ANTLR start "rule__STForStatement__Group__7__Impl"
    // InternalSTCoreParser.g:4242:1: rule__STForStatement__Group__7__Impl : ( END_FOR ) ;
    public final void rule__STForStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4246:1: ( ( END_FOR ) )
            // InternalSTCoreParser.g:4247:1: ( END_FOR )
            {
            // InternalSTCoreParser.g:4247:1: ( END_FOR )
            // InternalSTCoreParser.g:4248:2: END_FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_7()); 
            }
            match(input,END_FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7__Impl"


    // $ANTLR start "rule__STForStatement__Group_4__0"
    // InternalSTCoreParser.g:4258:1: rule__STForStatement__Group_4__0 : rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1 ;
    public final void rule__STForStatement__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4262:1: ( rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1 )
            // InternalSTCoreParser.g:4263:2: rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1
            {
            pushFollow(FOLLOW_10);
            rule__STForStatement__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__0"


    // $ANTLR start "rule__STForStatement__Group_4__0__Impl"
    // InternalSTCoreParser.g:4270:1: rule__STForStatement__Group_4__0__Impl : ( BY ) ;
    public final void rule__STForStatement__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4274:1: ( ( BY ) )
            // InternalSTCoreParser.g:4275:1: ( BY )
            {
            // InternalSTCoreParser.g:4275:1: ( BY )
            // InternalSTCoreParser.g:4276:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBYKeyword_4_0()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBYKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__0__Impl"


    // $ANTLR start "rule__STForStatement__Group_4__1"
    // InternalSTCoreParser.g:4285:1: rule__STForStatement__Group_4__1 : rule__STForStatement__Group_4__1__Impl ;
    public final void rule__STForStatement__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4289:1: ( rule__STForStatement__Group_4__1__Impl )
            // InternalSTCoreParser.g:4290:2: rule__STForStatement__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__1"


    // $ANTLR start "rule__STForStatement__Group_4__1__Impl"
    // InternalSTCoreParser.g:4296:1: rule__STForStatement__Group_4__1__Impl : ( ( rule__STForStatement__ByAssignment_4_1 ) ) ;
    public final void rule__STForStatement__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4300:1: ( ( ( rule__STForStatement__ByAssignment_4_1 ) ) )
            // InternalSTCoreParser.g:4301:1: ( ( rule__STForStatement__ByAssignment_4_1 ) )
            {
            // InternalSTCoreParser.g:4301:1: ( ( rule__STForStatement__ByAssignment_4_1 ) )
            // InternalSTCoreParser.g:4302:2: ( rule__STForStatement__ByAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getByAssignment_4_1()); 
            }
            // InternalSTCoreParser.g:4303:2: ( rule__STForStatement__ByAssignment_4_1 )
            // InternalSTCoreParser.g:4303:3: rule__STForStatement__ByAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ByAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getByAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__0"
    // InternalSTCoreParser.g:4312:1: rule__STWhileStatement__Group__0 : rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 ;
    public final void rule__STWhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4316:1: ( rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 )
            // InternalSTCoreParser.g:4317:2: rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STWhileStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0"


    // $ANTLR start "rule__STWhileStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4324:1: rule__STWhileStatement__Group__0__Impl : ( WHILE ) ;
    public final void rule__STWhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4328:1: ( ( WHILE ) )
            // InternalSTCoreParser.g:4329:1: ( WHILE )
            {
            // InternalSTCoreParser.g:4329:1: ( WHILE )
            // InternalSTCoreParser.g:4330:2: WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }
            match(input,WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__1"
    // InternalSTCoreParser.g:4339:1: rule__STWhileStatement__Group__1 : rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 ;
    public final void rule__STWhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4343:1: ( rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 )
            // InternalSTCoreParser.g:4344:2: rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__STWhileStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1"


    // $ANTLR start "rule__STWhileStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4351:1: rule__STWhileStatement__Group__1__Impl : ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STWhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4355:1: ( ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) )
            // InternalSTCoreParser.g:4356:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            {
            // InternalSTCoreParser.g:4356:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            // InternalSTCoreParser.g:4357:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTCoreParser.g:4358:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            // InternalSTCoreParser.g:4358:3: rule__STWhileStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__2"
    // InternalSTCoreParser.g:4366:1: rule__STWhileStatement__Group__2 : rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 ;
    public final void rule__STWhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4370:1: ( rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 )
            // InternalSTCoreParser.g:4371:2: rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__STWhileStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2"


    // $ANTLR start "rule__STWhileStatement__Group__2__Impl"
    // InternalSTCoreParser.g:4378:1: rule__STWhileStatement__Group__2__Impl : ( DO ) ;
    public final void rule__STWhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4382:1: ( ( DO ) )
            // InternalSTCoreParser.g:4383:1: ( DO )
            {
            // InternalSTCoreParser.g:4383:1: ( DO )
            // InternalSTCoreParser.g:4384:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__3"
    // InternalSTCoreParser.g:4393:1: rule__STWhileStatement__Group__3 : rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 ;
    public final void rule__STWhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4397:1: ( rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 )
            // InternalSTCoreParser.g:4398:2: rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4
            {
            pushFollow(FOLLOW_32);
            rule__STWhileStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3"


    // $ANTLR start "rule__STWhileStatement__Group__3__Impl"
    // InternalSTCoreParser.g:4405:1: rule__STWhileStatement__Group__3__Impl : ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STWhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4409:1: ( ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:4410:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:4410:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:4411:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:4412:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==REPEAT||LA48_0==WHILE||LA48_0==CASE||LA48_0==FOR||LA48_0==IF||LA48_0==Semicolon||LA48_0==RULE_ID) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalSTCoreParser.g:4412:3: rule__STWhileStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STWhileStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__4"
    // InternalSTCoreParser.g:4420:1: rule__STWhileStatement__Group__4 : rule__STWhileStatement__Group__4__Impl ;
    public final void rule__STWhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4424:1: ( rule__STWhileStatement__Group__4__Impl )
            // InternalSTCoreParser.g:4425:2: rule__STWhileStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4"


    // $ANTLR start "rule__STWhileStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4431:1: rule__STWhileStatement__Group__4__Impl : ( END_WHILE ) ;
    public final void rule__STWhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4435:1: ( ( END_WHILE ) )
            // InternalSTCoreParser.g:4436:1: ( END_WHILE )
            {
            // InternalSTCoreParser.g:4436:1: ( END_WHILE )
            // InternalSTCoreParser.g:4437:2: END_WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }
            match(input,END_WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__0"
    // InternalSTCoreParser.g:4447:1: rule__STRepeatStatement__Group__0 : rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 ;
    public final void rule__STRepeatStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4451:1: ( rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 )
            // InternalSTCoreParser.g:4452:2: rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__STRepeatStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0"


    // $ANTLR start "rule__STRepeatStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4459:1: rule__STRepeatStatement__Group__0__Impl : ( REPEAT ) ;
    public final void rule__STRepeatStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4463:1: ( ( REPEAT ) )
            // InternalSTCoreParser.g:4464:1: ( REPEAT )
            {
            // InternalSTCoreParser.g:4464:1: ( REPEAT )
            // InternalSTCoreParser.g:4465:2: REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }
            match(input,REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__1"
    // InternalSTCoreParser.g:4474:1: rule__STRepeatStatement__Group__1 : rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 ;
    public final void rule__STRepeatStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4478:1: ( rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 )
            // InternalSTCoreParser.g:4479:2: rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__STRepeatStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1"


    // $ANTLR start "rule__STRepeatStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4486:1: rule__STRepeatStatement__Group__1__Impl : ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) ;
    public final void rule__STRepeatStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4490:1: ( ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) )
            // InternalSTCoreParser.g:4491:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            {
            // InternalSTCoreParser.g:4491:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            // InternalSTCoreParser.g:4492:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }
            // InternalSTCoreParser.g:4493:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==REPEAT||LA49_0==WHILE||LA49_0==CASE||LA49_0==FOR||LA49_0==IF||LA49_0==Semicolon||LA49_0==RULE_ID) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalSTCoreParser.g:4493:3: rule__STRepeatStatement__StatementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STRepeatStatement__StatementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__2"
    // InternalSTCoreParser.g:4501:1: rule__STRepeatStatement__Group__2 : rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 ;
    public final void rule__STRepeatStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4505:1: ( rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 )
            // InternalSTCoreParser.g:4506:2: rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STRepeatStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2"


    // $ANTLR start "rule__STRepeatStatement__Group__2__Impl"
    // InternalSTCoreParser.g:4513:1: rule__STRepeatStatement__Group__2__Impl : ( UNTIL ) ;
    public final void rule__STRepeatStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4517:1: ( ( UNTIL ) )
            // InternalSTCoreParser.g:4518:1: ( UNTIL )
            {
            // InternalSTCoreParser.g:4518:1: ( UNTIL )
            // InternalSTCoreParser.g:4519:2: UNTIL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }
            match(input,UNTIL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__3"
    // InternalSTCoreParser.g:4528:1: rule__STRepeatStatement__Group__3 : rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 ;
    public final void rule__STRepeatStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4532:1: ( rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 )
            // InternalSTCoreParser.g:4533:2: rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4
            {
            pushFollow(FOLLOW_34);
            rule__STRepeatStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3"


    // $ANTLR start "rule__STRepeatStatement__Group__3__Impl"
    // InternalSTCoreParser.g:4540:1: rule__STRepeatStatement__Group__3__Impl : ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) ;
    public final void rule__STRepeatStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4544:1: ( ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) )
            // InternalSTCoreParser.g:4545:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            {
            // InternalSTCoreParser.g:4545:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            // InternalSTCoreParser.g:4546:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }
            // InternalSTCoreParser.g:4547:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            // InternalSTCoreParser.g:4547:3: rule__STRepeatStatement__ConditionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__ConditionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__4"
    // InternalSTCoreParser.g:4555:1: rule__STRepeatStatement__Group__4 : rule__STRepeatStatement__Group__4__Impl ;
    public final void rule__STRepeatStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4559:1: ( rule__STRepeatStatement__Group__4__Impl )
            // InternalSTCoreParser.g:4560:2: rule__STRepeatStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4"


    // $ANTLR start "rule__STRepeatStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4566:1: rule__STRepeatStatement__Group__4__Impl : ( END_REPEAT ) ;
    public final void rule__STRepeatStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4570:1: ( ( END_REPEAT ) )
            // InternalSTCoreParser.g:4571:1: ( END_REPEAT )
            {
            // InternalSTCoreParser.g:4571:1: ( END_REPEAT )
            // InternalSTCoreParser.g:4572:2: END_REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }
            match(input,END_REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__0"
    // InternalSTCoreParser.g:4582:1: rule__STSubrangeExpression__Group__0 : rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 ;
    public final void rule__STSubrangeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4586:1: ( rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 )
            // InternalSTCoreParser.g:4587:2: rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__STSubrangeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0"


    // $ANTLR start "rule__STSubrangeExpression__Group__0__Impl"
    // InternalSTCoreParser.g:4594:1: rule__STSubrangeExpression__Group__0__Impl : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4598:1: ( ( ruleSTOrExpression ) )
            // InternalSTCoreParser.g:4599:1: ( ruleSTOrExpression )
            {
            // InternalSTCoreParser.g:4599:1: ( ruleSTOrExpression )
            // InternalSTCoreParser.g:4600:2: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__1"
    // InternalSTCoreParser.g:4609:1: rule__STSubrangeExpression__Group__1 : rule__STSubrangeExpression__Group__1__Impl ;
    public final void rule__STSubrangeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4613:1: ( rule__STSubrangeExpression__Group__1__Impl )
            // InternalSTCoreParser.g:4614:2: rule__STSubrangeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1"


    // $ANTLR start "rule__STSubrangeExpression__Group__1__Impl"
    // InternalSTCoreParser.g:4620:1: rule__STSubrangeExpression__Group__1__Impl : ( ( rule__STSubrangeExpression__Group_1__0 )* ) ;
    public final void rule__STSubrangeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4624:1: ( ( ( rule__STSubrangeExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:4625:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:4625:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:4626:2: ( rule__STSubrangeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:4627:2: ( rule__STSubrangeExpression__Group_1__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==FullStopFullStop) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalSTCoreParser.g:4627:3: rule__STSubrangeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_36);
            	    rule__STSubrangeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0"
    // InternalSTCoreParser.g:4636:1: rule__STSubrangeExpression__Group_1__0 : rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 ;
    public final void rule__STSubrangeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4640:1: ( rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 )
            // InternalSTCoreParser.g:4641:2: rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STSubrangeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:4648:1: rule__STSubrangeExpression__Group_1__0__Impl : ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4652:1: ( ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:4653:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:4653:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:4654:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:4655:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:4655:3: rule__STSubrangeExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1"
    // InternalSTCoreParser.g:4663:1: rule__STSubrangeExpression__Group_1__1 : rule__STSubrangeExpression__Group_1__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4667:1: ( rule__STSubrangeExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:4668:2: rule__STSubrangeExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:4674:1: rule__STSubrangeExpression__Group_1__1__Impl : ( ( rule__STSubrangeExpression__UpperBoundAssignment_1_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4678:1: ( ( ( rule__STSubrangeExpression__UpperBoundAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:4679:1: ( ( rule__STSubrangeExpression__UpperBoundAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:4679:1: ( ( rule__STSubrangeExpression__UpperBoundAssignment_1_1 ) )
            // InternalSTCoreParser.g:4680:2: ( rule__STSubrangeExpression__UpperBoundAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getUpperBoundAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:4681:2: ( rule__STSubrangeExpression__UpperBoundAssignment_1_1 )
            // InternalSTCoreParser.g:4681:3: rule__STSubrangeExpression__UpperBoundAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__UpperBoundAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getUpperBoundAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0"
    // InternalSTCoreParser.g:4690:1: rule__STSubrangeExpression__Group_1_0__0 : rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 ;
    public final void rule__STSubrangeExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4694:1: ( rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:4695:2: rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_35);
            rule__STSubrangeExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:4702:1: rule__STSubrangeExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STSubrangeExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4706:1: ( ( () ) )
            // InternalSTCoreParser.g:4707:1: ( () )
            {
            // InternalSTCoreParser.g:4707:1: ( () )
            // InternalSTCoreParser.g:4708:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTSubrangeExpressionLowerBoundAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:4709:2: ()
            // InternalSTCoreParser.g:4709:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTSubrangeExpressionLowerBoundAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1"
    // InternalSTCoreParser.g:4717:1: rule__STSubrangeExpression__Group_1_0__1 : rule__STSubrangeExpression__Group_1_0__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4721:1: ( rule__STSubrangeExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:4722:2: rule__STSubrangeExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:4728:1: rule__STSubrangeExpression__Group_1_0__1__Impl : ( FullStopFullStop ) ;
    public final void rule__STSubrangeExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4732:1: ( ( FullStopFullStop ) )
            // InternalSTCoreParser.g:4733:1: ( FullStopFullStop )
            {
            // InternalSTCoreParser.g:4733:1: ( FullStopFullStop )
            // InternalSTCoreParser.g:4734:2: FullStopFullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getFullStopFullStopKeyword_1_0_1()); 
            }
            match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getFullStopFullStopKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group__0"
    // InternalSTCoreParser.g:4744:1: rule__STOrExpression__Group__0 : rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 ;
    public final void rule__STOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4748:1: ( rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 )
            // InternalSTCoreParser.g:4749:2: rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__STOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0"


    // $ANTLR start "rule__STOrExpression__Group__0__Impl"
    // InternalSTCoreParser.g:4756:1: rule__STOrExpression__Group__0__Impl : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4760:1: ( ( ruleSTXorExpression ) )
            // InternalSTCoreParser.g:4761:1: ( ruleSTXorExpression )
            {
            // InternalSTCoreParser.g:4761:1: ( ruleSTXorExpression )
            // InternalSTCoreParser.g:4762:2: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group__1"
    // InternalSTCoreParser.g:4771:1: rule__STOrExpression__Group__1 : rule__STOrExpression__Group__1__Impl ;
    public final void rule__STOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4775:1: ( rule__STOrExpression__Group__1__Impl )
            // InternalSTCoreParser.g:4776:2: rule__STOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1"


    // $ANTLR start "rule__STOrExpression__Group__1__Impl"
    // InternalSTCoreParser.g:4782:1: rule__STOrExpression__Group__1__Impl : ( ( rule__STOrExpression__Group_1__0 )* ) ;
    public final void rule__STOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4786:1: ( ( ( rule__STOrExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:4787:1: ( ( rule__STOrExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:4787:1: ( ( rule__STOrExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:4788:2: ( rule__STOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:4789:2: ( rule__STOrExpression__Group_1__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==OR) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalSTCoreParser.g:4789:3: rule__STOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_38);
            	    rule__STOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__0"
    // InternalSTCoreParser.g:4798:1: rule__STOrExpression__Group_1__0 : rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 ;
    public final void rule__STOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4802:1: ( rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 )
            // InternalSTCoreParser.g:4803:2: rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0"


    // $ANTLR start "rule__STOrExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:4810:1: rule__STOrExpression__Group_1__0__Impl : ( ( rule__STOrExpression__Group_1_0__0 ) ) ;
    public final void rule__STOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4814:1: ( ( ( rule__STOrExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:4815:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:4815:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:4816:2: ( rule__STOrExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:4817:2: ( rule__STOrExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:4817:3: rule__STOrExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__1"
    // InternalSTCoreParser.g:4825:1: rule__STOrExpression__Group_1__1 : rule__STOrExpression__Group_1__1__Impl ;
    public final void rule__STOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4829:1: ( rule__STOrExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:4830:2: rule__STOrExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1"


    // $ANTLR start "rule__STOrExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:4836:1: rule__STOrExpression__Group_1__1__Impl : ( ( rule__STOrExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4840:1: ( ( ( rule__STOrExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:4841:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:4841:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:4842:2: ( rule__STOrExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:4843:2: ( rule__STOrExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:4843:3: rule__STOrExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0"
    // InternalSTCoreParser.g:4852:1: rule__STOrExpression__Group_1_0__0 : rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 ;
    public final void rule__STOrExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4856:1: ( rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:4857:2: rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_37);
            rule__STOrExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:4864:1: rule__STOrExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STOrExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4868:1: ( ( () ) )
            // InternalSTCoreParser.g:4869:1: ( () )
            {
            // InternalSTCoreParser.g:4869:1: ( () )
            // InternalSTCoreParser.g:4870:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTOrExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:4871:2: ()
            // InternalSTCoreParser.g:4871:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTOrExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1"
    // InternalSTCoreParser.g:4879:1: rule__STOrExpression__Group_1_0__1 : rule__STOrExpression__Group_1_0__1__Impl ;
    public final void rule__STOrExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4883:1: ( rule__STOrExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:4884:2: rule__STOrExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:4890:1: rule__STOrExpression__Group_1_0__1__Impl : ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STOrExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4894:1: ( ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:4895:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:4895:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:4896:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:4897:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:4897:3: rule__STOrExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group__0"
    // InternalSTCoreParser.g:4906:1: rule__STXorExpression__Group__0 : rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 ;
    public final void rule__STXorExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4910:1: ( rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 )
            // InternalSTCoreParser.g:4911:2: rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__STXorExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0"


    // $ANTLR start "rule__STXorExpression__Group__0__Impl"
    // InternalSTCoreParser.g:4918:1: rule__STXorExpression__Group__0__Impl : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4922:1: ( ( ruleSTAndExpression ) )
            // InternalSTCoreParser.g:4923:1: ( ruleSTAndExpression )
            {
            // InternalSTCoreParser.g:4923:1: ( ruleSTAndExpression )
            // InternalSTCoreParser.g:4924:2: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group__1"
    // InternalSTCoreParser.g:4933:1: rule__STXorExpression__Group__1 : rule__STXorExpression__Group__1__Impl ;
    public final void rule__STXorExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4937:1: ( rule__STXorExpression__Group__1__Impl )
            // InternalSTCoreParser.g:4938:2: rule__STXorExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1"


    // $ANTLR start "rule__STXorExpression__Group__1__Impl"
    // InternalSTCoreParser.g:4944:1: rule__STXorExpression__Group__1__Impl : ( ( rule__STXorExpression__Group_1__0 )* ) ;
    public final void rule__STXorExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4948:1: ( ( ( rule__STXorExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:4949:1: ( ( rule__STXorExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:4949:1: ( ( rule__STXorExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:4950:2: ( rule__STXorExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:4951:2: ( rule__STXorExpression__Group_1__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==XOR) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalSTCoreParser.g:4951:3: rule__STXorExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__STXorExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__0"
    // InternalSTCoreParser.g:4960:1: rule__STXorExpression__Group_1__0 : rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 ;
    public final void rule__STXorExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4964:1: ( rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 )
            // InternalSTCoreParser.g:4965:2: rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STXorExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0"


    // $ANTLR start "rule__STXorExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:4972:1: rule__STXorExpression__Group_1__0__Impl : ( ( rule__STXorExpression__Group_1_0__0 ) ) ;
    public final void rule__STXorExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4976:1: ( ( ( rule__STXorExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:4977:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:4977:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:4978:2: ( rule__STXorExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:4979:2: ( rule__STXorExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:4979:3: rule__STXorExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__1"
    // InternalSTCoreParser.g:4987:1: rule__STXorExpression__Group_1__1 : rule__STXorExpression__Group_1__1__Impl ;
    public final void rule__STXorExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4991:1: ( rule__STXorExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:4992:2: rule__STXorExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1"


    // $ANTLR start "rule__STXorExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:4998:1: rule__STXorExpression__Group_1__1__Impl : ( ( rule__STXorExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STXorExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5002:1: ( ( ( rule__STXorExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5003:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5003:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5004:2: ( rule__STXorExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5005:2: ( rule__STXorExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5005:3: rule__STXorExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5014:1: rule__STXorExpression__Group_1_0__0 : rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 ;
    public final void rule__STXorExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5018:1: ( rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5019:2: rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_39);
            rule__STXorExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5026:1: rule__STXorExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STXorExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5030:1: ( ( () ) )
            // InternalSTCoreParser.g:5031:1: ( () )
            {
            // InternalSTCoreParser.g:5031:1: ( () )
            // InternalSTCoreParser.g:5032:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTXorExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5033:2: ()
            // InternalSTCoreParser.g:5033:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTXorExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5041:1: rule__STXorExpression__Group_1_0__1 : rule__STXorExpression__Group_1_0__1__Impl ;
    public final void rule__STXorExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5045:1: ( rule__STXorExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5046:2: rule__STXorExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5052:1: rule__STXorExpression__Group_1_0__1__Impl : ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STXorExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5056:1: ( ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5057:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5057:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5058:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5059:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5059:3: rule__STXorExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group__0"
    // InternalSTCoreParser.g:5068:1: rule__STAndExpression__Group__0 : rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 ;
    public final void rule__STAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5072:1: ( rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 )
            // InternalSTCoreParser.g:5073:2: rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__STAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0"


    // $ANTLR start "rule__STAndExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5080:1: rule__STAndExpression__Group__0__Impl : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5084:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTCoreParser.g:5085:1: ( ruleSTEqualityExpression )
            {
            // InternalSTCoreParser.g:5085:1: ( ruleSTEqualityExpression )
            // InternalSTCoreParser.g:5086:2: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group__1"
    // InternalSTCoreParser.g:5095:1: rule__STAndExpression__Group__1 : rule__STAndExpression__Group__1__Impl ;
    public final void rule__STAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5099:1: ( rule__STAndExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5100:2: rule__STAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1"


    // $ANTLR start "rule__STAndExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5106:1: rule__STAndExpression__Group__1__Impl : ( ( rule__STAndExpression__Group_1__0 )* ) ;
    public final void rule__STAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5110:1: ( ( ( rule__STAndExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5111:1: ( ( rule__STAndExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5111:1: ( ( rule__STAndExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5112:2: ( rule__STAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5113:2: ( rule__STAndExpression__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==AND||LA53_0==Ampersand) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalSTCoreParser.g:5113:3: rule__STAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_42);
            	    rule__STAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__0"
    // InternalSTCoreParser.g:5122:1: rule__STAndExpression__Group_1__0 : rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 ;
    public final void rule__STAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5126:1: ( rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 )
            // InternalSTCoreParser.g:5127:2: rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0"


    // $ANTLR start "rule__STAndExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5134:1: rule__STAndExpression__Group_1__0__Impl : ( ( rule__STAndExpression__Group_1_0__0 ) ) ;
    public final void rule__STAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5138:1: ( ( ( rule__STAndExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5139:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5139:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5140:2: ( rule__STAndExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5141:2: ( rule__STAndExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5141:3: rule__STAndExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__1"
    // InternalSTCoreParser.g:5149:1: rule__STAndExpression__Group_1__1 : rule__STAndExpression__Group_1__1__Impl ;
    public final void rule__STAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5153:1: ( rule__STAndExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5154:2: rule__STAndExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1"


    // $ANTLR start "rule__STAndExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5160:1: rule__STAndExpression__Group_1__1__Impl : ( ( rule__STAndExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5164:1: ( ( ( rule__STAndExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5165:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5165:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5166:2: ( rule__STAndExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5167:2: ( rule__STAndExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5167:3: rule__STAndExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5176:1: rule__STAndExpression__Group_1_0__0 : rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 ;
    public final void rule__STAndExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5180:1: ( rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5181:2: rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_41);
            rule__STAndExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5188:1: rule__STAndExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAndExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5192:1: ( ( () ) )
            // InternalSTCoreParser.g:5193:1: ( () )
            {
            // InternalSTCoreParser.g:5193:1: ( () )
            // InternalSTCoreParser.g:5194:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTAndExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5195:2: ()
            // InternalSTCoreParser.g:5195:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTAndExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5203:1: rule__STAndExpression__Group_1_0__1 : rule__STAndExpression__Group_1_0__1__Impl ;
    public final void rule__STAndExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5207:1: ( rule__STAndExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5208:2: rule__STAndExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5214:1: rule__STAndExpression__Group_1_0__1__Impl : ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAndExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5218:1: ( ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5219:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5219:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5220:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5221:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5221:3: rule__STAndExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__0"
    // InternalSTCoreParser.g:5230:1: rule__STEqualityExpression__Group__0 : rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 ;
    public final void rule__STEqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5234:1: ( rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 )
            // InternalSTCoreParser.g:5235:2: rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1
            {
            pushFollow(FOLLOW_43);
            rule__STEqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0"


    // $ANTLR start "rule__STEqualityExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5242:1: rule__STEqualityExpression__Group__0__Impl : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5246:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTCoreParser.g:5247:1: ( ruleSTComparisonExpression )
            {
            // InternalSTCoreParser.g:5247:1: ( ruleSTComparisonExpression )
            // InternalSTCoreParser.g:5248:2: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__1"
    // InternalSTCoreParser.g:5257:1: rule__STEqualityExpression__Group__1 : rule__STEqualityExpression__Group__1__Impl ;
    public final void rule__STEqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5261:1: ( rule__STEqualityExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5262:2: rule__STEqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1"


    // $ANTLR start "rule__STEqualityExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5268:1: rule__STEqualityExpression__Group__1__Impl : ( ( rule__STEqualityExpression__Group_1__0 )* ) ;
    public final void rule__STEqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5272:1: ( ( ( rule__STEqualityExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5273:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5273:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5274:2: ( rule__STEqualityExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5275:2: ( rule__STEqualityExpression__Group_1__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==LessThanSignGreaterThanSign||LA54_0==EqualsSign) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalSTCoreParser.g:5275:3: rule__STEqualityExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_44);
            	    rule__STEqualityExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0"
    // InternalSTCoreParser.g:5284:1: rule__STEqualityExpression__Group_1__0 : rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 ;
    public final void rule__STEqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5288:1: ( rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 )
            // InternalSTCoreParser.g:5289:2: rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STEqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5296:1: rule__STEqualityExpression__Group_1__0__Impl : ( ( rule__STEqualityExpression__Group_1_0__0 ) ) ;
    public final void rule__STEqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5300:1: ( ( ( rule__STEqualityExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5301:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5301:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5302:2: ( rule__STEqualityExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5303:2: ( rule__STEqualityExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5303:3: rule__STEqualityExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1"
    // InternalSTCoreParser.g:5311:1: rule__STEqualityExpression__Group_1__1 : rule__STEqualityExpression__Group_1__1__Impl ;
    public final void rule__STEqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5315:1: ( rule__STEqualityExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5316:2: rule__STEqualityExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5322:1: rule__STEqualityExpression__Group_1__1__Impl : ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5326:1: ( ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5327:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5327:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5328:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5329:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5329:3: rule__STEqualityExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5338:1: rule__STEqualityExpression__Group_1_0__0 : rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 ;
    public final void rule__STEqualityExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5342:1: ( rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5343:2: rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_43);
            rule__STEqualityExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5350:1: rule__STEqualityExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STEqualityExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5354:1: ( ( () ) )
            // InternalSTCoreParser.g:5355:1: ( () )
            {
            // InternalSTCoreParser.g:5355:1: ( () )
            // InternalSTCoreParser.g:5356:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTEqualityExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5357:2: ()
            // InternalSTCoreParser.g:5357:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTEqualityExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5365:1: rule__STEqualityExpression__Group_1_0__1 : rule__STEqualityExpression__Group_1_0__1__Impl ;
    public final void rule__STEqualityExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5369:1: ( rule__STEqualityExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5370:2: rule__STEqualityExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5376:1: rule__STEqualityExpression__Group_1_0__1__Impl : ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5380:1: ( ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5381:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5381:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5382:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5383:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5383:3: rule__STEqualityExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__0"
    // InternalSTCoreParser.g:5392:1: rule__STComparisonExpression__Group__0 : rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 ;
    public final void rule__STComparisonExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5396:1: ( rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 )
            // InternalSTCoreParser.g:5397:2: rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__STComparisonExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0"


    // $ANTLR start "rule__STComparisonExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5404:1: rule__STComparisonExpression__Group__0__Impl : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5408:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTCoreParser.g:5409:1: ( ruleSTAddSubExpression )
            {
            // InternalSTCoreParser.g:5409:1: ( ruleSTAddSubExpression )
            // InternalSTCoreParser.g:5410:2: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__1"
    // InternalSTCoreParser.g:5419:1: rule__STComparisonExpression__Group__1 : rule__STComparisonExpression__Group__1__Impl ;
    public final void rule__STComparisonExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5423:1: ( rule__STComparisonExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5424:2: rule__STComparisonExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1"


    // $ANTLR start "rule__STComparisonExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5430:1: rule__STComparisonExpression__Group__1__Impl : ( ( rule__STComparisonExpression__Group_1__0 )* ) ;
    public final void rule__STComparisonExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5434:1: ( ( ( rule__STComparisonExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5435:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5435:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5436:2: ( rule__STComparisonExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5437:2: ( rule__STComparisonExpression__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==LessThanSignEqualsSign||LA55_0==GreaterThanSignEqualsSign||LA55_0==LessThanSign||LA55_0==GreaterThanSign) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalSTCoreParser.g:5437:3: rule__STComparisonExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__STComparisonExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0"
    // InternalSTCoreParser.g:5446:1: rule__STComparisonExpression__Group_1__0 : rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 ;
    public final void rule__STComparisonExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5450:1: ( rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 )
            // InternalSTCoreParser.g:5451:2: rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STComparisonExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5458:1: rule__STComparisonExpression__Group_1__0__Impl : ( ( rule__STComparisonExpression__Group_1_0__0 ) ) ;
    public final void rule__STComparisonExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5462:1: ( ( ( rule__STComparisonExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5463:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5463:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5464:2: ( rule__STComparisonExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5465:2: ( rule__STComparisonExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5465:3: rule__STComparisonExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1"
    // InternalSTCoreParser.g:5473:1: rule__STComparisonExpression__Group_1__1 : rule__STComparisonExpression__Group_1__1__Impl ;
    public final void rule__STComparisonExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5477:1: ( rule__STComparisonExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5478:2: rule__STComparisonExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5484:1: rule__STComparisonExpression__Group_1__1__Impl : ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5488:1: ( ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5489:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5489:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5490:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5491:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5491:3: rule__STComparisonExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5500:1: rule__STComparisonExpression__Group_1_0__0 : rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 ;
    public final void rule__STComparisonExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5504:1: ( rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5505:2: rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_45);
            rule__STComparisonExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5512:1: rule__STComparisonExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STComparisonExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5516:1: ( ( () ) )
            // InternalSTCoreParser.g:5517:1: ( () )
            {
            // InternalSTCoreParser.g:5517:1: ( () )
            // InternalSTCoreParser.g:5518:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTComparisonExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5519:2: ()
            // InternalSTCoreParser.g:5519:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTComparisonExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5527:1: rule__STComparisonExpression__Group_1_0__1 : rule__STComparisonExpression__Group_1_0__1__Impl ;
    public final void rule__STComparisonExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5531:1: ( rule__STComparisonExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5532:2: rule__STComparisonExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5538:1: rule__STComparisonExpression__Group_1_0__1__Impl : ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5542:1: ( ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5543:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5543:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5544:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5545:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5545:3: rule__STComparisonExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__0"
    // InternalSTCoreParser.g:5554:1: rule__STAddSubExpression__Group__0 : rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 ;
    public final void rule__STAddSubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5558:1: ( rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 )
            // InternalSTCoreParser.g:5559:2: rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__STAddSubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0"


    // $ANTLR start "rule__STAddSubExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5566:1: rule__STAddSubExpression__Group__0__Impl : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5570:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTCoreParser.g:5571:1: ( ruleSTMulDivModExpression )
            {
            // InternalSTCoreParser.g:5571:1: ( ruleSTMulDivModExpression )
            // InternalSTCoreParser.g:5572:2: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__1"
    // InternalSTCoreParser.g:5581:1: rule__STAddSubExpression__Group__1 : rule__STAddSubExpression__Group__1__Impl ;
    public final void rule__STAddSubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5585:1: ( rule__STAddSubExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5586:2: rule__STAddSubExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1"


    // $ANTLR start "rule__STAddSubExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5592:1: rule__STAddSubExpression__Group__1__Impl : ( ( rule__STAddSubExpression__Group_1__0 )* ) ;
    public final void rule__STAddSubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5596:1: ( ( ( rule__STAddSubExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5597:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5597:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5598:2: ( rule__STAddSubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5599:2: ( rule__STAddSubExpression__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==PlusSign||LA56_0==HyphenMinus) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalSTCoreParser.g:5599:3: rule__STAddSubExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__STAddSubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0"
    // InternalSTCoreParser.g:5608:1: rule__STAddSubExpression__Group_1__0 : rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 ;
    public final void rule__STAddSubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5612:1: ( rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 )
            // InternalSTCoreParser.g:5613:2: rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STAddSubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5620:1: rule__STAddSubExpression__Group_1__0__Impl : ( ( rule__STAddSubExpression__Group_1_0__0 ) ) ;
    public final void rule__STAddSubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5624:1: ( ( ( rule__STAddSubExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5625:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5625:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5626:2: ( rule__STAddSubExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5627:2: ( rule__STAddSubExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5627:3: rule__STAddSubExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1"
    // InternalSTCoreParser.g:5635:1: rule__STAddSubExpression__Group_1__1 : rule__STAddSubExpression__Group_1__1__Impl ;
    public final void rule__STAddSubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5639:1: ( rule__STAddSubExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5640:2: rule__STAddSubExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5646:1: rule__STAddSubExpression__Group_1__1__Impl : ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5650:1: ( ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5651:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5651:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5652:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5653:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5653:3: rule__STAddSubExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5662:1: rule__STAddSubExpression__Group_1_0__0 : rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 ;
    public final void rule__STAddSubExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5666:1: ( rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5667:2: rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_47);
            rule__STAddSubExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5674:1: rule__STAddSubExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAddSubExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5678:1: ( ( () ) )
            // InternalSTCoreParser.g:5679:1: ( () )
            {
            // InternalSTCoreParser.g:5679:1: ( () )
            // InternalSTCoreParser.g:5680:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTAddSubExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5681:2: ()
            // InternalSTCoreParser.g:5681:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTAddSubExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5689:1: rule__STAddSubExpression__Group_1_0__1 : rule__STAddSubExpression__Group_1_0__1__Impl ;
    public final void rule__STAddSubExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5693:1: ( rule__STAddSubExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5694:2: rule__STAddSubExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5700:1: rule__STAddSubExpression__Group_1_0__1__Impl : ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5704:1: ( ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5705:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5705:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5706:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5707:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5707:3: rule__STAddSubExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__0"
    // InternalSTCoreParser.g:5716:1: rule__STMulDivModExpression__Group__0 : rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 ;
    public final void rule__STMulDivModExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5720:1: ( rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 )
            // InternalSTCoreParser.g:5721:2: rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__STMulDivModExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0"


    // $ANTLR start "rule__STMulDivModExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5728:1: rule__STMulDivModExpression__Group__0__Impl : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5732:1: ( ( ruleSTPowerExpression ) )
            // InternalSTCoreParser.g:5733:1: ( ruleSTPowerExpression )
            {
            // InternalSTCoreParser.g:5733:1: ( ruleSTPowerExpression )
            // InternalSTCoreParser.g:5734:2: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__1"
    // InternalSTCoreParser.g:5743:1: rule__STMulDivModExpression__Group__1 : rule__STMulDivModExpression__Group__1__Impl ;
    public final void rule__STMulDivModExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5747:1: ( rule__STMulDivModExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5748:2: rule__STMulDivModExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1"


    // $ANTLR start "rule__STMulDivModExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5754:1: rule__STMulDivModExpression__Group__1__Impl : ( ( rule__STMulDivModExpression__Group_1__0 )* ) ;
    public final void rule__STMulDivModExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5758:1: ( ( ( rule__STMulDivModExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5759:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5759:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5760:2: ( rule__STMulDivModExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5761:2: ( rule__STMulDivModExpression__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==MOD||LA57_0==Asterisk||LA57_0==Solidus) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalSTCoreParser.g:5761:3: rule__STMulDivModExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_50);
            	    rule__STMulDivModExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0"
    // InternalSTCoreParser.g:5770:1: rule__STMulDivModExpression__Group_1__0 : rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 ;
    public final void rule__STMulDivModExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5774:1: ( rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 )
            // InternalSTCoreParser.g:5775:2: rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STMulDivModExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5782:1: rule__STMulDivModExpression__Group_1__0__Impl : ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5786:1: ( ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5787:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5787:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5788:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5789:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5789:3: rule__STMulDivModExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1"
    // InternalSTCoreParser.g:5797:1: rule__STMulDivModExpression__Group_1__1 : rule__STMulDivModExpression__Group_1__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5801:1: ( rule__STMulDivModExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5802:2: rule__STMulDivModExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5808:1: rule__STMulDivModExpression__Group_1__1__Impl : ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5812:1: ( ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5813:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5813:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5814:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5815:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5815:3: rule__STMulDivModExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5824:1: rule__STMulDivModExpression__Group_1_0__0 : rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 ;
    public final void rule__STMulDivModExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5828:1: ( rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5829:2: rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_49);
            rule__STMulDivModExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5836:1: rule__STMulDivModExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STMulDivModExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5840:1: ( ( () ) )
            // InternalSTCoreParser.g:5841:1: ( () )
            {
            // InternalSTCoreParser.g:5841:1: ( () )
            // InternalSTCoreParser.g:5842:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTMulDivModExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5843:2: ()
            // InternalSTCoreParser.g:5843:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTMulDivModExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5851:1: rule__STMulDivModExpression__Group_1_0__1 : rule__STMulDivModExpression__Group_1_0__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5855:1: ( rule__STMulDivModExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5856:2: rule__STMulDivModExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5862:1: rule__STMulDivModExpression__Group_1_0__1__Impl : ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5866:1: ( ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5867:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5867:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5868:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5869:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5869:3: rule__STMulDivModExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__0"
    // InternalSTCoreParser.g:5878:1: rule__STPowerExpression__Group__0 : rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 ;
    public final void rule__STPowerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5882:1: ( rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 )
            // InternalSTCoreParser.g:5883:2: rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1
            {
            pushFollow(FOLLOW_51);
            rule__STPowerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0"


    // $ANTLR start "rule__STPowerExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5890:1: rule__STPowerExpression__Group__0__Impl : ( ruleSTSignumExpression ) ;
    public final void rule__STPowerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5894:1: ( ( ruleSTSignumExpression ) )
            // InternalSTCoreParser.g:5895:1: ( ruleSTSignumExpression )
            {
            // InternalSTCoreParser.g:5895:1: ( ruleSTSignumExpression )
            // InternalSTCoreParser.g:5896:2: ruleSTSignumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTSignumExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTSignumExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__1"
    // InternalSTCoreParser.g:5905:1: rule__STPowerExpression__Group__1 : rule__STPowerExpression__Group__1__Impl ;
    public final void rule__STPowerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5909:1: ( rule__STPowerExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5910:2: rule__STPowerExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1"


    // $ANTLR start "rule__STPowerExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5916:1: rule__STPowerExpression__Group__1__Impl : ( ( rule__STPowerExpression__Group_1__0 )* ) ;
    public final void rule__STPowerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5920:1: ( ( ( rule__STPowerExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5921:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5921:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5922:2: ( rule__STPowerExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5923:2: ( rule__STPowerExpression__Group_1__0 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==AsteriskAsterisk) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalSTCoreParser.g:5923:3: rule__STPowerExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_52);
            	    rule__STPowerExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__0"
    // InternalSTCoreParser.g:5932:1: rule__STPowerExpression__Group_1__0 : rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 ;
    public final void rule__STPowerExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5936:1: ( rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 )
            // InternalSTCoreParser.g:5937:2: rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STPowerExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0"


    // $ANTLR start "rule__STPowerExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5944:1: rule__STPowerExpression__Group_1__0__Impl : ( ( rule__STPowerExpression__Group_1_0__0 ) ) ;
    public final void rule__STPowerExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5948:1: ( ( ( rule__STPowerExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5949:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5949:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5950:2: ( rule__STPowerExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5951:2: ( rule__STPowerExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5951:3: rule__STPowerExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__1"
    // InternalSTCoreParser.g:5959:1: rule__STPowerExpression__Group_1__1 : rule__STPowerExpression__Group_1__1__Impl ;
    public final void rule__STPowerExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5963:1: ( rule__STPowerExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5964:2: rule__STPowerExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1"


    // $ANTLR start "rule__STPowerExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5970:1: rule__STPowerExpression__Group_1__1__Impl : ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STPowerExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5974:1: ( ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5975:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5975:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5976:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5977:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5977:3: rule__STPowerExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5986:1: rule__STPowerExpression__Group_1_0__0 : rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 ;
    public final void rule__STPowerExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5990:1: ( rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5991:2: rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_51);
            rule__STPowerExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5998:1: rule__STPowerExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STPowerExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6002:1: ( ( () ) )
            // InternalSTCoreParser.g:6003:1: ( () )
            {
            // InternalSTCoreParser.g:6003:1: ( () )
            // InternalSTCoreParser.g:6004:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTPowerExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:6005:2: ()
            // InternalSTCoreParser.g:6005:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTPowerExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1"
    // InternalSTCoreParser.g:6013:1: rule__STPowerExpression__Group_1_0__1 : rule__STPowerExpression__Group_1_0__1__Impl ;
    public final void rule__STPowerExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6017:1: ( rule__STPowerExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:6018:2: rule__STPowerExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:6024:1: rule__STPowerExpression__Group_1_0__1__Impl : ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STPowerExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6028:1: ( ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:6029:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6029:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:6030:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:6031:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:6031:3: rule__STPowerExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__0"
    // InternalSTCoreParser.g:6040:1: rule__STSignumExpression__Group_2__0 : rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1 ;
    public final void rule__STSignumExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6044:1: ( rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1 )
            // InternalSTCoreParser.g:6045:2: rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1
            {
            pushFollow(FOLLOW_10);
            rule__STSignumExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__0"


    // $ANTLR start "rule__STSignumExpression__Group_2__0__Impl"
    // InternalSTCoreParser.g:6052:1: rule__STSignumExpression__Group_2__0__Impl : ( () ) ;
    public final void rule__STSignumExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6056:1: ( ( () ) )
            // InternalSTCoreParser.g:6057:1: ( () )
            {
            // InternalSTCoreParser.g:6057:1: ( () )
            // InternalSTCoreParser.g:6058:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getSTSignumExpressionAction_2_0()); 
            }
            // InternalSTCoreParser.g:6059:2: ()
            // InternalSTCoreParser.g:6059:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getSTSignumExpressionAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__1"
    // InternalSTCoreParser.g:6067:1: rule__STSignumExpression__Group_2__1 : rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2 ;
    public final void rule__STSignumExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6071:1: ( rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2 )
            // InternalSTCoreParser.g:6072:2: rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2
            {
            pushFollow(FOLLOW_53);
            rule__STSignumExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__1"


    // $ANTLR start "rule__STSignumExpression__Group_2__1__Impl"
    // InternalSTCoreParser.g:6079:1: rule__STSignumExpression__Group_2__1__Impl : ( ( rule__STSignumExpression__SignumAssignment_2_1 ) ) ;
    public final void rule__STSignumExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6083:1: ( ( ( rule__STSignumExpression__SignumAssignment_2_1 ) ) )
            // InternalSTCoreParser.g:6084:1: ( ( rule__STSignumExpression__SignumAssignment_2_1 ) )
            {
            // InternalSTCoreParser.g:6084:1: ( ( rule__STSignumExpression__SignumAssignment_2_1 ) )
            // InternalSTCoreParser.g:6085:2: ( rule__STSignumExpression__SignumAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getSignumAssignment_2_1()); 
            }
            // InternalSTCoreParser.g:6086:2: ( rule__STSignumExpression__SignumAssignment_2_1 )
            // InternalSTCoreParser.g:6086:3: rule__STSignumExpression__SignumAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__SignumAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getSignumAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__2"
    // InternalSTCoreParser.g:6094:1: rule__STSignumExpression__Group_2__2 : rule__STSignumExpression__Group_2__2__Impl ;
    public final void rule__STSignumExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6098:1: ( rule__STSignumExpression__Group_2__2__Impl )
            // InternalSTCoreParser.g:6099:2: rule__STSignumExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__2"


    // $ANTLR start "rule__STSignumExpression__Group_2__2__Impl"
    // InternalSTCoreParser.g:6105:1: rule__STSignumExpression__Group_2__2__Impl : ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) ) ;
    public final void rule__STSignumExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6109:1: ( ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) ) )
            // InternalSTCoreParser.g:6110:1: ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) )
            {
            // InternalSTCoreParser.g:6110:1: ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) )
            // InternalSTCoreParser.g:6111:2: ( rule__STSignumExpression__ExpressionAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getExpressionAssignment_2_2()); 
            }
            // InternalSTCoreParser.g:6112:2: ( rule__STSignumExpression__ExpressionAssignment_2_2 )
            // InternalSTCoreParser.g:6112:3: rule__STSignumExpression__ExpressionAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__ExpressionAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getExpressionAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group__0"
    // InternalSTCoreParser.g:6121:1: rule__STSelectionExpression__Group__0 : rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1 ;
    public final void rule__STSelectionExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6125:1: ( rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1 )
            // InternalSTCoreParser.g:6126:2: rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__STSelectionExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__0"


    // $ANTLR start "rule__STSelectionExpression__Group__0__Impl"
    // InternalSTCoreParser.g:6133:1: rule__STSelectionExpression__Group__0__Impl : ( ruleSTAtomicExpression ) ;
    public final void rule__STSelectionExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6137:1: ( ( ruleSTAtomicExpression ) )
            // InternalSTCoreParser.g:6138:1: ( ruleSTAtomicExpression )
            {
            // InternalSTCoreParser.g:6138:1: ( ruleSTAtomicExpression )
            // InternalSTCoreParser.g:6139:2: ruleSTAtomicExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getSTAtomicExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAtomicExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getSTAtomicExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group__1"
    // InternalSTCoreParser.g:6148:1: rule__STSelectionExpression__Group__1 : rule__STSelectionExpression__Group__1__Impl ;
    public final void rule__STSelectionExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6152:1: ( rule__STSelectionExpression__Group__1__Impl )
            // InternalSTCoreParser.g:6153:2: rule__STSelectionExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__1"


    // $ANTLR start "rule__STSelectionExpression__Group__1__Impl"
    // InternalSTCoreParser.g:6159:1: rule__STSelectionExpression__Group__1__Impl : ( ( rule__STSelectionExpression__Group_1__0 )* ) ;
    public final void rule__STSelectionExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6163:1: ( ( ( rule__STSelectionExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:6164:1: ( ( rule__STSelectionExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:6164:1: ( ( rule__STSelectionExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:6165:2: ( rule__STSelectionExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:6166:2: ( rule__STSelectionExpression__Group_1__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==FullStop||LA59_0==LeftSquareBracket) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalSTCoreParser.g:6166:3: rule__STSelectionExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_55);
            	    rule__STSelectionExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__0"
    // InternalSTCoreParser.g:6175:1: rule__STSelectionExpression__Group_1__0 : rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1 ;
    public final void rule__STSelectionExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6179:1: ( rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1 )
            // InternalSTCoreParser.g:6180:2: rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1
            {
            pushFollow(FOLLOW_54);
            rule__STSelectionExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:6187:1: rule__STSelectionExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STSelectionExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6191:1: ( ( () ) )
            // InternalSTCoreParser.g:6192:1: ( () )
            {
            // InternalSTCoreParser.g:6192:1: ( () )
            // InternalSTCoreParser.g:6193:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getSTMemberSelectionReceiverAction_1_0()); 
            }
            // InternalSTCoreParser.g:6194:2: ()
            // InternalSTCoreParser.g:6194:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getSTMemberSelectionReceiverAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__1"
    // InternalSTCoreParser.g:6202:1: rule__STSelectionExpression__Group_1__1 : rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2 ;
    public final void rule__STSelectionExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6206:1: ( rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2 )
            // InternalSTCoreParser.g:6207:2: rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2
            {
            pushFollow(FOLLOW_56);
            rule__STSelectionExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:6214:1: rule__STSelectionExpression__Group_1__1__Impl : ( ( rule__STSelectionExpression__Alternatives_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6218:1: ( ( ( rule__STSelectionExpression__Alternatives_1_1 ) ) )
            // InternalSTCoreParser.g:6219:1: ( ( rule__STSelectionExpression__Alternatives_1_1 ) )
            {
            // InternalSTCoreParser.g:6219:1: ( ( rule__STSelectionExpression__Alternatives_1_1 ) )
            // InternalSTCoreParser.g:6220:2: ( rule__STSelectionExpression__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getAlternatives_1_1()); 
            }
            // InternalSTCoreParser.g:6221:2: ( rule__STSelectionExpression__Alternatives_1_1 )
            // InternalSTCoreParser.g:6221:3: rule__STSelectionExpression__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__2"
    // InternalSTCoreParser.g:6229:1: rule__STSelectionExpression__Group_1__2 : rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3 ;
    public final void rule__STSelectionExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6233:1: ( rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3 )
            // InternalSTCoreParser.g:6234:2: rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3
            {
            pushFollow(FOLLOW_56);
            rule__STSelectionExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1__2__Impl"
    // InternalSTCoreParser.g:6241:1: rule__STSelectionExpression__Group_1__2__Impl : ( ( rule__STSelectionExpression__Group_1_2__0 )? ) ;
    public final void rule__STSelectionExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6245:1: ( ( ( rule__STSelectionExpression__Group_1_2__0 )? ) )
            // InternalSTCoreParser.g:6246:1: ( ( rule__STSelectionExpression__Group_1_2__0 )? )
            {
            // InternalSTCoreParser.g:6246:1: ( ( rule__STSelectionExpression__Group_1_2__0 )? )
            // InternalSTCoreParser.g:6247:2: ( rule__STSelectionExpression__Group_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2()); 
            }
            // InternalSTCoreParser.g:6248:2: ( rule__STSelectionExpression__Group_1_2__0 )?
            int alt60=2;
            alt60 = dfa60.predict(input);
            switch (alt60) {
                case 1 :
                    // InternalSTCoreParser.g:6248:3: rule__STSelectionExpression__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__3"
    // InternalSTCoreParser.g:6256:1: rule__STSelectionExpression__Group_1__3 : rule__STSelectionExpression__Group_1__3__Impl ;
    public final void rule__STSelectionExpression__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6260:1: ( rule__STSelectionExpression__Group_1__3__Impl )
            // InternalSTCoreParser.g:6261:2: rule__STSelectionExpression__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__3"


    // $ANTLR start "rule__STSelectionExpression__Group_1__3__Impl"
    // InternalSTCoreParser.g:6267:1: rule__STSelectionExpression__Group_1__3__Impl : ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? ) ;
    public final void rule__STSelectionExpression__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6271:1: ( ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? ) )
            // InternalSTCoreParser.g:6272:1: ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? )
            {
            // InternalSTCoreParser.g:6272:1: ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? )
            // InternalSTCoreParser.g:6273:2: ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorAssignment_1_3()); 
            }
            // InternalSTCoreParser.g:6274:2: ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( ((LA61_0>=B && LA61_0<=X)) ) {
                alt61=1;
            }
            else if ( (LA61_0==FullStop) ) {
                int LA61_2 = input.LA(2);

                if ( (LA61_2==RULE_INT) ) {
                    alt61=1;
                }
            }
            switch (alt61) {
                case 1 :
                    // InternalSTCoreParser.g:6274:3: rule__STSelectionExpression__BitaccessorAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__BitaccessorAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__3__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__0"
    // InternalSTCoreParser.g:6283:1: rule__STSelectionExpression__Group_1_1_0__0 : rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1 ;
    public final void rule__STSelectionExpression__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6287:1: ( rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1 )
            // InternalSTCoreParser.g:6288:2: rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__STSelectionExpression__Group_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__0__Impl"
    // InternalSTCoreParser.g:6295:1: rule__STSelectionExpression__Group_1_1_0__0__Impl : ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6299:1: ( ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) ) )
            // InternalSTCoreParser.g:6300:1: ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) )
            {
            // InternalSTCoreParser.g:6300:1: ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) )
            // InternalSTCoreParser.g:6301:2: ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessAssignment_1_1_0_0()); 
            }
            // InternalSTCoreParser.g:6302:2: ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 )
            // InternalSTCoreParser.g:6302:3: rule__STSelectionExpression__StructAccessAssignment_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__StructAccessAssignment_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessAssignment_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__1"
    // InternalSTCoreParser.g:6310:1: rule__STSelectionExpression__Group_1_1_0__1 : rule__STSelectionExpression__Group_1_1_0__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6314:1: ( rule__STSelectionExpression__Group_1_1_0__1__Impl )
            // InternalSTCoreParser.g:6315:2: rule__STSelectionExpression__Group_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__1__Impl"
    // InternalSTCoreParser.g:6321:1: rule__STSelectionExpression__Group_1_1_0__1__Impl : ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6325:1: ( ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) ) )
            // InternalSTCoreParser.g:6326:1: ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6326:1: ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) )
            // InternalSTCoreParser.g:6327:2: ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberAssignment_1_1_0_1()); 
            }
            // InternalSTCoreParser.g:6328:2: ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 )
            // InternalSTCoreParser.g:6328:3: rule__STSelectionExpression__MemberAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__MemberAssignment_1_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberAssignment_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__0"
    // InternalSTCoreParser.g:6337:1: rule__STSelectionExpression__Group_1_1_1__0 : rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1 ;
    public final void rule__STSelectionExpression__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6341:1: ( rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1 )
            // InternalSTCoreParser.g:6342:2: rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STSelectionExpression__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__0__Impl"
    // InternalSTCoreParser.g:6349:1: rule__STSelectionExpression__Group_1_1_1__0__Impl : ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6353:1: ( ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) ) )
            // InternalSTCoreParser.g:6354:1: ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) )
            {
            // InternalSTCoreParser.g:6354:1: ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) )
            // InternalSTCoreParser.g:6355:2: ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessAssignment_1_1_1_0()); 
            }
            // InternalSTCoreParser.g:6356:2: ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 )
            // InternalSTCoreParser.g:6356:3: rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessAssignment_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__1"
    // InternalSTCoreParser.g:6364:1: rule__STSelectionExpression__Group_1_1_1__1 : rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2 ;
    public final void rule__STSelectionExpression__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6368:1: ( rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2 )
            // InternalSTCoreParser.g:6369:2: rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2
            {
            pushFollow(FOLLOW_11);
            rule__STSelectionExpression__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__1__Impl"
    // InternalSTCoreParser.g:6376:1: rule__STSelectionExpression__Group_1_1_1__1__Impl : ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6380:1: ( ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) ) )
            // InternalSTCoreParser.g:6381:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) )
            {
            // InternalSTCoreParser.g:6381:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) )
            // InternalSTCoreParser.g:6382:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_1()); 
            }
            // InternalSTCoreParser.g:6383:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 )
            // InternalSTCoreParser.g:6383:3: rule__STSelectionExpression__IndexAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__IndexAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__2"
    // InternalSTCoreParser.g:6391:1: rule__STSelectionExpression__Group_1_1_1__2 : rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3 ;
    public final void rule__STSelectionExpression__Group_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6395:1: ( rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3 )
            // InternalSTCoreParser.g:6396:2: rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3
            {
            pushFollow(FOLLOW_11);
            rule__STSelectionExpression__Group_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__2__Impl"
    // InternalSTCoreParser.g:6403:1: rule__STSelectionExpression__Group_1_1_1__2__Impl : ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6407:1: ( ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* ) )
            // InternalSTCoreParser.g:6408:1: ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* )
            {
            // InternalSTCoreParser.g:6408:1: ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* )
            // InternalSTCoreParser.g:6409:2: ( rule__STSelectionExpression__Group_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1_2()); 
            }
            // InternalSTCoreParser.g:6410:2: ( rule__STSelectionExpression__Group_1_1_1_2__0 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==Comma) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalSTCoreParser.g:6410:3: rule__STSelectionExpression__Group_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STSelectionExpression__Group_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__3"
    // InternalSTCoreParser.g:6418:1: rule__STSelectionExpression__Group_1_1_1__3 : rule__STSelectionExpression__Group_1_1_1__3__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6422:1: ( rule__STSelectionExpression__Group_1_1_1__3__Impl )
            // InternalSTCoreParser.g:6423:2: rule__STSelectionExpression__Group_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__3"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__3__Impl"
    // InternalSTCoreParser.g:6429:1: rule__STSelectionExpression__Group_1_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6433:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:6434:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:6434:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:6435:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__3__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__0"
    // InternalSTCoreParser.g:6445:1: rule__STSelectionExpression__Group_1_1_1_2__0 : rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1 ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6449:1: ( rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1 )
            // InternalSTCoreParser.g:6450:2: rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1
            {
            pushFollow(FOLLOW_10);
            rule__STSelectionExpression__Group_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__0__Impl"
    // InternalSTCoreParser.g:6457:1: rule__STSelectionExpression__Group_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6461:1: ( ( Comma ) )
            // InternalSTCoreParser.g:6462:1: ( Comma )
            {
            // InternalSTCoreParser.g:6462:1: ( Comma )
            // InternalSTCoreParser.g:6463:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__1"
    // InternalSTCoreParser.g:6472:1: rule__STSelectionExpression__Group_1_1_1_2__1 : rule__STSelectionExpression__Group_1_1_1_2__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6476:1: ( rule__STSelectionExpression__Group_1_1_1_2__1__Impl )
            // InternalSTCoreParser.g:6477:2: rule__STSelectionExpression__Group_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__1__Impl"
    // InternalSTCoreParser.g:6483:1: rule__STSelectionExpression__Group_1_1_1_2__1__Impl : ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6487:1: ( ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) ) )
            // InternalSTCoreParser.g:6488:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) )
            {
            // InternalSTCoreParser.g:6488:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) )
            // InternalSTCoreParser.g:6489:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_2_1()); 
            }
            // InternalSTCoreParser.g:6490:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 )
            // InternalSTCoreParser.g:6490:3: rule__STSelectionExpression__IndexAssignment_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__IndexAssignment_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__0"
    // InternalSTCoreParser.g:6499:1: rule__STSelectionExpression__Group_1_2__0 : rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1 ;
    public final void rule__STSelectionExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6503:1: ( rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1 )
            // InternalSTCoreParser.g:6504:2: rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1
            {
            pushFollow(FOLLOW_57);
            rule__STSelectionExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__0__Impl"
    // InternalSTCoreParser.g:6511:1: rule__STSelectionExpression__Group_1_2__0__Impl : ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6515:1: ( ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) ) )
            // InternalSTCoreParser.g:6516:1: ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) )
            {
            // InternalSTCoreParser.g:6516:1: ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) )
            // InternalSTCoreParser.g:6517:2: ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationAssignment_1_2_0()); 
            }
            // InternalSTCoreParser.g:6518:2: ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 )
            // InternalSTCoreParser.g:6518:3: rule__STSelectionExpression__PoeInvocationAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__PoeInvocationAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__1"
    // InternalSTCoreParser.g:6526:1: rule__STSelectionExpression__Group_1_2__1 : rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2 ;
    public final void rule__STSelectionExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6530:1: ( rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2 )
            // InternalSTCoreParser.g:6531:2: rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2
            {
            pushFollow(FOLLOW_57);
            rule__STSelectionExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__1__Impl"
    // InternalSTCoreParser.g:6538:1: rule__STSelectionExpression__Group_1_2__1__Impl : ( ( rule__STSelectionExpression__Group_1_2_1__0 )? ) ;
    public final void rule__STSelectionExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6542:1: ( ( ( rule__STSelectionExpression__Group_1_2_1__0 )? ) )
            // InternalSTCoreParser.g:6543:1: ( ( rule__STSelectionExpression__Group_1_2_1__0 )? )
            {
            // InternalSTCoreParser.g:6543:1: ( ( rule__STSelectionExpression__Group_1_2_1__0 )? )
            // InternalSTCoreParser.g:6544:2: ( rule__STSelectionExpression__Group_1_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1()); 
            }
            // InternalSTCoreParser.g:6545:2: ( rule__STSelectionExpression__Group_1_2_1__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( ((LA63_0>=LDATE_AND_TIME && LA63_0<=TIME_OF_DAY)||LA63_0==CONTINUE||LA63_0==WSTRING||(LA63_0>=STRING && LA63_0<=DWORD)||(LA63_0>=LDATE && LA63_0<=LWORD)||(LA63_0>=RETURN && LA63_0<=WCHAR)||(LA63_0>=BOOL && LA63_0<=DINT)||(LA63_0>=LINT && LA63_0<=UINT)||LA63_0==WORD||(LA63_0>=EXIT && LA63_0<=LDT)||LA63_0==TOD||LA63_0==DT||(LA63_0>=LD && LA63_0<=LT)||LA63_0==NOT||LA63_0==D||LA63_0==T||LA63_0==LeftParenthesis||LA63_0==PlusSign||LA63_0==HyphenMinus||LA63_0==RULE_BOOL_VALUES||(LA63_0>=RULE_NON_DECIMAL && LA63_0<=RULE_INT)||(LA63_0>=RULE_ID && LA63_0<=RULE_STRING)) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalSTCoreParser.g:6545:3: rule__STSelectionExpression__Group_1_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__2"
    // InternalSTCoreParser.g:6553:1: rule__STSelectionExpression__Group_1_2__2 : rule__STSelectionExpression__Group_1_2__2__Impl ;
    public final void rule__STSelectionExpression__Group_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6557:1: ( rule__STSelectionExpression__Group_1_2__2__Impl )
            // InternalSTCoreParser.g:6558:2: rule__STSelectionExpression__Group_1_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__2__Impl"
    // InternalSTCoreParser.g:6564:1: rule__STSelectionExpression__Group_1_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STSelectionExpression__Group_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6568:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:6569:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:6569:1: ( RightParenthesis )
            // InternalSTCoreParser.g:6570:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getRightParenthesisKeyword_1_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getRightParenthesisKeyword_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__0"
    // InternalSTCoreParser.g:6580:1: rule__STSelectionExpression__Group_1_2_1__0 : rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1 ;
    public final void rule__STSelectionExpression__Group_1_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6584:1: ( rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1 )
            // InternalSTCoreParser.g:6585:2: rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1
            {
            pushFollow(FOLLOW_58);
            rule__STSelectionExpression__Group_1_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__0__Impl"
    // InternalSTCoreParser.g:6592:1: rule__STSelectionExpression__Group_1_2_1__0__Impl : ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6596:1: ( ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) ) )
            // InternalSTCoreParser.g:6597:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) )
            {
            // InternalSTCoreParser.g:6597:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) )
            // InternalSTCoreParser.g:6598:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_0()); 
            }
            // InternalSTCoreParser.g:6599:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 )
            // InternalSTCoreParser.g:6599:3: rule__STSelectionExpression__ParametersAssignment_1_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ParametersAssignment_1_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__1"
    // InternalSTCoreParser.g:6607:1: rule__STSelectionExpression__Group_1_2_1__1 : rule__STSelectionExpression__Group_1_2_1__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6611:1: ( rule__STSelectionExpression__Group_1_2_1__1__Impl )
            // InternalSTCoreParser.g:6612:2: rule__STSelectionExpression__Group_1_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__1__Impl"
    // InternalSTCoreParser.g:6618:1: rule__STSelectionExpression__Group_1_2_1__1__Impl : ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* ) ;
    public final void rule__STSelectionExpression__Group_1_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6622:1: ( ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* ) )
            // InternalSTCoreParser.g:6623:1: ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* )
            {
            // InternalSTCoreParser.g:6623:1: ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* )
            // InternalSTCoreParser.g:6624:2: ( rule__STSelectionExpression__Group_1_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1_1()); 
            }
            // InternalSTCoreParser.g:6625:2: ( rule__STSelectionExpression__Group_1_2_1_1__0 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==Comma) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalSTCoreParser.g:6625:3: rule__STSelectionExpression__Group_1_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STSelectionExpression__Group_1_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__0"
    // InternalSTCoreParser.g:6634:1: rule__STSelectionExpression__Group_1_2_1_1__0 : rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1 ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6638:1: ( rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1 )
            // InternalSTCoreParser.g:6639:2: rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STSelectionExpression__Group_1_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__0__Impl"
    // InternalSTCoreParser.g:6646:1: rule__STSelectionExpression__Group_1_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6650:1: ( ( Comma ) )
            // InternalSTCoreParser.g:6651:1: ( Comma )
            {
            // InternalSTCoreParser.g:6651:1: ( Comma )
            // InternalSTCoreParser.g:6652:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__1"
    // InternalSTCoreParser.g:6661:1: rule__STSelectionExpression__Group_1_2_1_1__1 : rule__STSelectionExpression__Group_1_2_1_1__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6665:1: ( rule__STSelectionExpression__Group_1_2_1_1__1__Impl )
            // InternalSTCoreParser.g:6666:2: rule__STSelectionExpression__Group_1_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__1__Impl"
    // InternalSTCoreParser.g:6672:1: rule__STSelectionExpression__Group_1_2_1_1__1__Impl : ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6676:1: ( ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) ) )
            // InternalSTCoreParser.g:6677:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) )
            {
            // InternalSTCoreParser.g:6677:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) )
            // InternalSTCoreParser.g:6678:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_1_1()); 
            }
            // InternalSTCoreParser.g:6679:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 )
            // InternalSTCoreParser.g:6679:3: rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__1__Impl"


    // $ANTLR start "rule__MultibitPartialAccess__Group__0"
    // InternalSTCoreParser.g:6688:1: rule__MultibitPartialAccess__Group__0 : rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1 ;
    public final void rule__MultibitPartialAccess__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6692:1: ( rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1 )
            // InternalSTCoreParser.g:6693:2: rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1
            {
            pushFollow(FOLLOW_59);
            rule__MultibitPartialAccess__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__0"


    // $ANTLR start "rule__MultibitPartialAccess__Group__0__Impl"
    // InternalSTCoreParser.g:6700:1: rule__MultibitPartialAccess__Group__0__Impl : ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) ) ;
    public final void rule__MultibitPartialAccess__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6704:1: ( ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) ) )
            // InternalSTCoreParser.g:6705:1: ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) )
            {
            // InternalSTCoreParser.g:6705:1: ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) )
            // InternalSTCoreParser.g:6706:2: ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierAssignment_0()); 
            }
            // InternalSTCoreParser.g:6707:2: ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 )
            // InternalSTCoreParser.g:6707:3: rule__MultibitPartialAccess__AccessSpecifierAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__AccessSpecifierAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__0__Impl"


    // $ANTLR start "rule__MultibitPartialAccess__Group__1"
    // InternalSTCoreParser.g:6715:1: rule__MultibitPartialAccess__Group__1 : rule__MultibitPartialAccess__Group__1__Impl ;
    public final void rule__MultibitPartialAccess__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6719:1: ( rule__MultibitPartialAccess__Group__1__Impl )
            // InternalSTCoreParser.g:6720:2: rule__MultibitPartialAccess__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__1"


    // $ANTLR start "rule__MultibitPartialAccess__Group__1__Impl"
    // InternalSTCoreParser.g:6726:1: rule__MultibitPartialAccess__Group__1__Impl : ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) ) ;
    public final void rule__MultibitPartialAccess__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6730:1: ( ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) ) )
            // InternalSTCoreParser.g:6731:1: ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) )
            {
            // InternalSTCoreParser.g:6731:1: ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) )
            // InternalSTCoreParser.g:6732:2: ( rule__MultibitPartialAccess__IndexAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getIndexAssignment_1()); 
            }
            // InternalSTCoreParser.g:6733:2: ( rule__MultibitPartialAccess__IndexAssignment_1 )
            // InternalSTCoreParser.g:6733:3: rule__MultibitPartialAccess__IndexAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__IndexAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getIndexAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__0"
    // InternalSTCoreParser.g:6742:1: rule__STAtomicExpression__Group_0__0 : rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1 ;
    public final void rule__STAtomicExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6746:1: ( rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1 )
            // InternalSTCoreParser.g:6747:2: rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1
            {
            pushFollow(FOLLOW_10);
            rule__STAtomicExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__0"


    // $ANTLR start "rule__STAtomicExpression__Group_0__0__Impl"
    // InternalSTCoreParser.g:6754:1: rule__STAtomicExpression__Group_0__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STAtomicExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6758:1: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:6759:1: ( LeftParenthesis )
            {
            // InternalSTCoreParser.g:6759:1: ( LeftParenthesis )
            // InternalSTCoreParser.g:6760:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__1"
    // InternalSTCoreParser.g:6769:1: rule__STAtomicExpression__Group_0__1 : rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2 ;
    public final void rule__STAtomicExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6773:1: ( rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2 )
            // InternalSTCoreParser.g:6774:2: rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2
            {
            pushFollow(FOLLOW_17);
            rule__STAtomicExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__1"


    // $ANTLR start "rule__STAtomicExpression__Group_0__1__Impl"
    // InternalSTCoreParser.g:6781:1: rule__STAtomicExpression__Group_0__1__Impl : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6785:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:6786:1: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:6786:1: ( ruleSTExpression )
            // InternalSTCoreParser.g:6787:2: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__2"
    // InternalSTCoreParser.g:6796:1: rule__STAtomicExpression__Group_0__2 : rule__STAtomicExpression__Group_0__2__Impl ;
    public final void rule__STAtomicExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6800:1: ( rule__STAtomicExpression__Group_0__2__Impl )
            // InternalSTCoreParser.g:6801:2: rule__STAtomicExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__2"


    // $ANTLR start "rule__STAtomicExpression__Group_0__2__Impl"
    // InternalSTCoreParser.g:6807:1: rule__STAtomicExpression__Group_0__2__Impl : ( RightParenthesis ) ;
    public final void rule__STAtomicExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6811:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:6812:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:6812:1: ( RightParenthesis )
            // InternalSTCoreParser.g:6813:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__0"
    // InternalSTCoreParser.g:6823:1: rule__STAtomicExpression__Group_1__0 : rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1 ;
    public final void rule__STAtomicExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6827:1: ( rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1 )
            // InternalSTCoreParser.g:6828:2: rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__STAtomicExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:6835:1: rule__STAtomicExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STAtomicExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6839:1: ( ( () ) )
            // InternalSTCoreParser.g:6840:1: ( () )
            {
            // InternalSTCoreParser.g:6840:1: ( () )
            // InternalSTCoreParser.g:6841:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTSymbolAction_1_0()); 
            }
            // InternalSTCoreParser.g:6842:2: ()
            // InternalSTCoreParser.g:6842:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTSymbolAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__1"
    // InternalSTCoreParser.g:6850:1: rule__STAtomicExpression__Group_1__1 : rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2 ;
    public final void rule__STAtomicExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6854:1: ( rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2 )
            // InternalSTCoreParser.g:6855:2: rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2
            {
            pushFollow(FOLLOW_7);
            rule__STAtomicExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:6862:1: rule__STAtomicExpression__Group_1__1__Impl : ( ( rule__STAtomicExpression__Group_1_1__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6866:1: ( ( ( rule__STAtomicExpression__Group_1_1__0 )? ) )
            // InternalSTCoreParser.g:6867:1: ( ( rule__STAtomicExpression__Group_1_1__0 )? )
            {
            // InternalSTCoreParser.g:6867:1: ( ( rule__STAtomicExpression__Group_1_1__0 )? )
            // InternalSTCoreParser.g:6868:2: ( rule__STAtomicExpression__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_1()); 
            }
            // InternalSTCoreParser.g:6869:2: ( rule__STAtomicExpression__Group_1_1__0 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_ID) ) {
                int LA65_1 = input.LA(2);

                if ( (LA65_1==NumberSign) ) {
                    alt65=1;
                }
            }
            switch (alt65) {
                case 1 :
                    // InternalSTCoreParser.g:6869:3: rule__STAtomicExpression__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__2"
    // InternalSTCoreParser.g:6877:1: rule__STAtomicExpression__Group_1__2 : rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3 ;
    public final void rule__STAtomicExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6881:1: ( rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3 )
            // InternalSTCoreParser.g:6882:2: rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3
            {
            pushFollow(FOLLOW_56);
            rule__STAtomicExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__2"


    // $ANTLR start "rule__STAtomicExpression__Group_1__2__Impl"
    // InternalSTCoreParser.g:6889:1: rule__STAtomicExpression__Group_1__2__Impl : ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) ) ;
    public final void rule__STAtomicExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6893:1: ( ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) ) )
            // InternalSTCoreParser.g:6894:1: ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) )
            {
            // InternalSTCoreParser.g:6894:1: ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) )
            // InternalSTCoreParser.g:6895:2: ( rule__STAtomicExpression__SymbolAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolAssignment_1_2()); 
            }
            // InternalSTCoreParser.g:6896:2: ( rule__STAtomicExpression__SymbolAssignment_1_2 )
            // InternalSTCoreParser.g:6896:3: rule__STAtomicExpression__SymbolAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__SymbolAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__3"
    // InternalSTCoreParser.g:6904:1: rule__STAtomicExpression__Group_1__3 : rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4 ;
    public final void rule__STAtomicExpression__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6908:1: ( rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4 )
            // InternalSTCoreParser.g:6909:2: rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4
            {
            pushFollow(FOLLOW_56);
            rule__STAtomicExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__3"


    // $ANTLR start "rule__STAtomicExpression__Group_1__3__Impl"
    // InternalSTCoreParser.g:6916:1: rule__STAtomicExpression__Group_1__3__Impl : ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? ) ;
    public final void rule__STAtomicExpression__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6920:1: ( ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? ) )
            // InternalSTCoreParser.g:6921:1: ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? )
            {
            // InternalSTCoreParser.g:6921:1: ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? )
            // InternalSTCoreParser.g:6922:2: ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorAssignment_1_3()); 
            }
            // InternalSTCoreParser.g:6923:2: ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0>=B && LA66_0<=X)) ) {
                alt66=1;
            }
            else if ( (LA66_0==FullStop) ) {
                int LA66_2 = input.LA(2);

                if ( (LA66_2==RULE_INT) ) {
                    alt66=1;
                }
            }
            switch (alt66) {
                case 1 :
                    // InternalSTCoreParser.g:6923:3: rule__STAtomicExpression__BitaccessorAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__BitaccessorAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__3__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__4"
    // InternalSTCoreParser.g:6931:1: rule__STAtomicExpression__Group_1__4 : rule__STAtomicExpression__Group_1__4__Impl ;
    public final void rule__STAtomicExpression__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6935:1: ( rule__STAtomicExpression__Group_1__4__Impl )
            // InternalSTCoreParser.g:6936:2: rule__STAtomicExpression__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__4"


    // $ANTLR start "rule__STAtomicExpression__Group_1__4__Impl"
    // InternalSTCoreParser.g:6942:1: rule__STAtomicExpression__Group_1__4__Impl : ( ( rule__STAtomicExpression__Group_1_4__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6946:1: ( ( ( rule__STAtomicExpression__Group_1_4__0 )? ) )
            // InternalSTCoreParser.g:6947:1: ( ( rule__STAtomicExpression__Group_1_4__0 )? )
            {
            // InternalSTCoreParser.g:6947:1: ( ( rule__STAtomicExpression__Group_1_4__0 )? )
            // InternalSTCoreParser.g:6948:2: ( rule__STAtomicExpression__Group_1_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4()); 
            }
            // InternalSTCoreParser.g:6949:2: ( rule__STAtomicExpression__Group_1_4__0 )?
            int alt67=2;
            alt67 = dfa67.predict(input);
            switch (alt67) {
                case 1 :
                    // InternalSTCoreParser.g:6949:3: rule__STAtomicExpression__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__4__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__0"
    // InternalSTCoreParser.g:6958:1: rule__STAtomicExpression__Group_1_1__0 : rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1 ;
    public final void rule__STAtomicExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6962:1: ( rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1 )
            // InternalSTCoreParser.g:6963:2: rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_60);
            rule__STAtomicExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__0__Impl"
    // InternalSTCoreParser.g:6970:1: rule__STAtomicExpression__Group_1_1__0__Impl : ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6974:1: ( ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) ) )
            // InternalSTCoreParser.g:6975:1: ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) )
            {
            // InternalSTCoreParser.g:6975:1: ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) )
            // InternalSTCoreParser.g:6976:2: ( rule__STAtomicExpression__TypeAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeAssignment_1_1_0()); 
            }
            // InternalSTCoreParser.g:6977:2: ( rule__STAtomicExpression__TypeAssignment_1_1_0 )
            // InternalSTCoreParser.g:6977:3: rule__STAtomicExpression__TypeAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__TypeAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__1"
    // InternalSTCoreParser.g:6985:1: rule__STAtomicExpression__Group_1_1__1 : rule__STAtomicExpression__Group_1_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6989:1: ( rule__STAtomicExpression__Group_1_1__1__Impl )
            // InternalSTCoreParser.g:6990:2: rule__STAtomicExpression__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__1__Impl"
    // InternalSTCoreParser.g:6996:1: rule__STAtomicExpression__Group_1_1__1__Impl : ( NumberSign ) ;
    public final void rule__STAtomicExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7000:1: ( ( NumberSign ) )
            // InternalSTCoreParser.g:7001:1: ( NumberSign )
            {
            // InternalSTCoreParser.g:7001:1: ( NumberSign )
            // InternalSTCoreParser.g:7002:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getNumberSignKeyword_1_1_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getNumberSignKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__0"
    // InternalSTCoreParser.g:7012:1: rule__STAtomicExpression__Group_1_4__0 : rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1 ;
    public final void rule__STAtomicExpression__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7016:1: ( rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1 )
            // InternalSTCoreParser.g:7017:2: rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1
            {
            pushFollow(FOLLOW_57);
            rule__STAtomicExpression__Group_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__0__Impl"
    // InternalSTCoreParser.g:7024:1: rule__STAtomicExpression__Group_1_4__0__Impl : ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7028:1: ( ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) ) )
            // InternalSTCoreParser.g:7029:1: ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) )
            {
            // InternalSTCoreParser.g:7029:1: ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) )
            // InternalSTCoreParser.g:7030:2: ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationAssignment_1_4_0()); 
            }
            // InternalSTCoreParser.g:7031:2: ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 )
            // InternalSTCoreParser.g:7031:3: rule__STAtomicExpression__PoeInvocationAssignment_1_4_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__PoeInvocationAssignment_1_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationAssignment_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__1"
    // InternalSTCoreParser.g:7039:1: rule__STAtomicExpression__Group_1_4__1 : rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2 ;
    public final void rule__STAtomicExpression__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7043:1: ( rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2 )
            // InternalSTCoreParser.g:7044:2: rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2
            {
            pushFollow(FOLLOW_57);
            rule__STAtomicExpression__Group_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__1__Impl"
    // InternalSTCoreParser.g:7051:1: rule__STAtomicExpression__Group_1_4__1__Impl : ( ( rule__STAtomicExpression__Group_1_4_1__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7055:1: ( ( ( rule__STAtomicExpression__Group_1_4_1__0 )? ) )
            // InternalSTCoreParser.g:7056:1: ( ( rule__STAtomicExpression__Group_1_4_1__0 )? )
            {
            // InternalSTCoreParser.g:7056:1: ( ( rule__STAtomicExpression__Group_1_4_1__0 )? )
            // InternalSTCoreParser.g:7057:2: ( rule__STAtomicExpression__Group_1_4_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1()); 
            }
            // InternalSTCoreParser.g:7058:2: ( rule__STAtomicExpression__Group_1_4_1__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( ((LA68_0>=LDATE_AND_TIME && LA68_0<=TIME_OF_DAY)||LA68_0==CONTINUE||LA68_0==WSTRING||(LA68_0>=STRING && LA68_0<=DWORD)||(LA68_0>=LDATE && LA68_0<=LWORD)||(LA68_0>=RETURN && LA68_0<=WCHAR)||(LA68_0>=BOOL && LA68_0<=DINT)||(LA68_0>=LINT && LA68_0<=UINT)||LA68_0==WORD||(LA68_0>=EXIT && LA68_0<=LDT)||LA68_0==TOD||LA68_0==DT||(LA68_0>=LD && LA68_0<=LT)||LA68_0==NOT||LA68_0==D||LA68_0==T||LA68_0==LeftParenthesis||LA68_0==PlusSign||LA68_0==HyphenMinus||LA68_0==RULE_BOOL_VALUES||(LA68_0>=RULE_NON_DECIMAL && LA68_0<=RULE_INT)||(LA68_0>=RULE_ID && LA68_0<=RULE_STRING)) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSTCoreParser.g:7058:3: rule__STAtomicExpression__Group_1_4_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_4_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__2"
    // InternalSTCoreParser.g:7066:1: rule__STAtomicExpression__Group_1_4__2 : rule__STAtomicExpression__Group_1_4__2__Impl ;
    public final void rule__STAtomicExpression__Group_1_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7070:1: ( rule__STAtomicExpression__Group_1_4__2__Impl )
            // InternalSTCoreParser.g:7071:2: rule__STAtomicExpression__Group_1_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__2"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__2__Impl"
    // InternalSTCoreParser.g:7077:1: rule__STAtomicExpression__Group_1_4__2__Impl : ( RightParenthesis ) ;
    public final void rule__STAtomicExpression__Group_1_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7081:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:7082:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:7082:1: ( RightParenthesis )
            // InternalSTCoreParser.g:7083:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_1_4_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__0"
    // InternalSTCoreParser.g:7093:1: rule__STAtomicExpression__Group_1_4_1__0 : rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1 ;
    public final void rule__STAtomicExpression__Group_1_4_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7097:1: ( rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1 )
            // InternalSTCoreParser.g:7098:2: rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1
            {
            pushFollow(FOLLOW_58);
            rule__STAtomicExpression__Group_1_4_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__0__Impl"
    // InternalSTCoreParser.g:7105:1: rule__STAtomicExpression__Group_1_4_1__0__Impl : ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7109:1: ( ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) ) )
            // InternalSTCoreParser.g:7110:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) )
            {
            // InternalSTCoreParser.g:7110:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) )
            // InternalSTCoreParser.g:7111:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_0()); 
            }
            // InternalSTCoreParser.g:7112:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 )
            // InternalSTCoreParser.g:7112:3: rule__STAtomicExpression__ParametersAssignment_1_4_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__ParametersAssignment_1_4_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__1"
    // InternalSTCoreParser.g:7120:1: rule__STAtomicExpression__Group_1_4_1__1 : rule__STAtomicExpression__Group_1_4_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_4_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7124:1: ( rule__STAtomicExpression__Group_1_4_1__1__Impl )
            // InternalSTCoreParser.g:7125:2: rule__STAtomicExpression__Group_1_4_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__1__Impl"
    // InternalSTCoreParser.g:7131:1: rule__STAtomicExpression__Group_1_4_1__1__Impl : ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* ) ;
    public final void rule__STAtomicExpression__Group_1_4_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7135:1: ( ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* ) )
            // InternalSTCoreParser.g:7136:1: ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* )
            {
            // InternalSTCoreParser.g:7136:1: ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* )
            // InternalSTCoreParser.g:7137:2: ( rule__STAtomicExpression__Group_1_4_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1_1()); 
            }
            // InternalSTCoreParser.g:7138:2: ( rule__STAtomicExpression__Group_1_4_1_1__0 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==Comma) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalSTCoreParser.g:7138:3: rule__STAtomicExpression__Group_1_4_1_1__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STAtomicExpression__Group_1_4_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__0"
    // InternalSTCoreParser.g:7147:1: rule__STAtomicExpression__Group_1_4_1_1__0 : rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1 ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7151:1: ( rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1 )
            // InternalSTCoreParser.g:7152:2: rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STAtomicExpression__Group_1_4_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__0__Impl"
    // InternalSTCoreParser.g:7159:1: rule__STAtomicExpression__Group_1_4_1_1__0__Impl : ( Comma ) ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7163:1: ( ( Comma ) )
            // InternalSTCoreParser.g:7164:1: ( Comma )
            {
            // InternalSTCoreParser.g:7164:1: ( Comma )
            // InternalSTCoreParser.g:7165:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getCommaKeyword_1_4_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getCommaKeyword_1_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__1"
    // InternalSTCoreParser.g:7174:1: rule__STAtomicExpression__Group_1_4_1_1__1 : rule__STAtomicExpression__Group_1_4_1_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7178:1: ( rule__STAtomicExpression__Group_1_4_1_1__1__Impl )
            // InternalSTCoreParser.g:7179:2: rule__STAtomicExpression__Group_1_4_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__1__Impl"
    // InternalSTCoreParser.g:7185:1: rule__STAtomicExpression__Group_1_4_1_1__1__Impl : ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7189:1: ( ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) ) )
            // InternalSTCoreParser.g:7190:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) )
            {
            // InternalSTCoreParser.g:7190:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) )
            // InternalSTCoreParser.g:7191:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_1_1()); 
            }
            // InternalSTCoreParser.g:7192:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 )
            // InternalSTCoreParser.g:7192:3: rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_2__0"
    // InternalSTCoreParser.g:7201:1: rule__STAtomicExpression__Group_2__0 : rule__STAtomicExpression__Group_2__0__Impl rule__STAtomicExpression__Group_2__1 ;
    public final void rule__STAtomicExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7205:1: ( rule__STAtomicExpression__Group_2__0__Impl rule__STAtomicExpression__Group_2__1 )
            // InternalSTCoreParser.g:7206:2: rule__STAtomicExpression__Group_2__0__Impl rule__STAtomicExpression__Group_2__1
            {
            pushFollow(FOLLOW_61);
            rule__STAtomicExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_2__0"


    // $ANTLR start "rule__STAtomicExpression__Group_2__0__Impl"
    // InternalSTCoreParser.g:7213:1: rule__STAtomicExpression__Group_2__0__Impl : ( () ) ;
    public final void rule__STAtomicExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7217:1: ( ( () ) )
            // InternalSTCoreParser.g:7218:1: ( () )
            {
            // InternalSTCoreParser.g:7218:1: ( () )
            // InternalSTCoreParser.g:7219:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTReturnAction_2_0()); 
            }
            // InternalSTCoreParser.g:7220:2: ()
            // InternalSTCoreParser.g:7220:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTReturnAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_2__1"
    // InternalSTCoreParser.g:7228:1: rule__STAtomicExpression__Group_2__1 : rule__STAtomicExpression__Group_2__1__Impl ;
    public final void rule__STAtomicExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7232:1: ( rule__STAtomicExpression__Group_2__1__Impl )
            // InternalSTCoreParser.g:7233:2: rule__STAtomicExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_2__1"


    // $ANTLR start "rule__STAtomicExpression__Group_2__1__Impl"
    // InternalSTCoreParser.g:7239:1: rule__STAtomicExpression__Group_2__1__Impl : ( RETURN ) ;
    public final void rule__STAtomicExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7243:1: ( ( RETURN ) )
            // InternalSTCoreParser.g:7244:1: ( RETURN )
            {
            // InternalSTCoreParser.g:7244:1: ( RETURN )
            // InternalSTCoreParser.g:7245:2: RETURN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getRETURNKeyword_2_1()); 
            }
            match(input,RETURN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getRETURNKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_3__0"
    // InternalSTCoreParser.g:7255:1: rule__STAtomicExpression__Group_3__0 : rule__STAtomicExpression__Group_3__0__Impl rule__STAtomicExpression__Group_3__1 ;
    public final void rule__STAtomicExpression__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7259:1: ( rule__STAtomicExpression__Group_3__0__Impl rule__STAtomicExpression__Group_3__1 )
            // InternalSTCoreParser.g:7260:2: rule__STAtomicExpression__Group_3__0__Impl rule__STAtomicExpression__Group_3__1
            {
            pushFollow(FOLLOW_62);
            rule__STAtomicExpression__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_3__0"


    // $ANTLR start "rule__STAtomicExpression__Group_3__0__Impl"
    // InternalSTCoreParser.g:7267:1: rule__STAtomicExpression__Group_3__0__Impl : ( () ) ;
    public final void rule__STAtomicExpression__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7271:1: ( ( () ) )
            // InternalSTCoreParser.g:7272:1: ( () )
            {
            // InternalSTCoreParser.g:7272:1: ( () )
            // InternalSTCoreParser.g:7273:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTContinueAction_3_0()); 
            }
            // InternalSTCoreParser.g:7274:2: ()
            // InternalSTCoreParser.g:7274:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTContinueAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_3__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_3__1"
    // InternalSTCoreParser.g:7282:1: rule__STAtomicExpression__Group_3__1 : rule__STAtomicExpression__Group_3__1__Impl ;
    public final void rule__STAtomicExpression__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7286:1: ( rule__STAtomicExpression__Group_3__1__Impl )
            // InternalSTCoreParser.g:7287:2: rule__STAtomicExpression__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_3__1"


    // $ANTLR start "rule__STAtomicExpression__Group_3__1__Impl"
    // InternalSTCoreParser.g:7293:1: rule__STAtomicExpression__Group_3__1__Impl : ( CONTINUE ) ;
    public final void rule__STAtomicExpression__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7297:1: ( ( CONTINUE ) )
            // InternalSTCoreParser.g:7298:1: ( CONTINUE )
            {
            // InternalSTCoreParser.g:7298:1: ( CONTINUE )
            // InternalSTCoreParser.g:7299:2: CONTINUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getCONTINUEKeyword_3_1()); 
            }
            match(input,CONTINUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getCONTINUEKeyword_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_3__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_4__0"
    // InternalSTCoreParser.g:7309:1: rule__STAtomicExpression__Group_4__0 : rule__STAtomicExpression__Group_4__0__Impl rule__STAtomicExpression__Group_4__1 ;
    public final void rule__STAtomicExpression__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7313:1: ( rule__STAtomicExpression__Group_4__0__Impl rule__STAtomicExpression__Group_4__1 )
            // InternalSTCoreParser.g:7314:2: rule__STAtomicExpression__Group_4__0__Impl rule__STAtomicExpression__Group_4__1
            {
            pushFollow(FOLLOW_53);
            rule__STAtomicExpression__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_4__0"


    // $ANTLR start "rule__STAtomicExpression__Group_4__0__Impl"
    // InternalSTCoreParser.g:7321:1: rule__STAtomicExpression__Group_4__0__Impl : ( () ) ;
    public final void rule__STAtomicExpression__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7325:1: ( ( () ) )
            // InternalSTCoreParser.g:7326:1: ( () )
            {
            // InternalSTCoreParser.g:7326:1: ( () )
            // InternalSTCoreParser.g:7327:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTExitAction_4_0()); 
            }
            // InternalSTCoreParser.g:7328:2: ()
            // InternalSTCoreParser.g:7328:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTExitAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_4__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_4__1"
    // InternalSTCoreParser.g:7336:1: rule__STAtomicExpression__Group_4__1 : rule__STAtomicExpression__Group_4__1__Impl ;
    public final void rule__STAtomicExpression__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7340:1: ( rule__STAtomicExpression__Group_4__1__Impl )
            // InternalSTCoreParser.g:7341:2: rule__STAtomicExpression__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_4__1"


    // $ANTLR start "rule__STAtomicExpression__Group_4__1__Impl"
    // InternalSTCoreParser.g:7347:1: rule__STAtomicExpression__Group_4__1__Impl : ( EXIT ) ;
    public final void rule__STAtomicExpression__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7351:1: ( ( EXIT ) )
            // InternalSTCoreParser.g:7352:1: ( EXIT )
            {
            // InternalSTCoreParser.g:7352:1: ( EXIT )
            // InternalSTCoreParser.g:7353:2: EXIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getEXITKeyword_4_1()); 
            }
            match(input,EXIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getEXITKeyword_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_4__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__0"
    // InternalSTCoreParser.g:7363:1: rule__STLiteralExpressions__Group_0__0 : rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1 ;
    public final void rule__STLiteralExpressions__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7367:1: ( rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1 )
            // InternalSTCoreParser.g:7368:2: rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1
            {
            pushFollow(FOLLOW_63);
            rule__STLiteralExpressions__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__0__Impl"
    // InternalSTCoreParser.g:7375:1: rule__STLiteralExpressions__Group_0__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7379:1: ( ( () ) )
            // InternalSTCoreParser.g:7380:1: ( () )
            {
            // InternalSTCoreParser.g:7380:1: ( () )
            // InternalSTCoreParser.g:7381:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralAction_0_0()); 
            }
            // InternalSTCoreParser.g:7382:2: ()
            // InternalSTCoreParser.g:7382:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__1"
    // InternalSTCoreParser.g:7390:1: rule__STLiteralExpressions__Group_0__1 : rule__STLiteralExpressions__Group_0__1__Impl ;
    public final void rule__STLiteralExpressions__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7394:1: ( rule__STLiteralExpressions__Group_0__1__Impl )
            // InternalSTCoreParser.g:7395:2: rule__STLiteralExpressions__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__1__Impl"
    // InternalSTCoreParser.g:7401:1: rule__STLiteralExpressions__Group_0__1__Impl : ( ( rule__STLiteralExpressions__NumericLiteralAssignment_0_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7405:1: ( ( ( rule__STLiteralExpressions__NumericLiteralAssignment_0_1 ) ) )
            // InternalSTCoreParser.g:7406:1: ( ( rule__STLiteralExpressions__NumericLiteralAssignment_0_1 ) )
            {
            // InternalSTCoreParser.g:7406:1: ( ( rule__STLiteralExpressions__NumericLiteralAssignment_0_1 ) )
            // InternalSTCoreParser.g:7407:2: ( rule__STLiteralExpressions__NumericLiteralAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralAssignment_0_1()); 
            }
            // InternalSTCoreParser.g:7408:2: ( rule__STLiteralExpressions__NumericLiteralAssignment_0_1 )
            // InternalSTCoreParser.g:7408:3: rule__STLiteralExpressions__NumericLiteralAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__NumericLiteralAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__0"
    // InternalSTCoreParser.g:7417:1: rule__STLiteralExpressions__Group_1__0 : rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1 ;
    public final void rule__STLiteralExpressions__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7421:1: ( rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1 )
            // InternalSTCoreParser.g:7422:2: rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1
            {
            pushFollow(FOLLOW_64);
            rule__STLiteralExpressions__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__0__Impl"
    // InternalSTCoreParser.g:7429:1: rule__STLiteralExpressions__Group_1__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7433:1: ( ( () ) )
            // InternalSTCoreParser.g:7434:1: ( () )
            {
            // InternalSTCoreParser.g:7434:1: ( () )
            // InternalSTCoreParser.g:7435:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralAction_1_0()); 
            }
            // InternalSTCoreParser.g:7436:2: ()
            // InternalSTCoreParser.g:7436:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__1"
    // InternalSTCoreParser.g:7444:1: rule__STLiteralExpressions__Group_1__1 : rule__STLiteralExpressions__Group_1__1__Impl ;
    public final void rule__STLiteralExpressions__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7448:1: ( rule__STLiteralExpressions__Group_1__1__Impl )
            // InternalSTCoreParser.g:7449:2: rule__STLiteralExpressions__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__1__Impl"
    // InternalSTCoreParser.g:7455:1: rule__STLiteralExpressions__Group_1__1__Impl : ( ( rule__STLiteralExpressions__DateLiteralAssignment_1_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7459:1: ( ( ( rule__STLiteralExpressions__DateLiteralAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:7460:1: ( ( rule__STLiteralExpressions__DateLiteralAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:7460:1: ( ( rule__STLiteralExpressions__DateLiteralAssignment_1_1 ) )
            // InternalSTCoreParser.g:7461:2: ( rule__STLiteralExpressions__DateLiteralAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:7462:2: ( rule__STLiteralExpressions__DateLiteralAssignment_1_1 )
            // InternalSTCoreParser.g:7462:3: rule__STLiteralExpressions__DateLiteralAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__DateLiteralAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__0"
    // InternalSTCoreParser.g:7471:1: rule__STLiteralExpressions__Group_2__0 : rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1 ;
    public final void rule__STLiteralExpressions__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7475:1: ( rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1 )
            // InternalSTCoreParser.g:7476:2: rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1
            {
            pushFollow(FOLLOW_65);
            rule__STLiteralExpressions__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__0__Impl"
    // InternalSTCoreParser.g:7483:1: rule__STLiteralExpressions__Group_2__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7487:1: ( ( () ) )
            // InternalSTCoreParser.g:7488:1: ( () )
            {
            // InternalSTCoreParser.g:7488:1: ( () )
            // InternalSTCoreParser.g:7489:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralAction_2_0()); 
            }
            // InternalSTCoreParser.g:7490:2: ()
            // InternalSTCoreParser.g:7490:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__1"
    // InternalSTCoreParser.g:7498:1: rule__STLiteralExpressions__Group_2__1 : rule__STLiteralExpressions__Group_2__1__Impl ;
    public final void rule__STLiteralExpressions__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7502:1: ( rule__STLiteralExpressions__Group_2__1__Impl )
            // InternalSTCoreParser.g:7503:2: rule__STLiteralExpressions__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__1__Impl"
    // InternalSTCoreParser.g:7509:1: rule__STLiteralExpressions__Group_2__1__Impl : ( ( rule__STLiteralExpressions__TimeLiteralAssignment_2_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7513:1: ( ( ( rule__STLiteralExpressions__TimeLiteralAssignment_2_1 ) ) )
            // InternalSTCoreParser.g:7514:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_2_1 ) )
            {
            // InternalSTCoreParser.g:7514:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_2_1 ) )
            // InternalSTCoreParser.g:7515:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_2_1()); 
            }
            // InternalSTCoreParser.g:7516:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_2_1 )
            // InternalSTCoreParser.g:7516:3: rule__STLiteralExpressions__TimeLiteralAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeLiteralAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__0"
    // InternalSTCoreParser.g:7525:1: rule__STLiteralExpressions__Group_3__0 : rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1 ;
    public final void rule__STLiteralExpressions__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7529:1: ( rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1 )
            // InternalSTCoreParser.g:7530:2: rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1
            {
            pushFollow(FOLLOW_66);
            rule__STLiteralExpressions__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__0__Impl"
    // InternalSTCoreParser.g:7537:1: rule__STLiteralExpressions__Group_3__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7541:1: ( ( () ) )
            // InternalSTCoreParser.g:7542:1: ( () )
            {
            // InternalSTCoreParser.g:7542:1: ( () )
            // InternalSTCoreParser.g:7543:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralAction_3_0()); 
            }
            // InternalSTCoreParser.g:7544:2: ()
            // InternalSTCoreParser.g:7544:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__1"
    // InternalSTCoreParser.g:7552:1: rule__STLiteralExpressions__Group_3__1 : rule__STLiteralExpressions__Group_3__1__Impl ;
    public final void rule__STLiteralExpressions__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7556:1: ( rule__STLiteralExpressions__Group_3__1__Impl )
            // InternalSTCoreParser.g:7557:2: rule__STLiteralExpressions__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__1__Impl"
    // InternalSTCoreParser.g:7563:1: rule__STLiteralExpressions__Group_3__1__Impl : ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_3_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7567:1: ( ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_3_1 ) ) )
            // InternalSTCoreParser.g:7568:1: ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_3_1 ) )
            {
            // InternalSTCoreParser.g:7568:1: ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_3_1 ) )
            // InternalSTCoreParser.g:7569:2: ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralAssignment_3_1()); 
            }
            // InternalSTCoreParser.g:7570:2: ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_3_1 )
            // InternalSTCoreParser.g:7570:3: rule__STLiteralExpressions__TimeOfDayLiteralAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeOfDayLiteralAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__0"
    // InternalSTCoreParser.g:7579:1: rule__STLiteralExpressions__Group_4__0 : rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1 ;
    public final void rule__STLiteralExpressions__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7583:1: ( rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1 )
            // InternalSTCoreParser.g:7584:2: rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1
            {
            pushFollow(FOLLOW_67);
            rule__STLiteralExpressions__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__0__Impl"
    // InternalSTCoreParser.g:7591:1: rule__STLiteralExpressions__Group_4__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7595:1: ( ( () ) )
            // InternalSTCoreParser.g:7596:1: ( () )
            {
            // InternalSTCoreParser.g:7596:1: ( () )
            // InternalSTCoreParser.g:7597:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralAction_4_0()); 
            }
            // InternalSTCoreParser.g:7598:2: ()
            // InternalSTCoreParser.g:7598:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__1"
    // InternalSTCoreParser.g:7606:1: rule__STLiteralExpressions__Group_4__1 : rule__STLiteralExpressions__Group_4__1__Impl ;
    public final void rule__STLiteralExpressions__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7610:1: ( rule__STLiteralExpressions__Group_4__1__Impl )
            // InternalSTCoreParser.g:7611:2: rule__STLiteralExpressions__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__1__Impl"
    // InternalSTCoreParser.g:7617:1: rule__STLiteralExpressions__Group_4__1__Impl : ( ( rule__STLiteralExpressions__TimeLiteralAssignment_4_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7621:1: ( ( ( rule__STLiteralExpressions__TimeLiteralAssignment_4_1 ) ) )
            // InternalSTCoreParser.g:7622:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_4_1 ) )
            {
            // InternalSTCoreParser.g:7622:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_4_1 ) )
            // InternalSTCoreParser.g:7623:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_4_1()); 
            }
            // InternalSTCoreParser.g:7624:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_4_1 )
            // InternalSTCoreParser.g:7624:3: rule__STLiteralExpressions__TimeLiteralAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeLiteralAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__0"
    // InternalSTCoreParser.g:7633:1: rule__STLiteralExpressions__Group_5__0 : rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1 ;
    public final void rule__STLiteralExpressions__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7637:1: ( rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1 )
            // InternalSTCoreParser.g:7638:2: rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1
            {
            pushFollow(FOLLOW_68);
            rule__STLiteralExpressions__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__0__Impl"
    // InternalSTCoreParser.g:7645:1: rule__STLiteralExpressions__Group_5__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7649:1: ( ( () ) )
            // InternalSTCoreParser.g:7650:1: ( () )
            {
            // InternalSTCoreParser.g:7650:1: ( () )
            // InternalSTCoreParser.g:7651:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralAction_5_0()); 
            }
            // InternalSTCoreParser.g:7652:2: ()
            // InternalSTCoreParser.g:7652:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__1"
    // InternalSTCoreParser.g:7660:1: rule__STLiteralExpressions__Group_5__1 : rule__STLiteralExpressions__Group_5__1__Impl ;
    public final void rule__STLiteralExpressions__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7664:1: ( rule__STLiteralExpressions__Group_5__1__Impl )
            // InternalSTCoreParser.g:7665:2: rule__STLiteralExpressions__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__1__Impl"
    // InternalSTCoreParser.g:7671:1: rule__STLiteralExpressions__Group_5__1__Impl : ( ( rule__STLiteralExpressions__StringLiteralAssignment_5_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7675:1: ( ( ( rule__STLiteralExpressions__StringLiteralAssignment_5_1 ) ) )
            // InternalSTCoreParser.g:7676:1: ( ( rule__STLiteralExpressions__StringLiteralAssignment_5_1 ) )
            {
            // InternalSTCoreParser.g:7676:1: ( ( rule__STLiteralExpressions__StringLiteralAssignment_5_1 ) )
            // InternalSTCoreParser.g:7677:2: ( rule__STLiteralExpressions__StringLiteralAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralAssignment_5_1()); 
            }
            // InternalSTCoreParser.g:7678:2: ( rule__STLiteralExpressions__StringLiteralAssignment_5_1 )
            // InternalSTCoreParser.g:7678:3: rule__STLiteralExpressions__StringLiteralAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__StringLiteralAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__1__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__0"
    // InternalSTCoreParser.g:7687:1: rule__NUMERIC_LITERAL__Group__0 : rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1 ;
    public final void rule__NUMERIC_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7691:1: ( rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1 )
            // InternalSTCoreParser.g:7692:2: rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__NUMERIC_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__0"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:7699:1: rule__NUMERIC_LITERAL__Group__0__Impl : ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? ) ;
    public final void rule__NUMERIC_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7703:1: ( ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? ) )
            // InternalSTCoreParser.g:7704:1: ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? )
            {
            // InternalSTCoreParser.g:7704:1: ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? )
            // InternalSTCoreParser.g:7705:2: ( rule__NUMERIC_LITERAL__NotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getNotAssignment_0()); 
            }
            // InternalSTCoreParser.g:7706:2: ( rule__NUMERIC_LITERAL__NotAssignment_0 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==NOT) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSTCoreParser.g:7706:3: rule__NUMERIC_LITERAL__NotAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__NotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getNotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__1"
    // InternalSTCoreParser.g:7714:1: rule__NUMERIC_LITERAL__Group__1 : rule__NUMERIC_LITERAL__Group__1__Impl rule__NUMERIC_LITERAL__Group__2 ;
    public final void rule__NUMERIC_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7718:1: ( rule__NUMERIC_LITERAL__Group__1__Impl rule__NUMERIC_LITERAL__Group__2 )
            // InternalSTCoreParser.g:7719:2: rule__NUMERIC_LITERAL__Group__1__Impl rule__NUMERIC_LITERAL__Group__2
            {
            pushFollow(FOLLOW_63);
            rule__NUMERIC_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__1"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:7726:1: rule__NUMERIC_LITERAL__Group__1__Impl : ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? ) ;
    public final void rule__NUMERIC_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7730:1: ( ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? ) )
            // InternalSTCoreParser.g:7731:1: ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? )
            {
            // InternalSTCoreParser.g:7731:1: ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? )
            // InternalSTCoreParser.g:7732:2: ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAssignment_1()); 
            }
            // InternalSTCoreParser.g:7733:2: ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==DWORD||LA71_0==LREAL||LA71_0==LWORD||(LA71_0>=UDINT && LA71_0<=USINT)||(LA71_0>=BOOL && LA71_0<=BYTE)||LA71_0==DINT||LA71_0==LINT||(LA71_0>=REAL && LA71_0<=SINT)||LA71_0==UINT||LA71_0==WORD||LA71_0==INT) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSTCoreParser.g:7733:3: rule__NUMERIC_LITERAL__KeywordAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__KeywordAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__2"
    // InternalSTCoreParser.g:7741:1: rule__NUMERIC_LITERAL__Group__2 : rule__NUMERIC_LITERAL__Group__2__Impl ;
    public final void rule__NUMERIC_LITERAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7745:1: ( rule__NUMERIC_LITERAL__Group__2__Impl )
            // InternalSTCoreParser.g:7746:2: rule__NUMERIC_LITERAL__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__2"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__2__Impl"
    // InternalSTCoreParser.g:7752:1: rule__NUMERIC_LITERAL__Group__2__Impl : ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) ) ;
    public final void rule__NUMERIC_LITERAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7756:1: ( ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) ) )
            // InternalSTCoreParser.g:7757:1: ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) )
            {
            // InternalSTCoreParser.g:7757:1: ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) )
            // InternalSTCoreParser.g:7758:2: ( rule__NUMERIC_LITERAL__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getAlternatives_2()); 
            }
            // InternalSTCoreParser.g:7759:2: ( rule__NUMERIC_LITERAL__Alternatives_2 )
            // InternalSTCoreParser.g:7759:3: rule__NUMERIC_LITERAL__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__2__Impl"


    // $ANTLR start "rule__DATE_LITERAL__Group__0"
    // InternalSTCoreParser.g:7768:1: rule__DATE_LITERAL__Group__0 : rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1 ;
    public final void rule__DATE_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7772:1: ( rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1 )
            // InternalSTCoreParser.g:7773:2: rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1
            {
            pushFollow(FOLLOW_59);
            rule__DATE_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__0"


    // $ANTLR start "rule__DATE_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:7780:1: rule__DATE_LITERAL__Group__0__Impl : ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__DATE_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7784:1: ( ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:7785:1: ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:7785:1: ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:7786:2: ( rule__DATE_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:7787:2: ( rule__DATE_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:7787:3: rule__DATE_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__DATE_LITERAL__Group__1"
    // InternalSTCoreParser.g:7795:1: rule__DATE_LITERAL__Group__1 : rule__DATE_LITERAL__Group__1__Impl ;
    public final void rule__DATE_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7799:1: ( rule__DATE_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:7800:2: rule__DATE_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__1"


    // $ANTLR start "rule__DATE_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:7806:1: rule__DATE_LITERAL__Group__1__Impl : ( ( rule__DATE_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__DATE_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7810:1: ( ( ( rule__DATE_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:7811:1: ( ( rule__DATE_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:7811:1: ( ( rule__DATE_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:7812:2: ( rule__DATE_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:7813:2: ( rule__DATE_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:7813:3: rule__DATE_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__TIME_LITERAL__Group__0"
    // InternalSTCoreParser.g:7822:1: rule__TIME_LITERAL__Group__0 : rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1 ;
    public final void rule__TIME_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7826:1: ( rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1 )
            // InternalSTCoreParser.g:7827:2: rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__TIME_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__0"


    // $ANTLR start "rule__TIME_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:7834:1: rule__TIME_LITERAL__Group__0__Impl : ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__TIME_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7838:1: ( ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:7839:1: ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:7839:1: ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:7840:2: ( rule__TIME_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:7841:2: ( rule__TIME_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:7841:3: rule__TIME_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__TIME_LITERAL__Group__1"
    // InternalSTCoreParser.g:7849:1: rule__TIME_LITERAL__Group__1 : rule__TIME_LITERAL__Group__1__Impl ;
    public final void rule__TIME_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7853:1: ( rule__TIME_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:7854:2: rule__TIME_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__1"


    // $ANTLR start "rule__TIME_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:7860:1: rule__TIME_LITERAL__Group__1__Impl : ( ( rule__TIME_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__TIME_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7864:1: ( ( ( rule__TIME_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:7865:1: ( ( rule__TIME_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:7865:1: ( ( rule__TIME_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:7866:2: ( rule__TIME_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:7867:2: ( rule__TIME_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:7867:3: rule__TIME_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__0"
    // InternalSTCoreParser.g:7876:1: rule__TIME_OF_DAY_LITERAL__Group__0 : rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1 ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7880:1: ( rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1 )
            // InternalSTCoreParser.g:7881:2: rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1
            {
            pushFollow(FOLLOW_59);
            rule__TIME_OF_DAY_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:7888:1: rule__TIME_OF_DAY_LITERAL__Group__0__Impl : ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7892:1: ( ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:7893:1: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:7893:1: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:7894:2: ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:7895:2: ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:7895:3: rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__1"
    // InternalSTCoreParser.g:7903:1: rule__TIME_OF_DAY_LITERAL__Group__1 : rule__TIME_OF_DAY_LITERAL__Group__1__Impl ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7907:1: ( rule__TIME_OF_DAY_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:7908:2: rule__TIME_OF_DAY_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__1"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:7914:1: rule__TIME_OF_DAY_LITERAL__Group__1__Impl : ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7918:1: ( ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:7919:1: ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:7919:1: ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:7920:2: ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:7921:2: ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:7921:3: rule__TIME_OF_DAY_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__0"
    // InternalSTCoreParser.g:7930:1: rule__DATE_AND_TIME_LITERAL__Group__0 : rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7934:1: ( rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1 )
            // InternalSTCoreParser.g:7935:2: rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1
            {
            pushFollow(FOLLOW_59);
            rule__DATE_AND_TIME_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:7942:1: rule__DATE_AND_TIME_LITERAL__Group__0__Impl : ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7946:1: ( ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:7947:1: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:7947:1: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:7948:2: ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:7949:2: ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:7949:3: rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__1"
    // InternalSTCoreParser.g:7957:1: rule__DATE_AND_TIME_LITERAL__Group__1 : rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7961:1: ( rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2 )
            // InternalSTCoreParser.g:7962:2: rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2
            {
            pushFollow(FOLLOW_70);
            rule__DATE_AND_TIME_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:7969:1: rule__DATE_AND_TIME_LITERAL__Group__1__Impl : ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7973:1: ( ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:7974:1: ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:7974:1: ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) )
            // InternalSTCoreParser.g:7975:2: ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:7976:2: ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 )
            // InternalSTCoreParser.g:7976:3: rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__2"
    // InternalSTCoreParser.g:7984:1: rule__DATE_AND_TIME_LITERAL__Group__2 : rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7988:1: ( rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3 )
            // InternalSTCoreParser.g:7989:2: rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3
            {
            pushFollow(FOLLOW_59);
            rule__DATE_AND_TIME_LITERAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__2"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__2__Impl"
    // InternalSTCoreParser.g:7996:1: rule__DATE_AND_TIME_LITERAL__Group__2__Impl : ( HyphenMinus ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8000:1: ( ( HyphenMinus ) )
            // InternalSTCoreParser.g:8001:1: ( HyphenMinus )
            {
            // InternalSTCoreParser.g:8001:1: ( HyphenMinus )
            // InternalSTCoreParser.g:8002:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getHyphenMinusKeyword_2()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getHyphenMinusKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__2__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__3"
    // InternalSTCoreParser.g:8011:1: rule__DATE_AND_TIME_LITERAL__Group__3 : rule__DATE_AND_TIME_LITERAL__Group__3__Impl ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8015:1: ( rule__DATE_AND_TIME_LITERAL__Group__3__Impl )
            // InternalSTCoreParser.g:8016:2: rule__DATE_AND_TIME_LITERAL__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__3"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__3__Impl"
    // InternalSTCoreParser.g:8022:1: rule__DATE_AND_TIME_LITERAL__Group__3__Impl : ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8026:1: ( ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) ) )
            // InternalSTCoreParser.g:8027:1: ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) )
            {
            // InternalSTCoreParser.g:8027:1: ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) )
            // InternalSTCoreParser.g:8028:2: ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueAssignment_3()); 
            }
            // InternalSTCoreParser.g:8029:2: ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 )
            // InternalSTCoreParser.g:8029:3: rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__3__Impl"


    // $ANTLR start "rule__STRING_LITERAL__Group__0"
    // InternalSTCoreParser.g:8038:1: rule__STRING_LITERAL__Group__0 : rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1 ;
    public final void rule__STRING_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8042:1: ( rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8043:2: rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1
            {
            pushFollow(FOLLOW_68);
            rule__STRING_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__0"


    // $ANTLR start "rule__STRING_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8050:1: rule__STRING_LITERAL__Group__0__Impl : ( ( rule__STRING_LITERAL__Alternatives_0 )? ) ;
    public final void rule__STRING_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8054:1: ( ( ( rule__STRING_LITERAL__Alternatives_0 )? ) )
            // InternalSTCoreParser.g:8055:1: ( ( rule__STRING_LITERAL__Alternatives_0 )? )
            {
            // InternalSTCoreParser.g:8055:1: ( ( rule__STRING_LITERAL__Alternatives_0 )? )
            // InternalSTCoreParser.g:8056:2: ( rule__STRING_LITERAL__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getAlternatives_0()); 
            }
            // InternalSTCoreParser.g:8057:2: ( rule__STRING_LITERAL__Alternatives_0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==WSTRING||LA72_0==STRING||LA72_0==WCHAR||LA72_0==CHAR) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSTCoreParser.g:8057:3: rule__STRING_LITERAL__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STRING_LITERAL__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__STRING_LITERAL__Group__1"
    // InternalSTCoreParser.g:8065:1: rule__STRING_LITERAL__Group__1 : rule__STRING_LITERAL__Group__1__Impl ;
    public final void rule__STRING_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8069:1: ( rule__STRING_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:8070:2: rule__STRING_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__1"


    // $ANTLR start "rule__STRING_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8076:1: rule__STRING_LITERAL__Group__1__Impl : ( ( rule__STRING_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__STRING_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8080:1: ( ( ( rule__STRING_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8081:1: ( ( rule__STRING_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8081:1: ( ( rule__STRING_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:8082:2: ( rule__STRING_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8083:2: ( rule__STRING_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8083:3: rule__STRING_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__INTEGER__Group__0"
    // InternalSTCoreParser.g:8092:1: rule__INTEGER__Group__0 : rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1 ;
    public final void rule__INTEGER__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8096:1: ( rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1 )
            // InternalSTCoreParser.g:8097:2: rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__INTEGER__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__0"


    // $ANTLR start "rule__INTEGER__Group__0__Impl"
    // InternalSTCoreParser.g:8104:1: rule__INTEGER__Group__0__Impl : ( ( rule__INTEGER__Alternatives_0 )? ) ;
    public final void rule__INTEGER__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8108:1: ( ( ( rule__INTEGER__Alternatives_0 )? ) )
            // InternalSTCoreParser.g:8109:1: ( ( rule__INTEGER__Alternatives_0 )? )
            {
            // InternalSTCoreParser.g:8109:1: ( ( rule__INTEGER__Alternatives_0 )? )
            // InternalSTCoreParser.g:8110:2: ( rule__INTEGER__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getAlternatives_0()); 
            }
            // InternalSTCoreParser.g:8111:2: ( rule__INTEGER__Alternatives_0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==PlusSign||LA73_0==HyphenMinus) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSTCoreParser.g:8111:3: rule__INTEGER__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__INTEGER__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__0__Impl"


    // $ANTLR start "rule__INTEGER__Group__1"
    // InternalSTCoreParser.g:8119:1: rule__INTEGER__Group__1 : rule__INTEGER__Group__1__Impl ;
    public final void rule__INTEGER__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8123:1: ( rule__INTEGER__Group__1__Impl )
            // InternalSTCoreParser.g:8124:2: rule__INTEGER__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__1"


    // $ANTLR start "rule__INTEGER__Group__1__Impl"
    // InternalSTCoreParser.g:8130:1: rule__INTEGER__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__INTEGER__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8134:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8135:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8135:1: ( RULE_INT )
            // InternalSTCoreParser.g:8136:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__1__Impl"


    // $ANTLR start "rule__REAL__Group__0"
    // InternalSTCoreParser.g:8146:1: rule__REAL__Group__0 : rule__REAL__Group__0__Impl rule__REAL__Group__1 ;
    public final void rule__REAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8150:1: ( rule__REAL__Group__0__Impl rule__REAL__Group__1 )
            // InternalSTCoreParser.g:8151:2: rule__REAL__Group__0__Impl rule__REAL__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__REAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__REAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__0"


    // $ANTLR start "rule__REAL__Group__0__Impl"
    // InternalSTCoreParser.g:8158:1: rule__REAL__Group__0__Impl : ( ruleINTEGER ) ;
    public final void rule__REAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8162:1: ( ( ruleINTEGER ) )
            // InternalSTCoreParser.g:8163:1: ( ruleINTEGER )
            {
            // InternalSTCoreParser.g:8163:1: ( ruleINTEGER )
            // InternalSTCoreParser.g:8164:2: ruleINTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getINTEGERParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getINTEGERParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__0__Impl"


    // $ANTLR start "rule__REAL__Group__1"
    // InternalSTCoreParser.g:8173:1: rule__REAL__Group__1 : rule__REAL__Group__1__Impl rule__REAL__Group__2 ;
    public final void rule__REAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8177:1: ( rule__REAL__Group__1__Impl rule__REAL__Group__2 )
            // InternalSTCoreParser.g:8178:2: rule__REAL__Group__1__Impl rule__REAL__Group__2
            {
            pushFollow(FOLLOW_73);
            rule__REAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__REAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__1"


    // $ANTLR start "rule__REAL__Group__1__Impl"
    // InternalSTCoreParser.g:8185:1: rule__REAL__Group__1__Impl : ( FullStop ) ;
    public final void rule__REAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8189:1: ( ( FullStop ) )
            // InternalSTCoreParser.g:8190:1: ( FullStop )
            {
            // InternalSTCoreParser.g:8190:1: ( FullStop )
            // InternalSTCoreParser.g:8191:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getFullStopKeyword_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__1__Impl"


    // $ANTLR start "rule__REAL__Group__2"
    // InternalSTCoreParser.g:8200:1: rule__REAL__Group__2 : rule__REAL__Group__2__Impl ;
    public final void rule__REAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8204:1: ( rule__REAL__Group__2__Impl )
            // InternalSTCoreParser.g:8205:2: rule__REAL__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__2"


    // $ANTLR start "rule__REAL__Group__2__Impl"
    // InternalSTCoreParser.g:8211:1: rule__REAL__Group__2__Impl : ( ( rule__REAL__Alternatives_2 ) ) ;
    public final void rule__REAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8215:1: ( ( ( rule__REAL__Alternatives_2 ) ) )
            // InternalSTCoreParser.g:8216:1: ( ( rule__REAL__Alternatives_2 ) )
            {
            // InternalSTCoreParser.g:8216:1: ( ( rule__REAL__Alternatives_2 ) )
            // InternalSTCoreParser.g:8217:2: ( rule__REAL__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getAlternatives_2()); 
            }
            // InternalSTCoreParser.g:8218:2: ( rule__REAL__Alternatives_2 )
            // InternalSTCoreParser.g:8218:3: rule__REAL__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__2__Impl"


    // $ANTLR start "rule__DATE__Group__0"
    // InternalSTCoreParser.g:8227:1: rule__DATE__Group__0 : rule__DATE__Group__0__Impl rule__DATE__Group__1 ;
    public final void rule__DATE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8231:1: ( rule__DATE__Group__0__Impl rule__DATE__Group__1 )
            // InternalSTCoreParser.g:8232:2: rule__DATE__Group__0__Impl rule__DATE__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__DATE__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__0"


    // $ANTLR start "rule__DATE__Group__0__Impl"
    // InternalSTCoreParser.g:8239:1: rule__DATE__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8243:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8244:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8244:1: ( RULE_INT )
            // InternalSTCoreParser.g:8245:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__0__Impl"


    // $ANTLR start "rule__DATE__Group__1"
    // InternalSTCoreParser.g:8254:1: rule__DATE__Group__1 : rule__DATE__Group__1__Impl rule__DATE__Group__2 ;
    public final void rule__DATE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8258:1: ( rule__DATE__Group__1__Impl rule__DATE__Group__2 )
            // InternalSTCoreParser.g:8259:2: rule__DATE__Group__1__Impl rule__DATE__Group__2
            {
            pushFollow(FOLLOW_59);
            rule__DATE__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__1"


    // $ANTLR start "rule__DATE__Group__1__Impl"
    // InternalSTCoreParser.g:8266:1: rule__DATE__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__DATE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8270:1: ( ( HyphenMinus ) )
            // InternalSTCoreParser.g:8271:1: ( HyphenMinus )
            {
            // InternalSTCoreParser.g:8271:1: ( HyphenMinus )
            // InternalSTCoreParser.g:8272:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__1__Impl"


    // $ANTLR start "rule__DATE__Group__2"
    // InternalSTCoreParser.g:8281:1: rule__DATE__Group__2 : rule__DATE__Group__2__Impl rule__DATE__Group__3 ;
    public final void rule__DATE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8285:1: ( rule__DATE__Group__2__Impl rule__DATE__Group__3 )
            // InternalSTCoreParser.g:8286:2: rule__DATE__Group__2__Impl rule__DATE__Group__3
            {
            pushFollow(FOLLOW_70);
            rule__DATE__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__2"


    // $ANTLR start "rule__DATE__Group__2__Impl"
    // InternalSTCoreParser.g:8293:1: rule__DATE__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8297:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8298:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8298:1: ( RULE_INT )
            // InternalSTCoreParser.g:8299:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__2__Impl"


    // $ANTLR start "rule__DATE__Group__3"
    // InternalSTCoreParser.g:8308:1: rule__DATE__Group__3 : rule__DATE__Group__3__Impl rule__DATE__Group__4 ;
    public final void rule__DATE__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8312:1: ( rule__DATE__Group__3__Impl rule__DATE__Group__4 )
            // InternalSTCoreParser.g:8313:2: rule__DATE__Group__3__Impl rule__DATE__Group__4
            {
            pushFollow(FOLLOW_59);
            rule__DATE__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__3"


    // $ANTLR start "rule__DATE__Group__3__Impl"
    // InternalSTCoreParser.g:8320:1: rule__DATE__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__DATE__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8324:1: ( ( HyphenMinus ) )
            // InternalSTCoreParser.g:8325:1: ( HyphenMinus )
            {
            // InternalSTCoreParser.g:8325:1: ( HyphenMinus )
            // InternalSTCoreParser.g:8326:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__3__Impl"


    // $ANTLR start "rule__DATE__Group__4"
    // InternalSTCoreParser.g:8335:1: rule__DATE__Group__4 : rule__DATE__Group__4__Impl ;
    public final void rule__DATE__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8339:1: ( rule__DATE__Group__4__Impl )
            // InternalSTCoreParser.g:8340:2: rule__DATE__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__4"


    // $ANTLR start "rule__DATE__Group__4__Impl"
    // InternalSTCoreParser.g:8346:1: rule__DATE__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8350:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8351:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8351:1: ( RULE_INT )
            // InternalSTCoreParser.g:8352:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__4__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__0"
    // InternalSTCoreParser.g:8362:1: rule__TIME_OF_DAY__Group__0 : rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1 ;
    public final void rule__TIME_OF_DAY__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8366:1: ( rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1 )
            // InternalSTCoreParser.g:8367:2: rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__TIME_OF_DAY__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__0"


    // $ANTLR start "rule__TIME_OF_DAY__Group__0__Impl"
    // InternalSTCoreParser.g:8374:1: rule__TIME_OF_DAY__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8378:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8379:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8379:1: ( RULE_INT )
            // InternalSTCoreParser.g:8380:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__1"
    // InternalSTCoreParser.g:8389:1: rule__TIME_OF_DAY__Group__1 : rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2 ;
    public final void rule__TIME_OF_DAY__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8393:1: ( rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2 )
            // InternalSTCoreParser.g:8394:2: rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2
            {
            pushFollow(FOLLOW_59);
            rule__TIME_OF_DAY__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__1"


    // $ANTLR start "rule__TIME_OF_DAY__Group__1__Impl"
    // InternalSTCoreParser.g:8401:1: rule__TIME_OF_DAY__Group__1__Impl : ( Colon ) ;
    public final void rule__TIME_OF_DAY__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8405:1: ( ( Colon ) )
            // InternalSTCoreParser.g:8406:1: ( Colon )
            {
            // InternalSTCoreParser.g:8406:1: ( Colon )
            // InternalSTCoreParser.g:8407:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__1__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__2"
    // InternalSTCoreParser.g:8416:1: rule__TIME_OF_DAY__Group__2 : rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3 ;
    public final void rule__TIME_OF_DAY__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8420:1: ( rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3 )
            // InternalSTCoreParser.g:8421:2: rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3
            {
            pushFollow(FOLLOW_74);
            rule__TIME_OF_DAY__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__2"


    // $ANTLR start "rule__TIME_OF_DAY__Group__2__Impl"
    // InternalSTCoreParser.g:8428:1: rule__TIME_OF_DAY__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8432:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8433:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8433:1: ( RULE_INT )
            // InternalSTCoreParser.g:8434:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__2__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__3"
    // InternalSTCoreParser.g:8443:1: rule__TIME_OF_DAY__Group__3 : rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4 ;
    public final void rule__TIME_OF_DAY__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8447:1: ( rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4 )
            // InternalSTCoreParser.g:8448:2: rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4
            {
            pushFollow(FOLLOW_59);
            rule__TIME_OF_DAY__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__3"


    // $ANTLR start "rule__TIME_OF_DAY__Group__3__Impl"
    // InternalSTCoreParser.g:8455:1: rule__TIME_OF_DAY__Group__3__Impl : ( Colon ) ;
    public final void rule__TIME_OF_DAY__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8459:1: ( ( Colon ) )
            // InternalSTCoreParser.g:8460:1: ( Colon )
            {
            // InternalSTCoreParser.g:8460:1: ( Colon )
            // InternalSTCoreParser.g:8461:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__3__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__4"
    // InternalSTCoreParser.g:8470:1: rule__TIME_OF_DAY__Group__4 : rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5 ;
    public final void rule__TIME_OF_DAY__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8474:1: ( rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5 )
            // InternalSTCoreParser.g:8475:2: rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5
            {
            pushFollow(FOLLOW_72);
            rule__TIME_OF_DAY__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__4"


    // $ANTLR start "rule__TIME_OF_DAY__Group__4__Impl"
    // InternalSTCoreParser.g:8482:1: rule__TIME_OF_DAY__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8486:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8487:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8487:1: ( RULE_INT )
            // InternalSTCoreParser.g:8488:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__4__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__5"
    // InternalSTCoreParser.g:8497:1: rule__TIME_OF_DAY__Group__5 : rule__TIME_OF_DAY__Group__5__Impl ;
    public final void rule__TIME_OF_DAY__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8501:1: ( rule__TIME_OF_DAY__Group__5__Impl )
            // InternalSTCoreParser.g:8502:2: rule__TIME_OF_DAY__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__5"


    // $ANTLR start "rule__TIME_OF_DAY__Group__5__Impl"
    // InternalSTCoreParser.g:8508:1: rule__TIME_OF_DAY__Group__5__Impl : ( ( rule__TIME_OF_DAY__Group_5__0 )? ) ;
    public final void rule__TIME_OF_DAY__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8512:1: ( ( ( rule__TIME_OF_DAY__Group_5__0 )? ) )
            // InternalSTCoreParser.g:8513:1: ( ( rule__TIME_OF_DAY__Group_5__0 )? )
            {
            // InternalSTCoreParser.g:8513:1: ( ( rule__TIME_OF_DAY__Group_5__0 )? )
            // InternalSTCoreParser.g:8514:2: ( rule__TIME_OF_DAY__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getGroup_5()); 
            }
            // InternalSTCoreParser.g:8515:2: ( rule__TIME_OF_DAY__Group_5__0 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==FullStop) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalSTCoreParser.g:8515:3: rule__TIME_OF_DAY__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TIME_OF_DAY__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__5__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__0"
    // InternalSTCoreParser.g:8524:1: rule__TIME_OF_DAY__Group_5__0 : rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1 ;
    public final void rule__TIME_OF_DAY__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8528:1: ( rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1 )
            // InternalSTCoreParser.g:8529:2: rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1
            {
            pushFollow(FOLLOW_59);
            rule__TIME_OF_DAY__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__0"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__0__Impl"
    // InternalSTCoreParser.g:8536:1: rule__TIME_OF_DAY__Group_5__0__Impl : ( FullStop ) ;
    public final void rule__TIME_OF_DAY__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8540:1: ( ( FullStop ) )
            // InternalSTCoreParser.g:8541:1: ( FullStop )
            {
            // InternalSTCoreParser.g:8541:1: ( FullStop )
            // InternalSTCoreParser.g:8542:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getFullStopKeyword_5_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getFullStopKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__1"
    // InternalSTCoreParser.g:8551:1: rule__TIME_OF_DAY__Group_5__1 : rule__TIME_OF_DAY__Group_5__1__Impl ;
    public final void rule__TIME_OF_DAY__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8555:1: ( rule__TIME_OF_DAY__Group_5__1__Impl )
            // InternalSTCoreParser.g:8556:2: rule__TIME_OF_DAY__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__1"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__1__Impl"
    // InternalSTCoreParser.g:8562:1: rule__TIME_OF_DAY__Group_5__1__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8566:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8567:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8567:1: ( RULE_INT )
            // InternalSTCoreParser.g:8568:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_5_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__1__Impl"


    // $ANTLR start "rule__Code__GreetingsAssignment"
    // InternalSTCoreParser.g:8578:1: rule__Code__GreetingsAssignment : ( ruleSTStatements ) ;
    public final void rule__Code__GreetingsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8582:1: ( ( ruleSTStatements ) )
            // InternalSTCoreParser.g:8583:2: ( ruleSTStatements )
            {
            // InternalSTCoreParser.g:8583:2: ( ruleSTStatements )
            // InternalSTCoreParser.g:8584:3: ruleSTStatements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCodeAccess().getGreetingsSTStatementsParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCodeAccess().getGreetingsSTStatementsParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Code__GreetingsAssignment"


    // $ANTLR start "rule__VarDeclaration__NameAssignment_0"
    // InternalSTCoreParser.g:8593:1: rule__VarDeclaration__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__VarDeclaration__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8597:1: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:8598:2: ( RULE_ID )
            {
            // InternalSTCoreParser.g:8598:2: ( RULE_ID )
            // InternalSTCoreParser.g:8599:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__NameAssignment_0"


    // $ANTLR start "rule__VarDeclaration__LocatedAtAssignment_1_1"
    // InternalSTCoreParser.g:8608:1: rule__VarDeclaration__LocatedAtAssignment_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__LocatedAtAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8612:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:8613:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:8613:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:8614:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationCrossReference_1_1_0()); 
            }
            // InternalSTCoreParser.g:8615:3: ( RULE_ID )
            // InternalSTCoreParser.g:8616:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationIDTerminalRuleCall_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationIDTerminalRuleCall_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationCrossReference_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__LocatedAtAssignment_1_1"


    // $ANTLR start "rule__VarDeclaration__ArrayAssignment_3_0"
    // InternalSTCoreParser.g:8627:1: rule__VarDeclaration__ArrayAssignment_3_0 : ( ( ARRAY ) ) ;
    public final void rule__VarDeclaration__ArrayAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8631:1: ( ( ( ARRAY ) ) )
            // InternalSTCoreParser.g:8632:2: ( ( ARRAY ) )
            {
            // InternalSTCoreParser.g:8632:2: ( ( ARRAY ) )
            // InternalSTCoreParser.g:8633:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }
            // InternalSTCoreParser.g:8634:3: ( ARRAY )
            // InternalSTCoreParser.g:8635:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__ArrayAssignment_3_0"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_3_1_0_1"
    // InternalSTCoreParser.g:8646:1: rule__VarDeclaration__RangesAssignment_3_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_3_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8650:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8651:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8651:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8652:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_3_1_0_1"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_3_1_0_2_1"
    // InternalSTCoreParser.g:8661:1: rule__VarDeclaration__RangesAssignment_3_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_3_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8665:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8666:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8666:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8667:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_3_1_0_2_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_3_1_1_1"
    // InternalSTCoreParser.g:8676:1: rule__VarDeclaration__CountAssignment_3_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_3_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8680:1: ( ( ( Asterisk ) ) )
            // InternalSTCoreParser.g:8681:2: ( ( Asterisk ) )
            {
            // InternalSTCoreParser.g:8681:2: ( ( Asterisk ) )
            // InternalSTCoreParser.g:8682:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }
            // InternalSTCoreParser.g:8683:3: ( Asterisk )
            // InternalSTCoreParser.g:8684:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_3_1_1_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_3_1_1_2_1"
    // InternalSTCoreParser.g:8695:1: rule__VarDeclaration__CountAssignment_3_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_3_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8699:1: ( ( ( Asterisk ) ) )
            // InternalSTCoreParser.g:8700:2: ( ( Asterisk ) )
            {
            // InternalSTCoreParser.g:8700:2: ( ( Asterisk ) )
            // InternalSTCoreParser.g:8701:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }
            // InternalSTCoreParser.g:8702:3: ( Asterisk )
            // InternalSTCoreParser.g:8703:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_3_1_1_2_1"


    // $ANTLR start "rule__VarDeclaration__TypeAssignment_4"
    // InternalSTCoreParser.g:8714:1: rule__VarDeclaration__TypeAssignment_4 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__TypeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8718:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:8719:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:8719:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:8720:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementCrossReference_4_0()); 
            }
            // InternalSTCoreParser.g:8721:3: ( RULE_ID )
            // InternalSTCoreParser.g:8722:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementIDTerminalRuleCall_4_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementIDTerminalRuleCall_4_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementCrossReference_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__TypeAssignment_4"


    // $ANTLR start "rule__VarDeclaration__MaxLengthAssignment_5_1"
    // InternalSTCoreParser.g:8733:1: rule__VarDeclaration__MaxLengthAssignment_5_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__MaxLengthAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8737:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8738:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8738:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8739:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__MaxLengthAssignment_5_1"


    // $ANTLR start "rule__VarDeclaration__DefaultValueAssignment_6_1"
    // InternalSTCoreParser.g:8748:1: rule__VarDeclaration__DefaultValueAssignment_6_1 : ( ruleInitializerExpression ) ;
    public final void rule__VarDeclaration__DefaultValueAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8752:1: ( ( ruleInitializerExpression ) )
            // InternalSTCoreParser.g:8753:2: ( ruleInitializerExpression )
            {
            // InternalSTCoreParser.g:8753:2: ( ruleInitializerExpression )
            // InternalSTCoreParser.g:8754:3: ruleInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__DefaultValueAssignment_6_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_1"
    // InternalSTCoreParser.g:8763:1: rule__ArrayInitializerExpression__ValuesAssignment_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8767:1: ( ( ruleArrayInitElement ) )
            // InternalSTCoreParser.g:8768:2: ( ruleArrayInitElement )
            {
            // InternalSTCoreParser.g:8768:2: ( ruleArrayInitElement )
            // InternalSTCoreParser.g:8769:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_2_1"
    // InternalSTCoreParser.g:8778:1: rule__ArrayInitializerExpression__ValuesAssignment_2_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8782:1: ( ( ruleArrayInitElement ) )
            // InternalSTCoreParser.g:8783:2: ( ruleArrayInitElement )
            {
            // InternalSTCoreParser.g:8783:2: ( ruleArrayInitElement )
            // InternalSTCoreParser.g:8784:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"
    // InternalSTCoreParser.g:8793:1: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__IndexOrInitExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8797:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8798:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8798:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8799:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"


    // $ANTLR start "rule__ArrayInitElement__InitExpressionAssignment_1_1"
    // InternalSTCoreParser.g:8808:1: rule__ArrayInitElement__InitExpressionAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__InitExpressionAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8812:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8813:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8813:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8814:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__InitExpressionAssignment_1_1"


    // $ANTLR start "rule__STAssignmentStatement__LhsAssignment_0"
    // InternalSTCoreParser.g:8823:1: rule__STAssignmentStatement__LhsAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__STAssignmentStatement__LhsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8827:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:8828:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:8828:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:8829:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationCrossReference_0_0()); 
            }
            // InternalSTCoreParser.g:8830:3: ( RULE_ID )
            // InternalSTCoreParser.g:8831:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__LhsAssignment_0"


    // $ANTLR start "rule__STAssignmentStatement__OpAssignment_1"
    // InternalSTCoreParser.g:8842:1: rule__STAssignmentStatement__OpAssignment_1 : ( ( rule__STAssignmentStatement__OpAlternatives_1_0 ) ) ;
    public final void rule__STAssignmentStatement__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8846:1: ( ( ( rule__STAssignmentStatement__OpAlternatives_1_0 ) ) )
            // InternalSTCoreParser.g:8847:2: ( ( rule__STAssignmentStatement__OpAlternatives_1_0 ) )
            {
            // InternalSTCoreParser.g:8847:2: ( ( rule__STAssignmentStatement__OpAlternatives_1_0 ) )
            // InternalSTCoreParser.g:8848:3: ( rule__STAssignmentStatement__OpAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getOpAlternatives_1_0()); 
            }
            // InternalSTCoreParser.g:8849:3: ( rule__STAssignmentStatement__OpAlternatives_1_0 )
            // InternalSTCoreParser.g:8849:4: rule__STAssignmentStatement__OpAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__OpAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getOpAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__OpAssignment_1"


    // $ANTLR start "rule__STAssignmentStatement__RhsAssignment_2"
    // InternalSTCoreParser.g:8857:1: rule__STAssignmentStatement__RhsAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STAssignmentStatement__RhsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8861:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8862:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8862:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8863:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRhsSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRhsSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__RhsAssignment_2"


    // $ANTLR start "rule__STIfStatment__ConditionAssignment_1"
    // InternalSTCoreParser.g:8872:1: rule__STIfStatment__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STIfStatment__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8876:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8877:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8877:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8878:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ConditionAssignment_1"


    // $ANTLR start "rule__STIfStatment__StatementsAssignment_3"
    // InternalSTCoreParser.g:8887:1: rule__STIfStatment__StatementsAssignment_3 : ( ruleSTStatements ) ;
    public final void rule__STIfStatment__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8891:1: ( ( ruleSTStatements ) )
            // InternalSTCoreParser.g:8892:2: ( ruleSTStatements )
            {
            // InternalSTCoreParser.g:8892:2: ( ruleSTStatements )
            // InternalSTCoreParser.g:8893:3: ruleSTStatements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getStatementsSTStatementsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getStatementsSTStatementsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__StatementsAssignment_3"


    // $ANTLR start "rule__STIfStatment__ElseifsAssignment_4"
    // InternalSTCoreParser.g:8902:1: rule__STIfStatment__ElseifsAssignment_4 : ( ruleSTElseIfPart ) ;
    public final void rule__STIfStatment__ElseifsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8906:1: ( ( ruleSTElseIfPart ) )
            // InternalSTCoreParser.g:8907:2: ( ruleSTElseIfPart )
            {
            // InternalSTCoreParser.g:8907:2: ( ruleSTElseIfPart )
            // InternalSTCoreParser.g:8908:3: ruleSTElseIfPart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ElseifsAssignment_4"


    // $ANTLR start "rule__STIfStatment__ElseAssignment_5"
    // InternalSTCoreParser.g:8917:1: rule__STIfStatment__ElseAssignment_5 : ( ruleSTElsePart ) ;
    public final void rule__STIfStatment__ElseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8921:1: ( ( ruleSTElsePart ) )
            // InternalSTCoreParser.g:8922:2: ( ruleSTElsePart )
            {
            // InternalSTCoreParser.g:8922:2: ( ruleSTElsePart )
            // InternalSTCoreParser.g:8923:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ElseAssignment_5"


    // $ANTLR start "rule__STElseIfPart__ConditionAssignment_1"
    // InternalSTCoreParser.g:8932:1: rule__STElseIfPart__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STElseIfPart__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8936:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8937:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8937:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8938:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__ConditionAssignment_1"


    // $ANTLR start "rule__STElseIfPart__StatementsAssignment_3"
    // InternalSTCoreParser.g:8947:1: rule__STElseIfPart__StatementsAssignment_3 : ( ruleSTStatements ) ;
    public final void rule__STElseIfPart__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8951:1: ( ( ruleSTStatements ) )
            // InternalSTCoreParser.g:8952:2: ( ruleSTStatements )
            {
            // InternalSTCoreParser.g:8952:2: ( ruleSTStatements )
            // InternalSTCoreParser.g:8953:3: ruleSTStatements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__StatementsAssignment_3"


    // $ANTLR start "rule__STCaseStatement__SelectorAssignment_1"
    // InternalSTCoreParser.g:8962:1: rule__STCaseStatement__SelectorAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseStatement__SelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8966:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8967:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8967:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8968:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__SelectorAssignment_1"


    // $ANTLR start "rule__STCaseStatement__CasesAssignment_3"
    // InternalSTCoreParser.g:8977:1: rule__STCaseStatement__CasesAssignment_3 : ( ruleSTCaseCases ) ;
    public final void rule__STCaseStatement__CasesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8981:1: ( ( ruleSTCaseCases ) )
            // InternalSTCoreParser.g:8982:2: ( ruleSTCaseCases )
            {
            // InternalSTCoreParser.g:8982:2: ( ruleSTCaseCases )
            // InternalSTCoreParser.g:8983:3: ruleSTCaseCases
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__CasesAssignment_3"


    // $ANTLR start "rule__STCaseStatement__ElseAssignment_4"
    // InternalSTCoreParser.g:8992:1: rule__STCaseStatement__ElseAssignment_4 : ( ruleSTElsePart ) ;
    public final void rule__STCaseStatement__ElseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8996:1: ( ( ruleSTElsePart ) )
            // InternalSTCoreParser.g:8997:2: ( ruleSTElsePart )
            {
            // InternalSTCoreParser.g:8997:2: ( ruleSTElsePart )
            // InternalSTCoreParser.g:8998:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__ElseAssignment_4"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_0"
    // InternalSTCoreParser.g:9007:1: rule__STCaseCases__ConditionsAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9011:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9012:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9012:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9013:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_0"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_1_1"
    // InternalSTCoreParser.g:9022:1: rule__STCaseCases__ConditionsAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9026:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9027:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9027:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9028:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_1_1"


    // $ANTLR start "rule__STCaseCases__StatementsAssignment_3"
    // InternalSTCoreParser.g:9037:1: rule__STCaseCases__StatementsAssignment_3 : ( ruleSTStatements ) ;
    public final void rule__STCaseCases__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9041:1: ( ( ruleSTStatements ) )
            // InternalSTCoreParser.g:9042:2: ( ruleSTStatements )
            {
            // InternalSTCoreParser.g:9042:2: ( ruleSTStatements )
            // InternalSTCoreParser.g:9043:3: ruleSTStatements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__StatementsAssignment_3"


    // $ANTLR start "rule__STElsePart__StatementsAssignment_2"
    // InternalSTCoreParser.g:9052:1: rule__STElsePart__StatementsAssignment_2 : ( ruleSTStatements ) ;
    public final void rule__STElsePart__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9056:1: ( ( ruleSTStatements ) )
            // InternalSTCoreParser.g:9057:2: ( ruleSTStatements )
            {
            // InternalSTCoreParser.g:9057:2: ( ruleSTStatements )
            // InternalSTCoreParser.g:9058:3: ruleSTStatements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsSTStatementsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsSTStatementsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__StatementsAssignment_2"


    // $ANTLR start "rule__STForStatement__ForAssignment_1"
    // InternalSTCoreParser.g:9067:1: rule__STForStatement__ForAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ForAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9071:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9072:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9072:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9073:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getForSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getForSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ForAssignment_1"


    // $ANTLR start "rule__STForStatement__ToAssignment_3"
    // InternalSTCoreParser.g:9082:1: rule__STForStatement__ToAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ToAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9086:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9087:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9087:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9088:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ToAssignment_3"


    // $ANTLR start "rule__STForStatement__ByAssignment_4_1"
    // InternalSTCoreParser.g:9097:1: rule__STForStatement__ByAssignment_4_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ByAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9101:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9102:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9102:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9103:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ByAssignment_4_1"


    // $ANTLR start "rule__STForStatement__StatementsAssignment_6"
    // InternalSTCoreParser.g:9112:1: rule__STForStatement__StatementsAssignment_6 : ( ruleSTStatements ) ;
    public final void rule__STForStatement__StatementsAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9116:1: ( ( ruleSTStatements ) )
            // InternalSTCoreParser.g:9117:2: ( ruleSTStatements )
            {
            // InternalSTCoreParser.g:9117:2: ( ruleSTStatements )
            // InternalSTCoreParser.g:9118:3: ruleSTStatements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsSTStatementsParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsSTStatementsParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__StatementsAssignment_6"


    // $ANTLR start "rule__STWhileStatement__ConditionAssignment_1"
    // InternalSTCoreParser.g:9127:1: rule__STWhileStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STWhileStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9131:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9132:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9132:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9133:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STWhileStatement__StatementsAssignment_3"
    // InternalSTCoreParser.g:9142:1: rule__STWhileStatement__StatementsAssignment_3 : ( ruleSTStatements ) ;
    public final void rule__STWhileStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9146:1: ( ( ruleSTStatements ) )
            // InternalSTCoreParser.g:9147:2: ( ruleSTStatements )
            {
            // InternalSTCoreParser.g:9147:2: ( ruleSTStatements )
            // InternalSTCoreParser.g:9148:3: ruleSTStatements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STRepeatStatement__StatementsAssignment_1"
    // InternalSTCoreParser.g:9157:1: rule__STRepeatStatement__StatementsAssignment_1 : ( ruleSTStatements ) ;
    public final void rule__STRepeatStatement__StatementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9161:1: ( ( ruleSTStatements ) )
            // InternalSTCoreParser.g:9162:2: ( ruleSTStatements )
            {
            // InternalSTCoreParser.g:9162:2: ( ruleSTStatements )
            // InternalSTCoreParser.g:9163:3: ruleSTStatements
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatements();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__StatementsAssignment_1"


    // $ANTLR start "rule__STRepeatStatement__ConditionAssignment_3"
    // InternalSTCoreParser.g:9172:1: rule__STRepeatStatement__ConditionAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STRepeatStatement__ConditionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9176:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9177:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9177:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9178:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__ConditionAssignment_3"


    // $ANTLR start "rule__STSubrangeExpression__UpperBoundAssignment_1_1"
    // InternalSTCoreParser.g:9187:1: rule__STSubrangeExpression__UpperBoundAssignment_1_1 : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__UpperBoundAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9191:1: ( ( ruleSTOrExpression ) )
            // InternalSTCoreParser.g:9192:2: ( ruleSTOrExpression )
            {
            // InternalSTCoreParser.g:9192:2: ( ruleSTOrExpression )
            // InternalSTCoreParser.g:9193:3: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getUpperBoundSTOrExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getUpperBoundSTOrExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__UpperBoundAssignment_1_1"


    // $ANTLR start "rule__STOrExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9202:1: rule__STOrExpression__OpAssignment_1_0_1 : ( ( OR ) ) ;
    public final void rule__STOrExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9206:1: ( ( ( OR ) ) )
            // InternalSTCoreParser.g:9207:2: ( ( OR ) )
            {
            // InternalSTCoreParser.g:9207:2: ( ( OR ) )
            // InternalSTCoreParser.g:9208:3: ( OR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpORKeyword_1_0_1_0()); 
            }
            // InternalSTCoreParser.g:9209:3: ( OR )
            // InternalSTCoreParser.g:9210:4: OR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpORKeyword_1_0_1_0()); 
            }
            match(input,OR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpORKeyword_1_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpORKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STOrExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9221:1: rule__STOrExpression__RightAssignment_1_1 : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9225:1: ( ( ruleSTXorExpression ) )
            // InternalSTCoreParser.g:9226:2: ( ruleSTXorExpression )
            {
            // InternalSTCoreParser.g:9226:2: ( ruleSTXorExpression )
            // InternalSTCoreParser.g:9227:3: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STXorExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9236:1: rule__STXorExpression__OpAssignment_1_0_1 : ( ( XOR ) ) ;
    public final void rule__STXorExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9240:1: ( ( ( XOR ) ) )
            // InternalSTCoreParser.g:9241:2: ( ( XOR ) )
            {
            // InternalSTCoreParser.g:9241:2: ( ( XOR ) )
            // InternalSTCoreParser.g:9242:3: ( XOR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXORKeyword_1_0_1_0()); 
            }
            // InternalSTCoreParser.g:9243:3: ( XOR )
            // InternalSTCoreParser.g:9244:4: XOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXORKeyword_1_0_1_0()); 
            }
            match(input,XOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXORKeyword_1_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXORKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STXorExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9255:1: rule__STXorExpression__RightAssignment_1_1 : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9259:1: ( ( ruleSTAndExpression ) )
            // InternalSTCoreParser.g:9260:2: ( ruleSTAndExpression )
            {
            // InternalSTCoreParser.g:9260:2: ( ruleSTAndExpression )
            // InternalSTCoreParser.g:9261:3: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAndExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9270:1: rule__STAndExpression__OpAssignment_1_0_1 : ( ( rule__STAndExpression__OpAlternatives_1_0_1_0 ) ) ;
    public final void rule__STAndExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9274:1: ( ( ( rule__STAndExpression__OpAlternatives_1_0_1_0 ) ) )
            // InternalSTCoreParser.g:9275:2: ( ( rule__STAndExpression__OpAlternatives_1_0_1_0 ) )
            {
            // InternalSTCoreParser.g:9275:2: ( ( rule__STAndExpression__OpAlternatives_1_0_1_0 ) )
            // InternalSTCoreParser.g:9276:3: ( rule__STAndExpression__OpAlternatives_1_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }
            // InternalSTCoreParser.g:9277:3: ( rule__STAndExpression__OpAlternatives_1_0_1_0 )
            // InternalSTCoreParser.g:9277:4: rule__STAndExpression__OpAlternatives_1_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAlternatives_1_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAndExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9285:1: rule__STAndExpression__RightAssignment_1_1 : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9289:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTCoreParser.g:9290:2: ( ruleSTEqualityExpression )
            {
            // InternalSTCoreParser.g:9290:2: ( ruleSTEqualityExpression )
            // InternalSTCoreParser.g:9291:3: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STEqualityExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9300:1: rule__STEqualityExpression__OpAssignment_1_0_1 : ( ( rule__STEqualityExpression__OpAlternatives_1_0_1_0 ) ) ;
    public final void rule__STEqualityExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9304:1: ( ( ( rule__STEqualityExpression__OpAlternatives_1_0_1_0 ) ) )
            // InternalSTCoreParser.g:9305:2: ( ( rule__STEqualityExpression__OpAlternatives_1_0_1_0 ) )
            {
            // InternalSTCoreParser.g:9305:2: ( ( rule__STEqualityExpression__OpAlternatives_1_0_1_0 ) )
            // InternalSTCoreParser.g:9306:3: ( rule__STEqualityExpression__OpAlternatives_1_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }
            // InternalSTCoreParser.g:9307:3: ( rule__STEqualityExpression__OpAlternatives_1_0_1_0 )
            // InternalSTCoreParser.g:9307:4: rule__STEqualityExpression__OpAlternatives_1_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAlternatives_1_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STEqualityExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9315:1: rule__STEqualityExpression__RightAssignment_1_1 : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9319:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTCoreParser.g:9320:2: ( ruleSTComparisonExpression )
            {
            // InternalSTCoreParser.g:9320:2: ( ruleSTComparisonExpression )
            // InternalSTCoreParser.g:9321:3: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STComparisonExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9330:1: rule__STComparisonExpression__OpAssignment_1_0_1 : ( ( rule__STComparisonExpression__OpAlternatives_1_0_1_0 ) ) ;
    public final void rule__STComparisonExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9334:1: ( ( ( rule__STComparisonExpression__OpAlternatives_1_0_1_0 ) ) )
            // InternalSTCoreParser.g:9335:2: ( ( rule__STComparisonExpression__OpAlternatives_1_0_1_0 ) )
            {
            // InternalSTCoreParser.g:9335:2: ( ( rule__STComparisonExpression__OpAlternatives_1_0_1_0 ) )
            // InternalSTCoreParser.g:9336:3: ( rule__STComparisonExpression__OpAlternatives_1_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }
            // InternalSTCoreParser.g:9337:3: ( rule__STComparisonExpression__OpAlternatives_1_0_1_0 )
            // InternalSTCoreParser.g:9337:4: rule__STComparisonExpression__OpAlternatives_1_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAlternatives_1_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STComparisonExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9345:1: rule__STComparisonExpression__RightAssignment_1_1 : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9349:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTCoreParser.g:9350:2: ( ruleSTAddSubExpression )
            {
            // InternalSTCoreParser.g:9350:2: ( ruleSTAddSubExpression )
            // InternalSTCoreParser.g:9351:3: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAddSubExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9360:1: rule__STAddSubExpression__OpAssignment_1_0_1 : ( ( rule__STAddSubExpression__OpAlternatives_1_0_1_0 ) ) ;
    public final void rule__STAddSubExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9364:1: ( ( ( rule__STAddSubExpression__OpAlternatives_1_0_1_0 ) ) )
            // InternalSTCoreParser.g:9365:2: ( ( rule__STAddSubExpression__OpAlternatives_1_0_1_0 ) )
            {
            // InternalSTCoreParser.g:9365:2: ( ( rule__STAddSubExpression__OpAlternatives_1_0_1_0 ) )
            // InternalSTCoreParser.g:9366:3: ( rule__STAddSubExpression__OpAlternatives_1_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }
            // InternalSTCoreParser.g:9367:3: ( rule__STAddSubExpression__OpAlternatives_1_0_1_0 )
            // InternalSTCoreParser.g:9367:4: rule__STAddSubExpression__OpAlternatives_1_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAlternatives_1_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAddSubExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9375:1: rule__STAddSubExpression__RightAssignment_1_1 : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9379:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTCoreParser.g:9380:2: ( ruleSTMulDivModExpression )
            {
            // InternalSTCoreParser.g:9380:2: ( ruleSTMulDivModExpression )
            // InternalSTCoreParser.g:9381:3: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STMulDivModExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9390:1: rule__STMulDivModExpression__OpAssignment_1_0_1 : ( ( rule__STMulDivModExpression__OpAlternatives_1_0_1_0 ) ) ;
    public final void rule__STMulDivModExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9394:1: ( ( ( rule__STMulDivModExpression__OpAlternatives_1_0_1_0 ) ) )
            // InternalSTCoreParser.g:9395:2: ( ( rule__STMulDivModExpression__OpAlternatives_1_0_1_0 ) )
            {
            // InternalSTCoreParser.g:9395:2: ( ( rule__STMulDivModExpression__OpAlternatives_1_0_1_0 ) )
            // InternalSTCoreParser.g:9396:3: ( rule__STMulDivModExpression__OpAlternatives_1_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }
            // InternalSTCoreParser.g:9397:3: ( rule__STMulDivModExpression__OpAlternatives_1_0_1_0 )
            // InternalSTCoreParser.g:9397:4: rule__STMulDivModExpression__OpAlternatives_1_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAlternatives_1_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STMulDivModExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9405:1: rule__STMulDivModExpression__RightAssignment_1_1 : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9409:1: ( ( ruleSTPowerExpression ) )
            // InternalSTCoreParser.g:9410:2: ( ruleSTPowerExpression )
            {
            // InternalSTCoreParser.g:9410:2: ( ruleSTPowerExpression )
            // InternalSTCoreParser.g:9411:3: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STPowerExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9420:1: rule__STPowerExpression__OpAssignment_1_0_1 : ( ( AsteriskAsterisk ) ) ;
    public final void rule__STPowerExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9424:1: ( ( ( AsteriskAsterisk ) ) )
            // InternalSTCoreParser.g:9425:2: ( ( AsteriskAsterisk ) )
            {
            // InternalSTCoreParser.g:9425:2: ( ( AsteriskAsterisk ) )
            // InternalSTCoreParser.g:9426:3: ( AsteriskAsterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAsteriskAsteriskKeyword_1_0_1_0()); 
            }
            // InternalSTCoreParser.g:9427:3: ( AsteriskAsterisk )
            // InternalSTCoreParser.g:9428:4: AsteriskAsterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAsteriskAsteriskKeyword_1_0_1_0()); 
            }
            match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAsteriskAsteriskKeyword_1_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAsteriskAsteriskKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STPowerExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9439:1: rule__STPowerExpression__RightAssignment_1_1 : ( ruleSTSignumExpression ) ;
    public final void rule__STPowerExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9443:1: ( ( ruleSTSignumExpression ) )
            // InternalSTCoreParser.g:9444:2: ( ruleSTSignumExpression )
            {
            // InternalSTCoreParser.g:9444:2: ( ruleSTSignumExpression )
            // InternalSTCoreParser.g:9445:3: ruleSTSignumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightSTSignumExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightSTSignumExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STSignumExpression__SignumAssignment_2_1"
    // InternalSTCoreParser.g:9454:1: rule__STSignumExpression__SignumAssignment_2_1 : ( ( rule__STSignumExpression__SignumAlternatives_2_1_0 ) ) ;
    public final void rule__STSignumExpression__SignumAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9458:1: ( ( ( rule__STSignumExpression__SignumAlternatives_2_1_0 ) ) )
            // InternalSTCoreParser.g:9459:2: ( ( rule__STSignumExpression__SignumAlternatives_2_1_0 ) )
            {
            // InternalSTCoreParser.g:9459:2: ( ( rule__STSignumExpression__SignumAlternatives_2_1_0 ) )
            // InternalSTCoreParser.g:9460:3: ( rule__STSignumExpression__SignumAlternatives_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getSignumAlternatives_2_1_0()); 
            }
            // InternalSTCoreParser.g:9461:3: ( rule__STSignumExpression__SignumAlternatives_2_1_0 )
            // InternalSTCoreParser.g:9461:4: rule__STSignumExpression__SignumAlternatives_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__SignumAlternatives_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getSignumAlternatives_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__SignumAssignment_2_1"


    // $ANTLR start "rule__STSignumExpression__ExpressionAssignment_2_2"
    // InternalSTCoreParser.g:9469:1: rule__STSignumExpression__ExpressionAssignment_2_2 : ( ruleSTSelectionExpression ) ;
    public final void rule__STSignumExpression__ExpressionAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9473:1: ( ( ruleSTSelectionExpression ) )
            // InternalSTCoreParser.g:9474:2: ( ruleSTSelectionExpression )
            {
            // InternalSTCoreParser.g:9474:2: ( ruleSTSelectionExpression )
            // InternalSTCoreParser.g:9475:3: ruleSTSelectionExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getExpressionSTSelectionExpressionParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSelectionExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getExpressionSTSelectionExpressionParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__ExpressionAssignment_2_2"


    // $ANTLR start "rule__STSelectionExpression__StructAccessAssignment_1_1_0_0"
    // InternalSTCoreParser.g:9484:1: rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 : ( ( FullStop ) ) ;
    public final void rule__STSelectionExpression__StructAccessAssignment_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9488:1: ( ( ( FullStop ) ) )
            // InternalSTCoreParser.g:9489:2: ( ( FullStop ) )
            {
            // InternalSTCoreParser.g:9489:2: ( ( FullStop ) )
            // InternalSTCoreParser.g:9490:3: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }
            // InternalSTCoreParser.g:9491:3: ( FullStop )
            // InternalSTCoreParser.g:9492:4: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__StructAccessAssignment_1_1_0_0"


    // $ANTLR start "rule__STSelectionExpression__MemberAssignment_1_1_0_1"
    // InternalSTCoreParser.g:9503:1: rule__STSelectionExpression__MemberAssignment_1_1_0_1 : ( ( RULE_ID ) ) ;
    public final void rule__STSelectionExpression__MemberAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9507:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9508:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9508:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9509:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationCrossReference_1_1_0_1_0()); 
            }
            // InternalSTCoreParser.g:9510:3: ( RULE_ID )
            // InternalSTCoreParser.g:9511:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationIDTerminalRuleCall_1_1_0_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationIDTerminalRuleCall_1_1_0_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationCrossReference_1_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__MemberAssignment_1_1_0_1"


    // $ANTLR start "rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0"
    // InternalSTCoreParser.g:9522:1: rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 : ( ( LeftSquareBracket ) ) ;
    public final void rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9526:1: ( ( ( LeftSquareBracket ) ) )
            // InternalSTCoreParser.g:9527:2: ( ( LeftSquareBracket ) )
            {
            // InternalSTCoreParser.g:9527:2: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:9528:3: ( LeftSquareBracket )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }
            // InternalSTCoreParser.g:9529:3: ( LeftSquareBracket )
            // InternalSTCoreParser.g:9530:4: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0"


    // $ANTLR start "rule__STSelectionExpression__IndexAssignment_1_1_1_1"
    // InternalSTCoreParser.g:9541:1: rule__STSelectionExpression__IndexAssignment_1_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__IndexAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9545:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9546:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9546:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9547:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__IndexAssignment_1_1_1_1"


    // $ANTLR start "rule__STSelectionExpression__IndexAssignment_1_1_1_2_1"
    // InternalSTCoreParser.g:9556:1: rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__IndexAssignment_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9560:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9561:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9561:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9562:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__IndexAssignment_1_1_1_2_1"


    // $ANTLR start "rule__STSelectionExpression__PoeInvocationAssignment_1_2_0"
    // InternalSTCoreParser.g:9571:1: rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STSelectionExpression__PoeInvocationAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9575:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTCoreParser.g:9576:2: ( ( LeftParenthesis ) )
            {
            // InternalSTCoreParser.g:9576:2: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:9577:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }
            // InternalSTCoreParser.g:9578:3: ( LeftParenthesis )
            // InternalSTCoreParser.g:9579:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__PoeInvocationAssignment_1_2_0"


    // $ANTLR start "rule__STSelectionExpression__ParametersAssignment_1_2_1_0"
    // InternalSTCoreParser.g:9590:1: rule__STSelectionExpression__ParametersAssignment_1_2_1_0 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__ParametersAssignment_1_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9594:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9595:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9595:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9596:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ParametersAssignment_1_2_1_0"


    // $ANTLR start "rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1"
    // InternalSTCoreParser.g:9605:1: rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9609:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9610:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9610:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9611:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1"


    // $ANTLR start "rule__STSelectionExpression__BitaccessorAssignment_1_3"
    // InternalSTCoreParser.g:9620:1: rule__STSelectionExpression__BitaccessorAssignment_1_3 : ( ruleMultibitPartialAccess ) ;
    public final void rule__STSelectionExpression__BitaccessorAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9624:1: ( ( ruleMultibitPartialAccess ) )
            // InternalSTCoreParser.g:9625:2: ( ruleMultibitPartialAccess )
            {
            // InternalSTCoreParser.g:9625:2: ( ruleMultibitPartialAccess )
            // InternalSTCoreParser.g:9626:3: ruleMultibitPartialAccess
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__BitaccessorAssignment_1_3"


    // $ANTLR start "rule__MultibitPartialAccess__AccessSpecifierAssignment_0"
    // InternalSTCoreParser.g:9635:1: rule__MultibitPartialAccess__AccessSpecifierAssignment_0 : ( ruleMultiBitAccessSpecifier ) ;
    public final void rule__MultibitPartialAccess__AccessSpecifierAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9639:1: ( ( ruleMultiBitAccessSpecifier ) )
            // InternalSTCoreParser.g:9640:2: ( ruleMultiBitAccessSpecifier )
            {
            // InternalSTCoreParser.g:9640:2: ( ruleMultiBitAccessSpecifier )
            // InternalSTCoreParser.g:9641:3: ruleMultiBitAccessSpecifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierMultiBitAccessSpecifierEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultiBitAccessSpecifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierMultiBitAccessSpecifierEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__AccessSpecifierAssignment_0"


    // $ANTLR start "rule__MultibitPartialAccess__IndexAssignment_1"
    // InternalSTCoreParser.g:9650:1: rule__MultibitPartialAccess__IndexAssignment_1 : ( RULE_INT ) ;
    public final void rule__MultibitPartialAccess__IndexAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9654:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:9655:2: ( RULE_INT )
            {
            // InternalSTCoreParser.g:9655:2: ( RULE_INT )
            // InternalSTCoreParser.g:9656:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getIndexINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getIndexINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__IndexAssignment_1"


    // $ANTLR start "rule__STAtomicExpression__TypeAssignment_1_1_0"
    // InternalSTCoreParser.g:9665:1: rule__STAtomicExpression__TypeAssignment_1_1_0 : ( ( RULE_ID ) ) ;
    public final void rule__STAtomicExpression__TypeAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9669:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9670:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9670:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9671:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeCrossReference_1_1_0_0()); 
            }
            // InternalSTCoreParser.g:9672:3: ( RULE_ID )
            // InternalSTCoreParser.g:9673:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeIDTerminalRuleCall_1_1_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeIDTerminalRuleCall_1_1_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeCrossReference_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__TypeAssignment_1_1_0"


    // $ANTLR start "rule__STAtomicExpression__SymbolAssignment_1_2"
    // InternalSTCoreParser.g:9684:1: rule__STAtomicExpression__SymbolAssignment_1_2 : ( ( RULE_ID ) ) ;
    public final void rule__STAtomicExpression__SymbolAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9688:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9689:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9689:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9690:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationCrossReference_1_2_0()); 
            }
            // InternalSTCoreParser.g:9691:3: ( RULE_ID )
            // InternalSTCoreParser.g:9692:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationIDTerminalRuleCall_1_2_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationIDTerminalRuleCall_1_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationCrossReference_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__SymbolAssignment_1_2"


    // $ANTLR start "rule__STAtomicExpression__BitaccessorAssignment_1_3"
    // InternalSTCoreParser.g:9703:1: rule__STAtomicExpression__BitaccessorAssignment_1_3 : ( ruleMultibitPartialAccess ) ;
    public final void rule__STAtomicExpression__BitaccessorAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9707:1: ( ( ruleMultibitPartialAccess ) )
            // InternalSTCoreParser.g:9708:2: ( ruleMultibitPartialAccess )
            {
            // InternalSTCoreParser.g:9708:2: ( ruleMultibitPartialAccess )
            // InternalSTCoreParser.g:9709:3: ruleMultibitPartialAccess
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__BitaccessorAssignment_1_3"


    // $ANTLR start "rule__STAtomicExpression__PoeInvocationAssignment_1_4_0"
    // InternalSTCoreParser.g:9718:1: rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STAtomicExpression__PoeInvocationAssignment_1_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9722:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTCoreParser.g:9723:2: ( ( LeftParenthesis ) )
            {
            // InternalSTCoreParser.g:9723:2: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:9724:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }
            // InternalSTCoreParser.g:9725:3: ( LeftParenthesis )
            // InternalSTCoreParser.g:9726:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__PoeInvocationAssignment_1_4_0"


    // $ANTLR start "rule__STAtomicExpression__ParametersAssignment_1_4_1_0"
    // InternalSTCoreParser.g:9737:1: rule__STAtomicExpression__ParametersAssignment_1_4_1_0 : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__ParametersAssignment_1_4_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9741:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9742:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9742:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9743:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__ParametersAssignment_1_4_1_0"


    // $ANTLR start "rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1"
    // InternalSTCoreParser.g:9752:1: rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9756:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9757:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9757:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9758:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1"


    // $ANTLR start "rule__STLiteralExpressions__NumericLiteralAssignment_0_1"
    // InternalSTCoreParser.g:9767:1: rule__STLiteralExpressions__NumericLiteralAssignment_0_1 : ( ruleNUMERIC_LITERAL ) ;
    public final void rule__STLiteralExpressions__NumericLiteralAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9771:1: ( ( ruleNUMERIC_LITERAL ) )
            // InternalSTCoreParser.g:9772:2: ( ruleNUMERIC_LITERAL )
            {
            // InternalSTCoreParser.g:9772:2: ( ruleNUMERIC_LITERAL )
            // InternalSTCoreParser.g:9773:3: ruleNUMERIC_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralNUMERIC_LITERALParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNUMERIC_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralNUMERIC_LITERALParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__NumericLiteralAssignment_0_1"


    // $ANTLR start "rule__STLiteralExpressions__DateLiteralAssignment_1_1"
    // InternalSTCoreParser.g:9782:1: rule__STLiteralExpressions__DateLiteralAssignment_1_1 : ( ruleDATE_LITERAL ) ;
    public final void rule__STLiteralExpressions__DateLiteralAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9786:1: ( ( ruleDATE_LITERAL ) )
            // InternalSTCoreParser.g:9787:2: ( ruleDATE_LITERAL )
            {
            // InternalSTCoreParser.g:9787:2: ( ruleDATE_LITERAL )
            // InternalSTCoreParser.g:9788:3: ruleDATE_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralDATE_LITERALParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralDATE_LITERALParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__DateLiteralAssignment_1_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeLiteralAssignment_2_1"
    // InternalSTCoreParser.g:9797:1: rule__STLiteralExpressions__TimeLiteralAssignment_2_1 : ( ruleTIME_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeLiteralAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9801:1: ( ( ruleTIME_LITERAL ) )
            // InternalSTCoreParser.g:9802:2: ( ruleTIME_LITERAL )
            {
            // InternalSTCoreParser.g:9802:2: ( ruleTIME_LITERAL )
            // InternalSTCoreParser.g:9803:3: ruleTIME_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralTIME_LITERALParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralTIME_LITERALParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeLiteralAssignment_2_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeOfDayLiteralAssignment_3_1"
    // InternalSTCoreParser.g:9812:1: rule__STLiteralExpressions__TimeOfDayLiteralAssignment_3_1 : ( ruleTIME_OF_DAY_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeOfDayLiteralAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9816:1: ( ( ruleTIME_OF_DAY_LITERAL ) )
            // InternalSTCoreParser.g:9817:2: ( ruleTIME_OF_DAY_LITERAL )
            {
            // InternalSTCoreParser.g:9817:2: ( ruleTIME_OF_DAY_LITERAL )
            // InternalSTCoreParser.g:9818:3: ruleTIME_OF_DAY_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralTIME_OF_DAY_LITERALParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralTIME_OF_DAY_LITERALParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeOfDayLiteralAssignment_3_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeLiteralAssignment_4_1"
    // InternalSTCoreParser.g:9827:1: rule__STLiteralExpressions__TimeLiteralAssignment_4_1 : ( ruleDATE_AND_TIME_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeLiteralAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9831:1: ( ( ruleDATE_AND_TIME_LITERAL ) )
            // InternalSTCoreParser.g:9832:2: ( ruleDATE_AND_TIME_LITERAL )
            {
            // InternalSTCoreParser.g:9832:2: ( ruleDATE_AND_TIME_LITERAL )
            // InternalSTCoreParser.g:9833:3: ruleDATE_AND_TIME_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralDATE_AND_TIME_LITERALParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE_AND_TIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralDATE_AND_TIME_LITERALParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeLiteralAssignment_4_1"


    // $ANTLR start "rule__STLiteralExpressions__StringLiteralAssignment_5_1"
    // InternalSTCoreParser.g:9842:1: rule__STLiteralExpressions__StringLiteralAssignment_5_1 : ( ruleSTRING_LITERAL ) ;
    public final void rule__STLiteralExpressions__StringLiteralAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9846:1: ( ( ruleSTRING_LITERAL ) )
            // InternalSTCoreParser.g:9847:2: ( ruleSTRING_LITERAL )
            {
            // InternalSTCoreParser.g:9847:2: ( ruleSTRING_LITERAL )
            // InternalSTCoreParser.g:9848:3: ruleSTRING_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralSTRING_LITERALParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralSTRING_LITERALParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__StringLiteralAssignment_5_1"


    // $ANTLR start "rule__NUMERIC_LITERAL__NotAssignment_0"
    // InternalSTCoreParser.g:9857:1: rule__NUMERIC_LITERAL__NotAssignment_0 : ( ( NOT ) ) ;
    public final void rule__NUMERIC_LITERAL__NotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9861:1: ( ( ( NOT ) ) )
            // InternalSTCoreParser.g:9862:2: ( ( NOT ) )
            {
            // InternalSTCoreParser.g:9862:2: ( ( NOT ) )
            // InternalSTCoreParser.g:9863:3: ( NOT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            // InternalSTCoreParser.g:9864:3: ( NOT )
            // InternalSTCoreParser.g:9865:4: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__NotAssignment_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__KeywordAssignment_1"
    // InternalSTCoreParser.g:9876:1: rule__NUMERIC_LITERAL__KeywordAssignment_1 : ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) ) ;
    public final void rule__NUMERIC_LITERAL__KeywordAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9880:1: ( ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) ) )
            // InternalSTCoreParser.g:9881:2: ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) )
            {
            // InternalSTCoreParser.g:9881:2: ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) )
            // InternalSTCoreParser.g:9882:3: ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAlternatives_1_0()); 
            }
            // InternalSTCoreParser.g:9883:3: ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 )
            // InternalSTCoreParser.g:9883:4: rule__NUMERIC_LITERAL__KeywordAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__KeywordAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__KeywordAssignment_1"


    // $ANTLR start "rule__NUMERIC_LITERAL__IntValueAssignment_2_0"
    // InternalSTCoreParser.g:9891:1: rule__NUMERIC_LITERAL__IntValueAssignment_2_0 : ( ruleINTEGER ) ;
    public final void rule__NUMERIC_LITERAL__IntValueAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9895:1: ( ( ruleINTEGER ) )
            // InternalSTCoreParser.g:9896:2: ( ruleINTEGER )
            {
            // InternalSTCoreParser.g:9896:2: ( ruleINTEGER )
            // InternalSTCoreParser.g:9897:3: ruleINTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getIntValueINTEGERParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getIntValueINTEGERParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__IntValueAssignment_2_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__RealValueAssignment_2_1"
    // InternalSTCoreParser.g:9906:1: rule__NUMERIC_LITERAL__RealValueAssignment_2_1 : ( ruleREAL ) ;
    public final void rule__NUMERIC_LITERAL__RealValueAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9910:1: ( ( ruleREAL ) )
            // InternalSTCoreParser.g:9911:2: ( ruleREAL )
            {
            // InternalSTCoreParser.g:9911:2: ( ruleREAL )
            // InternalSTCoreParser.g:9912:3: ruleREAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getRealValueREALParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleREAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getRealValueREALParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__RealValueAssignment_2_1"


    // $ANTLR start "rule__NUMERIC_LITERAL__HexValueAssignment_2_2"
    // InternalSTCoreParser.g:9921:1: rule__NUMERIC_LITERAL__HexValueAssignment_2_2 : ( RULE_NON_DECIMAL ) ;
    public final void rule__NUMERIC_LITERAL__HexValueAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9925:1: ( ( RULE_NON_DECIMAL ) )
            // InternalSTCoreParser.g:9926:2: ( RULE_NON_DECIMAL )
            {
            // InternalSTCoreParser.g:9926:2: ( RULE_NON_DECIMAL )
            // InternalSTCoreParser.g:9927:3: RULE_NON_DECIMAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getHexValueNON_DECIMALTerminalRuleCall_2_2_0()); 
            }
            match(input,RULE_NON_DECIMAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getHexValueNON_DECIMALTerminalRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__HexValueAssignment_2_2"


    // $ANTLR start "rule__NUMERIC_LITERAL__KeyWordValueAssignment_2_3"
    // InternalSTCoreParser.g:9936:1: rule__NUMERIC_LITERAL__KeyWordValueAssignment_2_3 : ( RULE_BOOL_VALUES ) ;
    public final void rule__NUMERIC_LITERAL__KeyWordValueAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9940:1: ( ( RULE_BOOL_VALUES ) )
            // InternalSTCoreParser.g:9941:2: ( RULE_BOOL_VALUES )
            {
            // InternalSTCoreParser.g:9941:2: ( RULE_BOOL_VALUES )
            // InternalSTCoreParser.g:9942:3: RULE_BOOL_VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getKeyWordValueBOOL_VALUESTerminalRuleCall_2_3_0()); 
            }
            match(input,RULE_BOOL_VALUES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getKeyWordValueBOOL_VALUESTerminalRuleCall_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__KeyWordValueAssignment_2_3"


    // $ANTLR start "rule__DATE_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:9951:1: rule__DATE_LITERAL__KeywordAssignment_0 : ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__DATE_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9955:1: ( ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:9956:2: ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:9956:2: ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:9957:3: ( rule__DATE_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:9958:3: ( rule__DATE_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:9958:4: rule__DATE_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__DATE_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:9966:1: rule__DATE_LITERAL__ValueAssignment_1 : ( ruleDATE ) ;
    public final void rule__DATE_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9970:1: ( ( ruleDATE ) )
            // InternalSTCoreParser.g:9971:2: ( ruleDATE )
            {
            // InternalSTCoreParser.g:9971:2: ( ruleDATE )
            // InternalSTCoreParser.g:9972:3: ruleDATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getValueDATEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getValueDATEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__TIME_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:9981:1: rule__TIME_LITERAL__KeywordAssignment_0 : ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__TIME_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9985:1: ( ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:9986:2: ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:9986:2: ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:9987:3: ( rule__TIME_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:9988:3: ( rule__TIME_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:9988:4: rule__TIME_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__TIME_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:9996:1: rule__TIME_LITERAL__ValueAssignment_1 : ( RULE_TIME ) ;
    public final void rule__TIME_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10000:1: ( ( RULE_TIME ) )
            // InternalSTCoreParser.g:10001:2: ( RULE_TIME )
            {
            // InternalSTCoreParser.g:10001:2: ( RULE_TIME )
            // InternalSTCoreParser.g:10002:3: RULE_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getValueTIMETerminalRuleCall_1_0()); 
            }
            match(input,RULE_TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getValueTIMETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10011:1: rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 : ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10015:1: ( ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10016:2: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10016:2: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10017:3: ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10018:3: ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10018:4: rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10026:1: rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 : ( ruleTIME_OF_DAY ) ;
    public final void rule__TIME_OF_DAY_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10030:1: ( ( ruleTIME_OF_DAY ) )
            // InternalSTCoreParser.g:10031:2: ( ruleTIME_OF_DAY )
            {
            // InternalSTCoreParser.g:10031:2: ( ruleTIME_OF_DAY )
            // InternalSTCoreParser.g:10032:3: ruleTIME_OF_DAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueTIME_OF_DAYParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueTIME_OF_DAYParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10041:1: rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 : ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10045:1: ( ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10046:2: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10046:2: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10047:3: ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10048:3: ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10048:4: rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1"
    // InternalSTCoreParser.g:10056:1: rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 : ( ruleDATE ) ;
    public final void rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10060:1: ( ( ruleDATE ) )
            // InternalSTCoreParser.g:10061:2: ( ruleDATE )
            {
            // InternalSTCoreParser.g:10061:2: ( ruleDATE )
            // InternalSTCoreParser.g:10062:3: ruleDATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueDATEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueDATEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3"
    // InternalSTCoreParser.g:10071:1: rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 : ( ruleTIME_OF_DAY ) ;
    public final void rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10075:1: ( ( ruleTIME_OF_DAY ) )
            // InternalSTCoreParser.g:10076:2: ( ruleTIME_OF_DAY )
            {
            // InternalSTCoreParser.g:10076:2: ( ruleTIME_OF_DAY )
            // InternalSTCoreParser.g:10077:3: ruleTIME_OF_DAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueTIME_OF_DAYParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueTIME_OF_DAYParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3"


    // $ANTLR start "rule__STRING_LITERAL__KeywordAssignment_0_0"
    // InternalSTCoreParser.g:10086:1: rule__STRING_LITERAL__KeywordAssignment_0_0 : ( ( STRING ) ) ;
    public final void rule__STRING_LITERAL__KeywordAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10090:1: ( ( ( STRING ) ) )
            // InternalSTCoreParser.g:10091:2: ( ( STRING ) )
            {
            // InternalSTCoreParser.g:10091:2: ( ( STRING ) )
            // InternalSTCoreParser.g:10092:3: ( STRING )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }
            // InternalSTCoreParser.g:10093:3: ( STRING )
            // InternalSTCoreParser.g:10094:4: STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }
            match(input,STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__KeywordAssignment_0_0"


    // $ANTLR start "rule__STRING_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10105:1: rule__STRING_LITERAL__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__STRING_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10109:1: ( ( RULE_STRING ) )
            // InternalSTCoreParser.g:10110:2: ( RULE_STRING )
            {
            // InternalSTCoreParser.g:10110:2: ( RULE_STRING )
            // InternalSTCoreParser.g:10111:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__ValueAssignment_1"

    // $ANTLR start synpred102_InternalSTCoreParser
    public final void synpred102_InternalSTCoreParser_fragment() throws RecognitionException {   
        // InternalSTCoreParser.g:6248:3: ( rule__STSelectionExpression__Group_1_2__0 )
        // InternalSTCoreParser.g:6248:3: rule__STSelectionExpression__Group_1_2__0
        {
        pushFollow(FOLLOW_2);
        rule__STSelectionExpression__Group_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred102_InternalSTCoreParser

    // $ANTLR start synpred109_InternalSTCoreParser
    public final void synpred109_InternalSTCoreParser_fragment() throws RecognitionException {   
        // InternalSTCoreParser.g:6949:3: ( rule__STAtomicExpression__Group_1_4__0 )
        // InternalSTCoreParser.g:6949:3: rule__STAtomicExpression__Group_1_4__0
        {
        pushFollow(FOLLOW_2);
        rule__STAtomicExpression__Group_1_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred109_InternalSTCoreParser

    // Delegated rules

    public final boolean synpred102_InternalSTCoreParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalSTCoreParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalSTCoreParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalSTCoreParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA60 dfa60 = new DFA60(this);
    protected DFA67 dfa67 = new DFA67(this);
    static final String dfa_1s = "\47\uffff";
    static final String dfa_2s = "\1\2\46\uffff";
    static final String dfa_3s = "\1\7\1\0\45\uffff";
    static final String dfa_4s = "\1\144\1\0\45\uffff";
    static final String dfa_5s = "\2\uffff\1\2\43\uffff\1\1";
    static final String dfa_6s = "\1\uffff\1\0\45\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\54\uffff\1\2\1\uffff\6\2\4\uffff\1\2\2\uffff\3\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\1\16\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "6248:2: ( rule__STSelectionExpression__Group_1_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_1 = input.LA(1);

                         
                        int index60_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalSTCoreParser()) ) {s = 38;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index60_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\42\uffff";
    static final String dfa_9s = "\1\2\41\uffff";
    static final String dfa_10s = "\1\7\1\0\40\uffff";
    static final String dfa_11s = "\1\144\1\0\40\uffff";
    static final String dfa_12s = "\2\uffff\1\2\36\uffff\1\1";
    static final String dfa_13s = "\1\uffff\1\0\40\uffff}>";
    static final String[] dfa_14s = {
            "\1\2\54\uffff\1\2\6\uffff\1\2\4\uffff\1\2\2\uffff\3\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\1\16\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "6949:2: ( rule__STAtomicExpression__Group_1_4__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_1 = input.LA(1);

                         
                        int index67_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalSTCoreParser()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index67_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x2000A00002000002L,0x0000080080008000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000800L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000080000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000880000040L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0xD02E4FDF7DEC9070L,0x000019A00A442002L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000001004000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0xD02E4FDF7DEC9070L,0x000019A80A442002L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x2000A00002000000L,0x0000080080008000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000240L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x2001A02002100000L,0x0000080080008000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0001000000002000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0xD02E4FDF7DEC9072L,0x000019A00A442002L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000044000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000005000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x2000A00002010000L,0x0000080080008000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x2000A00002000200L,0x0000080080008000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x2000B00002000000L,0x0000080080008000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0800000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0800000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000100L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000002L,0x0000000200000100L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000500000480L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000002L,0x0000000500000480L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x000000000A000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x000000000A000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000021000001L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000002L,0x0000000021000001L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0002000004001000L,0x0000080000400000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000810000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000002L,0x0000000810000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x07C0000000000000L,0x0000000010400000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0xD02E4FDF7DEC9070L,0x000019A00AC42002L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x00044B5339480000L,0x000001A00A000002L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x4000000800200000L,0x0000000000002000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x8000040000800000L,0x0000000000040000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0020008000000040L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x1008000000000030L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0xD02C4FDF79EC8070L,0x000011A00A042002L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x000001000A000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000050000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});

}