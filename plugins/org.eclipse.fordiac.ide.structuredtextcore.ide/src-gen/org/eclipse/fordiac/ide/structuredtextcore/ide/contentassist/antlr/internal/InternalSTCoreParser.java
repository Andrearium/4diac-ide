package org.eclipse.fordiac.ide.structuredtextcore.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.fordiac.ide.structuredtextcore.services.STCoreGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSTCoreParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "LDATE_AND_TIME", "DATE_AND_TIME", "TIME_OF_DAY", "END_REPEAT", "VAR_OUTPUT", "END_WHILE", "VAR_INPUT", "CONSTANT", "CONTINUE", "END_CASE", "VAR_TEMP", "WSTRING", "END_FOR", "END_VAR", "STRING", "DWORD", "END_IF", "LDATE", "LREAL", "LTIME", "LWORD", "REPEAT", "RETURN", "UDINT", "ULINT", "USINT", "WCHAR", "ARRAY", "BOOL", "BYTE", "CHAR", "DATE", "DINT", "ELSIF", "FALSE", "LINT", "LTOD", "REAL", "SINT", "TIME", "UINT", "UNTIL", "WHILE", "WORD", "CASE", "ELSE", "EXIT", "INT", "LDT", "THEN", "TOD", "TRUE", "B", "D_1", "L", "W", "X", "AND", "DT", "FOR", "LD", "LT", "MOD", "NOT", "VAR", "XOR", "AsteriskAsterisk", "FullStopFullStop", "ColonEqualsSign", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "GreaterThanSignEqualsSign", "AT", "BY", "D", "DO", "IF", "OF", "OR", "T", "TO", "NumberSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "LeftSquareBracket", "RightSquareBracket", "RULE_HEX_DIGIT", "RULE_NON_DECIMAL", "RULE_INT", "RULE_TIME", "RULE_EXT_INT", "RULE_ID", "RULE_STRING", "RULE_WSTRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LWORD=24;
    public static final int LessThanSignGreaterThanSign=74;
    public static final int VAR=68;
    public static final int END_IF=20;
    public static final int ULINT=28;
    public static final int END_CASE=13;
    public static final int LessThanSign=97;
    public static final int LeftParenthesis=87;
    public static final int BYTE=33;
    public static final int ELSE=49;
    public static final int RULE_TIME=105;
    public static final int IF=80;
    public static final int LINT=39;
    public static final int GreaterThanSign=99;
    public static final int WORD=47;
    public static final int DATE_AND_TIME=5;
    public static final int RULE_ID=107;
    public static final int TOD=54;
    public static final int DINT=36;
    public static final int UDINT=27;
    public static final int CASE=48;
    public static final int GreaterThanSignEqualsSign=75;
    public static final int AT=76;
    public static final int PlusSign=90;
    public static final int RULE_INT=104;
    public static final int END_FOR=16;
    public static final int RULE_ML_COMMENT=110;
    public static final int THEN=53;
    public static final int XOR=69;
    public static final int LeftSquareBracket=100;
    public static final int EXIT=50;
    public static final int TIME_OF_DAY=6;
    public static final int B=56;
    public static final int LDATE_AND_TIME=4;
    public static final int REPEAT=25;
    public static final int D=78;
    public static final int CHAR=34;
    public static final int L=58;
    public static final int LTIME=23;
    public static final int Comma=91;
    public static final int HyphenMinus=92;
    public static final int T=83;
    public static final int W=59;
    public static final int BY=77;
    public static final int X=60;
    public static final int ELSIF=37;
    public static final int END_REPEAT=7;
    public static final int LessThanSignEqualsSign=73;
    public static final int Solidus=94;
    public static final int VAR_INPUT=10;
    public static final int FullStop=93;
    public static final int VAR_TEMP=14;
    public static final int CONSTANT=11;
    public static final int CONTINUE=12;
    public static final int Semicolon=96;
    public static final int LD=64;
    public static final int VAR_OUTPUT=8;
    public static final int STRING=18;
    public static final int RULE_HEX_DIGIT=102;
    public static final int TO=84;
    public static final int UINT=44;
    public static final int LTOD=40;
    public static final int ARRAY=31;
    public static final int LT=65;
    public static final int DO=79;
    public static final int WSTRING=15;
    public static final int DT=62;
    public static final int END_VAR=17;
    public static final int FullStopFullStop=71;
    public static final int Ampersand=86;
    public static final int RightSquareBracket=101;
    public static final int USINT=29;
    public static final int DWORD=19;
    public static final int FOR=63;
    public static final int RightParenthesis=88;
    public static final int TRUE=55;
    public static final int ColonEqualsSign=72;
    public static final int RULE_WSTRING=109;
    public static final int END_WHILE=9;
    public static final int DATE=35;
    public static final int NOT=67;
    public static final int LDATE=21;
    public static final int AND=61;
    public static final int NumberSign=85;
    public static final int REAL=41;
    public static final int AsteriskAsterisk=70;
    public static final int SINT=42;
    public static final int LREAL=22;
    public static final int WCHAR=30;
    public static final int RULE_STRING=108;
    public static final int INT=51;
    public static final int RULE_SL_COMMENT=111;
    public static final int RETURN=26;
    public static final int EqualsSign=98;
    public static final int OF=81;
    public static final int Colon=95;
    public static final int EOF=-1;
    public static final int LDT=52;
    public static final int Asterisk=89;
    public static final int MOD=66;
    public static final int OR=82;
    public static final int RULE_WS=112;
    public static final int RULE_EXT_INT=106;
    public static final int TIME=43;
    public static final int RULE_ANY_OTHER=113;
    public static final int UNTIL=45;
    public static final int BOOL=32;
    public static final int D_1=57;
    public static final int FALSE=38;
    public static final int WHILE=46;
    public static final int RULE_NON_DECIMAL=103;

    // delegates
    // delegators


        public InternalSTCoreParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSTCoreParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSTCoreParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSTCoreParser.g"; }


    	private STCoreGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("NumberSign", "'#'");
    		tokenNameToValue.put("Ampersand", "'&'");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("AsteriskAsterisk", "'**'");
    		tokenNameToValue.put("FullStopFullStop", "'..'");
    		tokenNameToValue.put("ColonEqualsSign", "':='");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AT", "'AT'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("D", "'D#'");
    		tokenNameToValue.put("DO", "'DO'");
    		tokenNameToValue.put("IF", "'IF'");
    		tokenNameToValue.put("OF", "'OF'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("T", "'T#'");
    		tokenNameToValue.put("TO", "'TO'");
    		tokenNameToValue.put("B", "'.%B'");
    		tokenNameToValue.put("D_1", "'.%D'");
    		tokenNameToValue.put("L", "'.%L'");
    		tokenNameToValue.put("W", "'.%W'");
    		tokenNameToValue.put("X", "'.%X'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("DT", "'DT#'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("LD", "'LD#'");
    		tokenNameToValue.put("LT", "'LT#'");
    		tokenNameToValue.put("MOD", "'MOD'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("VAR", "'VAR'");
    		tokenNameToValue.put("XOR", "'XOR'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("EXIT", "'EXIT'");
    		tokenNameToValue.put("INT", "'INT#'");
    		tokenNameToValue.put("LDT", "'LDT#'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TOD", "'TOD#'");
    		tokenNameToValue.put("TRUE", "'TRUE'");
    		tokenNameToValue.put("ARRAY", "'ARRAY'");
    		tokenNameToValue.put("BOOL", "'BOOL#'");
    		tokenNameToValue.put("BYTE", "'BYTE#'");
    		tokenNameToValue.put("CHAR", "'CHAR#'");
    		tokenNameToValue.put("DATE", "'DATE#'");
    		tokenNameToValue.put("DINT", "'DINT#'");
    		tokenNameToValue.put("ELSIF", "'ELSIF'");
    		tokenNameToValue.put("FALSE", "'FALSE'");
    		tokenNameToValue.put("LINT", "'LINT#'");
    		tokenNameToValue.put("LTOD", "'LTOD#'");
    		tokenNameToValue.put("REAL", "'REAL#'");
    		tokenNameToValue.put("SINT", "'SINT#'");
    		tokenNameToValue.put("TIME", "'TIME#'");
    		tokenNameToValue.put("UINT", "'UINT#'");
    		tokenNameToValue.put("UNTIL", "'UNTIL'");
    		tokenNameToValue.put("WHILE", "'WHILE'");
    		tokenNameToValue.put("WORD", "'WORD#'");
    		tokenNameToValue.put("DWORD", "'DWORD#'");
    		tokenNameToValue.put("END_IF", "'END_IF'");
    		tokenNameToValue.put("LDATE", "'LDATE#'");
    		tokenNameToValue.put("LREAL", "'LREAL#'");
    		tokenNameToValue.put("LTIME", "'LTIME#'");
    		tokenNameToValue.put("LWORD", "'LWORD#'");
    		tokenNameToValue.put("REPEAT", "'REPEAT'");
    		tokenNameToValue.put("RETURN", "'RETURN'");
    		tokenNameToValue.put("UDINT", "'UDINT#'");
    		tokenNameToValue.put("ULINT", "'ULINT#'");
    		tokenNameToValue.put("USINT", "'USINT#'");
    		tokenNameToValue.put("WCHAR", "'WCHAR#'");
    		tokenNameToValue.put("END_FOR", "'END_FOR'");
    		tokenNameToValue.put("END_VAR", "'END_VAR'");
    		tokenNameToValue.put("STRING", "'STRING#'");
    		tokenNameToValue.put("CONSTANT", "'CONSTANT'");
    		tokenNameToValue.put("CONTINUE", "'CONTINUE'");
    		tokenNameToValue.put("END_CASE", "'END_CASE'");
    		tokenNameToValue.put("VAR_TEMP", "'VAR_TEMP'");
    		tokenNameToValue.put("WSTRING", "'WSTRING#'");
    		tokenNameToValue.put("END_WHILE", "'END_WHILE'");
    		tokenNameToValue.put("VAR_INPUT", "'VAR_INPUT'");
    		tokenNameToValue.put("END_REPEAT", "'END_REPEAT'");
    		tokenNameToValue.put("VAR_OUTPUT", "'VAR_OUTPUT'");
    		tokenNameToValue.put("TIME_OF_DAY", "'TIME_OF_DAY#'");
    		tokenNameToValue.put("DATE_AND_TIME", "'DATE_AND_TIME#'");
    		tokenNameToValue.put("LDATE_AND_TIME", "'LDATE_AND_TIME#'");
    	}

    	public void setGrammarAccess(STCoreGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleCode"
    // InternalSTCoreParser.g:154:1: entryRuleCode : ruleCode EOF ;
    public final void entryRuleCode() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:155:1: ( ruleCode EOF )
            // InternalSTCoreParser.g:156:1: ruleCode EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCodeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCode();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCodeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCode"


    // $ANTLR start "ruleCode"
    // InternalSTCoreParser.g:163:1: ruleCode : ( ( rule__Code__StatementsAssignment )* ) ;
    public final void ruleCode() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:167:2: ( ( ( rule__Code__StatementsAssignment )* ) )
            // InternalSTCoreParser.g:168:2: ( ( rule__Code__StatementsAssignment )* )
            {
            // InternalSTCoreParser.g:168:2: ( ( rule__Code__StatementsAssignment )* )
            // InternalSTCoreParser.g:169:3: ( rule__Code__StatementsAssignment )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCodeAccess().getStatementsAssignment()); 
            }
            // InternalSTCoreParser.g:170:3: ( rule__Code__StatementsAssignment )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==CONTINUE||(LA1_0>=REPEAT && LA1_0<=RETURN)||LA1_0==WHILE||LA1_0==CASE||LA1_0==EXIT||LA1_0==FOR||LA1_0==IF||LA1_0==Semicolon||LA1_0==RULE_ID) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSTCoreParser.g:170:4: rule__Code__StatementsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Code__StatementsAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCodeAccess().getStatementsAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCode"


    // $ANTLR start "entryRuleVarDeclaration"
    // InternalSTCoreParser.g:179:1: entryRuleVarDeclaration : ruleVarDeclaration EOF ;
    public final void entryRuleVarDeclaration() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:180:1: ( ruleVarDeclaration EOF )
            // InternalSTCoreParser.g:181:1: ruleVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclaration"


    // $ANTLR start "ruleVarDeclaration"
    // InternalSTCoreParser.g:188:1: ruleVarDeclaration : ( ( rule__VarDeclaration__Group__0 ) ) ;
    public final void ruleVarDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:192:2: ( ( ( rule__VarDeclaration__Group__0 ) ) )
            // InternalSTCoreParser.g:193:2: ( ( rule__VarDeclaration__Group__0 ) )
            {
            // InternalSTCoreParser.g:193:2: ( ( rule__VarDeclaration__Group__0 ) )
            // InternalSTCoreParser.g:194:3: ( rule__VarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:195:3: ( rule__VarDeclaration__Group__0 )
            // InternalSTCoreParser.g:195:4: rule__VarDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclaration"


    // $ANTLR start "entryRuleInitializerExpression"
    // InternalSTCoreParser.g:204:1: entryRuleInitializerExpression : ruleInitializerExpression EOF ;
    public final void entryRuleInitializerExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:205:1: ( ruleInitializerExpression EOF )
            // InternalSTCoreParser.g:206:1: ruleInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializerExpression"


    // $ANTLR start "ruleInitializerExpression"
    // InternalSTCoreParser.g:213:1: ruleInitializerExpression : ( ( rule__InitializerExpression__Alternatives ) ) ;
    public final void ruleInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:217:2: ( ( ( rule__InitializerExpression__Alternatives ) ) )
            // InternalSTCoreParser.g:218:2: ( ( rule__InitializerExpression__Alternatives ) )
            {
            // InternalSTCoreParser.g:218:2: ( ( rule__InitializerExpression__Alternatives ) )
            // InternalSTCoreParser.g:219:3: ( rule__InitializerExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:220:3: ( rule__InitializerExpression__Alternatives )
            // InternalSTCoreParser.g:220:4: rule__InitializerExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__InitializerExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializerExpression"


    // $ANTLR start "entryRuleArrayInitializerExpression"
    // InternalSTCoreParser.g:229:1: entryRuleArrayInitializerExpression : ruleArrayInitializerExpression EOF ;
    public final void entryRuleArrayInitializerExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:230:1: ( ruleArrayInitializerExpression EOF )
            // InternalSTCoreParser.g:231:1: ruleArrayInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitializerExpression"


    // $ANTLR start "ruleArrayInitializerExpression"
    // InternalSTCoreParser.g:238:1: ruleArrayInitializerExpression : ( ( rule__ArrayInitializerExpression__Group__0 ) ) ;
    public final void ruleArrayInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:242:2: ( ( ( rule__ArrayInitializerExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:243:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:243:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            // InternalSTCoreParser.g:244:3: ( rule__ArrayInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:245:3: ( rule__ArrayInitializerExpression__Group__0 )
            // InternalSTCoreParser.g:245:4: rule__ArrayInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitializerExpression"


    // $ANTLR start "entryRuleArrayInitElement"
    // InternalSTCoreParser.g:254:1: entryRuleArrayInitElement : ruleArrayInitElement EOF ;
    public final void entryRuleArrayInitElement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:255:1: ( ruleArrayInitElement EOF )
            // InternalSTCoreParser.g:256:1: ruleArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitElement"


    // $ANTLR start "ruleArrayInitElement"
    // InternalSTCoreParser.g:263:1: ruleArrayInitElement : ( ( rule__ArrayInitElement__Group__0 ) ) ;
    public final void ruleArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:267:2: ( ( ( rule__ArrayInitElement__Group__0 ) ) )
            // InternalSTCoreParser.g:268:2: ( ( rule__ArrayInitElement__Group__0 ) )
            {
            // InternalSTCoreParser.g:268:2: ( ( rule__ArrayInitElement__Group__0 ) )
            // InternalSTCoreParser.g:269:3: ( rule__ArrayInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:270:3: ( rule__ArrayInitElement__Group__0 )
            // InternalSTCoreParser.g:270:4: rule__ArrayInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitElement"


    // $ANTLR start "entryRuleSTStatement"
    // InternalSTCoreParser.g:279:1: entryRuleSTStatement : ruleSTStatement EOF ;
    public final void entryRuleSTStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:280:1: ( ruleSTStatement EOF )
            // InternalSTCoreParser.g:281:1: ruleSTStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStatement"


    // $ANTLR start "ruleSTStatement"
    // InternalSTCoreParser.g:288:1: ruleSTStatement : ( ( rule__STStatement__Alternatives ) ) ;
    public final void ruleSTStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:292:2: ( ( ( rule__STStatement__Alternatives ) ) )
            // InternalSTCoreParser.g:293:2: ( ( rule__STStatement__Alternatives ) )
            {
            // InternalSTCoreParser.g:293:2: ( ( rule__STStatement__Alternatives ) )
            // InternalSTCoreParser.g:294:3: ( rule__STStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:295:3: ( rule__STStatement__Alternatives )
            // InternalSTCoreParser.g:295:4: rule__STStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStatement"


    // $ANTLR start "entryRuleSTAssignmentStatement"
    // InternalSTCoreParser.g:304:1: entryRuleSTAssignmentStatement : ruleSTAssignmentStatement EOF ;
    public final void entryRuleSTAssignmentStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:305:1: ( ruleSTAssignmentStatement EOF )
            // InternalSTCoreParser.g:306:1: ruleSTAssignmentStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAssignmentStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAssignmentStatement"


    // $ANTLR start "ruleSTAssignmentStatement"
    // InternalSTCoreParser.g:313:1: ruleSTAssignmentStatement : ( ( rule__STAssignmentStatement__Group__0 ) ) ;
    public final void ruleSTAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:317:2: ( ( ( rule__STAssignmentStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:318:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:318:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            // InternalSTCoreParser.g:319:3: ( rule__STAssignmentStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:320:3: ( rule__STAssignmentStatement__Group__0 )
            // InternalSTCoreParser.g:320:4: rule__STAssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAssignmentStatement"


    // $ANTLR start "entryRuleSTIfStatment"
    // InternalSTCoreParser.g:329:1: entryRuleSTIfStatment : ruleSTIfStatment EOF ;
    public final void entryRuleSTIfStatment() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:330:1: ( ruleSTIfStatment EOF )
            // InternalSTCoreParser.g:331:1: ruleSTIfStatment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTIfStatment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTIfStatment"


    // $ANTLR start "ruleSTIfStatment"
    // InternalSTCoreParser.g:338:1: ruleSTIfStatment : ( ( rule__STIfStatment__Group__0 ) ) ;
    public final void ruleSTIfStatment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:342:2: ( ( ( rule__STIfStatment__Group__0 ) ) )
            // InternalSTCoreParser.g:343:2: ( ( rule__STIfStatment__Group__0 ) )
            {
            // InternalSTCoreParser.g:343:2: ( ( rule__STIfStatment__Group__0 ) )
            // InternalSTCoreParser.g:344:3: ( rule__STIfStatment__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:345:3: ( rule__STIfStatment__Group__0 )
            // InternalSTCoreParser.g:345:4: rule__STIfStatment__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTIfStatment"


    // $ANTLR start "entryRuleSTElseIfPart"
    // InternalSTCoreParser.g:354:1: entryRuleSTElseIfPart : ruleSTElseIfPart EOF ;
    public final void entryRuleSTElseIfPart() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:355:1: ( ruleSTElseIfPart EOF )
            // InternalSTCoreParser.g:356:1: ruleSTElseIfPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElseIfPart"


    // $ANTLR start "ruleSTElseIfPart"
    // InternalSTCoreParser.g:363:1: ruleSTElseIfPart : ( ( rule__STElseIfPart__Group__0 ) ) ;
    public final void ruleSTElseIfPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:367:2: ( ( ( rule__STElseIfPart__Group__0 ) ) )
            // InternalSTCoreParser.g:368:2: ( ( rule__STElseIfPart__Group__0 ) )
            {
            // InternalSTCoreParser.g:368:2: ( ( rule__STElseIfPart__Group__0 ) )
            // InternalSTCoreParser.g:369:3: ( rule__STElseIfPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:370:3: ( rule__STElseIfPart__Group__0 )
            // InternalSTCoreParser.g:370:4: rule__STElseIfPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElseIfPart"


    // $ANTLR start "entryRuleSTCaseStatement"
    // InternalSTCoreParser.g:379:1: entryRuleSTCaseStatement : ruleSTCaseStatement EOF ;
    public final void entryRuleSTCaseStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:380:1: ( ruleSTCaseStatement EOF )
            // InternalSTCoreParser.g:381:1: ruleSTCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseStatement"


    // $ANTLR start "ruleSTCaseStatement"
    // InternalSTCoreParser.g:388:1: ruleSTCaseStatement : ( ( rule__STCaseStatement__Group__0 ) ) ;
    public final void ruleSTCaseStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:392:2: ( ( ( rule__STCaseStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:393:2: ( ( rule__STCaseStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:393:2: ( ( rule__STCaseStatement__Group__0 ) )
            // InternalSTCoreParser.g:394:3: ( rule__STCaseStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:395:3: ( rule__STCaseStatement__Group__0 )
            // InternalSTCoreParser.g:395:4: rule__STCaseStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseStatement"


    // $ANTLR start "entryRuleSTCaseCases"
    // InternalSTCoreParser.g:404:1: entryRuleSTCaseCases : ruleSTCaseCases EOF ;
    public final void entryRuleSTCaseCases() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:405:1: ( ruleSTCaseCases EOF )
            // InternalSTCoreParser.g:406:1: ruleSTCaseCases EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseCases"


    // $ANTLR start "ruleSTCaseCases"
    // InternalSTCoreParser.g:413:1: ruleSTCaseCases : ( ( rule__STCaseCases__Group__0 ) ) ;
    public final void ruleSTCaseCases() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:417:2: ( ( ( rule__STCaseCases__Group__0 ) ) )
            // InternalSTCoreParser.g:418:2: ( ( rule__STCaseCases__Group__0 ) )
            {
            // InternalSTCoreParser.g:418:2: ( ( rule__STCaseCases__Group__0 ) )
            // InternalSTCoreParser.g:419:3: ( rule__STCaseCases__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:420:3: ( rule__STCaseCases__Group__0 )
            // InternalSTCoreParser.g:420:4: rule__STCaseCases__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseCases"


    // $ANTLR start "entryRuleSTElsePart"
    // InternalSTCoreParser.g:429:1: entryRuleSTElsePart : ruleSTElsePart EOF ;
    public final void entryRuleSTElsePart() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:430:1: ( ruleSTElsePart EOF )
            // InternalSTCoreParser.g:431:1: ruleSTElsePart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElsePart"


    // $ANTLR start "ruleSTElsePart"
    // InternalSTCoreParser.g:438:1: ruleSTElsePart : ( ( rule__STElsePart__Group__0 ) ) ;
    public final void ruleSTElsePart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:442:2: ( ( ( rule__STElsePart__Group__0 ) ) )
            // InternalSTCoreParser.g:443:2: ( ( rule__STElsePart__Group__0 ) )
            {
            // InternalSTCoreParser.g:443:2: ( ( rule__STElsePart__Group__0 ) )
            // InternalSTCoreParser.g:444:3: ( rule__STElsePart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:445:3: ( rule__STElsePart__Group__0 )
            // InternalSTCoreParser.g:445:4: rule__STElsePart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElsePart"


    // $ANTLR start "entryRuleSTForStatement"
    // InternalSTCoreParser.g:454:1: entryRuleSTForStatement : ruleSTForStatement EOF ;
    public final void entryRuleSTForStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:455:1: ( ruleSTForStatement EOF )
            // InternalSTCoreParser.g:456:1: ruleSTForStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTForStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTForStatement"


    // $ANTLR start "ruleSTForStatement"
    // InternalSTCoreParser.g:463:1: ruleSTForStatement : ( ( rule__STForStatement__Group__0 ) ) ;
    public final void ruleSTForStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:467:2: ( ( ( rule__STForStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:468:2: ( ( rule__STForStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:468:2: ( ( rule__STForStatement__Group__0 ) )
            // InternalSTCoreParser.g:469:3: ( rule__STForStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:470:3: ( rule__STForStatement__Group__0 )
            // InternalSTCoreParser.g:470:4: rule__STForStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTForStatement"


    // $ANTLR start "entryRuleSTWhileStatement"
    // InternalSTCoreParser.g:479:1: entryRuleSTWhileStatement : ruleSTWhileStatement EOF ;
    public final void entryRuleSTWhileStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:480:1: ( ruleSTWhileStatement EOF )
            // InternalSTCoreParser.g:481:1: ruleSTWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTWhileStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTWhileStatement"


    // $ANTLR start "ruleSTWhileStatement"
    // InternalSTCoreParser.g:488:1: ruleSTWhileStatement : ( ( rule__STWhileStatement__Group__0 ) ) ;
    public final void ruleSTWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:492:2: ( ( ( rule__STWhileStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:493:2: ( ( rule__STWhileStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:493:2: ( ( rule__STWhileStatement__Group__0 ) )
            // InternalSTCoreParser.g:494:3: ( rule__STWhileStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:495:3: ( rule__STWhileStatement__Group__0 )
            // InternalSTCoreParser.g:495:4: rule__STWhileStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTWhileStatement"


    // $ANTLR start "entryRuleSTRepeatStatement"
    // InternalSTCoreParser.g:504:1: entryRuleSTRepeatStatement : ruleSTRepeatStatement EOF ;
    public final void entryRuleSTRepeatStatement() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:505:1: ( ruleSTRepeatStatement EOF )
            // InternalSTCoreParser.g:506:1: ruleSTRepeatStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRepeatStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRepeatStatement"


    // $ANTLR start "ruleSTRepeatStatement"
    // InternalSTCoreParser.g:513:1: ruleSTRepeatStatement : ( ( rule__STRepeatStatement__Group__0 ) ) ;
    public final void ruleSTRepeatStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:517:2: ( ( ( rule__STRepeatStatement__Group__0 ) ) )
            // InternalSTCoreParser.g:518:2: ( ( rule__STRepeatStatement__Group__0 ) )
            {
            // InternalSTCoreParser.g:518:2: ( ( rule__STRepeatStatement__Group__0 ) )
            // InternalSTCoreParser.g:519:3: ( rule__STRepeatStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:520:3: ( rule__STRepeatStatement__Group__0 )
            // InternalSTCoreParser.g:520:4: rule__STRepeatStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRepeatStatement"


    // $ANTLR start "entryRuleSTExpression"
    // InternalSTCoreParser.g:529:1: entryRuleSTExpression : ruleSTExpression EOF ;
    public final void entryRuleSTExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:530:1: ( ruleSTExpression EOF )
            // InternalSTCoreParser.g:531:1: ruleSTExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpression"


    // $ANTLR start "ruleSTExpression"
    // InternalSTCoreParser.g:538:1: ruleSTExpression : ( ruleSTSubrangeExpression ) ;
    public final void ruleSTExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:542:2: ( ( ruleSTSubrangeExpression ) )
            // InternalSTCoreParser.g:543:2: ( ruleSTSubrangeExpression )
            {
            // InternalSTCoreParser.g:543:2: ( ruleSTSubrangeExpression )
            // InternalSTCoreParser.g:544:3: ruleSTSubrangeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpression"


    // $ANTLR start "entryRuleSTSubrangeExpression"
    // InternalSTCoreParser.g:554:1: entryRuleSTSubrangeExpression : ruleSTSubrangeExpression EOF ;
    public final void entryRuleSTSubrangeExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:555:1: ( ruleSTSubrangeExpression EOF )
            // InternalSTCoreParser.g:556:1: ruleSTSubrangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSubrangeExpression"


    // $ANTLR start "ruleSTSubrangeExpression"
    // InternalSTCoreParser.g:563:1: ruleSTSubrangeExpression : ( ( rule__STSubrangeExpression__Group__0 ) ) ;
    public final void ruleSTSubrangeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:567:2: ( ( ( rule__STSubrangeExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:568:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:568:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            // InternalSTCoreParser.g:569:3: ( rule__STSubrangeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:570:3: ( rule__STSubrangeExpression__Group__0 )
            // InternalSTCoreParser.g:570:4: rule__STSubrangeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSubrangeExpression"


    // $ANTLR start "entryRuleSTOrExpression"
    // InternalSTCoreParser.g:579:1: entryRuleSTOrExpression : ruleSTOrExpression EOF ;
    public final void entryRuleSTOrExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:580:1: ( ruleSTOrExpression EOF )
            // InternalSTCoreParser.g:581:1: ruleSTOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTOrExpression"


    // $ANTLR start "ruleSTOrExpression"
    // InternalSTCoreParser.g:588:1: ruleSTOrExpression : ( ( rule__STOrExpression__Group__0 ) ) ;
    public final void ruleSTOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:592:2: ( ( ( rule__STOrExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:593:2: ( ( rule__STOrExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:593:2: ( ( rule__STOrExpression__Group__0 ) )
            // InternalSTCoreParser.g:594:3: ( rule__STOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:595:3: ( rule__STOrExpression__Group__0 )
            // InternalSTCoreParser.g:595:4: rule__STOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTOrExpression"


    // $ANTLR start "entryRuleSTXorExpression"
    // InternalSTCoreParser.g:604:1: entryRuleSTXorExpression : ruleSTXorExpression EOF ;
    public final void entryRuleSTXorExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:605:1: ( ruleSTXorExpression EOF )
            // InternalSTCoreParser.g:606:1: ruleSTXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTXorExpression"


    // $ANTLR start "ruleSTXorExpression"
    // InternalSTCoreParser.g:613:1: ruleSTXorExpression : ( ( rule__STXorExpression__Group__0 ) ) ;
    public final void ruleSTXorExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:617:2: ( ( ( rule__STXorExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:618:2: ( ( rule__STXorExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:618:2: ( ( rule__STXorExpression__Group__0 ) )
            // InternalSTCoreParser.g:619:3: ( rule__STXorExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:620:3: ( rule__STXorExpression__Group__0 )
            // InternalSTCoreParser.g:620:4: rule__STXorExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTXorExpression"


    // $ANTLR start "entryRuleSTAndExpression"
    // InternalSTCoreParser.g:629:1: entryRuleSTAndExpression : ruleSTAndExpression EOF ;
    public final void entryRuleSTAndExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:630:1: ( ruleSTAndExpression EOF )
            // InternalSTCoreParser.g:631:1: ruleSTAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAndExpression"


    // $ANTLR start "ruleSTAndExpression"
    // InternalSTCoreParser.g:638:1: ruleSTAndExpression : ( ( rule__STAndExpression__Group__0 ) ) ;
    public final void ruleSTAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:642:2: ( ( ( rule__STAndExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:643:2: ( ( rule__STAndExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:643:2: ( ( rule__STAndExpression__Group__0 ) )
            // InternalSTCoreParser.g:644:3: ( rule__STAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:645:3: ( rule__STAndExpression__Group__0 )
            // InternalSTCoreParser.g:645:4: rule__STAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAndExpression"


    // $ANTLR start "entryRuleSTEqualityExpression"
    // InternalSTCoreParser.g:654:1: entryRuleSTEqualityExpression : ruleSTEqualityExpression EOF ;
    public final void entryRuleSTEqualityExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:655:1: ( ruleSTEqualityExpression EOF )
            // InternalSTCoreParser.g:656:1: ruleSTEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTEqualityExpression"


    // $ANTLR start "ruleSTEqualityExpression"
    // InternalSTCoreParser.g:663:1: ruleSTEqualityExpression : ( ( rule__STEqualityExpression__Group__0 ) ) ;
    public final void ruleSTEqualityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:667:2: ( ( ( rule__STEqualityExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:668:2: ( ( rule__STEqualityExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:668:2: ( ( rule__STEqualityExpression__Group__0 ) )
            // InternalSTCoreParser.g:669:3: ( rule__STEqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:670:3: ( rule__STEqualityExpression__Group__0 )
            // InternalSTCoreParser.g:670:4: rule__STEqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTEqualityExpression"


    // $ANTLR start "entryRuleSTComparisonExpression"
    // InternalSTCoreParser.g:679:1: entryRuleSTComparisonExpression : ruleSTComparisonExpression EOF ;
    public final void entryRuleSTComparisonExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:680:1: ( ruleSTComparisonExpression EOF )
            // InternalSTCoreParser.g:681:1: ruleSTComparisonExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTComparisonExpression"


    // $ANTLR start "ruleSTComparisonExpression"
    // InternalSTCoreParser.g:688:1: ruleSTComparisonExpression : ( ( rule__STComparisonExpression__Group__0 ) ) ;
    public final void ruleSTComparisonExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:692:2: ( ( ( rule__STComparisonExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:693:2: ( ( rule__STComparisonExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:693:2: ( ( rule__STComparisonExpression__Group__0 ) )
            // InternalSTCoreParser.g:694:3: ( rule__STComparisonExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:695:3: ( rule__STComparisonExpression__Group__0 )
            // InternalSTCoreParser.g:695:4: rule__STComparisonExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTComparisonExpression"


    // $ANTLR start "entryRuleSTAddSubExpression"
    // InternalSTCoreParser.g:704:1: entryRuleSTAddSubExpression : ruleSTAddSubExpression EOF ;
    public final void entryRuleSTAddSubExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:705:1: ( ruleSTAddSubExpression EOF )
            // InternalSTCoreParser.g:706:1: ruleSTAddSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAddSubExpression"


    // $ANTLR start "ruleSTAddSubExpression"
    // InternalSTCoreParser.g:713:1: ruleSTAddSubExpression : ( ( rule__STAddSubExpression__Group__0 ) ) ;
    public final void ruleSTAddSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:717:2: ( ( ( rule__STAddSubExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:718:2: ( ( rule__STAddSubExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:718:2: ( ( rule__STAddSubExpression__Group__0 ) )
            // InternalSTCoreParser.g:719:3: ( rule__STAddSubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:720:3: ( rule__STAddSubExpression__Group__0 )
            // InternalSTCoreParser.g:720:4: rule__STAddSubExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAddSubExpression"


    // $ANTLR start "entryRuleSTMulDivModExpression"
    // InternalSTCoreParser.g:729:1: entryRuleSTMulDivModExpression : ruleSTMulDivModExpression EOF ;
    public final void entryRuleSTMulDivModExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:730:1: ( ruleSTMulDivModExpression EOF )
            // InternalSTCoreParser.g:731:1: ruleSTMulDivModExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMulDivModExpression"


    // $ANTLR start "ruleSTMulDivModExpression"
    // InternalSTCoreParser.g:738:1: ruleSTMulDivModExpression : ( ( rule__STMulDivModExpression__Group__0 ) ) ;
    public final void ruleSTMulDivModExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:742:2: ( ( ( rule__STMulDivModExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:743:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:743:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            // InternalSTCoreParser.g:744:3: ( rule__STMulDivModExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:745:3: ( rule__STMulDivModExpression__Group__0 )
            // InternalSTCoreParser.g:745:4: rule__STMulDivModExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMulDivModExpression"


    // $ANTLR start "entryRuleSTPowerExpression"
    // InternalSTCoreParser.g:754:1: entryRuleSTPowerExpression : ruleSTPowerExpression EOF ;
    public final void entryRuleSTPowerExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:755:1: ( ruleSTPowerExpression EOF )
            // InternalSTCoreParser.g:756:1: ruleSTPowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPowerExpression"


    // $ANTLR start "ruleSTPowerExpression"
    // InternalSTCoreParser.g:763:1: ruleSTPowerExpression : ( ( rule__STPowerExpression__Group__0 ) ) ;
    public final void ruleSTPowerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:767:2: ( ( ( rule__STPowerExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:768:2: ( ( rule__STPowerExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:768:2: ( ( rule__STPowerExpression__Group__0 ) )
            // InternalSTCoreParser.g:769:3: ( rule__STPowerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:770:3: ( rule__STPowerExpression__Group__0 )
            // InternalSTCoreParser.g:770:4: rule__STPowerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPowerExpression"


    // $ANTLR start "entryRuleSTSignumExpression"
    // InternalSTCoreParser.g:779:1: entryRuleSTSignumExpression : ruleSTSignumExpression EOF ;
    public final void entryRuleSTSignumExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:780:1: ( ruleSTSignumExpression EOF )
            // InternalSTCoreParser.g:781:1: ruleSTSignumExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSignumExpression"


    // $ANTLR start "ruleSTSignumExpression"
    // InternalSTCoreParser.g:788:1: ruleSTSignumExpression : ( ( rule__STSignumExpression__Alternatives ) ) ;
    public final void ruleSTSignumExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:792:2: ( ( ( rule__STSignumExpression__Alternatives ) ) )
            // InternalSTCoreParser.g:793:2: ( ( rule__STSignumExpression__Alternatives ) )
            {
            // InternalSTCoreParser.g:793:2: ( ( rule__STSignumExpression__Alternatives ) )
            // InternalSTCoreParser.g:794:3: ( rule__STSignumExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:795:3: ( rule__STSignumExpression__Alternatives )
            // InternalSTCoreParser.g:795:4: rule__STSignumExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSignumExpression"


    // $ANTLR start "entryRuleSTSelectionExpression"
    // InternalSTCoreParser.g:804:1: entryRuleSTSelectionExpression : ruleSTSelectionExpression EOF ;
    public final void entryRuleSTSelectionExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:805:1: ( ruleSTSelectionExpression EOF )
            // InternalSTCoreParser.g:806:1: ruleSTSelectionExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSelectionExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSelectionExpression"


    // $ANTLR start "ruleSTSelectionExpression"
    // InternalSTCoreParser.g:813:1: ruleSTSelectionExpression : ( ( rule__STSelectionExpression__Group__0 ) ) ;
    public final void ruleSTSelectionExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:817:2: ( ( ( rule__STSelectionExpression__Group__0 ) ) )
            // InternalSTCoreParser.g:818:2: ( ( rule__STSelectionExpression__Group__0 ) )
            {
            // InternalSTCoreParser.g:818:2: ( ( rule__STSelectionExpression__Group__0 ) )
            // InternalSTCoreParser.g:819:3: ( rule__STSelectionExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:820:3: ( rule__STSelectionExpression__Group__0 )
            // InternalSTCoreParser.g:820:4: rule__STSelectionExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSelectionExpression"


    // $ANTLR start "entryRuleMultibitPartialAccess"
    // InternalSTCoreParser.g:829:1: entryRuleMultibitPartialAccess : ruleMultibitPartialAccess EOF ;
    public final void entryRuleMultibitPartialAccess() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:830:1: ( ruleMultibitPartialAccess EOF )
            // InternalSTCoreParser.g:831:1: ruleMultibitPartialAccess EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultibitPartialAccess"


    // $ANTLR start "ruleMultibitPartialAccess"
    // InternalSTCoreParser.g:838:1: ruleMultibitPartialAccess : ( ( rule__MultibitPartialAccess__Group__0 ) ) ;
    public final void ruleMultibitPartialAccess() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:842:2: ( ( ( rule__MultibitPartialAccess__Group__0 ) ) )
            // InternalSTCoreParser.g:843:2: ( ( rule__MultibitPartialAccess__Group__0 ) )
            {
            // InternalSTCoreParser.g:843:2: ( ( rule__MultibitPartialAccess__Group__0 ) )
            // InternalSTCoreParser.g:844:3: ( rule__MultibitPartialAccess__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:845:3: ( rule__MultibitPartialAccess__Group__0 )
            // InternalSTCoreParser.g:845:4: rule__MultibitPartialAccess__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultibitPartialAccess"


    // $ANTLR start "entryRuleSTAtomicExpression"
    // InternalSTCoreParser.g:854:1: entryRuleSTAtomicExpression : ruleSTAtomicExpression EOF ;
    public final void entryRuleSTAtomicExpression() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:855:1: ( ruleSTAtomicExpression EOF )
            // InternalSTCoreParser.g:856:1: ruleSTAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAtomicExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAtomicExpression"


    // $ANTLR start "ruleSTAtomicExpression"
    // InternalSTCoreParser.g:863:1: ruleSTAtomicExpression : ( ( rule__STAtomicExpression__Alternatives ) ) ;
    public final void ruleSTAtomicExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:867:2: ( ( ( rule__STAtomicExpression__Alternatives ) ) )
            // InternalSTCoreParser.g:868:2: ( ( rule__STAtomicExpression__Alternatives ) )
            {
            // InternalSTCoreParser.g:868:2: ( ( rule__STAtomicExpression__Alternatives ) )
            // InternalSTCoreParser.g:869:3: ( rule__STAtomicExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:870:3: ( rule__STAtomicExpression__Alternatives )
            // InternalSTCoreParser.g:870:4: rule__STAtomicExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAtomicExpression"


    // $ANTLR start "entryRuleSTLiteralExpressions"
    // InternalSTCoreParser.g:879:1: entryRuleSTLiteralExpressions : ruleSTLiteralExpressions EOF ;
    public final void entryRuleSTLiteralExpressions() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:880:1: ( ruleSTLiteralExpressions EOF )
            // InternalSTCoreParser.g:881:1: ruleSTLiteralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLiteralExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLiteralExpressions"


    // $ANTLR start "ruleSTLiteralExpressions"
    // InternalSTCoreParser.g:888:1: ruleSTLiteralExpressions : ( ( rule__STLiteralExpressions__Alternatives ) ) ;
    public final void ruleSTLiteralExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:892:2: ( ( ( rule__STLiteralExpressions__Alternatives ) ) )
            // InternalSTCoreParser.g:893:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            {
            // InternalSTCoreParser.g:893:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            // InternalSTCoreParser.g:894:3: ( rule__STLiteralExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:895:3: ( rule__STLiteralExpressions__Alternatives )
            // InternalSTCoreParser.g:895:4: rule__STLiteralExpressions__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLiteralExpressions"


    // $ANTLR start "entryRuleBOOL_LITERAL"
    // InternalSTCoreParser.g:904:1: entryRuleBOOL_LITERAL : ruleBOOL_LITERAL EOF ;
    public final void entryRuleBOOL_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:905:1: ( ruleBOOL_LITERAL EOF )
            // InternalSTCoreParser.g:906:1: ruleBOOL_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBOOL_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBOOL_LITERAL"


    // $ANTLR start "ruleBOOL_LITERAL"
    // InternalSTCoreParser.g:913:1: ruleBOOL_LITERAL : ( ( rule__BOOL_LITERAL__Group__0 ) ) ;
    public final void ruleBOOL_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:917:2: ( ( ( rule__BOOL_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:918:2: ( ( rule__BOOL_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:918:2: ( ( rule__BOOL_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:919:3: ( rule__BOOL_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:920:3: ( rule__BOOL_LITERAL__Group__0 )
            // InternalSTCoreParser.g:920:4: rule__BOOL_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBOOL_LITERAL"


    // $ANTLR start "entryRuleNUMERIC_LITERAL"
    // InternalSTCoreParser.g:929:1: entryRuleNUMERIC_LITERAL : ruleNUMERIC_LITERAL EOF ;
    public final void entryRuleNUMERIC_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:930:1: ( ruleNUMERIC_LITERAL EOF )
            // InternalSTCoreParser.g:931:1: ruleNUMERIC_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNUMERIC_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMERIC_LITERAL"


    // $ANTLR start "ruleNUMERIC_LITERAL"
    // InternalSTCoreParser.g:938:1: ruleNUMERIC_LITERAL : ( ( rule__NUMERIC_LITERAL__Group__0 ) ) ;
    public final void ruleNUMERIC_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:942:2: ( ( ( rule__NUMERIC_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:943:2: ( ( rule__NUMERIC_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:943:2: ( ( rule__NUMERIC_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:944:3: ( rule__NUMERIC_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:945:3: ( rule__NUMERIC_LITERAL__Group__0 )
            // InternalSTCoreParser.g:945:4: rule__NUMERIC_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMERIC_LITERAL"


    // $ANTLR start "entryRuleDATE_LITERAL"
    // InternalSTCoreParser.g:954:1: entryRuleDATE_LITERAL : ruleDATE_LITERAL EOF ;
    public final void entryRuleDATE_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:955:1: ( ruleDATE_LITERAL EOF )
            // InternalSTCoreParser.g:956:1: ruleDATE_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE_LITERAL"


    // $ANTLR start "ruleDATE_LITERAL"
    // InternalSTCoreParser.g:963:1: ruleDATE_LITERAL : ( ( rule__DATE_LITERAL__Group__0 ) ) ;
    public final void ruleDATE_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:967:2: ( ( ( rule__DATE_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:968:2: ( ( rule__DATE_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:968:2: ( ( rule__DATE_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:969:3: ( rule__DATE_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:970:3: ( rule__DATE_LITERAL__Group__0 )
            // InternalSTCoreParser.g:970:4: rule__DATE_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE_LITERAL"


    // $ANTLR start "entryRuleTIME_LITERAL"
    // InternalSTCoreParser.g:979:1: entryRuleTIME_LITERAL : ruleTIME_LITERAL EOF ;
    public final void entryRuleTIME_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:980:1: ( ruleTIME_LITERAL EOF )
            // InternalSTCoreParser.g:981:1: ruleTIME_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_LITERAL"


    // $ANTLR start "ruleTIME_LITERAL"
    // InternalSTCoreParser.g:988:1: ruleTIME_LITERAL : ( ( rule__TIME_LITERAL__Group__0 ) ) ;
    public final void ruleTIME_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:992:2: ( ( ( rule__TIME_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:993:2: ( ( rule__TIME_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:993:2: ( ( rule__TIME_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:994:3: ( rule__TIME_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:995:3: ( rule__TIME_LITERAL__Group__0 )
            // InternalSTCoreParser.g:995:4: rule__TIME_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_LITERAL"


    // $ANTLR start "entryRuleTIME_OF_DAY_LITERAL"
    // InternalSTCoreParser.g:1004:1: entryRuleTIME_OF_DAY_LITERAL : ruleTIME_OF_DAY_LITERAL EOF ;
    public final void entryRuleTIME_OF_DAY_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1005:1: ( ruleTIME_OF_DAY_LITERAL EOF )
            // InternalSTCoreParser.g:1006:1: ruleTIME_OF_DAY_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_OF_DAY_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_OF_DAY_LITERAL"


    // $ANTLR start "ruleTIME_OF_DAY_LITERAL"
    // InternalSTCoreParser.g:1013:1: ruleTIME_OF_DAY_LITERAL : ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) ) ;
    public final void ruleTIME_OF_DAY_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1017:2: ( ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1018:2: ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1018:2: ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1019:3: ( rule__TIME_OF_DAY_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1020:3: ( rule__TIME_OF_DAY_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1020:4: rule__TIME_OF_DAY_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_OF_DAY_LITERAL"


    // $ANTLR start "entryRuleDATE_AND_TIME_LITERAL"
    // InternalSTCoreParser.g:1029:1: entryRuleDATE_AND_TIME_LITERAL : ruleDATE_AND_TIME_LITERAL EOF ;
    public final void entryRuleDATE_AND_TIME_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1030:1: ( ruleDATE_AND_TIME_LITERAL EOF )
            // InternalSTCoreParser.g:1031:1: ruleDATE_AND_TIME_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE_AND_TIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE_AND_TIME_LITERAL"


    // $ANTLR start "ruleDATE_AND_TIME_LITERAL"
    // InternalSTCoreParser.g:1038:1: ruleDATE_AND_TIME_LITERAL : ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) ) ;
    public final void ruleDATE_AND_TIME_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1042:2: ( ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1043:2: ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1043:2: ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1044:3: ( rule__DATE_AND_TIME_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1045:3: ( rule__DATE_AND_TIME_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1045:4: rule__DATE_AND_TIME_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE_AND_TIME_LITERAL"


    // $ANTLR start "entryRuleSTRING_LITERAL"
    // InternalSTCoreParser.g:1054:1: entryRuleSTRING_LITERAL : ruleSTRING_LITERAL EOF ;
    public final void entryRuleSTRING_LITERAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1055:1: ( ruleSTRING_LITERAL EOF )
            // InternalSTCoreParser.g:1056:1: ruleSTRING_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRING_LITERAL"


    // $ANTLR start "ruleSTRING_LITERAL"
    // InternalSTCoreParser.g:1063:1: ruleSTRING_LITERAL : ( ( rule__STRING_LITERAL__Group__0 ) ) ;
    public final void ruleSTRING_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1067:2: ( ( ( rule__STRING_LITERAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1068:2: ( ( rule__STRING_LITERAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1068:2: ( ( rule__STRING_LITERAL__Group__0 ) )
            // InternalSTCoreParser.g:1069:3: ( rule__STRING_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1070:3: ( rule__STRING_LITERAL__Group__0 )
            // InternalSTCoreParser.g:1070:4: rule__STRING_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRING_LITERAL"


    // $ANTLR start "entryRuleINTEGER"
    // InternalSTCoreParser.g:1079:1: entryRuleINTEGER : ruleINTEGER EOF ;
    public final void entryRuleINTEGER() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1080:1: ( ruleINTEGER EOF )
            // InternalSTCoreParser.g:1081:1: ruleINTEGER EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleINTEGER"


    // $ANTLR start "ruleINTEGER"
    // InternalSTCoreParser.g:1088:1: ruleINTEGER : ( ( rule__INTEGER__Group__0 ) ) ;
    public final void ruleINTEGER() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1092:2: ( ( ( rule__INTEGER__Group__0 ) ) )
            // InternalSTCoreParser.g:1093:2: ( ( rule__INTEGER__Group__0 ) )
            {
            // InternalSTCoreParser.g:1093:2: ( ( rule__INTEGER__Group__0 ) )
            // InternalSTCoreParser.g:1094:3: ( rule__INTEGER__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1095:3: ( rule__INTEGER__Group__0 )
            // InternalSTCoreParser.g:1095:4: rule__INTEGER__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleINTEGER"


    // $ANTLR start "entryRuleREAL"
    // InternalSTCoreParser.g:1104:1: entryRuleREAL : ruleREAL EOF ;
    public final void entryRuleREAL() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1105:1: ( ruleREAL EOF )
            // InternalSTCoreParser.g:1106:1: ruleREAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleREAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleREAL"


    // $ANTLR start "ruleREAL"
    // InternalSTCoreParser.g:1113:1: ruleREAL : ( ( rule__REAL__Group__0 ) ) ;
    public final void ruleREAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1117:2: ( ( ( rule__REAL__Group__0 ) ) )
            // InternalSTCoreParser.g:1118:2: ( ( rule__REAL__Group__0 ) )
            {
            // InternalSTCoreParser.g:1118:2: ( ( rule__REAL__Group__0 ) )
            // InternalSTCoreParser.g:1119:3: ( rule__REAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1120:3: ( rule__REAL__Group__0 )
            // InternalSTCoreParser.g:1120:4: rule__REAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleREAL"


    // $ANTLR start "entryRuleDATE"
    // InternalSTCoreParser.g:1129:1: entryRuleDATE : ruleDATE EOF ;
    public final void entryRuleDATE() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1130:1: ( ruleDATE EOF )
            // InternalSTCoreParser.g:1131:1: ruleDATE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE"


    // $ANTLR start "ruleDATE"
    // InternalSTCoreParser.g:1138:1: ruleDATE : ( ( rule__DATE__Group__0 ) ) ;
    public final void ruleDATE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1142:2: ( ( ( rule__DATE__Group__0 ) ) )
            // InternalSTCoreParser.g:1143:2: ( ( rule__DATE__Group__0 ) )
            {
            // InternalSTCoreParser.g:1143:2: ( ( rule__DATE__Group__0 ) )
            // InternalSTCoreParser.g:1144:3: ( rule__DATE__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1145:3: ( rule__DATE__Group__0 )
            // InternalSTCoreParser.g:1145:4: rule__DATE__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE"


    // $ANTLR start "entryRuleTIME_OF_DAY"
    // InternalSTCoreParser.g:1154:1: entryRuleTIME_OF_DAY : ruleTIME_OF_DAY EOF ;
    public final void entryRuleTIME_OF_DAY() throws RecognitionException {
        try {
            // InternalSTCoreParser.g:1155:1: ( ruleTIME_OF_DAY EOF )
            // InternalSTCoreParser.g:1156:1: ruleTIME_OF_DAY EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_OF_DAY"


    // $ANTLR start "ruleTIME_OF_DAY"
    // InternalSTCoreParser.g:1163:1: ruleTIME_OF_DAY : ( ( rule__TIME_OF_DAY__Group__0 ) ) ;
    public final void ruleTIME_OF_DAY() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1167:2: ( ( ( rule__TIME_OF_DAY__Group__0 ) ) )
            // InternalSTCoreParser.g:1168:2: ( ( rule__TIME_OF_DAY__Group__0 ) )
            {
            // InternalSTCoreParser.g:1168:2: ( ( rule__TIME_OF_DAY__Group__0 ) )
            // InternalSTCoreParser.g:1169:3: ( rule__TIME_OF_DAY__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getGroup()); 
            }
            // InternalSTCoreParser.g:1170:3: ( rule__TIME_OF_DAY__Group__0 )
            // InternalSTCoreParser.g:1170:4: rule__TIME_OF_DAY__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_OF_DAY"


    // $ANTLR start "ruleSubrangeOperator"
    // InternalSTCoreParser.g:1179:1: ruleSubrangeOperator : ( ( FullStopFullStop ) ) ;
    public final void ruleSubrangeOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1183:1: ( ( ( FullStopFullStop ) ) )
            // InternalSTCoreParser.g:1184:2: ( ( FullStopFullStop ) )
            {
            // InternalSTCoreParser.g:1184:2: ( ( FullStopFullStop ) )
            // InternalSTCoreParser.g:1185:3: ( FullStopFullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }
            // InternalSTCoreParser.g:1186:3: ( FullStopFullStop )
            // InternalSTCoreParser.g:1186:4: FullStopFullStop
            {
            match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubrangeOperator"


    // $ANTLR start "ruleOrOperator"
    // InternalSTCoreParser.g:1195:1: ruleOrOperator : ( ( OR ) ) ;
    public final void ruleOrOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1199:1: ( ( ( OR ) ) )
            // InternalSTCoreParser.g:1200:2: ( ( OR ) )
            {
            // InternalSTCoreParser.g:1200:2: ( ( OR ) )
            // InternalSTCoreParser.g:1201:3: ( OR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }
            // InternalSTCoreParser.g:1202:3: ( OR )
            // InternalSTCoreParser.g:1202:4: OR
            {
            match(input,OR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalSTCoreParser.g:1211:1: ruleXorOperator : ( ( XOR ) ) ;
    public final void ruleXorOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1215:1: ( ( ( XOR ) ) )
            // InternalSTCoreParser.g:1216:2: ( ( XOR ) )
            {
            // InternalSTCoreParser.g:1216:2: ( ( XOR ) )
            // InternalSTCoreParser.g:1217:3: ( XOR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }
            // InternalSTCoreParser.g:1218:3: ( XOR )
            // InternalSTCoreParser.g:1218:4: XOR
            {
            match(input,XOR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalSTCoreParser.g:1227:1: ruleAndOperator : ( ( rule__AndOperator__Alternatives ) ) ;
    public final void ruleAndOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1231:1: ( ( ( rule__AndOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1232:2: ( ( rule__AndOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1232:2: ( ( rule__AndOperator__Alternatives ) )
            // InternalSTCoreParser.g:1233:3: ( rule__AndOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1234:3: ( rule__AndOperator__Alternatives )
            // InternalSTCoreParser.g:1234:4: rule__AndOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AndOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "ruleEqualityOperator"
    // InternalSTCoreParser.g:1243:1: ruleEqualityOperator : ( ( rule__EqualityOperator__Alternatives ) ) ;
    public final void ruleEqualityOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1247:1: ( ( ( rule__EqualityOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1248:2: ( ( rule__EqualityOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1248:2: ( ( rule__EqualityOperator__Alternatives ) )
            // InternalSTCoreParser.g:1249:3: ( rule__EqualityOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1250:3: ( rule__EqualityOperator__Alternatives )
            // InternalSTCoreParser.g:1250:4: rule__EqualityOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EqualityOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSTCoreParser.g:1259:1: ruleCompareOperator : ( ( rule__CompareOperator__Alternatives ) ) ;
    public final void ruleCompareOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1263:1: ( ( ( rule__CompareOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1264:2: ( ( rule__CompareOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1264:2: ( ( rule__CompareOperator__Alternatives ) )
            // InternalSTCoreParser.g:1265:3: ( rule__CompareOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1266:3: ( rule__CompareOperator__Alternatives )
            // InternalSTCoreParser.g:1266:4: rule__CompareOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CompareOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "ruleAddSubOperator"
    // InternalSTCoreParser.g:1275:1: ruleAddSubOperator : ( ( rule__AddSubOperator__Alternatives ) ) ;
    public final void ruleAddSubOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1279:1: ( ( ( rule__AddSubOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1280:2: ( ( rule__AddSubOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1280:2: ( ( rule__AddSubOperator__Alternatives ) )
            // InternalSTCoreParser.g:1281:3: ( rule__AddSubOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1282:3: ( rule__AddSubOperator__Alternatives )
            // InternalSTCoreParser.g:1282:4: rule__AddSubOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AddSubOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddSubOperator"


    // $ANTLR start "ruleMulDivModOperator"
    // InternalSTCoreParser.g:1291:1: ruleMulDivModOperator : ( ( rule__MulDivModOperator__Alternatives ) ) ;
    public final void ruleMulDivModOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1295:1: ( ( ( rule__MulDivModOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1296:2: ( ( rule__MulDivModOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1296:2: ( ( rule__MulDivModOperator__Alternatives ) )
            // InternalSTCoreParser.g:1297:3: ( rule__MulDivModOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1298:3: ( rule__MulDivModOperator__Alternatives )
            // InternalSTCoreParser.g:1298:4: rule__MulDivModOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MulDivModOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulDivModOperator"


    // $ANTLR start "rulePowerOperator"
    // InternalSTCoreParser.g:1307:1: rulePowerOperator : ( ( AsteriskAsterisk ) ) ;
    public final void rulePowerOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1311:1: ( ( ( AsteriskAsterisk ) ) )
            // InternalSTCoreParser.g:1312:2: ( ( AsteriskAsterisk ) )
            {
            // InternalSTCoreParser.g:1312:2: ( ( AsteriskAsterisk ) )
            // InternalSTCoreParser.g:1313:3: ( AsteriskAsterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }
            // InternalSTCoreParser.g:1314:3: ( AsteriskAsterisk )
            // InternalSTCoreParser.g:1314:4: AsteriskAsterisk
            {
            match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePowerOperator"


    // $ANTLR start "ruleUnaryOperator"
    // InternalSTCoreParser.g:1323:1: ruleUnaryOperator : ( ( rule__UnaryOperator__Alternatives ) ) ;
    public final void ruleUnaryOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1327:1: ( ( ( rule__UnaryOperator__Alternatives ) ) )
            // InternalSTCoreParser.g:1328:2: ( ( rule__UnaryOperator__Alternatives ) )
            {
            // InternalSTCoreParser.g:1328:2: ( ( rule__UnaryOperator__Alternatives ) )
            // InternalSTCoreParser.g:1329:3: ( rule__UnaryOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1330:3: ( rule__UnaryOperator__Alternatives )
            // InternalSTCoreParser.g:1330:4: rule__UnaryOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "ruleMultiBitAccessSpecifier"
    // InternalSTCoreParser.g:1339:1: ruleMultiBitAccessSpecifier : ( ( rule__MultiBitAccessSpecifier__Alternatives ) ) ;
    public final void ruleMultiBitAccessSpecifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1343:1: ( ( ( rule__MultiBitAccessSpecifier__Alternatives ) ) )
            // InternalSTCoreParser.g:1344:2: ( ( rule__MultiBitAccessSpecifier__Alternatives ) )
            {
            // InternalSTCoreParser.g:1344:2: ( ( rule__MultiBitAccessSpecifier__Alternatives ) )
            // InternalSTCoreParser.g:1345:3: ( rule__MultiBitAccessSpecifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiBitAccessSpecifierAccess().getAlternatives()); 
            }
            // InternalSTCoreParser.g:1346:3: ( rule__MultiBitAccessSpecifier__Alternatives )
            // InternalSTCoreParser.g:1346:4: rule__MultiBitAccessSpecifier__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MultiBitAccessSpecifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiBitAccessSpecifierAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiBitAccessSpecifier"


    // $ANTLR start "rule__VarDeclaration__Alternatives_3_1"
    // InternalSTCoreParser.g:1354:1: rule__VarDeclaration__Alternatives_3_1 : ( ( ( rule__VarDeclaration__Group_3_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_3_1_1__0 ) ) );
    public final void rule__VarDeclaration__Alternatives_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1358:1: ( ( ( rule__VarDeclaration__Group_3_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_3_1_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==LeftSquareBracket) ) {
                int LA2_1 = input.LA(2);

                if ( (LA2_1==Asterisk) ) {
                    alt2=2;
                }
                else if ( ((LA2_1>=LDATE_AND_TIME && LA2_1<=TIME_OF_DAY)||LA2_1==WSTRING||(LA2_1>=STRING && LA2_1<=DWORD)||(LA2_1>=LDATE && LA2_1<=LWORD)||(LA2_1>=UDINT && LA2_1<=WCHAR)||(LA2_1>=BOOL && LA2_1<=DINT)||(LA2_1>=FALSE && LA2_1<=UINT)||LA2_1==WORD||(LA2_1>=INT && LA2_1<=LDT)||(LA2_1>=TOD && LA2_1<=TRUE)||LA2_1==DT||(LA2_1>=LD && LA2_1<=LT)||LA2_1==NOT||LA2_1==D||LA2_1==T||LA2_1==LeftParenthesis||LA2_1==PlusSign||LA2_1==HyphenMinus||(LA2_1>=RULE_NON_DECIMAL && LA2_1<=RULE_INT)||(LA2_1>=RULE_ID && LA2_1<=RULE_STRING)) ) {
                    alt2=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSTCoreParser.g:1359:2: ( ( rule__VarDeclaration__Group_3_1_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1359:2: ( ( rule__VarDeclaration__Group_3_1_0__0 ) )
                    // InternalSTCoreParser.g:1360:3: ( rule__VarDeclaration__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0()); 
                    }
                    // InternalSTCoreParser.g:1361:3: ( rule__VarDeclaration__Group_3_1_0__0 )
                    // InternalSTCoreParser.g:1361:4: rule__VarDeclaration__Group_3_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1365:2: ( ( rule__VarDeclaration__Group_3_1_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1365:2: ( ( rule__VarDeclaration__Group_3_1_1__0 ) )
                    // InternalSTCoreParser.g:1366:3: ( rule__VarDeclaration__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1()); 
                    }
                    // InternalSTCoreParser.g:1367:3: ( rule__VarDeclaration__Group_3_1_1__0 )
                    // InternalSTCoreParser.g:1367:4: rule__VarDeclaration__Group_3_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Alternatives_3_1"


    // $ANTLR start "rule__InitializerExpression__Alternatives"
    // InternalSTCoreParser.g:1375:1: rule__InitializerExpression__Alternatives : ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) );
    public final void rule__InitializerExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1379:1: ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=LDATE_AND_TIME && LA3_0<=TIME_OF_DAY)||LA3_0==WSTRING||(LA3_0>=STRING && LA3_0<=DWORD)||(LA3_0>=LDATE && LA3_0<=LWORD)||(LA3_0>=UDINT && LA3_0<=WCHAR)||(LA3_0>=BOOL && LA3_0<=DINT)||(LA3_0>=FALSE && LA3_0<=UINT)||LA3_0==WORD||(LA3_0>=INT && LA3_0<=LDT)||(LA3_0>=TOD && LA3_0<=TRUE)||LA3_0==DT||(LA3_0>=LD && LA3_0<=LT)||LA3_0==NOT||LA3_0==D||LA3_0==T||LA3_0==LeftParenthesis||LA3_0==PlusSign||LA3_0==HyphenMinus||(LA3_0>=RULE_NON_DECIMAL && LA3_0<=RULE_INT)||(LA3_0>=RULE_ID && LA3_0<=RULE_STRING)) ) {
                alt3=1;
            }
            else if ( (LA3_0==LeftSquareBracket) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSTCoreParser.g:1380:2: ( ruleSTExpression )
                    {
                    // InternalSTCoreParser.g:1380:2: ( ruleSTExpression )
                    // InternalSTCoreParser.g:1381:3: ruleSTExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1386:2: ( ruleArrayInitializerExpression )
                    {
                    // InternalSTCoreParser.g:1386:2: ( ruleArrayInitializerExpression )
                    // InternalSTCoreParser.g:1387:3: ruleArrayInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArrayInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializerExpression__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives"
    // InternalSTCoreParser.g:1396:1: rule__STStatement__Alternatives : ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) );
    public final void rule__STStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1400:1: ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==CONTINUE||(LA4_0>=REPEAT && LA4_0<=RETURN)||LA4_0==WHILE||LA4_0==CASE||LA4_0==EXIT||LA4_0==FOR||LA4_0==IF||LA4_0==RULE_ID) ) {
                alt4=1;
            }
            else if ( (LA4_0==Semicolon) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSTCoreParser.g:1401:2: ( ( rule__STStatement__Group_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1401:2: ( ( rule__STStatement__Group_0__0 ) )
                    // InternalSTCoreParser.g:1402:3: ( rule__STStatement__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }
                    // InternalSTCoreParser.g:1403:3: ( rule__STStatement__Group_0__0 )
                    // InternalSTCoreParser.g:1403:4: rule__STStatement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1407:2: ( ( rule__STStatement__Group_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1407:2: ( ( rule__STStatement__Group_1__0 ) )
                    // InternalSTCoreParser.g:1408:3: ( rule__STStatement__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }
                    // InternalSTCoreParser.g:1409:3: ( rule__STStatement__Group_1__0 )
                    // InternalSTCoreParser.g:1409:4: rule__STStatement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives_0_0"
    // InternalSTCoreParser.g:1417:1: rule__STStatement__Alternatives_0_0 : ( ( ruleSTIfStatment ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ruleSTAssignmentStatement ) | ( ( rule__STStatement__Group_0_0_6__0 ) ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) );
    public final void rule__STStatement__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1421:1: ( ( ruleSTIfStatment ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ruleSTAssignmentStatement ) | ( ( rule__STStatement__Group_0_0_6__0 ) ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) )
            int alt5=9;
            switch ( input.LA(1) ) {
            case IF:
                {
                alt5=1;
                }
                break;
            case CASE:
                {
                alt5=2;
                }
                break;
            case FOR:
                {
                alt5=3;
                }
                break;
            case WHILE:
                {
                alt5=4;
                }
                break;
            case REPEAT:
                {
                alt5=5;
                }
                break;
            case RULE_ID:
                {
                alt5=6;
                }
                break;
            case RETURN:
                {
                alt5=7;
                }
                break;
            case CONTINUE:
                {
                alt5=8;
                }
                break;
            case EXIT:
                {
                alt5=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalSTCoreParser.g:1422:2: ( ruleSTIfStatment )
                    {
                    // InternalSTCoreParser.g:1422:2: ( ruleSTIfStatment )
                    // InternalSTCoreParser.g:1423:3: ruleSTIfStatment
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTIfStatmentParserRuleCall_0_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTIfStatment();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTIfStatmentParserRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1428:2: ( ruleSTCaseStatement )
                    {
                    // InternalSTCoreParser.g:1428:2: ( ruleSTCaseStatement )
                    // InternalSTCoreParser.g:1429:3: ruleSTCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCaseStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1434:2: ( ruleSTForStatement )
                    {
                    // InternalSTCoreParser.g:1434:2: ( ruleSTForStatement )
                    // InternalSTCoreParser.g:1435:3: ruleSTForStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTForStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1440:2: ( ruleSTWhileStatement )
                    {
                    // InternalSTCoreParser.g:1440:2: ( ruleSTWhileStatement )
                    // InternalSTCoreParser.g:1441:3: ruleSTWhileStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTWhileStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:1446:2: ( ruleSTRepeatStatement )
                    {
                    // InternalSTCoreParser.g:1446:2: ( ruleSTRepeatStatement )
                    // InternalSTCoreParser.g:1447:3: ruleSTRepeatStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTRepeatStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:1452:2: ( ruleSTAssignmentStatement )
                    {
                    // InternalSTCoreParser.g:1452:2: ( ruleSTAssignmentStatement )
                    // InternalSTCoreParser.g:1453:3: ruleSTAssignmentStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAssignmentStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTCoreParser.g:1458:2: ( ( rule__STStatement__Group_0_0_6__0 ) )
                    {
                    // InternalSTCoreParser.g:1458:2: ( ( rule__STStatement__Group_0_0_6__0 ) )
                    // InternalSTCoreParser.g:1459:3: ( rule__STStatement__Group_0_0_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_6()); 
                    }
                    // InternalSTCoreParser.g:1460:3: ( rule__STStatement__Group_0_0_6__0 )
                    // InternalSTCoreParser.g:1460:4: rule__STStatement__Group_0_0_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTCoreParser.g:1464:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    {
                    // InternalSTCoreParser.g:1464:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    // InternalSTCoreParser.g:1465:3: ( rule__STStatement__Group_0_0_7__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }
                    // InternalSTCoreParser.g:1466:3: ( rule__STStatement__Group_0_0_7__0 )
                    // InternalSTCoreParser.g:1466:4: rule__STStatement__Group_0_0_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTCoreParser.g:1470:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    {
                    // InternalSTCoreParser.g:1470:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    // InternalSTCoreParser.g:1471:3: ( rule__STStatement__Group_0_0_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }
                    // InternalSTCoreParser.g:1472:3: ( rule__STStatement__Group_0_0_8__0 )
                    // InternalSTCoreParser.g:1472:4: rule__STStatement__Group_0_0_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives_0_0"


    // $ANTLR start "rule__STSignumExpression__Alternatives"
    // InternalSTCoreParser.g:1480:1: rule__STSignumExpression__Alternatives : ( ( ruleSTLiteralExpressions ) | ( ruleSTSelectionExpression ) | ( ( rule__STSignumExpression__Group_2__0 ) ) );
    public final void rule__STSignumExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1484:1: ( ( ruleSTLiteralExpressions ) | ( ruleSTSelectionExpression ) | ( ( rule__STSignumExpression__Group_2__0 ) ) )
            int alt6=3;
            switch ( input.LA(1) ) {
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case FALSE:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case TRUE:
            case DT:
            case LD:
            case LT:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_STRING:
                {
                alt6=1;
                }
                break;
            case PlusSign:
                {
                int LA6_2 = input.LA(2);

                if ( (LA6_2==RULE_INT) ) {
                    alt6=1;
                }
                else if ( (LA6_2==LeftParenthesis||LA6_2==RULE_ID) ) {
                    alt6=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 2, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA6_3 = input.LA(2);

                if ( (LA6_3==RULE_INT) ) {
                    alt6=1;
                }
                else if ( (LA6_3==LeftParenthesis||LA6_3==RULE_ID) ) {
                    alt6=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 3, input);

                    throw nvae;
                }
                }
                break;
            case LeftParenthesis:
            case RULE_ID:
                {
                alt6=2;
                }
                break;
            case NOT:
                {
                alt6=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalSTCoreParser.g:1485:2: ( ruleSTLiteralExpressions )
                    {
                    // InternalSTCoreParser.g:1485:2: ( ruleSTLiteralExpressions )
                    // InternalSTCoreParser.g:1486:3: ruleSTLiteralExpressions
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSTLiteralExpressionsParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTLiteralExpressions();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSTLiteralExpressionsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1491:2: ( ruleSTSelectionExpression )
                    {
                    // InternalSTCoreParser.g:1491:2: ( ruleSTSelectionExpression )
                    // InternalSTCoreParser.g:1492:3: ruleSTSelectionExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSTSelectionExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTSelectionExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSTSelectionExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1497:2: ( ( rule__STSignumExpression__Group_2__0 ) )
                    {
                    // InternalSTCoreParser.g:1497:2: ( ( rule__STSignumExpression__Group_2__0 ) )
                    // InternalSTCoreParser.g:1498:3: ( rule__STSignumExpression__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getGroup_2()); 
                    }
                    // InternalSTCoreParser.g:1499:3: ( rule__STSignumExpression__Group_2__0 )
                    // InternalSTCoreParser.g:1499:4: rule__STSignumExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSignumExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Alternatives"


    // $ANTLR start "rule__STSelectionExpression__Alternatives_1_1"
    // InternalSTCoreParser.g:1507:1: rule__STSelectionExpression__Alternatives_1_1 : ( ( ( rule__STSelectionExpression__Group_1_1_0__0 ) ) | ( ( rule__STSelectionExpression__Group_1_1_1__0 ) ) );
    public final void rule__STSelectionExpression__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1511:1: ( ( ( rule__STSelectionExpression__Group_1_1_0__0 ) ) | ( ( rule__STSelectionExpression__Group_1_1_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==FullStop) ) {
                alt7=1;
            }
            else if ( (LA7_0==LeftSquareBracket) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalSTCoreParser.g:1512:2: ( ( rule__STSelectionExpression__Group_1_1_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1512:2: ( ( rule__STSelectionExpression__Group_1_1_0__0 ) )
                    // InternalSTCoreParser.g:1513:3: ( rule__STSelectionExpression__Group_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_0()); 
                    }
                    // InternalSTCoreParser.g:1514:3: ( rule__STSelectionExpression__Group_1_1_0__0 )
                    // InternalSTCoreParser.g:1514:4: rule__STSelectionExpression__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1518:2: ( ( rule__STSelectionExpression__Group_1_1_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1518:2: ( ( rule__STSelectionExpression__Group_1_1_1__0 ) )
                    // InternalSTCoreParser.g:1519:3: ( rule__STSelectionExpression__Group_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1()); 
                    }
                    // InternalSTCoreParser.g:1520:3: ( rule__STSelectionExpression__Group_1_1_1__0 )
                    // InternalSTCoreParser.g:1520:4: rule__STSelectionExpression__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Alternatives_1_1"


    // $ANTLR start "rule__STAtomicExpression__Alternatives"
    // InternalSTCoreParser.g:1528:1: rule__STAtomicExpression__Alternatives : ( ( ( rule__STAtomicExpression__Group_0__0 ) ) | ( ( rule__STAtomicExpression__Group_1__0 ) ) );
    public final void rule__STAtomicExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1532:1: ( ( ( rule__STAtomicExpression__Group_0__0 ) ) | ( ( rule__STAtomicExpression__Group_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==LeftParenthesis) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_ID) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSTCoreParser.g:1533:2: ( ( rule__STAtomicExpression__Group_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1533:2: ( ( rule__STAtomicExpression__Group_0__0 ) )
                    // InternalSTCoreParser.g:1534:3: ( rule__STAtomicExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_0()); 
                    }
                    // InternalSTCoreParser.g:1535:3: ( rule__STAtomicExpression__Group_0__0 )
                    // InternalSTCoreParser.g:1535:4: rule__STAtomicExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1539:2: ( ( rule__STAtomicExpression__Group_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1539:2: ( ( rule__STAtomicExpression__Group_1__0 ) )
                    // InternalSTCoreParser.g:1540:3: ( rule__STAtomicExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1()); 
                    }
                    // InternalSTCoreParser.g:1541:3: ( rule__STAtomicExpression__Group_1__0 )
                    // InternalSTCoreParser.g:1541:4: rule__STAtomicExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Alternatives"


    // $ANTLR start "rule__STLiteralExpressions__Alternatives"
    // InternalSTCoreParser.g:1549:1: rule__STLiteralExpressions__Alternatives : ( ( ( rule__STLiteralExpressions__Group_0__0 ) ) | ( ( rule__STLiteralExpressions__Group_1__0 ) ) | ( ( rule__STLiteralExpressions__Group_2__0 ) ) | ( ( rule__STLiteralExpressions__Group_3__0 ) ) | ( ( rule__STLiteralExpressions__Group_4__0 ) ) | ( ( rule__STLiteralExpressions__Group_5__0 ) ) | ( ( rule__STLiteralExpressions__Group_6__0 ) ) );
    public final void rule__STLiteralExpressions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1553:1: ( ( ( rule__STLiteralExpressions__Group_0__0 ) ) | ( ( rule__STLiteralExpressions__Group_1__0 ) ) | ( ( rule__STLiteralExpressions__Group_2__0 ) ) | ( ( rule__STLiteralExpressions__Group_3__0 ) ) | ( ( rule__STLiteralExpressions__Group_4__0 ) ) | ( ( rule__STLiteralExpressions__Group_5__0 ) ) | ( ( rule__STLiteralExpressions__Group_6__0 ) ) )
            int alt9=7;
            switch ( input.LA(1) ) {
            case BOOL:
                {
                int LA9_1 = input.LA(2);

                if ( (LA9_1==PlusSign||LA9_1==HyphenMinus||(LA9_1>=RULE_NON_DECIMAL && LA9_1<=RULE_INT)) ) {
                    alt9=2;
                }
                else if ( (LA9_1==FALSE||LA9_1==TRUE) ) {
                    alt9=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 1, input);

                    throw nvae;
                }
                }
                break;
            case FALSE:
            case TRUE:
                {
                alt9=1;
                }
                break;
            case DWORD:
            case LREAL:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case BYTE:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case UINT:
            case WORD:
            case INT:
            case PlusSign:
            case HyphenMinus:
            case RULE_NON_DECIMAL:
            case RULE_INT:
                {
                alt9=2;
                }
                break;
            case LDATE:
            case DATE:
            case LD:
            case D:
                {
                alt9=3;
                }
                break;
            case LTIME:
            case TIME:
            case LT:
            case T:
                {
                alt9=4;
                }
                break;
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt9=5;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt9=6;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
            case RULE_STRING:
                {
                alt9=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalSTCoreParser.g:1554:2: ( ( rule__STLiteralExpressions__Group_0__0 ) )
                    {
                    // InternalSTCoreParser.g:1554:2: ( ( rule__STLiteralExpressions__Group_0__0 ) )
                    // InternalSTCoreParser.g:1555:3: ( rule__STLiteralExpressions__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_0()); 
                    }
                    // InternalSTCoreParser.g:1556:3: ( rule__STLiteralExpressions__Group_0__0 )
                    // InternalSTCoreParser.g:1556:4: rule__STLiteralExpressions__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1560:2: ( ( rule__STLiteralExpressions__Group_1__0 ) )
                    {
                    // InternalSTCoreParser.g:1560:2: ( ( rule__STLiteralExpressions__Group_1__0 ) )
                    // InternalSTCoreParser.g:1561:3: ( rule__STLiteralExpressions__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_1()); 
                    }
                    // InternalSTCoreParser.g:1562:3: ( rule__STLiteralExpressions__Group_1__0 )
                    // InternalSTCoreParser.g:1562:4: rule__STLiteralExpressions__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1566:2: ( ( rule__STLiteralExpressions__Group_2__0 ) )
                    {
                    // InternalSTCoreParser.g:1566:2: ( ( rule__STLiteralExpressions__Group_2__0 ) )
                    // InternalSTCoreParser.g:1567:3: ( rule__STLiteralExpressions__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_2()); 
                    }
                    // InternalSTCoreParser.g:1568:3: ( rule__STLiteralExpressions__Group_2__0 )
                    // InternalSTCoreParser.g:1568:4: rule__STLiteralExpressions__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1572:2: ( ( rule__STLiteralExpressions__Group_3__0 ) )
                    {
                    // InternalSTCoreParser.g:1572:2: ( ( rule__STLiteralExpressions__Group_3__0 ) )
                    // InternalSTCoreParser.g:1573:3: ( rule__STLiteralExpressions__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_3()); 
                    }
                    // InternalSTCoreParser.g:1574:3: ( rule__STLiteralExpressions__Group_3__0 )
                    // InternalSTCoreParser.g:1574:4: rule__STLiteralExpressions__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:1578:2: ( ( rule__STLiteralExpressions__Group_4__0 ) )
                    {
                    // InternalSTCoreParser.g:1578:2: ( ( rule__STLiteralExpressions__Group_4__0 ) )
                    // InternalSTCoreParser.g:1579:3: ( rule__STLiteralExpressions__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_4()); 
                    }
                    // InternalSTCoreParser.g:1580:3: ( rule__STLiteralExpressions__Group_4__0 )
                    // InternalSTCoreParser.g:1580:4: rule__STLiteralExpressions__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:1584:2: ( ( rule__STLiteralExpressions__Group_5__0 ) )
                    {
                    // InternalSTCoreParser.g:1584:2: ( ( rule__STLiteralExpressions__Group_5__0 ) )
                    // InternalSTCoreParser.g:1585:3: ( rule__STLiteralExpressions__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_5()); 
                    }
                    // InternalSTCoreParser.g:1586:3: ( rule__STLiteralExpressions__Group_5__0 )
                    // InternalSTCoreParser.g:1586:4: rule__STLiteralExpressions__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTCoreParser.g:1590:2: ( ( rule__STLiteralExpressions__Group_6__0 ) )
                    {
                    // InternalSTCoreParser.g:1590:2: ( ( rule__STLiteralExpressions__Group_6__0 ) )
                    // InternalSTCoreParser.g:1591:3: ( rule__STLiteralExpressions__Group_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_6()); 
                    }
                    // InternalSTCoreParser.g:1592:3: ( rule__STLiteralExpressions__Group_6__0 )
                    // InternalSTCoreParser.g:1592:4: rule__STLiteralExpressions__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Alternatives"


    // $ANTLR start "rule__BOOL_LITERAL__Alternatives_1"
    // InternalSTCoreParser.g:1600:1: rule__BOOL_LITERAL__Alternatives_1 : ( ( TRUE ) | ( FALSE ) );
    public final void rule__BOOL_LITERAL__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1604:1: ( ( TRUE ) | ( FALSE ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==TRUE) ) {
                alt10=1;
            }
            else if ( (LA10_0==FALSE) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalSTCoreParser.g:1605:2: ( TRUE )
                    {
                    // InternalSTCoreParser.g:1605:2: ( TRUE )
                    // InternalSTCoreParser.g:1606:3: TRUE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBOOL_LITERALAccess().getTRUEKeyword_1_0()); 
                    }
                    match(input,TRUE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBOOL_LITERALAccess().getTRUEKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1611:2: ( FALSE )
                    {
                    // InternalSTCoreParser.g:1611:2: ( FALSE )
                    // InternalSTCoreParser.g:1612:3: FALSE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBOOL_LITERALAccess().getFALSEKeyword_1_1()); 
                    }
                    match(input,FALSE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBOOL_LITERALAccess().getFALSEKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Alternatives_1"


    // $ANTLR start "rule__NUMERIC_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1621:1: rule__NUMERIC_LITERAL__KeywordAlternatives_0_0 : ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) | ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) );
    public final void rule__NUMERIC_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1625:1: ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) | ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) )
            int alt11=15;
            switch ( input.LA(1) ) {
            case BOOL:
                {
                alt11=1;
                }
                break;
            case BYTE:
                {
                alt11=2;
                }
                break;
            case WORD:
                {
                alt11=3;
                }
                break;
            case DWORD:
                {
                alt11=4;
                }
                break;
            case LWORD:
                {
                alt11=5;
                }
                break;
            case SINT:
                {
                alt11=6;
                }
                break;
            case INT:
                {
                alt11=7;
                }
                break;
            case DINT:
                {
                alt11=8;
                }
                break;
            case LINT:
                {
                alt11=9;
                }
                break;
            case USINT:
                {
                alt11=10;
                }
                break;
            case UINT:
                {
                alt11=11;
                }
                break;
            case UDINT:
                {
                alt11=12;
                }
                break;
            case ULINT:
                {
                alt11=13;
                }
                break;
            case REAL:
                {
                alt11=14;
                }
                break;
            case LREAL:
                {
                alt11=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalSTCoreParser.g:1626:2: ( BOOL )
                    {
                    // InternalSTCoreParser.g:1626:2: ( BOOL )
                    // InternalSTCoreParser.g:1627:3: BOOL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBOOLKeyword_0_0_0()); 
                    }
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBOOLKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1632:2: ( BYTE )
                    {
                    // InternalSTCoreParser.g:1632:2: ( BYTE )
                    // InternalSTCoreParser.g:1633:3: BYTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBYTEKeyword_0_0_1()); 
                    }
                    match(input,BYTE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBYTEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1638:2: ( WORD )
                    {
                    // InternalSTCoreParser.g:1638:2: ( WORD )
                    // InternalSTCoreParser.g:1639:3: WORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordWORDKeyword_0_0_2()); 
                    }
                    match(input,WORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordWORDKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1644:2: ( DWORD )
                    {
                    // InternalSTCoreParser.g:1644:2: ( DWORD )
                    // InternalSTCoreParser.g:1645:3: DWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDWORDKeyword_0_0_3()); 
                    }
                    match(input,DWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDWORDKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:1650:2: ( LWORD )
                    {
                    // InternalSTCoreParser.g:1650:2: ( LWORD )
                    // InternalSTCoreParser.g:1651:3: LWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLWORDKeyword_0_0_4()); 
                    }
                    match(input,LWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLWORDKeyword_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:1656:2: ( SINT )
                    {
                    // InternalSTCoreParser.g:1656:2: ( SINT )
                    // InternalSTCoreParser.g:1657:3: SINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordSINTKeyword_0_0_5()); 
                    }
                    match(input,SINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordSINTKeyword_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTCoreParser.g:1662:2: ( INT )
                    {
                    // InternalSTCoreParser.g:1662:2: ( INT )
                    // InternalSTCoreParser.g:1663:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordINTKeyword_0_0_6()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordINTKeyword_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTCoreParser.g:1668:2: ( DINT )
                    {
                    // InternalSTCoreParser.g:1668:2: ( DINT )
                    // InternalSTCoreParser.g:1669:3: DINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDINTKeyword_0_0_7()); 
                    }
                    match(input,DINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDINTKeyword_0_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTCoreParser.g:1674:2: ( LINT )
                    {
                    // InternalSTCoreParser.g:1674:2: ( LINT )
                    // InternalSTCoreParser.g:1675:3: LINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLINTKeyword_0_0_8()); 
                    }
                    match(input,LINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLINTKeyword_0_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTCoreParser.g:1680:2: ( USINT )
                    {
                    // InternalSTCoreParser.g:1680:2: ( USINT )
                    // InternalSTCoreParser.g:1681:3: USINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUSINTKeyword_0_0_9()); 
                    }
                    match(input,USINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUSINTKeyword_0_0_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSTCoreParser.g:1686:2: ( UINT )
                    {
                    // InternalSTCoreParser.g:1686:2: ( UINT )
                    // InternalSTCoreParser.g:1687:3: UINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUINTKeyword_0_0_10()); 
                    }
                    match(input,UINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUINTKeyword_0_0_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSTCoreParser.g:1692:2: ( UDINT )
                    {
                    // InternalSTCoreParser.g:1692:2: ( UDINT )
                    // InternalSTCoreParser.g:1693:3: UDINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUDINTKeyword_0_0_11()); 
                    }
                    match(input,UDINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUDINTKeyword_0_0_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSTCoreParser.g:1698:2: ( ULINT )
                    {
                    // InternalSTCoreParser.g:1698:2: ( ULINT )
                    // InternalSTCoreParser.g:1699:3: ULINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordULINTKeyword_0_0_12()); 
                    }
                    match(input,ULINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordULINTKeyword_0_0_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSTCoreParser.g:1704:2: ( REAL )
                    {
                    // InternalSTCoreParser.g:1704:2: ( REAL )
                    // InternalSTCoreParser.g:1705:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordREALKeyword_0_0_13()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordREALKeyword_0_0_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalSTCoreParser.g:1710:2: ( LREAL )
                    {
                    // InternalSTCoreParser.g:1710:2: ( LREAL )
                    // InternalSTCoreParser.g:1711:3: LREAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLREALKeyword_0_0_14()); 
                    }
                    match(input,LREAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLREALKeyword_0_0_14()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__Alternatives_1"
    // InternalSTCoreParser.g:1720:1: rule__NUMERIC_LITERAL__Alternatives_1 : ( ( ( rule__NUMERIC_LITERAL__IntValueAssignment_1_0 ) ) | ( ( rule__NUMERIC_LITERAL__RealValueAssignment_1_1 ) ) | ( ( rule__NUMERIC_LITERAL__HexValueAssignment_1_2 ) ) );
    public final void rule__NUMERIC_LITERAL__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1724:1: ( ( ( rule__NUMERIC_LITERAL__IntValueAssignment_1_0 ) ) | ( ( rule__NUMERIC_LITERAL__RealValueAssignment_1_1 ) ) | ( ( rule__NUMERIC_LITERAL__HexValueAssignment_1_2 ) ) )
            int alt12=3;
            switch ( input.LA(1) ) {
            case PlusSign:
                {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==RULE_INT) ) {
                    int LA12_3 = input.LA(3);

                    if ( (LA12_3==EOF||LA12_3==END_REPEAT||LA12_3==THEN||LA12_3==AND||LA12_3==MOD||(LA12_3>=XOR && LA12_3<=FullStopFullStop)||(LA12_3>=LessThanSignEqualsSign && LA12_3<=GreaterThanSignEqualsSign)||LA12_3==BY||LA12_3==DO||(LA12_3>=OF && LA12_3<=OR)||LA12_3==TO||(LA12_3>=Ampersand && LA12_3<=HyphenMinus)||(LA12_3>=Solidus && LA12_3<=GreaterThanSign)||LA12_3==RightSquareBracket) ) {
                        alt12=1;
                    }
                    else if ( (LA12_3==FullStop) ) {
                        alt12=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 12, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 1, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA12_2 = input.LA(2);

                if ( (LA12_2==RULE_INT) ) {
                    int LA12_3 = input.LA(3);

                    if ( (LA12_3==EOF||LA12_3==END_REPEAT||LA12_3==THEN||LA12_3==AND||LA12_3==MOD||(LA12_3>=XOR && LA12_3<=FullStopFullStop)||(LA12_3>=LessThanSignEqualsSign && LA12_3<=GreaterThanSignEqualsSign)||LA12_3==BY||LA12_3==DO||(LA12_3>=OF && LA12_3<=OR)||LA12_3==TO||(LA12_3>=Ampersand && LA12_3<=HyphenMinus)||(LA12_3>=Solidus && LA12_3<=GreaterThanSign)||LA12_3==RightSquareBracket) ) {
                        alt12=1;
                    }
                    else if ( (LA12_3==FullStop) ) {
                        alt12=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 12, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                int LA12_3 = input.LA(2);

                if ( (LA12_3==EOF||LA12_3==END_REPEAT||LA12_3==THEN||LA12_3==AND||LA12_3==MOD||(LA12_3>=XOR && LA12_3<=FullStopFullStop)||(LA12_3>=LessThanSignEqualsSign && LA12_3<=GreaterThanSignEqualsSign)||LA12_3==BY||LA12_3==DO||(LA12_3>=OF && LA12_3<=OR)||LA12_3==TO||(LA12_3>=Ampersand && LA12_3<=HyphenMinus)||(LA12_3>=Solidus && LA12_3<=GreaterThanSign)||LA12_3==RightSquareBracket) ) {
                    alt12=1;
                }
                else if ( (LA12_3==FullStop) ) {
                    alt12=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NON_DECIMAL:
                {
                alt12=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalSTCoreParser.g:1725:2: ( ( rule__NUMERIC_LITERAL__IntValueAssignment_1_0 ) )
                    {
                    // InternalSTCoreParser.g:1725:2: ( ( rule__NUMERIC_LITERAL__IntValueAssignment_1_0 ) )
                    // InternalSTCoreParser.g:1726:3: ( rule__NUMERIC_LITERAL__IntValueAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getIntValueAssignment_1_0()); 
                    }
                    // InternalSTCoreParser.g:1727:3: ( rule__NUMERIC_LITERAL__IntValueAssignment_1_0 )
                    // InternalSTCoreParser.g:1727:4: rule__NUMERIC_LITERAL__IntValueAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__IntValueAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getIntValueAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1731:2: ( ( rule__NUMERIC_LITERAL__RealValueAssignment_1_1 ) )
                    {
                    // InternalSTCoreParser.g:1731:2: ( ( rule__NUMERIC_LITERAL__RealValueAssignment_1_1 ) )
                    // InternalSTCoreParser.g:1732:3: ( rule__NUMERIC_LITERAL__RealValueAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getRealValueAssignment_1_1()); 
                    }
                    // InternalSTCoreParser.g:1733:3: ( rule__NUMERIC_LITERAL__RealValueAssignment_1_1 )
                    // InternalSTCoreParser.g:1733:4: rule__NUMERIC_LITERAL__RealValueAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__RealValueAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getRealValueAssignment_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1737:2: ( ( rule__NUMERIC_LITERAL__HexValueAssignment_1_2 ) )
                    {
                    // InternalSTCoreParser.g:1737:2: ( ( rule__NUMERIC_LITERAL__HexValueAssignment_1_2 ) )
                    // InternalSTCoreParser.g:1738:3: ( rule__NUMERIC_LITERAL__HexValueAssignment_1_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getHexValueAssignment_1_2()); 
                    }
                    // InternalSTCoreParser.g:1739:3: ( rule__NUMERIC_LITERAL__HexValueAssignment_1_2 )
                    // InternalSTCoreParser.g:1739:4: rule__NUMERIC_LITERAL__HexValueAssignment_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__HexValueAssignment_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getHexValueAssignment_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Alternatives_1"


    // $ANTLR start "rule__DATE_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1747:1: rule__DATE_LITERAL__KeywordAlternatives_0_0 : ( ( DATE ) | ( LDATE ) | ( D ) | ( LD ) );
    public final void rule__DATE_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1751:1: ( ( DATE ) | ( LDATE ) | ( D ) | ( LD ) )
            int alt13=4;
            switch ( input.LA(1) ) {
            case DATE:
                {
                alt13=1;
                }
                break;
            case LDATE:
                {
                alt13=2;
                }
                break;
            case D:
                {
                alt13=3;
                }
                break;
            case LD:
                {
                alt13=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSTCoreParser.g:1752:2: ( DATE )
                    {
                    // InternalSTCoreParser.g:1752:2: ( DATE )
                    // InternalSTCoreParser.g:1753:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordDATEKeyword_0_0_0()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordDATEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1758:2: ( LDATE )
                    {
                    // InternalSTCoreParser.g:1758:2: ( LDATE )
                    // InternalSTCoreParser.g:1759:3: LDATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordLDATEKeyword_0_0_1()); 
                    }
                    match(input,LDATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordLDATEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1764:2: ( D )
                    {
                    // InternalSTCoreParser.g:1764:2: ( D )
                    // InternalSTCoreParser.g:1765:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordDKeyword_0_0_2()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordDKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1770:2: ( LD )
                    {
                    // InternalSTCoreParser.g:1770:2: ( LD )
                    // InternalSTCoreParser.g:1771:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordLDKeyword_0_0_3()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordLDKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__TIME_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1780:1: rule__TIME_LITERAL__KeywordAlternatives_0_0 : ( ( TIME ) | ( LTIME ) | ( T ) | ( LT ) );
    public final void rule__TIME_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1784:1: ( ( TIME ) | ( LTIME ) | ( T ) | ( LT ) )
            int alt14=4;
            switch ( input.LA(1) ) {
            case TIME:
                {
                alt14=1;
                }
                break;
            case LTIME:
                {
                alt14=2;
                }
                break;
            case T:
                {
                alt14=3;
                }
                break;
            case LT:
                {
                alt14=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalSTCoreParser.g:1785:2: ( TIME )
                    {
                    // InternalSTCoreParser.g:1785:2: ( TIME )
                    // InternalSTCoreParser.g:1786:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordTIMEKeyword_0_0_0()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordTIMEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1791:2: ( LTIME )
                    {
                    // InternalSTCoreParser.g:1791:2: ( LTIME )
                    // InternalSTCoreParser.g:1792:3: LTIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordLTIMEKeyword_0_0_1()); 
                    }
                    match(input,LTIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordLTIMEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1797:2: ( T )
                    {
                    // InternalSTCoreParser.g:1797:2: ( T )
                    // InternalSTCoreParser.g:1798:3: T
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordTKeyword_0_0_2()); 
                    }
                    match(input,T,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordTKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1803:2: ( LT )
                    {
                    // InternalSTCoreParser.g:1803:2: ( LT )
                    // InternalSTCoreParser.g:1804:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordLTKeyword_0_0_3()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordLTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1813:1: rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 : ( ( TIME_OF_DAY ) | ( TOD ) | ( LTOD ) );
    public final void rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1817:1: ( ( TIME_OF_DAY ) | ( TOD ) | ( LTOD ) )
            int alt15=3;
            switch ( input.LA(1) ) {
            case TIME_OF_DAY:
                {
                alt15=1;
                }
                break;
            case TOD:
                {
                alt15=2;
                }
                break;
            case LTOD:
                {
                alt15=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalSTCoreParser.g:1818:2: ( TIME_OF_DAY )
                    {
                    // InternalSTCoreParser.g:1818:2: ( TIME_OF_DAY )
                    // InternalSTCoreParser.g:1819:3: TIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTIME_OF_DAYKeyword_0_0_0()); 
                    }
                    match(input,TIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTIME_OF_DAYKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1824:2: ( TOD )
                    {
                    // InternalSTCoreParser.g:1824:2: ( TOD )
                    // InternalSTCoreParser.g:1825:3: TOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTODKeyword_0_0_1()); 
                    }
                    match(input,TOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTODKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1830:2: ( LTOD )
                    {
                    // InternalSTCoreParser.g:1830:2: ( LTOD )
                    // InternalSTCoreParser.g:1831:3: LTOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordLTODKeyword_0_0_2()); 
                    }
                    match(input,LTOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordLTODKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0"
    // InternalSTCoreParser.g:1840:1: rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 : ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) );
    public final void rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1844:1: ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) )
            int alt16=4;
            switch ( input.LA(1) ) {
            case DATE_AND_TIME:
                {
                alt16=1;
                }
                break;
            case LDATE_AND_TIME:
                {
                alt16=2;
                }
                break;
            case DT:
                {
                alt16=3;
                }
                break;
            case LDT:
                {
                alt16=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalSTCoreParser.g:1845:2: ( DATE_AND_TIME )
                    {
                    // InternalSTCoreParser.g:1845:2: ( DATE_AND_TIME )
                    // InternalSTCoreParser.g:1846:3: DATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDATE_AND_TIMEKeyword_0_0_0()); 
                    }
                    match(input,DATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDATE_AND_TIMEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1851:2: ( LDATE_AND_TIME )
                    {
                    // InternalSTCoreParser.g:1851:2: ( LDATE_AND_TIME )
                    // InternalSTCoreParser.g:1852:3: LDATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDATE_AND_TIMEKeyword_0_0_1()); 
                    }
                    match(input,LDATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDATE_AND_TIMEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1857:2: ( DT )
                    {
                    // InternalSTCoreParser.g:1857:2: ( DT )
                    // InternalSTCoreParser.g:1858:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDTKeyword_0_0_2()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDTKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1863:2: ( LDT )
                    {
                    // InternalSTCoreParser.g:1863:2: ( LDT )
                    // InternalSTCoreParser.g:1864:3: LDT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDTKeyword_0_0_3()); 
                    }
                    match(input,LDT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__STRING_LITERAL__Alternatives_0"
    // InternalSTCoreParser.g:1873:1: rule__STRING_LITERAL__Alternatives_0 : ( ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) );
    public final void rule__STRING_LITERAL__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1877:1: ( ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) )
            int alt17=4;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt17=1;
                }
                break;
            case WSTRING:
                {
                alt17=2;
                }
                break;
            case CHAR:
                {
                alt17=3;
                }
                break;
            case WCHAR:
                {
                alt17=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalSTCoreParser.g:1878:2: ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) )
                    {
                    // InternalSTCoreParser.g:1878:2: ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) )
                    // InternalSTCoreParser.g:1879:3: ( rule__STRING_LITERAL__KeywordAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getKeywordAssignment_0_0()); 
                    }
                    // InternalSTCoreParser.g:1880:3: ( rule__STRING_LITERAL__KeywordAssignment_0_0 )
                    // InternalSTCoreParser.g:1880:4: rule__STRING_LITERAL__KeywordAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STRING_LITERAL__KeywordAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getKeywordAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1884:2: ( WSTRING )
                    {
                    // InternalSTCoreParser.g:1884:2: ( WSTRING )
                    // InternalSTCoreParser.g:1885:3: WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getWSTRINGKeyword_0_1()); 
                    }
                    match(input,WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getWSTRINGKeyword_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:1890:2: ( CHAR )
                    {
                    // InternalSTCoreParser.g:1890:2: ( CHAR )
                    // InternalSTCoreParser.g:1891:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getCHARKeyword_0_2()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getCHARKeyword_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:1896:2: ( WCHAR )
                    {
                    // InternalSTCoreParser.g:1896:2: ( WCHAR )
                    // InternalSTCoreParser.g:1897:3: WCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getWCHARKeyword_0_3()); 
                    }
                    match(input,WCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getWCHARKeyword_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Alternatives_0"


    // $ANTLR start "rule__INTEGER__Alternatives_0"
    // InternalSTCoreParser.g:1906:1: rule__INTEGER__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__INTEGER__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1910:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==PlusSign) ) {
                alt18=1;
            }
            else if ( (LA18_0==HyphenMinus) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSTCoreParser.g:1911:2: ( PlusSign )
                    {
                    // InternalSTCoreParser.g:1911:2: ( PlusSign )
                    // InternalSTCoreParser.g:1912:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getINTEGERAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getINTEGERAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1917:2: ( HyphenMinus )
                    {
                    // InternalSTCoreParser.g:1917:2: ( HyphenMinus )
                    // InternalSTCoreParser.g:1918:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getINTEGERAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getINTEGERAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Alternatives_0"


    // $ANTLR start "rule__REAL__Alternatives_2"
    // InternalSTCoreParser.g:1927:1: rule__REAL__Alternatives_2 : ( ( RULE_EXT_INT ) | ( RULE_INT ) );
    public final void rule__REAL__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1931:1: ( ( RULE_EXT_INT ) | ( RULE_INT ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_EXT_INT) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_INT) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalSTCoreParser.g:1932:2: ( RULE_EXT_INT )
                    {
                    // InternalSTCoreParser.g:1932:2: ( RULE_EXT_INT )
                    // InternalSTCoreParser.g:1933:3: RULE_EXT_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_EXT_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1938:2: ( RULE_INT )
                    {
                    // InternalSTCoreParser.g:1938:2: ( RULE_INT )
                    // InternalSTCoreParser.g:1939:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Alternatives_2"


    // $ANTLR start "rule__AndOperator__Alternatives"
    // InternalSTCoreParser.g:1948:1: rule__AndOperator__Alternatives : ( ( ( AND ) ) | ( ( Ampersand ) ) );
    public final void rule__AndOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1952:1: ( ( ( AND ) ) | ( ( Ampersand ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==AND) ) {
                alt20=1;
            }
            else if ( (LA20_0==Ampersand) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalSTCoreParser.g:1953:2: ( ( AND ) )
                    {
                    // InternalSTCoreParser.g:1953:2: ( ( AND ) )
                    // InternalSTCoreParser.g:1954:3: ( AND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:1955:3: ( AND )
                    // InternalSTCoreParser.g:1955:4: AND
                    {
                    match(input,AND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1959:2: ( ( Ampersand ) )
                    {
                    // InternalSTCoreParser.g:1959:2: ( ( Ampersand ) )
                    // InternalSTCoreParser.g:1960:3: ( Ampersand )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:1961:3: ( Ampersand )
                    // InternalSTCoreParser.g:1961:4: Ampersand
                    {
                    match(input,Ampersand,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndOperator__Alternatives"


    // $ANTLR start "rule__EqualityOperator__Alternatives"
    // InternalSTCoreParser.g:1969:1: rule__EqualityOperator__Alternatives : ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) );
    public final void rule__EqualityOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1973:1: ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==EqualsSign) ) {
                alt21=1;
            }
            else if ( (LA21_0==LessThanSignGreaterThanSign) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalSTCoreParser.g:1974:2: ( ( EqualsSign ) )
                    {
                    // InternalSTCoreParser.g:1974:2: ( ( EqualsSign ) )
                    // InternalSTCoreParser.g:1975:3: ( EqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:1976:3: ( EqualsSign )
                    // InternalSTCoreParser.g:1976:4: EqualsSign
                    {
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:1980:2: ( ( LessThanSignGreaterThanSign ) )
                    {
                    // InternalSTCoreParser.g:1980:2: ( ( LessThanSignGreaterThanSign ) )
                    // InternalSTCoreParser.g:1981:3: ( LessThanSignGreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:1982:3: ( LessThanSignGreaterThanSign )
                    // InternalSTCoreParser.g:1982:4: LessThanSignGreaterThanSign
                    {
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityOperator__Alternatives"


    // $ANTLR start "rule__CompareOperator__Alternatives"
    // InternalSTCoreParser.g:1990:1: rule__CompareOperator__Alternatives : ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) );
    public final void rule__CompareOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:1994:1: ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) )
            int alt22=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt22=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt22=2;
                }
                break;
            case GreaterThanSign:
                {
                alt22=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt22=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSTCoreParser.g:1995:2: ( ( LessThanSign ) )
                    {
                    // InternalSTCoreParser.g:1995:2: ( ( LessThanSign ) )
                    // InternalSTCoreParser.g:1996:3: ( LessThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:1997:3: ( LessThanSign )
                    // InternalSTCoreParser.g:1997:4: LessThanSign
                    {
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2001:2: ( ( LessThanSignEqualsSign ) )
                    {
                    // InternalSTCoreParser.g:2001:2: ( ( LessThanSignEqualsSign ) )
                    // InternalSTCoreParser.g:2002:3: ( LessThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2003:3: ( LessThanSignEqualsSign )
                    // InternalSTCoreParser.g:2003:4: LessThanSignEqualsSign
                    {
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:2007:2: ( ( GreaterThanSign ) )
                    {
                    // InternalSTCoreParser.g:2007:2: ( ( GreaterThanSign ) )
                    // InternalSTCoreParser.g:2008:3: ( GreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:2009:3: ( GreaterThanSign )
                    // InternalSTCoreParser.g:2009:4: GreaterThanSign
                    {
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:2013:2: ( ( GreaterThanSignEqualsSign ) )
                    {
                    // InternalSTCoreParser.g:2013:2: ( ( GreaterThanSignEqualsSign ) )
                    // InternalSTCoreParser.g:2014:3: ( GreaterThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTCoreParser.g:2015:3: ( GreaterThanSignEqualsSign )
                    // InternalSTCoreParser.g:2015:4: GreaterThanSignEqualsSign
                    {
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperator__Alternatives"


    // $ANTLR start "rule__AddSubOperator__Alternatives"
    // InternalSTCoreParser.g:2023:1: rule__AddSubOperator__Alternatives : ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) );
    public final void rule__AddSubOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2027:1: ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==PlusSign) ) {
                alt23=1;
            }
            else if ( (LA23_0==HyphenMinus) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalSTCoreParser.g:2028:2: ( ( PlusSign ) )
                    {
                    // InternalSTCoreParser.g:2028:2: ( ( PlusSign ) )
                    // InternalSTCoreParser.g:2029:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2030:3: ( PlusSign )
                    // InternalSTCoreParser.g:2030:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2034:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTCoreParser.g:2034:2: ( ( HyphenMinus ) )
                    // InternalSTCoreParser.g:2035:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2036:3: ( HyphenMinus )
                    // InternalSTCoreParser.g:2036:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddSubOperator__Alternatives"


    // $ANTLR start "rule__MulDivModOperator__Alternatives"
    // InternalSTCoreParser.g:2044:1: rule__MulDivModOperator__Alternatives : ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) );
    public final void rule__MulDivModOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2048:1: ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt24=1;
                }
                break;
            case Solidus:
                {
                alt24=2;
                }
                break;
            case MOD:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSTCoreParser.g:2049:2: ( ( Asterisk ) )
                    {
                    // InternalSTCoreParser.g:2049:2: ( ( Asterisk ) )
                    // InternalSTCoreParser.g:2050:3: ( Asterisk )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2051:3: ( Asterisk )
                    // InternalSTCoreParser.g:2051:4: Asterisk
                    {
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2055:2: ( ( Solidus ) )
                    {
                    // InternalSTCoreParser.g:2055:2: ( ( Solidus ) )
                    // InternalSTCoreParser.g:2056:3: ( Solidus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2057:3: ( Solidus )
                    // InternalSTCoreParser.g:2057:4: Solidus
                    {
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:2061:2: ( ( MOD ) )
                    {
                    // InternalSTCoreParser.g:2061:2: ( ( MOD ) )
                    // InternalSTCoreParser.g:2062:3: ( MOD )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:2063:3: ( MOD )
                    // InternalSTCoreParser.g:2063:4: MOD
                    {
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulDivModOperator__Alternatives"


    // $ANTLR start "rule__UnaryOperator__Alternatives"
    // InternalSTCoreParser.g:2071:1: rule__UnaryOperator__Alternatives : ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) );
    public final void rule__UnaryOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2075:1: ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) )
            int alt25=3;
            switch ( input.LA(1) ) {
            case HyphenMinus:
                {
                alt25=1;
                }
                break;
            case PlusSign:
                {
                alt25=2;
                }
                break;
            case NOT:
                {
                alt25=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalSTCoreParser.g:2076:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTCoreParser.g:2076:2: ( ( HyphenMinus ) )
                    // InternalSTCoreParser.g:2077:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2078:3: ( HyphenMinus )
                    // InternalSTCoreParser.g:2078:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2082:2: ( ( PlusSign ) )
                    {
                    // InternalSTCoreParser.g:2082:2: ( ( PlusSign ) )
                    // InternalSTCoreParser.g:2083:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2084:3: ( PlusSign )
                    // InternalSTCoreParser.g:2084:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:2088:2: ( ( NOT ) )
                    {
                    // InternalSTCoreParser.g:2088:2: ( ( NOT ) )
                    // InternalSTCoreParser.g:2089:3: ( NOT )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:2090:3: ( NOT )
                    // InternalSTCoreParser.g:2090:4: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOperator__Alternatives"


    // $ANTLR start "rule__MultiBitAccessSpecifier__Alternatives"
    // InternalSTCoreParser.g:2098:1: rule__MultiBitAccessSpecifier__Alternatives : ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) | ( ( FullStop ) ) );
    public final void rule__MultiBitAccessSpecifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2102:1: ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) | ( ( FullStop ) ) )
            int alt26=6;
            switch ( input.LA(1) ) {
            case L:
                {
                alt26=1;
                }
                break;
            case D_1:
                {
                alt26=2;
                }
                break;
            case W:
                {
                alt26=3;
                }
                break;
            case B:
                {
                alt26=4;
                }
                break;
            case X:
                {
                alt26=5;
                }
                break;
            case FullStop:
                {
                alt26=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalSTCoreParser.g:2103:2: ( ( L ) )
                    {
                    // InternalSTCoreParser.g:2103:2: ( ( L ) )
                    // InternalSTCoreParser.g:2104:3: ( L )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getLwordAccessEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTCoreParser.g:2105:3: ( L )
                    // InternalSTCoreParser.g:2105:4: L
                    {
                    match(input,L,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getLwordAccessEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTCoreParser.g:2109:2: ( ( D_1 ) )
                    {
                    // InternalSTCoreParser.g:2109:2: ( ( D_1 ) )
                    // InternalSTCoreParser.g:2110:3: ( D_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getDwordAccessEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTCoreParser.g:2111:3: ( D_1 )
                    // InternalSTCoreParser.g:2111:4: D_1
                    {
                    match(input,D_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getDwordAccessEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTCoreParser.g:2115:2: ( ( W ) )
                    {
                    // InternalSTCoreParser.g:2115:2: ( ( W ) )
                    // InternalSTCoreParser.g:2116:3: ( W )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getWordAccessEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTCoreParser.g:2117:3: ( W )
                    // InternalSTCoreParser.g:2117:4: W
                    {
                    match(input,W,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getWordAccessEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTCoreParser.g:2121:2: ( ( B ) )
                    {
                    // InternalSTCoreParser.g:2121:2: ( ( B ) )
                    // InternalSTCoreParser.g:2122:3: ( B )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getByteAccessEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTCoreParser.g:2123:3: ( B )
                    // InternalSTCoreParser.g:2123:4: B
                    {
                    match(input,B,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getByteAccessEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTCoreParser.g:2127:2: ( ( X ) )
                    {
                    // InternalSTCoreParser.g:2127:2: ( ( X ) )
                    // InternalSTCoreParser.g:2128:3: ( X )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessEnumLiteralDeclaration_4()); 
                    }
                    // InternalSTCoreParser.g:2129:3: ( X )
                    // InternalSTCoreParser.g:2129:4: X
                    {
                    match(input,X,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTCoreParser.g:2133:2: ( ( FullStop ) )
                    {
                    // InternalSTCoreParser.g:2133:2: ( ( FullStop ) )
                    // InternalSTCoreParser.g:2134:3: ( FullStop )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessShortcutEnumLiteralDeclaration_5()); 
                    }
                    // InternalSTCoreParser.g:2135:3: ( FullStop )
                    // InternalSTCoreParser.g:2135:4: FullStop
                    {
                    match(input,FullStop,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessShortcutEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiBitAccessSpecifier__Alternatives"


    // $ANTLR start "rule__VarDeclaration__Group__0"
    // InternalSTCoreParser.g:2143:1: rule__VarDeclaration__Group__0 : rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 ;
    public final void rule__VarDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2147:1: ( rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 )
            // InternalSTCoreParser.g:2148:2: rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__VarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0"


    // $ANTLR start "rule__VarDeclaration__Group__0__Impl"
    // InternalSTCoreParser.g:2155:1: rule__VarDeclaration__Group__0__Impl : ( ( rule__VarDeclaration__NameAssignment_0 ) ) ;
    public final void rule__VarDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2159:1: ( ( ( rule__VarDeclaration__NameAssignment_0 ) ) )
            // InternalSTCoreParser.g:2160:1: ( ( rule__VarDeclaration__NameAssignment_0 ) )
            {
            // InternalSTCoreParser.g:2160:1: ( ( rule__VarDeclaration__NameAssignment_0 ) )
            // InternalSTCoreParser.g:2161:2: ( rule__VarDeclaration__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameAssignment_0()); 
            }
            // InternalSTCoreParser.g:2162:2: ( rule__VarDeclaration__NameAssignment_0 )
            // InternalSTCoreParser.g:2162:3: rule__VarDeclaration__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__1"
    // InternalSTCoreParser.g:2170:1: rule__VarDeclaration__Group__1 : rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 ;
    public final void rule__VarDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2174:1: ( rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 )
            // InternalSTCoreParser.g:2175:2: rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__VarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1"


    // $ANTLR start "rule__VarDeclaration__Group__1__Impl"
    // InternalSTCoreParser.g:2182:1: rule__VarDeclaration__Group__1__Impl : ( ( rule__VarDeclaration__Group_1__0 )? ) ;
    public final void rule__VarDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2186:1: ( ( ( rule__VarDeclaration__Group_1__0 )? ) )
            // InternalSTCoreParser.g:2187:1: ( ( rule__VarDeclaration__Group_1__0 )? )
            {
            // InternalSTCoreParser.g:2187:1: ( ( rule__VarDeclaration__Group_1__0 )? )
            // InternalSTCoreParser.g:2188:2: ( rule__VarDeclaration__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:2189:2: ( rule__VarDeclaration__Group_1__0 )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==AT) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalSTCoreParser.g:2189:3: rule__VarDeclaration__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__2"
    // InternalSTCoreParser.g:2197:1: rule__VarDeclaration__Group__2 : rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 ;
    public final void rule__VarDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2201:1: ( rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 )
            // InternalSTCoreParser.g:2202:2: rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__VarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2"


    // $ANTLR start "rule__VarDeclaration__Group__2__Impl"
    // InternalSTCoreParser.g:2209:1: rule__VarDeclaration__Group__2__Impl : ( Colon ) ;
    public final void rule__VarDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2213:1: ( ( Colon ) )
            // InternalSTCoreParser.g:2214:1: ( Colon )
            {
            // InternalSTCoreParser.g:2214:1: ( Colon )
            // InternalSTCoreParser.g:2215:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__3"
    // InternalSTCoreParser.g:2224:1: rule__VarDeclaration__Group__3 : rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 ;
    public final void rule__VarDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2228:1: ( rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 )
            // InternalSTCoreParser.g:2229:2: rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__VarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3"


    // $ANTLR start "rule__VarDeclaration__Group__3__Impl"
    // InternalSTCoreParser.g:2236:1: rule__VarDeclaration__Group__3__Impl : ( ( rule__VarDeclaration__Group_3__0 )? ) ;
    public final void rule__VarDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2240:1: ( ( ( rule__VarDeclaration__Group_3__0 )? ) )
            // InternalSTCoreParser.g:2241:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            {
            // InternalSTCoreParser.g:2241:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            // InternalSTCoreParser.g:2242:2: ( rule__VarDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }
            // InternalSTCoreParser.g:2243:2: ( rule__VarDeclaration__Group_3__0 )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==ARRAY) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalSTCoreParser.g:2243:3: rule__VarDeclaration__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__4"
    // InternalSTCoreParser.g:2251:1: rule__VarDeclaration__Group__4 : rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 ;
    public final void rule__VarDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2255:1: ( rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 )
            // InternalSTCoreParser.g:2256:2: rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4"


    // $ANTLR start "rule__VarDeclaration__Group__4__Impl"
    // InternalSTCoreParser.g:2263:1: rule__VarDeclaration__Group__4__Impl : ( ( rule__VarDeclaration__TypeAssignment_4 ) ) ;
    public final void rule__VarDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2267:1: ( ( ( rule__VarDeclaration__TypeAssignment_4 ) ) )
            // InternalSTCoreParser.g:2268:1: ( ( rule__VarDeclaration__TypeAssignment_4 ) )
            {
            // InternalSTCoreParser.g:2268:1: ( ( rule__VarDeclaration__TypeAssignment_4 ) )
            // InternalSTCoreParser.g:2269:2: ( rule__VarDeclaration__TypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_4()); 
            }
            // InternalSTCoreParser.g:2270:2: ( rule__VarDeclaration__TypeAssignment_4 )
            // InternalSTCoreParser.g:2270:3: rule__VarDeclaration__TypeAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__TypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__5"
    // InternalSTCoreParser.g:2278:1: rule__VarDeclaration__Group__5 : rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 ;
    public final void rule__VarDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2282:1: ( rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 )
            // InternalSTCoreParser.g:2283:2: rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5"


    // $ANTLR start "rule__VarDeclaration__Group__5__Impl"
    // InternalSTCoreParser.g:2290:1: rule__VarDeclaration__Group__5__Impl : ( ( rule__VarDeclaration__Group_5__0 )? ) ;
    public final void rule__VarDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2294:1: ( ( ( rule__VarDeclaration__Group_5__0 )? ) )
            // InternalSTCoreParser.g:2295:1: ( ( rule__VarDeclaration__Group_5__0 )? )
            {
            // InternalSTCoreParser.g:2295:1: ( ( rule__VarDeclaration__Group_5__0 )? )
            // InternalSTCoreParser.g:2296:2: ( rule__VarDeclaration__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_5()); 
            }
            // InternalSTCoreParser.g:2297:2: ( rule__VarDeclaration__Group_5__0 )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==LeftSquareBracket) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalSTCoreParser.g:2297:3: rule__VarDeclaration__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__6"
    // InternalSTCoreParser.g:2305:1: rule__VarDeclaration__Group__6 : rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 ;
    public final void rule__VarDeclaration__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2309:1: ( rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 )
            // InternalSTCoreParser.g:2310:2: rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6"


    // $ANTLR start "rule__VarDeclaration__Group__6__Impl"
    // InternalSTCoreParser.g:2317:1: rule__VarDeclaration__Group__6__Impl : ( ( rule__VarDeclaration__Group_6__0 )? ) ;
    public final void rule__VarDeclaration__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2321:1: ( ( ( rule__VarDeclaration__Group_6__0 )? ) )
            // InternalSTCoreParser.g:2322:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            {
            // InternalSTCoreParser.g:2322:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            // InternalSTCoreParser.g:2323:2: ( rule__VarDeclaration__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }
            // InternalSTCoreParser.g:2324:2: ( rule__VarDeclaration__Group_6__0 )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==ColonEqualsSign) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalSTCoreParser.g:2324:3: rule__VarDeclaration__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__7"
    // InternalSTCoreParser.g:2332:1: rule__VarDeclaration__Group__7 : rule__VarDeclaration__Group__7__Impl ;
    public final void rule__VarDeclaration__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2336:1: ( rule__VarDeclaration__Group__7__Impl )
            // InternalSTCoreParser.g:2337:2: rule__VarDeclaration__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7"


    // $ANTLR start "rule__VarDeclaration__Group__7__Impl"
    // InternalSTCoreParser.g:2343:1: rule__VarDeclaration__Group__7__Impl : ( Semicolon ) ;
    public final void rule__VarDeclaration__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2347:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:2348:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:2348:1: ( Semicolon )
            // InternalSTCoreParser.g:2349:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_7()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_1__0"
    // InternalSTCoreParser.g:2359:1: rule__VarDeclaration__Group_1__0 : rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1 ;
    public final void rule__VarDeclaration__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2363:1: ( rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1 )
            // InternalSTCoreParser.g:2364:2: rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__VarDeclaration__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__0"


    // $ANTLR start "rule__VarDeclaration__Group_1__0__Impl"
    // InternalSTCoreParser.g:2371:1: rule__VarDeclaration__Group_1__0__Impl : ( AT ) ;
    public final void rule__VarDeclaration__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2375:1: ( ( AT ) )
            // InternalSTCoreParser.g:2376:1: ( AT )
            {
            // InternalSTCoreParser.g:2376:1: ( AT )
            // InternalSTCoreParser.g:2377:2: AT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getATKeyword_1_0()); 
            }
            match(input,AT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getATKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_1__1"
    // InternalSTCoreParser.g:2386:1: rule__VarDeclaration__Group_1__1 : rule__VarDeclaration__Group_1__1__Impl ;
    public final void rule__VarDeclaration__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2390:1: ( rule__VarDeclaration__Group_1__1__Impl )
            // InternalSTCoreParser.g:2391:2: rule__VarDeclaration__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__1"


    // $ANTLR start "rule__VarDeclaration__Group_1__1__Impl"
    // InternalSTCoreParser.g:2397:1: rule__VarDeclaration__Group_1__1__Impl : ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) ) ;
    public final void rule__VarDeclaration__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2401:1: ( ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:2402:1: ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:2402:1: ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) )
            // InternalSTCoreParser.g:2403:2: ( rule__VarDeclaration__LocatedAtAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:2404:2: ( rule__VarDeclaration__LocatedAtAssignment_1_1 )
            // InternalSTCoreParser.g:2404:3: rule__VarDeclaration__LocatedAtAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__LocatedAtAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__0"
    // InternalSTCoreParser.g:2413:1: rule__VarDeclaration__Group_3__0 : rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 ;
    public final void rule__VarDeclaration__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2417:1: ( rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 )
            // InternalSTCoreParser.g:2418:2: rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1
            {
            pushFollow(FOLLOW_8);
            rule__VarDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0"


    // $ANTLR start "rule__VarDeclaration__Group_3__0__Impl"
    // InternalSTCoreParser.g:2425:1: rule__VarDeclaration__Group_3__0__Impl : ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) ) ;
    public final void rule__VarDeclaration__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2429:1: ( ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) ) )
            // InternalSTCoreParser.g:2430:1: ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) )
            {
            // InternalSTCoreParser.g:2430:1: ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) )
            // InternalSTCoreParser.g:2431:2: ( rule__VarDeclaration__ArrayAssignment_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayAssignment_3_0()); 
            }
            // InternalSTCoreParser.g:2432:2: ( rule__VarDeclaration__ArrayAssignment_3_0 )
            // InternalSTCoreParser.g:2432:3: rule__VarDeclaration__ArrayAssignment_3_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__ArrayAssignment_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayAssignment_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__1"
    // InternalSTCoreParser.g:2440:1: rule__VarDeclaration__Group_3__1 : rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2 ;
    public final void rule__VarDeclaration__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2444:1: ( rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2 )
            // InternalSTCoreParser.g:2445:2: rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2
            {
            pushFollow(FOLLOW_9);
            rule__VarDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1"


    // $ANTLR start "rule__VarDeclaration__Group_3__1__Impl"
    // InternalSTCoreParser.g:2452:1: rule__VarDeclaration__Group_3__1__Impl : ( ( rule__VarDeclaration__Alternatives_3_1 ) ) ;
    public final void rule__VarDeclaration__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2456:1: ( ( ( rule__VarDeclaration__Alternatives_3_1 ) ) )
            // InternalSTCoreParser.g:2457:1: ( ( rule__VarDeclaration__Alternatives_3_1 ) )
            {
            // InternalSTCoreParser.g:2457:1: ( ( rule__VarDeclaration__Alternatives_3_1 ) )
            // InternalSTCoreParser.g:2458:2: ( rule__VarDeclaration__Alternatives_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getAlternatives_3_1()); 
            }
            // InternalSTCoreParser.g:2459:2: ( rule__VarDeclaration__Alternatives_3_1 )
            // InternalSTCoreParser.g:2459:3: rule__VarDeclaration__Alternatives_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Alternatives_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getAlternatives_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__2"
    // InternalSTCoreParser.g:2467:1: rule__VarDeclaration__Group_3__2 : rule__VarDeclaration__Group_3__2__Impl ;
    public final void rule__VarDeclaration__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2471:1: ( rule__VarDeclaration__Group_3__2__Impl )
            // InternalSTCoreParser.g:2472:2: rule__VarDeclaration__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__2"


    // $ANTLR start "rule__VarDeclaration__Group_3__2__Impl"
    // InternalSTCoreParser.g:2478:1: rule__VarDeclaration__Group_3__2__Impl : ( OF ) ;
    public final void rule__VarDeclaration__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2482:1: ( ( OF ) )
            // InternalSTCoreParser.g:2483:1: ( OF )
            {
            // InternalSTCoreParser.g:2483:1: ( OF )
            // InternalSTCoreParser.g:2484:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getOFKeyword_3_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getOFKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__0"
    // InternalSTCoreParser.g:2494:1: rule__VarDeclaration__Group_3_1_0__0 : rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1 ;
    public final void rule__VarDeclaration__Group_3_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2498:1: ( rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1 )
            // InternalSTCoreParser.g:2499:2: rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclaration__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__0__Impl"
    // InternalSTCoreParser.g:2506:1: rule__VarDeclaration__Group_3_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2510:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2511:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2511:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2512:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__1"
    // InternalSTCoreParser.g:2521:1: rule__VarDeclaration__Group_3_1_0__1 : rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2 ;
    public final void rule__VarDeclaration__Group_3_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2525:1: ( rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2 )
            // InternalSTCoreParser.g:2526:2: rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__1__Impl"
    // InternalSTCoreParser.g:2533:1: rule__VarDeclaration__Group_3_1_0__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2537:1: ( ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) ) )
            // InternalSTCoreParser.g:2538:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) )
            {
            // InternalSTCoreParser.g:2538:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) )
            // InternalSTCoreParser.g:2539:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_1()); 
            }
            // InternalSTCoreParser.g:2540:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_1 )
            // InternalSTCoreParser.g:2540:3: rule__VarDeclaration__RangesAssignment_3_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_3_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__2"
    // InternalSTCoreParser.g:2548:1: rule__VarDeclaration__Group_3_1_0__2 : rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3 ;
    public final void rule__VarDeclaration__Group_3_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2552:1: ( rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3 )
            // InternalSTCoreParser.g:2553:2: rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__2"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__2__Impl"
    // InternalSTCoreParser.g:2560:1: rule__VarDeclaration__Group_3_1_0__2__Impl : ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_3_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2564:1: ( ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* ) )
            // InternalSTCoreParser.g:2565:1: ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* )
            {
            // InternalSTCoreParser.g:2565:1: ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* )
            // InternalSTCoreParser.g:2566:2: ( rule__VarDeclaration__Group_3_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0_2()); 
            }
            // InternalSTCoreParser.g:2567:2: ( rule__VarDeclaration__Group_3_1_0_2__0 )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==Comma) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalSTCoreParser.g:2567:3: rule__VarDeclaration__Group_3_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__VarDeclaration__Group_3_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__3"
    // InternalSTCoreParser.g:2575:1: rule__VarDeclaration__Group_3_1_0__3 : rule__VarDeclaration__Group_3_1_0__3__Impl ;
    public final void rule__VarDeclaration__Group_3_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2579:1: ( rule__VarDeclaration__Group_3_1_0__3__Impl )
            // InternalSTCoreParser.g:2580:2: rule__VarDeclaration__Group_3_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__3"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__3__Impl"
    // InternalSTCoreParser.g:2586:1: rule__VarDeclaration__Group_3_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2590:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2591:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2591:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2592:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__0"
    // InternalSTCoreParser.g:2602:1: rule__VarDeclaration__Group_3_1_0_2__0 : rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1 ;
    public final void rule__VarDeclaration__Group_3_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2606:1: ( rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1 )
            // InternalSTCoreParser.g:2607:2: rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclaration__Group_3_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__0__Impl"
    // InternalSTCoreParser.g:2614:1: rule__VarDeclaration__Group_3_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_3_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2618:1: ( ( Comma ) )
            // InternalSTCoreParser.g:2619:1: ( Comma )
            {
            // InternalSTCoreParser.g:2619:1: ( Comma )
            // InternalSTCoreParser.g:2620:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__1"
    // InternalSTCoreParser.g:2629:1: rule__VarDeclaration__Group_3_1_0_2__1 : rule__VarDeclaration__Group_3_1_0_2__1__Impl ;
    public final void rule__VarDeclaration__Group_3_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2633:1: ( rule__VarDeclaration__Group_3_1_0_2__1__Impl )
            // InternalSTCoreParser.g:2634:2: rule__VarDeclaration__Group_3_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__1__Impl"
    // InternalSTCoreParser.g:2640:1: rule__VarDeclaration__Group_3_1_0_2__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2644:1: ( ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) ) )
            // InternalSTCoreParser.g:2645:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) )
            {
            // InternalSTCoreParser.g:2645:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) )
            // InternalSTCoreParser.g:2646:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_2_1()); 
            }
            // InternalSTCoreParser.g:2647:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 )
            // InternalSTCoreParser.g:2647:3: rule__VarDeclaration__RangesAssignment_3_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_3_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__0"
    // InternalSTCoreParser.g:2656:1: rule__VarDeclaration__Group_3_1_1__0 : rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1 ;
    public final void rule__VarDeclaration__Group_3_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2660:1: ( rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1 )
            // InternalSTCoreParser.g:2661:2: rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__VarDeclaration__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__0__Impl"
    // InternalSTCoreParser.g:2668:1: rule__VarDeclaration__Group_3_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2672:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2673:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2673:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2674:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__1"
    // InternalSTCoreParser.g:2683:1: rule__VarDeclaration__Group_3_1_1__1 : rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2 ;
    public final void rule__VarDeclaration__Group_3_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2687:1: ( rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2 )
            // InternalSTCoreParser.g:2688:2: rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__1__Impl"
    // InternalSTCoreParser.g:2695:1: rule__VarDeclaration__Group_3_1_1__1__Impl : ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2699:1: ( ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) ) )
            // InternalSTCoreParser.g:2700:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) )
            {
            // InternalSTCoreParser.g:2700:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) )
            // InternalSTCoreParser.g:2701:2: ( rule__VarDeclaration__CountAssignment_3_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_1()); 
            }
            // InternalSTCoreParser.g:2702:2: ( rule__VarDeclaration__CountAssignment_3_1_1_1 )
            // InternalSTCoreParser.g:2702:3: rule__VarDeclaration__CountAssignment_3_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_3_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__2"
    // InternalSTCoreParser.g:2710:1: rule__VarDeclaration__Group_3_1_1__2 : rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3 ;
    public final void rule__VarDeclaration__Group_3_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2714:1: ( rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3 )
            // InternalSTCoreParser.g:2715:2: rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclaration__Group_3_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__2"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__2__Impl"
    // InternalSTCoreParser.g:2722:1: rule__VarDeclaration__Group_3_1_1__2__Impl : ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_3_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2726:1: ( ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* ) )
            // InternalSTCoreParser.g:2727:1: ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* )
            {
            // InternalSTCoreParser.g:2727:1: ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* )
            // InternalSTCoreParser.g:2728:2: ( rule__VarDeclaration__Group_3_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1_2()); 
            }
            // InternalSTCoreParser.g:2729:2: ( rule__VarDeclaration__Group_3_1_1_2__0 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==Comma) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalSTCoreParser.g:2729:3: rule__VarDeclaration__Group_3_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__VarDeclaration__Group_3_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__3"
    // InternalSTCoreParser.g:2737:1: rule__VarDeclaration__Group_3_1_1__3 : rule__VarDeclaration__Group_3_1_1__3__Impl ;
    public final void rule__VarDeclaration__Group_3_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2741:1: ( rule__VarDeclaration__Group_3_1_1__3__Impl )
            // InternalSTCoreParser.g:2742:2: rule__VarDeclaration__Group_3_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__3"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__3__Impl"
    // InternalSTCoreParser.g:2748:1: rule__VarDeclaration__Group_3_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2752:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2753:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2753:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2754:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__0"
    // InternalSTCoreParser.g:2764:1: rule__VarDeclaration__Group_3_1_1_2__0 : rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1 ;
    public final void rule__VarDeclaration__Group_3_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2768:1: ( rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1 )
            // InternalSTCoreParser.g:2769:2: rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1
            {
            pushFollow(FOLLOW_13);
            rule__VarDeclaration__Group_3_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__0__Impl"
    // InternalSTCoreParser.g:2776:1: rule__VarDeclaration__Group_3_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_3_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2780:1: ( ( Comma ) )
            // InternalSTCoreParser.g:2781:1: ( Comma )
            {
            // InternalSTCoreParser.g:2781:1: ( Comma )
            // InternalSTCoreParser.g:2782:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__1"
    // InternalSTCoreParser.g:2791:1: rule__VarDeclaration__Group_3_1_1_2__1 : rule__VarDeclaration__Group_3_1_1_2__1__Impl ;
    public final void rule__VarDeclaration__Group_3_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2795:1: ( rule__VarDeclaration__Group_3_1_1_2__1__Impl )
            // InternalSTCoreParser.g:2796:2: rule__VarDeclaration__Group_3_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__1__Impl"
    // InternalSTCoreParser.g:2802:1: rule__VarDeclaration__Group_3_1_1_2__1__Impl : ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2806:1: ( ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) ) )
            // InternalSTCoreParser.g:2807:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) )
            {
            // InternalSTCoreParser.g:2807:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) )
            // InternalSTCoreParser.g:2808:2: ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_2_1()); 
            }
            // InternalSTCoreParser.g:2809:2: ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 )
            // InternalSTCoreParser.g:2809:3: rule__VarDeclaration__CountAssignment_3_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_3_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__0"
    // InternalSTCoreParser.g:2818:1: rule__VarDeclaration__Group_5__0 : rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1 ;
    public final void rule__VarDeclaration__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2822:1: ( rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1 )
            // InternalSTCoreParser.g:2823:2: rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclaration__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__0"


    // $ANTLR start "rule__VarDeclaration__Group_5__0__Impl"
    // InternalSTCoreParser.g:2830:1: rule__VarDeclaration__Group_5__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2834:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2835:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2835:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2836:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_5_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__1"
    // InternalSTCoreParser.g:2845:1: rule__VarDeclaration__Group_5__1 : rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2 ;
    public final void rule__VarDeclaration__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2849:1: ( rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2 )
            // InternalSTCoreParser.g:2850:2: rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2
            {
            pushFollow(FOLLOW_14);
            rule__VarDeclaration__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__1"


    // $ANTLR start "rule__VarDeclaration__Group_5__1__Impl"
    // InternalSTCoreParser.g:2857:1: rule__VarDeclaration__Group_5__1__Impl : ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) ) ;
    public final void rule__VarDeclaration__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2861:1: ( ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) ) )
            // InternalSTCoreParser.g:2862:1: ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) )
            {
            // InternalSTCoreParser.g:2862:1: ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) )
            // InternalSTCoreParser.g:2863:2: ( rule__VarDeclaration__MaxLengthAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_5_1()); 
            }
            // InternalSTCoreParser.g:2864:2: ( rule__VarDeclaration__MaxLengthAssignment_5_1 )
            // InternalSTCoreParser.g:2864:3: rule__VarDeclaration__MaxLengthAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__MaxLengthAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__2"
    // InternalSTCoreParser.g:2872:1: rule__VarDeclaration__Group_5__2 : rule__VarDeclaration__Group_5__2__Impl ;
    public final void rule__VarDeclaration__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2876:1: ( rule__VarDeclaration__Group_5__2__Impl )
            // InternalSTCoreParser.g:2877:2: rule__VarDeclaration__Group_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__2"


    // $ANTLR start "rule__VarDeclaration__Group_5__2__Impl"
    // InternalSTCoreParser.g:2883:1: rule__VarDeclaration__Group_5__2__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2887:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:2888:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:2888:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:2889:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_5_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__0"
    // InternalSTCoreParser.g:2899:1: rule__VarDeclaration__Group_6__0 : rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 ;
    public final void rule__VarDeclaration__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2903:1: ( rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 )
            // InternalSTCoreParser.g:2904:2: rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1
            {
            pushFollow(FOLLOW_15);
            rule__VarDeclaration__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0"


    // $ANTLR start "rule__VarDeclaration__Group_6__0__Impl"
    // InternalSTCoreParser.g:2911:1: rule__VarDeclaration__Group_6__0__Impl : ( ColonEqualsSign ) ;
    public final void rule__VarDeclaration__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2915:1: ( ( ColonEqualsSign ) )
            // InternalSTCoreParser.g:2916:1: ( ColonEqualsSign )
            {
            // InternalSTCoreParser.g:2916:1: ( ColonEqualsSign )
            // InternalSTCoreParser.g:2917:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_6_0()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__1"
    // InternalSTCoreParser.g:2926:1: rule__VarDeclaration__Group_6__1 : rule__VarDeclaration__Group_6__1__Impl ;
    public final void rule__VarDeclaration__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2930:1: ( rule__VarDeclaration__Group_6__1__Impl )
            // InternalSTCoreParser.g:2931:2: rule__VarDeclaration__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1"


    // $ANTLR start "rule__VarDeclaration__Group_6__1__Impl"
    // InternalSTCoreParser.g:2937:1: rule__VarDeclaration__Group_6__1__Impl : ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) ) ;
    public final void rule__VarDeclaration__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2941:1: ( ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) ) )
            // InternalSTCoreParser.g:2942:1: ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) )
            {
            // InternalSTCoreParser.g:2942:1: ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) )
            // InternalSTCoreParser.g:2943:2: ( rule__VarDeclaration__DefaultValueAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_6_1()); 
            }
            // InternalSTCoreParser.g:2944:2: ( rule__VarDeclaration__DefaultValueAssignment_6_1 )
            // InternalSTCoreParser.g:2944:3: rule__VarDeclaration__DefaultValueAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__DefaultValueAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0"
    // InternalSTCoreParser.g:2953:1: rule__ArrayInitializerExpression__Group__0 : rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 ;
    public final void rule__ArrayInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2957:1: ( rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 )
            // InternalSTCoreParser.g:2958:2: rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__ArrayInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0__Impl"
    // InternalSTCoreParser.g:2965:1: rule__ArrayInitializerExpression__Group__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2969:1: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:2970:1: ( LeftSquareBracket )
            {
            // InternalSTCoreParser.g:2970:1: ( LeftSquareBracket )
            // InternalSTCoreParser.g:2971:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1"
    // InternalSTCoreParser.g:2980:1: rule__ArrayInitializerExpression__Group__1 : rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 ;
    public final void rule__ArrayInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2984:1: ( rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 )
            // InternalSTCoreParser.g:2985:2: rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__ArrayInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1__Impl"
    // InternalSTCoreParser.g:2992:1: rule__ArrayInitializerExpression__Group__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:2996:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalSTCoreParser.g:2997:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalSTCoreParser.g:2997:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            // InternalSTCoreParser.g:2998:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalSTCoreParser.g:2999:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            // InternalSTCoreParser.g:2999:3: rule__ArrayInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2"
    // InternalSTCoreParser.g:3007:1: rule__ArrayInitializerExpression__Group__2 : rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 ;
    public final void rule__ArrayInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3011:1: ( rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 )
            // InternalSTCoreParser.g:3012:2: rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__ArrayInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2__Impl"
    // InternalSTCoreParser.g:3019:1: rule__ArrayInitializerExpression__Group__2__Impl : ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) ;
    public final void rule__ArrayInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3023:1: ( ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) )
            // InternalSTCoreParser.g:3024:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            {
            // InternalSTCoreParser.g:3024:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            // InternalSTCoreParser.g:3025:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalSTCoreParser.g:3026:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==Comma) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalSTCoreParser.g:3026:3: rule__ArrayInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__ArrayInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3"
    // InternalSTCoreParser.g:3034:1: rule__ArrayInitializerExpression__Group__3 : rule__ArrayInitializerExpression__Group__3__Impl ;
    public final void rule__ArrayInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3038:1: ( rule__ArrayInitializerExpression__Group__3__Impl )
            // InternalSTCoreParser.g:3039:2: rule__ArrayInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3__Impl"
    // InternalSTCoreParser.g:3045:1: rule__ArrayInitializerExpression__Group__3__Impl : ( RightSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3049:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:3050:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:3050:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:3051:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0"
    // InternalSTCoreParser.g:3061:1: rule__ArrayInitializerExpression__Group_2__0 : rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 ;
    public final void rule__ArrayInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3065:1: ( rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 )
            // InternalSTCoreParser.g:3066:2: rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_10);
            rule__ArrayInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0__Impl"
    // InternalSTCoreParser.g:3073:1: rule__ArrayInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__ArrayInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3077:1: ( ( Comma ) )
            // InternalSTCoreParser.g:3078:1: ( Comma )
            {
            // InternalSTCoreParser.g:3078:1: ( Comma )
            // InternalSTCoreParser.g:3079:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1"
    // InternalSTCoreParser.g:3088:1: rule__ArrayInitializerExpression__Group_2__1 : rule__ArrayInitializerExpression__Group_2__1__Impl ;
    public final void rule__ArrayInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3092:1: ( rule__ArrayInitializerExpression__Group_2__1__Impl )
            // InternalSTCoreParser.g:3093:2: rule__ArrayInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1__Impl"
    // InternalSTCoreParser.g:3099:1: rule__ArrayInitializerExpression__Group_2__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3103:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalSTCoreParser.g:3104:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalSTCoreParser.g:3104:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalSTCoreParser.g:3105:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalSTCoreParser.g:3106:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            // InternalSTCoreParser.g:3106:3: rule__ArrayInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__0"
    // InternalSTCoreParser.g:3115:1: rule__ArrayInitElement__Group__0 : rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 ;
    public final void rule__ArrayInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3119:1: ( rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 )
            // InternalSTCoreParser.g:3120:2: rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__ArrayInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0"


    // $ANTLR start "rule__ArrayInitElement__Group__0__Impl"
    // InternalSTCoreParser.g:3127:1: rule__ArrayInitElement__Group__0__Impl : ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) ;
    public final void rule__ArrayInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3131:1: ( ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) )
            // InternalSTCoreParser.g:3132:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            {
            // InternalSTCoreParser.g:3132:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            // InternalSTCoreParser.g:3133:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }
            // InternalSTCoreParser.g:3134:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            // InternalSTCoreParser.g:3134:3: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__IndexOrInitExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__1"
    // InternalSTCoreParser.g:3142:1: rule__ArrayInitElement__Group__1 : rule__ArrayInitElement__Group__1__Impl ;
    public final void rule__ArrayInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3146:1: ( rule__ArrayInitElement__Group__1__Impl )
            // InternalSTCoreParser.g:3147:2: rule__ArrayInitElement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1"


    // $ANTLR start "rule__ArrayInitElement__Group__1__Impl"
    // InternalSTCoreParser.g:3153:1: rule__ArrayInitElement__Group__1__Impl : ( ( rule__ArrayInitElement__Group_1__0 )? ) ;
    public final void rule__ArrayInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3157:1: ( ( ( rule__ArrayInitElement__Group_1__0 )? ) )
            // InternalSTCoreParser.g:3158:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            {
            // InternalSTCoreParser.g:3158:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            // InternalSTCoreParser.g:3159:2: ( rule__ArrayInitElement__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:3160:2: ( rule__ArrayInitElement__Group_1__0 )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==LeftParenthesis) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalSTCoreParser.g:3160:3: rule__ArrayInitElement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ArrayInitElement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0"
    // InternalSTCoreParser.g:3169:1: rule__ArrayInitElement__Group_1__0 : rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 ;
    public final void rule__ArrayInitElement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3173:1: ( rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 )
            // InternalSTCoreParser.g:3174:2: rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__ArrayInitElement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0__Impl"
    // InternalSTCoreParser.g:3181:1: rule__ArrayInitElement__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3185:1: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:3186:1: ( LeftParenthesis )
            {
            // InternalSTCoreParser.g:3186:1: ( LeftParenthesis )
            // InternalSTCoreParser.g:3187:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1"
    // InternalSTCoreParser.g:3196:1: rule__ArrayInitElement__Group_1__1 : rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 ;
    public final void rule__ArrayInitElement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3200:1: ( rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 )
            // InternalSTCoreParser.g:3201:2: rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2
            {
            pushFollow(FOLLOW_17);
            rule__ArrayInitElement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1__Impl"
    // InternalSTCoreParser.g:3208:1: rule__ArrayInitElement__Group_1__1__Impl : ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) ;
    public final void rule__ArrayInitElement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3212:1: ( ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:3213:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:3213:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            // InternalSTCoreParser.g:3214:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:3215:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            // InternalSTCoreParser.g:3215:3: rule__ArrayInitElement__InitExpressionAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__InitExpressionAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2"
    // InternalSTCoreParser.g:3223:1: rule__ArrayInitElement__Group_1__2 : rule__ArrayInitElement__Group_1__2__Impl ;
    public final void rule__ArrayInitElement__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3227:1: ( rule__ArrayInitElement__Group_1__2__Impl )
            // InternalSTCoreParser.g:3228:2: rule__ArrayInitElement__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2__Impl"
    // InternalSTCoreParser.g:3234:1: rule__ArrayInitElement__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3238:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:3239:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:3239:1: ( RightParenthesis )
            // InternalSTCoreParser.g:3240:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2__Impl"


    // $ANTLR start "rule__STStatement__Group_0__0"
    // InternalSTCoreParser.g:3250:1: rule__STStatement__Group_0__0 : rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 ;
    public final void rule__STStatement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3254:1: ( rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 )
            // InternalSTCoreParser.g:3255:2: rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1
            {
            pushFollow(FOLLOW_18);
            rule__STStatement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0"


    // $ANTLR start "rule__STStatement__Group_0__0__Impl"
    // InternalSTCoreParser.g:3262:1: rule__STStatement__Group_0__0__Impl : ( ( rule__STStatement__Alternatives_0_0 ) ) ;
    public final void rule__STStatement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3266:1: ( ( ( rule__STStatement__Alternatives_0_0 ) ) )
            // InternalSTCoreParser.g:3267:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:3267:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            // InternalSTCoreParser.g:3268:2: ( rule__STStatement__Alternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:3269:2: ( rule__STStatement__Alternatives_0_0 )
            // InternalSTCoreParser.g:3269:3: rule__STStatement__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0__1"
    // InternalSTCoreParser.g:3277:1: rule__STStatement__Group_0__1 : rule__STStatement__Group_0__1__Impl ;
    public final void rule__STStatement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3281:1: ( rule__STStatement__Group_0__1__Impl )
            // InternalSTCoreParser.g:3282:2: rule__STStatement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1"


    // $ANTLR start "rule__STStatement__Group_0__1__Impl"
    // InternalSTCoreParser.g:3288:1: rule__STStatement__Group_0__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3292:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3293:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3293:1: ( Semicolon )
            // InternalSTCoreParser.g:3294:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_6__0"
    // InternalSTCoreParser.g:3304:1: rule__STStatement__Group_0_0_6__0 : rule__STStatement__Group_0_0_6__0__Impl rule__STStatement__Group_0_0_6__1 ;
    public final void rule__STStatement__Group_0_0_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3308:1: ( rule__STStatement__Group_0_0_6__0__Impl rule__STStatement__Group_0_0_6__1 )
            // InternalSTCoreParser.g:3309:2: rule__STStatement__Group_0_0_6__0__Impl rule__STStatement__Group_0_0_6__1
            {
            pushFollow(FOLLOW_19);
            rule__STStatement__Group_0_0_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__0"


    // $ANTLR start "rule__STStatement__Group_0_0_6__0__Impl"
    // InternalSTCoreParser.g:3316:1: rule__STStatement__Group_0_0_6__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3320:1: ( ( () ) )
            // InternalSTCoreParser.g:3321:1: ( () )
            {
            // InternalSTCoreParser.g:3321:1: ( () )
            // InternalSTCoreParser.g:3322:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_6_0()); 
            }
            // InternalSTCoreParser.g:3323:2: ()
            // InternalSTCoreParser.g:3323:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_6__1"
    // InternalSTCoreParser.g:3331:1: rule__STStatement__Group_0_0_6__1 : rule__STStatement__Group_0_0_6__1__Impl ;
    public final void rule__STStatement__Group_0_0_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3335:1: ( rule__STStatement__Group_0_0_6__1__Impl )
            // InternalSTCoreParser.g:3336:2: rule__STStatement__Group_0_0_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__1"


    // $ANTLR start "rule__STStatement__Group_0_0_6__1__Impl"
    // InternalSTCoreParser.g:3342:1: rule__STStatement__Group_0_0_6__1__Impl : ( RETURN ) ;
    public final void rule__STStatement__Group_0_0_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3346:1: ( ( RETURN ) )
            // InternalSTCoreParser.g:3347:1: ( RETURN )
            {
            // InternalSTCoreParser.g:3347:1: ( RETURN )
            // InternalSTCoreParser.g:3348:2: RETURN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_6_1()); 
            }
            match(input,RETURN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0"
    // InternalSTCoreParser.g:3358:1: rule__STStatement__Group_0_0_7__0 : rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 ;
    public final void rule__STStatement__Group_0_0_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3362:1: ( rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 )
            // InternalSTCoreParser.g:3363:2: rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1
            {
            pushFollow(FOLLOW_20);
            rule__STStatement__Group_0_0_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0__Impl"
    // InternalSTCoreParser.g:3370:1: rule__STStatement__Group_0_0_7__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3374:1: ( ( () ) )
            // InternalSTCoreParser.g:3375:1: ( () )
            {
            // InternalSTCoreParser.g:3375:1: ( () )
            // InternalSTCoreParser.g:3376:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_7_0()); 
            }
            // InternalSTCoreParser.g:3377:2: ()
            // InternalSTCoreParser.g:3377:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_7_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1"
    // InternalSTCoreParser.g:3385:1: rule__STStatement__Group_0_0_7__1 : rule__STStatement__Group_0_0_7__1__Impl ;
    public final void rule__STStatement__Group_0_0_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3389:1: ( rule__STStatement__Group_0_0_7__1__Impl )
            // InternalSTCoreParser.g:3390:2: rule__STStatement__Group_0_0_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1__Impl"
    // InternalSTCoreParser.g:3396:1: rule__STStatement__Group_0_0_7__1__Impl : ( CONTINUE ) ;
    public final void rule__STStatement__Group_0_0_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3400:1: ( ( CONTINUE ) )
            // InternalSTCoreParser.g:3401:1: ( CONTINUE )
            {
            // InternalSTCoreParser.g:3401:1: ( CONTINUE )
            // InternalSTCoreParser.g:3402:2: CONTINUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_7_1()); 
            }
            match(input,CONTINUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0"
    // InternalSTCoreParser.g:3412:1: rule__STStatement__Group_0_0_8__0 : rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 ;
    public final void rule__STStatement__Group_0_0_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3416:1: ( rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 )
            // InternalSTCoreParser.g:3417:2: rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1
            {
            pushFollow(FOLLOW_21);
            rule__STStatement__Group_0_0_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0__Impl"
    // InternalSTCoreParser.g:3424:1: rule__STStatement__Group_0_0_8__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3428:1: ( ( () ) )
            // InternalSTCoreParser.g:3429:1: ( () )
            {
            // InternalSTCoreParser.g:3429:1: ( () )
            // InternalSTCoreParser.g:3430:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_8_0()); 
            }
            // InternalSTCoreParser.g:3431:2: ()
            // InternalSTCoreParser.g:3431:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_8_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1"
    // InternalSTCoreParser.g:3439:1: rule__STStatement__Group_0_0_8__1 : rule__STStatement__Group_0_0_8__1__Impl ;
    public final void rule__STStatement__Group_0_0_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3443:1: ( rule__STStatement__Group_0_0_8__1__Impl )
            // InternalSTCoreParser.g:3444:2: rule__STStatement__Group_0_0_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1__Impl"
    // InternalSTCoreParser.g:3450:1: rule__STStatement__Group_0_0_8__1__Impl : ( EXIT ) ;
    public final void rule__STStatement__Group_0_0_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3454:1: ( ( EXIT ) )
            // InternalSTCoreParser.g:3455:1: ( EXIT )
            {
            // InternalSTCoreParser.g:3455:1: ( EXIT )
            // InternalSTCoreParser.g:3456:2: EXIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_8_1()); 
            }
            match(input,EXIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1__Impl"


    // $ANTLR start "rule__STStatement__Group_1__0"
    // InternalSTCoreParser.g:3466:1: rule__STStatement__Group_1__0 : rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 ;
    public final void rule__STStatement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3470:1: ( rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 )
            // InternalSTCoreParser.g:3471:2: rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1
            {
            pushFollow(FOLLOW_22);
            rule__STStatement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0"


    // $ANTLR start "rule__STStatement__Group_1__0__Impl"
    // InternalSTCoreParser.g:3478:1: rule__STStatement__Group_1__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3482:1: ( ( () ) )
            // InternalSTCoreParser.g:3483:1: ( () )
            {
            // InternalSTCoreParser.g:3483:1: ( () )
            // InternalSTCoreParser.g:3484:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }
            // InternalSTCoreParser.g:3485:2: ()
            // InternalSTCoreParser.g:3485:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0__Impl"


    // $ANTLR start "rule__STStatement__Group_1__1"
    // InternalSTCoreParser.g:3493:1: rule__STStatement__Group_1__1 : rule__STStatement__Group_1__1__Impl ;
    public final void rule__STStatement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3497:1: ( rule__STStatement__Group_1__1__Impl )
            // InternalSTCoreParser.g:3498:2: rule__STStatement__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1"


    // $ANTLR start "rule__STStatement__Group_1__1__Impl"
    // InternalSTCoreParser.g:3504:1: rule__STStatement__Group_1__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3508:1: ( ( Semicolon ) )
            // InternalSTCoreParser.g:3509:1: ( Semicolon )
            {
            // InternalSTCoreParser.g:3509:1: ( Semicolon )
            // InternalSTCoreParser.g:3510:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__0"
    // InternalSTCoreParser.g:3520:1: rule__STAssignmentStatement__Group__0 : rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 ;
    public final void rule__STAssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3524:1: ( rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 )
            // InternalSTCoreParser.g:3525:2: rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__STAssignmentStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0"


    // $ANTLR start "rule__STAssignmentStatement__Group__0__Impl"
    // InternalSTCoreParser.g:3532:1: rule__STAssignmentStatement__Group__0__Impl : ( ( rule__STAssignmentStatement__LhsAssignment_0 ) ) ;
    public final void rule__STAssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3536:1: ( ( ( rule__STAssignmentStatement__LhsAssignment_0 ) ) )
            // InternalSTCoreParser.g:3537:1: ( ( rule__STAssignmentStatement__LhsAssignment_0 ) )
            {
            // InternalSTCoreParser.g:3537:1: ( ( rule__STAssignmentStatement__LhsAssignment_0 ) )
            // InternalSTCoreParser.g:3538:2: ( rule__STAssignmentStatement__LhsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsAssignment_0()); 
            }
            // InternalSTCoreParser.g:3539:2: ( rule__STAssignmentStatement__LhsAssignment_0 )
            // InternalSTCoreParser.g:3539:3: rule__STAssignmentStatement__LhsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__LhsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__1"
    // InternalSTCoreParser.g:3547:1: rule__STAssignmentStatement__Group__1 : rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 ;
    public final void rule__STAssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3551:1: ( rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 )
            // InternalSTCoreParser.g:3552:2: rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__STAssignmentStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1"


    // $ANTLR start "rule__STAssignmentStatement__Group__1__Impl"
    // InternalSTCoreParser.g:3559:1: rule__STAssignmentStatement__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STAssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3563:1: ( ( ColonEqualsSign ) )
            // InternalSTCoreParser.g:3564:1: ( ColonEqualsSign )
            {
            // InternalSTCoreParser.g:3564:1: ( ColonEqualsSign )
            // InternalSTCoreParser.g:3565:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__2"
    // InternalSTCoreParser.g:3574:1: rule__STAssignmentStatement__Group__2 : rule__STAssignmentStatement__Group__2__Impl ;
    public final void rule__STAssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3578:1: ( rule__STAssignmentStatement__Group__2__Impl )
            // InternalSTCoreParser.g:3579:2: rule__STAssignmentStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2"


    // $ANTLR start "rule__STAssignmentStatement__Group__2__Impl"
    // InternalSTCoreParser.g:3585:1: rule__STAssignmentStatement__Group__2__Impl : ( ( rule__STAssignmentStatement__RhsAssignment_2 ) ) ;
    public final void rule__STAssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3589:1: ( ( ( rule__STAssignmentStatement__RhsAssignment_2 ) ) )
            // InternalSTCoreParser.g:3590:1: ( ( rule__STAssignmentStatement__RhsAssignment_2 ) )
            {
            // InternalSTCoreParser.g:3590:1: ( ( rule__STAssignmentStatement__RhsAssignment_2 ) )
            // InternalSTCoreParser.g:3591:2: ( rule__STAssignmentStatement__RhsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRhsAssignment_2()); 
            }
            // InternalSTCoreParser.g:3592:2: ( rule__STAssignmentStatement__RhsAssignment_2 )
            // InternalSTCoreParser.g:3592:3: rule__STAssignmentStatement__RhsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__RhsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRhsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__STIfStatment__Group__0"
    // InternalSTCoreParser.g:3601:1: rule__STIfStatment__Group__0 : rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1 ;
    public final void rule__STIfStatment__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3605:1: ( rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1 )
            // InternalSTCoreParser.g:3606:2: rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STIfStatment__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__0"


    // $ANTLR start "rule__STIfStatment__Group__0__Impl"
    // InternalSTCoreParser.g:3613:1: rule__STIfStatment__Group__0__Impl : ( IF ) ;
    public final void rule__STIfStatment__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3617:1: ( ( IF ) )
            // InternalSTCoreParser.g:3618:1: ( IF )
            {
            // InternalSTCoreParser.g:3618:1: ( IF )
            // InternalSTCoreParser.g:3619:2: IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getIFKeyword_0()); 
            }
            match(input,IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__0__Impl"


    // $ANTLR start "rule__STIfStatment__Group__1"
    // InternalSTCoreParser.g:3628:1: rule__STIfStatment__Group__1 : rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2 ;
    public final void rule__STIfStatment__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3632:1: ( rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2 )
            // InternalSTCoreParser.g:3633:2: rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2
            {
            pushFollow(FOLLOW_24);
            rule__STIfStatment__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__1"


    // $ANTLR start "rule__STIfStatment__Group__1__Impl"
    // InternalSTCoreParser.g:3640:1: rule__STIfStatment__Group__1__Impl : ( ( rule__STIfStatment__ConditionAssignment_1 ) ) ;
    public final void rule__STIfStatment__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3644:1: ( ( ( rule__STIfStatment__ConditionAssignment_1 ) ) )
            // InternalSTCoreParser.g:3645:1: ( ( rule__STIfStatment__ConditionAssignment_1 ) )
            {
            // InternalSTCoreParser.g:3645:1: ( ( rule__STIfStatment__ConditionAssignment_1 ) )
            // InternalSTCoreParser.g:3646:2: ( rule__STIfStatment__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getConditionAssignment_1()); 
            }
            // InternalSTCoreParser.g:3647:2: ( rule__STIfStatment__ConditionAssignment_1 )
            // InternalSTCoreParser.g:3647:3: rule__STIfStatment__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__1__Impl"


    // $ANTLR start "rule__STIfStatment__Group__2"
    // InternalSTCoreParser.g:3655:1: rule__STIfStatment__Group__2 : rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3 ;
    public final void rule__STIfStatment__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3659:1: ( rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3 )
            // InternalSTCoreParser.g:3660:2: rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3
            {
            pushFollow(FOLLOW_25);
            rule__STIfStatment__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__2"


    // $ANTLR start "rule__STIfStatment__Group__2__Impl"
    // InternalSTCoreParser.g:3667:1: rule__STIfStatment__Group__2__Impl : ( THEN ) ;
    public final void rule__STIfStatment__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3671:1: ( ( THEN ) )
            // InternalSTCoreParser.g:3672:1: ( THEN )
            {
            // InternalSTCoreParser.g:3672:1: ( THEN )
            // InternalSTCoreParser.g:3673:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__2__Impl"


    // $ANTLR start "rule__STIfStatment__Group__3"
    // InternalSTCoreParser.g:3682:1: rule__STIfStatment__Group__3 : rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4 ;
    public final void rule__STIfStatment__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3686:1: ( rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4 )
            // InternalSTCoreParser.g:3687:2: rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4
            {
            pushFollow(FOLLOW_25);
            rule__STIfStatment__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__3"


    // $ANTLR start "rule__STIfStatment__Group__3__Impl"
    // InternalSTCoreParser.g:3694:1: rule__STIfStatment__Group__3__Impl : ( ( rule__STIfStatment__StatementsAssignment_3 )* ) ;
    public final void rule__STIfStatment__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3698:1: ( ( ( rule__STIfStatment__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:3699:1: ( ( rule__STIfStatment__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:3699:1: ( ( rule__STIfStatment__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:3700:2: ( rule__STIfStatment__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:3701:2: ( rule__STIfStatment__StatementsAssignment_3 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==CONTINUE||(LA35_0>=REPEAT && LA35_0<=RETURN)||LA35_0==WHILE||LA35_0==CASE||LA35_0==EXIT||LA35_0==FOR||LA35_0==IF||LA35_0==Semicolon||LA35_0==RULE_ID) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalSTCoreParser.g:3701:3: rule__STIfStatment__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STIfStatment__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__3__Impl"


    // $ANTLR start "rule__STIfStatment__Group__4"
    // InternalSTCoreParser.g:3709:1: rule__STIfStatment__Group__4 : rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5 ;
    public final void rule__STIfStatment__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3713:1: ( rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5 )
            // InternalSTCoreParser.g:3714:2: rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5
            {
            pushFollow(FOLLOW_25);
            rule__STIfStatment__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__4"


    // $ANTLR start "rule__STIfStatment__Group__4__Impl"
    // InternalSTCoreParser.g:3721:1: rule__STIfStatment__Group__4__Impl : ( ( rule__STIfStatment__ElseifsAssignment_4 )* ) ;
    public final void rule__STIfStatment__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3725:1: ( ( ( rule__STIfStatment__ElseifsAssignment_4 )* ) )
            // InternalSTCoreParser.g:3726:1: ( ( rule__STIfStatment__ElseifsAssignment_4 )* )
            {
            // InternalSTCoreParser.g:3726:1: ( ( rule__STIfStatment__ElseifsAssignment_4 )* )
            // InternalSTCoreParser.g:3727:2: ( rule__STIfStatment__ElseifsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseifsAssignment_4()); 
            }
            // InternalSTCoreParser.g:3728:2: ( rule__STIfStatment__ElseifsAssignment_4 )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==ELSIF) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalSTCoreParser.g:3728:3: rule__STIfStatment__ElseifsAssignment_4
            	    {
            	    pushFollow(FOLLOW_26);
            	    rule__STIfStatment__ElseifsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseifsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__4__Impl"


    // $ANTLR start "rule__STIfStatment__Group__5"
    // InternalSTCoreParser.g:3736:1: rule__STIfStatment__Group__5 : rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6 ;
    public final void rule__STIfStatment__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3740:1: ( rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6 )
            // InternalSTCoreParser.g:3741:2: rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6
            {
            pushFollow(FOLLOW_25);
            rule__STIfStatment__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__5"


    // $ANTLR start "rule__STIfStatment__Group__5__Impl"
    // InternalSTCoreParser.g:3748:1: rule__STIfStatment__Group__5__Impl : ( ( rule__STIfStatment__ElseAssignment_5 )? ) ;
    public final void rule__STIfStatment__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3752:1: ( ( ( rule__STIfStatment__ElseAssignment_5 )? ) )
            // InternalSTCoreParser.g:3753:1: ( ( rule__STIfStatment__ElseAssignment_5 )? )
            {
            // InternalSTCoreParser.g:3753:1: ( ( rule__STIfStatment__ElseAssignment_5 )? )
            // InternalSTCoreParser.g:3754:2: ( rule__STIfStatment__ElseAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseAssignment_5()); 
            }
            // InternalSTCoreParser.g:3755:2: ( rule__STIfStatment__ElseAssignment_5 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==ELSE) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalSTCoreParser.g:3755:3: rule__STIfStatment__ElseAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__STIfStatment__ElseAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__5__Impl"


    // $ANTLR start "rule__STIfStatment__Group__6"
    // InternalSTCoreParser.g:3763:1: rule__STIfStatment__Group__6 : rule__STIfStatment__Group__6__Impl ;
    public final void rule__STIfStatment__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3767:1: ( rule__STIfStatment__Group__6__Impl )
            // InternalSTCoreParser.g:3768:2: rule__STIfStatment__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__6"


    // $ANTLR start "rule__STIfStatment__Group__6__Impl"
    // InternalSTCoreParser.g:3774:1: rule__STIfStatment__Group__6__Impl : ( END_IF ) ;
    public final void rule__STIfStatment__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3778:1: ( ( END_IF ) )
            // InternalSTCoreParser.g:3779:1: ( END_IF )
            {
            // InternalSTCoreParser.g:3779:1: ( END_IF )
            // InternalSTCoreParser.g:3780:2: END_IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getEND_IFKeyword_6()); 
            }
            match(input,END_IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getEND_IFKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__6__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__0"
    // InternalSTCoreParser.g:3790:1: rule__STElseIfPart__Group__0 : rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 ;
    public final void rule__STElseIfPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3794:1: ( rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 )
            // InternalSTCoreParser.g:3795:2: rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STElseIfPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0"


    // $ANTLR start "rule__STElseIfPart__Group__0__Impl"
    // InternalSTCoreParser.g:3802:1: rule__STElseIfPart__Group__0__Impl : ( ELSIF ) ;
    public final void rule__STElseIfPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3806:1: ( ( ELSIF ) )
            // InternalSTCoreParser.g:3807:1: ( ELSIF )
            {
            // InternalSTCoreParser.g:3807:1: ( ELSIF )
            // InternalSTCoreParser.g:3808:2: ELSIF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }
            match(input,ELSIF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__1"
    // InternalSTCoreParser.g:3817:1: rule__STElseIfPart__Group__1 : rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 ;
    public final void rule__STElseIfPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3821:1: ( rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 )
            // InternalSTCoreParser.g:3822:2: rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2
            {
            pushFollow(FOLLOW_24);
            rule__STElseIfPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1"


    // $ANTLR start "rule__STElseIfPart__Group__1__Impl"
    // InternalSTCoreParser.g:3829:1: rule__STElseIfPart__Group__1__Impl : ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) ;
    public final void rule__STElseIfPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3833:1: ( ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) )
            // InternalSTCoreParser.g:3834:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            {
            // InternalSTCoreParser.g:3834:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            // InternalSTCoreParser.g:3835:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }
            // InternalSTCoreParser.g:3836:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            // InternalSTCoreParser.g:3836:3: rule__STElseIfPart__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__2"
    // InternalSTCoreParser.g:3844:1: rule__STElseIfPart__Group__2 : rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 ;
    public final void rule__STElseIfPart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3848:1: ( rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 )
            // InternalSTCoreParser.g:3849:2: rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__STElseIfPart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2"


    // $ANTLR start "rule__STElseIfPart__Group__2__Impl"
    // InternalSTCoreParser.g:3856:1: rule__STElseIfPart__Group__2__Impl : ( THEN ) ;
    public final void rule__STElseIfPart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3860:1: ( ( THEN ) )
            // InternalSTCoreParser.g:3861:1: ( THEN )
            {
            // InternalSTCoreParser.g:3861:1: ( THEN )
            // InternalSTCoreParser.g:3862:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__3"
    // InternalSTCoreParser.g:3871:1: rule__STElseIfPart__Group__3 : rule__STElseIfPart__Group__3__Impl ;
    public final void rule__STElseIfPart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3875:1: ( rule__STElseIfPart__Group__3__Impl )
            // InternalSTCoreParser.g:3876:2: rule__STElseIfPart__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3"


    // $ANTLR start "rule__STElseIfPart__Group__3__Impl"
    // InternalSTCoreParser.g:3882:1: rule__STElseIfPart__Group__3__Impl : ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) ;
    public final void rule__STElseIfPart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3886:1: ( ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:3887:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:3887:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:3888:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:3889:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==CONTINUE||(LA38_0>=REPEAT && LA38_0<=RETURN)||LA38_0==WHILE||LA38_0==CASE||LA38_0==EXIT||LA38_0==FOR||LA38_0==IF||LA38_0==Semicolon||LA38_0==RULE_ID) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalSTCoreParser.g:3889:3: rule__STElseIfPart__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STElseIfPart__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__0"
    // InternalSTCoreParser.g:3898:1: rule__STCaseStatement__Group__0 : rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 ;
    public final void rule__STCaseStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3902:1: ( rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 )
            // InternalSTCoreParser.g:3903:2: rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STCaseStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0"


    // $ANTLR start "rule__STCaseStatement__Group__0__Impl"
    // InternalSTCoreParser.g:3910:1: rule__STCaseStatement__Group__0__Impl : ( CASE ) ;
    public final void rule__STCaseStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3914:1: ( ( CASE ) )
            // InternalSTCoreParser.g:3915:1: ( CASE )
            {
            // InternalSTCoreParser.g:3915:1: ( CASE )
            // InternalSTCoreParser.g:3916:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__1"
    // InternalSTCoreParser.g:3925:1: rule__STCaseStatement__Group__1 : rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 ;
    public final void rule__STCaseStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3929:1: ( rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 )
            // InternalSTCoreParser.g:3930:2: rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__STCaseStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1"


    // $ANTLR start "rule__STCaseStatement__Group__1__Impl"
    // InternalSTCoreParser.g:3937:1: rule__STCaseStatement__Group__1__Impl : ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) ;
    public final void rule__STCaseStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3941:1: ( ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) )
            // InternalSTCoreParser.g:3942:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            {
            // InternalSTCoreParser.g:3942:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            // InternalSTCoreParser.g:3943:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }
            // InternalSTCoreParser.g:3944:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            // InternalSTCoreParser.g:3944:3: rule__STCaseStatement__SelectorAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__SelectorAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__2"
    // InternalSTCoreParser.g:3952:1: rule__STCaseStatement__Group__2 : rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 ;
    public final void rule__STCaseStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3956:1: ( rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 )
            // InternalSTCoreParser.g:3957:2: rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STCaseStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2"


    // $ANTLR start "rule__STCaseStatement__Group__2__Impl"
    // InternalSTCoreParser.g:3964:1: rule__STCaseStatement__Group__2__Impl : ( OF ) ;
    public final void rule__STCaseStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3968:1: ( ( OF ) )
            // InternalSTCoreParser.g:3969:1: ( OF )
            {
            // InternalSTCoreParser.g:3969:1: ( OF )
            // InternalSTCoreParser.g:3970:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__3"
    // InternalSTCoreParser.g:3979:1: rule__STCaseStatement__Group__3 : rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 ;
    public final void rule__STCaseStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3983:1: ( rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 )
            // InternalSTCoreParser.g:3984:2: rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4
            {
            pushFollow(FOLLOW_27);
            rule__STCaseStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3"


    // $ANTLR start "rule__STCaseStatement__Group__3__Impl"
    // InternalSTCoreParser.g:3991:1: rule__STCaseStatement__Group__3__Impl : ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) ;
    public final void rule__STCaseStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:3995:1: ( ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) )
            // InternalSTCoreParser.g:3996:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            {
            // InternalSTCoreParser.g:3996:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            // InternalSTCoreParser.g:3997:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            {
            // InternalSTCoreParser.g:3997:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) )
            // InternalSTCoreParser.g:3998:3: ( rule__STCaseStatement__CasesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTCoreParser.g:3999:3: ( rule__STCaseStatement__CasesAssignment_3 )
            // InternalSTCoreParser.g:3999:4: rule__STCaseStatement__CasesAssignment_3
            {
            pushFollow(FOLLOW_28);
            rule__STCaseStatement__CasesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }

            // InternalSTCoreParser.g:4002:2: ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            // InternalSTCoreParser.g:4003:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTCoreParser.g:4004:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( ((LA39_0>=LDATE_AND_TIME && LA39_0<=TIME_OF_DAY)||LA39_0==WSTRING||(LA39_0>=STRING && LA39_0<=DWORD)||(LA39_0>=LDATE && LA39_0<=LWORD)||(LA39_0>=UDINT && LA39_0<=WCHAR)||(LA39_0>=BOOL && LA39_0<=DINT)||(LA39_0>=FALSE && LA39_0<=UINT)||LA39_0==WORD||(LA39_0>=INT && LA39_0<=LDT)||(LA39_0>=TOD && LA39_0<=TRUE)||LA39_0==DT||(LA39_0>=LD && LA39_0<=LT)||LA39_0==NOT||LA39_0==D||LA39_0==T||LA39_0==LeftParenthesis||LA39_0==PlusSign||LA39_0==HyphenMinus||(LA39_0>=RULE_NON_DECIMAL && LA39_0<=RULE_INT)||(LA39_0>=RULE_ID && LA39_0<=RULE_STRING)) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalSTCoreParser.g:4004:4: rule__STCaseStatement__CasesAssignment_3
            	    {
            	    pushFollow(FOLLOW_28);
            	    rule__STCaseStatement__CasesAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__4"
    // InternalSTCoreParser.g:4013:1: rule__STCaseStatement__Group__4 : rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 ;
    public final void rule__STCaseStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4017:1: ( rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 )
            // InternalSTCoreParser.g:4018:2: rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5
            {
            pushFollow(FOLLOW_27);
            rule__STCaseStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4"


    // $ANTLR start "rule__STCaseStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4025:1: rule__STCaseStatement__Group__4__Impl : ( ( rule__STCaseStatement__ElseAssignment_4 )? ) ;
    public final void rule__STCaseStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4029:1: ( ( ( rule__STCaseStatement__ElseAssignment_4 )? ) )
            // InternalSTCoreParser.g:4030:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            {
            // InternalSTCoreParser.g:4030:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            // InternalSTCoreParser.g:4031:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }
            // InternalSTCoreParser.g:4032:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==ELSE) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalSTCoreParser.g:4032:3: rule__STCaseStatement__ElseAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCaseStatement__ElseAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__5"
    // InternalSTCoreParser.g:4040:1: rule__STCaseStatement__Group__5 : rule__STCaseStatement__Group__5__Impl ;
    public final void rule__STCaseStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4044:1: ( rule__STCaseStatement__Group__5__Impl )
            // InternalSTCoreParser.g:4045:2: rule__STCaseStatement__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5"


    // $ANTLR start "rule__STCaseStatement__Group__5__Impl"
    // InternalSTCoreParser.g:4051:1: rule__STCaseStatement__Group__5__Impl : ( END_CASE ) ;
    public final void rule__STCaseStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4055:1: ( ( END_CASE ) )
            // InternalSTCoreParser.g:4056:1: ( END_CASE )
            {
            // InternalSTCoreParser.g:4056:1: ( END_CASE )
            // InternalSTCoreParser.g:4057:2: END_CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }
            match(input,END_CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5__Impl"


    // $ANTLR start "rule__STCaseCases__Group__0"
    // InternalSTCoreParser.g:4067:1: rule__STCaseCases__Group__0 : rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 ;
    public final void rule__STCaseCases__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4071:1: ( rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 )
            // InternalSTCoreParser.g:4072:2: rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__STCaseCases__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0"


    // $ANTLR start "rule__STCaseCases__Group__0__Impl"
    // InternalSTCoreParser.g:4079:1: rule__STCaseCases__Group__0__Impl : ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) ;
    public final void rule__STCaseCases__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4083:1: ( ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) )
            // InternalSTCoreParser.g:4084:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            {
            // InternalSTCoreParser.g:4084:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            // InternalSTCoreParser.g:4085:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }
            // InternalSTCoreParser.g:4086:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            // InternalSTCoreParser.g:4086:3: rule__STCaseCases__ConditionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group__1"
    // InternalSTCoreParser.g:4094:1: rule__STCaseCases__Group__1 : rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 ;
    public final void rule__STCaseCases__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4098:1: ( rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 )
            // InternalSTCoreParser.g:4099:2: rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2
            {
            pushFollow(FOLLOW_29);
            rule__STCaseCases__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1"


    // $ANTLR start "rule__STCaseCases__Group__1__Impl"
    // InternalSTCoreParser.g:4106:1: rule__STCaseCases__Group__1__Impl : ( ( rule__STCaseCases__Group_1__0 )* ) ;
    public final void rule__STCaseCases__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4110:1: ( ( ( rule__STCaseCases__Group_1__0 )* ) )
            // InternalSTCoreParser.g:4111:1: ( ( rule__STCaseCases__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:4111:1: ( ( rule__STCaseCases__Group_1__0 )* )
            // InternalSTCoreParser.g:4112:2: ( rule__STCaseCases__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:4113:2: ( rule__STCaseCases__Group_1__0 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==Comma) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalSTCoreParser.g:4113:3: rule__STCaseCases__Group_1__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STCaseCases__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1__Impl"


    // $ANTLR start "rule__STCaseCases__Group__2"
    // InternalSTCoreParser.g:4121:1: rule__STCaseCases__Group__2 : rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 ;
    public final void rule__STCaseCases__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4125:1: ( rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 )
            // InternalSTCoreParser.g:4126:2: rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__STCaseCases__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2"


    // $ANTLR start "rule__STCaseCases__Group__2__Impl"
    // InternalSTCoreParser.g:4133:1: rule__STCaseCases__Group__2__Impl : ( Colon ) ;
    public final void rule__STCaseCases__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4137:1: ( ( Colon ) )
            // InternalSTCoreParser.g:4138:1: ( Colon )
            {
            // InternalSTCoreParser.g:4138:1: ( Colon )
            // InternalSTCoreParser.g:4139:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2__Impl"


    // $ANTLR start "rule__STCaseCases__Group__3"
    // InternalSTCoreParser.g:4148:1: rule__STCaseCases__Group__3 : rule__STCaseCases__Group__3__Impl ;
    public final void rule__STCaseCases__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4152:1: ( rule__STCaseCases__Group__3__Impl )
            // InternalSTCoreParser.g:4153:2: rule__STCaseCases__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3"


    // $ANTLR start "rule__STCaseCases__Group__3__Impl"
    // InternalSTCoreParser.g:4159:1: rule__STCaseCases__Group__3__Impl : ( ( rule__STCaseCases__StatementsAssignment_3 )* ) ;
    public final void rule__STCaseCases__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4163:1: ( ( ( rule__STCaseCases__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:4164:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:4164:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:4165:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:4166:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==RULE_ID) ) {
                    int LA42_2 = input.LA(2);

                    if ( (LA42_2==ColonEqualsSign) ) {
                        alt42=1;
                    }


                }
                else if ( (LA42_0==CONTINUE||(LA42_0>=REPEAT && LA42_0<=RETURN)||LA42_0==WHILE||LA42_0==CASE||LA42_0==EXIT||LA42_0==FOR||LA42_0==IF||LA42_0==Semicolon) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalSTCoreParser.g:4166:3: rule__STCaseCases__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STCaseCases__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__0"
    // InternalSTCoreParser.g:4175:1: rule__STCaseCases__Group_1__0 : rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 ;
    public final void rule__STCaseCases__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4179:1: ( rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 )
            // InternalSTCoreParser.g:4180:2: rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STCaseCases__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0"


    // $ANTLR start "rule__STCaseCases__Group_1__0__Impl"
    // InternalSTCoreParser.g:4187:1: rule__STCaseCases__Group_1__0__Impl : ( Comma ) ;
    public final void rule__STCaseCases__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4191:1: ( ( Comma ) )
            // InternalSTCoreParser.g:4192:1: ( Comma )
            {
            // InternalSTCoreParser.g:4192:1: ( Comma )
            // InternalSTCoreParser.g:4193:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__1"
    // InternalSTCoreParser.g:4202:1: rule__STCaseCases__Group_1__1 : rule__STCaseCases__Group_1__1__Impl ;
    public final void rule__STCaseCases__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4206:1: ( rule__STCaseCases__Group_1__1__Impl )
            // InternalSTCoreParser.g:4207:2: rule__STCaseCases__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1"


    // $ANTLR start "rule__STCaseCases__Group_1__1__Impl"
    // InternalSTCoreParser.g:4213:1: rule__STCaseCases__Group_1__1__Impl : ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) ;
    public final void rule__STCaseCases__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4217:1: ( ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:4218:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:4218:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            // InternalSTCoreParser.g:4219:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:4220:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            // InternalSTCoreParser.g:4220:3: rule__STCaseCases__ConditionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__0"
    // InternalSTCoreParser.g:4229:1: rule__STElsePart__Group__0 : rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 ;
    public final void rule__STElsePart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4233:1: ( rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 )
            // InternalSTCoreParser.g:4234:2: rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__STElsePart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0"


    // $ANTLR start "rule__STElsePart__Group__0__Impl"
    // InternalSTCoreParser.g:4241:1: rule__STElsePart__Group__0__Impl : ( () ) ;
    public final void rule__STElsePart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4245:1: ( ( () ) )
            // InternalSTCoreParser.g:4246:1: ( () )
            {
            // InternalSTCoreParser.g:4246:1: ( () )
            // InternalSTCoreParser.g:4247:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }
            // InternalSTCoreParser.g:4248:2: ()
            // InternalSTCoreParser.g:4248:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0__Impl"


    // $ANTLR start "rule__STElsePart__Group__1"
    // InternalSTCoreParser.g:4256:1: rule__STElsePart__Group__1 : rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 ;
    public final void rule__STElsePart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4260:1: ( rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 )
            // InternalSTCoreParser.g:4261:2: rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__STElsePart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1"


    // $ANTLR start "rule__STElsePart__Group__1__Impl"
    // InternalSTCoreParser.g:4268:1: rule__STElsePart__Group__1__Impl : ( ELSE ) ;
    public final void rule__STElsePart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4272:1: ( ( ELSE ) )
            // InternalSTCoreParser.g:4273:1: ( ELSE )
            {
            // InternalSTCoreParser.g:4273:1: ( ELSE )
            // InternalSTCoreParser.g:4274:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__2"
    // InternalSTCoreParser.g:4283:1: rule__STElsePart__Group__2 : rule__STElsePart__Group__2__Impl ;
    public final void rule__STElsePart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4287:1: ( rule__STElsePart__Group__2__Impl )
            // InternalSTCoreParser.g:4288:2: rule__STElsePart__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2"


    // $ANTLR start "rule__STElsePart__Group__2__Impl"
    // InternalSTCoreParser.g:4294:1: rule__STElsePart__Group__2__Impl : ( ( rule__STElsePart__StatementsAssignment_2 )* ) ;
    public final void rule__STElsePart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4298:1: ( ( ( rule__STElsePart__StatementsAssignment_2 )* ) )
            // InternalSTCoreParser.g:4299:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            {
            // InternalSTCoreParser.g:4299:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            // InternalSTCoreParser.g:4300:2: ( rule__STElsePart__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }
            // InternalSTCoreParser.g:4301:2: ( rule__STElsePart__StatementsAssignment_2 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==CONTINUE||(LA43_0>=REPEAT && LA43_0<=RETURN)||LA43_0==WHILE||LA43_0==CASE||LA43_0==EXIT||LA43_0==FOR||LA43_0==IF||LA43_0==Semicolon||LA43_0==RULE_ID) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalSTCoreParser.g:4301:3: rule__STElsePart__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STElsePart__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__0"
    // InternalSTCoreParser.g:4310:1: rule__STForStatement__Group__0 : rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 ;
    public final void rule__STForStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4314:1: ( rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 )
            // InternalSTCoreParser.g:4315:2: rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STForStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0"


    // $ANTLR start "rule__STForStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4322:1: rule__STForStatement__Group__0__Impl : ( FOR ) ;
    public final void rule__STForStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4326:1: ( ( FOR ) )
            // InternalSTCoreParser.g:4327:1: ( FOR )
            {
            // InternalSTCoreParser.g:4327:1: ( FOR )
            // InternalSTCoreParser.g:4328:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0__Impl"


    // $ANTLR start "rule__STForStatement__Group__1"
    // InternalSTCoreParser.g:4337:1: rule__STForStatement__Group__1 : rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 ;
    public final void rule__STForStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4341:1: ( rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 )
            // InternalSTCoreParser.g:4342:2: rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__STForStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1"


    // $ANTLR start "rule__STForStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4349:1: rule__STForStatement__Group__1__Impl : ( ( rule__STForStatement__ForAssignment_1 ) ) ;
    public final void rule__STForStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4353:1: ( ( ( rule__STForStatement__ForAssignment_1 ) ) )
            // InternalSTCoreParser.g:4354:1: ( ( rule__STForStatement__ForAssignment_1 ) )
            {
            // InternalSTCoreParser.g:4354:1: ( ( rule__STForStatement__ForAssignment_1 ) )
            // InternalSTCoreParser.g:4355:2: ( rule__STForStatement__ForAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getForAssignment_1()); 
            }
            // InternalSTCoreParser.g:4356:2: ( rule__STForStatement__ForAssignment_1 )
            // InternalSTCoreParser.g:4356:3: rule__STForStatement__ForAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ForAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getForAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1__Impl"


    // $ANTLR start "rule__STForStatement__Group__2"
    // InternalSTCoreParser.g:4364:1: rule__STForStatement__Group__2 : rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 ;
    public final void rule__STForStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4368:1: ( rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 )
            // InternalSTCoreParser.g:4369:2: rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STForStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2"


    // $ANTLR start "rule__STForStatement__Group__2__Impl"
    // InternalSTCoreParser.g:4376:1: rule__STForStatement__Group__2__Impl : ( TO ) ;
    public final void rule__STForStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4380:1: ( ( TO ) )
            // InternalSTCoreParser.g:4381:1: ( TO )
            {
            // InternalSTCoreParser.g:4381:1: ( TO )
            // InternalSTCoreParser.g:4382:2: TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getTOKeyword_2()); 
            }
            match(input,TO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getTOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__3"
    // InternalSTCoreParser.g:4391:1: rule__STForStatement__Group__3 : rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 ;
    public final void rule__STForStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4395:1: ( rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 )
            // InternalSTCoreParser.g:4396:2: rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4
            {
            pushFollow(FOLLOW_32);
            rule__STForStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3"


    // $ANTLR start "rule__STForStatement__Group__3__Impl"
    // InternalSTCoreParser.g:4403:1: rule__STForStatement__Group__3__Impl : ( ( rule__STForStatement__ToAssignment_3 ) ) ;
    public final void rule__STForStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4407:1: ( ( ( rule__STForStatement__ToAssignment_3 ) ) )
            // InternalSTCoreParser.g:4408:1: ( ( rule__STForStatement__ToAssignment_3 ) )
            {
            // InternalSTCoreParser.g:4408:1: ( ( rule__STForStatement__ToAssignment_3 ) )
            // InternalSTCoreParser.g:4409:2: ( rule__STForStatement__ToAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToAssignment_3()); 
            }
            // InternalSTCoreParser.g:4410:2: ( rule__STForStatement__ToAssignment_3 )
            // InternalSTCoreParser.g:4410:3: rule__STForStatement__ToAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ToAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3__Impl"


    // $ANTLR start "rule__STForStatement__Group__4"
    // InternalSTCoreParser.g:4418:1: rule__STForStatement__Group__4 : rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 ;
    public final void rule__STForStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4422:1: ( rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 )
            // InternalSTCoreParser.g:4423:2: rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5
            {
            pushFollow(FOLLOW_32);
            rule__STForStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4"


    // $ANTLR start "rule__STForStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4430:1: rule__STForStatement__Group__4__Impl : ( ( rule__STForStatement__Group_4__0 )? ) ;
    public final void rule__STForStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4434:1: ( ( ( rule__STForStatement__Group_4__0 )? ) )
            // InternalSTCoreParser.g:4435:1: ( ( rule__STForStatement__Group_4__0 )? )
            {
            // InternalSTCoreParser.g:4435:1: ( ( rule__STForStatement__Group_4__0 )? )
            // InternalSTCoreParser.g:4436:2: ( rule__STForStatement__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup_4()); 
            }
            // InternalSTCoreParser.g:4437:2: ( rule__STForStatement__Group_4__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==BY) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalSTCoreParser.g:4437:3: rule__STForStatement__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STForStatement__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4__Impl"


    // $ANTLR start "rule__STForStatement__Group__5"
    // InternalSTCoreParser.g:4445:1: rule__STForStatement__Group__5 : rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 ;
    public final void rule__STForStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4449:1: ( rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 )
            // InternalSTCoreParser.g:4450:2: rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6
            {
            pushFollow(FOLLOW_33);
            rule__STForStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5"


    // $ANTLR start "rule__STForStatement__Group__5__Impl"
    // InternalSTCoreParser.g:4457:1: rule__STForStatement__Group__5__Impl : ( DO ) ;
    public final void rule__STForStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4461:1: ( ( DO ) )
            // InternalSTCoreParser.g:4462:1: ( DO )
            {
            // InternalSTCoreParser.g:4462:1: ( DO )
            // InternalSTCoreParser.g:4463:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getDOKeyword_5()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getDOKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5__Impl"


    // $ANTLR start "rule__STForStatement__Group__6"
    // InternalSTCoreParser.g:4472:1: rule__STForStatement__Group__6 : rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 ;
    public final void rule__STForStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4476:1: ( rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 )
            // InternalSTCoreParser.g:4477:2: rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7
            {
            pushFollow(FOLLOW_33);
            rule__STForStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6"


    // $ANTLR start "rule__STForStatement__Group__6__Impl"
    // InternalSTCoreParser.g:4484:1: rule__STForStatement__Group__6__Impl : ( ( rule__STForStatement__StatementsAssignment_6 )* ) ;
    public final void rule__STForStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4488:1: ( ( ( rule__STForStatement__StatementsAssignment_6 )* ) )
            // InternalSTCoreParser.g:4489:1: ( ( rule__STForStatement__StatementsAssignment_6 )* )
            {
            // InternalSTCoreParser.g:4489:1: ( ( rule__STForStatement__StatementsAssignment_6 )* )
            // InternalSTCoreParser.g:4490:2: ( rule__STForStatement__StatementsAssignment_6 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsAssignment_6()); 
            }
            // InternalSTCoreParser.g:4491:2: ( rule__STForStatement__StatementsAssignment_6 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==CONTINUE||(LA45_0>=REPEAT && LA45_0<=RETURN)||LA45_0==WHILE||LA45_0==CASE||LA45_0==EXIT||LA45_0==FOR||LA45_0==IF||LA45_0==Semicolon||LA45_0==RULE_ID) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalSTCoreParser.g:4491:3: rule__STForStatement__StatementsAssignment_6
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STForStatement__StatementsAssignment_6();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6__Impl"


    // $ANTLR start "rule__STForStatement__Group__7"
    // InternalSTCoreParser.g:4499:1: rule__STForStatement__Group__7 : rule__STForStatement__Group__7__Impl ;
    public final void rule__STForStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4503:1: ( rule__STForStatement__Group__7__Impl )
            // InternalSTCoreParser.g:4504:2: rule__STForStatement__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7"


    // $ANTLR start "rule__STForStatement__Group__7__Impl"
    // InternalSTCoreParser.g:4510:1: rule__STForStatement__Group__7__Impl : ( END_FOR ) ;
    public final void rule__STForStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4514:1: ( ( END_FOR ) )
            // InternalSTCoreParser.g:4515:1: ( END_FOR )
            {
            // InternalSTCoreParser.g:4515:1: ( END_FOR )
            // InternalSTCoreParser.g:4516:2: END_FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_7()); 
            }
            match(input,END_FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7__Impl"


    // $ANTLR start "rule__STForStatement__Group_4__0"
    // InternalSTCoreParser.g:4526:1: rule__STForStatement__Group_4__0 : rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1 ;
    public final void rule__STForStatement__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4530:1: ( rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1 )
            // InternalSTCoreParser.g:4531:2: rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1
            {
            pushFollow(FOLLOW_10);
            rule__STForStatement__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__0"


    // $ANTLR start "rule__STForStatement__Group_4__0__Impl"
    // InternalSTCoreParser.g:4538:1: rule__STForStatement__Group_4__0__Impl : ( BY ) ;
    public final void rule__STForStatement__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4542:1: ( ( BY ) )
            // InternalSTCoreParser.g:4543:1: ( BY )
            {
            // InternalSTCoreParser.g:4543:1: ( BY )
            // InternalSTCoreParser.g:4544:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBYKeyword_4_0()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBYKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__0__Impl"


    // $ANTLR start "rule__STForStatement__Group_4__1"
    // InternalSTCoreParser.g:4553:1: rule__STForStatement__Group_4__1 : rule__STForStatement__Group_4__1__Impl ;
    public final void rule__STForStatement__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4557:1: ( rule__STForStatement__Group_4__1__Impl )
            // InternalSTCoreParser.g:4558:2: rule__STForStatement__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__1"


    // $ANTLR start "rule__STForStatement__Group_4__1__Impl"
    // InternalSTCoreParser.g:4564:1: rule__STForStatement__Group_4__1__Impl : ( ( rule__STForStatement__ByAssignment_4_1 ) ) ;
    public final void rule__STForStatement__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4568:1: ( ( ( rule__STForStatement__ByAssignment_4_1 ) ) )
            // InternalSTCoreParser.g:4569:1: ( ( rule__STForStatement__ByAssignment_4_1 ) )
            {
            // InternalSTCoreParser.g:4569:1: ( ( rule__STForStatement__ByAssignment_4_1 ) )
            // InternalSTCoreParser.g:4570:2: ( rule__STForStatement__ByAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getByAssignment_4_1()); 
            }
            // InternalSTCoreParser.g:4571:2: ( rule__STForStatement__ByAssignment_4_1 )
            // InternalSTCoreParser.g:4571:3: rule__STForStatement__ByAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ByAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getByAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__0"
    // InternalSTCoreParser.g:4580:1: rule__STWhileStatement__Group__0 : rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 ;
    public final void rule__STWhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4584:1: ( rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 )
            // InternalSTCoreParser.g:4585:2: rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__STWhileStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0"


    // $ANTLR start "rule__STWhileStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4592:1: rule__STWhileStatement__Group__0__Impl : ( WHILE ) ;
    public final void rule__STWhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4596:1: ( ( WHILE ) )
            // InternalSTCoreParser.g:4597:1: ( WHILE )
            {
            // InternalSTCoreParser.g:4597:1: ( WHILE )
            // InternalSTCoreParser.g:4598:2: WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }
            match(input,WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__1"
    // InternalSTCoreParser.g:4607:1: rule__STWhileStatement__Group__1 : rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 ;
    public final void rule__STWhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4611:1: ( rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 )
            // InternalSTCoreParser.g:4612:2: rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__STWhileStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1"


    // $ANTLR start "rule__STWhileStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4619:1: rule__STWhileStatement__Group__1__Impl : ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STWhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4623:1: ( ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) )
            // InternalSTCoreParser.g:4624:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            {
            // InternalSTCoreParser.g:4624:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            // InternalSTCoreParser.g:4625:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTCoreParser.g:4626:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            // InternalSTCoreParser.g:4626:3: rule__STWhileStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__2"
    // InternalSTCoreParser.g:4634:1: rule__STWhileStatement__Group__2 : rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 ;
    public final void rule__STWhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4638:1: ( rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 )
            // InternalSTCoreParser.g:4639:2: rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__STWhileStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2"


    // $ANTLR start "rule__STWhileStatement__Group__2__Impl"
    // InternalSTCoreParser.g:4646:1: rule__STWhileStatement__Group__2__Impl : ( DO ) ;
    public final void rule__STWhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4650:1: ( ( DO ) )
            // InternalSTCoreParser.g:4651:1: ( DO )
            {
            // InternalSTCoreParser.g:4651:1: ( DO )
            // InternalSTCoreParser.g:4652:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__3"
    // InternalSTCoreParser.g:4661:1: rule__STWhileStatement__Group__3 : rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 ;
    public final void rule__STWhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4665:1: ( rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 )
            // InternalSTCoreParser.g:4666:2: rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4
            {
            pushFollow(FOLLOW_35);
            rule__STWhileStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3"


    // $ANTLR start "rule__STWhileStatement__Group__3__Impl"
    // InternalSTCoreParser.g:4673:1: rule__STWhileStatement__Group__3__Impl : ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STWhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4677:1: ( ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) )
            // InternalSTCoreParser.g:4678:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            {
            // InternalSTCoreParser.g:4678:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            // InternalSTCoreParser.g:4679:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTCoreParser.g:4680:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==CONTINUE||(LA46_0>=REPEAT && LA46_0<=RETURN)||LA46_0==WHILE||LA46_0==CASE||LA46_0==EXIT||LA46_0==FOR||LA46_0==IF||LA46_0==Semicolon||LA46_0==RULE_ID) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalSTCoreParser.g:4680:3: rule__STWhileStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STWhileStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__4"
    // InternalSTCoreParser.g:4688:1: rule__STWhileStatement__Group__4 : rule__STWhileStatement__Group__4__Impl ;
    public final void rule__STWhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4692:1: ( rule__STWhileStatement__Group__4__Impl )
            // InternalSTCoreParser.g:4693:2: rule__STWhileStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4"


    // $ANTLR start "rule__STWhileStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4699:1: rule__STWhileStatement__Group__4__Impl : ( END_WHILE ) ;
    public final void rule__STWhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4703:1: ( ( END_WHILE ) )
            // InternalSTCoreParser.g:4704:1: ( END_WHILE )
            {
            // InternalSTCoreParser.g:4704:1: ( END_WHILE )
            // InternalSTCoreParser.g:4705:2: END_WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }
            match(input,END_WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__0"
    // InternalSTCoreParser.g:4715:1: rule__STRepeatStatement__Group__0 : rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 ;
    public final void rule__STRepeatStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4719:1: ( rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 )
            // InternalSTCoreParser.g:4720:2: rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__STRepeatStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0"


    // $ANTLR start "rule__STRepeatStatement__Group__0__Impl"
    // InternalSTCoreParser.g:4727:1: rule__STRepeatStatement__Group__0__Impl : ( REPEAT ) ;
    public final void rule__STRepeatStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4731:1: ( ( REPEAT ) )
            // InternalSTCoreParser.g:4732:1: ( REPEAT )
            {
            // InternalSTCoreParser.g:4732:1: ( REPEAT )
            // InternalSTCoreParser.g:4733:2: REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }
            match(input,REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__1"
    // InternalSTCoreParser.g:4742:1: rule__STRepeatStatement__Group__1 : rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 ;
    public final void rule__STRepeatStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4746:1: ( rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 )
            // InternalSTCoreParser.g:4747:2: rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2
            {
            pushFollow(FOLLOW_36);
            rule__STRepeatStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1"


    // $ANTLR start "rule__STRepeatStatement__Group__1__Impl"
    // InternalSTCoreParser.g:4754:1: rule__STRepeatStatement__Group__1__Impl : ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) ;
    public final void rule__STRepeatStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4758:1: ( ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) )
            // InternalSTCoreParser.g:4759:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            {
            // InternalSTCoreParser.g:4759:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            // InternalSTCoreParser.g:4760:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }
            // InternalSTCoreParser.g:4761:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==CONTINUE||(LA47_0>=REPEAT && LA47_0<=RETURN)||LA47_0==WHILE||LA47_0==CASE||LA47_0==EXIT||LA47_0==FOR||LA47_0==IF||LA47_0==Semicolon||LA47_0==RULE_ID) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalSTCoreParser.g:4761:3: rule__STRepeatStatement__StatementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STRepeatStatement__StatementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__2"
    // InternalSTCoreParser.g:4769:1: rule__STRepeatStatement__Group__2 : rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 ;
    public final void rule__STRepeatStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4773:1: ( rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 )
            // InternalSTCoreParser.g:4774:2: rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__STRepeatStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2"


    // $ANTLR start "rule__STRepeatStatement__Group__2__Impl"
    // InternalSTCoreParser.g:4781:1: rule__STRepeatStatement__Group__2__Impl : ( UNTIL ) ;
    public final void rule__STRepeatStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4785:1: ( ( UNTIL ) )
            // InternalSTCoreParser.g:4786:1: ( UNTIL )
            {
            // InternalSTCoreParser.g:4786:1: ( UNTIL )
            // InternalSTCoreParser.g:4787:2: UNTIL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }
            match(input,UNTIL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__3"
    // InternalSTCoreParser.g:4796:1: rule__STRepeatStatement__Group__3 : rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 ;
    public final void rule__STRepeatStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4800:1: ( rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 )
            // InternalSTCoreParser.g:4801:2: rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4
            {
            pushFollow(FOLLOW_37);
            rule__STRepeatStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3"


    // $ANTLR start "rule__STRepeatStatement__Group__3__Impl"
    // InternalSTCoreParser.g:4808:1: rule__STRepeatStatement__Group__3__Impl : ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) ;
    public final void rule__STRepeatStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4812:1: ( ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) )
            // InternalSTCoreParser.g:4813:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            {
            // InternalSTCoreParser.g:4813:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            // InternalSTCoreParser.g:4814:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }
            // InternalSTCoreParser.g:4815:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            // InternalSTCoreParser.g:4815:3: rule__STRepeatStatement__ConditionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__ConditionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__4"
    // InternalSTCoreParser.g:4823:1: rule__STRepeatStatement__Group__4 : rule__STRepeatStatement__Group__4__Impl ;
    public final void rule__STRepeatStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4827:1: ( rule__STRepeatStatement__Group__4__Impl )
            // InternalSTCoreParser.g:4828:2: rule__STRepeatStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4"


    // $ANTLR start "rule__STRepeatStatement__Group__4__Impl"
    // InternalSTCoreParser.g:4834:1: rule__STRepeatStatement__Group__4__Impl : ( END_REPEAT ) ;
    public final void rule__STRepeatStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4838:1: ( ( END_REPEAT ) )
            // InternalSTCoreParser.g:4839:1: ( END_REPEAT )
            {
            // InternalSTCoreParser.g:4839:1: ( END_REPEAT )
            // InternalSTCoreParser.g:4840:2: END_REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }
            match(input,END_REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__0"
    // InternalSTCoreParser.g:4850:1: rule__STSubrangeExpression__Group__0 : rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 ;
    public final void rule__STSubrangeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4854:1: ( rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 )
            // InternalSTCoreParser.g:4855:2: rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__STSubrangeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0"


    // $ANTLR start "rule__STSubrangeExpression__Group__0__Impl"
    // InternalSTCoreParser.g:4862:1: rule__STSubrangeExpression__Group__0__Impl : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4866:1: ( ( ruleSTOrExpression ) )
            // InternalSTCoreParser.g:4867:1: ( ruleSTOrExpression )
            {
            // InternalSTCoreParser.g:4867:1: ( ruleSTOrExpression )
            // InternalSTCoreParser.g:4868:2: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__1"
    // InternalSTCoreParser.g:4877:1: rule__STSubrangeExpression__Group__1 : rule__STSubrangeExpression__Group__1__Impl ;
    public final void rule__STSubrangeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4881:1: ( rule__STSubrangeExpression__Group__1__Impl )
            // InternalSTCoreParser.g:4882:2: rule__STSubrangeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1"


    // $ANTLR start "rule__STSubrangeExpression__Group__1__Impl"
    // InternalSTCoreParser.g:4888:1: rule__STSubrangeExpression__Group__1__Impl : ( ( rule__STSubrangeExpression__Group_1__0 )* ) ;
    public final void rule__STSubrangeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4892:1: ( ( ( rule__STSubrangeExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:4893:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:4893:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:4894:2: ( rule__STSubrangeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:4895:2: ( rule__STSubrangeExpression__Group_1__0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==FullStopFullStop) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalSTCoreParser.g:4895:3: rule__STSubrangeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_39);
            	    rule__STSubrangeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0"
    // InternalSTCoreParser.g:4904:1: rule__STSubrangeExpression__Group_1__0 : rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 ;
    public final void rule__STSubrangeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4908:1: ( rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 )
            // InternalSTCoreParser.g:4909:2: rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STSubrangeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:4916:1: rule__STSubrangeExpression__Group_1__0__Impl : ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4920:1: ( ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:4921:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:4921:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:4922:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:4923:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:4923:3: rule__STSubrangeExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1"
    // InternalSTCoreParser.g:4931:1: rule__STSubrangeExpression__Group_1__1 : rule__STSubrangeExpression__Group_1__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4935:1: ( rule__STSubrangeExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:4936:2: rule__STSubrangeExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:4942:1: rule__STSubrangeExpression__Group_1__1__Impl : ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4946:1: ( ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:4947:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:4947:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:4948:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:4949:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:4949:3: rule__STSubrangeExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0"
    // InternalSTCoreParser.g:4958:1: rule__STSubrangeExpression__Group_1_0__0 : rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 ;
    public final void rule__STSubrangeExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4962:1: ( rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:4963:2: rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_38);
            rule__STSubrangeExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:4970:1: rule__STSubrangeExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STSubrangeExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4974:1: ( ( () ) )
            // InternalSTCoreParser.g:4975:1: ( () )
            {
            // InternalSTCoreParser.g:4975:1: ( () )
            // InternalSTCoreParser.g:4976:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:4977:2: ()
            // InternalSTCoreParser.g:4977:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1"
    // InternalSTCoreParser.g:4985:1: rule__STSubrangeExpression__Group_1_0__1 : rule__STSubrangeExpression__Group_1_0__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:4989:1: ( rule__STSubrangeExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:4990:2: rule__STSubrangeExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:4996:1: rule__STSubrangeExpression__Group_1_0__1__Impl : ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5000:1: ( ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5001:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5001:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5002:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5003:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5003:3: rule__STSubrangeExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group__0"
    // InternalSTCoreParser.g:5012:1: rule__STOrExpression__Group__0 : rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 ;
    public final void rule__STOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5016:1: ( rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 )
            // InternalSTCoreParser.g:5017:2: rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__STOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0"


    // $ANTLR start "rule__STOrExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5024:1: rule__STOrExpression__Group__0__Impl : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5028:1: ( ( ruleSTXorExpression ) )
            // InternalSTCoreParser.g:5029:1: ( ruleSTXorExpression )
            {
            // InternalSTCoreParser.g:5029:1: ( ruleSTXorExpression )
            // InternalSTCoreParser.g:5030:2: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group__1"
    // InternalSTCoreParser.g:5039:1: rule__STOrExpression__Group__1 : rule__STOrExpression__Group__1__Impl ;
    public final void rule__STOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5043:1: ( rule__STOrExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5044:2: rule__STOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1"


    // $ANTLR start "rule__STOrExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5050:1: rule__STOrExpression__Group__1__Impl : ( ( rule__STOrExpression__Group_1__0 )* ) ;
    public final void rule__STOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5054:1: ( ( ( rule__STOrExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5055:1: ( ( rule__STOrExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5055:1: ( ( rule__STOrExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5056:2: ( rule__STOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5057:2: ( rule__STOrExpression__Group_1__0 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==OR) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalSTCoreParser.g:5057:3: rule__STOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_41);
            	    rule__STOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__0"
    // InternalSTCoreParser.g:5066:1: rule__STOrExpression__Group_1__0 : rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 ;
    public final void rule__STOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5070:1: ( rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 )
            // InternalSTCoreParser.g:5071:2: rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0"


    // $ANTLR start "rule__STOrExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5078:1: rule__STOrExpression__Group_1__0__Impl : ( ( rule__STOrExpression__Group_1_0__0 ) ) ;
    public final void rule__STOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5082:1: ( ( ( rule__STOrExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5083:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5083:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5084:2: ( rule__STOrExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5085:2: ( rule__STOrExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5085:3: rule__STOrExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__1"
    // InternalSTCoreParser.g:5093:1: rule__STOrExpression__Group_1__1 : rule__STOrExpression__Group_1__1__Impl ;
    public final void rule__STOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5097:1: ( rule__STOrExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5098:2: rule__STOrExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1"


    // $ANTLR start "rule__STOrExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5104:1: rule__STOrExpression__Group_1__1__Impl : ( ( rule__STOrExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5108:1: ( ( ( rule__STOrExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5109:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5109:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5110:2: ( rule__STOrExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5111:2: ( rule__STOrExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5111:3: rule__STOrExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5120:1: rule__STOrExpression__Group_1_0__0 : rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 ;
    public final void rule__STOrExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5124:1: ( rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5125:2: rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_40);
            rule__STOrExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5132:1: rule__STOrExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STOrExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5136:1: ( ( () ) )
            // InternalSTCoreParser.g:5137:1: ( () )
            {
            // InternalSTCoreParser.g:5137:1: ( () )
            // InternalSTCoreParser.g:5138:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5139:2: ()
            // InternalSTCoreParser.g:5139:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5147:1: rule__STOrExpression__Group_1_0__1 : rule__STOrExpression__Group_1_0__1__Impl ;
    public final void rule__STOrExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5151:1: ( rule__STOrExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5152:2: rule__STOrExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5158:1: rule__STOrExpression__Group_1_0__1__Impl : ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STOrExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5162:1: ( ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5163:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5163:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5164:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5165:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5165:3: rule__STOrExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group__0"
    // InternalSTCoreParser.g:5174:1: rule__STXorExpression__Group__0 : rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 ;
    public final void rule__STXorExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5178:1: ( rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 )
            // InternalSTCoreParser.g:5179:2: rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__STXorExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0"


    // $ANTLR start "rule__STXorExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5186:1: rule__STXorExpression__Group__0__Impl : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5190:1: ( ( ruleSTAndExpression ) )
            // InternalSTCoreParser.g:5191:1: ( ruleSTAndExpression )
            {
            // InternalSTCoreParser.g:5191:1: ( ruleSTAndExpression )
            // InternalSTCoreParser.g:5192:2: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group__1"
    // InternalSTCoreParser.g:5201:1: rule__STXorExpression__Group__1 : rule__STXorExpression__Group__1__Impl ;
    public final void rule__STXorExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5205:1: ( rule__STXorExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5206:2: rule__STXorExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1"


    // $ANTLR start "rule__STXorExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5212:1: rule__STXorExpression__Group__1__Impl : ( ( rule__STXorExpression__Group_1__0 )* ) ;
    public final void rule__STXorExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5216:1: ( ( ( rule__STXorExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5217:1: ( ( rule__STXorExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5217:1: ( ( rule__STXorExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5218:2: ( rule__STXorExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5219:2: ( rule__STXorExpression__Group_1__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==XOR) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalSTCoreParser.g:5219:3: rule__STXorExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_43);
            	    rule__STXorExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__0"
    // InternalSTCoreParser.g:5228:1: rule__STXorExpression__Group_1__0 : rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 ;
    public final void rule__STXorExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5232:1: ( rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 )
            // InternalSTCoreParser.g:5233:2: rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STXorExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0"


    // $ANTLR start "rule__STXorExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5240:1: rule__STXorExpression__Group_1__0__Impl : ( ( rule__STXorExpression__Group_1_0__0 ) ) ;
    public final void rule__STXorExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5244:1: ( ( ( rule__STXorExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5245:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5245:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5246:2: ( rule__STXorExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5247:2: ( rule__STXorExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5247:3: rule__STXorExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__1"
    // InternalSTCoreParser.g:5255:1: rule__STXorExpression__Group_1__1 : rule__STXorExpression__Group_1__1__Impl ;
    public final void rule__STXorExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5259:1: ( rule__STXorExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5260:2: rule__STXorExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1"


    // $ANTLR start "rule__STXorExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5266:1: rule__STXorExpression__Group_1__1__Impl : ( ( rule__STXorExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STXorExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5270:1: ( ( ( rule__STXorExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5271:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5271:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5272:2: ( rule__STXorExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5273:2: ( rule__STXorExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5273:3: rule__STXorExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5282:1: rule__STXorExpression__Group_1_0__0 : rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 ;
    public final void rule__STXorExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5286:1: ( rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5287:2: rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_42);
            rule__STXorExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5294:1: rule__STXorExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STXorExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5298:1: ( ( () ) )
            // InternalSTCoreParser.g:5299:1: ( () )
            {
            // InternalSTCoreParser.g:5299:1: ( () )
            // InternalSTCoreParser.g:5300:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5301:2: ()
            // InternalSTCoreParser.g:5301:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5309:1: rule__STXorExpression__Group_1_0__1 : rule__STXorExpression__Group_1_0__1__Impl ;
    public final void rule__STXorExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5313:1: ( rule__STXorExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5314:2: rule__STXorExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5320:1: rule__STXorExpression__Group_1_0__1__Impl : ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STXorExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5324:1: ( ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5325:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5325:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5326:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5327:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5327:3: rule__STXorExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group__0"
    // InternalSTCoreParser.g:5336:1: rule__STAndExpression__Group__0 : rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 ;
    public final void rule__STAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5340:1: ( rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 )
            // InternalSTCoreParser.g:5341:2: rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1
            {
            pushFollow(FOLLOW_44);
            rule__STAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0"


    // $ANTLR start "rule__STAndExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5348:1: rule__STAndExpression__Group__0__Impl : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5352:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTCoreParser.g:5353:1: ( ruleSTEqualityExpression )
            {
            // InternalSTCoreParser.g:5353:1: ( ruleSTEqualityExpression )
            // InternalSTCoreParser.g:5354:2: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group__1"
    // InternalSTCoreParser.g:5363:1: rule__STAndExpression__Group__1 : rule__STAndExpression__Group__1__Impl ;
    public final void rule__STAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5367:1: ( rule__STAndExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5368:2: rule__STAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1"


    // $ANTLR start "rule__STAndExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5374:1: rule__STAndExpression__Group__1__Impl : ( ( rule__STAndExpression__Group_1__0 )* ) ;
    public final void rule__STAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5378:1: ( ( ( rule__STAndExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5379:1: ( ( rule__STAndExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5379:1: ( ( rule__STAndExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5380:2: ( rule__STAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5381:2: ( rule__STAndExpression__Group_1__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==AND||LA51_0==Ampersand) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalSTCoreParser.g:5381:3: rule__STAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_45);
            	    rule__STAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__0"
    // InternalSTCoreParser.g:5390:1: rule__STAndExpression__Group_1__0 : rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 ;
    public final void rule__STAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5394:1: ( rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 )
            // InternalSTCoreParser.g:5395:2: rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0"


    // $ANTLR start "rule__STAndExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5402:1: rule__STAndExpression__Group_1__0__Impl : ( ( rule__STAndExpression__Group_1_0__0 ) ) ;
    public final void rule__STAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5406:1: ( ( ( rule__STAndExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5407:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5407:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5408:2: ( rule__STAndExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5409:2: ( rule__STAndExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5409:3: rule__STAndExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__1"
    // InternalSTCoreParser.g:5417:1: rule__STAndExpression__Group_1__1 : rule__STAndExpression__Group_1__1__Impl ;
    public final void rule__STAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5421:1: ( rule__STAndExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5422:2: rule__STAndExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1"


    // $ANTLR start "rule__STAndExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5428:1: rule__STAndExpression__Group_1__1__Impl : ( ( rule__STAndExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5432:1: ( ( ( rule__STAndExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5433:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5433:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5434:2: ( rule__STAndExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5435:2: ( rule__STAndExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5435:3: rule__STAndExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5444:1: rule__STAndExpression__Group_1_0__0 : rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 ;
    public final void rule__STAndExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5448:1: ( rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5449:2: rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_44);
            rule__STAndExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5456:1: rule__STAndExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAndExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5460:1: ( ( () ) )
            // InternalSTCoreParser.g:5461:1: ( () )
            {
            // InternalSTCoreParser.g:5461:1: ( () )
            // InternalSTCoreParser.g:5462:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5463:2: ()
            // InternalSTCoreParser.g:5463:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5471:1: rule__STAndExpression__Group_1_0__1 : rule__STAndExpression__Group_1_0__1__Impl ;
    public final void rule__STAndExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5475:1: ( rule__STAndExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5476:2: rule__STAndExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5482:1: rule__STAndExpression__Group_1_0__1__Impl : ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAndExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5486:1: ( ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5487:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5487:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5488:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5489:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5489:3: rule__STAndExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__0"
    // InternalSTCoreParser.g:5498:1: rule__STEqualityExpression__Group__0 : rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 ;
    public final void rule__STEqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5502:1: ( rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 )
            // InternalSTCoreParser.g:5503:2: rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__STEqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0"


    // $ANTLR start "rule__STEqualityExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5510:1: rule__STEqualityExpression__Group__0__Impl : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5514:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTCoreParser.g:5515:1: ( ruleSTComparisonExpression )
            {
            // InternalSTCoreParser.g:5515:1: ( ruleSTComparisonExpression )
            // InternalSTCoreParser.g:5516:2: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__1"
    // InternalSTCoreParser.g:5525:1: rule__STEqualityExpression__Group__1 : rule__STEqualityExpression__Group__1__Impl ;
    public final void rule__STEqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5529:1: ( rule__STEqualityExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5530:2: rule__STEqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1"


    // $ANTLR start "rule__STEqualityExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5536:1: rule__STEqualityExpression__Group__1__Impl : ( ( rule__STEqualityExpression__Group_1__0 )* ) ;
    public final void rule__STEqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5540:1: ( ( ( rule__STEqualityExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5541:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5541:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5542:2: ( rule__STEqualityExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5543:2: ( rule__STEqualityExpression__Group_1__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==LessThanSignGreaterThanSign||LA52_0==EqualsSign) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalSTCoreParser.g:5543:3: rule__STEqualityExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_47);
            	    rule__STEqualityExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0"
    // InternalSTCoreParser.g:5552:1: rule__STEqualityExpression__Group_1__0 : rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 ;
    public final void rule__STEqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5556:1: ( rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 )
            // InternalSTCoreParser.g:5557:2: rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STEqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5564:1: rule__STEqualityExpression__Group_1__0__Impl : ( ( rule__STEqualityExpression__Group_1_0__0 ) ) ;
    public final void rule__STEqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5568:1: ( ( ( rule__STEqualityExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5569:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5569:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5570:2: ( rule__STEqualityExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5571:2: ( rule__STEqualityExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5571:3: rule__STEqualityExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1"
    // InternalSTCoreParser.g:5579:1: rule__STEqualityExpression__Group_1__1 : rule__STEqualityExpression__Group_1__1__Impl ;
    public final void rule__STEqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5583:1: ( rule__STEqualityExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5584:2: rule__STEqualityExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5590:1: rule__STEqualityExpression__Group_1__1__Impl : ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5594:1: ( ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5595:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5595:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5596:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5597:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5597:3: rule__STEqualityExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5606:1: rule__STEqualityExpression__Group_1_0__0 : rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 ;
    public final void rule__STEqualityExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5610:1: ( rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5611:2: rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_46);
            rule__STEqualityExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5618:1: rule__STEqualityExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STEqualityExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5622:1: ( ( () ) )
            // InternalSTCoreParser.g:5623:1: ( () )
            {
            // InternalSTCoreParser.g:5623:1: ( () )
            // InternalSTCoreParser.g:5624:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5625:2: ()
            // InternalSTCoreParser.g:5625:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5633:1: rule__STEqualityExpression__Group_1_0__1 : rule__STEqualityExpression__Group_1_0__1__Impl ;
    public final void rule__STEqualityExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5637:1: ( rule__STEqualityExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5638:2: rule__STEqualityExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5644:1: rule__STEqualityExpression__Group_1_0__1__Impl : ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5648:1: ( ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5649:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5649:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5650:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5651:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5651:3: rule__STEqualityExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__0"
    // InternalSTCoreParser.g:5660:1: rule__STComparisonExpression__Group__0 : rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 ;
    public final void rule__STComparisonExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5664:1: ( rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 )
            // InternalSTCoreParser.g:5665:2: rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__STComparisonExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0"


    // $ANTLR start "rule__STComparisonExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5672:1: rule__STComparisonExpression__Group__0__Impl : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5676:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTCoreParser.g:5677:1: ( ruleSTAddSubExpression )
            {
            // InternalSTCoreParser.g:5677:1: ( ruleSTAddSubExpression )
            // InternalSTCoreParser.g:5678:2: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__1"
    // InternalSTCoreParser.g:5687:1: rule__STComparisonExpression__Group__1 : rule__STComparisonExpression__Group__1__Impl ;
    public final void rule__STComparisonExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5691:1: ( rule__STComparisonExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5692:2: rule__STComparisonExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1"


    // $ANTLR start "rule__STComparisonExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5698:1: rule__STComparisonExpression__Group__1__Impl : ( ( rule__STComparisonExpression__Group_1__0 )* ) ;
    public final void rule__STComparisonExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5702:1: ( ( ( rule__STComparisonExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5703:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5703:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5704:2: ( rule__STComparisonExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5705:2: ( rule__STComparisonExpression__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==LessThanSignEqualsSign||LA53_0==GreaterThanSignEqualsSign||LA53_0==LessThanSign||LA53_0==GreaterThanSign) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalSTCoreParser.g:5705:3: rule__STComparisonExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_49);
            	    rule__STComparisonExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0"
    // InternalSTCoreParser.g:5714:1: rule__STComparisonExpression__Group_1__0 : rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 ;
    public final void rule__STComparisonExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5718:1: ( rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 )
            // InternalSTCoreParser.g:5719:2: rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STComparisonExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5726:1: rule__STComparisonExpression__Group_1__0__Impl : ( ( rule__STComparisonExpression__Group_1_0__0 ) ) ;
    public final void rule__STComparisonExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5730:1: ( ( ( rule__STComparisonExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5731:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5731:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5732:2: ( rule__STComparisonExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5733:2: ( rule__STComparisonExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5733:3: rule__STComparisonExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1"
    // InternalSTCoreParser.g:5741:1: rule__STComparisonExpression__Group_1__1 : rule__STComparisonExpression__Group_1__1__Impl ;
    public final void rule__STComparisonExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5745:1: ( rule__STComparisonExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5746:2: rule__STComparisonExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5752:1: rule__STComparisonExpression__Group_1__1__Impl : ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5756:1: ( ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5757:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5757:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5758:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5759:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5759:3: rule__STComparisonExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5768:1: rule__STComparisonExpression__Group_1_0__0 : rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 ;
    public final void rule__STComparisonExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5772:1: ( rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5773:2: rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_48);
            rule__STComparisonExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5780:1: rule__STComparisonExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STComparisonExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5784:1: ( ( () ) )
            // InternalSTCoreParser.g:5785:1: ( () )
            {
            // InternalSTCoreParser.g:5785:1: ( () )
            // InternalSTCoreParser.g:5786:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5787:2: ()
            // InternalSTCoreParser.g:5787:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5795:1: rule__STComparisonExpression__Group_1_0__1 : rule__STComparisonExpression__Group_1_0__1__Impl ;
    public final void rule__STComparisonExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5799:1: ( rule__STComparisonExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5800:2: rule__STComparisonExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5806:1: rule__STComparisonExpression__Group_1_0__1__Impl : ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5810:1: ( ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5811:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5811:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5812:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5813:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5813:3: rule__STComparisonExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__0"
    // InternalSTCoreParser.g:5822:1: rule__STAddSubExpression__Group__0 : rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 ;
    public final void rule__STAddSubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5826:1: ( rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 )
            // InternalSTCoreParser.g:5827:2: rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__STAddSubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0"


    // $ANTLR start "rule__STAddSubExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5834:1: rule__STAddSubExpression__Group__0__Impl : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5838:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTCoreParser.g:5839:1: ( ruleSTMulDivModExpression )
            {
            // InternalSTCoreParser.g:5839:1: ( ruleSTMulDivModExpression )
            // InternalSTCoreParser.g:5840:2: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__1"
    // InternalSTCoreParser.g:5849:1: rule__STAddSubExpression__Group__1 : rule__STAddSubExpression__Group__1__Impl ;
    public final void rule__STAddSubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5853:1: ( rule__STAddSubExpression__Group__1__Impl )
            // InternalSTCoreParser.g:5854:2: rule__STAddSubExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1"


    // $ANTLR start "rule__STAddSubExpression__Group__1__Impl"
    // InternalSTCoreParser.g:5860:1: rule__STAddSubExpression__Group__1__Impl : ( ( rule__STAddSubExpression__Group_1__0 )* ) ;
    public final void rule__STAddSubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5864:1: ( ( ( rule__STAddSubExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:5865:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:5865:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:5866:2: ( rule__STAddSubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:5867:2: ( rule__STAddSubExpression__Group_1__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==PlusSign||LA54_0==HyphenMinus) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalSTCoreParser.g:5867:3: rule__STAddSubExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_51);
            	    rule__STAddSubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0"
    // InternalSTCoreParser.g:5876:1: rule__STAddSubExpression__Group_1__0 : rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 ;
    public final void rule__STAddSubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5880:1: ( rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 )
            // InternalSTCoreParser.g:5881:2: rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STAddSubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:5888:1: rule__STAddSubExpression__Group_1__0__Impl : ( ( rule__STAddSubExpression__Group_1_0__0 ) ) ;
    public final void rule__STAddSubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5892:1: ( ( ( rule__STAddSubExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:5893:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:5893:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:5894:2: ( rule__STAddSubExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:5895:2: ( rule__STAddSubExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:5895:3: rule__STAddSubExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1"
    // InternalSTCoreParser.g:5903:1: rule__STAddSubExpression__Group_1__1 : rule__STAddSubExpression__Group_1__1__Impl ;
    public final void rule__STAddSubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5907:1: ( rule__STAddSubExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:5908:2: rule__STAddSubExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:5914:1: rule__STAddSubExpression__Group_1__1__Impl : ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5918:1: ( ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:5919:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:5919:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:5920:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:5921:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:5921:3: rule__STAddSubExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0"
    // InternalSTCoreParser.g:5930:1: rule__STAddSubExpression__Group_1_0__0 : rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 ;
    public final void rule__STAddSubExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5934:1: ( rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:5935:2: rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_50);
            rule__STAddSubExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:5942:1: rule__STAddSubExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAddSubExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5946:1: ( ( () ) )
            // InternalSTCoreParser.g:5947:1: ( () )
            {
            // InternalSTCoreParser.g:5947:1: ( () )
            // InternalSTCoreParser.g:5948:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:5949:2: ()
            // InternalSTCoreParser.g:5949:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1"
    // InternalSTCoreParser.g:5957:1: rule__STAddSubExpression__Group_1_0__1 : rule__STAddSubExpression__Group_1_0__1__Impl ;
    public final void rule__STAddSubExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5961:1: ( rule__STAddSubExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:5962:2: rule__STAddSubExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:5968:1: rule__STAddSubExpression__Group_1_0__1__Impl : ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5972:1: ( ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:5973:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:5973:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:5974:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:5975:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:5975:3: rule__STAddSubExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__0"
    // InternalSTCoreParser.g:5984:1: rule__STMulDivModExpression__Group__0 : rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 ;
    public final void rule__STMulDivModExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:5988:1: ( rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 )
            // InternalSTCoreParser.g:5989:2: rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__STMulDivModExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0"


    // $ANTLR start "rule__STMulDivModExpression__Group__0__Impl"
    // InternalSTCoreParser.g:5996:1: rule__STMulDivModExpression__Group__0__Impl : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6000:1: ( ( ruleSTPowerExpression ) )
            // InternalSTCoreParser.g:6001:1: ( ruleSTPowerExpression )
            {
            // InternalSTCoreParser.g:6001:1: ( ruleSTPowerExpression )
            // InternalSTCoreParser.g:6002:2: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__1"
    // InternalSTCoreParser.g:6011:1: rule__STMulDivModExpression__Group__1 : rule__STMulDivModExpression__Group__1__Impl ;
    public final void rule__STMulDivModExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6015:1: ( rule__STMulDivModExpression__Group__1__Impl )
            // InternalSTCoreParser.g:6016:2: rule__STMulDivModExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1"


    // $ANTLR start "rule__STMulDivModExpression__Group__1__Impl"
    // InternalSTCoreParser.g:6022:1: rule__STMulDivModExpression__Group__1__Impl : ( ( rule__STMulDivModExpression__Group_1__0 )* ) ;
    public final void rule__STMulDivModExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6026:1: ( ( ( rule__STMulDivModExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:6027:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:6027:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:6028:2: ( rule__STMulDivModExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:6029:2: ( rule__STMulDivModExpression__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==MOD||LA55_0==Asterisk||LA55_0==Solidus) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalSTCoreParser.g:6029:3: rule__STMulDivModExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_53);
            	    rule__STMulDivModExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0"
    // InternalSTCoreParser.g:6038:1: rule__STMulDivModExpression__Group_1__0 : rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 ;
    public final void rule__STMulDivModExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6042:1: ( rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 )
            // InternalSTCoreParser.g:6043:2: rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STMulDivModExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:6050:1: rule__STMulDivModExpression__Group_1__0__Impl : ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6054:1: ( ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:6055:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:6055:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:6056:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:6057:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:6057:3: rule__STMulDivModExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1"
    // InternalSTCoreParser.g:6065:1: rule__STMulDivModExpression__Group_1__1 : rule__STMulDivModExpression__Group_1__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6069:1: ( rule__STMulDivModExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:6070:2: rule__STMulDivModExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:6076:1: rule__STMulDivModExpression__Group_1__1__Impl : ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6080:1: ( ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:6081:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:6081:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:6082:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:6083:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:6083:3: rule__STMulDivModExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0"
    // InternalSTCoreParser.g:6092:1: rule__STMulDivModExpression__Group_1_0__0 : rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 ;
    public final void rule__STMulDivModExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6096:1: ( rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:6097:2: rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_52);
            rule__STMulDivModExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:6104:1: rule__STMulDivModExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STMulDivModExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6108:1: ( ( () ) )
            // InternalSTCoreParser.g:6109:1: ( () )
            {
            // InternalSTCoreParser.g:6109:1: ( () )
            // InternalSTCoreParser.g:6110:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:6111:2: ()
            // InternalSTCoreParser.g:6111:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1"
    // InternalSTCoreParser.g:6119:1: rule__STMulDivModExpression__Group_1_0__1 : rule__STMulDivModExpression__Group_1_0__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6123:1: ( rule__STMulDivModExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:6124:2: rule__STMulDivModExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:6130:1: rule__STMulDivModExpression__Group_1_0__1__Impl : ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6134:1: ( ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:6135:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6135:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:6136:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:6137:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:6137:3: rule__STMulDivModExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__0"
    // InternalSTCoreParser.g:6146:1: rule__STPowerExpression__Group__0 : rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 ;
    public final void rule__STPowerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6150:1: ( rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 )
            // InternalSTCoreParser.g:6151:2: rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__STPowerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0"


    // $ANTLR start "rule__STPowerExpression__Group__0__Impl"
    // InternalSTCoreParser.g:6158:1: rule__STPowerExpression__Group__0__Impl : ( ruleSTSignumExpression ) ;
    public final void rule__STPowerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6162:1: ( ( ruleSTSignumExpression ) )
            // InternalSTCoreParser.g:6163:1: ( ruleSTSignumExpression )
            {
            // InternalSTCoreParser.g:6163:1: ( ruleSTSignumExpression )
            // InternalSTCoreParser.g:6164:2: ruleSTSignumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTSignumExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTSignumExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__1"
    // InternalSTCoreParser.g:6173:1: rule__STPowerExpression__Group__1 : rule__STPowerExpression__Group__1__Impl ;
    public final void rule__STPowerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6177:1: ( rule__STPowerExpression__Group__1__Impl )
            // InternalSTCoreParser.g:6178:2: rule__STPowerExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1"


    // $ANTLR start "rule__STPowerExpression__Group__1__Impl"
    // InternalSTCoreParser.g:6184:1: rule__STPowerExpression__Group__1__Impl : ( ( rule__STPowerExpression__Group_1__0 )* ) ;
    public final void rule__STPowerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6188:1: ( ( ( rule__STPowerExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:6189:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:6189:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:6190:2: ( rule__STPowerExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:6191:2: ( rule__STPowerExpression__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==AsteriskAsterisk) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalSTCoreParser.g:6191:3: rule__STPowerExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_55);
            	    rule__STPowerExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__0"
    // InternalSTCoreParser.g:6200:1: rule__STPowerExpression__Group_1__0 : rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 ;
    public final void rule__STPowerExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6204:1: ( rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 )
            // InternalSTCoreParser.g:6205:2: rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STPowerExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0"


    // $ANTLR start "rule__STPowerExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:6212:1: rule__STPowerExpression__Group_1__0__Impl : ( ( rule__STPowerExpression__Group_1_0__0 ) ) ;
    public final void rule__STPowerExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6216:1: ( ( ( rule__STPowerExpression__Group_1_0__0 ) ) )
            // InternalSTCoreParser.g:6217:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            {
            // InternalSTCoreParser.g:6217:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            // InternalSTCoreParser.g:6218:2: ( rule__STPowerExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTCoreParser.g:6219:2: ( rule__STPowerExpression__Group_1_0__0 )
            // InternalSTCoreParser.g:6219:3: rule__STPowerExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__1"
    // InternalSTCoreParser.g:6227:1: rule__STPowerExpression__Group_1__1 : rule__STPowerExpression__Group_1__1__Impl ;
    public final void rule__STPowerExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6231:1: ( rule__STPowerExpression__Group_1__1__Impl )
            // InternalSTCoreParser.g:6232:2: rule__STPowerExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1"


    // $ANTLR start "rule__STPowerExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:6238:1: rule__STPowerExpression__Group_1__1__Impl : ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STPowerExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6242:1: ( ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:6243:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:6243:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            // InternalSTCoreParser.g:6244:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:6245:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            // InternalSTCoreParser.g:6245:3: rule__STPowerExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0"
    // InternalSTCoreParser.g:6254:1: rule__STPowerExpression__Group_1_0__0 : rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 ;
    public final void rule__STPowerExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6258:1: ( rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 )
            // InternalSTCoreParser.g:6259:2: rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_54);
            rule__STPowerExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0__Impl"
    // InternalSTCoreParser.g:6266:1: rule__STPowerExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STPowerExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6270:1: ( ( () ) )
            // InternalSTCoreParser.g:6271:1: ( () )
            {
            // InternalSTCoreParser.g:6271:1: ( () )
            // InternalSTCoreParser.g:6272:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTCoreParser.g:6273:2: ()
            // InternalSTCoreParser.g:6273:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1"
    // InternalSTCoreParser.g:6281:1: rule__STPowerExpression__Group_1_0__1 : rule__STPowerExpression__Group_1_0__1__Impl ;
    public final void rule__STPowerExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6285:1: ( rule__STPowerExpression__Group_1_0__1__Impl )
            // InternalSTCoreParser.g:6286:2: rule__STPowerExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1__Impl"
    // InternalSTCoreParser.g:6292:1: rule__STPowerExpression__Group_1_0__1__Impl : ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STPowerExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6296:1: ( ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTCoreParser.g:6297:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6297:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            // InternalSTCoreParser.g:6298:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTCoreParser.g:6299:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            // InternalSTCoreParser.g:6299:3: rule__STPowerExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__0"
    // InternalSTCoreParser.g:6308:1: rule__STSignumExpression__Group_2__0 : rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1 ;
    public final void rule__STSignumExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6312:1: ( rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1 )
            // InternalSTCoreParser.g:6313:2: rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1
            {
            pushFollow(FOLLOW_10);
            rule__STSignumExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__0"


    // $ANTLR start "rule__STSignumExpression__Group_2__0__Impl"
    // InternalSTCoreParser.g:6320:1: rule__STSignumExpression__Group_2__0__Impl : ( () ) ;
    public final void rule__STSignumExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6324:1: ( ( () ) )
            // InternalSTCoreParser.g:6325:1: ( () )
            {
            // InternalSTCoreParser.g:6325:1: ( () )
            // InternalSTCoreParser.g:6326:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getSTUnaryExpressionAction_2_0()); 
            }
            // InternalSTCoreParser.g:6327:2: ()
            // InternalSTCoreParser.g:6327:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getSTUnaryExpressionAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__1"
    // InternalSTCoreParser.g:6335:1: rule__STSignumExpression__Group_2__1 : rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2 ;
    public final void rule__STSignumExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6339:1: ( rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2 )
            // InternalSTCoreParser.g:6340:2: rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2
            {
            pushFollow(FOLLOW_56);
            rule__STSignumExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__1"


    // $ANTLR start "rule__STSignumExpression__Group_2__1__Impl"
    // InternalSTCoreParser.g:6347:1: rule__STSignumExpression__Group_2__1__Impl : ( ( rule__STSignumExpression__OpAssignment_2_1 ) ) ;
    public final void rule__STSignumExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6351:1: ( ( ( rule__STSignumExpression__OpAssignment_2_1 ) ) )
            // InternalSTCoreParser.g:6352:1: ( ( rule__STSignumExpression__OpAssignment_2_1 ) )
            {
            // InternalSTCoreParser.g:6352:1: ( ( rule__STSignumExpression__OpAssignment_2_1 ) )
            // InternalSTCoreParser.g:6353:2: ( rule__STSignumExpression__OpAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getOpAssignment_2_1()); 
            }
            // InternalSTCoreParser.g:6354:2: ( rule__STSignumExpression__OpAssignment_2_1 )
            // InternalSTCoreParser.g:6354:3: rule__STSignumExpression__OpAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__OpAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getOpAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__2"
    // InternalSTCoreParser.g:6362:1: rule__STSignumExpression__Group_2__2 : rule__STSignumExpression__Group_2__2__Impl ;
    public final void rule__STSignumExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6366:1: ( rule__STSignumExpression__Group_2__2__Impl )
            // InternalSTCoreParser.g:6367:2: rule__STSignumExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__2"


    // $ANTLR start "rule__STSignumExpression__Group_2__2__Impl"
    // InternalSTCoreParser.g:6373:1: rule__STSignumExpression__Group_2__2__Impl : ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) ) ;
    public final void rule__STSignumExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6377:1: ( ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) ) )
            // InternalSTCoreParser.g:6378:1: ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) )
            {
            // InternalSTCoreParser.g:6378:1: ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) )
            // InternalSTCoreParser.g:6379:2: ( rule__STSignumExpression__ExpressionAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getExpressionAssignment_2_2()); 
            }
            // InternalSTCoreParser.g:6380:2: ( rule__STSignumExpression__ExpressionAssignment_2_2 )
            // InternalSTCoreParser.g:6380:3: rule__STSignumExpression__ExpressionAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__ExpressionAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getExpressionAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group__0"
    // InternalSTCoreParser.g:6389:1: rule__STSelectionExpression__Group__0 : rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1 ;
    public final void rule__STSelectionExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6393:1: ( rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1 )
            // InternalSTCoreParser.g:6394:2: rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__STSelectionExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__0"


    // $ANTLR start "rule__STSelectionExpression__Group__0__Impl"
    // InternalSTCoreParser.g:6401:1: rule__STSelectionExpression__Group__0__Impl : ( ruleSTAtomicExpression ) ;
    public final void rule__STSelectionExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6405:1: ( ( ruleSTAtomicExpression ) )
            // InternalSTCoreParser.g:6406:1: ( ruleSTAtomicExpression )
            {
            // InternalSTCoreParser.g:6406:1: ( ruleSTAtomicExpression )
            // InternalSTCoreParser.g:6407:2: ruleSTAtomicExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getSTAtomicExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAtomicExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getSTAtomicExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group__1"
    // InternalSTCoreParser.g:6416:1: rule__STSelectionExpression__Group__1 : rule__STSelectionExpression__Group__1__Impl ;
    public final void rule__STSelectionExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6420:1: ( rule__STSelectionExpression__Group__1__Impl )
            // InternalSTCoreParser.g:6421:2: rule__STSelectionExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__1"


    // $ANTLR start "rule__STSelectionExpression__Group__1__Impl"
    // InternalSTCoreParser.g:6427:1: rule__STSelectionExpression__Group__1__Impl : ( ( rule__STSelectionExpression__Group_1__0 )* ) ;
    public final void rule__STSelectionExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6431:1: ( ( ( rule__STSelectionExpression__Group_1__0 )* ) )
            // InternalSTCoreParser.g:6432:1: ( ( rule__STSelectionExpression__Group_1__0 )* )
            {
            // InternalSTCoreParser.g:6432:1: ( ( rule__STSelectionExpression__Group_1__0 )* )
            // InternalSTCoreParser.g:6433:2: ( rule__STSelectionExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1()); 
            }
            // InternalSTCoreParser.g:6434:2: ( rule__STSelectionExpression__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==FullStop||LA57_0==LeftSquareBracket) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalSTCoreParser.g:6434:3: rule__STSelectionExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_58);
            	    rule__STSelectionExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__0"
    // InternalSTCoreParser.g:6443:1: rule__STSelectionExpression__Group_1__0 : rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1 ;
    public final void rule__STSelectionExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6447:1: ( rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1 )
            // InternalSTCoreParser.g:6448:2: rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1
            {
            pushFollow(FOLLOW_57);
            rule__STSelectionExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:6455:1: rule__STSelectionExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STSelectionExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6459:1: ( ( () ) )
            // InternalSTCoreParser.g:6460:1: ( () )
            {
            // InternalSTCoreParser.g:6460:1: ( () )
            // InternalSTCoreParser.g:6461:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getSTMemberSelectionReceiverAction_1_0()); 
            }
            // InternalSTCoreParser.g:6462:2: ()
            // InternalSTCoreParser.g:6462:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getSTMemberSelectionReceiverAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__1"
    // InternalSTCoreParser.g:6470:1: rule__STSelectionExpression__Group_1__1 : rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2 ;
    public final void rule__STSelectionExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6474:1: ( rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2 )
            // InternalSTCoreParser.g:6475:2: rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2
            {
            pushFollow(FOLLOW_59);
            rule__STSelectionExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:6482:1: rule__STSelectionExpression__Group_1__1__Impl : ( ( rule__STSelectionExpression__Alternatives_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6486:1: ( ( ( rule__STSelectionExpression__Alternatives_1_1 ) ) )
            // InternalSTCoreParser.g:6487:1: ( ( rule__STSelectionExpression__Alternatives_1_1 ) )
            {
            // InternalSTCoreParser.g:6487:1: ( ( rule__STSelectionExpression__Alternatives_1_1 ) )
            // InternalSTCoreParser.g:6488:2: ( rule__STSelectionExpression__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getAlternatives_1_1()); 
            }
            // InternalSTCoreParser.g:6489:2: ( rule__STSelectionExpression__Alternatives_1_1 )
            // InternalSTCoreParser.g:6489:3: rule__STSelectionExpression__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__2"
    // InternalSTCoreParser.g:6497:1: rule__STSelectionExpression__Group_1__2 : rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3 ;
    public final void rule__STSelectionExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6501:1: ( rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3 )
            // InternalSTCoreParser.g:6502:2: rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3
            {
            pushFollow(FOLLOW_59);
            rule__STSelectionExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1__2__Impl"
    // InternalSTCoreParser.g:6509:1: rule__STSelectionExpression__Group_1__2__Impl : ( ( rule__STSelectionExpression__Group_1_2__0 )? ) ;
    public final void rule__STSelectionExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6513:1: ( ( ( rule__STSelectionExpression__Group_1_2__0 )? ) )
            // InternalSTCoreParser.g:6514:1: ( ( rule__STSelectionExpression__Group_1_2__0 )? )
            {
            // InternalSTCoreParser.g:6514:1: ( ( rule__STSelectionExpression__Group_1_2__0 )? )
            // InternalSTCoreParser.g:6515:2: ( rule__STSelectionExpression__Group_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2()); 
            }
            // InternalSTCoreParser.g:6516:2: ( rule__STSelectionExpression__Group_1_2__0 )?
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalSTCoreParser.g:6516:3: rule__STSelectionExpression__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__3"
    // InternalSTCoreParser.g:6524:1: rule__STSelectionExpression__Group_1__3 : rule__STSelectionExpression__Group_1__3__Impl ;
    public final void rule__STSelectionExpression__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6528:1: ( rule__STSelectionExpression__Group_1__3__Impl )
            // InternalSTCoreParser.g:6529:2: rule__STSelectionExpression__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__3"


    // $ANTLR start "rule__STSelectionExpression__Group_1__3__Impl"
    // InternalSTCoreParser.g:6535:1: rule__STSelectionExpression__Group_1__3__Impl : ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? ) ;
    public final void rule__STSelectionExpression__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6539:1: ( ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? ) )
            // InternalSTCoreParser.g:6540:1: ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? )
            {
            // InternalSTCoreParser.g:6540:1: ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? )
            // InternalSTCoreParser.g:6541:2: ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorAssignment_1_3()); 
            }
            // InternalSTCoreParser.g:6542:2: ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=B && LA59_0<=X)) ) {
                alt59=1;
            }
            else if ( (LA59_0==FullStop) ) {
                int LA59_2 = input.LA(2);

                if ( (LA59_2==RULE_INT) ) {
                    alt59=1;
                }
            }
            switch (alt59) {
                case 1 :
                    // InternalSTCoreParser.g:6542:3: rule__STSelectionExpression__BitaccessorAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__BitaccessorAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__3__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__0"
    // InternalSTCoreParser.g:6551:1: rule__STSelectionExpression__Group_1_1_0__0 : rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1 ;
    public final void rule__STSelectionExpression__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6555:1: ( rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1 )
            // InternalSTCoreParser.g:6556:2: rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__STSelectionExpression__Group_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__0__Impl"
    // InternalSTCoreParser.g:6563:1: rule__STSelectionExpression__Group_1_1_0__0__Impl : ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6567:1: ( ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) ) )
            // InternalSTCoreParser.g:6568:1: ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) )
            {
            // InternalSTCoreParser.g:6568:1: ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) )
            // InternalSTCoreParser.g:6569:2: ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessAssignment_1_1_0_0()); 
            }
            // InternalSTCoreParser.g:6570:2: ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 )
            // InternalSTCoreParser.g:6570:3: rule__STSelectionExpression__StructAccessAssignment_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__StructAccessAssignment_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessAssignment_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__1"
    // InternalSTCoreParser.g:6578:1: rule__STSelectionExpression__Group_1_1_0__1 : rule__STSelectionExpression__Group_1_1_0__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6582:1: ( rule__STSelectionExpression__Group_1_1_0__1__Impl )
            // InternalSTCoreParser.g:6583:2: rule__STSelectionExpression__Group_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__1__Impl"
    // InternalSTCoreParser.g:6589:1: rule__STSelectionExpression__Group_1_1_0__1__Impl : ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6593:1: ( ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) ) )
            // InternalSTCoreParser.g:6594:1: ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) )
            {
            // InternalSTCoreParser.g:6594:1: ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) )
            // InternalSTCoreParser.g:6595:2: ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberAssignment_1_1_0_1()); 
            }
            // InternalSTCoreParser.g:6596:2: ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 )
            // InternalSTCoreParser.g:6596:3: rule__STSelectionExpression__MemberAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__MemberAssignment_1_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberAssignment_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__0"
    // InternalSTCoreParser.g:6605:1: rule__STSelectionExpression__Group_1_1_1__0 : rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1 ;
    public final void rule__STSelectionExpression__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6609:1: ( rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1 )
            // InternalSTCoreParser.g:6610:2: rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STSelectionExpression__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__0__Impl"
    // InternalSTCoreParser.g:6617:1: rule__STSelectionExpression__Group_1_1_1__0__Impl : ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6621:1: ( ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) ) )
            // InternalSTCoreParser.g:6622:1: ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) )
            {
            // InternalSTCoreParser.g:6622:1: ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) )
            // InternalSTCoreParser.g:6623:2: ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessAssignment_1_1_1_0()); 
            }
            // InternalSTCoreParser.g:6624:2: ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 )
            // InternalSTCoreParser.g:6624:3: rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessAssignment_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__1"
    // InternalSTCoreParser.g:6632:1: rule__STSelectionExpression__Group_1_1_1__1 : rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2 ;
    public final void rule__STSelectionExpression__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6636:1: ( rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2 )
            // InternalSTCoreParser.g:6637:2: rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2
            {
            pushFollow(FOLLOW_11);
            rule__STSelectionExpression__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__1__Impl"
    // InternalSTCoreParser.g:6644:1: rule__STSelectionExpression__Group_1_1_1__1__Impl : ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6648:1: ( ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) ) )
            // InternalSTCoreParser.g:6649:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) )
            {
            // InternalSTCoreParser.g:6649:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) )
            // InternalSTCoreParser.g:6650:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_1()); 
            }
            // InternalSTCoreParser.g:6651:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 )
            // InternalSTCoreParser.g:6651:3: rule__STSelectionExpression__IndexAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__IndexAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__2"
    // InternalSTCoreParser.g:6659:1: rule__STSelectionExpression__Group_1_1_1__2 : rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3 ;
    public final void rule__STSelectionExpression__Group_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6663:1: ( rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3 )
            // InternalSTCoreParser.g:6664:2: rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3
            {
            pushFollow(FOLLOW_11);
            rule__STSelectionExpression__Group_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__2__Impl"
    // InternalSTCoreParser.g:6671:1: rule__STSelectionExpression__Group_1_1_1__2__Impl : ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6675:1: ( ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* ) )
            // InternalSTCoreParser.g:6676:1: ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* )
            {
            // InternalSTCoreParser.g:6676:1: ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* )
            // InternalSTCoreParser.g:6677:2: ( rule__STSelectionExpression__Group_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1_2()); 
            }
            // InternalSTCoreParser.g:6678:2: ( rule__STSelectionExpression__Group_1_1_1_2__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==Comma) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalSTCoreParser.g:6678:3: rule__STSelectionExpression__Group_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STSelectionExpression__Group_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__3"
    // InternalSTCoreParser.g:6686:1: rule__STSelectionExpression__Group_1_1_1__3 : rule__STSelectionExpression__Group_1_1_1__3__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6690:1: ( rule__STSelectionExpression__Group_1_1_1__3__Impl )
            // InternalSTCoreParser.g:6691:2: rule__STSelectionExpression__Group_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__3"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__3__Impl"
    // InternalSTCoreParser.g:6697:1: rule__STSelectionExpression__Group_1_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6701:1: ( ( RightSquareBracket ) )
            // InternalSTCoreParser.g:6702:1: ( RightSquareBracket )
            {
            // InternalSTCoreParser.g:6702:1: ( RightSquareBracket )
            // InternalSTCoreParser.g:6703:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__3__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__0"
    // InternalSTCoreParser.g:6713:1: rule__STSelectionExpression__Group_1_1_1_2__0 : rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1 ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6717:1: ( rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1 )
            // InternalSTCoreParser.g:6718:2: rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1
            {
            pushFollow(FOLLOW_10);
            rule__STSelectionExpression__Group_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__0__Impl"
    // InternalSTCoreParser.g:6725:1: rule__STSelectionExpression__Group_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6729:1: ( ( Comma ) )
            // InternalSTCoreParser.g:6730:1: ( Comma )
            {
            // InternalSTCoreParser.g:6730:1: ( Comma )
            // InternalSTCoreParser.g:6731:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__1"
    // InternalSTCoreParser.g:6740:1: rule__STSelectionExpression__Group_1_1_1_2__1 : rule__STSelectionExpression__Group_1_1_1_2__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6744:1: ( rule__STSelectionExpression__Group_1_1_1_2__1__Impl )
            // InternalSTCoreParser.g:6745:2: rule__STSelectionExpression__Group_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__1__Impl"
    // InternalSTCoreParser.g:6751:1: rule__STSelectionExpression__Group_1_1_1_2__1__Impl : ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6755:1: ( ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) ) )
            // InternalSTCoreParser.g:6756:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) )
            {
            // InternalSTCoreParser.g:6756:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) )
            // InternalSTCoreParser.g:6757:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_2_1()); 
            }
            // InternalSTCoreParser.g:6758:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 )
            // InternalSTCoreParser.g:6758:3: rule__STSelectionExpression__IndexAssignment_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__IndexAssignment_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__0"
    // InternalSTCoreParser.g:6767:1: rule__STSelectionExpression__Group_1_2__0 : rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1 ;
    public final void rule__STSelectionExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6771:1: ( rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1 )
            // InternalSTCoreParser.g:6772:2: rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1
            {
            pushFollow(FOLLOW_60);
            rule__STSelectionExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__0__Impl"
    // InternalSTCoreParser.g:6779:1: rule__STSelectionExpression__Group_1_2__0__Impl : ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6783:1: ( ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) ) )
            // InternalSTCoreParser.g:6784:1: ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) )
            {
            // InternalSTCoreParser.g:6784:1: ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) )
            // InternalSTCoreParser.g:6785:2: ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationAssignment_1_2_0()); 
            }
            // InternalSTCoreParser.g:6786:2: ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 )
            // InternalSTCoreParser.g:6786:3: rule__STSelectionExpression__PoeInvocationAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__PoeInvocationAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__1"
    // InternalSTCoreParser.g:6794:1: rule__STSelectionExpression__Group_1_2__1 : rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2 ;
    public final void rule__STSelectionExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6798:1: ( rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2 )
            // InternalSTCoreParser.g:6799:2: rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2
            {
            pushFollow(FOLLOW_60);
            rule__STSelectionExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__1__Impl"
    // InternalSTCoreParser.g:6806:1: rule__STSelectionExpression__Group_1_2__1__Impl : ( ( rule__STSelectionExpression__Group_1_2_1__0 )? ) ;
    public final void rule__STSelectionExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6810:1: ( ( ( rule__STSelectionExpression__Group_1_2_1__0 )? ) )
            // InternalSTCoreParser.g:6811:1: ( ( rule__STSelectionExpression__Group_1_2_1__0 )? )
            {
            // InternalSTCoreParser.g:6811:1: ( ( rule__STSelectionExpression__Group_1_2_1__0 )? )
            // InternalSTCoreParser.g:6812:2: ( rule__STSelectionExpression__Group_1_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1()); 
            }
            // InternalSTCoreParser.g:6813:2: ( rule__STSelectionExpression__Group_1_2_1__0 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( ((LA61_0>=LDATE_AND_TIME && LA61_0<=TIME_OF_DAY)||LA61_0==WSTRING||(LA61_0>=STRING && LA61_0<=DWORD)||(LA61_0>=LDATE && LA61_0<=LWORD)||(LA61_0>=UDINT && LA61_0<=WCHAR)||(LA61_0>=BOOL && LA61_0<=DINT)||(LA61_0>=FALSE && LA61_0<=UINT)||LA61_0==WORD||(LA61_0>=INT && LA61_0<=LDT)||(LA61_0>=TOD && LA61_0<=TRUE)||LA61_0==DT||(LA61_0>=LD && LA61_0<=LT)||LA61_0==NOT||LA61_0==D||LA61_0==T||LA61_0==LeftParenthesis||LA61_0==PlusSign||LA61_0==HyphenMinus||(LA61_0>=RULE_NON_DECIMAL && LA61_0<=RULE_INT)||(LA61_0>=RULE_ID && LA61_0<=RULE_STRING)) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSTCoreParser.g:6813:3: rule__STSelectionExpression__Group_1_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__2"
    // InternalSTCoreParser.g:6821:1: rule__STSelectionExpression__Group_1_2__2 : rule__STSelectionExpression__Group_1_2__2__Impl ;
    public final void rule__STSelectionExpression__Group_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6825:1: ( rule__STSelectionExpression__Group_1_2__2__Impl )
            // InternalSTCoreParser.g:6826:2: rule__STSelectionExpression__Group_1_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__2__Impl"
    // InternalSTCoreParser.g:6832:1: rule__STSelectionExpression__Group_1_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STSelectionExpression__Group_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6836:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:6837:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:6837:1: ( RightParenthesis )
            // InternalSTCoreParser.g:6838:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getRightParenthesisKeyword_1_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getRightParenthesisKeyword_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__0"
    // InternalSTCoreParser.g:6848:1: rule__STSelectionExpression__Group_1_2_1__0 : rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1 ;
    public final void rule__STSelectionExpression__Group_1_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6852:1: ( rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1 )
            // InternalSTCoreParser.g:6853:2: rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1
            {
            pushFollow(FOLLOW_61);
            rule__STSelectionExpression__Group_1_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__0__Impl"
    // InternalSTCoreParser.g:6860:1: rule__STSelectionExpression__Group_1_2_1__0__Impl : ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6864:1: ( ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) ) )
            // InternalSTCoreParser.g:6865:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) )
            {
            // InternalSTCoreParser.g:6865:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) )
            // InternalSTCoreParser.g:6866:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_0()); 
            }
            // InternalSTCoreParser.g:6867:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 )
            // InternalSTCoreParser.g:6867:3: rule__STSelectionExpression__ParametersAssignment_1_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ParametersAssignment_1_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__1"
    // InternalSTCoreParser.g:6875:1: rule__STSelectionExpression__Group_1_2_1__1 : rule__STSelectionExpression__Group_1_2_1__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6879:1: ( rule__STSelectionExpression__Group_1_2_1__1__Impl )
            // InternalSTCoreParser.g:6880:2: rule__STSelectionExpression__Group_1_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__1__Impl"
    // InternalSTCoreParser.g:6886:1: rule__STSelectionExpression__Group_1_2_1__1__Impl : ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* ) ;
    public final void rule__STSelectionExpression__Group_1_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6890:1: ( ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* ) )
            // InternalSTCoreParser.g:6891:1: ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* )
            {
            // InternalSTCoreParser.g:6891:1: ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* )
            // InternalSTCoreParser.g:6892:2: ( rule__STSelectionExpression__Group_1_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1_1()); 
            }
            // InternalSTCoreParser.g:6893:2: ( rule__STSelectionExpression__Group_1_2_1_1__0 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==Comma) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalSTCoreParser.g:6893:3: rule__STSelectionExpression__Group_1_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STSelectionExpression__Group_1_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__0"
    // InternalSTCoreParser.g:6902:1: rule__STSelectionExpression__Group_1_2_1_1__0 : rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1 ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6906:1: ( rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1 )
            // InternalSTCoreParser.g:6907:2: rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STSelectionExpression__Group_1_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__0__Impl"
    // InternalSTCoreParser.g:6914:1: rule__STSelectionExpression__Group_1_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6918:1: ( ( Comma ) )
            // InternalSTCoreParser.g:6919:1: ( Comma )
            {
            // InternalSTCoreParser.g:6919:1: ( Comma )
            // InternalSTCoreParser.g:6920:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__1"
    // InternalSTCoreParser.g:6929:1: rule__STSelectionExpression__Group_1_2_1_1__1 : rule__STSelectionExpression__Group_1_2_1_1__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6933:1: ( rule__STSelectionExpression__Group_1_2_1_1__1__Impl )
            // InternalSTCoreParser.g:6934:2: rule__STSelectionExpression__Group_1_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__1__Impl"
    // InternalSTCoreParser.g:6940:1: rule__STSelectionExpression__Group_1_2_1_1__1__Impl : ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6944:1: ( ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) ) )
            // InternalSTCoreParser.g:6945:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) )
            {
            // InternalSTCoreParser.g:6945:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) )
            // InternalSTCoreParser.g:6946:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_1_1()); 
            }
            // InternalSTCoreParser.g:6947:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 )
            // InternalSTCoreParser.g:6947:3: rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__1__Impl"


    // $ANTLR start "rule__MultibitPartialAccess__Group__0"
    // InternalSTCoreParser.g:6956:1: rule__MultibitPartialAccess__Group__0 : rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1 ;
    public final void rule__MultibitPartialAccess__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6960:1: ( rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1 )
            // InternalSTCoreParser.g:6961:2: rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__MultibitPartialAccess__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__0"


    // $ANTLR start "rule__MultibitPartialAccess__Group__0__Impl"
    // InternalSTCoreParser.g:6968:1: rule__MultibitPartialAccess__Group__0__Impl : ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) ) ;
    public final void rule__MultibitPartialAccess__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6972:1: ( ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) ) )
            // InternalSTCoreParser.g:6973:1: ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) )
            {
            // InternalSTCoreParser.g:6973:1: ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) )
            // InternalSTCoreParser.g:6974:2: ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierAssignment_0()); 
            }
            // InternalSTCoreParser.g:6975:2: ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 )
            // InternalSTCoreParser.g:6975:3: rule__MultibitPartialAccess__AccessSpecifierAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__AccessSpecifierAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__0__Impl"


    // $ANTLR start "rule__MultibitPartialAccess__Group__1"
    // InternalSTCoreParser.g:6983:1: rule__MultibitPartialAccess__Group__1 : rule__MultibitPartialAccess__Group__1__Impl ;
    public final void rule__MultibitPartialAccess__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6987:1: ( rule__MultibitPartialAccess__Group__1__Impl )
            // InternalSTCoreParser.g:6988:2: rule__MultibitPartialAccess__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__1"


    // $ANTLR start "rule__MultibitPartialAccess__Group__1__Impl"
    // InternalSTCoreParser.g:6994:1: rule__MultibitPartialAccess__Group__1__Impl : ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) ) ;
    public final void rule__MultibitPartialAccess__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:6998:1: ( ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) ) )
            // InternalSTCoreParser.g:6999:1: ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) )
            {
            // InternalSTCoreParser.g:6999:1: ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) )
            // InternalSTCoreParser.g:7000:2: ( rule__MultibitPartialAccess__IndexAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getIndexAssignment_1()); 
            }
            // InternalSTCoreParser.g:7001:2: ( rule__MultibitPartialAccess__IndexAssignment_1 )
            // InternalSTCoreParser.g:7001:3: rule__MultibitPartialAccess__IndexAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__IndexAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getIndexAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__0"
    // InternalSTCoreParser.g:7010:1: rule__STAtomicExpression__Group_0__0 : rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1 ;
    public final void rule__STAtomicExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7014:1: ( rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1 )
            // InternalSTCoreParser.g:7015:2: rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1
            {
            pushFollow(FOLLOW_10);
            rule__STAtomicExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__0"


    // $ANTLR start "rule__STAtomicExpression__Group_0__0__Impl"
    // InternalSTCoreParser.g:7022:1: rule__STAtomicExpression__Group_0__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STAtomicExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7026:1: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:7027:1: ( LeftParenthesis )
            {
            // InternalSTCoreParser.g:7027:1: ( LeftParenthesis )
            // InternalSTCoreParser.g:7028:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__1"
    // InternalSTCoreParser.g:7037:1: rule__STAtomicExpression__Group_0__1 : rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2 ;
    public final void rule__STAtomicExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7041:1: ( rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2 )
            // InternalSTCoreParser.g:7042:2: rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2
            {
            pushFollow(FOLLOW_17);
            rule__STAtomicExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__1"


    // $ANTLR start "rule__STAtomicExpression__Group_0__1__Impl"
    // InternalSTCoreParser.g:7049:1: rule__STAtomicExpression__Group_0__1__Impl : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7053:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:7054:1: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:7054:1: ( ruleSTExpression )
            // InternalSTCoreParser.g:7055:2: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__2"
    // InternalSTCoreParser.g:7064:1: rule__STAtomicExpression__Group_0__2 : rule__STAtomicExpression__Group_0__2__Impl ;
    public final void rule__STAtomicExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7068:1: ( rule__STAtomicExpression__Group_0__2__Impl )
            // InternalSTCoreParser.g:7069:2: rule__STAtomicExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__2"


    // $ANTLR start "rule__STAtomicExpression__Group_0__2__Impl"
    // InternalSTCoreParser.g:7075:1: rule__STAtomicExpression__Group_0__2__Impl : ( RightParenthesis ) ;
    public final void rule__STAtomicExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7079:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:7080:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:7080:1: ( RightParenthesis )
            // InternalSTCoreParser.g:7081:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__0"
    // InternalSTCoreParser.g:7091:1: rule__STAtomicExpression__Group_1__0 : rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1 ;
    public final void rule__STAtomicExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7095:1: ( rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1 )
            // InternalSTCoreParser.g:7096:2: rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1
            {
            pushFollow(FOLLOW_56);
            rule__STAtomicExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1__0__Impl"
    // InternalSTCoreParser.g:7103:1: rule__STAtomicExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STAtomicExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7107:1: ( ( () ) )
            // InternalSTCoreParser.g:7108:1: ( () )
            {
            // InternalSTCoreParser.g:7108:1: ( () )
            // InternalSTCoreParser.g:7109:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTSymbolAction_1_0()); 
            }
            // InternalSTCoreParser.g:7110:2: ()
            // InternalSTCoreParser.g:7110:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTSymbolAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__1"
    // InternalSTCoreParser.g:7118:1: rule__STAtomicExpression__Group_1__1 : rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2 ;
    public final void rule__STAtomicExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7122:1: ( rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2 )
            // InternalSTCoreParser.g:7123:2: rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2
            {
            pushFollow(FOLLOW_56);
            rule__STAtomicExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1__1__Impl"
    // InternalSTCoreParser.g:7130:1: rule__STAtomicExpression__Group_1__1__Impl : ( ( rule__STAtomicExpression__Group_1_1__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7134:1: ( ( ( rule__STAtomicExpression__Group_1_1__0 )? ) )
            // InternalSTCoreParser.g:7135:1: ( ( rule__STAtomicExpression__Group_1_1__0 )? )
            {
            // InternalSTCoreParser.g:7135:1: ( ( rule__STAtomicExpression__Group_1_1__0 )? )
            // InternalSTCoreParser.g:7136:2: ( rule__STAtomicExpression__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_1()); 
            }
            // InternalSTCoreParser.g:7137:2: ( rule__STAtomicExpression__Group_1_1__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_ID) ) {
                int LA63_1 = input.LA(2);

                if ( (LA63_1==NumberSign) ) {
                    alt63=1;
                }
            }
            switch (alt63) {
                case 1 :
                    // InternalSTCoreParser.g:7137:3: rule__STAtomicExpression__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__2"
    // InternalSTCoreParser.g:7145:1: rule__STAtomicExpression__Group_1__2 : rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3 ;
    public final void rule__STAtomicExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7149:1: ( rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3 )
            // InternalSTCoreParser.g:7150:2: rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3
            {
            pushFollow(FOLLOW_59);
            rule__STAtomicExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__2"


    // $ANTLR start "rule__STAtomicExpression__Group_1__2__Impl"
    // InternalSTCoreParser.g:7157:1: rule__STAtomicExpression__Group_1__2__Impl : ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) ) ;
    public final void rule__STAtomicExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7161:1: ( ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) ) )
            // InternalSTCoreParser.g:7162:1: ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) )
            {
            // InternalSTCoreParser.g:7162:1: ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) )
            // InternalSTCoreParser.g:7163:2: ( rule__STAtomicExpression__SymbolAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolAssignment_1_2()); 
            }
            // InternalSTCoreParser.g:7164:2: ( rule__STAtomicExpression__SymbolAssignment_1_2 )
            // InternalSTCoreParser.g:7164:3: rule__STAtomicExpression__SymbolAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__SymbolAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__3"
    // InternalSTCoreParser.g:7172:1: rule__STAtomicExpression__Group_1__3 : rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4 ;
    public final void rule__STAtomicExpression__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7176:1: ( rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4 )
            // InternalSTCoreParser.g:7177:2: rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4
            {
            pushFollow(FOLLOW_59);
            rule__STAtomicExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__3"


    // $ANTLR start "rule__STAtomicExpression__Group_1__3__Impl"
    // InternalSTCoreParser.g:7184:1: rule__STAtomicExpression__Group_1__3__Impl : ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? ) ;
    public final void rule__STAtomicExpression__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7188:1: ( ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? ) )
            // InternalSTCoreParser.g:7189:1: ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? )
            {
            // InternalSTCoreParser.g:7189:1: ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? )
            // InternalSTCoreParser.g:7190:2: ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorAssignment_1_3()); 
            }
            // InternalSTCoreParser.g:7191:2: ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( ((LA64_0>=B && LA64_0<=X)) ) {
                alt64=1;
            }
            else if ( (LA64_0==FullStop) ) {
                int LA64_2 = input.LA(2);

                if ( (LA64_2==RULE_INT) ) {
                    alt64=1;
                }
            }
            switch (alt64) {
                case 1 :
                    // InternalSTCoreParser.g:7191:3: rule__STAtomicExpression__BitaccessorAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__BitaccessorAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__3__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__4"
    // InternalSTCoreParser.g:7199:1: rule__STAtomicExpression__Group_1__4 : rule__STAtomicExpression__Group_1__4__Impl ;
    public final void rule__STAtomicExpression__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7203:1: ( rule__STAtomicExpression__Group_1__4__Impl )
            // InternalSTCoreParser.g:7204:2: rule__STAtomicExpression__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__4"


    // $ANTLR start "rule__STAtomicExpression__Group_1__4__Impl"
    // InternalSTCoreParser.g:7210:1: rule__STAtomicExpression__Group_1__4__Impl : ( ( rule__STAtomicExpression__Group_1_4__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7214:1: ( ( ( rule__STAtomicExpression__Group_1_4__0 )? ) )
            // InternalSTCoreParser.g:7215:1: ( ( rule__STAtomicExpression__Group_1_4__0 )? )
            {
            // InternalSTCoreParser.g:7215:1: ( ( rule__STAtomicExpression__Group_1_4__0 )? )
            // InternalSTCoreParser.g:7216:2: ( rule__STAtomicExpression__Group_1_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4()); 
            }
            // InternalSTCoreParser.g:7217:2: ( rule__STAtomicExpression__Group_1_4__0 )?
            int alt65=2;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalSTCoreParser.g:7217:3: rule__STAtomicExpression__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__4__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__0"
    // InternalSTCoreParser.g:7226:1: rule__STAtomicExpression__Group_1_1__0 : rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1 ;
    public final void rule__STAtomicExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7230:1: ( rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1 )
            // InternalSTCoreParser.g:7231:2: rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_63);
            rule__STAtomicExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__0__Impl"
    // InternalSTCoreParser.g:7238:1: rule__STAtomicExpression__Group_1_1__0__Impl : ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7242:1: ( ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) ) )
            // InternalSTCoreParser.g:7243:1: ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) )
            {
            // InternalSTCoreParser.g:7243:1: ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) )
            // InternalSTCoreParser.g:7244:2: ( rule__STAtomicExpression__TypeAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeAssignment_1_1_0()); 
            }
            // InternalSTCoreParser.g:7245:2: ( rule__STAtomicExpression__TypeAssignment_1_1_0 )
            // InternalSTCoreParser.g:7245:3: rule__STAtomicExpression__TypeAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__TypeAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__1"
    // InternalSTCoreParser.g:7253:1: rule__STAtomicExpression__Group_1_1__1 : rule__STAtomicExpression__Group_1_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7257:1: ( rule__STAtomicExpression__Group_1_1__1__Impl )
            // InternalSTCoreParser.g:7258:2: rule__STAtomicExpression__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__1__Impl"
    // InternalSTCoreParser.g:7264:1: rule__STAtomicExpression__Group_1_1__1__Impl : ( NumberSign ) ;
    public final void rule__STAtomicExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7268:1: ( ( NumberSign ) )
            // InternalSTCoreParser.g:7269:1: ( NumberSign )
            {
            // InternalSTCoreParser.g:7269:1: ( NumberSign )
            // InternalSTCoreParser.g:7270:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getNumberSignKeyword_1_1_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getNumberSignKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__0"
    // InternalSTCoreParser.g:7280:1: rule__STAtomicExpression__Group_1_4__0 : rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1 ;
    public final void rule__STAtomicExpression__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7284:1: ( rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1 )
            // InternalSTCoreParser.g:7285:2: rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1
            {
            pushFollow(FOLLOW_60);
            rule__STAtomicExpression__Group_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__0__Impl"
    // InternalSTCoreParser.g:7292:1: rule__STAtomicExpression__Group_1_4__0__Impl : ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7296:1: ( ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) ) )
            // InternalSTCoreParser.g:7297:1: ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) )
            {
            // InternalSTCoreParser.g:7297:1: ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) )
            // InternalSTCoreParser.g:7298:2: ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationAssignment_1_4_0()); 
            }
            // InternalSTCoreParser.g:7299:2: ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 )
            // InternalSTCoreParser.g:7299:3: rule__STAtomicExpression__PoeInvocationAssignment_1_4_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__PoeInvocationAssignment_1_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationAssignment_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__1"
    // InternalSTCoreParser.g:7307:1: rule__STAtomicExpression__Group_1_4__1 : rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2 ;
    public final void rule__STAtomicExpression__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7311:1: ( rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2 )
            // InternalSTCoreParser.g:7312:2: rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2
            {
            pushFollow(FOLLOW_60);
            rule__STAtomicExpression__Group_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__1__Impl"
    // InternalSTCoreParser.g:7319:1: rule__STAtomicExpression__Group_1_4__1__Impl : ( ( rule__STAtomicExpression__Group_1_4_1__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7323:1: ( ( ( rule__STAtomicExpression__Group_1_4_1__0 )? ) )
            // InternalSTCoreParser.g:7324:1: ( ( rule__STAtomicExpression__Group_1_4_1__0 )? )
            {
            // InternalSTCoreParser.g:7324:1: ( ( rule__STAtomicExpression__Group_1_4_1__0 )? )
            // InternalSTCoreParser.g:7325:2: ( rule__STAtomicExpression__Group_1_4_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1()); 
            }
            // InternalSTCoreParser.g:7326:2: ( rule__STAtomicExpression__Group_1_4_1__0 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0>=LDATE_AND_TIME && LA66_0<=TIME_OF_DAY)||LA66_0==WSTRING||(LA66_0>=STRING && LA66_0<=DWORD)||(LA66_0>=LDATE && LA66_0<=LWORD)||(LA66_0>=UDINT && LA66_0<=WCHAR)||(LA66_0>=BOOL && LA66_0<=DINT)||(LA66_0>=FALSE && LA66_0<=UINT)||LA66_0==WORD||(LA66_0>=INT && LA66_0<=LDT)||(LA66_0>=TOD && LA66_0<=TRUE)||LA66_0==DT||(LA66_0>=LD && LA66_0<=LT)||LA66_0==NOT||LA66_0==D||LA66_0==T||LA66_0==LeftParenthesis||LA66_0==PlusSign||LA66_0==HyphenMinus||(LA66_0>=RULE_NON_DECIMAL && LA66_0<=RULE_INT)||(LA66_0>=RULE_ID && LA66_0<=RULE_STRING)) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSTCoreParser.g:7326:3: rule__STAtomicExpression__Group_1_4_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_4_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__2"
    // InternalSTCoreParser.g:7334:1: rule__STAtomicExpression__Group_1_4__2 : rule__STAtomicExpression__Group_1_4__2__Impl ;
    public final void rule__STAtomicExpression__Group_1_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7338:1: ( rule__STAtomicExpression__Group_1_4__2__Impl )
            // InternalSTCoreParser.g:7339:2: rule__STAtomicExpression__Group_1_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__2"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__2__Impl"
    // InternalSTCoreParser.g:7345:1: rule__STAtomicExpression__Group_1_4__2__Impl : ( RightParenthesis ) ;
    public final void rule__STAtomicExpression__Group_1_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7349:1: ( ( RightParenthesis ) )
            // InternalSTCoreParser.g:7350:1: ( RightParenthesis )
            {
            // InternalSTCoreParser.g:7350:1: ( RightParenthesis )
            // InternalSTCoreParser.g:7351:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_1_4_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__0"
    // InternalSTCoreParser.g:7361:1: rule__STAtomicExpression__Group_1_4_1__0 : rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1 ;
    public final void rule__STAtomicExpression__Group_1_4_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7365:1: ( rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1 )
            // InternalSTCoreParser.g:7366:2: rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1
            {
            pushFollow(FOLLOW_61);
            rule__STAtomicExpression__Group_1_4_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__0__Impl"
    // InternalSTCoreParser.g:7373:1: rule__STAtomicExpression__Group_1_4_1__0__Impl : ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7377:1: ( ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) ) )
            // InternalSTCoreParser.g:7378:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) )
            {
            // InternalSTCoreParser.g:7378:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) )
            // InternalSTCoreParser.g:7379:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_0()); 
            }
            // InternalSTCoreParser.g:7380:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 )
            // InternalSTCoreParser.g:7380:3: rule__STAtomicExpression__ParametersAssignment_1_4_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__ParametersAssignment_1_4_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__1"
    // InternalSTCoreParser.g:7388:1: rule__STAtomicExpression__Group_1_4_1__1 : rule__STAtomicExpression__Group_1_4_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_4_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7392:1: ( rule__STAtomicExpression__Group_1_4_1__1__Impl )
            // InternalSTCoreParser.g:7393:2: rule__STAtomicExpression__Group_1_4_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__1__Impl"
    // InternalSTCoreParser.g:7399:1: rule__STAtomicExpression__Group_1_4_1__1__Impl : ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* ) ;
    public final void rule__STAtomicExpression__Group_1_4_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7403:1: ( ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* ) )
            // InternalSTCoreParser.g:7404:1: ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* )
            {
            // InternalSTCoreParser.g:7404:1: ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* )
            // InternalSTCoreParser.g:7405:2: ( rule__STAtomicExpression__Group_1_4_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1_1()); 
            }
            // InternalSTCoreParser.g:7406:2: ( rule__STAtomicExpression__Group_1_4_1_1__0 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==Comma) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalSTCoreParser.g:7406:3: rule__STAtomicExpression__Group_1_4_1_1__0
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__STAtomicExpression__Group_1_4_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__0"
    // InternalSTCoreParser.g:7415:1: rule__STAtomicExpression__Group_1_4_1_1__0 : rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1 ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7419:1: ( rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1 )
            // InternalSTCoreParser.g:7420:2: rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__STAtomicExpression__Group_1_4_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__0__Impl"
    // InternalSTCoreParser.g:7427:1: rule__STAtomicExpression__Group_1_4_1_1__0__Impl : ( Comma ) ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7431:1: ( ( Comma ) )
            // InternalSTCoreParser.g:7432:1: ( Comma )
            {
            // InternalSTCoreParser.g:7432:1: ( Comma )
            // InternalSTCoreParser.g:7433:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getCommaKeyword_1_4_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getCommaKeyword_1_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__1"
    // InternalSTCoreParser.g:7442:1: rule__STAtomicExpression__Group_1_4_1_1__1 : rule__STAtomicExpression__Group_1_4_1_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7446:1: ( rule__STAtomicExpression__Group_1_4_1_1__1__Impl )
            // InternalSTCoreParser.g:7447:2: rule__STAtomicExpression__Group_1_4_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__1__Impl"
    // InternalSTCoreParser.g:7453:1: rule__STAtomicExpression__Group_1_4_1_1__1__Impl : ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7457:1: ( ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) ) )
            // InternalSTCoreParser.g:7458:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) )
            {
            // InternalSTCoreParser.g:7458:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) )
            // InternalSTCoreParser.g:7459:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_1_1()); 
            }
            // InternalSTCoreParser.g:7460:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 )
            // InternalSTCoreParser.g:7460:3: rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__0"
    // InternalSTCoreParser.g:7469:1: rule__STLiteralExpressions__Group_0__0 : rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1 ;
    public final void rule__STLiteralExpressions__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7473:1: ( rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1 )
            // InternalSTCoreParser.g:7474:2: rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1
            {
            pushFollow(FOLLOW_64);
            rule__STLiteralExpressions__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__0__Impl"
    // InternalSTCoreParser.g:7481:1: rule__STLiteralExpressions__Group_0__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7485:1: ( ( () ) )
            // InternalSTCoreParser.g:7486:1: ( () )
            {
            // InternalSTCoreParser.g:7486:1: ( () )
            // InternalSTCoreParser.g:7487:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTBoolLiteralAction_0_0()); 
            }
            // InternalSTCoreParser.g:7488:2: ()
            // InternalSTCoreParser.g:7488:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTBoolLiteralAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__1"
    // InternalSTCoreParser.g:7496:1: rule__STLiteralExpressions__Group_0__1 : rule__STLiteralExpressions__Group_0__1__Impl ;
    public final void rule__STLiteralExpressions__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7500:1: ( rule__STLiteralExpressions__Group_0__1__Impl )
            // InternalSTCoreParser.g:7501:2: rule__STLiteralExpressions__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__1__Impl"
    // InternalSTCoreParser.g:7507:1: rule__STLiteralExpressions__Group_0__1__Impl : ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7511:1: ( ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) ) )
            // InternalSTCoreParser.g:7512:1: ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) )
            {
            // InternalSTCoreParser.g:7512:1: ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) )
            // InternalSTCoreParser.g:7513:2: ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralAssignment_0_1()); 
            }
            // InternalSTCoreParser.g:7514:2: ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 )
            // InternalSTCoreParser.g:7514:3: rule__STLiteralExpressions__BoolLiteralAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__BoolLiteralAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__0"
    // InternalSTCoreParser.g:7523:1: rule__STLiteralExpressions__Group_1__0 : rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1 ;
    public final void rule__STLiteralExpressions__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7527:1: ( rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1 )
            // InternalSTCoreParser.g:7528:2: rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1
            {
            pushFollow(FOLLOW_65);
            rule__STLiteralExpressions__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__0__Impl"
    // InternalSTCoreParser.g:7535:1: rule__STLiteralExpressions__Group_1__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7539:1: ( ( () ) )
            // InternalSTCoreParser.g:7540:1: ( () )
            {
            // InternalSTCoreParser.g:7540:1: ( () )
            // InternalSTCoreParser.g:7541:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralAction_1_0()); 
            }
            // InternalSTCoreParser.g:7542:2: ()
            // InternalSTCoreParser.g:7542:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__1"
    // InternalSTCoreParser.g:7550:1: rule__STLiteralExpressions__Group_1__1 : rule__STLiteralExpressions__Group_1__1__Impl ;
    public final void rule__STLiteralExpressions__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7554:1: ( rule__STLiteralExpressions__Group_1__1__Impl )
            // InternalSTCoreParser.g:7555:2: rule__STLiteralExpressions__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__1__Impl"
    // InternalSTCoreParser.g:7561:1: rule__STLiteralExpressions__Group_1__1__Impl : ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7565:1: ( ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) ) )
            // InternalSTCoreParser.g:7566:1: ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) )
            {
            // InternalSTCoreParser.g:7566:1: ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) )
            // InternalSTCoreParser.g:7567:2: ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralAssignment_1_1()); 
            }
            // InternalSTCoreParser.g:7568:2: ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 )
            // InternalSTCoreParser.g:7568:3: rule__STLiteralExpressions__NumericLiteralAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__NumericLiteralAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__0"
    // InternalSTCoreParser.g:7577:1: rule__STLiteralExpressions__Group_2__0 : rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1 ;
    public final void rule__STLiteralExpressions__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7581:1: ( rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1 )
            // InternalSTCoreParser.g:7582:2: rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1
            {
            pushFollow(FOLLOW_66);
            rule__STLiteralExpressions__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__0__Impl"
    // InternalSTCoreParser.g:7589:1: rule__STLiteralExpressions__Group_2__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7593:1: ( ( () ) )
            // InternalSTCoreParser.g:7594:1: ( () )
            {
            // InternalSTCoreParser.g:7594:1: ( () )
            // InternalSTCoreParser.g:7595:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralAction_2_0()); 
            }
            // InternalSTCoreParser.g:7596:2: ()
            // InternalSTCoreParser.g:7596:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__1"
    // InternalSTCoreParser.g:7604:1: rule__STLiteralExpressions__Group_2__1 : rule__STLiteralExpressions__Group_2__1__Impl ;
    public final void rule__STLiteralExpressions__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7608:1: ( rule__STLiteralExpressions__Group_2__1__Impl )
            // InternalSTCoreParser.g:7609:2: rule__STLiteralExpressions__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__1__Impl"
    // InternalSTCoreParser.g:7615:1: rule__STLiteralExpressions__Group_2__1__Impl : ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7619:1: ( ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) ) )
            // InternalSTCoreParser.g:7620:1: ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) )
            {
            // InternalSTCoreParser.g:7620:1: ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) )
            // InternalSTCoreParser.g:7621:2: ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralAssignment_2_1()); 
            }
            // InternalSTCoreParser.g:7622:2: ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 )
            // InternalSTCoreParser.g:7622:3: rule__STLiteralExpressions__DateLiteralAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__DateLiteralAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__0"
    // InternalSTCoreParser.g:7631:1: rule__STLiteralExpressions__Group_3__0 : rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1 ;
    public final void rule__STLiteralExpressions__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7635:1: ( rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1 )
            // InternalSTCoreParser.g:7636:2: rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1
            {
            pushFollow(FOLLOW_67);
            rule__STLiteralExpressions__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__0__Impl"
    // InternalSTCoreParser.g:7643:1: rule__STLiteralExpressions__Group_3__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7647:1: ( ( () ) )
            // InternalSTCoreParser.g:7648:1: ( () )
            {
            // InternalSTCoreParser.g:7648:1: ( () )
            // InternalSTCoreParser.g:7649:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralAction_3_0()); 
            }
            // InternalSTCoreParser.g:7650:2: ()
            // InternalSTCoreParser.g:7650:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__1"
    // InternalSTCoreParser.g:7658:1: rule__STLiteralExpressions__Group_3__1 : rule__STLiteralExpressions__Group_3__1__Impl ;
    public final void rule__STLiteralExpressions__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7662:1: ( rule__STLiteralExpressions__Group_3__1__Impl )
            // InternalSTCoreParser.g:7663:2: rule__STLiteralExpressions__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__1__Impl"
    // InternalSTCoreParser.g:7669:1: rule__STLiteralExpressions__Group_3__1__Impl : ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7673:1: ( ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) ) )
            // InternalSTCoreParser.g:7674:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) )
            {
            // InternalSTCoreParser.g:7674:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) )
            // InternalSTCoreParser.g:7675:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_3_1()); 
            }
            // InternalSTCoreParser.g:7676:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 )
            // InternalSTCoreParser.g:7676:3: rule__STLiteralExpressions__TimeLiteralAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeLiteralAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__0"
    // InternalSTCoreParser.g:7685:1: rule__STLiteralExpressions__Group_4__0 : rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1 ;
    public final void rule__STLiteralExpressions__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7689:1: ( rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1 )
            // InternalSTCoreParser.g:7690:2: rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1
            {
            pushFollow(FOLLOW_68);
            rule__STLiteralExpressions__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__0__Impl"
    // InternalSTCoreParser.g:7697:1: rule__STLiteralExpressions__Group_4__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7701:1: ( ( () ) )
            // InternalSTCoreParser.g:7702:1: ( () )
            {
            // InternalSTCoreParser.g:7702:1: ( () )
            // InternalSTCoreParser.g:7703:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralAction_4_0()); 
            }
            // InternalSTCoreParser.g:7704:2: ()
            // InternalSTCoreParser.g:7704:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__1"
    // InternalSTCoreParser.g:7712:1: rule__STLiteralExpressions__Group_4__1 : rule__STLiteralExpressions__Group_4__1__Impl ;
    public final void rule__STLiteralExpressions__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7716:1: ( rule__STLiteralExpressions__Group_4__1__Impl )
            // InternalSTCoreParser.g:7717:2: rule__STLiteralExpressions__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__1__Impl"
    // InternalSTCoreParser.g:7723:1: rule__STLiteralExpressions__Group_4__1__Impl : ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7727:1: ( ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) ) )
            // InternalSTCoreParser.g:7728:1: ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) )
            {
            // InternalSTCoreParser.g:7728:1: ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) )
            // InternalSTCoreParser.g:7729:2: ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralAssignment_4_1()); 
            }
            // InternalSTCoreParser.g:7730:2: ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 )
            // InternalSTCoreParser.g:7730:3: rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__0"
    // InternalSTCoreParser.g:7739:1: rule__STLiteralExpressions__Group_5__0 : rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1 ;
    public final void rule__STLiteralExpressions__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7743:1: ( rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1 )
            // InternalSTCoreParser.g:7744:2: rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1
            {
            pushFollow(FOLLOW_69);
            rule__STLiteralExpressions__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__0__Impl"
    // InternalSTCoreParser.g:7751:1: rule__STLiteralExpressions__Group_5__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7755:1: ( ( () ) )
            // InternalSTCoreParser.g:7756:1: ( () )
            {
            // InternalSTCoreParser.g:7756:1: ( () )
            // InternalSTCoreParser.g:7757:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralAction_5_0()); 
            }
            // InternalSTCoreParser.g:7758:2: ()
            // InternalSTCoreParser.g:7758:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__1"
    // InternalSTCoreParser.g:7766:1: rule__STLiteralExpressions__Group_5__1 : rule__STLiteralExpressions__Group_5__1__Impl ;
    public final void rule__STLiteralExpressions__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7770:1: ( rule__STLiteralExpressions__Group_5__1__Impl )
            // InternalSTCoreParser.g:7771:2: rule__STLiteralExpressions__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__1__Impl"
    // InternalSTCoreParser.g:7777:1: rule__STLiteralExpressions__Group_5__1__Impl : ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7781:1: ( ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) ) )
            // InternalSTCoreParser.g:7782:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) )
            {
            // InternalSTCoreParser.g:7782:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) )
            // InternalSTCoreParser.g:7783:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_5_1()); 
            }
            // InternalSTCoreParser.g:7784:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 )
            // InternalSTCoreParser.g:7784:3: rule__STLiteralExpressions__TimeLiteralAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeLiteralAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__0"
    // InternalSTCoreParser.g:7793:1: rule__STLiteralExpressions__Group_6__0 : rule__STLiteralExpressions__Group_6__0__Impl rule__STLiteralExpressions__Group_6__1 ;
    public final void rule__STLiteralExpressions__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7797:1: ( rule__STLiteralExpressions__Group_6__0__Impl rule__STLiteralExpressions__Group_6__1 )
            // InternalSTCoreParser.g:7798:2: rule__STLiteralExpressions__Group_6__0__Impl rule__STLiteralExpressions__Group_6__1
            {
            pushFollow(FOLLOW_70);
            rule__STLiteralExpressions__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__0__Impl"
    // InternalSTCoreParser.g:7805:1: rule__STLiteralExpressions__Group_6__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7809:1: ( ( () ) )
            // InternalSTCoreParser.g:7810:1: ( () )
            {
            // InternalSTCoreParser.g:7810:1: ( () )
            // InternalSTCoreParser.g:7811:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralAction_6_0()); 
            }
            // InternalSTCoreParser.g:7812:2: ()
            // InternalSTCoreParser.g:7812:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralAction_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__1"
    // InternalSTCoreParser.g:7820:1: rule__STLiteralExpressions__Group_6__1 : rule__STLiteralExpressions__Group_6__1__Impl ;
    public final void rule__STLiteralExpressions__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7824:1: ( rule__STLiteralExpressions__Group_6__1__Impl )
            // InternalSTCoreParser.g:7825:2: rule__STLiteralExpressions__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__1__Impl"
    // InternalSTCoreParser.g:7831:1: rule__STLiteralExpressions__Group_6__1__Impl : ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7835:1: ( ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) ) )
            // InternalSTCoreParser.g:7836:1: ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) )
            {
            // InternalSTCoreParser.g:7836:1: ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) )
            // InternalSTCoreParser.g:7837:2: ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralAssignment_6_1()); 
            }
            // InternalSTCoreParser.g:7838:2: ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 )
            // InternalSTCoreParser.g:7838:3: rule__STLiteralExpressions__StringLiteralAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__StringLiteralAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__1__Impl"


    // $ANTLR start "rule__BOOL_LITERAL__Group__0"
    // InternalSTCoreParser.g:7847:1: rule__BOOL_LITERAL__Group__0 : rule__BOOL_LITERAL__Group__0__Impl rule__BOOL_LITERAL__Group__1 ;
    public final void rule__BOOL_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7851:1: ( rule__BOOL_LITERAL__Group__0__Impl rule__BOOL_LITERAL__Group__1 )
            // InternalSTCoreParser.g:7852:2: rule__BOOL_LITERAL__Group__0__Impl rule__BOOL_LITERAL__Group__1
            {
            pushFollow(FOLLOW_64);
            rule__BOOL_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__0"


    // $ANTLR start "rule__BOOL_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:7859:1: rule__BOOL_LITERAL__Group__0__Impl : ( ( BOOL )? ) ;
    public final void rule__BOOL_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7863:1: ( ( ( BOOL )? ) )
            // InternalSTCoreParser.g:7864:1: ( ( BOOL )? )
            {
            // InternalSTCoreParser.g:7864:1: ( ( BOOL )? )
            // InternalSTCoreParser.g:7865:2: ( BOOL )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getBOOLKeyword_0()); 
            }
            // InternalSTCoreParser.g:7866:2: ( BOOL )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==BOOL) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSTCoreParser.g:7866:3: BOOL
                    {
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getBOOLKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__BOOL_LITERAL__Group__1"
    // InternalSTCoreParser.g:7874:1: rule__BOOL_LITERAL__Group__1 : rule__BOOL_LITERAL__Group__1__Impl ;
    public final void rule__BOOL_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7878:1: ( rule__BOOL_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:7879:2: rule__BOOL_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__1"


    // $ANTLR start "rule__BOOL_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:7885:1: rule__BOOL_LITERAL__Group__1__Impl : ( ( rule__BOOL_LITERAL__Alternatives_1 ) ) ;
    public final void rule__BOOL_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7889:1: ( ( ( rule__BOOL_LITERAL__Alternatives_1 ) ) )
            // InternalSTCoreParser.g:7890:1: ( ( rule__BOOL_LITERAL__Alternatives_1 ) )
            {
            // InternalSTCoreParser.g:7890:1: ( ( rule__BOOL_LITERAL__Alternatives_1 ) )
            // InternalSTCoreParser.g:7891:2: ( rule__BOOL_LITERAL__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getAlternatives_1()); 
            }
            // InternalSTCoreParser.g:7892:2: ( rule__BOOL_LITERAL__Alternatives_1 )
            // InternalSTCoreParser.g:7892:3: rule__BOOL_LITERAL__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__0"
    // InternalSTCoreParser.g:7901:1: rule__NUMERIC_LITERAL__Group__0 : rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1 ;
    public final void rule__NUMERIC_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7905:1: ( rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1 )
            // InternalSTCoreParser.g:7906:2: rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__NUMERIC_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__0"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:7913:1: rule__NUMERIC_LITERAL__Group__0__Impl : ( ( rule__NUMERIC_LITERAL__KeywordAssignment_0 )? ) ;
    public final void rule__NUMERIC_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7917:1: ( ( ( rule__NUMERIC_LITERAL__KeywordAssignment_0 )? ) )
            // InternalSTCoreParser.g:7918:1: ( ( rule__NUMERIC_LITERAL__KeywordAssignment_0 )? )
            {
            // InternalSTCoreParser.g:7918:1: ( ( rule__NUMERIC_LITERAL__KeywordAssignment_0 )? )
            // InternalSTCoreParser.g:7919:2: ( rule__NUMERIC_LITERAL__KeywordAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:7920:2: ( rule__NUMERIC_LITERAL__KeywordAssignment_0 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==DWORD||LA69_0==LREAL||LA69_0==LWORD||(LA69_0>=UDINT && LA69_0<=USINT)||(LA69_0>=BOOL && LA69_0<=BYTE)||LA69_0==DINT||LA69_0==LINT||(LA69_0>=REAL && LA69_0<=SINT)||LA69_0==UINT||LA69_0==WORD||LA69_0==INT) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalSTCoreParser.g:7920:3: rule__NUMERIC_LITERAL__KeywordAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__KeywordAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__1"
    // InternalSTCoreParser.g:7928:1: rule__NUMERIC_LITERAL__Group__1 : rule__NUMERIC_LITERAL__Group__1__Impl ;
    public final void rule__NUMERIC_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7932:1: ( rule__NUMERIC_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:7933:2: rule__NUMERIC_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__1"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:7939:1: rule__NUMERIC_LITERAL__Group__1__Impl : ( ( rule__NUMERIC_LITERAL__Alternatives_1 ) ) ;
    public final void rule__NUMERIC_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7943:1: ( ( ( rule__NUMERIC_LITERAL__Alternatives_1 ) ) )
            // InternalSTCoreParser.g:7944:1: ( ( rule__NUMERIC_LITERAL__Alternatives_1 ) )
            {
            // InternalSTCoreParser.g:7944:1: ( ( rule__NUMERIC_LITERAL__Alternatives_1 ) )
            // InternalSTCoreParser.g:7945:2: ( rule__NUMERIC_LITERAL__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getAlternatives_1()); 
            }
            // InternalSTCoreParser.g:7946:2: ( rule__NUMERIC_LITERAL__Alternatives_1 )
            // InternalSTCoreParser.g:7946:3: rule__NUMERIC_LITERAL__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__DATE_LITERAL__Group__0"
    // InternalSTCoreParser.g:7955:1: rule__DATE_LITERAL__Group__0 : rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1 ;
    public final void rule__DATE_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7959:1: ( rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1 )
            // InternalSTCoreParser.g:7960:2: rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__DATE_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__0"


    // $ANTLR start "rule__DATE_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:7967:1: rule__DATE_LITERAL__Group__0__Impl : ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__DATE_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7971:1: ( ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:7972:1: ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:7972:1: ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:7973:2: ( rule__DATE_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:7974:2: ( rule__DATE_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:7974:3: rule__DATE_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__DATE_LITERAL__Group__1"
    // InternalSTCoreParser.g:7982:1: rule__DATE_LITERAL__Group__1 : rule__DATE_LITERAL__Group__1__Impl ;
    public final void rule__DATE_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7986:1: ( rule__DATE_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:7987:2: rule__DATE_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__1"


    // $ANTLR start "rule__DATE_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:7993:1: rule__DATE_LITERAL__Group__1__Impl : ( ( rule__DATE_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__DATE_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:7997:1: ( ( ( rule__DATE_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:7998:1: ( ( rule__DATE_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:7998:1: ( ( rule__DATE_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:7999:2: ( rule__DATE_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8000:2: ( rule__DATE_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8000:3: rule__DATE_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__TIME_LITERAL__Group__0"
    // InternalSTCoreParser.g:8009:1: rule__TIME_LITERAL__Group__0 : rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1 ;
    public final void rule__TIME_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8013:1: ( rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8014:2: rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__TIME_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__0"


    // $ANTLR start "rule__TIME_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8021:1: rule__TIME_LITERAL__Group__0__Impl : ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__TIME_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8025:1: ( ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:8026:1: ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:8026:1: ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:8027:2: ( rule__TIME_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:8028:2: ( rule__TIME_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:8028:3: rule__TIME_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__TIME_LITERAL__Group__1"
    // InternalSTCoreParser.g:8036:1: rule__TIME_LITERAL__Group__1 : rule__TIME_LITERAL__Group__1__Impl ;
    public final void rule__TIME_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8040:1: ( rule__TIME_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:8041:2: rule__TIME_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__1"


    // $ANTLR start "rule__TIME_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8047:1: rule__TIME_LITERAL__Group__1__Impl : ( ( rule__TIME_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__TIME_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8051:1: ( ( ( rule__TIME_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8052:1: ( ( rule__TIME_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8052:1: ( ( rule__TIME_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:8053:2: ( rule__TIME_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8054:2: ( rule__TIME_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8054:3: rule__TIME_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__0"
    // InternalSTCoreParser.g:8063:1: rule__TIME_OF_DAY_LITERAL__Group__0 : rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1 ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8067:1: ( rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8068:2: rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__TIME_OF_DAY_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8075:1: rule__TIME_OF_DAY_LITERAL__Group__0__Impl : ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8079:1: ( ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:8080:1: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:8080:1: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:8081:2: ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:8082:2: ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:8082:3: rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__1"
    // InternalSTCoreParser.g:8090:1: rule__TIME_OF_DAY_LITERAL__Group__1 : rule__TIME_OF_DAY_LITERAL__Group__1__Impl ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8094:1: ( rule__TIME_OF_DAY_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:8095:2: rule__TIME_OF_DAY_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__1"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8101:1: rule__TIME_OF_DAY_LITERAL__Group__1__Impl : ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8105:1: ( ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8106:1: ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8106:1: ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:8107:2: ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8108:2: ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8108:3: rule__TIME_OF_DAY_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__0"
    // InternalSTCoreParser.g:8117:1: rule__DATE_AND_TIME_LITERAL__Group__0 : rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8121:1: ( rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8122:2: rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__DATE_AND_TIME_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8129:1: rule__DATE_AND_TIME_LITERAL__Group__0__Impl : ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8133:1: ( ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTCoreParser.g:8134:1: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTCoreParser.g:8134:1: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) )
            // InternalSTCoreParser.g:8135:2: ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTCoreParser.g:8136:2: ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 )
            // InternalSTCoreParser.g:8136:3: rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__1"
    // InternalSTCoreParser.g:8144:1: rule__DATE_AND_TIME_LITERAL__Group__1 : rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8148:1: ( rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2 )
            // InternalSTCoreParser.g:8149:2: rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2
            {
            pushFollow(FOLLOW_72);
            rule__DATE_AND_TIME_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8156:1: rule__DATE_AND_TIME_LITERAL__Group__1__Impl : ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8160:1: ( ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8161:1: ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8161:1: ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) )
            // InternalSTCoreParser.g:8162:2: ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8163:2: ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 )
            // InternalSTCoreParser.g:8163:3: rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__2"
    // InternalSTCoreParser.g:8171:1: rule__DATE_AND_TIME_LITERAL__Group__2 : rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8175:1: ( rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3 )
            // InternalSTCoreParser.g:8176:2: rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3
            {
            pushFollow(FOLLOW_62);
            rule__DATE_AND_TIME_LITERAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__2"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__2__Impl"
    // InternalSTCoreParser.g:8183:1: rule__DATE_AND_TIME_LITERAL__Group__2__Impl : ( HyphenMinus ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8187:1: ( ( HyphenMinus ) )
            // InternalSTCoreParser.g:8188:1: ( HyphenMinus )
            {
            // InternalSTCoreParser.g:8188:1: ( HyphenMinus )
            // InternalSTCoreParser.g:8189:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getHyphenMinusKeyword_2()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getHyphenMinusKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__2__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__3"
    // InternalSTCoreParser.g:8198:1: rule__DATE_AND_TIME_LITERAL__Group__3 : rule__DATE_AND_TIME_LITERAL__Group__3__Impl ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8202:1: ( rule__DATE_AND_TIME_LITERAL__Group__3__Impl )
            // InternalSTCoreParser.g:8203:2: rule__DATE_AND_TIME_LITERAL__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__3"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__3__Impl"
    // InternalSTCoreParser.g:8209:1: rule__DATE_AND_TIME_LITERAL__Group__3__Impl : ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8213:1: ( ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) ) )
            // InternalSTCoreParser.g:8214:1: ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) )
            {
            // InternalSTCoreParser.g:8214:1: ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) )
            // InternalSTCoreParser.g:8215:2: ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueAssignment_3()); 
            }
            // InternalSTCoreParser.g:8216:2: ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 )
            // InternalSTCoreParser.g:8216:3: rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__3__Impl"


    // $ANTLR start "rule__STRING_LITERAL__Group__0"
    // InternalSTCoreParser.g:8225:1: rule__STRING_LITERAL__Group__0 : rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1 ;
    public final void rule__STRING_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8229:1: ( rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1 )
            // InternalSTCoreParser.g:8230:2: rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__STRING_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__0"


    // $ANTLR start "rule__STRING_LITERAL__Group__0__Impl"
    // InternalSTCoreParser.g:8237:1: rule__STRING_LITERAL__Group__0__Impl : ( ( rule__STRING_LITERAL__Alternatives_0 )? ) ;
    public final void rule__STRING_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8241:1: ( ( ( rule__STRING_LITERAL__Alternatives_0 )? ) )
            // InternalSTCoreParser.g:8242:1: ( ( rule__STRING_LITERAL__Alternatives_0 )? )
            {
            // InternalSTCoreParser.g:8242:1: ( ( rule__STRING_LITERAL__Alternatives_0 )? )
            // InternalSTCoreParser.g:8243:2: ( rule__STRING_LITERAL__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getAlternatives_0()); 
            }
            // InternalSTCoreParser.g:8244:2: ( rule__STRING_LITERAL__Alternatives_0 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==WSTRING||LA70_0==STRING||LA70_0==WCHAR||LA70_0==CHAR) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSTCoreParser.g:8244:3: rule__STRING_LITERAL__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STRING_LITERAL__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__STRING_LITERAL__Group__1"
    // InternalSTCoreParser.g:8252:1: rule__STRING_LITERAL__Group__1 : rule__STRING_LITERAL__Group__1__Impl ;
    public final void rule__STRING_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8256:1: ( rule__STRING_LITERAL__Group__1__Impl )
            // InternalSTCoreParser.g:8257:2: rule__STRING_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__1"


    // $ANTLR start "rule__STRING_LITERAL__Group__1__Impl"
    // InternalSTCoreParser.g:8263:1: rule__STRING_LITERAL__Group__1__Impl : ( ( rule__STRING_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__STRING_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8267:1: ( ( ( rule__STRING_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTCoreParser.g:8268:1: ( ( rule__STRING_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTCoreParser.g:8268:1: ( ( rule__STRING_LITERAL__ValueAssignment_1 ) )
            // InternalSTCoreParser.g:8269:2: ( rule__STRING_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTCoreParser.g:8270:2: ( rule__STRING_LITERAL__ValueAssignment_1 )
            // InternalSTCoreParser.g:8270:3: rule__STRING_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__INTEGER__Group__0"
    // InternalSTCoreParser.g:8279:1: rule__INTEGER__Group__0 : rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1 ;
    public final void rule__INTEGER__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8283:1: ( rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1 )
            // InternalSTCoreParser.g:8284:2: rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__INTEGER__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__0"


    // $ANTLR start "rule__INTEGER__Group__0__Impl"
    // InternalSTCoreParser.g:8291:1: rule__INTEGER__Group__0__Impl : ( ( rule__INTEGER__Alternatives_0 )? ) ;
    public final void rule__INTEGER__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8295:1: ( ( ( rule__INTEGER__Alternatives_0 )? ) )
            // InternalSTCoreParser.g:8296:1: ( ( rule__INTEGER__Alternatives_0 )? )
            {
            // InternalSTCoreParser.g:8296:1: ( ( rule__INTEGER__Alternatives_0 )? )
            // InternalSTCoreParser.g:8297:2: ( rule__INTEGER__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getAlternatives_0()); 
            }
            // InternalSTCoreParser.g:8298:2: ( rule__INTEGER__Alternatives_0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==PlusSign||LA71_0==HyphenMinus) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSTCoreParser.g:8298:3: rule__INTEGER__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__INTEGER__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__0__Impl"


    // $ANTLR start "rule__INTEGER__Group__1"
    // InternalSTCoreParser.g:8306:1: rule__INTEGER__Group__1 : rule__INTEGER__Group__1__Impl ;
    public final void rule__INTEGER__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8310:1: ( rule__INTEGER__Group__1__Impl )
            // InternalSTCoreParser.g:8311:2: rule__INTEGER__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__1"


    // $ANTLR start "rule__INTEGER__Group__1__Impl"
    // InternalSTCoreParser.g:8317:1: rule__INTEGER__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__INTEGER__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8321:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8322:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8322:1: ( RULE_INT )
            // InternalSTCoreParser.g:8323:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__1__Impl"


    // $ANTLR start "rule__REAL__Group__0"
    // InternalSTCoreParser.g:8333:1: rule__REAL__Group__0 : rule__REAL__Group__0__Impl rule__REAL__Group__1 ;
    public final void rule__REAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8337:1: ( rule__REAL__Group__0__Impl rule__REAL__Group__1 )
            // InternalSTCoreParser.g:8338:2: rule__REAL__Group__0__Impl rule__REAL__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__REAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__REAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__0"


    // $ANTLR start "rule__REAL__Group__0__Impl"
    // InternalSTCoreParser.g:8345:1: rule__REAL__Group__0__Impl : ( ruleINTEGER ) ;
    public final void rule__REAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8349:1: ( ( ruleINTEGER ) )
            // InternalSTCoreParser.g:8350:1: ( ruleINTEGER )
            {
            // InternalSTCoreParser.g:8350:1: ( ruleINTEGER )
            // InternalSTCoreParser.g:8351:2: ruleINTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getINTEGERParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getINTEGERParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__0__Impl"


    // $ANTLR start "rule__REAL__Group__1"
    // InternalSTCoreParser.g:8360:1: rule__REAL__Group__1 : rule__REAL__Group__1__Impl rule__REAL__Group__2 ;
    public final void rule__REAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8364:1: ( rule__REAL__Group__1__Impl rule__REAL__Group__2 )
            // InternalSTCoreParser.g:8365:2: rule__REAL__Group__1__Impl rule__REAL__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__REAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__REAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__1"


    // $ANTLR start "rule__REAL__Group__1__Impl"
    // InternalSTCoreParser.g:8372:1: rule__REAL__Group__1__Impl : ( FullStop ) ;
    public final void rule__REAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8376:1: ( ( FullStop ) )
            // InternalSTCoreParser.g:8377:1: ( FullStop )
            {
            // InternalSTCoreParser.g:8377:1: ( FullStop )
            // InternalSTCoreParser.g:8378:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getFullStopKeyword_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__1__Impl"


    // $ANTLR start "rule__REAL__Group__2"
    // InternalSTCoreParser.g:8387:1: rule__REAL__Group__2 : rule__REAL__Group__2__Impl ;
    public final void rule__REAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8391:1: ( rule__REAL__Group__2__Impl )
            // InternalSTCoreParser.g:8392:2: rule__REAL__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__2"


    // $ANTLR start "rule__REAL__Group__2__Impl"
    // InternalSTCoreParser.g:8398:1: rule__REAL__Group__2__Impl : ( ( rule__REAL__Alternatives_2 ) ) ;
    public final void rule__REAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8402:1: ( ( ( rule__REAL__Alternatives_2 ) ) )
            // InternalSTCoreParser.g:8403:1: ( ( rule__REAL__Alternatives_2 ) )
            {
            // InternalSTCoreParser.g:8403:1: ( ( rule__REAL__Alternatives_2 ) )
            // InternalSTCoreParser.g:8404:2: ( rule__REAL__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getAlternatives_2()); 
            }
            // InternalSTCoreParser.g:8405:2: ( rule__REAL__Alternatives_2 )
            // InternalSTCoreParser.g:8405:3: rule__REAL__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__2__Impl"


    // $ANTLR start "rule__DATE__Group__0"
    // InternalSTCoreParser.g:8414:1: rule__DATE__Group__0 : rule__DATE__Group__0__Impl rule__DATE__Group__1 ;
    public final void rule__DATE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8418:1: ( rule__DATE__Group__0__Impl rule__DATE__Group__1 )
            // InternalSTCoreParser.g:8419:2: rule__DATE__Group__0__Impl rule__DATE__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__DATE__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__0"


    // $ANTLR start "rule__DATE__Group__0__Impl"
    // InternalSTCoreParser.g:8426:1: rule__DATE__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8430:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8431:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8431:1: ( RULE_INT )
            // InternalSTCoreParser.g:8432:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__0__Impl"


    // $ANTLR start "rule__DATE__Group__1"
    // InternalSTCoreParser.g:8441:1: rule__DATE__Group__1 : rule__DATE__Group__1__Impl rule__DATE__Group__2 ;
    public final void rule__DATE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8445:1: ( rule__DATE__Group__1__Impl rule__DATE__Group__2 )
            // InternalSTCoreParser.g:8446:2: rule__DATE__Group__1__Impl rule__DATE__Group__2
            {
            pushFollow(FOLLOW_62);
            rule__DATE__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__1"


    // $ANTLR start "rule__DATE__Group__1__Impl"
    // InternalSTCoreParser.g:8453:1: rule__DATE__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__DATE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8457:1: ( ( HyphenMinus ) )
            // InternalSTCoreParser.g:8458:1: ( HyphenMinus )
            {
            // InternalSTCoreParser.g:8458:1: ( HyphenMinus )
            // InternalSTCoreParser.g:8459:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__1__Impl"


    // $ANTLR start "rule__DATE__Group__2"
    // InternalSTCoreParser.g:8468:1: rule__DATE__Group__2 : rule__DATE__Group__2__Impl rule__DATE__Group__3 ;
    public final void rule__DATE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8472:1: ( rule__DATE__Group__2__Impl rule__DATE__Group__3 )
            // InternalSTCoreParser.g:8473:2: rule__DATE__Group__2__Impl rule__DATE__Group__3
            {
            pushFollow(FOLLOW_72);
            rule__DATE__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__2"


    // $ANTLR start "rule__DATE__Group__2__Impl"
    // InternalSTCoreParser.g:8480:1: rule__DATE__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8484:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8485:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8485:1: ( RULE_INT )
            // InternalSTCoreParser.g:8486:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__2__Impl"


    // $ANTLR start "rule__DATE__Group__3"
    // InternalSTCoreParser.g:8495:1: rule__DATE__Group__3 : rule__DATE__Group__3__Impl rule__DATE__Group__4 ;
    public final void rule__DATE__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8499:1: ( rule__DATE__Group__3__Impl rule__DATE__Group__4 )
            // InternalSTCoreParser.g:8500:2: rule__DATE__Group__3__Impl rule__DATE__Group__4
            {
            pushFollow(FOLLOW_62);
            rule__DATE__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__3"


    // $ANTLR start "rule__DATE__Group__3__Impl"
    // InternalSTCoreParser.g:8507:1: rule__DATE__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__DATE__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8511:1: ( ( HyphenMinus ) )
            // InternalSTCoreParser.g:8512:1: ( HyphenMinus )
            {
            // InternalSTCoreParser.g:8512:1: ( HyphenMinus )
            // InternalSTCoreParser.g:8513:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__3__Impl"


    // $ANTLR start "rule__DATE__Group__4"
    // InternalSTCoreParser.g:8522:1: rule__DATE__Group__4 : rule__DATE__Group__4__Impl ;
    public final void rule__DATE__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8526:1: ( rule__DATE__Group__4__Impl )
            // InternalSTCoreParser.g:8527:2: rule__DATE__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__4"


    // $ANTLR start "rule__DATE__Group__4__Impl"
    // InternalSTCoreParser.g:8533:1: rule__DATE__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8537:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8538:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8538:1: ( RULE_INT )
            // InternalSTCoreParser.g:8539:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__4__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__0"
    // InternalSTCoreParser.g:8549:1: rule__TIME_OF_DAY__Group__0 : rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1 ;
    public final void rule__TIME_OF_DAY__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8553:1: ( rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1 )
            // InternalSTCoreParser.g:8554:2: rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1
            {
            pushFollow(FOLLOW_76);
            rule__TIME_OF_DAY__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__0"


    // $ANTLR start "rule__TIME_OF_DAY__Group__0__Impl"
    // InternalSTCoreParser.g:8561:1: rule__TIME_OF_DAY__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8565:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8566:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8566:1: ( RULE_INT )
            // InternalSTCoreParser.g:8567:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__1"
    // InternalSTCoreParser.g:8576:1: rule__TIME_OF_DAY__Group__1 : rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2 ;
    public final void rule__TIME_OF_DAY__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8580:1: ( rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2 )
            // InternalSTCoreParser.g:8581:2: rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2
            {
            pushFollow(FOLLOW_62);
            rule__TIME_OF_DAY__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__1"


    // $ANTLR start "rule__TIME_OF_DAY__Group__1__Impl"
    // InternalSTCoreParser.g:8588:1: rule__TIME_OF_DAY__Group__1__Impl : ( Colon ) ;
    public final void rule__TIME_OF_DAY__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8592:1: ( ( Colon ) )
            // InternalSTCoreParser.g:8593:1: ( Colon )
            {
            // InternalSTCoreParser.g:8593:1: ( Colon )
            // InternalSTCoreParser.g:8594:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__1__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__2"
    // InternalSTCoreParser.g:8603:1: rule__TIME_OF_DAY__Group__2 : rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3 ;
    public final void rule__TIME_OF_DAY__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8607:1: ( rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3 )
            // InternalSTCoreParser.g:8608:2: rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3
            {
            pushFollow(FOLLOW_76);
            rule__TIME_OF_DAY__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__2"


    // $ANTLR start "rule__TIME_OF_DAY__Group__2__Impl"
    // InternalSTCoreParser.g:8615:1: rule__TIME_OF_DAY__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8619:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8620:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8620:1: ( RULE_INT )
            // InternalSTCoreParser.g:8621:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__2__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__3"
    // InternalSTCoreParser.g:8630:1: rule__TIME_OF_DAY__Group__3 : rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4 ;
    public final void rule__TIME_OF_DAY__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8634:1: ( rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4 )
            // InternalSTCoreParser.g:8635:2: rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4
            {
            pushFollow(FOLLOW_62);
            rule__TIME_OF_DAY__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__3"


    // $ANTLR start "rule__TIME_OF_DAY__Group__3__Impl"
    // InternalSTCoreParser.g:8642:1: rule__TIME_OF_DAY__Group__3__Impl : ( Colon ) ;
    public final void rule__TIME_OF_DAY__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8646:1: ( ( Colon ) )
            // InternalSTCoreParser.g:8647:1: ( Colon )
            {
            // InternalSTCoreParser.g:8647:1: ( Colon )
            // InternalSTCoreParser.g:8648:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__3__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__4"
    // InternalSTCoreParser.g:8657:1: rule__TIME_OF_DAY__Group__4 : rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5 ;
    public final void rule__TIME_OF_DAY__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8661:1: ( rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5 )
            // InternalSTCoreParser.g:8662:2: rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5
            {
            pushFollow(FOLLOW_74);
            rule__TIME_OF_DAY__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__4"


    // $ANTLR start "rule__TIME_OF_DAY__Group__4__Impl"
    // InternalSTCoreParser.g:8669:1: rule__TIME_OF_DAY__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8673:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8674:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8674:1: ( RULE_INT )
            // InternalSTCoreParser.g:8675:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__4__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__5"
    // InternalSTCoreParser.g:8684:1: rule__TIME_OF_DAY__Group__5 : rule__TIME_OF_DAY__Group__5__Impl ;
    public final void rule__TIME_OF_DAY__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8688:1: ( rule__TIME_OF_DAY__Group__5__Impl )
            // InternalSTCoreParser.g:8689:2: rule__TIME_OF_DAY__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__5"


    // $ANTLR start "rule__TIME_OF_DAY__Group__5__Impl"
    // InternalSTCoreParser.g:8695:1: rule__TIME_OF_DAY__Group__5__Impl : ( ( rule__TIME_OF_DAY__Group_5__0 )? ) ;
    public final void rule__TIME_OF_DAY__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8699:1: ( ( ( rule__TIME_OF_DAY__Group_5__0 )? ) )
            // InternalSTCoreParser.g:8700:1: ( ( rule__TIME_OF_DAY__Group_5__0 )? )
            {
            // InternalSTCoreParser.g:8700:1: ( ( rule__TIME_OF_DAY__Group_5__0 )? )
            // InternalSTCoreParser.g:8701:2: ( rule__TIME_OF_DAY__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getGroup_5()); 
            }
            // InternalSTCoreParser.g:8702:2: ( rule__TIME_OF_DAY__Group_5__0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==FullStop) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSTCoreParser.g:8702:3: rule__TIME_OF_DAY__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TIME_OF_DAY__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__5__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__0"
    // InternalSTCoreParser.g:8711:1: rule__TIME_OF_DAY__Group_5__0 : rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1 ;
    public final void rule__TIME_OF_DAY__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8715:1: ( rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1 )
            // InternalSTCoreParser.g:8716:2: rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1
            {
            pushFollow(FOLLOW_62);
            rule__TIME_OF_DAY__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__0"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__0__Impl"
    // InternalSTCoreParser.g:8723:1: rule__TIME_OF_DAY__Group_5__0__Impl : ( FullStop ) ;
    public final void rule__TIME_OF_DAY__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8727:1: ( ( FullStop ) )
            // InternalSTCoreParser.g:8728:1: ( FullStop )
            {
            // InternalSTCoreParser.g:8728:1: ( FullStop )
            // InternalSTCoreParser.g:8729:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getFullStopKeyword_5_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getFullStopKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__1"
    // InternalSTCoreParser.g:8738:1: rule__TIME_OF_DAY__Group_5__1 : rule__TIME_OF_DAY__Group_5__1__Impl ;
    public final void rule__TIME_OF_DAY__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8742:1: ( rule__TIME_OF_DAY__Group_5__1__Impl )
            // InternalSTCoreParser.g:8743:2: rule__TIME_OF_DAY__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__1"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__1__Impl"
    // InternalSTCoreParser.g:8749:1: rule__TIME_OF_DAY__Group_5__1__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8753:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:8754:1: ( RULE_INT )
            {
            // InternalSTCoreParser.g:8754:1: ( RULE_INT )
            // InternalSTCoreParser.g:8755:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_5_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__1__Impl"


    // $ANTLR start "rule__Code__StatementsAssignment"
    // InternalSTCoreParser.g:8765:1: rule__Code__StatementsAssignment : ( ruleSTStatement ) ;
    public final void rule__Code__StatementsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8769:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:8770:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:8770:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:8771:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCodeAccess().getStatementsSTStatementParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCodeAccess().getStatementsSTStatementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Code__StatementsAssignment"


    // $ANTLR start "rule__VarDeclaration__NameAssignment_0"
    // InternalSTCoreParser.g:8780:1: rule__VarDeclaration__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__VarDeclaration__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8784:1: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:8785:2: ( RULE_ID )
            {
            // InternalSTCoreParser.g:8785:2: ( RULE_ID )
            // InternalSTCoreParser.g:8786:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__NameAssignment_0"


    // $ANTLR start "rule__VarDeclaration__LocatedAtAssignment_1_1"
    // InternalSTCoreParser.g:8795:1: rule__VarDeclaration__LocatedAtAssignment_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__LocatedAtAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8799:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:8800:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:8800:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:8801:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationCrossReference_1_1_0()); 
            }
            // InternalSTCoreParser.g:8802:3: ( RULE_ID )
            // InternalSTCoreParser.g:8803:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationIDTerminalRuleCall_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationIDTerminalRuleCall_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationCrossReference_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__LocatedAtAssignment_1_1"


    // $ANTLR start "rule__VarDeclaration__ArrayAssignment_3_0"
    // InternalSTCoreParser.g:8814:1: rule__VarDeclaration__ArrayAssignment_3_0 : ( ( ARRAY ) ) ;
    public final void rule__VarDeclaration__ArrayAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8818:1: ( ( ( ARRAY ) ) )
            // InternalSTCoreParser.g:8819:2: ( ( ARRAY ) )
            {
            // InternalSTCoreParser.g:8819:2: ( ( ARRAY ) )
            // InternalSTCoreParser.g:8820:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }
            // InternalSTCoreParser.g:8821:3: ( ARRAY )
            // InternalSTCoreParser.g:8822:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__ArrayAssignment_3_0"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_3_1_0_1"
    // InternalSTCoreParser.g:8833:1: rule__VarDeclaration__RangesAssignment_3_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_3_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8837:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8838:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8838:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8839:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_3_1_0_1"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_3_1_0_2_1"
    // InternalSTCoreParser.g:8848:1: rule__VarDeclaration__RangesAssignment_3_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_3_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8852:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8853:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8853:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8854:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_3_1_0_2_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_3_1_1_1"
    // InternalSTCoreParser.g:8863:1: rule__VarDeclaration__CountAssignment_3_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_3_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8867:1: ( ( ( Asterisk ) ) )
            // InternalSTCoreParser.g:8868:2: ( ( Asterisk ) )
            {
            // InternalSTCoreParser.g:8868:2: ( ( Asterisk ) )
            // InternalSTCoreParser.g:8869:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }
            // InternalSTCoreParser.g:8870:3: ( Asterisk )
            // InternalSTCoreParser.g:8871:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_3_1_1_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_3_1_1_2_1"
    // InternalSTCoreParser.g:8882:1: rule__VarDeclaration__CountAssignment_3_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_3_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8886:1: ( ( ( Asterisk ) ) )
            // InternalSTCoreParser.g:8887:2: ( ( Asterisk ) )
            {
            // InternalSTCoreParser.g:8887:2: ( ( Asterisk ) )
            // InternalSTCoreParser.g:8888:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }
            // InternalSTCoreParser.g:8889:3: ( Asterisk )
            // InternalSTCoreParser.g:8890:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_3_1_1_2_1"


    // $ANTLR start "rule__VarDeclaration__TypeAssignment_4"
    // InternalSTCoreParser.g:8901:1: rule__VarDeclaration__TypeAssignment_4 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__TypeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8905:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:8906:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:8906:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:8907:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementCrossReference_4_0()); 
            }
            // InternalSTCoreParser.g:8908:3: ( RULE_ID )
            // InternalSTCoreParser.g:8909:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementIDTerminalRuleCall_4_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementIDTerminalRuleCall_4_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementCrossReference_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__TypeAssignment_4"


    // $ANTLR start "rule__VarDeclaration__MaxLengthAssignment_5_1"
    // InternalSTCoreParser.g:8920:1: rule__VarDeclaration__MaxLengthAssignment_5_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__MaxLengthAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8924:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8925:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8925:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8926:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__MaxLengthAssignment_5_1"


    // $ANTLR start "rule__VarDeclaration__DefaultValueAssignment_6_1"
    // InternalSTCoreParser.g:8935:1: rule__VarDeclaration__DefaultValueAssignment_6_1 : ( ruleInitializerExpression ) ;
    public final void rule__VarDeclaration__DefaultValueAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8939:1: ( ( ruleInitializerExpression ) )
            // InternalSTCoreParser.g:8940:2: ( ruleInitializerExpression )
            {
            // InternalSTCoreParser.g:8940:2: ( ruleInitializerExpression )
            // InternalSTCoreParser.g:8941:3: ruleInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__DefaultValueAssignment_6_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_1"
    // InternalSTCoreParser.g:8950:1: rule__ArrayInitializerExpression__ValuesAssignment_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8954:1: ( ( ruleArrayInitElement ) )
            // InternalSTCoreParser.g:8955:2: ( ruleArrayInitElement )
            {
            // InternalSTCoreParser.g:8955:2: ( ruleArrayInitElement )
            // InternalSTCoreParser.g:8956:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_2_1"
    // InternalSTCoreParser.g:8965:1: rule__ArrayInitializerExpression__ValuesAssignment_2_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8969:1: ( ( ruleArrayInitElement ) )
            // InternalSTCoreParser.g:8970:2: ( ruleArrayInitElement )
            {
            // InternalSTCoreParser.g:8970:2: ( ruleArrayInitElement )
            // InternalSTCoreParser.g:8971:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"
    // InternalSTCoreParser.g:8980:1: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__IndexOrInitExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8984:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:8985:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:8985:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:8986:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"


    // $ANTLR start "rule__ArrayInitElement__InitExpressionAssignment_1_1"
    // InternalSTCoreParser.g:8995:1: rule__ArrayInitElement__InitExpressionAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__InitExpressionAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:8999:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9000:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9000:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9001:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__InitExpressionAssignment_1_1"


    // $ANTLR start "rule__STAssignmentStatement__LhsAssignment_0"
    // InternalSTCoreParser.g:9010:1: rule__STAssignmentStatement__LhsAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__STAssignmentStatement__LhsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9014:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9015:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9015:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9016:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationCrossReference_0_0()); 
            }
            // InternalSTCoreParser.g:9017:3: ( RULE_ID )
            // InternalSTCoreParser.g:9018:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__LhsAssignment_0"


    // $ANTLR start "rule__STAssignmentStatement__RhsAssignment_2"
    // InternalSTCoreParser.g:9029:1: rule__STAssignmentStatement__RhsAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STAssignmentStatement__RhsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9033:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9034:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9034:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9035:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRhsSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRhsSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__RhsAssignment_2"


    // $ANTLR start "rule__STIfStatment__ConditionAssignment_1"
    // InternalSTCoreParser.g:9044:1: rule__STIfStatment__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STIfStatment__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9048:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9049:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9049:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9050:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ConditionAssignment_1"


    // $ANTLR start "rule__STIfStatment__StatementsAssignment_3"
    // InternalSTCoreParser.g:9059:1: rule__STIfStatment__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STIfStatment__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9063:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9064:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9064:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9065:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__StatementsAssignment_3"


    // $ANTLR start "rule__STIfStatment__ElseifsAssignment_4"
    // InternalSTCoreParser.g:9074:1: rule__STIfStatment__ElseifsAssignment_4 : ( ruleSTElseIfPart ) ;
    public final void rule__STIfStatment__ElseifsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9078:1: ( ( ruleSTElseIfPart ) )
            // InternalSTCoreParser.g:9079:2: ( ruleSTElseIfPart )
            {
            // InternalSTCoreParser.g:9079:2: ( ruleSTElseIfPart )
            // InternalSTCoreParser.g:9080:3: ruleSTElseIfPart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ElseifsAssignment_4"


    // $ANTLR start "rule__STIfStatment__ElseAssignment_5"
    // InternalSTCoreParser.g:9089:1: rule__STIfStatment__ElseAssignment_5 : ( ruleSTElsePart ) ;
    public final void rule__STIfStatment__ElseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9093:1: ( ( ruleSTElsePart ) )
            // InternalSTCoreParser.g:9094:2: ( ruleSTElsePart )
            {
            // InternalSTCoreParser.g:9094:2: ( ruleSTElsePart )
            // InternalSTCoreParser.g:9095:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ElseAssignment_5"


    // $ANTLR start "rule__STElseIfPart__ConditionAssignment_1"
    // InternalSTCoreParser.g:9104:1: rule__STElseIfPart__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STElseIfPart__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9108:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9109:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9109:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9110:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__ConditionAssignment_1"


    // $ANTLR start "rule__STElseIfPart__StatementsAssignment_3"
    // InternalSTCoreParser.g:9119:1: rule__STElseIfPart__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STElseIfPart__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9123:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9124:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9124:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9125:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__StatementsAssignment_3"


    // $ANTLR start "rule__STCaseStatement__SelectorAssignment_1"
    // InternalSTCoreParser.g:9134:1: rule__STCaseStatement__SelectorAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseStatement__SelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9138:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9139:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9139:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9140:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__SelectorAssignment_1"


    // $ANTLR start "rule__STCaseStatement__CasesAssignment_3"
    // InternalSTCoreParser.g:9149:1: rule__STCaseStatement__CasesAssignment_3 : ( ruleSTCaseCases ) ;
    public final void rule__STCaseStatement__CasesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9153:1: ( ( ruleSTCaseCases ) )
            // InternalSTCoreParser.g:9154:2: ( ruleSTCaseCases )
            {
            // InternalSTCoreParser.g:9154:2: ( ruleSTCaseCases )
            // InternalSTCoreParser.g:9155:3: ruleSTCaseCases
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__CasesAssignment_3"


    // $ANTLR start "rule__STCaseStatement__ElseAssignment_4"
    // InternalSTCoreParser.g:9164:1: rule__STCaseStatement__ElseAssignment_4 : ( ruleSTElsePart ) ;
    public final void rule__STCaseStatement__ElseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9168:1: ( ( ruleSTElsePart ) )
            // InternalSTCoreParser.g:9169:2: ( ruleSTElsePart )
            {
            // InternalSTCoreParser.g:9169:2: ( ruleSTElsePart )
            // InternalSTCoreParser.g:9170:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__ElseAssignment_4"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_0"
    // InternalSTCoreParser.g:9179:1: rule__STCaseCases__ConditionsAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9183:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9184:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9184:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9185:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_0"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_1_1"
    // InternalSTCoreParser.g:9194:1: rule__STCaseCases__ConditionsAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9198:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9199:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9199:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9200:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_1_1"


    // $ANTLR start "rule__STCaseCases__StatementsAssignment_3"
    // InternalSTCoreParser.g:9209:1: rule__STCaseCases__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STCaseCases__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9213:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9214:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9214:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9215:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__StatementsAssignment_3"


    // $ANTLR start "rule__STElsePart__StatementsAssignment_2"
    // InternalSTCoreParser.g:9224:1: rule__STElsePart__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STElsePart__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9228:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9229:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9229:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9230:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__StatementsAssignment_2"


    // $ANTLR start "rule__STForStatement__ForAssignment_1"
    // InternalSTCoreParser.g:9239:1: rule__STForStatement__ForAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ForAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9243:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9244:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9244:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9245:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getForSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getForSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ForAssignment_1"


    // $ANTLR start "rule__STForStatement__ToAssignment_3"
    // InternalSTCoreParser.g:9254:1: rule__STForStatement__ToAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ToAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9258:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9259:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9259:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9260:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ToAssignment_3"


    // $ANTLR start "rule__STForStatement__ByAssignment_4_1"
    // InternalSTCoreParser.g:9269:1: rule__STForStatement__ByAssignment_4_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ByAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9273:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9274:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9274:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9275:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ByAssignment_4_1"


    // $ANTLR start "rule__STForStatement__StatementsAssignment_6"
    // InternalSTCoreParser.g:9284:1: rule__STForStatement__StatementsAssignment_6 : ( ruleSTStatement ) ;
    public final void rule__STForStatement__StatementsAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9288:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9289:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9289:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9290:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__StatementsAssignment_6"


    // $ANTLR start "rule__STWhileStatement__ConditionAssignment_1"
    // InternalSTCoreParser.g:9299:1: rule__STWhileStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STWhileStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9303:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9304:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9304:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9305:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STWhileStatement__StatementsAssignment_3"
    // InternalSTCoreParser.g:9314:1: rule__STWhileStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STWhileStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9318:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9319:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9319:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9320:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STRepeatStatement__StatementsAssignment_1"
    // InternalSTCoreParser.g:9329:1: rule__STRepeatStatement__StatementsAssignment_1 : ( ruleSTStatement ) ;
    public final void rule__STRepeatStatement__StatementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9333:1: ( ( ruleSTStatement ) )
            // InternalSTCoreParser.g:9334:2: ( ruleSTStatement )
            {
            // InternalSTCoreParser.g:9334:2: ( ruleSTStatement )
            // InternalSTCoreParser.g:9335:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__StatementsAssignment_1"


    // $ANTLR start "rule__STRepeatStatement__ConditionAssignment_3"
    // InternalSTCoreParser.g:9344:1: rule__STRepeatStatement__ConditionAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STRepeatStatement__ConditionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9348:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9349:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9349:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9350:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__ConditionAssignment_3"


    // $ANTLR start "rule__STSubrangeExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9359:1: rule__STSubrangeExpression__OpAssignment_1_0_1 : ( ruleSubrangeOperator ) ;
    public final void rule__STSubrangeExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9363:1: ( ( ruleSubrangeOperator ) )
            // InternalSTCoreParser.g:9364:2: ( ruleSubrangeOperator )
            {
            // InternalSTCoreParser.g:9364:2: ( ruleSubrangeOperator )
            // InternalSTCoreParser.g:9365:3: ruleSubrangeOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubrangeOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STSubrangeExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9374:1: rule__STSubrangeExpression__RightAssignment_1_1 : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9378:1: ( ( ruleSTOrExpression ) )
            // InternalSTCoreParser.g:9379:2: ( ruleSTOrExpression )
            {
            // InternalSTCoreParser.g:9379:2: ( ruleSTOrExpression )
            // InternalSTCoreParser.g:9380:3: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STOrExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9389:1: rule__STOrExpression__OpAssignment_1_0_1 : ( ruleOrOperator ) ;
    public final void rule__STOrExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9393:1: ( ( ruleOrOperator ) )
            // InternalSTCoreParser.g:9394:2: ( ruleOrOperator )
            {
            // InternalSTCoreParser.g:9394:2: ( ruleOrOperator )
            // InternalSTCoreParser.g:9395:3: ruleOrOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STOrExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9404:1: rule__STOrExpression__RightAssignment_1_1 : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9408:1: ( ( ruleSTXorExpression ) )
            // InternalSTCoreParser.g:9409:2: ( ruleSTXorExpression )
            {
            // InternalSTCoreParser.g:9409:2: ( ruleSTXorExpression )
            // InternalSTCoreParser.g:9410:3: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STXorExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9419:1: rule__STXorExpression__OpAssignment_1_0_1 : ( ruleXorOperator ) ;
    public final void rule__STXorExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9423:1: ( ( ruleXorOperator ) )
            // InternalSTCoreParser.g:9424:2: ( ruleXorOperator )
            {
            // InternalSTCoreParser.g:9424:2: ( ruleXorOperator )
            // InternalSTCoreParser.g:9425:3: ruleXorOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXorOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STXorExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9434:1: rule__STXorExpression__RightAssignment_1_1 : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9438:1: ( ( ruleSTAndExpression ) )
            // InternalSTCoreParser.g:9439:2: ( ruleSTAndExpression )
            {
            // InternalSTCoreParser.g:9439:2: ( ruleSTAndExpression )
            // InternalSTCoreParser.g:9440:3: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAndExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9449:1: rule__STAndExpression__OpAssignment_1_0_1 : ( ruleAndOperator ) ;
    public final void rule__STAndExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9453:1: ( ( ruleAndOperator ) )
            // InternalSTCoreParser.g:9454:2: ( ruleAndOperator )
            {
            // InternalSTCoreParser.g:9454:2: ( ruleAndOperator )
            // InternalSTCoreParser.g:9455:3: ruleAndOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAndOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAndExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9464:1: rule__STAndExpression__RightAssignment_1_1 : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9468:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTCoreParser.g:9469:2: ( ruleSTEqualityExpression )
            {
            // InternalSTCoreParser.g:9469:2: ( ruleSTEqualityExpression )
            // InternalSTCoreParser.g:9470:3: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STEqualityExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9479:1: rule__STEqualityExpression__OpAssignment_1_0_1 : ( ruleEqualityOperator ) ;
    public final void rule__STEqualityExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9483:1: ( ( ruleEqualityOperator ) )
            // InternalSTCoreParser.g:9484:2: ( ruleEqualityOperator )
            {
            // InternalSTCoreParser.g:9484:2: ( ruleEqualityOperator )
            // InternalSTCoreParser.g:9485:3: ruleEqualityOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STEqualityExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9494:1: rule__STEqualityExpression__RightAssignment_1_1 : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9498:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTCoreParser.g:9499:2: ( ruleSTComparisonExpression )
            {
            // InternalSTCoreParser.g:9499:2: ( ruleSTComparisonExpression )
            // InternalSTCoreParser.g:9500:3: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STComparisonExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9509:1: rule__STComparisonExpression__OpAssignment_1_0_1 : ( ruleCompareOperator ) ;
    public final void rule__STComparisonExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9513:1: ( ( ruleCompareOperator ) )
            // InternalSTCoreParser.g:9514:2: ( ruleCompareOperator )
            {
            // InternalSTCoreParser.g:9514:2: ( ruleCompareOperator )
            // InternalSTCoreParser.g:9515:3: ruleCompareOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STComparisonExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9524:1: rule__STComparisonExpression__RightAssignment_1_1 : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9528:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTCoreParser.g:9529:2: ( ruleSTAddSubExpression )
            {
            // InternalSTCoreParser.g:9529:2: ( ruleSTAddSubExpression )
            // InternalSTCoreParser.g:9530:3: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAddSubExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9539:1: rule__STAddSubExpression__OpAssignment_1_0_1 : ( ruleAddSubOperator ) ;
    public final void rule__STAddSubExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9543:1: ( ( ruleAddSubOperator ) )
            // InternalSTCoreParser.g:9544:2: ( ruleAddSubOperator )
            {
            // InternalSTCoreParser.g:9544:2: ( ruleAddSubOperator )
            // InternalSTCoreParser.g:9545:3: ruleAddSubOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAddSubOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAddSubExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9554:1: rule__STAddSubExpression__RightAssignment_1_1 : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9558:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTCoreParser.g:9559:2: ( ruleSTMulDivModExpression )
            {
            // InternalSTCoreParser.g:9559:2: ( ruleSTMulDivModExpression )
            // InternalSTCoreParser.g:9560:3: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STMulDivModExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9569:1: rule__STMulDivModExpression__OpAssignment_1_0_1 : ( ruleMulDivModOperator ) ;
    public final void rule__STMulDivModExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9573:1: ( ( ruleMulDivModOperator ) )
            // InternalSTCoreParser.g:9574:2: ( ruleMulDivModOperator )
            {
            // InternalSTCoreParser.g:9574:2: ( ruleMulDivModOperator )
            // InternalSTCoreParser.g:9575:3: ruleMulDivModOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulDivModOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STMulDivModExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9584:1: rule__STMulDivModExpression__RightAssignment_1_1 : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9588:1: ( ( ruleSTPowerExpression ) )
            // InternalSTCoreParser.g:9589:2: ( ruleSTPowerExpression )
            {
            // InternalSTCoreParser.g:9589:2: ( ruleSTPowerExpression )
            // InternalSTCoreParser.g:9590:3: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STPowerExpression__OpAssignment_1_0_1"
    // InternalSTCoreParser.g:9599:1: rule__STPowerExpression__OpAssignment_1_0_1 : ( rulePowerOperator ) ;
    public final void rule__STPowerExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9603:1: ( ( rulePowerOperator ) )
            // InternalSTCoreParser.g:9604:2: ( rulePowerOperator )
            {
            // InternalSTCoreParser.g:9604:2: ( rulePowerOperator )
            // InternalSTCoreParser.g:9605:3: rulePowerOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePowerOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STPowerExpression__RightAssignment_1_1"
    // InternalSTCoreParser.g:9614:1: rule__STPowerExpression__RightAssignment_1_1 : ( ruleSTSignumExpression ) ;
    public final void rule__STPowerExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9618:1: ( ( ruleSTSignumExpression ) )
            // InternalSTCoreParser.g:9619:2: ( ruleSTSignumExpression )
            {
            // InternalSTCoreParser.g:9619:2: ( ruleSTSignumExpression )
            // InternalSTCoreParser.g:9620:3: ruleSTSignumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightSTSignumExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightSTSignumExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STSignumExpression__OpAssignment_2_1"
    // InternalSTCoreParser.g:9629:1: rule__STSignumExpression__OpAssignment_2_1 : ( ruleUnaryOperator ) ;
    public final void rule__STSignumExpression__OpAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9633:1: ( ( ruleUnaryOperator ) )
            // InternalSTCoreParser.g:9634:2: ( ruleUnaryOperator )
            {
            // InternalSTCoreParser.g:9634:2: ( ruleUnaryOperator )
            // InternalSTCoreParser.g:9635:3: ruleUnaryOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getOpUnaryOperatorEnumRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getOpUnaryOperatorEnumRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__OpAssignment_2_1"


    // $ANTLR start "rule__STSignumExpression__ExpressionAssignment_2_2"
    // InternalSTCoreParser.g:9644:1: rule__STSignumExpression__ExpressionAssignment_2_2 : ( ruleSTSelectionExpression ) ;
    public final void rule__STSignumExpression__ExpressionAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9648:1: ( ( ruleSTSelectionExpression ) )
            // InternalSTCoreParser.g:9649:2: ( ruleSTSelectionExpression )
            {
            // InternalSTCoreParser.g:9649:2: ( ruleSTSelectionExpression )
            // InternalSTCoreParser.g:9650:3: ruleSTSelectionExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getExpressionSTSelectionExpressionParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSelectionExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getExpressionSTSelectionExpressionParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__ExpressionAssignment_2_2"


    // $ANTLR start "rule__STSelectionExpression__StructAccessAssignment_1_1_0_0"
    // InternalSTCoreParser.g:9659:1: rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 : ( ( FullStop ) ) ;
    public final void rule__STSelectionExpression__StructAccessAssignment_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9663:1: ( ( ( FullStop ) ) )
            // InternalSTCoreParser.g:9664:2: ( ( FullStop ) )
            {
            // InternalSTCoreParser.g:9664:2: ( ( FullStop ) )
            // InternalSTCoreParser.g:9665:3: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }
            // InternalSTCoreParser.g:9666:3: ( FullStop )
            // InternalSTCoreParser.g:9667:4: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__StructAccessAssignment_1_1_0_0"


    // $ANTLR start "rule__STSelectionExpression__MemberAssignment_1_1_0_1"
    // InternalSTCoreParser.g:9678:1: rule__STSelectionExpression__MemberAssignment_1_1_0_1 : ( ( RULE_ID ) ) ;
    public final void rule__STSelectionExpression__MemberAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9682:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9683:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9683:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9684:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationCrossReference_1_1_0_1_0()); 
            }
            // InternalSTCoreParser.g:9685:3: ( RULE_ID )
            // InternalSTCoreParser.g:9686:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationIDTerminalRuleCall_1_1_0_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationIDTerminalRuleCall_1_1_0_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationCrossReference_1_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__MemberAssignment_1_1_0_1"


    // $ANTLR start "rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0"
    // InternalSTCoreParser.g:9697:1: rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 : ( ( LeftSquareBracket ) ) ;
    public final void rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9701:1: ( ( ( LeftSquareBracket ) ) )
            // InternalSTCoreParser.g:9702:2: ( ( LeftSquareBracket ) )
            {
            // InternalSTCoreParser.g:9702:2: ( ( LeftSquareBracket ) )
            // InternalSTCoreParser.g:9703:3: ( LeftSquareBracket )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }
            // InternalSTCoreParser.g:9704:3: ( LeftSquareBracket )
            // InternalSTCoreParser.g:9705:4: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0"


    // $ANTLR start "rule__STSelectionExpression__IndexAssignment_1_1_1_1"
    // InternalSTCoreParser.g:9716:1: rule__STSelectionExpression__IndexAssignment_1_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__IndexAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9720:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9721:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9721:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9722:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__IndexAssignment_1_1_1_1"


    // $ANTLR start "rule__STSelectionExpression__IndexAssignment_1_1_1_2_1"
    // InternalSTCoreParser.g:9731:1: rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__IndexAssignment_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9735:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9736:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9736:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9737:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__IndexAssignment_1_1_1_2_1"


    // $ANTLR start "rule__STSelectionExpression__PoeInvocationAssignment_1_2_0"
    // InternalSTCoreParser.g:9746:1: rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STSelectionExpression__PoeInvocationAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9750:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTCoreParser.g:9751:2: ( ( LeftParenthesis ) )
            {
            // InternalSTCoreParser.g:9751:2: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:9752:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }
            // InternalSTCoreParser.g:9753:3: ( LeftParenthesis )
            // InternalSTCoreParser.g:9754:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__PoeInvocationAssignment_1_2_0"


    // $ANTLR start "rule__STSelectionExpression__ParametersAssignment_1_2_1_0"
    // InternalSTCoreParser.g:9765:1: rule__STSelectionExpression__ParametersAssignment_1_2_1_0 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__ParametersAssignment_1_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9769:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9770:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9770:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9771:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ParametersAssignment_1_2_1_0"


    // $ANTLR start "rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1"
    // InternalSTCoreParser.g:9780:1: rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9784:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9785:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9785:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9786:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1"


    // $ANTLR start "rule__STSelectionExpression__BitaccessorAssignment_1_3"
    // InternalSTCoreParser.g:9795:1: rule__STSelectionExpression__BitaccessorAssignment_1_3 : ( ruleMultibitPartialAccess ) ;
    public final void rule__STSelectionExpression__BitaccessorAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9799:1: ( ( ruleMultibitPartialAccess ) )
            // InternalSTCoreParser.g:9800:2: ( ruleMultibitPartialAccess )
            {
            // InternalSTCoreParser.g:9800:2: ( ruleMultibitPartialAccess )
            // InternalSTCoreParser.g:9801:3: ruleMultibitPartialAccess
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__BitaccessorAssignment_1_3"


    // $ANTLR start "rule__MultibitPartialAccess__AccessSpecifierAssignment_0"
    // InternalSTCoreParser.g:9810:1: rule__MultibitPartialAccess__AccessSpecifierAssignment_0 : ( ruleMultiBitAccessSpecifier ) ;
    public final void rule__MultibitPartialAccess__AccessSpecifierAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9814:1: ( ( ruleMultiBitAccessSpecifier ) )
            // InternalSTCoreParser.g:9815:2: ( ruleMultiBitAccessSpecifier )
            {
            // InternalSTCoreParser.g:9815:2: ( ruleMultiBitAccessSpecifier )
            // InternalSTCoreParser.g:9816:3: ruleMultiBitAccessSpecifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierMultiBitAccessSpecifierEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultiBitAccessSpecifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierMultiBitAccessSpecifierEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__AccessSpecifierAssignment_0"


    // $ANTLR start "rule__MultibitPartialAccess__IndexAssignment_1"
    // InternalSTCoreParser.g:9825:1: rule__MultibitPartialAccess__IndexAssignment_1 : ( RULE_INT ) ;
    public final void rule__MultibitPartialAccess__IndexAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9829:1: ( ( RULE_INT ) )
            // InternalSTCoreParser.g:9830:2: ( RULE_INT )
            {
            // InternalSTCoreParser.g:9830:2: ( RULE_INT )
            // InternalSTCoreParser.g:9831:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getIndexINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getIndexINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__IndexAssignment_1"


    // $ANTLR start "rule__STAtomicExpression__TypeAssignment_1_1_0"
    // InternalSTCoreParser.g:9840:1: rule__STAtomicExpression__TypeAssignment_1_1_0 : ( ( RULE_ID ) ) ;
    public final void rule__STAtomicExpression__TypeAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9844:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9845:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9845:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9846:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeCrossReference_1_1_0_0()); 
            }
            // InternalSTCoreParser.g:9847:3: ( RULE_ID )
            // InternalSTCoreParser.g:9848:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeIDTerminalRuleCall_1_1_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeIDTerminalRuleCall_1_1_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeCrossReference_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__TypeAssignment_1_1_0"


    // $ANTLR start "rule__STAtomicExpression__SymbolAssignment_1_2"
    // InternalSTCoreParser.g:9859:1: rule__STAtomicExpression__SymbolAssignment_1_2 : ( ( RULE_ID ) ) ;
    public final void rule__STAtomicExpression__SymbolAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9863:1: ( ( ( RULE_ID ) ) )
            // InternalSTCoreParser.g:9864:2: ( ( RULE_ID ) )
            {
            // InternalSTCoreParser.g:9864:2: ( ( RULE_ID ) )
            // InternalSTCoreParser.g:9865:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationCrossReference_1_2_0()); 
            }
            // InternalSTCoreParser.g:9866:3: ( RULE_ID )
            // InternalSTCoreParser.g:9867:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationIDTerminalRuleCall_1_2_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationIDTerminalRuleCall_1_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationCrossReference_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__SymbolAssignment_1_2"


    // $ANTLR start "rule__STAtomicExpression__BitaccessorAssignment_1_3"
    // InternalSTCoreParser.g:9878:1: rule__STAtomicExpression__BitaccessorAssignment_1_3 : ( ruleMultibitPartialAccess ) ;
    public final void rule__STAtomicExpression__BitaccessorAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9882:1: ( ( ruleMultibitPartialAccess ) )
            // InternalSTCoreParser.g:9883:2: ( ruleMultibitPartialAccess )
            {
            // InternalSTCoreParser.g:9883:2: ( ruleMultibitPartialAccess )
            // InternalSTCoreParser.g:9884:3: ruleMultibitPartialAccess
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__BitaccessorAssignment_1_3"


    // $ANTLR start "rule__STAtomicExpression__PoeInvocationAssignment_1_4_0"
    // InternalSTCoreParser.g:9893:1: rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STAtomicExpression__PoeInvocationAssignment_1_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9897:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTCoreParser.g:9898:2: ( ( LeftParenthesis ) )
            {
            // InternalSTCoreParser.g:9898:2: ( ( LeftParenthesis ) )
            // InternalSTCoreParser.g:9899:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }
            // InternalSTCoreParser.g:9900:3: ( LeftParenthesis )
            // InternalSTCoreParser.g:9901:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__PoeInvocationAssignment_1_4_0"


    // $ANTLR start "rule__STAtomicExpression__ParametersAssignment_1_4_1_0"
    // InternalSTCoreParser.g:9912:1: rule__STAtomicExpression__ParametersAssignment_1_4_1_0 : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__ParametersAssignment_1_4_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9916:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9917:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9917:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9918:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__ParametersAssignment_1_4_1_0"


    // $ANTLR start "rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1"
    // InternalSTCoreParser.g:9927:1: rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9931:1: ( ( ruleSTExpression ) )
            // InternalSTCoreParser.g:9932:2: ( ruleSTExpression )
            {
            // InternalSTCoreParser.g:9932:2: ( ruleSTExpression )
            // InternalSTCoreParser.g:9933:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1"


    // $ANTLR start "rule__STLiteralExpressions__BoolLiteralAssignment_0_1"
    // InternalSTCoreParser.g:9942:1: rule__STLiteralExpressions__BoolLiteralAssignment_0_1 : ( ruleBOOL_LITERAL ) ;
    public final void rule__STLiteralExpressions__BoolLiteralAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9946:1: ( ( ruleBOOL_LITERAL ) )
            // InternalSTCoreParser.g:9947:2: ( ruleBOOL_LITERAL )
            {
            // InternalSTCoreParser.g:9947:2: ( ruleBOOL_LITERAL )
            // InternalSTCoreParser.g:9948:3: ruleBOOL_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralBOOL_LITERALParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBOOL_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralBOOL_LITERALParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__BoolLiteralAssignment_0_1"


    // $ANTLR start "rule__STLiteralExpressions__NumericLiteralAssignment_1_1"
    // InternalSTCoreParser.g:9957:1: rule__STLiteralExpressions__NumericLiteralAssignment_1_1 : ( ruleNUMERIC_LITERAL ) ;
    public final void rule__STLiteralExpressions__NumericLiteralAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9961:1: ( ( ruleNUMERIC_LITERAL ) )
            // InternalSTCoreParser.g:9962:2: ( ruleNUMERIC_LITERAL )
            {
            // InternalSTCoreParser.g:9962:2: ( ruleNUMERIC_LITERAL )
            // InternalSTCoreParser.g:9963:3: ruleNUMERIC_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralNUMERIC_LITERALParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNUMERIC_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralNUMERIC_LITERALParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__NumericLiteralAssignment_1_1"


    // $ANTLR start "rule__STLiteralExpressions__DateLiteralAssignment_2_1"
    // InternalSTCoreParser.g:9972:1: rule__STLiteralExpressions__DateLiteralAssignment_2_1 : ( ruleDATE_LITERAL ) ;
    public final void rule__STLiteralExpressions__DateLiteralAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9976:1: ( ( ruleDATE_LITERAL ) )
            // InternalSTCoreParser.g:9977:2: ( ruleDATE_LITERAL )
            {
            // InternalSTCoreParser.g:9977:2: ( ruleDATE_LITERAL )
            // InternalSTCoreParser.g:9978:3: ruleDATE_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralDATE_LITERALParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralDATE_LITERALParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__DateLiteralAssignment_2_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeLiteralAssignment_3_1"
    // InternalSTCoreParser.g:9987:1: rule__STLiteralExpressions__TimeLiteralAssignment_3_1 : ( ruleTIME_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeLiteralAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:9991:1: ( ( ruleTIME_LITERAL ) )
            // InternalSTCoreParser.g:9992:2: ( ruleTIME_LITERAL )
            {
            // InternalSTCoreParser.g:9992:2: ( ruleTIME_LITERAL )
            // InternalSTCoreParser.g:9993:3: ruleTIME_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralTIME_LITERALParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralTIME_LITERALParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeLiteralAssignment_3_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1"
    // InternalSTCoreParser.g:10002:1: rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 : ( ruleTIME_OF_DAY_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10006:1: ( ( ruleTIME_OF_DAY_LITERAL ) )
            // InternalSTCoreParser.g:10007:2: ( ruleTIME_OF_DAY_LITERAL )
            {
            // InternalSTCoreParser.g:10007:2: ( ruleTIME_OF_DAY_LITERAL )
            // InternalSTCoreParser.g:10008:3: ruleTIME_OF_DAY_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralTIME_OF_DAY_LITERALParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralTIME_OF_DAY_LITERALParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeLiteralAssignment_5_1"
    // InternalSTCoreParser.g:10017:1: rule__STLiteralExpressions__TimeLiteralAssignment_5_1 : ( ruleDATE_AND_TIME_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeLiteralAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10021:1: ( ( ruleDATE_AND_TIME_LITERAL ) )
            // InternalSTCoreParser.g:10022:2: ( ruleDATE_AND_TIME_LITERAL )
            {
            // InternalSTCoreParser.g:10022:2: ( ruleDATE_AND_TIME_LITERAL )
            // InternalSTCoreParser.g:10023:3: ruleDATE_AND_TIME_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralDATE_AND_TIME_LITERALParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE_AND_TIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralDATE_AND_TIME_LITERALParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeLiteralAssignment_5_1"


    // $ANTLR start "rule__STLiteralExpressions__StringLiteralAssignment_6_1"
    // InternalSTCoreParser.g:10032:1: rule__STLiteralExpressions__StringLiteralAssignment_6_1 : ( ruleSTRING_LITERAL ) ;
    public final void rule__STLiteralExpressions__StringLiteralAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10036:1: ( ( ruleSTRING_LITERAL ) )
            // InternalSTCoreParser.g:10037:2: ( ruleSTRING_LITERAL )
            {
            // InternalSTCoreParser.g:10037:2: ( ruleSTRING_LITERAL )
            // InternalSTCoreParser.g:10038:3: ruleSTRING_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralSTRING_LITERALParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralSTRING_LITERALParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__StringLiteralAssignment_6_1"


    // $ANTLR start "rule__NUMERIC_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10047:1: rule__NUMERIC_LITERAL__KeywordAssignment_0 : ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__NUMERIC_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10051:1: ( ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10052:2: ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10052:2: ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10053:3: ( rule__NUMERIC_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10054:3: ( rule__NUMERIC_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10054:4: rule__NUMERIC_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__IntValueAssignment_1_0"
    // InternalSTCoreParser.g:10062:1: rule__NUMERIC_LITERAL__IntValueAssignment_1_0 : ( ruleINTEGER ) ;
    public final void rule__NUMERIC_LITERAL__IntValueAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10066:1: ( ( ruleINTEGER ) )
            // InternalSTCoreParser.g:10067:2: ( ruleINTEGER )
            {
            // InternalSTCoreParser.g:10067:2: ( ruleINTEGER )
            // InternalSTCoreParser.g:10068:3: ruleINTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getIntValueINTEGERParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getIntValueINTEGERParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__IntValueAssignment_1_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__RealValueAssignment_1_1"
    // InternalSTCoreParser.g:10077:1: rule__NUMERIC_LITERAL__RealValueAssignment_1_1 : ( ruleREAL ) ;
    public final void rule__NUMERIC_LITERAL__RealValueAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10081:1: ( ( ruleREAL ) )
            // InternalSTCoreParser.g:10082:2: ( ruleREAL )
            {
            // InternalSTCoreParser.g:10082:2: ( ruleREAL )
            // InternalSTCoreParser.g:10083:3: ruleREAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getRealValueREALParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleREAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getRealValueREALParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__RealValueAssignment_1_1"


    // $ANTLR start "rule__NUMERIC_LITERAL__HexValueAssignment_1_2"
    // InternalSTCoreParser.g:10092:1: rule__NUMERIC_LITERAL__HexValueAssignment_1_2 : ( RULE_NON_DECIMAL ) ;
    public final void rule__NUMERIC_LITERAL__HexValueAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10096:1: ( ( RULE_NON_DECIMAL ) )
            // InternalSTCoreParser.g:10097:2: ( RULE_NON_DECIMAL )
            {
            // InternalSTCoreParser.g:10097:2: ( RULE_NON_DECIMAL )
            // InternalSTCoreParser.g:10098:3: RULE_NON_DECIMAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getHexValueNON_DECIMALTerminalRuleCall_1_2_0()); 
            }
            match(input,RULE_NON_DECIMAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getHexValueNON_DECIMALTerminalRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__HexValueAssignment_1_2"


    // $ANTLR start "rule__DATE_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10107:1: rule__DATE_LITERAL__KeywordAssignment_0 : ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__DATE_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10111:1: ( ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10112:2: ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10112:2: ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10113:3: ( rule__DATE_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10114:3: ( rule__DATE_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10114:4: rule__DATE_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__DATE_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10122:1: rule__DATE_LITERAL__ValueAssignment_1 : ( ruleDATE ) ;
    public final void rule__DATE_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10126:1: ( ( ruleDATE ) )
            // InternalSTCoreParser.g:10127:2: ( ruleDATE )
            {
            // InternalSTCoreParser.g:10127:2: ( ruleDATE )
            // InternalSTCoreParser.g:10128:3: ruleDATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getValueDATEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getValueDATEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__TIME_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10137:1: rule__TIME_LITERAL__KeywordAssignment_0 : ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__TIME_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10141:1: ( ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10142:2: ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10142:2: ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10143:3: ( rule__TIME_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10144:3: ( rule__TIME_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10144:4: rule__TIME_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__TIME_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10152:1: rule__TIME_LITERAL__ValueAssignment_1 : ( RULE_TIME ) ;
    public final void rule__TIME_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10156:1: ( ( RULE_TIME ) )
            // InternalSTCoreParser.g:10157:2: ( RULE_TIME )
            {
            // InternalSTCoreParser.g:10157:2: ( RULE_TIME )
            // InternalSTCoreParser.g:10158:3: RULE_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getValueTIMETerminalRuleCall_1_0()); 
            }
            match(input,RULE_TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getValueTIMETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10167:1: rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 : ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10171:1: ( ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10172:2: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10172:2: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10173:3: ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10174:3: ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10174:4: rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10182:1: rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 : ( ruleTIME_OF_DAY ) ;
    public final void rule__TIME_OF_DAY_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10186:1: ( ( ruleTIME_OF_DAY ) )
            // InternalSTCoreParser.g:10187:2: ( ruleTIME_OF_DAY )
            {
            // InternalSTCoreParser.g:10187:2: ( ruleTIME_OF_DAY )
            // InternalSTCoreParser.g:10188:3: ruleTIME_OF_DAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueTIME_OF_DAYParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueTIME_OF_DAYParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0"
    // InternalSTCoreParser.g:10197:1: rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 : ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10201:1: ( ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTCoreParser.g:10202:2: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTCoreParser.g:10202:2: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTCoreParser.g:10203:3: ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTCoreParser.g:10204:3: ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTCoreParser.g:10204:4: rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1"
    // InternalSTCoreParser.g:10212:1: rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 : ( ruleDATE ) ;
    public final void rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10216:1: ( ( ruleDATE ) )
            // InternalSTCoreParser.g:10217:2: ( ruleDATE )
            {
            // InternalSTCoreParser.g:10217:2: ( ruleDATE )
            // InternalSTCoreParser.g:10218:3: ruleDATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueDATEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueDATEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3"
    // InternalSTCoreParser.g:10227:1: rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 : ( ruleTIME_OF_DAY ) ;
    public final void rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10231:1: ( ( ruleTIME_OF_DAY ) )
            // InternalSTCoreParser.g:10232:2: ( ruleTIME_OF_DAY )
            {
            // InternalSTCoreParser.g:10232:2: ( ruleTIME_OF_DAY )
            // InternalSTCoreParser.g:10233:3: ruleTIME_OF_DAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueTIME_OF_DAYParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueTIME_OF_DAYParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3"


    // $ANTLR start "rule__STRING_LITERAL__KeywordAssignment_0_0"
    // InternalSTCoreParser.g:10242:1: rule__STRING_LITERAL__KeywordAssignment_0_0 : ( ( STRING ) ) ;
    public final void rule__STRING_LITERAL__KeywordAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10246:1: ( ( ( STRING ) ) )
            // InternalSTCoreParser.g:10247:2: ( ( STRING ) )
            {
            // InternalSTCoreParser.g:10247:2: ( ( STRING ) )
            // InternalSTCoreParser.g:10248:3: ( STRING )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }
            // InternalSTCoreParser.g:10249:3: ( STRING )
            // InternalSTCoreParser.g:10250:4: STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }
            match(input,STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__KeywordAssignment_0_0"


    // $ANTLR start "rule__STRING_LITERAL__ValueAssignment_1"
    // InternalSTCoreParser.g:10261:1: rule__STRING_LITERAL__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__STRING_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTCoreParser.g:10265:1: ( ( RULE_STRING ) )
            // InternalSTCoreParser.g:10266:2: ( RULE_STRING )
            {
            // InternalSTCoreParser.g:10266:2: ( RULE_STRING )
            // InternalSTCoreParser.g:10267:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__ValueAssignment_1"

    // $ANTLR start synpred102_InternalSTCoreParser
    public final void synpred102_InternalSTCoreParser_fragment() throws RecognitionException {   
        // InternalSTCoreParser.g:6516:3: ( rule__STSelectionExpression__Group_1_2__0 )
        // InternalSTCoreParser.g:6516:3: rule__STSelectionExpression__Group_1_2__0
        {
        pushFollow(FOLLOW_2);
        rule__STSelectionExpression__Group_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred102_InternalSTCoreParser

    // $ANTLR start synpred109_InternalSTCoreParser
    public final void synpred109_InternalSTCoreParser_fragment() throws RecognitionException {   
        // InternalSTCoreParser.g:7217:3: ( rule__STAtomicExpression__Group_1_4__0 )
        // InternalSTCoreParser.g:7217:3: rule__STAtomicExpression__Group_1_4__0
        {
        pushFollow(FOLLOW_2);
        rule__STAtomicExpression__Group_1_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred109_InternalSTCoreParser

    // Delegated rules

    public final boolean synpred102_InternalSTCoreParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalSTCoreParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalSTCoreParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalSTCoreParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA58 dfa58 = new DFA58(this);
    protected DFA65 dfa65 = new DFA65(this);
    static final String dfa_1s = "\47\uffff";
    static final String dfa_2s = "\1\2\46\uffff";
    static final String dfa_3s = "\1\7\1\0\45\uffff";
    static final String dfa_4s = "\1\145\1\0\45\uffff";
    static final String dfa_5s = "\2\uffff\1\2\43\uffff\1\1";
    static final String dfa_6s = "\1\uffff\1\0\45\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\55\uffff\1\2\2\uffff\6\2\4\uffff\1\2\2\uffff\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\1\16\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "6516:2: ( rule__STSelectionExpression__Group_1_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA58_1 = input.LA(1);

                         
                        int index58_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalSTCoreParser()) ) {s = 38;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index58_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 58, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\42\uffff";
    static final String dfa_9s = "\1\2\41\uffff";
    static final String dfa_10s = "\1\7\1\0\40\uffff";
    static final String dfa_11s = "\1\145\1\0\40\uffff";
    static final String dfa_12s = "\2\uffff\1\2\36\uffff\1\1";
    static final String dfa_13s = "\1\uffff\1\0\40\uffff}>";
    static final String[] dfa_14s = {
            "\1\2\55\uffff\1\2\7\uffff\1\2\4\uffff\1\2\2\uffff\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\1\16\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "7217:2: ( rule__STAtomicExpression__Group_1_4__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_1 = input.LA(1);

                         
                        int index65_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalSTCoreParser()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index65_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x8005400006001002L,0x0000080100010000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000000080001000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000080000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000001100000100L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x40D89FDF79EC8070L,0x000019801488400BL});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000002008000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x40D89FDF79EC8070L,0x000019901488400BL});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x8005400006001000L,0x0000080000010000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x8005400006001000L,0x0000080100010000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x8007402006101000L,0x0000080100010000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0002000000002000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x40D89FDF79EC8072L,0x000019801488400BL});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000088000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x000000000000A000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x8005400006011000L,0x0000080100010000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x8005400006001200L,0x0000080100010000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x8005600006001000L,0x0000080100010000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x2000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x2000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000400L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000400L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000A00000A00L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0000000A00000A00L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000014000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000002L,0x0000000014000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000042000004L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000042000004L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000080000800000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000001020000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x0000001020000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x1F00000000000000L,0x0000000020800000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x40D89FDF79EC8070L,0x000019801588400BL});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0080004100000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0008969339480000L,0x0000018014000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000800200000L,0x0000000000004001L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000080000800000L,0x0000000000080002L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0040010000000040L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x4010000000000030L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x40D89FDF79EC8070L,0x0000118014084003L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000010014000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000050000000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});

}