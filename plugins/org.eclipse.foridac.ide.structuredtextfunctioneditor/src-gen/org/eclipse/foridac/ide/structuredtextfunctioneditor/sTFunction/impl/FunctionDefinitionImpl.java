/**
 * generated by Xtext 2.25.0
 */
package org.eclipse.foridac.ide.structuredtextfunctioneditor.sTFunction.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.fordiac.ide.model.data.DataType;

import org.eclipse.fordiac.ide.structuredtextcore.sTCore.STStatement;
import org.eclipse.fordiac.ide.structuredtextcore.sTCore.VarDeclaration;
import org.eclipse.fordiac.ide.structuredtextcore.sTCore.VarDeclarationBlock;

import org.eclipse.foridac.ide.structuredtextfunctioneditor.sTFunction.FunctionDefinition;
import org.eclipse.foridac.ide.structuredtextfunctioneditor.sTFunction.STFunctionPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Function Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.eclipse.foridac.ide.structuredtextfunctioneditor.sTFunction.impl.FunctionDefinitionImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.eclipse.foridac.ide.structuredtextfunctioneditor.sTFunction.impl.FunctionDefinitionImpl#getReturnType <em>Return Type</em>}</li>
 *   <li>{@link org.eclipse.foridac.ide.structuredtextfunctioneditor.sTFunction.impl.FunctionDefinitionImpl#getVarDeclarations <em>Var Declarations</em>}</li>
 *   <li>{@link org.eclipse.foridac.ide.structuredtextfunctioneditor.sTFunction.impl.FunctionDefinitionImpl#getVarTempDeclarations <em>Var Temp Declarations</em>}</li>
 *   <li>{@link org.eclipse.foridac.ide.structuredtextfunctioneditor.sTFunction.impl.FunctionDefinitionImpl#getVarInpuDeclarations <em>Var Inpu Declarations</em>}</li>
 *   <li>{@link org.eclipse.foridac.ide.structuredtextfunctioneditor.sTFunction.impl.FunctionDefinitionImpl#getVarOutputDeclarations <em>Var Output Declarations</em>}</li>
 *   <li>{@link org.eclipse.foridac.ide.structuredtextfunctioneditor.sTFunction.impl.FunctionDefinitionImpl#getCode <em>Code</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FunctionDefinitionImpl extends MinimalEObjectImpl.Container implements FunctionDefinition
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getReturnType() <em>Return Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturnType()
   * @generated
   * @ordered
   */
  protected DataType returnType;

  /**
   * The cached value of the '{@link #getVarDeclarations() <em>Var Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarDeclarations()
   * @generated
   * @ordered
   */
  protected EList<VarDeclaration> varDeclarations;

  /**
   * The cached value of the '{@link #getVarTempDeclarations() <em>Var Temp Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarTempDeclarations()
   * @generated
   * @ordered
   */
  protected EList<VarDeclarationBlock> varTempDeclarations;

  /**
   * The cached value of the '{@link #getVarInpuDeclarations() <em>Var Inpu Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarInpuDeclarations()
   * @generated
   * @ordered
   */
  protected EList<VarDeclarationBlock> varInpuDeclarations;

  /**
   * The cached value of the '{@link #getVarOutputDeclarations() <em>Var Output Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarOutputDeclarations()
   * @generated
   * @ordered
   */
  protected EList<VarDeclarationBlock> varOutputDeclarations;

  /**
   * The cached value of the '{@link #getCode() <em>Code</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCode()
   * @generated
   * @ordered
   */
  protected EList<STStatement> code;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FunctionDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return STFunctionPackage.Literals.FUNCTION_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, STFunctionPackage.FUNCTION_DEFINITION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataType getReturnType()
  {
    if (returnType != null && returnType.eIsProxy())
    {
      InternalEObject oldReturnType = (InternalEObject)returnType;
      returnType = (DataType)eResolveProxy(oldReturnType);
      if (returnType != oldReturnType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, STFunctionPackage.FUNCTION_DEFINITION__RETURN_TYPE, oldReturnType, returnType));
      }
    }
    return returnType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataType basicGetReturnType()
  {
    return returnType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReturnType(DataType newReturnType)
  {
    DataType oldReturnType = returnType;
    returnType = newReturnType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, STFunctionPackage.FUNCTION_DEFINITION__RETURN_TYPE, oldReturnType, returnType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VarDeclaration> getVarDeclarations()
  {
    if (varDeclarations == null)
    {
      varDeclarations = new EObjectContainmentEList<VarDeclaration>(VarDeclaration.class, this, STFunctionPackage.FUNCTION_DEFINITION__VAR_DECLARATIONS);
    }
    return varDeclarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VarDeclarationBlock> getVarTempDeclarations()
  {
    if (varTempDeclarations == null)
    {
      varTempDeclarations = new EObjectContainmentEList<VarDeclarationBlock>(VarDeclarationBlock.class, this, STFunctionPackage.FUNCTION_DEFINITION__VAR_TEMP_DECLARATIONS);
    }
    return varTempDeclarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VarDeclarationBlock> getVarInpuDeclarations()
  {
    if (varInpuDeclarations == null)
    {
      varInpuDeclarations = new EObjectContainmentEList<VarDeclarationBlock>(VarDeclarationBlock.class, this, STFunctionPackage.FUNCTION_DEFINITION__VAR_INPU_DECLARATIONS);
    }
    return varInpuDeclarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VarDeclarationBlock> getVarOutputDeclarations()
  {
    if (varOutputDeclarations == null)
    {
      varOutputDeclarations = new EObjectContainmentEList<VarDeclarationBlock>(VarDeclarationBlock.class, this, STFunctionPackage.FUNCTION_DEFINITION__VAR_OUTPUT_DECLARATIONS);
    }
    return varOutputDeclarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<STStatement> getCode()
  {
    if (code == null)
    {
      code = new EObjectContainmentEList<STStatement>(STStatement.class, this, STFunctionPackage.FUNCTION_DEFINITION__CODE);
    }
    return code;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_DECLARATIONS:
        return ((InternalEList<?>)getVarDeclarations()).basicRemove(otherEnd, msgs);
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_TEMP_DECLARATIONS:
        return ((InternalEList<?>)getVarTempDeclarations()).basicRemove(otherEnd, msgs);
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_INPU_DECLARATIONS:
        return ((InternalEList<?>)getVarInpuDeclarations()).basicRemove(otherEnd, msgs);
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_OUTPUT_DECLARATIONS:
        return ((InternalEList<?>)getVarOutputDeclarations()).basicRemove(otherEnd, msgs);
      case STFunctionPackage.FUNCTION_DEFINITION__CODE:
        return ((InternalEList<?>)getCode()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case STFunctionPackage.FUNCTION_DEFINITION__NAME:
        return getName();
      case STFunctionPackage.FUNCTION_DEFINITION__RETURN_TYPE:
        if (resolve) return getReturnType();
        return basicGetReturnType();
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_DECLARATIONS:
        return getVarDeclarations();
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_TEMP_DECLARATIONS:
        return getVarTempDeclarations();
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_INPU_DECLARATIONS:
        return getVarInpuDeclarations();
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_OUTPUT_DECLARATIONS:
        return getVarOutputDeclarations();
      case STFunctionPackage.FUNCTION_DEFINITION__CODE:
        return getCode();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case STFunctionPackage.FUNCTION_DEFINITION__NAME:
        setName((String)newValue);
        return;
      case STFunctionPackage.FUNCTION_DEFINITION__RETURN_TYPE:
        setReturnType((DataType)newValue);
        return;
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_DECLARATIONS:
        getVarDeclarations().clear();
        getVarDeclarations().addAll((Collection<? extends VarDeclaration>)newValue);
        return;
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_TEMP_DECLARATIONS:
        getVarTempDeclarations().clear();
        getVarTempDeclarations().addAll((Collection<? extends VarDeclarationBlock>)newValue);
        return;
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_INPU_DECLARATIONS:
        getVarInpuDeclarations().clear();
        getVarInpuDeclarations().addAll((Collection<? extends VarDeclarationBlock>)newValue);
        return;
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_OUTPUT_DECLARATIONS:
        getVarOutputDeclarations().clear();
        getVarOutputDeclarations().addAll((Collection<? extends VarDeclarationBlock>)newValue);
        return;
      case STFunctionPackage.FUNCTION_DEFINITION__CODE:
        getCode().clear();
        getCode().addAll((Collection<? extends STStatement>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case STFunctionPackage.FUNCTION_DEFINITION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case STFunctionPackage.FUNCTION_DEFINITION__RETURN_TYPE:
        setReturnType((DataType)null);
        return;
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_DECLARATIONS:
        getVarDeclarations().clear();
        return;
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_TEMP_DECLARATIONS:
        getVarTempDeclarations().clear();
        return;
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_INPU_DECLARATIONS:
        getVarInpuDeclarations().clear();
        return;
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_OUTPUT_DECLARATIONS:
        getVarOutputDeclarations().clear();
        return;
      case STFunctionPackage.FUNCTION_DEFINITION__CODE:
        getCode().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case STFunctionPackage.FUNCTION_DEFINITION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case STFunctionPackage.FUNCTION_DEFINITION__RETURN_TYPE:
        return returnType != null;
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_DECLARATIONS:
        return varDeclarations != null && !varDeclarations.isEmpty();
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_TEMP_DECLARATIONS:
        return varTempDeclarations != null && !varTempDeclarations.isEmpty();
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_INPU_DECLARATIONS:
        return varInpuDeclarations != null && !varInpuDeclarations.isEmpty();
      case STFunctionPackage.FUNCTION_DEFINITION__VAR_OUTPUT_DECLARATIONS:
        return varOutputDeclarations != null && !varOutputDeclarations.isEmpty();
      case STFunctionPackage.FUNCTION_DEFINITION__CODE:
        return code != null && !code.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //FunctionDefinitionImpl
