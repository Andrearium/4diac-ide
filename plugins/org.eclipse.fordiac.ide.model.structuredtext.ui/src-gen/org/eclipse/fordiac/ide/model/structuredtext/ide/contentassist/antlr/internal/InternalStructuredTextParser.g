/*
 * generated by Xtext 2.21.0
 */
parser grammar InternalStructuredTextParser;

options {
	tokenVocab=InternalStructuredTextLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package org.eclipse.fordiac.ide.model.structuredtext.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.fordiac.ide.model.structuredtext.services.StructuredTextGrammarAccess;

}
@members {
	private StructuredTextGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("NumberSign", "'#'");
		tokenNameToValue.put("Ampersand", "'&'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("D_1", "'D'");
		tokenNameToValue.put("E", "'E'");
		tokenNameToValue.put("T", "'T'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("KW__", "'_'");
		tokenNameToValue.put("D_1", "'d'");
		tokenNameToValue.put("H", "'h'");
		tokenNameToValue.put("M", "'m'");
		tokenNameToValue.put("S", "'s'");
		tokenNameToValue.put("AsteriskAsterisk", "'**'");
		tokenNameToValue.put("FullStopFullStop", "'..'");
		tokenNameToValue.put("ColonEqualsSign", "':='");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("AT", "'AT'");
		tokenNameToValue.put("BY", "'BY'");
		tokenNameToValue.put("DO", "'DO'");
		tokenNameToValue.put("DT", "'DT'");
		tokenNameToValue.put("IF", "'IF'");
		tokenNameToValue.put("LD", "'LD'");
		tokenNameToValue.put("LT", "'LT'");
		tokenNameToValue.put("OF", "'OF'");
		tokenNameToValue.put("OR", "'OR'");
		tokenNameToValue.put("TO", "'TO'");
		tokenNameToValue.put("Ms", "'ms'");
		tokenNameToValue.put("Ns", "'ns'");
		tokenNameToValue.put("Us", "'us'");
		tokenNameToValue.put("B", "'.\%B'");
		tokenNameToValue.put("D", "'.\%D'");
		tokenNameToValue.put("W", "'.\%W'");
		tokenNameToValue.put("X", "'.\%X'");
		tokenNameToValue.put("AND", "'AND'");
		tokenNameToValue.put("FOR", "'FOR'");
		tokenNameToValue.put("INT", "'INT'");
		tokenNameToValue.put("LDT", "'LDT'");
		tokenNameToValue.put("MOD", "'MOD'");
		tokenNameToValue.put("NOT", "'NOT'");
		tokenNameToValue.put("TOD", "'TOD'");
		tokenNameToValue.put("VAR", "'VAR'");
		tokenNameToValue.put("XOR", "'XOR'");
		tokenNameToValue.put("BOOL", "'BOOL'");
		tokenNameToValue.put("BYTE", "'BYTE'");
		tokenNameToValue.put("CASE", "'CASE'");
		tokenNameToValue.put("CHAR", "'CHAR'");
		tokenNameToValue.put("DATE", "'DATE'");
		tokenNameToValue.put("DINT", "'DINT'");
		tokenNameToValue.put("ELSE", "'ELSE'");
		tokenNameToValue.put("EXIT", "'EXIT'");
		tokenNameToValue.put("LINT", "'LINT'");
		tokenNameToValue.put("LTOD", "'LTOD'");
		tokenNameToValue.put("REAL", "'REAL'");
		tokenNameToValue.put("SINT", "'SINT'");
		tokenNameToValue.put("THEN", "'THEN'");
		tokenNameToValue.put("TIME", "'TIME'");
		tokenNameToValue.put("TRUE", "'TRUE'");
		tokenNameToValue.put("UINT", "'UINT'");
		tokenNameToValue.put("WORD", "'WORD'");
		tokenNameToValue.put("ARRAY", "'ARRAY'");
		tokenNameToValue.put("DWORD", "'DWORD'");
		tokenNameToValue.put("ELSIF", "'ELSIF'");
		tokenNameToValue.put("FALSE", "'FALSE'");
		tokenNameToValue.put("LDATE", "'LDATE'");
		tokenNameToValue.put("LREAL", "'LREAL'");
		tokenNameToValue.put("LTIME", "'LTIME'");
		tokenNameToValue.put("LWORD", "'LWORD'");
		tokenNameToValue.put("SUPER", "'SUPER'");
		tokenNameToValue.put("UDINT", "'UDINT'");
		tokenNameToValue.put("ULINT", "'ULINT'");
		tokenNameToValue.put("UNTIL", "'UNTIL'");
		tokenNameToValue.put("USINT", "'USINT'");
		tokenNameToValue.put("WCHAR", "'WCHAR'");
		tokenNameToValue.put("WHILE", "'WHILE'");
		tokenNameToValue.put("END_IF", "'END_IF'");
		tokenNameToValue.put("REPEAT", "'REPEAT'");
		tokenNameToValue.put("RETURN", "'RETURN'");
		tokenNameToValue.put("STRING", "'STRING'");
		tokenNameToValue.put("END_FOR", "'END_FOR'");
		tokenNameToValue.put("END_VAR", "'END_VAR'");
		tokenNameToValue.put("WSTRING", "'WSTRING'");
		tokenNameToValue.put("CONSTANT", "'CONSTANT'");
		tokenNameToValue.put("CONTINUE", "'CONTINUE'");
		tokenNameToValue.put("END_CASE", "'END_CASE'");
		tokenNameToValue.put("END_WHILE", "'END_WHILE'");
		tokenNameToValue.put("END_REPEAT", "'END_REPEAT'");
		tokenNameToValue.put("TIME_OF_DAY", "'TIME_OF_DAY'");
		tokenNameToValue.put("LTIME_OF_DAY", "'LTIME_OF_DAY'");
		tokenNameToValue.put("DATE_AND_TIME", "'DATE_AND_TIME'");
		tokenNameToValue.put("LDATE_AND_TIME", "'LDATE_AND_TIME'");
	}

	public void setGrammarAccess(StructuredTextGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleStructuredTextAlgorithm
entryRuleStructuredTextAlgorithm
:
{ before(grammarAccess.getStructuredTextAlgorithmRule()); }
	 ruleStructuredTextAlgorithm
{ after(grammarAccess.getStructuredTextAlgorithmRule()); } 
	 EOF 
;

// Rule StructuredTextAlgorithm
ruleStructuredTextAlgorithm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructuredTextAlgorithmAccess().getGroup()); }
		(rule__StructuredTextAlgorithm__Group__0)
		{ after(grammarAccess.getStructuredTextAlgorithmAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVar_Decl_Init
entryRuleVar_Decl_Init
:
{ before(grammarAccess.getVar_Decl_InitRule()); }
	 ruleVar_Decl_Init
{ after(grammarAccess.getVar_Decl_InitRule()); } 
	 EOF 
;

// Rule Var_Decl_Init
ruleVar_Decl_Init 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVar_Decl_InitAccess().getVar_Decl_LocalParserRuleCall()); }
		ruleVar_Decl_Local
		{ after(grammarAccess.getVar_Decl_InitAccess().getVar_Decl_LocalParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVar_Decl_Local
entryRuleVar_Decl_Local
:
{ before(grammarAccess.getVar_Decl_LocalRule()); }
	 ruleVar_Decl_Local
{ after(grammarAccess.getVar_Decl_LocalRule()); } 
	 EOF 
;

// Rule Var_Decl_Local
ruleVar_Decl_Local 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVar_Decl_LocalAccess().getGroup()); }
		(rule__Var_Decl_Local__Group__0)
		{ after(grammarAccess.getVar_Decl_LocalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStmt_List
entryRuleStmt_List
:
{ before(grammarAccess.getStmt_ListRule()); }
	 ruleStmt_List
{ after(grammarAccess.getStmt_ListRule()); } 
	 EOF 
;

// Rule Stmt_List
ruleStmt_List 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStmt_ListAccess().getGroup()); }
		(rule__Stmt_List__Group__0)
		{ after(grammarAccess.getStmt_ListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStmt
entryRuleStmt
:
{ before(grammarAccess.getStmtRule()); }
	 ruleStmt
{ after(grammarAccess.getStmtRule()); } 
	 EOF 
;

// Rule Stmt
ruleStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStmtAccess().getAlternatives()); }
		(rule__Stmt__Alternatives)
		{ after(grammarAccess.getStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssign_Stmt
entryRuleAssign_Stmt
:
{ before(grammarAccess.getAssign_StmtRule()); }
	 ruleAssign_Stmt
{ after(grammarAccess.getAssign_StmtRule()); } 
	 EOF 
;

// Rule Assign_Stmt
ruleAssign_Stmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssign_StmtAccess().getGroup()); }
		(rule__Assign_Stmt__Group__0)
		{ after(grammarAccess.getAssign_StmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubprog_Ctrl_Stmt
entryRuleSubprog_Ctrl_Stmt
:
{ before(grammarAccess.getSubprog_Ctrl_StmtRule()); }
	 ruleSubprog_Ctrl_Stmt
{ after(grammarAccess.getSubprog_Ctrl_StmtRule()); } 
	 EOF 
;

// Rule Subprog_Ctrl_Stmt
ruleSubprog_Ctrl_Stmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubprog_Ctrl_StmtAccess().getAlternatives()); }
		(rule__Subprog_Ctrl_Stmt__Alternatives)
		{ after(grammarAccess.getSubprog_Ctrl_StmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelection_Stmt
entryRuleSelection_Stmt
:
{ before(grammarAccess.getSelection_StmtRule()); }
	 ruleSelection_Stmt
{ after(grammarAccess.getSelection_StmtRule()); } 
	 EOF 
;

// Rule Selection_Stmt
ruleSelection_Stmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelection_StmtAccess().getAlternatives()); }
		(rule__Selection_Stmt__Alternatives)
		{ after(grammarAccess.getSelection_StmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIF_Stmt
entryRuleIF_Stmt
:
{ before(grammarAccess.getIF_StmtRule()); }
	 ruleIF_Stmt
{ after(grammarAccess.getIF_StmtRule()); } 
	 EOF 
;

// Rule IF_Stmt
ruleIF_Stmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIF_StmtAccess().getGroup()); }
		(rule__IF_Stmt__Group__0)
		{ after(grammarAccess.getIF_StmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleELSIF_Clause
entryRuleELSIF_Clause
:
{ before(grammarAccess.getELSIF_ClauseRule()); }
	 ruleELSIF_Clause
{ after(grammarAccess.getELSIF_ClauseRule()); } 
	 EOF 
;

// Rule ELSIF_Clause
ruleELSIF_Clause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getELSIF_ClauseAccess().getGroup()); }
		(rule__ELSIF_Clause__Group__0)
		{ after(grammarAccess.getELSIF_ClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleELSE_Clause
entryRuleELSE_Clause
:
{ before(grammarAccess.getELSE_ClauseRule()); }
	 ruleELSE_Clause
{ after(grammarAccess.getELSE_ClauseRule()); } 
	 EOF 
;

// Rule ELSE_Clause
ruleELSE_Clause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getELSE_ClauseAccess().getGroup()); }
		(rule__ELSE_Clause__Group__0)
		{ after(grammarAccess.getELSE_ClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCase_Stmt
entryRuleCase_Stmt
:
{ before(grammarAccess.getCase_StmtRule()); }
	 ruleCase_Stmt
{ after(grammarAccess.getCase_StmtRule()); } 
	 EOF 
;

// Rule Case_Stmt
ruleCase_Stmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCase_StmtAccess().getGroup()); }
		(rule__Case_Stmt__Group__0)
		{ after(grammarAccess.getCase_StmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCase_Selection
entryRuleCase_Selection
:
{ before(grammarAccess.getCase_SelectionRule()); }
	 ruleCase_Selection
{ after(grammarAccess.getCase_SelectionRule()); } 
	 EOF 
;

// Rule Case_Selection
ruleCase_Selection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCase_SelectionAccess().getGroup()); }
		(rule__Case_Selection__Group__0)
		{ after(grammarAccess.getCase_SelectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIteration_Stmt
entryRuleIteration_Stmt
:
{ before(grammarAccess.getIteration_StmtRule()); }
	 ruleIteration_Stmt
{ after(grammarAccess.getIteration_StmtRule()); } 
	 EOF 
;

// Rule Iteration_Stmt
ruleIteration_Stmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIteration_StmtAccess().getAlternatives()); }
		(rule__Iteration_Stmt__Alternatives)
		{ after(grammarAccess.getIteration_StmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFor_Stmt
entryRuleFor_Stmt
:
{ before(grammarAccess.getFor_StmtRule()); }
	 ruleFor_Stmt
{ after(grammarAccess.getFor_StmtRule()); } 
	 EOF 
;

// Rule For_Stmt
ruleFor_Stmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFor_StmtAccess().getGroup()); }
		(rule__For_Stmt__Group__0)
		{ after(grammarAccess.getFor_StmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhile_Stmt
entryRuleWhile_Stmt
:
{ before(grammarAccess.getWhile_StmtRule()); }
	 ruleWhile_Stmt
{ after(grammarAccess.getWhile_StmtRule()); } 
	 EOF 
;

// Rule While_Stmt
ruleWhile_Stmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhile_StmtAccess().getGroup()); }
		(rule__While_Stmt__Group__0)
		{ after(grammarAccess.getWhile_StmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepeat_Stmt
entryRuleRepeat_Stmt
:
{ before(grammarAccess.getRepeat_StmtRule()); }
	 ruleRepeat_Stmt
{ after(grammarAccess.getRepeat_StmtRule()); } 
	 EOF 
;

// Rule Repeat_Stmt
ruleRepeat_Stmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepeat_StmtAccess().getGroup()); }
		(rule__Repeat_Stmt__Group__0)
		{ after(grammarAccess.getRepeat_StmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getOr_ExpressionParserRuleCall()); }
		ruleOr_Expression
		{ after(grammarAccess.getExpressionAccess().getOr_ExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr_Expression
entryRuleOr_Expression
:
{ before(grammarAccess.getOr_ExpressionRule()); }
	 ruleOr_Expression
{ after(grammarAccess.getOr_ExpressionRule()); } 
	 EOF 
;

// Rule Or_Expression
ruleOr_Expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOr_ExpressionAccess().getGroup()); }
		(rule__Or_Expression__Group__0)
		{ after(grammarAccess.getOr_ExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXor_Expr
entryRuleXor_Expr
:
{ before(grammarAccess.getXor_ExprRule()); }
	 ruleXor_Expr
{ after(grammarAccess.getXor_ExprRule()); } 
	 EOF 
;

// Rule Xor_Expr
ruleXor_Expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXor_ExprAccess().getGroup()); }
		(rule__Xor_Expr__Group__0)
		{ after(grammarAccess.getXor_ExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd_Expr
entryRuleAnd_Expr
:
{ before(grammarAccess.getAnd_ExprRule()); }
	 ruleAnd_Expr
{ after(grammarAccess.getAnd_ExprRule()); } 
	 EOF 
;

// Rule And_Expr
ruleAnd_Expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnd_ExprAccess().getGroup()); }
		(rule__And_Expr__Group__0)
		{ after(grammarAccess.getAnd_ExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompare_Expr
entryRuleCompare_Expr
:
{ before(grammarAccess.getCompare_ExprRule()); }
	 ruleCompare_Expr
{ after(grammarAccess.getCompare_ExprRule()); } 
	 EOF 
;

// Rule Compare_Expr
ruleCompare_Expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompare_ExprAccess().getGroup()); }
		(rule__Compare_Expr__Group__0)
		{ after(grammarAccess.getCompare_ExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqu_Expr
entryRuleEqu_Expr
:
{ before(grammarAccess.getEqu_ExprRule()); }
	 ruleEqu_Expr
{ after(grammarAccess.getEqu_ExprRule()); } 
	 EOF 
;

// Rule Equ_Expr
ruleEqu_Expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqu_ExprAccess().getGroup()); }
		(rule__Equ_Expr__Group__0)
		{ after(grammarAccess.getEqu_ExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdd_Expr
entryRuleAdd_Expr
:
{ before(grammarAccess.getAdd_ExprRule()); }
	 ruleAdd_Expr
{ after(grammarAccess.getAdd_ExprRule()); } 
	 EOF 
;

// Rule Add_Expr
ruleAdd_Expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdd_ExprAccess().getGroup()); }
		(rule__Add_Expr__Group__0)
		{ after(grammarAccess.getAdd_ExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getGroup()); }
		(rule__Term__Group__0)
		{ after(grammarAccess.getTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePower_Expr
entryRulePower_Expr
:
{ before(grammarAccess.getPower_ExprRule()); }
	 rulePower_Expr
{ after(grammarAccess.getPower_ExprRule()); } 
	 EOF 
;

// Rule Power_Expr
rulePower_Expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPower_ExprAccess().getGroup()); }
		(rule__Power_Expr__Group__0)
		{ after(grammarAccess.getPower_ExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnary_Expr
entryRuleUnary_Expr
:
{ before(grammarAccess.getUnary_ExprRule()); }
	 ruleUnary_Expr
{ after(grammarAccess.getUnary_ExprRule()); } 
	 EOF 
;

// Rule Unary_Expr
ruleUnary_Expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnary_ExprAccess().getAlternatives()); }
		(rule__Unary_Expr__Alternatives)
		{ after(grammarAccess.getUnary_ExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary_Expr
entryRulePrimary_Expr
:
{ before(grammarAccess.getPrimary_ExprRule()); }
	 rulePrimary_Expr
{ after(grammarAccess.getPrimary_ExprRule()); } 
	 EOF 
;

// Rule Primary_Expr
rulePrimary_Expr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimary_ExprAccess().getAlternatives()); }
		(rule__Primary_Expr__Alternatives)
		{ after(grammarAccess.getPrimary_ExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunc_Call
entryRuleFunc_Call
:
{ before(grammarAccess.getFunc_CallRule()); }
	 ruleFunc_Call
{ after(grammarAccess.getFunc_CallRule()); } 
	 EOF 
;

// Rule Func_Call
ruleFunc_Call 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunc_CallAccess().getGroup()); }
		(rule__Func_Call__Group__0)
		{ after(grammarAccess.getFunc_CallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParam_Assign
entryRuleParam_Assign
:
{ before(grammarAccess.getParam_AssignRule()); }
	 ruleParam_Assign
{ after(grammarAccess.getParam_AssignRule()); } 
	 EOF 
;

// Rule Param_Assign
ruleParam_Assign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParam_AssignAccess().getAlternatives()); }
		(rule__Param_Assign__Alternatives)
		{ after(grammarAccess.getParam_AssignAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParam_Assign_In
entryRuleParam_Assign_In
:
{ before(grammarAccess.getParam_Assign_InRule()); }
	 ruleParam_Assign_In
{ after(grammarAccess.getParam_Assign_InRule()); } 
	 EOF 
;

// Rule Param_Assign_In
ruleParam_Assign_In 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParam_Assign_InAccess().getGroup()); }
		(rule__Param_Assign_In__Group__0)
		{ after(grammarAccess.getParam_Assign_InAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParam_Assign_Out
entryRuleParam_Assign_Out
:
{ before(grammarAccess.getParam_Assign_OutRule()); }
	 ruleParam_Assign_Out
{ after(grammarAccess.getParam_Assign_OutRule()); } 
	 EOF 
;

// Rule Param_Assign_Out
ruleParam_Assign_Out 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParam_Assign_OutAccess().getGroup()); }
		(rule__Param_Assign_Out__Group__0)
		{ after(grammarAccess.getParam_Assign_OutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable_Subscript
entryRuleVariable_Subscript
:
{ before(grammarAccess.getVariable_SubscriptRule()); }
	 ruleVariable_Subscript
{ after(grammarAccess.getVariable_SubscriptRule()); } 
	 EOF 
;

// Rule Variable_Subscript
ruleVariable_Subscript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_SubscriptAccess().getGroup()); }
		(rule__Variable_Subscript__Group__0)
		{ after(grammarAccess.getVariable_SubscriptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable_Adapter
entryRuleVariable_Adapter
:
{ before(grammarAccess.getVariable_AdapterRule()); }
	 ruleVariable_Adapter
{ after(grammarAccess.getVariable_AdapterRule()); } 
	 EOF 
;

// Rule Variable_Adapter
ruleVariable_Adapter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_AdapterAccess().getGroup()); }
		(rule__Variable_Adapter__Group__0)
		{ after(grammarAccess.getVariable_AdapterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultibit_Part_Access
entryRuleMultibit_Part_Access
:
{ before(grammarAccess.getMultibit_Part_AccessRule()); }
	 ruleMultibit_Part_Access
{ after(grammarAccess.getMultibit_Part_AccessRule()); } 
	 EOF 
;

// Rule Multibit_Part_Access
ruleMultibit_Part_Access 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getAlternatives()); }
		(rule__Multibit_Part_Access__Alternatives)
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdapter_Name
entryRuleAdapter_Name
:
{ before(grammarAccess.getAdapter_NameRule()); }
	 ruleAdapter_Name
{ after(grammarAccess.getAdapter_NameRule()); } 
	 EOF 
;

// Rule Adapter_Name
ruleAdapter_Name 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdapter_NameAccess().getAlternatives()); }
		(rule__Adapter_Name__Alternatives)
		{ after(grammarAccess.getAdapter_NameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable_Primary
entryRuleVariable_Primary
:
{ before(grammarAccess.getVariable_PrimaryRule()); }
	 ruleVariable_Primary
{ after(grammarAccess.getVariable_PrimaryRule()); } 
	 EOF 
;

// Rule Variable_Primary
ruleVariable_Primary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_PrimaryAccess().getVarAssignment()); }
		(rule__Variable_Primary__VarAssignment)
		{ after(grammarAccess.getVariable_PrimaryAccess().getVarAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable_Name
entryRuleVariable_Name
:
{ before(grammarAccess.getVariable_NameRule()); }
	 ruleVariable_Name
{ after(grammarAccess.getVariable_NameRule()); } 
	 EOF 
;

// Rule Variable_Name
ruleVariable_Name 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_NameAccess().getAlternatives()); }
		(rule__Variable_Name__Alternatives)
		{ after(grammarAccess.getVariable_NameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumeric_Literal
entryRuleNumeric_Literal
:
{ before(grammarAccess.getNumeric_LiteralRule()); }
	 ruleNumeric_Literal
{ after(grammarAccess.getNumeric_LiteralRule()); } 
	 EOF 
;

// Rule Numeric_Literal
ruleNumeric_Literal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumeric_LiteralAccess().getAlternatives()); }
		(rule__Numeric_Literal__Alternatives)
		{ after(grammarAccess.getNumeric_LiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInt_Literal
entryRuleInt_Literal
:
{ before(grammarAccess.getInt_LiteralRule()); }
	 ruleInt_Literal
{ after(grammarAccess.getInt_LiteralRule()); } 
	 EOF 
;

// Rule Int_Literal
ruleInt_Literal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInt_LiteralAccess().getGroup()); }
		(rule__Int_Literal__Group__0)
		{ after(grammarAccess.getInt_LiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSigned_Int
entryRuleSigned_Int
:
{ before(grammarAccess.getSigned_IntRule()); }
	 ruleSigned_Int
{ after(grammarAccess.getSigned_IntRule()); } 
	 EOF 
;

// Rule Signed_Int
ruleSigned_Int 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSigned_IntAccess().getGroup()); }
		(rule__Signed_Int__Group__0)
		{ after(grammarAccess.getSigned_IntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePartial_Value
entryRulePartial_Value
:
{ before(grammarAccess.getPartial_ValueRule()); }
	 rulePartial_Value
{ after(grammarAccess.getPartial_ValueRule()); } 
	 EOF 
;

// Rule Partial_Value
rulePartial_Value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPartial_ValueAccess().getUNSIGNED_INTTerminalRuleCall()); }
		RULE_UNSIGNED_INT
		{ after(grammarAccess.getPartial_ValueAccess().getUNSIGNED_INTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArray_Size
entryRuleArray_Size
:
{ before(grammarAccess.getArray_SizeRule()); }
	 ruleArray_Size
{ after(grammarAccess.getArray_SizeRule()); } 
	 EOF 
;

// Rule Array_Size
ruleArray_Size 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArray_SizeAccess().getUNSIGNED_INTTerminalRuleCall()); }
		RULE_UNSIGNED_INT
		{ after(grammarAccess.getArray_SizeAccess().getUNSIGNED_INTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReal_Literal
entryRuleReal_Literal
:
{ before(grammarAccess.getReal_LiteralRule()); }
	 ruleReal_Literal
{ after(grammarAccess.getReal_LiteralRule()); } 
	 EOF 
;

// Rule Real_Literal
ruleReal_Literal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReal_LiteralAccess().getGroup()); }
		(rule__Real_Literal__Group__0)
		{ after(grammarAccess.getReal_LiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReal_Value
entryRuleReal_Value
:
{ before(grammarAccess.getReal_ValueRule()); }
	 ruleReal_Value
{ after(grammarAccess.getReal_ValueRule()); } 
	 EOF 
;

// Rule Real_Value
ruleReal_Value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReal_ValueAccess().getGroup()); }
		(rule__Real_Value__Group__0)
		{ after(grammarAccess.getReal_ValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBool_Literal
entryRuleBool_Literal
:
{ before(grammarAccess.getBool_LiteralRule()); }
	 ruleBool_Literal
{ after(grammarAccess.getBool_LiteralRule()); } 
	 EOF 
;

// Rule Bool_Literal
ruleBool_Literal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBool_LiteralAccess().getGroup()); }
		(rule__Bool_Literal__Group__0)
		{ after(grammarAccess.getBool_LiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBool_Value
entryRuleBool_Value
:
{ before(grammarAccess.getBool_ValueRule()); }
	 ruleBool_Value
{ after(grammarAccess.getBool_ValueRule()); } 
	 EOF 
;

// Rule Bool_Value
ruleBool_Value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBool_ValueAccess().getAlternatives()); }
		(rule__Bool_Value__Alternatives)
		{ after(grammarAccess.getBool_ValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChar_Literal
entryRuleChar_Literal
:
{ before(grammarAccess.getChar_LiteralRule()); }
	 ruleChar_Literal
{ after(grammarAccess.getChar_LiteralRule()); } 
	 EOF 
;

// Rule Char_Literal
ruleChar_Literal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChar_LiteralAccess().getGroup()); }
		(rule__Char_Literal__Group__0)
		{ after(grammarAccess.getChar_LiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTime_Literal
entryRuleTime_Literal
:
{ before(grammarAccess.getTime_LiteralRule()); }
	 ruleTime_Literal
{ after(grammarAccess.getTime_LiteralRule()); } 
	 EOF 
;

// Rule Time_Literal
ruleTime_Literal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTime_LiteralAccess().getAlternatives()); }
		(rule__Time_Literal__Alternatives)
		{ after(grammarAccess.getTime_LiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDuration
entryRuleDuration
:
{ before(grammarAccess.getDurationRule()); }
	 ruleDuration
{ after(grammarAccess.getDurationRule()); } 
	 EOF 
;

// Rule Duration
ruleDuration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDurationAccess().getGroup()); }
		(rule__Duration__Group__0)
		{ after(grammarAccess.getDurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDuration_Value
entryRuleDuration_Value
:
{ before(grammarAccess.getDuration_ValueRule()); }
	 ruleDuration_Value
{ after(grammarAccess.getDuration_ValueRule()); } 
	 EOF 
;

// Rule Duration_Value
ruleDuration_Value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDuration_ValueAccess().getGroup()); }
		(rule__Duration_Value__Group__0)
		{ after(grammarAccess.getDuration_ValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFix_Point
entryRuleFix_Point
:
{ before(grammarAccess.getFix_PointRule()); }
	 ruleFix_Point
{ after(grammarAccess.getFix_PointRule()); } 
	 EOF 
;

// Rule Fix_Point
ruleFix_Point 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFix_PointAccess().getGroup()); }
		(rule__Fix_Point__Group__0)
		{ after(grammarAccess.getFix_PointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTime_Of_Day
entryRuleTime_Of_Day
:
{ before(grammarAccess.getTime_Of_DayRule()); }
	 ruleTime_Of_Day
{ after(grammarAccess.getTime_Of_DayRule()); } 
	 EOF 
;

// Rule Time_Of_Day
ruleTime_Of_Day 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTime_Of_DayAccess().getGroup()); }
		(rule__Time_Of_Day__Group__0)
		{ after(grammarAccess.getTime_Of_DayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDaytime
entryRuleDaytime
:
{ before(grammarAccess.getDaytimeRule()); }
	 ruleDaytime
{ after(grammarAccess.getDaytimeRule()); } 
	 EOF 
;

// Rule Daytime
ruleDaytime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDaytimeAccess().getGroup()); }
		(rule__Daytime__Group__0)
		{ after(grammarAccess.getDaytimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDay_Hour
entryRuleDay_Hour
:
{ before(grammarAccess.getDay_HourRule()); }
	 ruleDay_Hour
{ after(grammarAccess.getDay_HourRule()); } 
	 EOF 
;

// Rule Day_Hour
ruleDay_Hour 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDay_HourAccess().getUNSIGNED_INTTerminalRuleCall()); }
		RULE_UNSIGNED_INT
		{ after(grammarAccess.getDay_HourAccess().getUNSIGNED_INTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDay_Minute
entryRuleDay_Minute
:
{ before(grammarAccess.getDay_MinuteRule()); }
	 ruleDay_Minute
{ after(grammarAccess.getDay_MinuteRule()); } 
	 EOF 
;

// Rule Day_Minute
ruleDay_Minute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDay_MinuteAccess().getUNSIGNED_INTTerminalRuleCall()); }
		RULE_UNSIGNED_INT
		{ after(grammarAccess.getDay_MinuteAccess().getUNSIGNED_INTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDay_Second
entryRuleDay_Second
:
{ before(grammarAccess.getDay_SecondRule()); }
	 ruleDay_Second
{ after(grammarAccess.getDay_SecondRule()); } 
	 EOF 
;

// Rule Day_Second
ruleDay_Second 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDay_SecondAccess().getFix_PointParserRuleCall()); }
		ruleFix_Point
		{ after(grammarAccess.getDay_SecondAccess().getFix_PointParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDate
entryRuleDate
:
{ before(grammarAccess.getDateRule()); }
	 ruleDate
{ after(grammarAccess.getDateRule()); } 
	 EOF 
;

// Rule Date
ruleDate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateAccess().getGroup()); }
		(rule__Date__Group__0)
		{ after(grammarAccess.getDateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDate_Literal
entryRuleDate_Literal
:
{ before(grammarAccess.getDate_LiteralRule()); }
	 ruleDate_Literal
{ after(grammarAccess.getDate_LiteralRule()); } 
	 EOF 
;

// Rule Date_Literal
ruleDate_Literal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDate_LiteralAccess().getGroup()); }
		(rule__Date_Literal__Group__0)
		{ after(grammarAccess.getDate_LiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleYear
entryRuleYear
:
{ before(grammarAccess.getYearRule()); }
	 ruleYear
{ after(grammarAccess.getYearRule()); } 
	 EOF 
;

// Rule Year
ruleYear 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getYearAccess().getUNSIGNED_INTTerminalRuleCall()); }
		RULE_UNSIGNED_INT
		{ after(grammarAccess.getYearAccess().getUNSIGNED_INTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMonth
entryRuleMonth
:
{ before(grammarAccess.getMonthRule()); }
	 ruleMonth
{ after(grammarAccess.getMonthRule()); } 
	 EOF 
;

// Rule Month
ruleMonth 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMonthAccess().getUNSIGNED_INTTerminalRuleCall()); }
		RULE_UNSIGNED_INT
		{ after(grammarAccess.getMonthAccess().getUNSIGNED_INTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDay
entryRuleDay
:
{ before(grammarAccess.getDayRule()); }
	 ruleDay
{ after(grammarAccess.getDayRule()); } 
	 EOF 
;

// Rule Day
ruleDay 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDayAccess().getUNSIGNED_INTTerminalRuleCall()); }
		RULE_UNSIGNED_INT
		{ after(grammarAccess.getDayAccess().getUNSIGNED_INTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDate_And_Time
entryRuleDate_And_Time
:
{ before(grammarAccess.getDate_And_TimeRule()); }
	 ruleDate_And_Time
{ after(grammarAccess.getDate_And_TimeRule()); } 
	 EOF 
;

// Rule Date_And_Time
ruleDate_And_Time 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDate_And_TimeAccess().getGroup()); }
		(rule__Date_And_Time__Group__0)
		{ after(grammarAccess.getDate_And_TimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDate_And_Time_Value
entryRuleDate_And_Time_Value
:
{ before(grammarAccess.getDate_And_Time_ValueRule()); }
	 ruleDate_And_Time_Value
{ after(grammarAccess.getDate_And_Time_ValueRule()); } 
	 EOF 
;

// Rule Date_And_Time_Value
ruleDate_And_Time_Value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDate_And_Time_ValueAccess().getGroup()); }
		(rule__Date_And_Time_Value__Group__0)
		{ after(grammarAccess.getDate_And_Time_ValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType_Name
entryRuleType_Name
:
{ before(grammarAccess.getType_NameRule()); }
	 ruleType_Name
{ after(grammarAccess.getType_NameRule()); } 
	 EOF 
;

// Rule Type_Name
ruleType_Name 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_NameAccess().getAlternatives()); }
		(rule__Type_Name__Alternatives)
		{ after(grammarAccess.getType_NameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Or_Operator
ruleOr_Operator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOr_OperatorAccess().getOREnumLiteralDeclaration()); }
		(OR)
		{ after(grammarAccess.getOr_OperatorAccess().getOREnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Xor_Operator
ruleXor_Operator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXor_OperatorAccess().getXOREnumLiteralDeclaration()); }
		(XOR)
		{ after(grammarAccess.getXor_OperatorAccess().getXOREnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule And_Operator
ruleAnd_Operator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_OperatorAccess().getAlternatives()); }
		(rule__And_Operator__Alternatives)
		{ after(grammarAccess.getAnd_OperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Compare_Operator
ruleCompare_Operator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompare_OperatorAccess().getAlternatives()); }
		(rule__Compare_Operator__Alternatives)
		{ after(grammarAccess.getCompare_OperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Equ_Operator
ruleEqu_Operator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqu_OperatorAccess().getAlternatives()); }
		(rule__Equ_Operator__Alternatives)
		{ after(grammarAccess.getEqu_OperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Add_Operator
ruleAdd_Operator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdd_OperatorAccess().getAlternatives()); }
		(rule__Add_Operator__Alternatives)
		{ after(grammarAccess.getAdd_OperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Term_Operator
ruleTerm_Operator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerm_OperatorAccess().getAlternatives()); }
		(rule__Term_Operator__Alternatives)
		{ after(grammarAccess.getTerm_OperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Power_Operator
rulePower_Operator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPower_OperatorAccess().getPOWEREnumLiteralDeclaration()); }
		(AsteriskAsterisk)
		{ after(grammarAccess.getPower_OperatorAccess().getPOWEREnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Unary_Operator
ruleUnary_Operator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_OperatorAccess().getAlternatives()); }
		(rule__Unary_Operator__Alternatives)
		{ after(grammarAccess.getUnary_OperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Duration_Unit
ruleDuration_Unit
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDuration_UnitAccess().getAlternatives()); }
		(rule__Duration_Unit__Alternatives)
		{ after(grammarAccess.getDuration_UnitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Int_Type_Name
ruleInt_Type_Name
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInt_Type_NameAccess().getAlternatives()); }
		(rule__Int_Type_Name__Alternatives)
		{ after(grammarAccess.getInt_Type_NameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Real_Type_Name
ruleReal_Type_Name
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReal_Type_NameAccess().getAlternatives()); }
		(rule__Real_Type_Name__Alternatives)
		{ after(grammarAccess.getReal_Type_NameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule String_Type_Name
ruleString_Type_Name
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString_Type_NameAccess().getAlternatives()); }
		(rule__String_Type_Name__Alternatives)
		{ after(grammarAccess.getString_Type_NameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Time_Type_Name
ruleTime_Type_Name
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTime_Type_NameAccess().getAlternatives()); }
		(rule__Time_Type_Name__Alternatives)
		{ after(grammarAccess.getTime_Type_NameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Tod_Type_Name
ruleTod_Type_Name
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTod_Type_NameAccess().getAlternatives()); }
		(rule__Tod_Type_Name__Alternatives)
		{ after(grammarAccess.getTod_Type_NameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Date_Type_Name
ruleDate_Type_Name
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDate_Type_NameAccess().getAlternatives()); }
		(rule__Date_Type_Name__Alternatives)
		{ after(grammarAccess.getDate_Type_NameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DT_Type_Name
ruleDT_Type_Name
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDT_Type_NameAccess().getAlternatives()); }
		(rule__DT_Type_Name__Alternatives)
		{ after(grammarAccess.getDT_Type_NameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Bool_Type_Name
ruleBool_Type_Name
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBool_Type_NameAccess().getBOOLEnumLiteralDeclaration()); }
		(BOOL)
		{ after(grammarAccess.getBool_Type_NameAccess().getBOOLEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtAccess().getAssign_StmtParserRuleCall_0()); }
		ruleAssign_Stmt
		{ after(grammarAccess.getStmtAccess().getAssign_StmtParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getSubprog_Ctrl_StmtParserRuleCall_1()); }
		ruleSubprog_Ctrl_Stmt
		{ after(grammarAccess.getStmtAccess().getSubprog_Ctrl_StmtParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getSelection_StmtParserRuleCall_2()); }
		ruleSelection_Stmt
		{ after(grammarAccess.getStmtAccess().getSelection_StmtParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getIteration_StmtParserRuleCall_3()); }
		ruleIteration_Stmt
		{ after(grammarAccess.getStmtAccess().getIteration_StmtParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprog_Ctrl_Stmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubprog_Ctrl_StmtAccess().getFunc_CallParserRuleCall_0()); }
		ruleFunc_Call
		{ after(grammarAccess.getSubprog_Ctrl_StmtAccess().getFunc_CallParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubprog_Ctrl_StmtAccess().getGroup_1()); }
		(rule__Subprog_Ctrl_Stmt__Group_1__0)
		{ after(grammarAccess.getSubprog_Ctrl_StmtAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getSubprog_Ctrl_StmtAccess().getGroup_2()); }
		(rule__Subprog_Ctrl_Stmt__Group_2__0)
		{ after(grammarAccess.getSubprog_Ctrl_StmtAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_Stmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelection_StmtAccess().getIF_StmtParserRuleCall_0()); }
		ruleIF_Stmt
		{ after(grammarAccess.getSelection_StmtAccess().getIF_StmtParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelection_StmtAccess().getCase_StmtParserRuleCall_1()); }
		ruleCase_Stmt
		{ after(grammarAccess.getSelection_StmtAccess().getCase_StmtParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_Stmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_StmtAccess().getFor_StmtParserRuleCall_0()); }
		ruleFor_Stmt
		{ after(grammarAccess.getIteration_StmtAccess().getFor_StmtParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIteration_StmtAccess().getWhile_StmtParserRuleCall_1()); }
		ruleWhile_Stmt
		{ after(grammarAccess.getIteration_StmtAccess().getWhile_StmtParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getIteration_StmtAccess().getRepeat_StmtParserRuleCall_2()); }
		ruleRepeat_Stmt
		{ after(grammarAccess.getIteration_StmtAccess().getRepeat_StmtParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getIteration_StmtAccess().getGroup_3()); }
		(rule__Iteration_Stmt__Group_3__0)
		{ after(grammarAccess.getIteration_StmtAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getIteration_StmtAccess().getGroup_4()); }
		(rule__Iteration_Stmt__Group_4__0)
		{ after(grammarAccess.getIteration_StmtAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_Expr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_ExprAccess().getGroup_0()); }
		(rule__Unary_Expr__Group_0__0)
		{ after(grammarAccess.getUnary_ExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_ExprAccess().getPrimary_ExprParserRuleCall_1()); }
		rulePrimary_Expr
		{ after(grammarAccess.getUnary_ExprAccess().getPrimary_ExprParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_ExprAccess().getConstantParserRuleCall_2()); }
		ruleConstant
		{ after(grammarAccess.getUnary_ExprAccess().getConstantParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_Expr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimary_ExprAccess().getVariableParserRuleCall_0()); }
		ruleVariable
		{ after(grammarAccess.getPrimary_ExprAccess().getVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_ExprAccess().getFunc_CallParserRuleCall_1()); }
		ruleFunc_Call
		{ after(grammarAccess.getPrimary_ExprAccess().getFunc_CallParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_ExprAccess().getGroup_2()); }
		(rule__Primary_Expr__Group_2__0)
		{ after(grammarAccess.getPrimary_ExprAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__FuncAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunc_CallAccess().getFuncIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFunc_CallAccess().getFuncIDTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunc_CallAccess().getFuncTIMEKeyword_0_0_1()); }
		TIME
		{ after(grammarAccess.getFunc_CallAccess().getFuncTIMEKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParam_AssignAccess().getParam_Assign_InParserRuleCall_0()); }
		ruleParam_Assign_In
		{ after(grammarAccess.getParam_AssignAccess().getParam_Assign_InParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getParam_AssignAccess().getParam_Assign_OutParserRuleCall_1()); }
		ruleParam_Assign_Out
		{ after(grammarAccess.getParam_AssignAccess().getParam_Assign_OutParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_SubscriptAccess().getVariable_PrimaryParserRuleCall_0_0()); }
		ruleVariable_Primary
		{ after(grammarAccess.getVariable_SubscriptAccess().getVariable_PrimaryParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariable_SubscriptAccess().getVariable_AdapterParserRuleCall_0_1()); }
		ruleVariable_Adapter
		{ after(grammarAccess.getVariable_SubscriptAccess().getVariable_AdapterParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getGroup_0()); }
		(rule__Multibit_Part_Access__Group_0__0)
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getGroup_1()); }
		(rule__Multibit_Part_Access__Group_1__0)
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getGroup_2()); }
		(rule__Multibit_Part_Access__Group_2__0)
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getGroup_3()); }
		(rule__Multibit_Part_Access__Group_3__0)
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getGroup_4()); }
		(rule__Multibit_Part_Access__Group_4__0)
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Adapter_Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdapter_NameAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getAdapter_NameAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdapter_NameAccess().getTKeyword_1()); }
		T
		{ after(grammarAccess.getAdapter_NameAccess().getTKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdapter_NameAccess().getLTKeyword_2()); }
		LT
		{ after(grammarAccess.getAdapter_NameAccess().getLTKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAdapter_NameAccess().getDTKeyword_3()); }
		DT
		{ after(grammarAccess.getAdapter_NameAccess().getDTKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_NameAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getVariable_NameAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariable_NameAccess().getTKeyword_1()); }
		T
		{ after(grammarAccess.getVariable_NameAccess().getTKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariable_NameAccess().getLTKeyword_2()); }
		LT
		{ after(grammarAccess.getVariable_NameAccess().getLTKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getVariable_NameAccess().getDTKeyword_3()); }
		DT
		{ after(grammarAccess.getVariable_NameAccess().getDTKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNumeric_LiteralParserRuleCall_0()); }
		ruleNumeric_Literal
		{ after(grammarAccess.getConstantAccess().getNumeric_LiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getChar_LiteralParserRuleCall_1()); }
		ruleChar_Literal
		{ after(grammarAccess.getConstantAccess().getChar_LiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getTime_LiteralParserRuleCall_2()); }
		ruleTime_Literal
		{ after(grammarAccess.getConstantAccess().getTime_LiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getBool_LiteralParserRuleCall_3()); }
		ruleBool_Literal
		{ after(grammarAccess.getConstantAccess().getBool_LiteralParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Numeric_Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumeric_LiteralAccess().getInt_LiteralParserRuleCall_0()); }
		ruleInt_Literal
		{ after(grammarAccess.getNumeric_LiteralAccess().getInt_LiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumeric_LiteralAccess().getReal_LiteralParserRuleCall_1()); }
		ruleReal_Literal
		{ after(grammarAccess.getNumeric_LiteralAccess().getReal_LiteralParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_Literal__ValueAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInt_LiteralAccess().getValueSigned_IntParserRuleCall_1_0_0()); }
		ruleSigned_Int
		{ after(grammarAccess.getInt_LiteralAccess().getValueSigned_IntParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInt_LiteralAccess().getValueBINARY_INTTerminalRuleCall_1_0_1()); }
		RULE_BINARY_INT
		{ after(grammarAccess.getInt_LiteralAccess().getValueBINARY_INTTerminalRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getInt_LiteralAccess().getValueOCTAL_INTTerminalRuleCall_1_0_2()); }
		RULE_OCTAL_INT
		{ after(grammarAccess.getInt_LiteralAccess().getValueOCTAL_INTTerminalRuleCall_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getInt_LiteralAccess().getValueHEX_INTTerminalRuleCall_1_0_3()); }
		RULE_HEX_INT
		{ after(grammarAccess.getInt_LiteralAccess().getValueHEX_INTTerminalRuleCall_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_Int__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSigned_IntAccess().getPlusSignKeyword_0_0()); }
		PlusSign
		{ after(grammarAccess.getSigned_IntAccess().getPlusSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSigned_IntAccess().getHyphenMinusKeyword_0_1()); }
		HyphenMinus
		{ after(grammarAccess.getSigned_IntAccess().getHyphenMinusKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBool_ValueAccess().getFALSEKeyword_0()); }
		FALSE
		{ after(grammarAccess.getBool_ValueAccess().getFALSEKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBool_ValueAccess().getTRUEKeyword_1()); }
		TRUE
		{ after(grammarAccess.getBool_ValueAccess().getTRUEKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Char_Literal__ValueAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChar_LiteralAccess().getValueS_BYTE_CHAR_STRTerminalRuleCall_1_0_0()); }
		RULE_S_BYTE_CHAR_STR
		{ after(grammarAccess.getChar_LiteralAccess().getValueS_BYTE_CHAR_STRTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getChar_LiteralAccess().getValueD_BYTE_CHAR_STRTerminalRuleCall_1_0_1()); }
		RULE_D_BYTE_CHAR_STR
		{ after(grammarAccess.getChar_LiteralAccess().getValueD_BYTE_CHAR_STRTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time_Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTime_LiteralAccess().getDurationParserRuleCall_0()); }
		ruleDuration
		{ after(grammarAccess.getTime_LiteralAccess().getDurationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTime_LiteralAccess().getTime_Of_DayParserRuleCall_1()); }
		ruleTime_Of_Day
		{ after(grammarAccess.getTime_LiteralAccess().getTime_Of_DayParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTime_LiteralAccess().getDateParserRuleCall_2()); }
		ruleDate
		{ after(grammarAccess.getTime_LiteralAccess().getDateParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTime_LiteralAccess().getDate_And_TimeParserRuleCall_3()); }
		ruleDate_And_Time
		{ after(grammarAccess.getTime_LiteralAccess().getDate_And_TimeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getPlusSignKeyword_2_0()); }
		PlusSign
		{ after(grammarAccess.getDurationAccess().getPlusSignKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getDurationAccess().getNegativeAssignment_2_1()); }
		(rule__Duration__NegativeAssignment_2_1)
		{ after(grammarAccess.getDurationAccess().getNegativeAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_NameAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getType_NameAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getDINTKeyword_1()); }
		DINT
		{ after(grammarAccess.getType_NameAccess().getDINTKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getINTKeyword_2()); }
		INT
		{ after(grammarAccess.getType_NameAccess().getINTKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getSINTKeyword_3()); }
		SINT
		{ after(grammarAccess.getType_NameAccess().getSINTKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getLINTKeyword_4()); }
		LINT
		{ after(grammarAccess.getType_NameAccess().getLINTKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getUINTKeyword_5()); }
		UINT
		{ after(grammarAccess.getType_NameAccess().getUINTKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getUSINTKeyword_6()); }
		USINT
		{ after(grammarAccess.getType_NameAccess().getUSINTKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getUDINTKeyword_7()); }
		UDINT
		{ after(grammarAccess.getType_NameAccess().getUDINTKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getULINTKeyword_8()); }
		ULINT
		{ after(grammarAccess.getType_NameAccess().getULINTKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getREALKeyword_9()); }
		REAL
		{ after(grammarAccess.getType_NameAccess().getREALKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getLREALKeyword_10()); }
		LREAL
		{ after(grammarAccess.getType_NameAccess().getLREALKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getSTRINGKeyword_11()); }
		STRING
		{ after(grammarAccess.getType_NameAccess().getSTRINGKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getWSTRINGKeyword_12()); }
		WSTRING
		{ after(grammarAccess.getType_NameAccess().getWSTRINGKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getCHARKeyword_13()); }
		CHAR
		{ after(grammarAccess.getType_NameAccess().getCHARKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getWCHARKeyword_14()); }
		WCHAR
		{ after(grammarAccess.getType_NameAccess().getWCHARKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getTIMEKeyword_15()); }
		TIME
		{ after(grammarAccess.getType_NameAccess().getTIMEKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getLTIMEKeyword_16()); }
		LTIME
		{ after(grammarAccess.getType_NameAccess().getLTIMEKeyword_16()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getTIME_OF_DAYKeyword_17()); }
		TIME_OF_DAY
		{ after(grammarAccess.getType_NameAccess().getTIME_OF_DAYKeyword_17()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getLTIME_OF_DAYKeyword_18()); }
		LTIME_OF_DAY
		{ after(grammarAccess.getType_NameAccess().getLTIME_OF_DAYKeyword_18()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getTODKeyword_19()); }
		TOD
		{ after(grammarAccess.getType_NameAccess().getTODKeyword_19()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getLTODKeyword_20()); }
		LTOD
		{ after(grammarAccess.getType_NameAccess().getLTODKeyword_20()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getDATEKeyword_21()); }
		DATE
		{ after(grammarAccess.getType_NameAccess().getDATEKeyword_21()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getLDATEKeyword_22()); }
		LDATE
		{ after(grammarAccess.getType_NameAccess().getLDATEKeyword_22()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getDATE_AND_TIMEKeyword_23()); }
		DATE_AND_TIME
		{ after(grammarAccess.getType_NameAccess().getDATE_AND_TIMEKeyword_23()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getLDATE_AND_TIMEKeyword_24()); }
		LDATE_AND_TIME
		{ after(grammarAccess.getType_NameAccess().getLDATE_AND_TIMEKeyword_24()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getBOOLKeyword_25()); }
		BOOL
		{ after(grammarAccess.getType_NameAccess().getBOOLKeyword_25()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getLWORDKeyword_26()); }
		LWORD
		{ after(grammarAccess.getType_NameAccess().getLWORDKeyword_26()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getDWORDKeyword_27()); }
		DWORD
		{ after(grammarAccess.getType_NameAccess().getDWORDKeyword_27()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getWORDKeyword_28()); }
		WORD
		{ after(grammarAccess.getType_NameAccess().getWORDKeyword_28()); }
	)
	|
	(
		{ before(grammarAccess.getType_NameAccess().getBYTEKeyword_29()); }
		BYTE
		{ after(grammarAccess.getType_NameAccess().getBYTEKeyword_29()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_OperatorAccess().getANDEnumLiteralDeclaration_0()); }
		(AND)
		{ after(grammarAccess.getAnd_OperatorAccess().getANDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnd_OperatorAccess().getANDEnumLiteralDeclaration_1()); }
		(Ampersand)
		{ after(grammarAccess.getAnd_OperatorAccess().getANDEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompare_OperatorAccess().getEQEnumLiteralDeclaration_0()); }
		(EqualsSign)
		{ after(grammarAccess.getCompare_OperatorAccess().getEQEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompare_OperatorAccess().getNEEnumLiteralDeclaration_1()); }
		(LessThanSignGreaterThanSign)
		{ after(grammarAccess.getCompare_OperatorAccess().getNEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equ_Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqu_OperatorAccess().getLTEnumLiteralDeclaration_0()); }
		(LessThanSign)
		{ after(grammarAccess.getEqu_OperatorAccess().getLTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqu_OperatorAccess().getLEEnumLiteralDeclaration_1()); }
		(LessThanSignEqualsSign)
		{ after(grammarAccess.getEqu_OperatorAccess().getLEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getEqu_OperatorAccess().getGTEnumLiteralDeclaration_2()); }
		(GreaterThanSign)
		{ after(grammarAccess.getEqu_OperatorAccess().getGTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getEqu_OperatorAccess().getGEEnumLiteralDeclaration_3()); }
		(GreaterThanSignEqualsSign)
		{ after(grammarAccess.getEqu_OperatorAccess().getGEEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdd_OperatorAccess().getADDEnumLiteralDeclaration_0()); }
		(PlusSign)
		{ after(grammarAccess.getAdd_OperatorAccess().getADDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdd_OperatorAccess().getSUBEnumLiteralDeclaration_1()); }
		(HyphenMinus)
		{ after(grammarAccess.getAdd_OperatorAccess().getSUBEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term_Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerm_OperatorAccess().getMULEnumLiteralDeclaration_0()); }
		(Asterisk)
		{ after(grammarAccess.getTerm_OperatorAccess().getMULEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTerm_OperatorAccess().getDIVEnumLiteralDeclaration_1()); }
		(Solidus)
		{ after(grammarAccess.getTerm_OperatorAccess().getDIVEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTerm_OperatorAccess().getMODEnumLiteralDeclaration_2()); }
		(MOD)
		{ after(grammarAccess.getTerm_OperatorAccess().getMODEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_OperatorAccess().getMINUSEnumLiteralDeclaration_0()); }
		(HyphenMinus)
		{ after(grammarAccess.getUnary_OperatorAccess().getMINUSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_OperatorAccess().getPLUSEnumLiteralDeclaration_1()); }
		(PlusSign)
		{ after(grammarAccess.getUnary_OperatorAccess().getPLUSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_OperatorAccess().getNOTEnumLiteralDeclaration_2()); }
		(NOT)
		{ after(grammarAccess.getUnary_OperatorAccess().getNOTEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration_Unit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDuration_UnitAccess().getDAYSEnumLiteralDeclaration_0()); }
		(D_1)
		{ after(grammarAccess.getDuration_UnitAccess().getDAYSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDuration_UnitAccess().getHOURSEnumLiteralDeclaration_1()); }
		(H)
		{ after(grammarAccess.getDuration_UnitAccess().getHOURSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDuration_UnitAccess().getMINUTESEnumLiteralDeclaration_2()); }
		(M)
		{ after(grammarAccess.getDuration_UnitAccess().getMINUTESEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDuration_UnitAccess().getSECONDSEnumLiteralDeclaration_3()); }
		(S)
		{ after(grammarAccess.getDuration_UnitAccess().getSECONDSEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getDuration_UnitAccess().getMILLISEnumLiteralDeclaration_4()); }
		(Ms)
		{ after(grammarAccess.getDuration_UnitAccess().getMILLISEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getDuration_UnitAccess().getMICROSEnumLiteralDeclaration_5()); }
		(Us)
		{ after(grammarAccess.getDuration_UnitAccess().getMICROSEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getDuration_UnitAccess().getNANOSEnumLiteralDeclaration_6()); }
		(Ns)
		{ after(grammarAccess.getDuration_UnitAccess().getNANOSEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_Type_Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInt_Type_NameAccess().getDINTEnumLiteralDeclaration_0()); }
		(DINT)
		{ after(grammarAccess.getInt_Type_NameAccess().getDINTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getInt_Type_NameAccess().getINTEnumLiteralDeclaration_1()); }
		(INT)
		{ after(grammarAccess.getInt_Type_NameAccess().getINTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getInt_Type_NameAccess().getSINTEnumLiteralDeclaration_2()); }
		(SINT)
		{ after(grammarAccess.getInt_Type_NameAccess().getSINTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getInt_Type_NameAccess().getLINTEnumLiteralDeclaration_3()); }
		(LINT)
		{ after(grammarAccess.getInt_Type_NameAccess().getLINTEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getInt_Type_NameAccess().getUINTEnumLiteralDeclaration_4()); }
		(UINT)
		{ after(grammarAccess.getInt_Type_NameAccess().getUINTEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getInt_Type_NameAccess().getUSINTEnumLiteralDeclaration_5()); }
		(USINT)
		{ after(grammarAccess.getInt_Type_NameAccess().getUSINTEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getInt_Type_NameAccess().getUDINTEnumLiteralDeclaration_6()); }
		(UDINT)
		{ after(grammarAccess.getInt_Type_NameAccess().getUDINTEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getInt_Type_NameAccess().getULINTEnumLiteralDeclaration_7()); }
		(ULINT)
		{ after(grammarAccess.getInt_Type_NameAccess().getULINTEnumLiteralDeclaration_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Type_Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReal_Type_NameAccess().getREALEnumLiteralDeclaration_0()); }
		(REAL)
		{ after(grammarAccess.getReal_Type_NameAccess().getREALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getReal_Type_NameAccess().getLREALEnumLiteralDeclaration_1()); }
		(LREAL)
		{ after(grammarAccess.getReal_Type_NameAccess().getLREALEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_Type_Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString_Type_NameAccess().getSTRINGEnumLiteralDeclaration_0()); }
		(STRING)
		{ after(grammarAccess.getString_Type_NameAccess().getSTRINGEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getString_Type_NameAccess().getWSTRINGEnumLiteralDeclaration_1()); }
		(WSTRING)
		{ after(grammarAccess.getString_Type_NameAccess().getWSTRINGEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getString_Type_NameAccess().getCHAREnumLiteralDeclaration_2()); }
		(CHAR)
		{ after(grammarAccess.getString_Type_NameAccess().getCHAREnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getString_Type_NameAccess().getWCHAREnumLiteralDeclaration_3()); }
		(WCHAR)
		{ after(grammarAccess.getString_Type_NameAccess().getWCHAREnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time_Type_Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTime_Type_NameAccess().getTIMEEnumLiteralDeclaration_0()); }
		(TIME)
		{ after(grammarAccess.getTime_Type_NameAccess().getTIMEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTime_Type_NameAccess().getLTIMEEnumLiteralDeclaration_1()); }
		(LTIME)
		{ after(grammarAccess.getTime_Type_NameAccess().getLTIMEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTime_Type_NameAccess().getTEnumLiteralDeclaration_2()); }
		(T)
		{ after(grammarAccess.getTime_Type_NameAccess().getTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTime_Type_NameAccess().getLTEnumLiteralDeclaration_3()); }
		(LT)
		{ after(grammarAccess.getTime_Type_NameAccess().getLTEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tod_Type_Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTod_Type_NameAccess().getTIME_OF_DAYEnumLiteralDeclaration_0()); }
		(TIME_OF_DAY)
		{ after(grammarAccess.getTod_Type_NameAccess().getTIME_OF_DAYEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTod_Type_NameAccess().getLTIME_OF_DAYEnumLiteralDeclaration_1()); }
		(LTIME_OF_DAY)
		{ after(grammarAccess.getTod_Type_NameAccess().getLTIME_OF_DAYEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTod_Type_NameAccess().getTODEnumLiteralDeclaration_2()); }
		(TOD)
		{ after(grammarAccess.getTod_Type_NameAccess().getTODEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTod_Type_NameAccess().getLTODEnumLiteralDeclaration_3()); }
		(LTOD)
		{ after(grammarAccess.getTod_Type_NameAccess().getLTODEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_Type_Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDate_Type_NameAccess().getDATEEnumLiteralDeclaration_0()); }
		(DATE)
		{ after(grammarAccess.getDate_Type_NameAccess().getDATEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDate_Type_NameAccess().getLDATEEnumLiteralDeclaration_1()); }
		(LDATE)
		{ after(grammarAccess.getDate_Type_NameAccess().getLDATEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDate_Type_NameAccess().getDEnumLiteralDeclaration_2()); }
		(D_1)
		{ after(grammarAccess.getDate_Type_NameAccess().getDEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDate_Type_NameAccess().getLDEnumLiteralDeclaration_3()); }
		(LD)
		{ after(grammarAccess.getDate_Type_NameAccess().getLDEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT_Type_Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDT_Type_NameAccess().getDATE_AND_TIMEEnumLiteralDeclaration_0()); }
		(DATE_AND_TIME)
		{ after(grammarAccess.getDT_Type_NameAccess().getDATE_AND_TIMEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDT_Type_NameAccess().getLDATE_AND_TIMEEnumLiteralDeclaration_1()); }
		(LDATE_AND_TIME)
		{ after(grammarAccess.getDT_Type_NameAccess().getLDATE_AND_TIMEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDT_Type_NameAccess().getDTEnumLiteralDeclaration_2()); }
		(DT)
		{ after(grammarAccess.getDT_Type_NameAccess().getDTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDT_Type_NameAccess().getLDTEnumLiteralDeclaration_3()); }
		(LDT)
		{ after(grammarAccess.getDT_Type_NameAccess().getLDTEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTextAlgorithm__Group__0__Impl
	rule__StructuredTextAlgorithm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTextAlgorithmAccess().getStructuredTextAlgorithmAction_0()); }
	()
	{ after(grammarAccess.getStructuredTextAlgorithmAccess().getStructuredTextAlgorithmAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTextAlgorithm__Group__1__Impl
	rule__StructuredTextAlgorithm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTextAlgorithmAccess().getGroup_1()); }
	(rule__StructuredTextAlgorithm__Group_1__0)?
	{ after(grammarAccess.getStructuredTextAlgorithmAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTextAlgorithm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTextAlgorithmAccess().getStatementsAssignment_2()); }
	(rule__StructuredTextAlgorithm__StatementsAssignment_2)
	{ after(grammarAccess.getStructuredTextAlgorithmAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredTextAlgorithm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTextAlgorithm__Group_1__0__Impl
	rule__StructuredTextAlgorithm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTextAlgorithmAccess().getVARKeyword_1_0()); }
	VAR
	{ after(grammarAccess.getStructuredTextAlgorithmAccess().getVARKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTextAlgorithm__Group_1__1__Impl
	rule__StructuredTextAlgorithm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTextAlgorithmAccess().getGroup_1_1()); }
	(rule__StructuredTextAlgorithm__Group_1_1__0)*
	{ after(grammarAccess.getStructuredTextAlgorithmAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTextAlgorithm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTextAlgorithmAccess().getEND_VARKeyword_1_2()); }
	END_VAR
	{ after(grammarAccess.getStructuredTextAlgorithmAccess().getEND_VARKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredTextAlgorithm__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTextAlgorithm__Group_1_1__0__Impl
	rule__StructuredTextAlgorithm__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTextAlgorithmAccess().getLocalVariablesAssignment_1_1_0()); }
	(rule__StructuredTextAlgorithm__LocalVariablesAssignment_1_1_0)
	{ after(grammarAccess.getStructuredTextAlgorithmAccess().getLocalVariablesAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTextAlgorithm__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTextAlgorithmAccess().getSemicolonKeyword_1_1_1()); }
	Semicolon
	{ after(grammarAccess.getStructuredTextAlgorithmAccess().getSemicolonKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var_Decl_Local__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group__0__Impl
	rule__Var_Decl_Local__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getLocalVariableAction_0()); }
	()
	{ after(grammarAccess.getVar_Decl_LocalAccess().getLocalVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group__1__Impl
	rule__Var_Decl_Local__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getConstantAssignment_1()); }
	(rule__Var_Decl_Local__ConstantAssignment_1)?
	{ after(grammarAccess.getVar_Decl_LocalAccess().getConstantAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group__2__Impl
	rule__Var_Decl_Local__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getNameAssignment_2()); }
	(rule__Var_Decl_Local__NameAssignment_2)
	{ after(grammarAccess.getVar_Decl_LocalAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group__3__Impl
	rule__Var_Decl_Local__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getGroup_3()); }
	(rule__Var_Decl_Local__Group_3__0)?
	{ after(grammarAccess.getVar_Decl_LocalAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group__4__Impl
	rule__Var_Decl_Local__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getColonKeyword_4()); }
	Colon
	{ after(grammarAccess.getVar_Decl_LocalAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group__5__Impl
	rule__Var_Decl_Local__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getGroup_5()); }
	(rule__Var_Decl_Local__Group_5__0)?
	{ after(grammarAccess.getVar_Decl_LocalAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group__6__Impl
	rule__Var_Decl_Local__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getTypeAssignment_6()); }
	(rule__Var_Decl_Local__TypeAssignment_6)
	{ after(grammarAccess.getVar_Decl_LocalAccess().getTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getGroup_7()); }
	(rule__Var_Decl_Local__Group_7__0)?
	{ after(grammarAccess.getVar_Decl_LocalAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var_Decl_Local__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group_3__0__Impl
	rule__Var_Decl_Local__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getLocatedAssignment_3_0()); }
	(rule__Var_Decl_Local__LocatedAssignment_3_0)
	{ after(grammarAccess.getVar_Decl_LocalAccess().getLocatedAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getLocationAssignment_3_1()); }
	(rule__Var_Decl_Local__LocationAssignment_3_1)
	{ after(grammarAccess.getVar_Decl_LocalAccess().getLocationAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var_Decl_Local__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group_5__0__Impl
	rule__Var_Decl_Local__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getArrayAssignment_5_0()); }
	(rule__Var_Decl_Local__ArrayAssignment_5_0)
	{ after(grammarAccess.getVar_Decl_LocalAccess().getArrayAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group_5__1__Impl
	rule__Var_Decl_Local__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getLeftSquareBracketKeyword_5_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getVar_Decl_LocalAccess().getLeftSquareBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group_5__2__Impl
	rule__Var_Decl_Local__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getArrayStartAssignment_5_2()); }
	(rule__Var_Decl_Local__ArrayStartAssignment_5_2)
	{ after(grammarAccess.getVar_Decl_LocalAccess().getArrayStartAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group_5__3__Impl
	rule__Var_Decl_Local__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getFullStopFullStopKeyword_5_3()); }
	FullStopFullStop
	{ after(grammarAccess.getVar_Decl_LocalAccess().getFullStopFullStopKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group_5__4__Impl
	rule__Var_Decl_Local__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getArrayStopAssignment_5_4()); }
	(rule__Var_Decl_Local__ArrayStopAssignment_5_4)
	{ after(grammarAccess.getVar_Decl_LocalAccess().getArrayStopAssignment_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group_5__5__Impl
	rule__Var_Decl_Local__Group_5__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getRightSquareBracketKeyword_5_5()); }
	RightSquareBracket
	{ after(grammarAccess.getVar_Decl_LocalAccess().getRightSquareBracketKeyword_5_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group_5__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_5__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getOFKeyword_5_6()); }
	OF
	{ after(grammarAccess.getVar_Decl_LocalAccess().getOFKeyword_5_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var_Decl_Local__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group_7__0__Impl
	rule__Var_Decl_Local__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getInitalizedAssignment_7_0()); }
	(rule__Var_Decl_Local__InitalizedAssignment_7_0)
	{ after(grammarAccess.getVar_Decl_LocalAccess().getInitalizedAssignment_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var_Decl_Local__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVar_Decl_LocalAccess().getInitialValueAssignment_7_1()); }
	(rule__Var_Decl_Local__InitialValueAssignment_7_1)
	{ after(grammarAccess.getVar_Decl_LocalAccess().getInitialValueAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt_List__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt_List__Group__0__Impl
	rule__Stmt_List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt_List__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmt_ListAccess().getStatementListAction_0()); }
	()
	{ after(grammarAccess.getStmt_ListAccess().getStatementListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt_List__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt_List__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt_List__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmt_ListAccess().getGroup_1()); }
	(rule__Stmt_List__Group_1__0)*
	{ after(grammarAccess.getStmt_ListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt_List__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt_List__Group_1__0__Impl
	rule__Stmt_List__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt_List__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmt_ListAccess().getStatementsAssignment_1_0()); }
	(rule__Stmt_List__StatementsAssignment_1_0)?
	{ after(grammarAccess.getStmt_ListAccess().getStatementsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt_List__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt_List__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt_List__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmt_ListAccess().getSemicolonKeyword_1_1()); }
	Semicolon
	{ after(grammarAccess.getStmt_ListAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assign_Stmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign_Stmt__Group__0__Impl
	rule__Assign_Stmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_Stmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssign_StmtAccess().getVariableAssignment_0()); }
	(rule__Assign_Stmt__VariableAssignment_0)
	{ after(grammarAccess.getAssign_StmtAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_Stmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign_Stmt__Group__1__Impl
	rule__Assign_Stmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_Stmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssign_StmtAccess().getColonEqualsSignKeyword_1()); }
	ColonEqualsSign
	{ after(grammarAccess.getAssign_StmtAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_Stmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign_Stmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_Stmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssign_StmtAccess().getExpressionAssignment_2()); }
	(rule__Assign_Stmt__ExpressionAssignment_2)
	{ after(grammarAccess.getAssign_StmtAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subprog_Ctrl_Stmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subprog_Ctrl_Stmt__Group_1__0__Impl
	rule__Subprog_Ctrl_Stmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprog_Ctrl_Stmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprog_Ctrl_StmtAccess().getSuperStatementAction_1_0()); }
	()
	{ after(grammarAccess.getSubprog_Ctrl_StmtAccess().getSuperStatementAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprog_Ctrl_Stmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subprog_Ctrl_Stmt__Group_1__1__Impl
	rule__Subprog_Ctrl_Stmt__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprog_Ctrl_Stmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprog_Ctrl_StmtAccess().getSUPERKeyword_1_1()); }
	SUPER
	{ after(grammarAccess.getSubprog_Ctrl_StmtAccess().getSUPERKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprog_Ctrl_Stmt__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subprog_Ctrl_Stmt__Group_1__2__Impl
	rule__Subprog_Ctrl_Stmt__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprog_Ctrl_Stmt__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprog_Ctrl_StmtAccess().getLeftParenthesisKeyword_1_2()); }
	LeftParenthesis
	{ after(grammarAccess.getSubprog_Ctrl_StmtAccess().getLeftParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprog_Ctrl_Stmt__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subprog_Ctrl_Stmt__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprog_Ctrl_Stmt__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprog_Ctrl_StmtAccess().getRightParenthesisKeyword_1_3()); }
	RightParenthesis
	{ after(grammarAccess.getSubprog_Ctrl_StmtAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subprog_Ctrl_Stmt__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subprog_Ctrl_Stmt__Group_2__0__Impl
	rule__Subprog_Ctrl_Stmt__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprog_Ctrl_Stmt__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprog_Ctrl_StmtAccess().getReturnStatementAction_2_0()); }
	()
	{ after(grammarAccess.getSubprog_Ctrl_StmtAccess().getReturnStatementAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprog_Ctrl_Stmt__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subprog_Ctrl_Stmt__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subprog_Ctrl_Stmt__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprog_Ctrl_StmtAccess().getRETURNKeyword_2_1()); }
	RETURN
	{ after(grammarAccess.getSubprog_Ctrl_StmtAccess().getRETURNKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IF_Stmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF_Stmt__Group__0__Impl
	rule__IF_Stmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIF_StmtAccess().getIFKeyword_0()); }
	IF
	{ after(grammarAccess.getIF_StmtAccess().getIFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF_Stmt__Group__1__Impl
	rule__IF_Stmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIF_StmtAccess().getExpressionAssignment_1()); }
	(rule__IF_Stmt__ExpressionAssignment_1)
	{ after(grammarAccess.getIF_StmtAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF_Stmt__Group__2__Impl
	rule__IF_Stmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIF_StmtAccess().getTHENKeyword_2()); }
	THEN
	{ after(grammarAccess.getIF_StmtAccess().getTHENKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF_Stmt__Group__3__Impl
	rule__IF_Stmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIF_StmtAccess().getStatmentsAssignment_3()); }
	(rule__IF_Stmt__StatmentsAssignment_3)
	{ after(grammarAccess.getIF_StmtAccess().getStatmentsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF_Stmt__Group__4__Impl
	rule__IF_Stmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIF_StmtAccess().getElseifAssignment_4()); }
	(rule__IF_Stmt__ElseifAssignment_4)*
	{ after(grammarAccess.getIF_StmtAccess().getElseifAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF_Stmt__Group__5__Impl
	rule__IF_Stmt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIF_StmtAccess().getElseAssignment_5()); }
	(rule__IF_Stmt__ElseAssignment_5)?
	{ after(grammarAccess.getIF_StmtAccess().getElseAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IF_Stmt__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIF_StmtAccess().getEND_IFKeyword_6()); }
	END_IF
	{ after(grammarAccess.getIF_StmtAccess().getEND_IFKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ELSIF_Clause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ELSIF_Clause__Group__0__Impl
	rule__ELSIF_Clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSIF_Clause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getELSIF_ClauseAccess().getELSIFKeyword_0()); }
	ELSIF
	{ after(grammarAccess.getELSIF_ClauseAccess().getELSIFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSIF_Clause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ELSIF_Clause__Group__1__Impl
	rule__ELSIF_Clause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSIF_Clause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getELSIF_ClauseAccess().getExpressionAssignment_1()); }
	(rule__ELSIF_Clause__ExpressionAssignment_1)
	{ after(grammarAccess.getELSIF_ClauseAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSIF_Clause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ELSIF_Clause__Group__2__Impl
	rule__ELSIF_Clause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSIF_Clause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getELSIF_ClauseAccess().getTHENKeyword_2()); }
	THEN
	{ after(grammarAccess.getELSIF_ClauseAccess().getTHENKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSIF_Clause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ELSIF_Clause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSIF_Clause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getELSIF_ClauseAccess().getStatementsAssignment_3()); }
	(rule__ELSIF_Clause__StatementsAssignment_3)
	{ after(grammarAccess.getELSIF_ClauseAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ELSE_Clause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ELSE_Clause__Group__0__Impl
	rule__ELSE_Clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSE_Clause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getELSE_ClauseAccess().getELSEKeyword_0()); }
	ELSE
	{ after(grammarAccess.getELSE_ClauseAccess().getELSEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSE_Clause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ELSE_Clause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSE_Clause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getELSE_ClauseAccess().getStatementsAssignment_1()); }
	(rule__ELSE_Clause__StatementsAssignment_1)
	{ after(grammarAccess.getELSE_ClauseAccess().getStatementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Case_Stmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_Stmt__Group__0__Impl
	rule__Case_Stmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_StmtAccess().getCASEKeyword_0()); }
	CASE
	{ after(grammarAccess.getCase_StmtAccess().getCASEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_Stmt__Group__1__Impl
	rule__Case_Stmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_StmtAccess().getExpressionAssignment_1()); }
	(rule__Case_Stmt__ExpressionAssignment_1)
	{ after(grammarAccess.getCase_StmtAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_Stmt__Group__2__Impl
	rule__Case_Stmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_StmtAccess().getOFKeyword_2()); }
	OF
	{ after(grammarAccess.getCase_StmtAccess().getOFKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_Stmt__Group__3__Impl
	rule__Case_Stmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCase_StmtAccess().getCaseAssignment_3()); }
		(rule__Case_Stmt__CaseAssignment_3)
		{ after(grammarAccess.getCase_StmtAccess().getCaseAssignment_3()); }
	)
	(
		{ before(grammarAccess.getCase_StmtAccess().getCaseAssignment_3()); }
		(rule__Case_Stmt__CaseAssignment_3)*
		{ after(grammarAccess.getCase_StmtAccess().getCaseAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_Stmt__Group__4__Impl
	rule__Case_Stmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_StmtAccess().getElseAssignment_4()); }
	(rule__Case_Stmt__ElseAssignment_4)?
	{ after(grammarAccess.getCase_StmtAccess().getElseAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_Stmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_StmtAccess().getEND_CASEKeyword_5()); }
	END_CASE
	{ after(grammarAccess.getCase_StmtAccess().getEND_CASEKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Case_Selection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_Selection__Group__0__Impl
	rule__Case_Selection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_SelectionAccess().getCaseAssignment_0()); }
	(rule__Case_Selection__CaseAssignment_0)
	{ after(grammarAccess.getCase_SelectionAccess().getCaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_Selection__Group__1__Impl
	rule__Case_Selection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_SelectionAccess().getGroup_1()); }
	(rule__Case_Selection__Group_1__0)*
	{ after(grammarAccess.getCase_SelectionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_Selection__Group__2__Impl
	rule__Case_Selection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_SelectionAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getCase_SelectionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_Selection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_SelectionAccess().getStatementsAssignment_3()); }
	(rule__Case_Selection__StatementsAssignment_3)
	{ after(grammarAccess.getCase_SelectionAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Case_Selection__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_Selection__Group_1__0__Impl
	rule__Case_Selection__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_SelectionAccess().getCommaKeyword_1_0()); }
	Comma
	{ after(grammarAccess.getCase_SelectionAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case_Selection__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCase_SelectionAccess().getCaseAssignment_1_1()); }
	(rule__Case_Selection__CaseAssignment_1_1)
	{ after(grammarAccess.getCase_SelectionAccess().getCaseAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration_Stmt__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_Stmt__Group_3__0__Impl
	rule__Iteration_Stmt__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_Stmt__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_StmtAccess().getExitStatementAction_3_0()); }
	()
	{ after(grammarAccess.getIteration_StmtAccess().getExitStatementAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_Stmt__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_Stmt__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_Stmt__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_StmtAccess().getEXITKeyword_3_1()); }
	EXIT
	{ after(grammarAccess.getIteration_StmtAccess().getEXITKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration_Stmt__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_Stmt__Group_4__0__Impl
	rule__Iteration_Stmt__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_Stmt__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_StmtAccess().getContinueStatementAction_4_0()); }
	()
	{ after(grammarAccess.getIteration_StmtAccess().getContinueStatementAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_Stmt__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_Stmt__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_Stmt__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_StmtAccess().getCONTINUEKeyword_4_1()); }
	CONTINUE
	{ after(grammarAccess.getIteration_StmtAccess().getCONTINUEKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__For_Stmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For_Stmt__Group__0__Impl
	rule__For_Stmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFor_StmtAccess().getFORKeyword_0()); }
	FOR
	{ after(grammarAccess.getFor_StmtAccess().getFORKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For_Stmt__Group__1__Impl
	rule__For_Stmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFor_StmtAccess().getVariableAssignment_1()); }
	(rule__For_Stmt__VariableAssignment_1)
	{ after(grammarAccess.getFor_StmtAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For_Stmt__Group__2__Impl
	rule__For_Stmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFor_StmtAccess().getColonEqualsSignKeyword_2()); }
	ColonEqualsSign
	{ after(grammarAccess.getFor_StmtAccess().getColonEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For_Stmt__Group__3__Impl
	rule__For_Stmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFor_StmtAccess().getFromAssignment_3()); }
	(rule__For_Stmt__FromAssignment_3)
	{ after(grammarAccess.getFor_StmtAccess().getFromAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For_Stmt__Group__4__Impl
	rule__For_Stmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFor_StmtAccess().getTOKeyword_4()); }
	TO
	{ after(grammarAccess.getFor_StmtAccess().getTOKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For_Stmt__Group__5__Impl
	rule__For_Stmt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFor_StmtAccess().getToAssignment_5()); }
	(rule__For_Stmt__ToAssignment_5)
	{ after(grammarAccess.getFor_StmtAccess().getToAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For_Stmt__Group__6__Impl
	rule__For_Stmt__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFor_StmtAccess().getGroup_6()); }
	(rule__For_Stmt__Group_6__0)?
	{ after(grammarAccess.getFor_StmtAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For_Stmt__Group__7__Impl
	rule__For_Stmt__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFor_StmtAccess().getDOKeyword_7()); }
	DO
	{ after(grammarAccess.getFor_StmtAccess().getDOKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For_Stmt__Group__8__Impl
	rule__For_Stmt__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFor_StmtAccess().getStatementsAssignment_8()); }
	(rule__For_Stmt__StatementsAssignment_8)
	{ after(grammarAccess.getFor_StmtAccess().getStatementsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For_Stmt__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFor_StmtAccess().getEND_FORKeyword_9()); }
	END_FOR
	{ after(grammarAccess.getFor_StmtAccess().getEND_FORKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__For_Stmt__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For_Stmt__Group_6__0__Impl
	rule__For_Stmt__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFor_StmtAccess().getBYKeyword_6_0()); }
	BY
	{ after(grammarAccess.getFor_StmtAccess().getBYKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For_Stmt__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFor_StmtAccess().getByAssignment_6_1()); }
	(rule__For_Stmt__ByAssignment_6_1)
	{ after(grammarAccess.getFor_StmtAccess().getByAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While_Stmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While_Stmt__Group__0__Impl
	rule__While_Stmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Stmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhile_StmtAccess().getWHILEKeyword_0()); }
	WHILE
	{ after(grammarAccess.getWhile_StmtAccess().getWHILEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Stmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While_Stmt__Group__1__Impl
	rule__While_Stmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Stmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhile_StmtAccess().getExpressionAssignment_1()); }
	(rule__While_Stmt__ExpressionAssignment_1)
	{ after(grammarAccess.getWhile_StmtAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Stmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While_Stmt__Group__2__Impl
	rule__While_Stmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Stmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhile_StmtAccess().getDOKeyword_2()); }
	DO
	{ after(grammarAccess.getWhile_StmtAccess().getDOKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Stmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While_Stmt__Group__3__Impl
	rule__While_Stmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Stmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhile_StmtAccess().getStatementsAssignment_3()); }
	(rule__While_Stmt__StatementsAssignment_3)
	{ after(grammarAccess.getWhile_StmtAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Stmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While_Stmt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Stmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhile_StmtAccess().getEND_WHILEKeyword_4()); }
	END_WHILE
	{ after(grammarAccess.getWhile_StmtAccess().getEND_WHILEKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat_Stmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat_Stmt__Group__0__Impl
	rule__Repeat_Stmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_Stmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeat_StmtAccess().getREPEATKeyword_0()); }
	REPEAT
	{ after(grammarAccess.getRepeat_StmtAccess().getREPEATKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_Stmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat_Stmt__Group__1__Impl
	rule__Repeat_Stmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_Stmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeat_StmtAccess().getStatementsAssignment_1()); }
	(rule__Repeat_Stmt__StatementsAssignment_1)
	{ after(grammarAccess.getRepeat_StmtAccess().getStatementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_Stmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat_Stmt__Group__2__Impl
	rule__Repeat_Stmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_Stmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeat_StmtAccess().getUNTILKeyword_2()); }
	UNTIL
	{ after(grammarAccess.getRepeat_StmtAccess().getUNTILKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_Stmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat_Stmt__Group__3__Impl
	rule__Repeat_Stmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_Stmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeat_StmtAccess().getExpressionAssignment_3()); }
	(rule__Repeat_Stmt__ExpressionAssignment_3)
	{ after(grammarAccess.getRepeat_StmtAccess().getExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_Stmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat_Stmt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_Stmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeat_StmtAccess().getEND_REPEATKeyword_4()); }
	END_REPEAT
	{ after(grammarAccess.getRepeat_StmtAccess().getEND_REPEATKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or_Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or_Expression__Group__0__Impl
	rule__Or_Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOr_ExpressionAccess().getXor_ExprParserRuleCall_0()); }
	ruleXor_Expr
	{ after(grammarAccess.getOr_ExpressionAccess().getXor_ExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or_Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOr_ExpressionAccess().getGroup_1()); }
	(rule__Or_Expression__Group_1__0)*
	{ after(grammarAccess.getOr_ExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or_Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or_Expression__Group_1__0__Impl
	rule__Or_Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOr_ExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOr_ExpressionAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or_Expression__Group_1__1__Impl
	rule__Or_Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOr_ExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__Or_Expression__OperatorAssignment_1_1)
	{ after(grammarAccess.getOr_ExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_Expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or_Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_Expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOr_ExpressionAccess().getRightAssignment_1_2()); }
	(rule__Or_Expression__RightAssignment_1_2)
	{ after(grammarAccess.getOr_ExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Xor_Expr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xor_Expr__Group__0__Impl
	rule__Xor_Expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor_Expr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXor_ExprAccess().getAnd_ExprParserRuleCall_0()); }
	ruleAnd_Expr
	{ after(grammarAccess.getXor_ExprAccess().getAnd_ExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor_Expr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xor_Expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor_Expr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXor_ExprAccess().getGroup_1()); }
	(rule__Xor_Expr__Group_1__0)*
	{ after(grammarAccess.getXor_ExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Xor_Expr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xor_Expr__Group_1__0__Impl
	rule__Xor_Expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor_Expr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXor_ExprAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getXor_ExprAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor_Expr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xor_Expr__Group_1__1__Impl
	rule__Xor_Expr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor_Expr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXor_ExprAccess().getOperatorAssignment_1_1()); }
	(rule__Xor_Expr__OperatorAssignment_1_1)
	{ after(grammarAccess.getXor_ExprAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor_Expr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xor_Expr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor_Expr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXor_ExprAccess().getRightAssignment_1_2()); }
	(rule__Xor_Expr__RightAssignment_1_2)
	{ after(grammarAccess.getXor_ExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_Expr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_Expr__Group__0__Impl
	rule__And_Expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Expr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_ExprAccess().getCompare_ExprParserRuleCall_0()); }
	ruleCompare_Expr
	{ after(grammarAccess.getAnd_ExprAccess().getCompare_ExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Expr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_Expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Expr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_ExprAccess().getGroup_1()); }
	(rule__And_Expr__Group_1__0)*
	{ after(grammarAccess.getAnd_ExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_Expr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_Expr__Group_1__0__Impl
	rule__And_Expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Expr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_ExprAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAnd_ExprAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Expr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_Expr__Group_1__1__Impl
	rule__And_Expr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Expr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_ExprAccess().getOperatorAssignment_1_1()); }
	(rule__And_Expr__OperatorAssignment_1_1)
	{ after(grammarAccess.getAnd_ExprAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Expr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_Expr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Expr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_ExprAccess().getRightAssignment_1_2()); }
	(rule__And_Expr__RightAssignment_1_2)
	{ after(grammarAccess.getAnd_ExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare_Expr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare_Expr__Group__0__Impl
	rule__Compare_Expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_Expr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompare_ExprAccess().getEqu_ExprParserRuleCall_0()); }
	ruleEqu_Expr
	{ after(grammarAccess.getCompare_ExprAccess().getEqu_ExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_Expr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare_Expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_Expr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompare_ExprAccess().getGroup_1()); }
	(rule__Compare_Expr__Group_1__0)*
	{ after(grammarAccess.getCompare_ExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare_Expr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare_Expr__Group_1__0__Impl
	rule__Compare_Expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_Expr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompare_ExprAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getCompare_ExprAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_Expr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare_Expr__Group_1__1__Impl
	rule__Compare_Expr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_Expr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompare_ExprAccess().getOperatorAssignment_1_1()); }
	(rule__Compare_Expr__OperatorAssignment_1_1)
	{ after(grammarAccess.getCompare_ExprAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_Expr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare_Expr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_Expr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompare_ExprAccess().getRightAssignment_1_2()); }
	(rule__Compare_Expr__RightAssignment_1_2)
	{ after(grammarAccess.getCompare_ExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equ_Expr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equ_Expr__Group__0__Impl
	rule__Equ_Expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equ_Expr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqu_ExprAccess().getAdd_ExprParserRuleCall_0()); }
	ruleAdd_Expr
	{ after(grammarAccess.getEqu_ExprAccess().getAdd_ExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equ_Expr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equ_Expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equ_Expr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqu_ExprAccess().getGroup_1()); }
	(rule__Equ_Expr__Group_1__0)*
	{ after(grammarAccess.getEqu_ExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equ_Expr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equ_Expr__Group_1__0__Impl
	rule__Equ_Expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equ_Expr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqu_ExprAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqu_ExprAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equ_Expr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equ_Expr__Group_1__1__Impl
	rule__Equ_Expr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equ_Expr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqu_ExprAccess().getOperatorAssignment_1_1()); }
	(rule__Equ_Expr__OperatorAssignment_1_1)
	{ after(grammarAccess.getEqu_ExprAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equ_Expr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equ_Expr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equ_Expr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqu_ExprAccess().getRightAssignment_1_2()); }
	(rule__Equ_Expr__RightAssignment_1_2)
	{ after(grammarAccess.getEqu_ExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add_Expr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add_Expr__Group__0__Impl
	rule__Add_Expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_Expr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdd_ExprAccess().getTermParserRuleCall_0()); }
	ruleTerm
	{ after(grammarAccess.getAdd_ExprAccess().getTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_Expr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add_Expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_Expr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdd_ExprAccess().getGroup_1()); }
	(rule__Add_Expr__Group_1__0)*
	{ after(grammarAccess.getAdd_ExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add_Expr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add_Expr__Group_1__0__Impl
	rule__Add_Expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_Expr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdd_ExprAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAdd_ExprAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_Expr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add_Expr__Group_1__1__Impl
	rule__Add_Expr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_Expr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdd_ExprAccess().getOperatorAssignment_1_1()); }
	(rule__Add_Expr__OperatorAssignment_1_1)
	{ after(grammarAccess.getAdd_ExprAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_Expr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add_Expr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_Expr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdd_ExprAccess().getRightAssignment_1_2()); }
	(rule__Add_Expr__RightAssignment_1_2)
	{ after(grammarAccess.getAdd_ExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getPower_ExprParserRuleCall_0()); }
	rulePower_Expr
	{ after(grammarAccess.getTermAccess().getPower_ExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1()); }
	(rule__Term__Group_1__0)*
	{ after(grammarAccess.getTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getTermAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__1__Impl
	rule__Term__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getOperatorAssignment_1_1()); }
	(rule__Term__OperatorAssignment_1_1)
	{ after(grammarAccess.getTermAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getRightAssignment_1_2()); }
	(rule__Term__RightAssignment_1_2)
	{ after(grammarAccess.getTermAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Power_Expr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power_Expr__Group__0__Impl
	rule__Power_Expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Power_Expr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPower_ExprAccess().getUnary_ExprParserRuleCall_0()); }
	ruleUnary_Expr
	{ after(grammarAccess.getPower_ExprAccess().getUnary_ExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power_Expr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power_Expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Power_Expr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPower_ExprAccess().getGroup_1()); }
	(rule__Power_Expr__Group_1__0)*
	{ after(grammarAccess.getPower_ExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Power_Expr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power_Expr__Group_1__0__Impl
	rule__Power_Expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Power_Expr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPower_ExprAccess().getBinaryExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getPower_ExprAccess().getBinaryExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power_Expr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power_Expr__Group_1__1__Impl
	rule__Power_Expr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Power_Expr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPower_ExprAccess().getOperatorAssignment_1_1()); }
	(rule__Power_Expr__OperatorAssignment_1_1)
	{ after(grammarAccess.getPower_ExprAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power_Expr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power_Expr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Power_Expr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPower_ExprAccess().getRightAssignment_1_2()); }
	(rule__Power_Expr__RightAssignment_1_2)
	{ after(grammarAccess.getPower_ExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_Expr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_Expr__Group_0__0__Impl
	rule__Unary_Expr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_Expr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_ExprAccess().getUnaryExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getUnary_ExprAccess().getUnaryExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_Expr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_Expr__Group_0__1__Impl
	rule__Unary_Expr__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_Expr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_ExprAccess().getOperatorAssignment_0_1()); }
	(rule__Unary_Expr__OperatorAssignment_0_1)
	{ after(grammarAccess.getUnary_ExprAccess().getOperatorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_Expr__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_Expr__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_Expr__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_ExprAccess().getExpressionAssignment_0_2()); }
	(rule__Unary_Expr__ExpressionAssignment_0_2)
	{ after(grammarAccess.getUnary_ExprAccess().getExpressionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_Expr__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary_Expr__Group_2__0__Impl
	rule__Primary_Expr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_Expr__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimary_ExprAccess().getLeftParenthesisKeyword_2_0()); }
	LeftParenthesis
	{ after(grammarAccess.getPrimary_ExprAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_Expr__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary_Expr__Group_2__1__Impl
	rule__Primary_Expr__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_Expr__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimary_ExprAccess().getExpressionParserRuleCall_2_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimary_ExprAccess().getExpressionParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_Expr__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary_Expr__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_Expr__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimary_ExprAccess().getRightParenthesisKeyword_2_2()); }
	RightParenthesis
	{ after(grammarAccess.getPrimary_ExprAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Func_Call__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Func_Call__Group__0__Impl
	rule__Func_Call__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunc_CallAccess().getFuncAssignment_0()); }
	(rule__Func_Call__FuncAssignment_0)
	{ after(grammarAccess.getFunc_CallAccess().getFuncAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Func_Call__Group__1__Impl
	rule__Func_Call__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunc_CallAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getFunc_CallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Func_Call__Group__2__Impl
	rule__Func_Call__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunc_CallAccess().getGroup_2()); }
	(rule__Func_Call__Group_2__0)?
	{ after(grammarAccess.getFunc_CallAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Func_Call__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunc_CallAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getFunc_CallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Func_Call__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Func_Call__Group_2__0__Impl
	rule__Func_Call__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunc_CallAccess().getArgsAssignment_2_0()); }
	(rule__Func_Call__ArgsAssignment_2_0)
	{ after(grammarAccess.getFunc_CallAccess().getArgsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Func_Call__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunc_CallAccess().getGroup_2_1()); }
	(rule__Func_Call__Group_2_1__0)*
	{ after(grammarAccess.getFunc_CallAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Func_Call__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Func_Call__Group_2_1__0__Impl
	rule__Func_Call__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunc_CallAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getFunc_CallAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Func_Call__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunc_CallAccess().getArgsAssignment_2_1_1()); }
	(rule__Func_Call__ArgsAssignment_2_1_1)
	{ after(grammarAccess.getFunc_CallAccess().getArgsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Param_Assign_In__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param_Assign_In__Group__0__Impl
	rule__Param_Assign_In__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_In__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParam_Assign_InAccess().getGroup_0()); }
	(rule__Param_Assign_In__Group_0__0)?
	{ after(grammarAccess.getParam_Assign_InAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_In__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param_Assign_In__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_In__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParam_Assign_InAccess().getExprAssignment_1()); }
	(rule__Param_Assign_In__ExprAssignment_1)
	{ after(grammarAccess.getParam_Assign_InAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Param_Assign_In__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param_Assign_In__Group_0__0__Impl
	rule__Param_Assign_In__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_In__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParam_Assign_InAccess().getVarAssignment_0_0()); }
	(rule__Param_Assign_In__VarAssignment_0_0)
	{ after(grammarAccess.getParam_Assign_InAccess().getVarAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_In__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param_Assign_In__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_In__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParam_Assign_InAccess().getColonEqualsSignKeyword_0_1()); }
	ColonEqualsSign
	{ after(grammarAccess.getParam_Assign_InAccess().getColonEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Param_Assign_Out__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param_Assign_Out__Group__0__Impl
	rule__Param_Assign_Out__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_Out__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParam_Assign_OutAccess().getNotAssignment_0()); }
	(rule__Param_Assign_Out__NotAssignment_0)?
	{ after(grammarAccess.getParam_Assign_OutAccess().getNotAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_Out__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param_Assign_Out__Group__1__Impl
	rule__Param_Assign_Out__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_Out__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParam_Assign_OutAccess().getVarAssignment_1()); }
	(rule__Param_Assign_Out__VarAssignment_1)
	{ after(grammarAccess.getParam_Assign_OutAccess().getVarAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_Out__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param_Assign_Out__Group__2__Impl
	rule__Param_Assign_Out__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_Out__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParam_Assign_OutAccess().getEqualsSignGreaterThanSignKeyword_2()); }
	EqualsSignGreaterThanSign
	{ after(grammarAccess.getParam_Assign_OutAccess().getEqualsSignGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_Out__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param_Assign_Out__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_Out__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParam_Assign_OutAccess().getExprAssignment_3()); }
	(rule__Param_Assign_Out__ExprAssignment_3)
	{ after(grammarAccess.getParam_Assign_OutAccess().getExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariable_SubscriptParserRuleCall_0()); }
	ruleVariable_Subscript
	{ after(grammarAccess.getVariableAccess().getVariable_SubscriptParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getPartAssignment_1()); }
	(rule__Variable__PartAssignment_1)?
	{ after(grammarAccess.getVariableAccess().getPartAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_Subscript__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Subscript__Group__0__Impl
	rule__Variable_Subscript__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_SubscriptAccess().getAlternatives_0()); }
	(rule__Variable_Subscript__Alternatives_0)
	{ after(grammarAccess.getVariable_SubscriptAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Subscript__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_SubscriptAccess().getGroup_1()); }
	(rule__Variable_Subscript__Group_1__0)?
	{ after(grammarAccess.getVariable_SubscriptAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_Subscript__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Subscript__Group_1__0__Impl
	rule__Variable_Subscript__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_SubscriptAccess().getArrayVariableArrayAction_1_0()); }
	()
	{ after(grammarAccess.getVariable_SubscriptAccess().getArrayVariableArrayAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Subscript__Group_1__1__Impl
	rule__Variable_Subscript__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_SubscriptAccess().getLeftSquareBracketKeyword_1_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getVariable_SubscriptAccess().getLeftSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Subscript__Group_1__2__Impl
	rule__Variable_Subscript__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_SubscriptAccess().getIndexAssignment_1_2()); }
	(rule__Variable_Subscript__IndexAssignment_1_2)
	{ after(grammarAccess.getVariable_SubscriptAccess().getIndexAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Subscript__Group_1__3__Impl
	rule__Variable_Subscript__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_SubscriptAccess().getGroup_1_3()); }
	(rule__Variable_Subscript__Group_1_3__0)*
	{ after(grammarAccess.getVariable_SubscriptAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Subscript__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_SubscriptAccess().getRightSquareBracketKeyword_1_4()); }
	RightSquareBracket
	{ after(grammarAccess.getVariable_SubscriptAccess().getRightSquareBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_Subscript__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Subscript__Group_1_3__0__Impl
	rule__Variable_Subscript__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_SubscriptAccess().getCommaKeyword_1_3_0()); }
	Comma
	{ after(grammarAccess.getVariable_SubscriptAccess().getCommaKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Subscript__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_SubscriptAccess().getIndexAssignment_1_3_1()); }
	(rule__Variable_Subscript__IndexAssignment_1_3_1)
	{ after(grammarAccess.getVariable_SubscriptAccess().getIndexAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_Adapter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Adapter__Group__0__Impl
	rule__Variable_Adapter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Adapter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_AdapterAccess().getAdapterVariableAction_0()); }
	()
	{ after(grammarAccess.getVariable_AdapterAccess().getAdapterVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Adapter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Adapter__Group__1__Impl
	rule__Variable_Adapter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Adapter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_AdapterAccess().getAdapterAssignment_1()); }
	(rule__Variable_Adapter__AdapterAssignment_1)
	{ after(grammarAccess.getVariable_AdapterAccess().getAdapterAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Adapter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Adapter__Group__2__Impl
	rule__Variable_Adapter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Adapter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_AdapterAccess().getFullStopKeyword_2()); }
	FullStop
	{ after(grammarAccess.getVariable_AdapterAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Adapter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_Adapter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Adapter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_AdapterAccess().getVarAssignment_3()); }
	(rule__Variable_Adapter__VarAssignment_3)
	{ after(grammarAccess.getVariable_AdapterAccess().getVarAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multibit_Part_Access__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multibit_Part_Access__Group_0__0__Impl
	rule__Multibit_Part_Access__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultibit_Part_AccessAccess().getDwordaccessAssignment_0_0()); }
	(rule__Multibit_Part_Access__DwordaccessAssignment_0_0)
	{ after(grammarAccess.getMultibit_Part_AccessAccess().getDwordaccessAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multibit_Part_Access__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultibit_Part_AccessAccess().getIndexAssignment_0_1()); }
	(rule__Multibit_Part_Access__IndexAssignment_0_1)
	{ after(grammarAccess.getMultibit_Part_AccessAccess().getIndexAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multibit_Part_Access__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multibit_Part_Access__Group_1__0__Impl
	rule__Multibit_Part_Access__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultibit_Part_AccessAccess().getWordaccessAssignment_1_0()); }
	(rule__Multibit_Part_Access__WordaccessAssignment_1_0)
	{ after(grammarAccess.getMultibit_Part_AccessAccess().getWordaccessAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multibit_Part_Access__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultibit_Part_AccessAccess().getIndexAssignment_1_1()); }
	(rule__Multibit_Part_Access__IndexAssignment_1_1)
	{ after(grammarAccess.getMultibit_Part_AccessAccess().getIndexAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multibit_Part_Access__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multibit_Part_Access__Group_2__0__Impl
	rule__Multibit_Part_Access__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultibit_Part_AccessAccess().getByteaccessAssignment_2_0()); }
	(rule__Multibit_Part_Access__ByteaccessAssignment_2_0)
	{ after(grammarAccess.getMultibit_Part_AccessAccess().getByteaccessAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multibit_Part_Access__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultibit_Part_AccessAccess().getIndexAssignment_2_1()); }
	(rule__Multibit_Part_Access__IndexAssignment_2_1)
	{ after(grammarAccess.getMultibit_Part_AccessAccess().getIndexAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multibit_Part_Access__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multibit_Part_Access__Group_3__0__Impl
	rule__Multibit_Part_Access__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultibit_Part_AccessAccess().getBitaccessAssignment_3_0()); }
	(rule__Multibit_Part_Access__BitaccessAssignment_3_0)
	{ after(grammarAccess.getMultibit_Part_AccessAccess().getBitaccessAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multibit_Part_Access__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultibit_Part_AccessAccess().getIndexAssignment_3_1()); }
	(rule__Multibit_Part_Access__IndexAssignment_3_1)
	{ after(grammarAccess.getMultibit_Part_AccessAccess().getIndexAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multibit_Part_Access__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multibit_Part_Access__Group_4__0__Impl
	rule__Multibit_Part_Access__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultibit_Part_AccessAccess().getBitaccessAssignment_4_0()); }
	(rule__Multibit_Part_Access__BitaccessAssignment_4_0)
	{ after(grammarAccess.getMultibit_Part_AccessAccess().getBitaccessAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multibit_Part_Access__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultibit_Part_AccessAccess().getIndexAssignment_4_1()); }
	(rule__Multibit_Part_Access__IndexAssignment_4_1)
	{ after(grammarAccess.getMultibit_Part_AccessAccess().getIndexAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Int_Literal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Int_Literal__Group__0__Impl
	rule__Int_Literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_Literal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInt_LiteralAccess().getGroup_0()); }
	(rule__Int_Literal__Group_0__0)?
	{ after(grammarAccess.getInt_LiteralAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_Literal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Int_Literal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_Literal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInt_LiteralAccess().getValueAssignment_1()); }
	(rule__Int_Literal__ValueAssignment_1)
	{ after(grammarAccess.getInt_LiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Int_Literal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Int_Literal__Group_0__0__Impl
	rule__Int_Literal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_Literal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInt_LiteralAccess().getTypeAssignment_0_0()); }
	(rule__Int_Literal__TypeAssignment_0_0)
	{ after(grammarAccess.getInt_LiteralAccess().getTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_Literal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Int_Literal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_Literal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInt_LiteralAccess().getNumberSignKeyword_0_1()); }
	NumberSign
	{ after(grammarAccess.getInt_LiteralAccess().getNumberSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signed_Int__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signed_Int__Group__0__Impl
	rule__Signed_Int__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_Int__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSigned_IntAccess().getAlternatives_0()); }
	(rule__Signed_Int__Alternatives_0)?
	{ after(grammarAccess.getSigned_IntAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_Int__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signed_Int__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_Int__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSigned_IntAccess().getUNSIGNED_INTTerminalRuleCall_1()); }
	RULE_UNSIGNED_INT
	{ after(grammarAccess.getSigned_IntAccess().getUNSIGNED_INTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Real_Literal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real_Literal__Group__0__Impl
	rule__Real_Literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Literal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReal_LiteralAccess().getGroup_0()); }
	(rule__Real_Literal__Group_0__0)?
	{ after(grammarAccess.getReal_LiteralAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Literal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real_Literal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Literal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReal_LiteralAccess().getValueAssignment_1()); }
	(rule__Real_Literal__ValueAssignment_1)
	{ after(grammarAccess.getReal_LiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Real_Literal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real_Literal__Group_0__0__Impl
	rule__Real_Literal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Literal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReal_LiteralAccess().getTypeAssignment_0_0()); }
	(rule__Real_Literal__TypeAssignment_0_0)
	{ after(grammarAccess.getReal_LiteralAccess().getTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Literal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real_Literal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Literal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReal_LiteralAccess().getNumberSignKeyword_0_1()); }
	NumberSign
	{ after(grammarAccess.getReal_LiteralAccess().getNumberSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Real_Value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real_Value__Group__0__Impl
	rule__Real_Value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReal_ValueAccess().getSigned_IntParserRuleCall_0()); }
	ruleSigned_Int
	{ after(grammarAccess.getReal_ValueAccess().getSigned_IntParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real_Value__Group__1__Impl
	rule__Real_Value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReal_ValueAccess().getFullStopKeyword_1()); }
	FullStop
	{ after(grammarAccess.getReal_ValueAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real_Value__Group__2__Impl
	rule__Real_Value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReal_ValueAccess().getUNSIGNED_INTTerminalRuleCall_2()); }
	RULE_UNSIGNED_INT
	{ after(grammarAccess.getReal_ValueAccess().getUNSIGNED_INTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real_Value__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReal_ValueAccess().getGroup_3()); }
	(rule__Real_Value__Group_3__0)?
	{ after(grammarAccess.getReal_ValueAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Real_Value__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real_Value__Group_3__0__Impl
	rule__Real_Value__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Value__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReal_ValueAccess().getEKeyword_3_0()); }
	E
	{ after(grammarAccess.getReal_ValueAccess().getEKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Value__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Real_Value__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Value__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReal_ValueAccess().getSigned_IntParserRuleCall_3_1()); }
	ruleSigned_Int
	{ after(grammarAccess.getReal_ValueAccess().getSigned_IntParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bool_Literal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bool_Literal__Group__0__Impl
	rule__Bool_Literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_Literal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBool_LiteralAccess().getGroup_0()); }
	(rule__Bool_Literal__Group_0__0)?
	{ after(grammarAccess.getBool_LiteralAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_Literal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bool_Literal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_Literal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBool_LiteralAccess().getValueAssignment_1()); }
	(rule__Bool_Literal__ValueAssignment_1)
	{ after(grammarAccess.getBool_LiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bool_Literal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bool_Literal__Group_0__0__Impl
	rule__Bool_Literal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_Literal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBool_LiteralAccess().getTypeAssignment_0_0()); }
	(rule__Bool_Literal__TypeAssignment_0_0)
	{ after(grammarAccess.getBool_LiteralAccess().getTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_Literal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bool_Literal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_Literal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBool_LiteralAccess().getNumberSignKeyword_0_1()); }
	NumberSign
	{ after(grammarAccess.getBool_LiteralAccess().getNumberSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Char_Literal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Char_Literal__Group__0__Impl
	rule__Char_Literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Char_Literal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChar_LiteralAccess().getGroup_0()); }
	(rule__Char_Literal__Group_0__0)?
	{ after(grammarAccess.getChar_LiteralAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Char_Literal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Char_Literal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Char_Literal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChar_LiteralAccess().getValueAssignment_1()); }
	(rule__Char_Literal__ValueAssignment_1)
	{ after(grammarAccess.getChar_LiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Char_Literal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Char_Literal__Group_0__0__Impl
	rule__Char_Literal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Char_Literal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChar_LiteralAccess().getTypeAssignment_0_0()); }
	(rule__Char_Literal__TypeAssignment_0_0)
	{ after(grammarAccess.getChar_LiteralAccess().getTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Char_Literal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Char_Literal__Group_0__1__Impl
	rule__Char_Literal__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Char_Literal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChar_LiteralAccess().getLengthAssignment_0_1()); }
	(rule__Char_Literal__LengthAssignment_0_1)?
	{ after(grammarAccess.getChar_LiteralAccess().getLengthAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Char_Literal__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Char_Literal__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Char_Literal__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChar_LiteralAccess().getNumberSignKeyword_0_2()); }
	NumberSign
	{ after(grammarAccess.getChar_LiteralAccess().getNumberSignKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Duration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__0__Impl
	rule__Duration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getTypeAssignment_0()); }
	(rule__Duration__TypeAssignment_0)
	{ after(grammarAccess.getDurationAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__1__Impl
	rule__Duration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getNumberSignKeyword_1()); }
	NumberSign
	{ after(grammarAccess.getDurationAccess().getNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__2__Impl
	rule__Duration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getAlternatives_2()); }
	(rule__Duration__Alternatives_2)?
	{ after(grammarAccess.getDurationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__3__Impl
	rule__Duration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getValueAssignment_3()); }
	(rule__Duration__ValueAssignment_3)
	{ after(grammarAccess.getDurationAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getGroup_4()); }
	(rule__Duration__Group_4__0)*
	{ after(grammarAccess.getDurationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Duration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group_4__0__Impl
	rule__Duration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().get_Keyword_4_0()); }
	KW__
	{ after(grammarAccess.getDurationAccess().get_Keyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getValueAssignment_4_1()); }
	(rule__Duration__ValueAssignment_4_1)
	{ after(grammarAccess.getDurationAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Duration_Value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration_Value__Group__0__Impl
	rule__Duration_Value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration_Value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDuration_ValueAccess().getValueAssignment_0()); }
	(rule__Duration_Value__ValueAssignment_0)
	{ after(grammarAccess.getDuration_ValueAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration_Value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration_Value__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration_Value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDuration_ValueAccess().getUnitAssignment_1()); }
	(rule__Duration_Value__UnitAssignment_1)
	{ after(grammarAccess.getDuration_ValueAccess().getUnitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fix_Point__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fix_Point__Group__0__Impl
	rule__Fix_Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fix_Point__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFix_PointAccess().getUNSIGNED_INTTerminalRuleCall_0()); }
	RULE_UNSIGNED_INT
	{ after(grammarAccess.getFix_PointAccess().getUNSIGNED_INTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fix_Point__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fix_Point__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fix_Point__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFix_PointAccess().getGroup_1()); }
	(rule__Fix_Point__Group_1__0)?
	{ after(grammarAccess.getFix_PointAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fix_Point__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fix_Point__Group_1__0__Impl
	rule__Fix_Point__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fix_Point__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFix_PointAccess().getFullStopKeyword_1_0()); }
	FullStop
	{ after(grammarAccess.getFix_PointAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fix_Point__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fix_Point__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fix_Point__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFix_PointAccess().getUNSIGNED_INTTerminalRuleCall_1_1()); }
	RULE_UNSIGNED_INT
	{ after(grammarAccess.getFix_PointAccess().getUNSIGNED_INTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Time_Of_Day__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time_Of_Day__Group__0__Impl
	rule__Time_Of_Day__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Time_Of_Day__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTime_Of_DayAccess().getTypeAssignment_0()); }
	(rule__Time_Of_Day__TypeAssignment_0)
	{ after(grammarAccess.getTime_Of_DayAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time_Of_Day__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time_Of_Day__Group__1__Impl
	rule__Time_Of_Day__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Time_Of_Day__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTime_Of_DayAccess().getNumberSignKeyword_1()); }
	NumberSign
	{ after(grammarAccess.getTime_Of_DayAccess().getNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time_Of_Day__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time_Of_Day__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Time_Of_Day__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTime_Of_DayAccess().getValueAssignment_2()); }
	(rule__Time_Of_Day__ValueAssignment_2)
	{ after(grammarAccess.getTime_Of_DayAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Daytime__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Daytime__Group__0__Impl
	rule__Daytime__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Daytime__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDaytimeAccess().getDay_HourParserRuleCall_0()); }
	ruleDay_Hour
	{ after(grammarAccess.getDaytimeAccess().getDay_HourParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Daytime__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Daytime__Group__1__Impl
	rule__Daytime__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Daytime__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDaytimeAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getDaytimeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Daytime__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Daytime__Group__2__Impl
	rule__Daytime__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Daytime__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDaytimeAccess().getDay_MinuteParserRuleCall_2()); }
	ruleDay_Minute
	{ after(grammarAccess.getDaytimeAccess().getDay_MinuteParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Daytime__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Daytime__Group__3__Impl
	rule__Daytime__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Daytime__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDaytimeAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getDaytimeAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Daytime__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Daytime__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Daytime__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDaytimeAccess().getDay_SecondParserRuleCall_4()); }
	ruleDay_Second
	{ after(grammarAccess.getDaytimeAccess().getDay_SecondParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__0__Impl
	rule__Date__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getTypeAssignment_0()); }
	(rule__Date__TypeAssignment_0)
	{ after(grammarAccess.getDateAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__1__Impl
	rule__Date__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getNumberSignKeyword_1()); }
	NumberSign
	{ after(grammarAccess.getDateAccess().getNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getValueAssignment_2()); }
	(rule__Date__ValueAssignment_2)
	{ after(grammarAccess.getDateAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date_Literal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date_Literal__Group__0__Impl
	rule__Date_Literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_Literal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDate_LiteralAccess().getYearParserRuleCall_0()); }
	ruleYear
	{ after(grammarAccess.getDate_LiteralAccess().getYearParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_Literal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date_Literal__Group__1__Impl
	rule__Date_Literal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_Literal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDate_LiteralAccess().getHyphenMinusKeyword_1()); }
	HyphenMinus
	{ after(grammarAccess.getDate_LiteralAccess().getHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_Literal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date_Literal__Group__2__Impl
	rule__Date_Literal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_Literal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDate_LiteralAccess().getMonthParserRuleCall_2()); }
	ruleMonth
	{ after(grammarAccess.getDate_LiteralAccess().getMonthParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_Literal__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date_Literal__Group__3__Impl
	rule__Date_Literal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_Literal__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDate_LiteralAccess().getHyphenMinusKeyword_3()); }
	HyphenMinus
	{ after(grammarAccess.getDate_LiteralAccess().getHyphenMinusKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_Literal__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date_Literal__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_Literal__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDate_LiteralAccess().getDayParserRuleCall_4()); }
	ruleDay
	{ after(grammarAccess.getDate_LiteralAccess().getDayParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date_And_Time__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date_And_Time__Group__0__Impl
	rule__Date_And_Time__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_And_Time__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDate_And_TimeAccess().getTypeAssignment_0()); }
	(rule__Date_And_Time__TypeAssignment_0)
	{ after(grammarAccess.getDate_And_TimeAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_And_Time__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date_And_Time__Group__1__Impl
	rule__Date_And_Time__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_And_Time__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDate_And_TimeAccess().getNumberSignKeyword_1()); }
	NumberSign
	{ after(grammarAccess.getDate_And_TimeAccess().getNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_And_Time__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date_And_Time__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_And_Time__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDate_And_TimeAccess().getValueAssignment_2()); }
	(rule__Date_And_Time__ValueAssignment_2)
	{ after(grammarAccess.getDate_And_TimeAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date_And_Time_Value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date_And_Time_Value__Group__0__Impl
	rule__Date_And_Time_Value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_And_Time_Value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDate_And_Time_ValueAccess().getDate_LiteralParserRuleCall_0()); }
	ruleDate_Literal
	{ after(grammarAccess.getDate_And_Time_ValueAccess().getDate_LiteralParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_And_Time_Value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date_And_Time_Value__Group__1__Impl
	rule__Date_And_Time_Value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_And_Time_Value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDate_And_Time_ValueAccess().getHyphenMinusKeyword_1()); }
	HyphenMinus
	{ after(grammarAccess.getDate_And_Time_ValueAccess().getHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_And_Time_Value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date_And_Time_Value__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_And_Time_Value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDate_And_Time_ValueAccess().getDaytimeParserRuleCall_2()); }
	ruleDaytime
	{ after(grammarAccess.getDate_And_Time_ValueAccess().getDaytimeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredTextAlgorithm__LocalVariablesAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredTextAlgorithmAccess().getLocalVariablesVar_Decl_InitParserRuleCall_1_1_0_0()); }
		ruleVar_Decl_Init
		{ after(grammarAccess.getStructuredTextAlgorithmAccess().getLocalVariablesVar_Decl_InitParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTextAlgorithm__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredTextAlgorithmAccess().getStatementsStmt_ListParserRuleCall_2_0()); }
		ruleStmt_List
		{ after(grammarAccess.getStructuredTextAlgorithmAccess().getStatementsStmt_ListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__ConstantAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_Decl_LocalAccess().getConstantCONSTANTKeyword_1_0()); }
		(
			{ before(grammarAccess.getVar_Decl_LocalAccess().getConstantCONSTANTKeyword_1_0()); }
			CONSTANT
			{ after(grammarAccess.getVar_Decl_LocalAccess().getConstantCONSTANTKeyword_1_0()); }
		)
		{ after(grammarAccess.getVar_Decl_LocalAccess().getConstantCONSTANTKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_Decl_LocalAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVar_Decl_LocalAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__LocatedAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_Decl_LocalAccess().getLocatedATKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getVar_Decl_LocalAccess().getLocatedATKeyword_3_0_0()); }
			AT
			{ after(grammarAccess.getVar_Decl_LocalAccess().getLocatedATKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getVar_Decl_LocalAccess().getLocatedATKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__LocationAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_Decl_LocalAccess().getLocationVariableParserRuleCall_3_1_0()); }
		ruleVariable
		{ after(grammarAccess.getVar_Decl_LocalAccess().getLocationVariableParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__ArrayAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_Decl_LocalAccess().getArrayARRAYKeyword_5_0_0()); }
		(
			{ before(grammarAccess.getVar_Decl_LocalAccess().getArrayARRAYKeyword_5_0_0()); }
			ARRAY
			{ after(grammarAccess.getVar_Decl_LocalAccess().getArrayARRAYKeyword_5_0_0()); }
		)
		{ after(grammarAccess.getVar_Decl_LocalAccess().getArrayARRAYKeyword_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__ArrayStartAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_Decl_LocalAccess().getArrayStartArray_SizeParserRuleCall_5_2_0()); }
		ruleArray_Size
		{ after(grammarAccess.getVar_Decl_LocalAccess().getArrayStartArray_SizeParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__ArrayStopAssignment_5_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_Decl_LocalAccess().getArrayStopArray_SizeParserRuleCall_5_4_0()); }
		ruleArray_Size
		{ after(grammarAccess.getVar_Decl_LocalAccess().getArrayStopArray_SizeParserRuleCall_5_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__TypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_Decl_LocalAccess().getTypeDataTypeCrossReference_6_0()); }
		(
			{ before(grammarAccess.getVar_Decl_LocalAccess().getTypeDataTypeType_NameParserRuleCall_6_0_1()); }
			ruleType_Name
			{ after(grammarAccess.getVar_Decl_LocalAccess().getTypeDataTypeType_NameParserRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getVar_Decl_LocalAccess().getTypeDataTypeCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__InitalizedAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_Decl_LocalAccess().getInitalizedColonEqualsSignKeyword_7_0_0()); }
		(
			{ before(grammarAccess.getVar_Decl_LocalAccess().getInitalizedColonEqualsSignKeyword_7_0_0()); }
			ColonEqualsSign
			{ after(grammarAccess.getVar_Decl_LocalAccess().getInitalizedColonEqualsSignKeyword_7_0_0()); }
		)
		{ after(grammarAccess.getVar_Decl_LocalAccess().getInitalizedColonEqualsSignKeyword_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var_Decl_Local__InitialValueAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVar_Decl_LocalAccess().getInitialValueConstantParserRuleCall_7_1_0()); }
		ruleConstant
		{ after(grammarAccess.getVar_Decl_LocalAccess().getInitialValueConstantParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt_List__StatementsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmt_ListAccess().getStatementsStmtParserRuleCall_1_0_0()); }
		ruleStmt
		{ after(grammarAccess.getStmt_ListAccess().getStatementsStmtParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_Stmt__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssign_StmtAccess().getVariableVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getAssign_StmtAccess().getVariableVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_Stmt__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssign_StmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssign_StmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIF_StmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIF_StmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__StatmentsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIF_StmtAccess().getStatmentsStmt_ListParserRuleCall_3_0()); }
		ruleStmt_List
		{ after(grammarAccess.getIF_StmtAccess().getStatmentsStmt_ListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__ElseifAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIF_StmtAccess().getElseifELSIF_ClauseParserRuleCall_4_0()); }
		ruleELSIF_Clause
		{ after(grammarAccess.getIF_StmtAccess().getElseifELSIF_ClauseParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_Stmt__ElseAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIF_StmtAccess().getElseELSE_ClauseParserRuleCall_5_0()); }
		ruleELSE_Clause
		{ after(grammarAccess.getIF_StmtAccess().getElseELSE_ClauseParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSIF_Clause__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getELSIF_ClauseAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getELSIF_ClauseAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSIF_Clause__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getELSIF_ClauseAccess().getStatementsStmt_ListParserRuleCall_3_0()); }
		ruleStmt_List
		{ after(grammarAccess.getELSIF_ClauseAccess().getStatementsStmt_ListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ELSE_Clause__StatementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getELSE_ClauseAccess().getStatementsStmt_ListParserRuleCall_1_0()); }
		ruleStmt_List
		{ after(grammarAccess.getELSE_ClauseAccess().getStatementsStmt_ListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCase_StmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCase_StmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__CaseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCase_StmtAccess().getCaseCase_SelectionParserRuleCall_3_0()); }
		ruleCase_Selection
		{ after(grammarAccess.getCase_StmtAccess().getCaseCase_SelectionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Stmt__ElseAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCase_StmtAccess().getElseELSE_ClauseParserRuleCall_4_0()); }
		ruleELSE_Clause
		{ after(grammarAccess.getCase_StmtAccess().getElseELSE_ClauseParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__CaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCase_SelectionAccess().getCaseConstantParserRuleCall_0_0()); }
		ruleConstant
		{ after(grammarAccess.getCase_SelectionAccess().getCaseConstantParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__CaseAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCase_SelectionAccess().getCaseConstantParserRuleCall_1_1_0()); }
		ruleConstant
		{ after(grammarAccess.getCase_SelectionAccess().getCaseConstantParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_Selection__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCase_SelectionAccess().getStatementsStmt_ListParserRuleCall_3_0()); }
		ruleStmt_List
		{ after(grammarAccess.getCase_SelectionAccess().getStatementsStmt_ListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFor_StmtAccess().getVariableVariable_PrimaryParserRuleCall_1_0()); }
		ruleVariable_Primary
		{ after(grammarAccess.getFor_StmtAccess().getVariableVariable_PrimaryParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__FromAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFor_StmtAccess().getFromExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getFor_StmtAccess().getFromExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__ToAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFor_StmtAccess().getToExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getFor_StmtAccess().getToExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__ByAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFor_StmtAccess().getByExpressionParserRuleCall_6_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFor_StmtAccess().getByExpressionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Stmt__StatementsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFor_StmtAccess().getStatementsStmt_ListParserRuleCall_8_0()); }
		ruleStmt_List
		{ after(grammarAccess.getFor_StmtAccess().getStatementsStmt_ListParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Stmt__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhile_StmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getWhile_StmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Stmt__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhile_StmtAccess().getStatementsStmt_ListParserRuleCall_3_0()); }
		ruleStmt_List
		{ after(grammarAccess.getWhile_StmtAccess().getStatementsStmt_ListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_Stmt__StatementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeat_StmtAccess().getStatementsStmt_ListParserRuleCall_1_0()); }
		ruleStmt_List
		{ after(grammarAccess.getRepeat_StmtAccess().getStatementsStmt_ListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_Stmt__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeat_StmtAccess().getExpressionExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getRepeat_StmtAccess().getExpressionExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_Expression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOr_ExpressionAccess().getOperatorOr_OperatorEnumRuleCall_1_1_0()); }
		ruleOr_Operator
		{ after(grammarAccess.getOr_ExpressionAccess().getOperatorOr_OperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or_Expression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOr_ExpressionAccess().getRightXor_ExprParserRuleCall_1_2_0()); }
		ruleXor_Expr
		{ after(grammarAccess.getOr_ExpressionAccess().getRightXor_ExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor_Expr__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXor_ExprAccess().getOperatorXor_OperatorEnumRuleCall_1_1_0()); }
		ruleXor_Operator
		{ after(grammarAccess.getXor_ExprAccess().getOperatorXor_OperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor_Expr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXor_ExprAccess().getRightAnd_ExprParserRuleCall_1_2_0()); }
		ruleAnd_Expr
		{ after(grammarAccess.getXor_ExprAccess().getRightAnd_ExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Expr__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_ExprAccess().getOperatorAnd_OperatorEnumRuleCall_1_1_0()); }
		ruleAnd_Operator
		{ after(grammarAccess.getAnd_ExprAccess().getOperatorAnd_OperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_Expr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_ExprAccess().getRightCompare_ExprParserRuleCall_1_2_0()); }
		ruleCompare_Expr
		{ after(grammarAccess.getAnd_ExprAccess().getRightCompare_ExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_Expr__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompare_ExprAccess().getOperatorCompare_OperatorEnumRuleCall_1_1_0()); }
		ruleCompare_Operator
		{ after(grammarAccess.getCompare_ExprAccess().getOperatorCompare_OperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare_Expr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompare_ExprAccess().getRightEqu_ExprParserRuleCall_1_2_0()); }
		ruleEqu_Expr
		{ after(grammarAccess.getCompare_ExprAccess().getRightEqu_ExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equ_Expr__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqu_ExprAccess().getOperatorEqu_OperatorEnumRuleCall_1_1_0()); }
		ruleEqu_Operator
		{ after(grammarAccess.getEqu_ExprAccess().getOperatorEqu_OperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equ_Expr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqu_ExprAccess().getRightAdd_ExprParserRuleCall_1_2_0()); }
		ruleAdd_Expr
		{ after(grammarAccess.getEqu_ExprAccess().getRightAdd_ExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_Expr__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdd_ExprAccess().getOperatorAdd_OperatorEnumRuleCall_1_1_0()); }
		ruleAdd_Operator
		{ after(grammarAccess.getAdd_ExprAccess().getOperatorAdd_OperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add_Expr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdd_ExprAccess().getRightTermParserRuleCall_1_2_0()); }
		ruleTerm
		{ after(grammarAccess.getAdd_ExprAccess().getRightTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getOperatorTerm_OperatorEnumRuleCall_1_1_0()); }
		ruleTerm_Operator
		{ after(grammarAccess.getTermAccess().getOperatorTerm_OperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getRightPower_ExprParserRuleCall_1_2_0()); }
		rulePower_Expr
		{ after(grammarAccess.getTermAccess().getRightPower_ExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power_Expr__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPower_ExprAccess().getOperatorPower_OperatorEnumRuleCall_1_1_0()); }
		rulePower_Operator
		{ after(grammarAccess.getPower_ExprAccess().getOperatorPower_OperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power_Expr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPower_ExprAccess().getRightUnary_ExprParserRuleCall_1_2_0()); }
		ruleUnary_Expr
		{ after(grammarAccess.getPower_ExprAccess().getRightUnary_ExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_Expr__OperatorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_ExprAccess().getOperatorUnary_OperatorEnumRuleCall_0_1_0()); }
		ruleUnary_Operator
		{ after(grammarAccess.getUnary_ExprAccess().getOperatorUnary_OperatorEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_Expr__ExpressionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_ExprAccess().getExpressionPrimary_ExprParserRuleCall_0_2_0()); }
		rulePrimary_Expr
		{ after(grammarAccess.getUnary_ExprAccess().getExpressionPrimary_ExprParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__FuncAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunc_CallAccess().getFuncAlternatives_0_0()); }
		(rule__Func_Call__FuncAlternatives_0_0)
		{ after(grammarAccess.getFunc_CallAccess().getFuncAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__ArgsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunc_CallAccess().getArgsParam_AssignParserRuleCall_2_0_0()); }
		ruleParam_Assign
		{ after(grammarAccess.getFunc_CallAccess().getArgsParam_AssignParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Func_Call__ArgsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunc_CallAccess().getArgsParam_AssignParserRuleCall_2_1_1_0()); }
		ruleParam_Assign
		{ after(grammarAccess.getFunc_CallAccess().getArgsParam_AssignParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_In__VarAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParam_Assign_InAccess().getVarIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParam_Assign_InAccess().getVarIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_In__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParam_Assign_InAccess().getExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getParam_Assign_InAccess().getExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_Out__NotAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParam_Assign_OutAccess().getNotNOTKeyword_0_0()); }
		(
			{ before(grammarAccess.getParam_Assign_OutAccess().getNotNOTKeyword_0_0()); }
			NOT
			{ after(grammarAccess.getParam_Assign_OutAccess().getNotNOTKeyword_0_0()); }
		)
		{ after(grammarAccess.getParam_Assign_OutAccess().getNotNOTKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_Out__VarAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParam_Assign_OutAccess().getVarIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParam_Assign_OutAccess().getVarIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param_Assign_Out__ExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParam_Assign_OutAccess().getExprVariableParserRuleCall_3_0()); }
		ruleVariable
		{ after(grammarAccess.getParam_Assign_OutAccess().getExprVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__PartAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getPartMultibit_Part_AccessParserRuleCall_1_0()); }
		ruleMultibit_Part_Access
		{ after(grammarAccess.getVariableAccess().getPartMultibit_Part_AccessParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__IndexAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_SubscriptAccess().getIndexExpressionParserRuleCall_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getVariable_SubscriptAccess().getIndexExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Subscript__IndexAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_SubscriptAccess().getIndexExpressionParserRuleCall_1_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getVariable_SubscriptAccess().getIndexExpressionParserRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Adapter__AdapterAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_AdapterAccess().getAdapterAdapterDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVariable_AdapterAccess().getAdapterAdapterDeclarationAdapter_NameParserRuleCall_1_0_1()); }
			ruleAdapter_Name
			{ after(grammarAccess.getVariable_AdapterAccess().getAdapterAdapterDeclarationAdapter_NameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVariable_AdapterAccess().getAdapterAdapterDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Adapter__VarAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_AdapterAccess().getVarVarDeclarationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getVariable_AdapterAccess().getVarVarDeclarationVariable_NameParserRuleCall_3_0_1()); }
			ruleVariable_Name
			{ after(grammarAccess.getVariable_AdapterAccess().getVarVarDeclarationVariable_NameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getVariable_AdapterAccess().getVarVarDeclarationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__DwordaccessAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getDwordaccessDKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getMultibit_Part_AccessAccess().getDwordaccessDKeyword_0_0_0()); }
			D
			{ after(grammarAccess.getMultibit_Part_AccessAccess().getDwordaccessDKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getDwordaccessDKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__IndexAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getIndexPartial_ValueParserRuleCall_0_1_0()); }
		rulePartial_Value
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getIndexPartial_ValueParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__WordaccessAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getWordaccessWKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getMultibit_Part_AccessAccess().getWordaccessWKeyword_1_0_0()); }
			W
			{ after(grammarAccess.getMultibit_Part_AccessAccess().getWordaccessWKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getWordaccessWKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__IndexAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getIndexPartial_ValueParserRuleCall_1_1_0()); }
		rulePartial_Value
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getIndexPartial_ValueParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__ByteaccessAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getByteaccessBKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getMultibit_Part_AccessAccess().getByteaccessBKeyword_2_0_0()); }
			B
			{ after(grammarAccess.getMultibit_Part_AccessAccess().getByteaccessBKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getByteaccessBKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__IndexAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getIndexPartial_ValueParserRuleCall_2_1_0()); }
		rulePartial_Value
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getIndexPartial_ValueParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__BitaccessAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getBitaccessXKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getMultibit_Part_AccessAccess().getBitaccessXKeyword_3_0_0()); }
			X
			{ after(grammarAccess.getMultibit_Part_AccessAccess().getBitaccessXKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getBitaccessXKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__IndexAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getIndexPartial_ValueParserRuleCall_3_1_0()); }
		rulePartial_Value
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getIndexPartial_ValueParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__BitaccessAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getBitaccessFullStopKeyword_4_0_0()); }
		(
			{ before(grammarAccess.getMultibit_Part_AccessAccess().getBitaccessFullStopKeyword_4_0_0()); }
			FullStop
			{ after(grammarAccess.getMultibit_Part_AccessAccess().getBitaccessFullStopKeyword_4_0_0()); }
		)
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getBitaccessFullStopKeyword_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multibit_Part_Access__IndexAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultibit_Part_AccessAccess().getIndexPartial_ValueParserRuleCall_4_1_0()); }
		rulePartial_Value
		{ after(grammarAccess.getMultibit_Part_AccessAccess().getIndexPartial_ValueParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_Primary__VarAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_PrimaryAccess().getVarVarDeclarationCrossReference_0()); }
		(
			{ before(grammarAccess.getVariable_PrimaryAccess().getVarVarDeclarationVariable_NameParserRuleCall_0_1()); }
			ruleVariable_Name
			{ after(grammarAccess.getVariable_PrimaryAccess().getVarVarDeclarationVariable_NameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVariable_PrimaryAccess().getVarVarDeclarationCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_Literal__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInt_LiteralAccess().getTypeInt_Type_NameEnumRuleCall_0_0_0()); }
		ruleInt_Type_Name
		{ after(grammarAccess.getInt_LiteralAccess().getTypeInt_Type_NameEnumRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_Literal__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInt_LiteralAccess().getValueAlternatives_1_0()); }
		(rule__Int_Literal__ValueAlternatives_1_0)
		{ after(grammarAccess.getInt_LiteralAccess().getValueAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Literal__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReal_LiteralAccess().getTypeReal_Type_NameEnumRuleCall_0_0_0()); }
		ruleReal_Type_Name
		{ after(grammarAccess.getReal_LiteralAccess().getTypeReal_Type_NameEnumRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_Literal__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReal_LiteralAccess().getValueReal_ValueParserRuleCall_1_0()); }
		ruleReal_Value
		{ after(grammarAccess.getReal_LiteralAccess().getValueReal_ValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_Literal__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBool_LiteralAccess().getTypeBool_Type_NameEnumRuleCall_0_0_0()); }
		ruleBool_Type_Name
		{ after(grammarAccess.getBool_LiteralAccess().getTypeBool_Type_NameEnumRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool_Literal__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBool_LiteralAccess().getValueBool_ValueParserRuleCall_1_0()); }
		ruleBool_Value
		{ after(grammarAccess.getBool_LiteralAccess().getValueBool_ValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Char_Literal__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChar_LiteralAccess().getTypeString_Type_NameEnumRuleCall_0_0_0()); }
		ruleString_Type_Name
		{ after(grammarAccess.getChar_LiteralAccess().getTypeString_Type_NameEnumRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Char_Literal__LengthAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChar_LiteralAccess().getLengthUNSIGNED_INTTerminalRuleCall_0_1_0()); }
		RULE_UNSIGNED_INT
		{ after(grammarAccess.getChar_LiteralAccess().getLengthUNSIGNED_INTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Char_Literal__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChar_LiteralAccess().getValueAlternatives_1_0()); }
		(rule__Char_Literal__ValueAlternatives_1_0)
		{ after(grammarAccess.getChar_LiteralAccess().getValueAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getTypeTime_Type_NameEnumRuleCall_0_0()); }
		ruleTime_Type_Name
		{ after(grammarAccess.getDurationAccess().getTypeTime_Type_NameEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__NegativeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getNegativeHyphenMinusKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getDurationAccess().getNegativeHyphenMinusKeyword_2_1_0()); }
			HyphenMinus
			{ after(grammarAccess.getDurationAccess().getNegativeHyphenMinusKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getDurationAccess().getNegativeHyphenMinusKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getValueDuration_ValueParserRuleCall_3_0()); }
		ruleDuration_Value
		{ after(grammarAccess.getDurationAccess().getValueDuration_ValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getValueDuration_ValueParserRuleCall_4_1_0()); }
		ruleDuration_Value
		{ after(grammarAccess.getDurationAccess().getValueDuration_ValueParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration_Value__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDuration_ValueAccess().getValueFix_PointParserRuleCall_0_0()); }
		ruleFix_Point
		{ after(grammarAccess.getDuration_ValueAccess().getValueFix_PointParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration_Value__UnitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDuration_ValueAccess().getUnitDuration_UnitEnumRuleCall_1_0()); }
		ruleDuration_Unit
		{ after(grammarAccess.getDuration_ValueAccess().getUnitDuration_UnitEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time_Of_Day__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTime_Of_DayAccess().getTypeTod_Type_NameEnumRuleCall_0_0()); }
		ruleTod_Type_Name
		{ after(grammarAccess.getTime_Of_DayAccess().getTypeTod_Type_NameEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time_Of_Day__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTime_Of_DayAccess().getValueDaytimeParserRuleCall_2_0()); }
		ruleDaytime
		{ after(grammarAccess.getTime_Of_DayAccess().getValueDaytimeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getTypeDate_Type_NameEnumRuleCall_0_0()); }
		ruleDate_Type_Name
		{ after(grammarAccess.getDateAccess().getTypeDate_Type_NameEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getValueDate_LiteralParserRuleCall_2_0()); }
		ruleDate_Literal
		{ after(grammarAccess.getDateAccess().getValueDate_LiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_And_Time__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDate_And_TimeAccess().getTypeDT_Type_NameEnumRuleCall_0_0()); }
		ruleDT_Type_Name
		{ after(grammarAccess.getDate_And_TimeAccess().getTypeDT_Type_NameEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date_And_Time__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDate_And_TimeAccess().getValueDate_And_Time_ValueParserRuleCall_2_0()); }
		ruleDate_And_Time_Value
		{ after(grammarAccess.getDate_And_TimeAccess().getValueDate_And_Time_ValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
